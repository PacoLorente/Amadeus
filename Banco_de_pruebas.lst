# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD F4 8A     	call Frame
  15  A104
  16  A104 3A 0A 8A     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 0C 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110 ED 4D        	reti
  23  A112
  24  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A112
  26  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
# file closed: Sprites_e_indices.asm
  27  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C
  95+ 856C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 856C
  97+ 856C C7 85        	defw Caja_1
  98+ 856E 0A 86        	defw Caja_2
  99+ 8570 4D 86        	defw Caja_3
 100+ 8572 90 86        	defw Caja_4
 101+ 8574 D3 86        	defw Caja_5
 102+ 8576 16 87        	defw Caja_6
 103+ 8578 59 87        	defw Caja_7
 104+ 857A 9C 87        	defw Caja_8
 105+ 857C DF 87        	defw Caja_9
 106+ 857E 22 88        	defw Caja_10
 107+ 8580              ;	...
 108+ 8580              ;	...
 109+ 8580              ;	+ entidades ...
 110+ 8580 00 00        	defw 0
 111+ 8582 00 00        	defw 0
 112+ 8584
 113+ 8584              ; ---------- ---------- ---------- ---------- ----------
 114+ 8584
 115+ 8584 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8586 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8588 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 858A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 858D
 120+ 858D 05           	db %00000101									; (Attr).
 121+ 858E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8590 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8592
 124+ 8592 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8594 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8596
 127+ 8596 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8598 04           	db 4 											; (Cuad_objeto).
 129+ 8599 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 859D
 131+ 859D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 859E
 133+ 859E 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A0 00 00        	defw 0											;	" " " " " " "
 135+ 85A2 00 00        	defw 0											;	" " " " " " "
 136+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A8
 138+ 85A8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85AA 00 00        	defw 0											;	" " " " " " "
 140+ 85AC 00 00        	defw 0											;	" " " " " " "
 141+ 85AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85B2
 143+ 85B2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85B4
 145+ 85B4 00           	db 0											; (Autoriza_movimiento).
 146+ 85B5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B9 00 00
 147+ 85BB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85BE
 149+ 85BE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85C0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85C1
 152+ 85C1 00           	db 0 											; (Columnas).
 153+ 85C2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85C4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85C7
 156+ 85C7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85C7
 158+ 85C7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85C9 00 00        	defw 0											; (Posicion_actual).
 160+ 85CB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85CD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85D0
 163+ 85D0 00           	db %00000000 									; (Attr).
 164+ 85D1
 165+ 85D1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85D3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85D5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85D7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85D9
 170+ 85D9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85DB 00           	db 0											; (Cuad_objeto).
 172+ 85DC
 173+ 85DC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 85E0
 175+ 85E0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 85E1
 177+ 85E1 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 85E3 00 00        	defw 0											;	" " " " " " "
 179+ 85E5 00 00        	defw 0											;	" " " " " " "
 180+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85EB
 182+ 85EB 00 00        	db 0,0											; Variables_de_pintado
 183+ 85ED 00 00        	defw 0											;	" " " " " " "
 184+ 85EF 00 00        	defw 0											;	" " " " " " "
 185+ 85F1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85F5
 187+ 85F5 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 85F7
 189+ 85F7 00           	db 0											; (Autoriza_movimiento).
 190+ 85F8 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 85FC 00 00
 191+ 85FE 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8601
 193+ 8601 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8603 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8604
 196+ 8604 00           	db 0 											; (Columnas).
 197+ 8605 00 00        	defw 0											; (Limite_horizontal).
 198+ 8607 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 860A
 200+ 860A              ; ---------- ---------- ---------- ---------- ----------
 201+ 860A
 202+ 860A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 860C 00 00        	defw 0											; (Posicion_actual).
 204+ 860E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8610 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8613
 207+ 8613 00           	db %00000000 									; (Attr).
 208+ 8614
 209+ 8614 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8616 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 861A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 861C
 214+ 861C 00 00        	defw 0											; (Posicion_inicio).
 215+ 861E 00           	db 0											; (Cuad_objeto).
 216+ 861F
 217+ 861F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8623
 219+ 8623 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8624
 221+ 8624 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8626 00 00        	defw 0											;	" " " " " " "
 223+ 8628 00 00        	defw 0											;	" " " " " " "
 224+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 862E
 226+ 862E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8630 00 00        	defw 0											;	" " " " " " "
 228+ 8632 00 00        	defw 0											;	" " " " " " "
 229+ 8634 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8638
 231+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 863A
 233+ 863A 00           	db 0											; (Autoriza_movimiento).
 234+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 863F 00 00
 235+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8644
 237+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8647
 240+ 8647 00           	db 0 											; (Columnas).
 241+ 8648 00 00        	defw 0											; (Limite_horizontal).
 242+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 864D
 244+ 864D              ; ---------- ---------- ---------- ---------- ----------
 245+ 864D
 246+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 864F 00 00        	defw 0											; (Posicion_actual).
 248+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8656
 251+ 8656 00           	db %00000000 									; (Attr).
 252+ 8657
 253+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 865F
 258+ 865F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8661 00           	db 0											; (Cuad_objeto).
 260+ 8662
 261+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8666
 263+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8667
 265+ 8667 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8669 00 00        	defw 0											;	" " " " " " "
 267+ 866B 00 00        	defw 0											;	" " " " " " "
 268+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8671
 270+ 8671 00 00        	db 0,0											; Variables_de_pintado
 271+ 8673 00 00        	defw 0											;	" " " " " " "
 272+ 8675 00 00        	defw 0											;	" " " " " " "
 273+ 8677 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 867B
 275+ 867B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 867D
 277+ 867D 00           	db 0											; (Autoriza_movimiento).
 278+ 867E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 8682 00 00
 279+ 8684 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 8687
 281+ 8687 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 8689 00           	db 0											; (Cola_de_desplazamiento).
 283+ 868A
 284+ 868A 00           	db 0 											; (Columnas).
 285+ 868B 00 00        	defw 0											; (Limite_horizontal).
 286+ 868D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 8690
 288+ 8690              ; ---------- ---------- ---------- ---------- ----------
 289+ 8690
 290+ 8690 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 8692 00 00        	defw 0											; (Posicion_actual).
 292+ 8694 00 00        	defw 0 											; (Puntero_objeto).
 293+ 8696 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 8699
 295+ 8699 00           	db %00000000 									; (Attr).
 296+ 869A
 297+ 869A 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 869C 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 869E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86A2
 302+ 86A2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86A4 00           	db 0											; (Cuad_objeto).
 304+ 86A5
 305+ 86A5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86A9
 307+ 86A9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86AA
 309+ 86AA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86AC 00 00        	defw 0											;	" " " " " " "
 311+ 86AE 00 00        	defw 0											;	" " " " " " "
 312+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86B4
 314+ 86B4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86B6 00 00        	defw 0											;	" " " " " " "
 316+ 86B8 00 00        	defw 0											;	" " " " " " "
 317+ 86BA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86BE
 319+ 86BE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86C0
 321+ 86C0 00           	db 0											; (Autoriza_movimiento).
 322+ 86C1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86C5 00 00
 323+ 86C7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86CA
 325+ 86CA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86CC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86CD
 328+ 86CD 00           	db 0 											; (Columnas).
 329+ 86CE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86D0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86D3
 332+ 86D3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86D3
 334+ 86D3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86D5 00 00        	defw 0											; (Posicion_actual).
 336+ 86D7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86D9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86DC
 339+ 86DC 00           	db %00000000 									; (Attr).
 340+ 86DD
 341+ 86DD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86DF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 86E1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 86E3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 86E5
 346+ 86E5 00 00        	defw 0											; (Posicion_inicio).
 347+ 86E7 00           	db 0											; (Cuad_objeto).
 348+ 86E8
 349+ 86E8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 86EC
 351+ 86EC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 86ED
 353+ 86ED 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 86EF 00 00        	defw 0											;	" " " " " " "
 355+ 86F1 00 00        	defw 0											;	" " " " " " "
 356+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86F7
 358+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 359+ 86F9 00 00        	defw 0											;	" " " " " " "
 360+ 86FB 00 00        	defw 0											;	" " " " " " "
 361+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8701
 363+ 8701 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8703
 365+ 8703 00           	db 0											; (Autoriza_movimiento).
 366+ 8704 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8708 00 00
 367+ 870A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 870D
 369+ 870D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 870F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8710
 372+ 8710 00           	db 0 											; (Columnas).
 373+ 8711 00 00        	defw 0											; (Limite_horizontal).
 374+ 8713 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8716
 376+ 8716              ; ---------- ---------- ---------- ---------- ----------
 377+ 8716
 378+ 8716 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8718 00 00        	defw 0											; (Posicion_actual).
 380+ 871A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 871C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 871F
 383+ 871F 00           	db %00000000 									; (Attr).
 384+ 8720
 385+ 8720 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8722 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8724 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8728
 390+ 8728 00 00        	defw 0											; (Posicion_inicio).
 391+ 872A 00           	db 0											; (Cuad_objeto).
 392+ 872B
 393+ 872B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 872F
 395+ 872F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8730
 397+ 8730 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8732 00 00        	defw 0											;	" " " " " " "
 399+ 8734 00 00        	defw 0											;	" " " " " " "
 400+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 873A
 402+ 873A 00 00        	db 0,0											; Variables_de_pintado
 403+ 873C 00 00        	defw 0											;	" " " " " " "
 404+ 873E 00 00        	defw 0											;	" " " " " " "
 405+ 8740 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8744
 407+ 8744 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8746
 409+ 8746 00           	db 0											; (Autoriza_movimiento).
 410+ 8747 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 874B 00 00
 411+ 874D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8750
 413+ 8750 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8752 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8753
 416+ 8753 00           	db 0 											; (Columnas).
 417+ 8754 00 00        	defw 0											; (Limite_horizontal).
 418+ 8756 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8759
 420+ 8759              ; ---------- ---------- ---------- ---------- ----------
 421+ 8759
 422+ 8759 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 875B 00 00        	defw 0											; (Posicion_actual).
 424+ 875D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 875F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8762
 427+ 8762 00           	db %00000000 									; (Attr).
 428+ 8763
 429+ 8763 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8765 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8769 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 876B
 434+ 876B 00 00        	defw 0											; (Posicion_inicio).
 435+ 876D 00           	db 0											; (Cuad_objeto).
 436+ 876E
 437+ 876E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8772
 439+ 8772 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8773
 441+ 8773 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8775 00 00        	defw 0											;	" " " " " " "
 443+ 8777 00 00        	defw 0											;	" " " " " " "
 444+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 877D
 446+ 877D 00 00        	db 0,0											; Variables_de_pintado
 447+ 877F 00 00        	defw 0											;	" " " " " " "
 448+ 8781 00 00        	defw 0											;	" " " " " " "
 449+ 8783 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 8787
 451+ 8787 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 8789
 453+ 8789 00           	db 0											; (Autoriza_movimiento).
 454+ 878A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 878E 00 00
 455+ 8790 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 8793
 457+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 459+ 8796
 460+ 8796 00           	db 0 											; (Columnas).
 461+ 8797 00 00        	defw 0											; (Limite_horizontal).
 462+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 879C
 464+ 879C              ; ---------- ---------- ---------- ---------- ----------
 465+ 879C
 466+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 879E 00 00        	defw 0											; (Posicion_actual).
 468+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87A5
 471+ 87A5 00           	db %00000000 									; (Attr).
 472+ 87A6
 473+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87AE
 478+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87B0 00           	db 0											; (Cuad_objeto).
 480+ 87B1
 481+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87B5
 483+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87B6
 485+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87B8 00 00        	defw 0											;	" " " " " " "
 487+ 87BA 00 00        	defw 0											;	" " " " " " "
 488+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87C0
 490+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87C2 00 00        	defw 0											;	" " " " " " "
 492+ 87C4 00 00        	defw 0											;	" " " " " " "
 493+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87CA
 495+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87CC
 497+ 87CC 00           	db 0											; (Autoriza_movimiento).
 498+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87D1 00 00
 499+ 87D3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87D6
 501+ 87D6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87D8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87D9
 504+ 87D9 00           	db 0 											; (Columnas).
 505+ 87DA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87DC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87DF
 508+ 87DF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87DF
 510+ 87DF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 87E1 00 00        	defw 0											; (Posicion_actual).
 512+ 87E3 00 00        	defw 0 											; (Puntero_objeto).
 513+ 87E5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 87E8
 515+ 87E8 00           	db %00000000 									; (Attr).
 516+ 87E9
 517+ 87E9 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 87EB 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 87ED 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 87EF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 87F1
 522+ 87F1 00 00        	defw 0											; (Posicion_inicio).
 523+ 87F3 00           	db 0											; (Cuad_objeto).
 524+ 87F4
 525+ 87F4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 87F8
 527+ 87F8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 87F9
 529+ 87F9 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 87FB 00 00        	defw 0											;	" " " " " " "
 531+ 87FD 00 00        	defw 0											;	" " " " " " "
 532+ 87FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8803
 534+ 8803 00 00        	db 0,0											; Variables_de_pintado
 535+ 8805 00 00        	defw 0											;	" " " " " " "
 536+ 8807 00 00        	defw 0											;	" " " " " " "
 537+ 8809 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 880D
 539+ 880D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 880F
 541+ 880F 00           	db 0											; (Autoriza_movimiento).
 542+ 8810 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8814 00 00
 543+ 8816 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8819
 545+ 8819 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 881B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 881C
 548+ 881C 00           	db 0 											; (Columnas).
 549+ 881D 00 00        	defw 0											; (Limite_horizontal).
 550+ 881F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8822
 552+ 8822              ; ---------- ---------- ---------- ---------- ----------
 553+ 8822
 554+ 8822 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8824 00 00        	defw 0											; (Posicion_actual).
 556+ 8826 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8828 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 882B
 559+ 882B 00           	db %00000000 									; (Attr).
 560+ 882C
 561+ 882C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 882E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8832 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8834
 566+ 8834 00 00        	defw 0											; (Posicion_inicio).
 567+ 8836 00           	db 0											; (Cuad_objeto).
 568+ 8837
 569+ 8837 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 883B
 571+ 883B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 883C
 573+ 883C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 883E 00 00        	defw 0											;	" " " " " " "
 575+ 8840 00 00        	defw 0											;	" " " " " " "
 576+ 8842 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8846
 578+ 8846 00 00        	db 0,0											; Variables_de_pintado
 579+ 8848 00 00        	defw 0											;	" " " " " " "
 580+ 884A 00 00        	defw 0											;	" " " " " " "
 581+ 884C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8850
 583+ 8850 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8852
 585+ 8852 00           	db 0											; (Autoriza_movimiento).
 586+ 8853 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8857 00 00
 587+ 8859 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 885C
 589+ 885C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 885E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 885F
 592+ 885F 00           	db 0 											; (Columnas).
 593+ 8860 00 00        	defw 0											; (Limite_horizontal).
 594+ 8862 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8865
 596+ 8865              ; -------------------------------------------------------------------------------------
 597+ 8865              ;
 598+ 8865              ;	20/05/23
 599+ 8865              ;
 600+ 8865              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8865              ;
 602+ 8865              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8865              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8865              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8865              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8865
 607+ 8865              Indice_de_entidades
 608+ 8865
 609+ 8865 6F 88        	defw Entidad_1
 610+ 8867 7F 88        	defw Entidad_2
 611+ 8869 8F 88        	defw Entidad_3
 612+ 886B 9F 88        	defw Entidad_4
 613+ 886D AF 88        	defw Entidad_5
 614+ 886F
 615+ 886F              ;	BADSAT, (Satélite malvado).
 616+ 886F
 617+ 886F 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 618+ 8871 04           	db %00000100									; (Attr).
 619+ 8872 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 620+ 8874 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 621+ 8876 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 622+ 8878 01           	db 1											; (Cuad_objeto).
 623+ 8879 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 624+ 887D DF 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 625+ 887F
 626+ 887F 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 627+ 8881 02           	db %00000010									; (Attr).
 628+ 8882 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 629+ 8884 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 630+ 8886 40 50        	defw $5040                                      ; (Posicion_inicio).
 631+ 8888 01           	db 1											; (Cuad_objeto).
 632+ 8889 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 633+ 888D DF 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 634+ 888F
 635+ 888F 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 636+ 8891 04           	db %00000100									; (Attr).
 637+ 8892 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 638+ 8894 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 639+ 8896 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 640+ 8898 01           	db 1											; (Cuad_objeto).
 641+ 8899 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 642+ 889D DF 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 643+ 889F
 644+ 889F 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 645+ 88A1 01           	db %00000001									; (Attr).
 646+ 88A2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 647+ 88A4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 648+ 88A6 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 649+ 88A8 01           	db 1											; (Cuad_objeto).
 650+ 88A9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 651+ 88AD DF 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 652+ 88AF
 653+ 88AF 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 654+ 88B1 01           	db %00000001									; (Attr).
 655+ 88B2 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 656+ 88B4 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 657+ 88B6 07 40        	defw $4007                                      ; (Posicion_inicio).
 658+ 88B8 01           	db 1											; (Cuad_objeto).
 659+ 88B9 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 660+ 88BD DF 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 661+ 88BF
# file closed: Cajas_y_disparos.asm
  28  88BF              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BF              ; 13/05/23
   2+ 88BF
   3+ 88BF              Indice_de_niveles
   4+ 88BF
   5+ 88BF CD 88        	defw Nivel_1
   6+ 88C1 CF 88        	defw Nivel_2
   7+ 88C3 DC 88        	defw Nivel_3
   8+ 88C5 EC 88        	defw Nivel_4
   9+ 88C7 FE 88        	defw Nivel_5
  10+ 88C9
  11+ 88C9              ;	...
  12+ 88C9              ;	...
  13+ 88C9              ;	+ Niveles ...
  14+ 88C9
  15+ 88C9 00 00        	defw 0
  16+ 88CB 00 00        	defw 0
  17+ 88CD
  18+ 88CD 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CE 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88CF 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88D0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D4 01 02
  22+ 88D6 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88DA 01 02
  23+ 88DC 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DD 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88E1 01
  25+ 88E2 03 01 01 01  	db 3,1,1,1,1
  25+ 88E6 01
  26+ 88E7 03 01 01 01  	db 3,1,1,1,1
  26+ 88EB 01
  27+ 88EC 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88ED 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88F1 01
  29+ 88F2 04 01 01 01  	db 4,1,1,1,1
  29+ 88F6 01
  30+ 88F7 04 01 01 01  	db 4,1,1,1,1
  30+ 88FB 01
  31+ 88FC 02 03        	db 2,3
  32+ 88FE 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FF 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8903 01
  34+ 8904 05 01 01 01  	db 5,1,1,1,1
  34+ 8908 01
  35+ 8909 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890D 01
  36+ 890E 05 01 01 01  	db 5,1,1,1,1
  36+ 8912 01
  37+ 8913
  38+ 8913              ;---------------------------------------------------------------------------------------------------------------
  39+ 8913              ;
  40+ 8913              ;   21/5/23
  41+ 8913              ;
  42+ 8913              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8913              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8913              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8913              ;	_en la caja DRAW correspondiente.
  46+ 8913              ;
  47+ 8913              ;	MODIFICA: HL,DE y A.
  48+ 8913              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8913
  50+ 8913              Inicializa_Punteros_de_nivel
  51+ 8913
  52+ 8913 21 BF 88     	ld hl,Indice_de_niveles
  53+ 8916 22 4F 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8919 CD 41 8D     	call Extrae_address
  55+ 891C 7E           	ld a,(hl)
  56+ 891D 32 15 8A     	ld (Numero_de_entidades),a
  57+ 8920 23           	inc hl
  58+ 8921 22 51 8A     	ld (Datos_de_nivel),hl
  59+ 8924 C9           	ret
  60+ 8925
  61+ 8925              ;---------------------------------------------------------------------------------------------------------------
  62+ 8925              ;
  63+ 8925              ;   13/5/23
  64+ 8925              ;
  65+ 8925              ;	Destruye A,BC,HL,DE
  66+ 8925
  67+ 8925              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8925              ;	_del juego.
  69+ 8925
  70+ 8925              Prepara_cajas
  71+ 8925
  72+ 8925              ; Preparamos los punteros de las cajas.
  73+ 8925
  74+ 8925 21 6C 85     	ld hl,Indice_de_cajas
  75+ 8928 CD 41 8D     	call Extrae_address
  76+ 892B CD 68 89     	call Avanza_caja
  77+ 892E
  78+ 892E CD AC 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8931
  80+ 8931 2A 51 8A     	ld hl,(Datos_de_nivel)
  81+ 8934
  82+ 8934              ; HL está en los datos del nivel correspondiente.
  83+ 8934              ; B actuará como contador de cajas.
  84+ 8934
  85+ 8934 C5           1 push bc
  86+ 8935
  87+ 8935 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8936 CD 59 89     	call PreparaBC
  89+ 8939
  90+ 8939 21 65 88     	ld hl,Indice_de_entidades
  91+ 893C CD 61 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893F 22 1B 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8942
  94+ 8942 CD 72 89     	call Datos_de_entidad_a_caja
  95+ 8945
  96+ 8945 2A 13 8A     	ld hl,(Indice_restore_caja)
  97+ 8948 CD 41 8D     	call Extrae_address
  98+ 894B CD 68 89     	call Avanza_caja
  99+ 894E
 100+ 894E 2A 51 8A     	ld hl,(Datos_de_nivel)
 101+ 8951 23           	inc hl
 102+ 8952 22 51 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8955
 104+ 8955 C1           	pop bc
 105+ 8956 10 DC        	djnz 1B
 106+ 8958 C9           	ret
 107+ 8959
 108+ 8959 CB 27        PreparaBC sla a
 109+ 895B D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895D 4F           	ld c,a
 111+ 895E 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8960 C9           	ret
 113+ 8961
 114+ 8961 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8962 ED 4A        	adc hl,bc
 116+ 8964 CD 41 8D     	call Extrae_address
 117+ 8967 C9           	ret
 118+ 8968
 119+ 8968 22 0F 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 896B 13           	inc de
 121+ 896C 13           	inc de
 122+ 896D EB           	ex de,hl
 123+ 896E 22 13 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8971 C9           	ret
 125+ 8972
 126+ 8972              Datos_de_entidad_a_caja
 127+ 8972
 128+ 8972              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8972
 130+ 8972
 131+ 8972 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8976
 133+ 8976 01 02 00     	ld bc,2
 134+ 8979 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 897B
 136+ 897B 01 07 00     	ld bc,7
 137+ 897E CD A6 89     	call Situa_DE
 138+ 8981
 139+ 8981 01 05 00     	ld bc,5
 140+ 8984 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8986
 142+ 8986 01 04 00     	ld bc,4
 143+ 8989 CD A6 89     	call Situa_DE
 144+ 898C
 145+ 898C 01 07 00     	ld bc,7
 146+ 898F ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8991
 148+ 8991 01 18 00     	ld bc,24
 149+ 8994 CD A6 89     	call Situa_DE
 150+ 8997
 151+ 8997 01 02 00     	ld bc,2
 152+ 899A ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 899C
 154+ 899C              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 899C              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 899C
 157+ 899C 01 0F 00     	ld bc,15									; *****
 158+ 899F CD A6 89     	call Situa_DE
 159+ 89A2
 160+ 89A2 3E 03        	ld a,3
 161+ 89A4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A5
 163+ 89A5 C9           	ret
 164+ 89A6
 165+ 89A6 EB           Situa_DE ex de,hl
 166+ 89A7 A7           	and a
 167+ 89A8 ED 4A        	adc hl,bc
 168+ 89AA EB           	ex de,hl
 169+ 89AB C9           	ret
 170+ 89AC
 171+ 89AC              ;---------------------------------------------------------------------------------------------------------------
 172+ 89AC              ;
 173+ 89AC              ;	21/5/23
 174+ 89AC              ;
 175+ 89AC              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89AC              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89AC              ;
 178+ 89AC              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89AC              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89AC              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89AC              ;
 182+ 89AC              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89AC              ;	MODIFICA: A y B.
 184+ 89AC              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89AC
 186+ 89AC              Admin_num_entidades
 187+ 89AC
 188+ 89AC              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89AC
 190+ 89AC 3A 15 8A     	ld a,(Numero_de_entidades)
 191+ 89AF A7           	and a
 192+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89B0              ;	jr z,$
 194+ 89B0              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89B0
 196+ 89B0 20 03        	jr nz,3F
 197+ 89B2
 198+ 89B2              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89B2
 200+ 89B2 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B5
 202+ 89B5
 203+ 89B5 3A 15 8A     3 ld a,(Numero_de_entidades)
 204+ 89B8 FE 0A        	cp 10
 205+ 89BA 38 08        	jr c,1F
 206+ 89BC
 207+ 89BC              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89BC              ; Actualizamos variables.
 209+ 89BC
 210+ 89BC 3E 0A        	ld a,10
 211+ 89BE 32 16 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89C1 47           	ld b,a
 213+ 89C2 18 04        	jr 2F
 214+ 89C4
 215+ 89C4              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C4              ; (Numero_de_entidades)="0".
 217+ 89C4
 218+ 89C4 32 16 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C7 47           	ld b,a
 220+ 89C8 C9           2 ret
# file closed: Niveles.asm
  29  89C9
  30  89C9              ; ******************************************************************************************************************************************************************************************
  31  89C9              ; Constantes.
  32  89C9              ; ******************************************************************************************************************************************************************************************
  33  89C9              ;
  34  89C9              ; 25/05/23
  35  89C9              ;
  36  89C9              ; Constantes generales.
  37  89C9              ;
  38  89C9
  39  89C9              Sprite_vacio equ $f000
  40  89C9              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89C9              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89C9              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89C9              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89C9
  45  89C9              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89C9              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89C9              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89C9              Album_de_fotos_disparos equ $7211						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89C9              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89C9              ;                               				        ; De momento situamos este almacén en $7060.
  51  89C9              Album_de_fotos_1 equ $7085
  52  89C9              Album_de_fotos_disparos_1 equ $7295						;Termina en 71fah (10 disparos).
  53  89C9              Album_de_fotos_2 equ $7109
  54  89C9              Album_de_fotos_disparos_2 equ $7319
  55  89C9              Album_de_fotos_3 equ $718d
  56  89C9              Album_de_fotos_disparos_3 equ $739d
  57  89C9
  58  89C9              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  59  89C9              ; 78h es el espacio necesario en (Album_de_fotos_disparos) para 10 disparos en pantalla.
  60  89C9
  61  89C9              ; ******************************************************************************************************************************************************************************************
  62  89C9              ; Variables.
  63  89C9              ; ******************************************************************************************************************************************************************************************
  64  89C9              ;
  65  89C9              ; 28/07/23
  66  89C9              ;
  67  89C9              ; Variables de DRAW. (Motor principal).
  68  89C9              ;
  69  89C9              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  70  89C9
  71  89C9 00           Filas db 0												; Filas. [DRAW]
  72  89CA 00           Columns db 0  											; Nº de columnas. [DRAW]
  73  89CB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  74  89CD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  75  89CF 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  76  89D0 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  77  89D1
  78  89D1              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  79  89D1
  80  89D1 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  81  89D2              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  82  89D2              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  83  89D2 00           Attr db 0												; Atributos de la entidad:
  84  89D3
  85  89D3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  86  89D3              ;
  87  89D3              ;	COLORES: 0 ..... NEGRO
  88  89D3              ;    		 1 ..... AZUL
  89  89D3              ; 			 2 ..... ROJO
  90  89D3              ;			 3 ..... MAGENTA
  91  89D3              ; 			 4 ..... VERDE
  92  89D3              ; 			 5 ..... CIAN
  93  89D3              ;			 6 ..... AMARILLO
  94  89D3              ; 			 7 ..... BLANCO
  95  89D3
  96  89D3 00 00        Indice_Sprite_der defw 0
  97  89D5 00 00        Indice_Sprite_izq defw 0
  98  89D7 00 00        Puntero_DESPLZ_der defw 0
  99  89D9 00 00        Puntero_DESPLZ_izq defw 0
 100  89DB
 101  89DB 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 102  89DD 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 103  89DE
 104  89DE              ; Variables de objeto. (Características).
 105  89DE
 106  89DE 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 107  89DF 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 108  89E0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 109  89E1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 110  89E2
 111  89E2 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 112  89E3              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 113  89E3              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 114  89E3
 115  89E3 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 116  89E5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 117  89E7 00 00        	defw 0
 118  89E9 00 00 00 00  	db 0,0,0,0
 119  89ED
 120  89ED 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 121  89EF 00 00        	defw 0
 122  89F1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 123  89F3 00 00 00 00  	db 0,0,0,0
 124  89F7
 125  89F7              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 126  89F7
 127  89F7 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 128  89F8              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 129  89F8              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 130  89F8              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 131  89F8              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 132  89F8              ;
 133  89F8              ; 														DESCRIPCIÖN:
 134  89F8              ;
 135  89F8              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 136  89F8              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 137  89F8              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 138  89F8              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 139  89F8              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 140  89F8              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 141  89F8              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 142  89F8              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 143  89F8              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 144  89F8              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 145  89F8              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 146  89F8              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 147  89F8              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 148  89F8              ;
 149  89F8              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 150  89F8              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 151  89F8              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 152  89F8
 153  89F8 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 154  89F9
 155  89F9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 156  89F9
 157  89F9 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 158  89FA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 159  89FC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 160  89FE 00 00        Puntero_indice_mov_bucle defw 0							;
 161  8A00              ;
 162  8A00              ;
 163  8A00 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 164  8A01              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 165  8A01              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 166  8A01 00           Incrementa_puntero_backup db 0
 167  8A02 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 168  8A03              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 169  8A03 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 170  8A04 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 171  8A05 00           Cola_de_desplazamiento db 0								; Este byte indica:
 172  8A06              ;
 173  8A06              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 174  8A06              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 175  8A06              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 176  8A06              ;
 177  8A06              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 178  8A06              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 179  8A06              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 180  8A06              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 181  8A06              ;
 182  8A06              ;														;	"$ff" ..... Bucle infinito de repetición.
 183  8A06              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 184  8A06              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 185  8A06
 186  8A06
 187  8A06              ; Variables de funcionamiento. [DRAW].
 188  8A06
 189  8A06 00           Columnas db 0
 190  8A07 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 191  8A09              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 192  8A09 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 193  8A0A
 194  8A0A              ; variables de control general.
 195  8A0A
 196  8A0A 00           Ctrl_2 db 0
 197  8A0B              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 198  8A0B              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 199  8A0B              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 200  8A0B              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 201  8A0B              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 202  8A0B              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 203  8A0B              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 204  8A0B              ;
 205  8A0B              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 206  8A0B              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 207  8A0B              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 208  8A0B              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 209  8A0B              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 210  8A0B
 211  8A0B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 212  8A0C
 213  8A0C              ;! 67 Bytes por entidad.
 214  8A0C
 215  8A0C              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 216  8A0C              ;					         		---------;      ;---------
 217  8A0C
 218  8A0C
 219  8A0C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 220  8A0C
 221  8A0C 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 222  8A0D
 223  8A0D              ;														DESCRIPCIÓN:
 224  8A0D              ;
 225  8A0D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 226  8A0D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 227  8A0D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 228  8A0D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 229  8A0D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 230  8A0D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 231  8A0D              ;														BIT 3, Recarga de nueva oleada.
 232  8A0D              ;														BIT 4, Recarga de nueva oleada.
 233  8A0D
 234  8A0D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 235  8A0F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 236  8A0F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 237  8A0F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 238  8A0F
 239  8A0F
 240  8A0F
 241  8A0F              ; Gestión de ENTIDADES y CAJAS.
 242  8A0F
 243  8A0F 00 00        Puntero_store_caja defw 0
 244  8A11 00 00        Puntero_restore_caja defw 0
 245  8A13 00 00        Indice_restore_caja defw 0
 246  8A15 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 247  8A16 00           Numero_parcial_de_entidades db 0
 248  8A17 00           Entidades_en_curso db 0									; ..... ..... .....
 249  8A18 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 250  8A19              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 251  8A19              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 252  8A19              ;														; _ (Numero_de_malotes)="0".
 253  8A19 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 254  8A1B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 255  8A1D              ;														; _ puntero (Indice_entidades).
 256  8A1D
 257  8A1D
 258  8A1D              ;---------------------------------------------------------------------------------------------------------------
 259  8A1D              ;
 260  8A1D              ; Sirven para PINTAR.
 261  8A1D
 262  8A1D 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 263  8A1F              ;															; _variable para almacenar lo posición del puntero_
 264  8A1F              ; 															; _de pila, SP.
 265  8A1F 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 266  8A21              ;															; La utiliza la rutina [Extrae_foto_registros].
 267  8A21 00 70        Stack_snapshot defw Album_de_fotos							; Puntero que indica la posición de memoria donde vamos a guardar_
 268  8A23              ;															; _el snapshot de los registros de la siguiente entidad.
 269  8A23              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 270  8A23 11 72        Stack_snapshot_disparos defw Album_de_fotos_disparos		; Puntero que indica la posición de memoria donde vamos a guardar_
 271  8A25              ;															; _el snapshot de los registros del siguiente disparo.
 272  8A25              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 273  8A25 85 70        Stack_snapshot_1 defw Album_de_fotos_1
 274  8A27 95 72        Stack_snapshot_disparos_1 defw Album_de_fotos_disparos_1
 275  8A29 09 71        Stack_snapshot_2 defw Album_de_fotos_2
 276  8A2B 19 73        Stack_snapshot_disparos_2 defw Album_de_fotos_disparos_2
 277  8A2D 8D 71        Stack_snapshot_3 defw Album_de_fotos_3
 278  8A2F 9D 73        Stack_snapshot_disparos_3 defw Album_de_fotos_disparos_3
 279  8A31
 280  8A31              ;---------------------------------------------------------------------------------------------------------------
 281  8A31
 282  8A31              ; Gestión de Disparos.
 283  8A31
 284  8A31 00           Numero_de_disparotes db 0
 285  8A32 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 286  8A34 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 287  8A36 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 288  8A37              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 289  8A37              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 290  8A37 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 291  8A39              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 292  8A39              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 293  8A39              ;														; _produzca colisión.
 294  8A39 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 295  8A3B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 296  8A3B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 297  8A3E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 298  8A3E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 299  8A41              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 300  8A41 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 301  8A43 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 302  8A44
 303  8A44              ;---------------------------------------------------------------------------------------------------------------
 304  8A44
 305  8A44              ; Relojes y temporizaciones.
 306  8A44
 307  8A44 00           Contador_de_frames db 0
 308  8A45 04           Clock_explosion db 4
 309  8A46 1E           Clock_Entidades_en_curso db 30
 310  8A47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 311  8A48              ;														; Repite la oleada de entidades.
 312  8A48 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 313  8A49 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 314  8A4A 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 315  8A4B
 316  8A4B 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 317  8A4C 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 318  8A4D 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 319  8A4E
 320  8A4E              ;---------------------------------------------------------------------------------------------------------------
 321  8A4E
 322  8A4E              ; Gestión de NIVELES.
 323  8A4E
 324  8A4E 00           Nivel db 0												; Nivel actual del juego.
 325  8A4F 00 00        Puntero_indice_NIVELES defw 0
 326  8A51 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 327  8A53              ; 														; _ que definen el NIVEL.
 328  8A53              ; Y todo comienza aquí .....
 329  8A53              ;
 330  8A53              ; Rutina principal *************************************************************************************************************************************************************************
 331  8A53              ;
 332  8A53              ;	14/11/22
 333  8A53
 334  8A53              START
 335  8A53
 336  8A53 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 337  8A56 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 338  8A58 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 339  8A5A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 340  8A5C F3           	DI
 341  8A5D
 342  8A5D 3E 07        	ld a,%00000111
 343  8A5F CD 1B 99     	call Cls
 344  8A62
 345  8A62              ;	call Pinta_marco
 346  8A62
 347  8A62 CD 13 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 348  8A65
 349  8A65 CD 1A 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 350  8A68
 351  8A68 CD 25 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 352  8A6B
 353  8A6B CD ED 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 354  8A6E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 355  8A6E CD CA 8D     	call Restore_entidad
 356  8A71
 357  8A71 21 16 8A     	ld hl,Numero_parcial_de_entidades
 358  8A74 46           	ld b,(hl)
 359  8A75 04           	inc b
 360  8A76 05           	dec b
 361  8A77 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 362  8A79
 363  8A79              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 364  8A79              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 365  8A79              ;	Pintamos el resto de entidades:
 366  8A79
 367  8A79              ;	INICIA ENTIDADES !!!!!
 368  8A79
 369  8A79 C5           1 push bc  												; Guardo el contador de entidades.
 370  8A7A
 371  8A7A CD E4 8A     	call Inicia_entidad
 372  8A7D
 373  8A7D C1           	pop bc
 374  8A7E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 375  8A80
 376  8A80              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 377  8A80              ; (Esto se dá cuando se inicia una nueva oleada).
 378  8A80
 379  8A80 3A 0C 8A     	ld a,(Ctrl_1)
 380  8A83 CB 5F        	bit 3,a
 381  8A85 20 18        	jr nz,5F											; Loop
 382  8A87
 383  8A87              ; 	INICIA AMADEUS !!!!!
 384  8A87
 385  8A87 CD F1 8D     3 call Restore_Amadeus
 386  8A8A CD 47 8D     	call Inicia_Puntero_objeto
 387  8A8D CD 61 93     	call Draw
 388  8A90 CD A0 7F     	call Guarda_foto_registros
 389  8A93 11 84 85     	ld de,Amadeus_db
 390  8A96 CD 03 8E     	call Store_Amadeus
 391  8A99
 392  8A99              ; 	INICIA DISPAROS !!!!!
 393  8A99
 394  8A99 CD 03 8D     	call Inicia_Puntero_Disparo_Entidades
 395  8A9C CD 0A 8D     	call Inicia_Puntero_Disparo_Amadeus
 396  8A9F
 397  8A9F              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 398  8A9F
 399  8A9F CD ED 8C     5 call Inicia_punteros_de_cajas
 400  8AA2 CD CA 8D     	call Restore_entidad
 401  8AA5
 402  8AA5 3A 0C 8A     	ld a,(Ctrl_1)
 403  8AA8 CB 5F        	bit 3,a
 404  8AAA 28 0A        	jr z,6F
 405  8AAC
 406  8AAC              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 407  8AAC
 408  8AAC 21 0C 8A     	ld hl,Ctrl_1
 409  8AAF CB 9E        	res 3,(hl)
 410  8AB1 CD 11 8D     	call Calcula_numero_de_malotes
 411  8AB4 18 07        	jr 7F
 412  8AB6
 413  8AB6              ; ----------
 414  8AB6
 415  8AB6 3A 16 8A     6 ld a,(Numero_parcial_de_entidades)
 416  8AB9 3C           	inc a
 417  8ABA 32 18 8A     	ld (Numero_de_malotes),a
 418  8ABD
 419  8ABD              ; Cambiamos el rsorte de "1" a "0". Esto evitará que se imprima el siguiente cuadro.
 420  8ABD
 421  8ABD AF           7 xor a
 422  8ABE              ; ------------------------------------
 423  8ABE
 424  8ABE FB           2 ei
 425  8ABF 28 FD        	jr z,2B
 426  8AC1
 427  8AC1              ; ------------------------------------
 428  8AC1
 429  8AC1 3A 44 8A     	ld a,(Contador_de_frames)
 430  8AC4 47           	ld b,a
 431  8AC5 3A 47 8A     	ld a,(Activa_recarga_cajas)
 432  8AC8 B8           	cp b
 433  8AC9 28 08        	jr z,8F
 434  8ACB
 435  8ACB 21 0C 8A     	ld hl,Ctrl_1
 436  8ACE CB E6        	set 4,(hl)
 437  8AD0 AF           	xor a
 438  8AD1 18 EB        	jr 2B
 439  8AD3
 440  8AD3 21 0C 8A     8 ld hl,Ctrl_1
 441  8AD6 CB A6        	res 4,(hl)
 442  8AD8 F3           	di
 443  8AD9
 444  8AD9 3A 44 8A     	ld a,(Contador_de_frames)
 445  8ADC
 446  8ADC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 447  8ADC              ;! _ IMPREDECIBLE !!!!
 448  8ADC
 449  8ADC C6 0A        	add 10
 450  8ADE 32 46 8A     	ld (Clock_Entidades_en_curso),a
 451  8AE1
 452  8AE1 C3 68 8A     	jp 4B
 453  8AE4
 454  8AE4              ; -----------------------------------------------------------------------------------
 455  8AE4
 456  8AE4 CD 47 8D     Inicia_entidad	call Inicia_Puntero_objeto
 457  8AE7 CD 2F 99     	call Recompone_posicion_inicio
 458  8AEA CD 61 93     	call Draw
 459  8AED CD A0 7F     	call Guarda_foto_registros
 460  8AF0 CD 8F 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 461  8AF3 C9           	ret
 462  8AF4
 463  8AF4              ; -----------------------------------------------------------------------------------
 464  8AF4
 465  8AF4              Frame
 466  8AF4
 467  8AF4              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 468  8AF4              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 469  8AF4
 470  8AF4              ; PINTAMOS.
 471  8AF4
 472  8AF4 3E 02            ld a,2
 473  8AF6 D3 FE            out ($fe),a
 474  8AF8 CD 6F 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 475  8AFB CD A8 96     	call Extrae_foto_disparos
 476  8AFE 3E 01            ld a,1
 477  8B00 D3 FE            out ($fe),a
 478  8B02
 479  8B02              ; ----------------------------------------------------------------------
 480  8B02
 481  8B02 CD B9 90     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 482  8B05 21 00 70     	ld hl,Album_de_fotos
 483  8B08 22 21 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 484  8B0B              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 485  8B0B              ; RELOJES.
 486  8B0B
 487  8B0B 21 44 8A     	ld hl,Contador_de_frames
 488  8B0E 34           	inc (hl)											; 0 - 255
 489  8B0F
 490  8B0F              ; ----------------------------------------------------------------------
 491  8B0F
 492  8B0F 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 493  8B12 47           	ld b,a
 494  8B13 3A 44 8A     	ld a,(Contador_de_frames)
 495  8B16 B8           	cp b
 496  8B17 20 18        	jr nz,13F
 497  8B19
 498  8B19 3A 16 8A     	ld a,(Numero_parcial_de_entidades)
 499  8B1C 47           	ld b,a
 500  8B1D 3A 17 8A     	ld a,(Entidades_en_curso)
 501  8B20 B8           	cp b
 502  8B21 28 0E        	jr z,13F
 503  8B23 30 0C        	jr nc,13F
 504  8B25
 505  8B25 3C           	inc a
 506  8B26 32 17 8A     	ld (Entidades_en_curso),a
 507  8B29
 508  8B29 3A 46 8A     	ld a,(Clock_Entidades_en_curso)
 509  8B2C
 510  8B2C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 511  8B2C              ;! _ IMPREDECIBLE !!!!
 512  8B2C
 513  8B2C C6 64        	add 100
 514  8B2E 32 46 8A     	ld (Clock_Entidades_en_curso),a
 515  8B31
 516  8B31              ; Habilita disparos.
 517  8B31
 518  8B31 21 48 8A     13 ld hl,Disparo_Amadeus
 519  8B34 11 4A 8A     	ld de,CLOCK_repone_disparo_Amadeus
 520  8B37 CD E0 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 521  8B3A
 522  8B3A 21 4B 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 523  8B3D 11 4D 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 524  8B40 CD E0 9F     	call Habilita_disparos
 525  8B43
 526  8B43              ; COLISIONES.
 527  8B43
 528  8B43 CD 43 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 529  8B46
 530  8B46              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 531  8B46              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 532  8B46              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 533  8B46
 534  8B46 AF           	xor a
 535  8B47 32 36 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 536  8B4A
 537  8B4A CD ED 8C     	call Inicia_punteros_de_cajas
 538  8B4D CD CA 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 539  8B50              ; 														; _ en DRAW.
 540  8B50 3A C9 89     	ld a,(Filas)
 541  8B53 A7           	and a
 542  8B54 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 543  8B56 CD DC 8D     	call Incrementa_punteros_de_cajas
 544  8B59 18 F2        	jr 12B
 545  8B5B
 546  8B5B              ; ---------------------------------------------------------------------------------------
 547  8B5B
 548  8B5B 3A 16 8A     10 ld a,(Numero_parcial_de_entidades)
 549  8B5E 47               ld b,a
 550  8B5F A7           	and a
 551  8B60 20 14        	jr nz,2F
 552  8B62
 553  8B62 21 0C 8A     	ld hl,Ctrl_1
 554  8B65 CB 66        	bit 4,(hl)
 555  8B67 C2 F3 8B     	jp nz,4F
 556  8B6A
 557  8B6A 21 0C 8A     	ld hl,Ctrl_1
 558  8B6D CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 559  8B6F
 560  8B6F 3A 44 8A     	ld a,(Contador_de_frames)
 561  8B72 3C           	inc a
 562  8B73 32 47 8A     	ld (Activa_recarga_cajas),a
 563  8B76
 564  8B76              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 565  8B76
 566  8B76 3A 17 8A     2 ld a,(Entidades_en_curso)
 567  8B79 A7           	and a
 568  8B7A CA F3 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 569  8B7D 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 570  8B7E
 571  8B7E              ; Código que ejecutamos con cada entidad:
 572  8B7E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 573  8B7E
 574  8B7E C5           15 push bc 												; Nº de entidades en curso.
 575  8B7F
 576  8B7F              ; Impacto ???
 577  8B7F
 578  8B7F 3A E2 89     33 ld a,(Impacto)
 579  8B82 A7           	and a
 580  8B83 28 2D        	jr z,8F
 581  8B85
 582  8B85              ; Hay Impacto en esta entidad.
 583  8B85
 584  8B85 21 45 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 585  8B88 35           	dec (hl)
 586  8B89 20 62        	jr nz,6F
 587  8B8B
 588  8B8B              ;! Velocidad de la animación de la explosión.
 589  8B8B
 590  8B8B 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 591  8B8D              ;														; _,(velocidad de la explosión).
 592  8B8D CD A4 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 593  8B90
 594  8B90              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 595  8B90
 596  8B90 3A 0A 8A     	ld a,(Ctrl_2)
 597  8B93 CB 4F        	bit 1,a
 598  8B95 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 599  8B97
 600  8B97              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 601  8B97
 602  8B97 3A D1 89     	ld a,(CTRL_DESPLZ)
 603  8B9A A7           	and a
 604  8B9B 20 08        	jr nz,21F
 605  8B9D
 606  8B9D 21 84 84     	ld hl,Indice_Explosion_2x2-2
 607  8BA0 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 608  8BA3 18 06        	jr 22F
 609  8BA5
 610  8BA5 21 EE 83     21 ld hl,Indice_Explosion_2x3-2
 611  8BA8 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 612  8BAB
 613  8BAB 21 0A 8A     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 614  8BAE CB CE        	set 1,(hl)
 615  8BB0 18 22        	jr 7F
 616  8BB2
 617  8BB2              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 618  8BB2              ; _con las coordenadas de la entidad almacenada en DRAW.
 619  8BB2
 620  8BB2 3A 0C 8A     8 ld a,(Ctrl_1)
 621  8BB5 CB 57        	bit 2,a
 622  8BB7 28 1B        	jr z,7F
 623  8BB9
 624  8BB9 2A 39 8A     	ld hl,(Coordenadas_disparo_certero)
 625  8BBC EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 626  8BBD              ;														; E contiene la coordenada_X del disparo.
 627  8BBD 2A CF 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 628  8BC0              ;														; H FILA, (Coordenada_y de la entidad).
 629  8BC0 A7           	and a
 630  8BC1 ED 52        	sbc hl,de
 631  8BC3
 632  8BC3 CD 7A 92     	call Determina_resultado_comparativa
 633  8BC6
 634  8BC6 78           	ld a,b
 635  8BC7 A7           	and a
 636  8BC8 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 637  8BCA
 638  8BCA              ; ----- ----- -----
 639  8BCA
 640  8BCA 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 641  8BCC 32 E2 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 642  8BCF
 643  8BCF 21 0C 8A     	ld hl,Ctrl_1
 644  8BD2 CB 96        	res 2,(hl)
 645  8BD4
 646  8BD4 CD 26 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 647  8BD7
 648  8BD7 3A F7 89     	ld a,(Ctrl_0)
 649  8BDA CB 67        	bit 4,a
 650  8BDC 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 651  8BDE
 652  8BDE              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 653  8BDE              ; [[[
 654  8BDE CD 65 8E     	call Detecta_disparo_entidad
 655  8BE1              ; ]]]
 656  8BE1 CD B4 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 657  8BE4
 658  8BE4 21 F7 89     	ld hl,Ctrl_0
 659  8BE7 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 660  8BE9 AF           	xor a
 661  8BEA 32 F8 89     	ld (Obj_dibujado),a
 662  8BED
 663  8BED CD 8F 8D     6 call Store_Restore_cajas
 664  8BF0
 665  8BF0 C1           	pop bc
 666  8BF1 10 8B        	djnz 15B
 667  8BF3
 668  8BF3              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 669  8BF3
 670  8BF3              ;	ld a,2
 671  8BF3              ;	ld (Limitador_de_entidades_x_frame),a
 672  8BF3
 673  8BF3              ; ------------------------------------
 674  8BF3              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 675  8BF3              ; Hemos gestionado todas las unidades.
 676  8BF3              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 677  8BF3
 678  8BF3              ;	ld hl,Ctrl_1
 679  8BF3              ;	res 2,(hl)
 680  8BF3
 681  8BF3              ; ------------------------------------
 682  8BF3
 683  8BF3              ; Tras la gestión de las entidades, ... AMADEUS.
 684  8BF3
 685  8BF3 CD F1 8D     4 call Restore_Amadeus
 686  8BF6
 687  8BF6 3A E2 89     	ld a,(Impacto)
 688  8BF9 A7           	and a
 689  8BFA 20 FE        	jr nz,$
 690  8BFC
 691  8BFC CD 85 8C     	call Mov_Amadeus
 692  8BFF
 693  8BFF 3A F7 89     	ld a,(Ctrl_0)
 694  8C02 CB 67        	bit 4,a
 695  8C04 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 696  8C06
 697  8C06 CD B4 8C     	call Guarda_foto_entidad_a_pintar
 698  8C09
 699  8C09 21 F7 89     3 ld hl,Ctrl_0
 700  8C0C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 701  8C0E AF           	xor a
 702  8C0F 32 F8 89     	ld (Obj_dibujado),a
 703  8C12
 704  8C12 11 84 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 705  8C15 CD 03 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 706  8C18
 707  8C18 CD D7 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 708  8C1B
 709  8C1B              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 710  8C1B
 711  8C1B CD 29 8D     	call Calcula_numero_de_disparotes
 712  8C1E CD 11 8D     9 call Calcula_numero_de_malotes
 713  8C21
 714  8C21 3E 04        	ld a,4
 715  8C23 D3 FE        	out ($fe),a
 716  8C25
 717  8C25 C9           	ret
 718  8C26
 719  8C26              ; --------------------------------------------------------------------------------------------------------------
 720  8C26              ;
 721  8C26              ;	27/05/23
 722  8C26
 723  8C26              Mov_obj
 724  8C26
 725  8C26              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 726  8C26
 727  8C26 3A 0A 8A     	ld a,(Ctrl_2)
 728  8C29 CB 4F        	bit 1,a
 729  8C2B 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 730  8C2D
 731  8C2D              ; Explosión:
 732  8C2D
 733  8C2D 3A 0B 8A     	ld a,(Frames_explosion)
 734  8C30 A7           	and a
 735  8C31 20 11        	jr nz,4F
 736  8C33
 737  8C33              ; Una alimaña menos!!!!!!!!!1
 738  8C33
 739  8C33 CD 0C 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 740  8C36 21 16 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 741  8C39 35           	dec (hl)
 742  8C3A 21 17 8A     	ld hl,Entidades_en_curso
 743  8C3D 35           	dec (hl)
 744  8C3E 21 15 8A     	ld hl,Numero_de_entidades
 745  8C41 35           	dec (hl)
 746  8C42 18 40        	jr 3F
 747  8C44
 748  8C44              ; -----
 749  8C44
 750  8C44              ;	`Movemos´ la explosión.
 751  8C44
 752  8C44 2A D7 89     4 ld hl,(Puntero_DESPLZ_der)
 753  8C47 23           	inc hl
 754  8C48 23           	inc hl
 755  8C49 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 756  8C4C CD 41 8D     	call Extrae_address
 757  8C4F 22 CD 89     	ld (Puntero_objeto),hl
 758  8C52
 759  8C52 21 0B 8A     	ld hl,Frames_explosion
 760  8C55 35           	dec (hl)
 761  8C56
 762  8C56 CD A4 8C     	call Guarda_foto_entidad_a_borrar
 763  8C59 18 29        	jr 3F
 764  8C5B
 765  8C5B AF           2 xor a
 766  8C5C 32 F8 89     	ld (Obj_dibujado),a
 767  8C5F 32 F7 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 768  8C62              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 769  8C62              ; 														; _de la entidad.
 770  8C62 CD BE 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 771  8C65              ;														; Obj_dibujado="0".
 772  8C65              ; Movemos Entidades malignas.
 773  8C65
 774  8C65              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 775  8C65              ;	and a 												; _a movernos. (Limitador_de_entidades).
 776  8C65              ;	ret z
 777  8C65
 778  8C65 CD 7B 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 779  8C68
 780  8C68 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 781  8C6B CB 67        	bit 4,a
 782  8C6D C8           	ret z
 783  8C6E
 784  8C6E              ; Ha habido desplazamiento de la entidad maligna.
 785  8C6E              ; Ha llegado a zona de AMADEUS ???
 786  8C6E
 787  8C6E 3A D0 89     	ld a,(Coordenada_y)
 788  8C71 FE 14        	cp $14
 789  8C73 D4 08 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 790  8C76              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 791  8C76              ; ---------
 792  8C76
 793  8C76 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 794  8C78 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 795  8C7B CD BE 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 796  8C7E CD D5 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 797  8C81 CD A4 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 798  8C84 C9           3 ret													; _de la misma.
 799  8C85
 800  8C85              ; --------------------------------------------------------------------------------------------------------------
 801  8C85              ;
 802  8C85              ;	29/1/23
 803  8C85
 804  8C85              Mov_Amadeus
 805  8C85
 806  8C85 AF           	xor a
 807  8C86 32 F8 89     	ld (Obj_dibujado),a
 808  8C89 CD BE 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 809  8C8C              ;														; Obj_dibujado="0".
 810  8C8C              ; Movemos Amadeus.
 811  8C8C
 812  8C8C CD 2E 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 813  8C8F 3A F7 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 814  8C92 CB 67        	bit 4,a
 815  8C94 C8           	ret z
 816  8C95
 817  8C95              ; ---------
 818  8C95
 819  8C95 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 820  8C97 32 F8 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 821  8C9A CD BE 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 822  8C9D CD D5 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 823  8CA0 CD A4 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 824  8CA3 C9           	ret													; _de la nave.
 825  8CA4
 826  8CA4              ; --------------------------------------------------------------------------------------------------------------
 827  8CA4              ;
 828  8CA4              ;	31/01/23
 829  8CA4              ;
 830  8CA4              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 831  8CA4
 832  8CA4              Guarda_foto_entidad_a_borrar
 833  8CA4
 834  8CA4 CD 45 96     	call Prepara_draw
 835  8CA7 CD 75 95     	call calcula_CColumnass
 836  8CAA CD AC 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 837  8CAD CD 0B 96     	call Define_rutina_de_impresion
 838  8CB0 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 839  8CB3 C9           	ret
 840  8CB4
 841  8CB4              ; --------------------------------------------------------------------------------------------------------------
 842  8CB4              ;
 843  8CB4              ;	31/01/23
 844  8CB4              ;
 845  8CB4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 846  8CB4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 847  8CB4
 848  8CB4              Guarda_foto_entidad_a_pintar
 849  8CB4
 850  8CB4 CD E1 8C     	call Repone_pintar
 851  8CB7 CD 61 93     	call Draw
 852  8CBA CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 853  8CBD C9           	ret
 854  8CBE
 855  8CBE              ; --------------------------------------------------------------------------------------------------------------
 856  8CBE              ;
 857  8CBE              ;
 858  8CBE
 859  8CBE 21 C9 89     Prepara_var_pintado_borrado	ld hl,Filas
 860  8CC1 3A F8 89     	ld a,(Obj_dibujado)
 861  8CC4 A7           	and a
 862  8CC5 28 05        	jr z,1F
 863  8CC7 11 ED 89     	ld de,Variables_de_pintado
 864  8CCA 18 03        	jr 2F
 865  8CCC 11 E3 89     1 ld de,Variables_de_borrado
 866  8CCF 01 08 00     2 ld bc,8
 867  8CD2 ED B0        	ldir
 868  8CD4 C9           	ret
 869  8CD5
 870  8CD5              ; --------------------------------------------------------------------------------------------------------------
 871  8CD5
 872  8CD5 21 E3 89     Repone_borrar ld hl,Variables_de_borrado
 873  8CD8 11 C9 89     	ld de,Filas
 874  8CDB 01 08 00     	ld bc,8
 875  8CDE ED B0        	ldir
 876  8CE0 C9           	ret
 877  8CE1
 878  8CE1 21 ED 89     Repone_pintar ld hl,Variables_de_pintado
 879  8CE4 11 C9 89     	ld de,Filas
 880  8CE7 01 08 00     	ld bc,8
 881  8CEA ED B0        	ldir
 882  8CEC C9           	ret
 883  8CED
 884  8CED              ; *************************************************************************************************************************************************************
 885  8CED              ;
 886  8CED              ; 8/1/23
 887  8CED              ;
 888  8CED              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 889  8CED              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 890  8CED              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 891  8CED
 892  8CED              ; Destruye HL y DE !!!!!
 893  8CED
 894  8CED              Inicia_punteros_de_cajas
 895  8CED
 896  8CED 21 6C 85     	ld hl,Indice_de_cajas
 897  8CF0 CD 41 8D         call Extrae_address
 898  8CF3 22 0F 8A         ld (Puntero_store_caja),hl
 899  8CF6 21 6E 85     	ld hl,Indice_de_cajas+2
 900  8CF9 22 13 8A     	ld (Indice_restore_caja),hl
 901  8CFC CD 41 8D     	call Extrae_address
 902  8CFF 22 11 8A     	ld (Puntero_restore_caja),hl
 903  8D02 C9               ret
 904  8D03
 905  8D03              ; *************************************************************************************************************************************************************
 906  8D03              ;
 907  8D03              ; 8/1/23
 908  8D03              ;
 909  8D03              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 910  8D03
 911  8D03 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 912  8D06 22 32 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 913  8D09 C9           	ret
 914  8D0A 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 915  8D0D 22 34 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 916  8D10 C9           	ret
 917  8D11
 918  8D11              ; -------------------------------------------------------------------------------------------------------------
 919  8D11              ;
 920  8D11              ; 28/2/23
 921  8D11              ;
 922  8D11
 923  8D11              Calcula_numero_de_malotes
 924  8D11
 925  8D11 21 00 70     	ld hl,Album_de_fotos
 926  8D14 EB           	ex de,hl
 927  8D15 2A 21 8A     	ld hl,(Stack_snapshot)
 928  8D18
 929  8D18 06 00        	ld b,0
 930  8D1A 7D           	ld a,l
 931  8D1B 93           	sub e
 932  8D1C 28 07        	jr z,1F
 933  8D1E
 934  8D1E              ; Nº de malotes no es "0".
 935  8D1E
 936  8D1E D6 06        2 sub 6
 937  8D20 04           	inc b
 938  8D21 A7           	and a
 939  8D22 20 FA        	jr nz,2B
 940  8D24 78           	ld a,b
 941  8D25
 942  8D25 32 18 8A     1 ld (Numero_de_malotes),a
 943  8D28 C9           	ret
 944  8D29
 945  8D29              ; -------------------------------------------------------------------------------------------------------------
 946  8D29              ;
 947  8D29              ; 28/2/23
 948  8D29              ;
 949  8D29
 950  8D29              Calcula_numero_de_disparotes
 951  8D29
 952  8D29 21 11 72     	ld hl,Album_de_fotos_disparos
 953  8D2C EB           	ex de,hl
 954  8D2D 2A 23 8A     	ld hl,(Stack_snapshot_disparos)
 955  8D30
 956  8D30 06 00        	ld b,0
 957  8D32 7D           	ld a,l
 958  8D33 93           	sub e
 959  8D34 28 07        	jr z,1F
 960  8D36
 961  8D36              ; Nº de malotes no es "0".
 962  8D36
 963  8D36 D6 06        2 sub 6
 964  8D38 04           	inc b
 965  8D39 A7           	and a
 966  8D3A 20 FA        	jr nz,2B
 967  8D3C 78           	ld a,b
 968  8D3D
 969  8D3D 32 31 8A     1 ld (Numero_de_disparotes),a
 970  8D40 C9           	ret
 971  8D41              ; *************************************************************************************************************************************************************
 972  8D41              ;
 973  8D41              ; 20/10/22
 974  8D41              ;
 975  8D41              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 976  8D41              ;
 977  8D41              ; Destruye el puntero y DE !!!!!
 978  8D41
 979  8D41 5E           Extrae_address ld e,(hl)
 980  8D42 23           	inc hl
 981  8D43 56           	ld d,(hl)
 982  8D44 2B           	dec hl
 983  8D45 EB           	ex de,hl
 984  8D46 C9           	ret
 985  8D47
 986  8D47              ; *************************************************************************************************************************************************************
 987  8D47              ;
 988  8D47              ;	7/2/23
 989  8D47              ;
 990  8D47              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 991  8D47              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 992  8D47              ;
 993  8D47              ;   Destruye HL y BC !!!!!,
 994  8D47              ;
 995  8D47              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 996  8D47              ;					"0" ..... Izquierda.
 997  8D47
 998  8D47              Inicia_Puntero_objeto
 999  8D47
1000  8D47 3A DD 89     	ld a,(Cuad_objeto)
1001  8D4A E6 01        	and 1
1002  8D4C F5           	push af
1003  8D4D CC 6B 8D     	call z,Inicia_puntero_objeto_izq
1004  8D50 F1           	pop af
1005  8D51 28 2B        	jr z,1F
1006  8D53 CD 58 8D     	call Inicia_puntero_objeto_der
1007  8D56 18 26        	jr 1F
1008  8D58
1009  8D58              ; Arrancamos desde la parte izquierda de la pantalla.
1010  8D58              ; Iniciamos (Indice_Sprite_der).
1011  8D58
1012  8D58 2A D3 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1013  8D5B 22 D7 89     	ld (Puntero_DESPLZ_der),hl
1014  8D5E CD 41 8D     	call Extrae_address
1015  8D61 22 CD 89     	ld (Puntero_objeto),hl
1016  8D64
1017  8D64 2A D5 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1018  8D67 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
1019  8D6A C9           	ret
1020  8D6B
1021  8D6B              ; Arrancamos desde la parte derecha de la pantalla.
1022  8D6B              ; Iniciamos (Indice_Sprite_izq).
1023  8D6B
1024  8D6B 2A D5 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1025  8D6E 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
1026  8D71 CD 41 8D     	call Extrae_address
1027  8D74 22 CD 89     	ld (Puntero_objeto),hl
1028  8D77
1029  8D77 2A D3 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1030  8D7A 22 D7 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1031  8D7D C9           	ret
1032  8D7E
1033  8D7E              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1034  8D7E
1035  8D7E 21 40 83     1 ld hl,Amadeus
1036  8D81 ED 4B CD 89  	ld bc,(Puntero_objeto)
1037  8D85 B7 ED 42     	sub hl,bc
1038  8D88 C0           	ret nz
1039  8D89 21 F7 89     	ld hl,Ctrl_0
1040  8D8C CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1041  8D8E C9           	ret 												; _de nuestra nave en los extremos.
1042  8D8F
1043  8D8F              ; *************************************************************************************************************************************************************
1044  8D8F              ;
1045  8D8F              ;	14/5/23
1046  8D8F              ;
1047  8D8F              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1048  8D8F              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1049  8D8F
1050  8D8F              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1051  8D8F              ;	_de la 2ª y 3ª entidad respectivamente.
1052  8D8F
1053  8D8F              Store_Restore_cajas
1054  8D8F
1055  8D8F E5           	push hl
1056  8D90 D5           	push de
1057  8D91 C5            	push bc
1058  8D92
1059  8D92              ;	STORE !!!!!
1060  8D92              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1061  8D92
1062  8D92 21 C9 89     	ld hl,Filas
1063  8D95 ED 5B 0F 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1064  8D99 01 43 00     	ld bc,67
1065  8D9C ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1066  8D9E
1067  8D9E              ; 	Entidad_sospechosa. 20/4/23
1068  8D9E
1069  8D9E 3A E2 89     	ld a,(Impacto)
1070  8DA1 A7           	and a
1071  8DA2 28 0C        	jr z,1F
1072  8DA4
1073  8DA4 2A 0F 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1074  8DA7 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1075  8DAA A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1076  8DAB ED 4A        	adc hl,bc 											; _ "0" más adelante.
1077  8DAD 22 37 8A     	ld (Entidad_sospechosa_de_colision),hl
1078  8DB0
1079  8DB0              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1080  8DB0
1081  8DB0 2A 11 8A     1 ld hl,(Puntero_restore_caja)
1082  8DB3 7E           	ld a,(hl)
1083  8DB4 A7           	and a
1084  8DB5 F5           	push af
1085  8DB6 28 08        	jr z,2F
1086  8DB8
1087  8DB8 11 C9 89     	ld de,Filas
1088  8DBB 01 43 00     	ld bc,67
1089  8DBE ED B0        	ldir
1090  8DC0
1091  8DC0 CD DC 8D     2 call Incrementa_punteros_de_cajas
1092  8DC3 F1           	pop af
1093  8DC4 28 EA        	jr z,1B
1094  8DC6
1095  8DC6 C1           	pop bc
1096  8DC7 D1           	pop de
1097  8DC8 E1           	pop hl
1098  8DC9
1099  8DC9 C9           	ret
1100  8DCA
1101  8DCA              ; **************************************************************************************************
1102  8DCA              ;
1103  8DCA              ;	12/05/23
1104  8DCA              ;
1105  8DCA              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1106  8DCA
1107  8DCA E5           Restore_entidad push hl
1108  8DCB D5           	push de
1109  8DCC C5            	push bc
1110  8DCD
1111  8DCD 2A 0F 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1112  8DD0 11 C9 89     	ld de,Filas
1113  8DD3 01 43 00     	ld bc,67
1114  8DD6 ED B0        	ldir
1115  8DD8
1116  8DD8 C1           	pop bc
1117  8DD9 D1           	pop de
1118  8DDA E1           	pop hl
1119  8DDB C9           	ret
1120  8DDC
1121  8DDC
1122  8DDC              ; **************************************************************************************************
1123  8DDC              ;
1124  8DDC              ;	08/05/23
1125  8DDC              ;
1126  8DDC              ;	Incrementamos los dos punteros de entidades. (+1).
1127  8DDC
1128  8DDC 2A 11 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1129  8DDF 22 0F 8A     	ld (Puntero_store_caja),hl
1130  8DE2 2A 13 8A     	ld hl,(Indice_restore_caja)
1131  8DE5 23           	inc hl
1132  8DE6 23           	inc hl
1133  8DE7 22 13 8A     	ld (Indice_restore_caja),hl
1134  8DEA CD 41 8D         call Extrae_address
1135  8DED 22 11 8A         ld (Puntero_restore_caja),hl
1136  8DF0 C9               ret
1137  8DF1
1138  8DF1              ; **************************************************************************************************
1139  8DF1              ;
1140  8DF1              ;	25/01/23
1141  8DF1              ;
1142  8DF1              ;	Restore_Amadeus
1143  8DF1              ;
1144  8DF1              ;	Cargamos en DRAW los parámetros de Amadeus.
1145  8DF1              ;
1146  8DF1
1147  8DF1 E5           Restore_Amadeus	push hl
1148  8DF2 D5           	push de
1149  8DF3 C5            	push bc
1150  8DF4 21 84 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1151  8DF7 11 C9 89     	ld de,Filas
1152  8DFA 01 43 00     	ld bc,67
1153  8DFD ED B0        	ldir
1154  8DFF C1           	pop bc
1155  8E00 D1           	pop de
1156  8E01 E1           	pop hl
1157  8E02 C9           	ret
1158  8E03
1159  8E03              ; *************************************************************************************************************************************************************
1160  8E03              ;
1161  8E03              ;	29/04/23
1162  8E03              ;
1163  8E03              ;	Store_Amadeus
1164  8E03              ;
1165  8E03              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1166  8E03              ;
1167  8E03              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1168  8E03              ;
1169  8E03              ;	DESTRUYE: HL y BC y DE.
1170  8E03
1171  8E03 21 C9 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1172  8E06 01 43 00     	ld bc,67
1173  8E09 ED B0        	ldir
1174  8E0B C9           	ret
1175  8E0C
1176  8E0C              ; -----------------------------------------------------------
1177  8E0C              ;
1178  8E0C              ;	27/04/23
1179  8E0C              ;
1180  8E0C              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1181  8E0C              ;
1182  8E0C              ;	Destruye: HL,BC,DE,A
1183  8E0C
1184  8E0C 21 C9 89     Borra_datos_entidad ld hl,Filas
1185  8E0F 01 42 00     	ld bc,66
1186  8E12 AF           	xor a
1187  8E13 77           	ld (hl),a
1188  8E14 11 CA 89     	ld de,Filas+1
1189  8E17 ED B0        	ldir
1190  8E19 C9           	ret
1191  8E1A
1192  8E1A              ; -----------------------------------------------------------
1193  8E1A
1194  8E1A              ; Teclado.
1195  8E1A
1196  8E1A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1197  8E1C DB FE        	in a,($fe)
1198  8E1E E6 01        	and $01
1199  8E20 28 02        	jr z,1f
1200  8E22 18 F6        	jr Pulsa_ENTER
1201  8E24 C9           1 ret
1202  8E25
1203  8E25              ; **************************************************************************************************
1204  8E25              ;
1205  8E25              ; Temporización.
1206  8E25
1207  8E25              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1208  8E25              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1209  8E25              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1210  8E25              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1211  8E25
1212  8E25              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1213  8E25              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1214  8E25              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1215  8E25
1216  8E25              ; A partir de $4f61 no hace falta DELAY.
1217  8E25
1218  8E25              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1219  8E25
1220  8E25 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1221  8E28 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1222  8E29 78           	LD A,B
1223  8E2A A7           	AND A
1224  8E2B 20 FB        	JR NZ,wait
1225  8E2D C9           	RET
1226  8E2E
1227  8E2E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1228  8E2E              ;
1229  8E2E              ;	5/3/23
1230  8E2E              ;
1231  8E2E              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1232  8E2E
1233  8E2E              Movimiento_Amadeus
1234  8E2E
1235  8E2E              ; Disparo.
1236  8E2E
1237  8E2E 3A 48 8A     	ld a,(Disparo_Amadeus)
1238  8E31 A7           	and a
1239  8E32 20 02        	jr nz,1F
1240  8E34 18 15        	jr 2F
1241  8E36
1242  8E36 3E F7        1 ld a,$f7													; "5" para disparar.
1243  8E38 DB FE        	in a,($fe)
1244  8E3A E6 10        	and $10
1245  8E3C
1246  8E3C F5           	push af
1247  8E3D CC 6B 8E     	call z,Genera_disparo
1248  8E40 F1           	pop af
1249  8E41 20 08        	jr nz,2F
1250  8E43
1251  8E43 3A 48 8A     	ld a,(Disparo_Amadeus)
1252  8E46 EE 01        	xor 1
1253  8E48 32 48 8A     	ld (Disparo_Amadeus),a
1254  8E4B
1255  8E4B 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1256  8E4D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1257  8E4F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1258  8E51 CC E9 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1259  8E54 3E F7        	ld a,$f7
1260  8E56 DB FE        	in a,($fe)
1261  8E58 E6 01        	and $01
1262  8E5A C8           	ret z
1263  8E5B
1264  8E5B 3E F7        	ld a,$f7
1265  8E5D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1266  8E5F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1267  8E61 CC CB 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1268  8E64 C9           	ret
1269  8E65
1270  8E65              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1271  8E65              ;
1272  8E65              ;	Rutina provisional para que los malotes cagen balas.
1273  8E65
1274  8E65              Detecta_disparo_entidad
1275  8E65
1276  8E65 3A 4B 8A     	ld a,(Disparo_entidad)
1277  8E68 A7           	and a
1278  8E69 C8           	ret z
1279  8E6A
1280  8E6A              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1281  8E6A
1282  8E6A              ;	ld a,$7f				; Detecta SPACE.
1283  8E6A              ;	in a,($fe)
1284  8E6A              ;	and 1
1285  8E6A              ;	ret nz
1286  8E6A
1287  8E6A              ;	call Genera_disparo
1288  8E6A C9           	ret
1289  8E6B
1290  8E6B              ; ---------------------------------------------------------------
1291  8E6B
1292  8E6B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E6B              ; ******************************************************************************************************************************************************************************************
   2+ 8E6B              ;
   3+ 8E6B              ;   21/07/23
   4+ 8E6B              ;
   5+ 8E6B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E6B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E6B              ;
   8+ 8E6B              ;
   9+ 8E6B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E6B              ;
  11+ 8E6B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E6B              ;               _ hacen las entidades hacia abajo.
  13+ 8E6B              ;
  14+ 8E6B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E6B              ;
  16+ 8E6B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E6B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E6B              ;
  19+ 8E6B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E6B              ;           _ la bala.
  21+ 8E6B              ;
  22+ 8E6B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E6B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E6B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E6B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E6B              ;           _ en el momento de generarse la bala)).
  27+ 8E6B
  28+ 8E6B              Genera_disparo
  29+ 8E6B
  30+ 8E6B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E6B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E6B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E6B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E6B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E6B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E6B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E6B
  38+ 8E6B              ; Exclusiones:
  39+ 8E6B
  40+ 8E6B 3A E1 89         ld a,(Vel_down)
  41+ 8E6E 47               ld b,a
  42+ 8E6F 3A 43 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E72 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E73 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E74 3A 06 8A         ld a,(Columnas)
  46+ 8E77 47               ld b,a
  47+ 8E78 3A CA 89         ld a,(Columns)
  48+ 8E7B B8               cp b
  49+ 8E7C C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E7D
  51+ 8E7D              ; ----- ----- -----
  52+ 8E7D
  53+ 8E7D 3A F7 89         ld a,(Ctrl_0)
  54+ 8E80 CB 77            bit 6,a
  55+ 8E82 20 06            jr nz,14F
  56+ 8E84
  57+ 8E84 3A D0 89         ld a,(Coordenada_y)
  58+ 8E87 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E89 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E8A
  61+ 8E8A 21 00 80     14 ld hl,Indice_disparo
  62+ 8E8D 3A D1 89         ld a,(CTRL_DESPLZ)
  63+ 8E90 4F               ld c,a
  64+ 8E91 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E93              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E93              ;                                            ""        ""       "f9", B="1"
  67+ 8E93              ;                                            ""        ""       "fb", B="2"
  68+ 8E93              ;                                            ""        ""       "fb", B="3"
  69+ 8E93 A7               and a
  70+ 8E94 28 10            jr z,1F
  71+ 8E96 E6 01            and 1
  72+ 8E98 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E99
  74+ 8E99 79               ld a,c
  75+ 8E9A 16 F9            ld d,$f9
  76+ 8E9C 23           2 inc hl
  77+ 8E9D 23               inc hl
  78+ 8E9E 04               inc b
  79+ 8E9F BA               cp d
  80+ 8EA0 28 04            jr z,1F
  81+ 8EA2 14               inc d
  82+ 8EA3 14               inc d
  83+ 8EA4 18 F6            jr 2B
  84+ 8EA6
  85+ 8EA6 CD 41 8D     1 call Extrae_address
  86+ 8EA9 E5               push hl
  87+ 8EAA FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EAC DD 21 E4 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EB0
  90+ 8EB0              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EB0              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EB0
  93+ 8EB0 3A F7 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EB3 CB 77            bit 6,a
  95+ 8EB5 20 04            jr nz,19F
  96+ 8EB7
  97+ 8EB7 AF               xor a
  98+ 8EB8 32 4B 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EBB
 100+ 8EBB 3A DD 89     19 ld a,(Cuad_objeto)
 101+ 8EBE FE 02            cp 2
 102+ 8EC0 38 66            jr c,3F
 103+ 8EC2 28 64            jr z,3F
 104+ 8EC4
 105+ 8EC4              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EC4
 107+ 8EC4 E6 01            and 1
 108+ 8EC6 28 30            jr z,4F
 109+ 8EC8
 110+ 8EC8              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EC8              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EC8              ;
 113+ 8EC8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EC8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EC8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EC8
 117+ 8EC8 2A CB 89     	ld hl,(Posicion_actual)
 118+ 8ECB
 119+ 8ECB              ;   Amadeus o entidad ???.
 120+ 8ECB
 121+ 8ECB 3A F7 89         ld a,(Ctrl_0)
 122+ 8ECE CB 77            bit 6,a
 123+ 8ED0 28 0A            jr z,8F
 124+ 8ED2
 125+ 8ED2              ; 	Dispara Amadeus.
 126+ 8ED2
 127+ 8ED2 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8ED4 CD 60 96         call PreviousScan
 129+ 8ED7 CD 60 96         call PreviousScan
 130+ 8EDA
 131+ 8EDA              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EDA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EDA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EDA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EDA
 136+ 8EDA 18 11            jr 10F
 137+ 8EDC
 138+ 8EDC              ; 	Dispara Entidad.
 139+ 8EDC
 140+ 8EDC 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EDF              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EDF
 143+ 8EDF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EDF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EDF
 146+ 8EDF C5               push bc
 147+ 8EE0 06 10            ld b,16
 148+ 8EE2 CD 51 96     9 call NextScan
 149+ 8EE5 10 FB            djnz 9B
 150+ 8EE7 C1               pop bc
 151+ 8EE8 CD 52 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EEB 18 06            jr 17F
 153+ 8EED
 154+ 8EED              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EED              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EED              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EED              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EED
 159+ 8EED CD 52 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EF0 CD C7 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EF3              ;                                                      ; _al generar el disparo.
 162+ 8EF3
 163+ 8EF3              ; 	LLegados a este punto tendremos:
 164+ 8EF3              ;
 165+ 8EF3              ;       Puntero_objeto_disparo en IY.
 166+ 8EF3              ;       Rutinas_de_impresion en IX.
 167+ 8EF3              ;       Puntero_de_impresion en HL.
 168+ 8EF3              ;       Impacto/Dirección en BC.
 169+ 8EF3
 170+ 8EF3 CD 5A 8F     17 call Almacena_disparo
 171+ 8EF6 18 52            jr 6F                                             ; RET.
 172+ 8EF8
 173+ 8EF8              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EF8              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EF8              ;
 176+ 8EF8              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EF8              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EF8              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EF8
 180+ 8EF8 2A CB 89     4 ld hl,(Posicion_actual)
 181+ 8EFB
 182+ 8EFB              ;   Amadeus o entidad ???.
 183+ 8EFB
 184+ 8EFB 3A F7 89         ld a,(Ctrl_0)
 185+ 8EFE CB 77            bit 6,a
 186+ 8F00 28 0A            jr z,11F
 187+ 8F02
 188+ 8F02              ; 	Dispara Amadeus.
 189+ 8F02
 190+ 8F02 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F04 CD 60 96         call PreviousScan
 192+ 8F07 CD 60 96         call PreviousScan
 193+ 8F0A
 194+ 8F0A              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F0A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F0A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F0A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F0A
 199+ 8F0A 18 11            jr 13F
 200+ 8F0C
 201+ 8F0C              ; 	Dispara Entidad.
 202+ 8F0C
 203+ 8F0C 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F0F              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F0F
 206+ 8F0F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F0F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F0F
 209+ 8F0F C5               push bc
 210+ 8F10 06 10            ld b,16
 211+ 8F12 CD 51 96     12 call NextScan
 212+ 8F15 10 FB            djnz 12B
 213+ 8F17 C1               pop bc
 214+ 8F18
 215+ 8F18 CD 4B 8F         call Ajusta_disparo_parte_derecha
 216+ 8F1B 18 06            jr 18F
 217+ 8F1D
 218+ 8F1D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F1D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F1D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F1D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F1D
 223+ 8F1D CD 4B 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F20 CD C7 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F23              ;                                                       ; _al generar el disparo.
 226+ 8F23
 227+ 8F23              ; LLegados a este punto tendremos:
 228+ 8F23              ;
 229+ 8F23              ;       Puntero_objeto_disparo en IY.
 230+ 8F23              ;       Rutinas_de_impresion en IX.
 231+ 8F23              ;       Puntero_de_impresion en HL.
 232+ 8F23              ;       Impacto/Dirección en BC.
 233+ 8F23
 234+ 8F23 CD 5A 8F     18 call Almacena_disparo
 235+ 8F26 18 22            jr 6F                                               ; RET.
 236+ 8F28
 237+ 8F28              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F28
 239+ 8F28 28 11        3 jr z,5F
 240+ 8F2A
 241+ 8F2A              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F2A              ;
 243+ 8F2A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F2A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F2A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F2A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F2A
 248+ 8F2A              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F2A              ;	   ""        ""       "f9", B="1"
 250+ 8F2A              ;	   ""        ""       "fb", B="2"
 251+ 8F2A              ; 	   ""        ""       "fb", B="3"
 252+ 8F2A
 253+ 8F2A 2A CB 89     	ld hl,(Posicion_actual)
 254+ 8F2D CD 51 96     	call NextScan
 255+ 8F30
 256+ 8F30              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F30              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F30              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F30              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F30
 261+ 8F30 CD 52 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F33
 263+ 8F33              ; 	No se produce impacto. B="$80"
 264+ 8F33              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F33
 266+ 8F33 01 80 80         ld bc,$8080
 267+ 8F36
 268+ 8F36              ; 	LLegados a este punto tendremos:
 269+ 8F36              ;
 270+ 8F36              ;       Puntero_objeto_disparo en IY.
 271+ 8F36              ;       Rutinas_de_impresion en IX.
 272+ 8F36              ;       Puntero_de_impresion en HL.
 273+ 8F36              ;       Impacto/Dirección en BC.
 274+ 8F36
 275+ 8F36 CD 5A 8F         call Almacena_disparo
 276+ 8F39 18 0F            jr 6F                                           ; RET.
 277+ 8F3B
 278+ 8F3B              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F3B              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F3B              ;
 281+ 8F3B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F3B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F3B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F3B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F3B
 286+ 8F3B 2A CB 89     5 ld hl,(Posicion_actual)
 287+ 8F3E CD 51 96     	call NextScan
 288+ 8F41
 289+ 8F41              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F41              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F41              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F41              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F41
 294+ 8F41 CD 4B 8F         call Ajusta_disparo_parte_derecha
 295+ 8F44
 296+ 8F44              ; 	No se produce impacto. B="$80"
 297+ 8F44              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F44
 299+ 8F44 01 80 80     15 ld bc,$8080
 300+ 8F47
 301+ 8F47              ; 	LLegados a este punto tendremos:
 302+ 8F47              ;
 303+ 8F47              ;       Puntero_objeto_disparo en IY.
 304+ 8F47              ;       Rutinas_de_impresion en IX.
 305+ 8F47              ;       Puntero_de_impresion en HL.
 306+ 8F47              ;       Impacto/Dirección en BC.
 307+ 8F47
 308+ 8F47 CD 5A 8F         call Almacena_disparo
 309+ 8F4A
 310+ 8F4A C9           6 ret
 311+ 8F4B
 312+ 8F4B              ; ----------------------------------------------------------------
 313+ 8F4B              ;
 314+ 8F4B              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F4B              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F4B              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F4B
 318+ 8F4B 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F4C FE 02            cp 2
 320+ 8F4E 38 01            jr c,1F
 321+ 8F50 23               inc hl
 322+ 8F51 C9           1 ret
 323+ 8F52
 324+ 8F52 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F53 FE 01        	cp 1
 326+ 8F55 20 01        	jr nz,1F
 327+ 8F57 2B           	dec hl
 328+ 8F58 2B           1 dec hl
 329+ 8F59 C9               ret
 330+ 8F5A
 331+ 8F5A              ; ----------------------------------------------------------------
 332+ 8F5A              ;
 333+ 8F5A              ;   25/02/23
 334+ 8F5A              ;
 335+ 8F5A              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F5A              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F5A              ;
 338+ 8F5A              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F5A              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F5A
 341+ 8F5A              Almacena_disparo
 342+ 8F5A
 343+ 8F5A E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F5B F1               pop af
 345+ 8F5C 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F5D
 347+ 8F5D 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F5E E6 01            and 1
 349+ 8F60 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F62              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F62              ; 	Dispara AMADEUS.
 352+ 8F62
 353+ 8F62              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F62              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F62              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F62              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F62
 358+ 8F62 C5               push bc
 359+ 8F63 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F66 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F69 A7               and a
 362+ 8F6A ED 42            sbc hl,bc
 363+ 8F6C CC 0A 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F6F C1               pop bc
 365+ 8F70 28 54            jr z,4F
 366+ 8F72
 367+ 8F72 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F75 23               inc hl
 369+ 8F76 23               inc hl
 370+ 8F77 22 34 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F7A              ;                                                   ; _ Disparo_(+1).
 372+ 8F7A 18 18            jr 2F
 373+ 8F7C
 374+ 8F7C              ; Dispara una entidad.
 375+ 8F7C
 376+ 8F7C C5           1 push bc
 377+ 8F7D 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F80 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F83 A7               and a
 380+ 8F84 ED 42            sbc hl,bc
 381+ 8F86 CC 03 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F89 C1               pop bc
 383+ 8F8A 28 3A            jr z,4F
 384+ 8F8C
 385+ 8F8C 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F8F 23               inc hl
 387+ 8F90 23               inc hl
 388+ 8F91 22 32 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F94              ;                                                   ; _ Disparo_(+1).
 390+ 8F94 CD 41 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F97              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F97              ;
 393+ 8F97              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F97              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F97              ;                                                     Puntero_de_impresion en HL.
 396+ 8F97              ;                                                     Impacto/Dirección en BC.
 397+ 8F97
 398+ 8F97 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F98 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F99 23               inc hl                                          ; _ al siguiente.
 401+ 8F9A A7               and a
 402+ 8F9B 20 C0            jr nz,3B
 403+ 8F9D
 404+ 8F9D 08               ex af,af
 405+ 8F9E ED 73 1D 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FA2 F9               ld sp,hl
 407+ 8FA3
 408+ 8FA3 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FA5 F5               push af                                         ; Puntero de impresión.
 410+ 8FA6 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FA8 C5               push bc                                         ; Control.
 412+ 8FA9
 413+ 8FA9 ED 7B 1D 8A      ld sp,(Stack)
 414+ 8FAD
 415+ 8FAD              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FAD
 417+ 8FAD 21 0C 8A     	ld hl,Ctrl_1
 418+ 8FB0 CB C6        	set 0,(hl)
 419+ 8FB2
 420+ 8FB2 DD E5        	push ix
 421+ 8FB4 E1               pop hl
 422+ 8FB5 F5               push af
 423+ 8FB6 DD E1            pop ix
 424+ 8FB8
 425+ 8FB8 CD A0 7F     	call Guarda_foto_registros
 426+ 8FBB
 427+ 8FBB 21 0C 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FBE CB 86        	res 0,(hl)
 429+ 8FC0
 430+ 8FC0              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FC0              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FC0
 433+ 8FC0 CD 0A 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FC3 CD 03 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 8FC6
 436+ 8FC6 C9           4 ret
 437+ 8FC7
 438+ 8FC7              ; ----------------------------------------------------------------
 439+ 8FC7              ;
 440+ 8FC7              ;   4/3/23
 441+ 8FC7              ;
 442+ 8FC7              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FC7              ;   _ al generarse el disparo.
 444+ 8FC7              ;
 445+ 8FC7              ;       "$80" ..... No se produce colisión.
 446+ 8FC7              ;       "$81" ..... Se produce colisión.
 447+ 8FC7              ;
 448+ 8FC7              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FC7              ;         _ que forman el disparo.
 450+ 8FC7
 451+ 8FC7
 452+ 8FC7              Comprueba_Colision
 453+ 8FC7
 454+ 8FC7              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FC7
 456+ 8FC7 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FC9 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FCA
 459+ 8FCA CD 00 90         call Modifica_H_Velocidad_disparo
 460+ 8FCD
 461+ 8FCD 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FCE FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FD0 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FD2
 465+ 8FD2 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FD4 CD F0 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FD7
 468+ 8FD7 7B               ld a,e
 469+ 8FD8 E6 01            and 1
 470+ 8FDA 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FDC              ;                                                  ; _ para activar IMPACTO.
 472+ 8FDC E1               pop hl
 473+ 8FDD E5               push hl
 474+ 8FDE CD 51 96         call NextScan
 475+ 8FE1
 476+ 8FE1 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FE2 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FE4 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FE6              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FE6 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FE8 CD F0 8F         call Bucle_2
 482+ 8FEB
 483+ 8FEB 43           1 ld b,e
 484+ 8FEC E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FED FD E1            pop iy
 486+ 8FEF C9               ret
 487+ 8FF0
 488+ 8FF0              ; ---------- ----------
 489+ 8FF0
 490+ 8FF0 06 02        Bucle_2 ld b,2
 491+ 8FF2 FD 7E 00     2 ld a,(iy)
 492+ 8FF5 A6               and (hl)
 493+ 8FF6 28 02            jr z,1F
 494+ 8FF8 1E 81            ld e,$81
 495+ 8FFA 23           1 inc hl
 496+ 8FFB FD 23            inc iy
 497+ 8FFD 10 F3            djnz 2B
 498+ 8FFF C9               ret
 499+ 9000
 500+ 9000              ; ---------- ----------
 501+ 9000              ;
 502+ 9000              ;   21/7/23
 503+ 9000
 504+ 9000              Modifica_H_Velocidad_disparo
 505+ 9000
 506+ 9000 3A 43 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9003 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9005 D0               ret nc                                         ; _ incrementamos H.
 509+ 9006 24               inc h
 510+ 9007
 511+ 9007 C9               ret
 512+ 9008
 513+ 9008              ; -------------------------------------------------------------------------------------------------------------
 514+ 9008              ;
 515+ 9008              ;   11/04/23
 516+ 9008              ;
 517+ 9008              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9008              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9008              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9008              ;
 521+ 9008              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9008
 523+ 9008              Compara_coordenadas_X
 524+ 9008
 525+ 9008              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9008              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9008
 528+ 9008              ; Preparamos registros:
 529+ 9008
 530+ 9008 21 CF 89         ld hl,Filas+6
 531+ 900B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 900C 23               inc hl
 533+ 900D 23               inc hl
 534+ 900E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 900F 43               ld b,e
 536+ 9010
 537+ 9010 21 DD 89         ld hl,Filas+20
 538+ 9013 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9014 21 3E 8A         ld hl,Coordenadas_X_Entidad
 540+ 9017 CD 33 92         call Guarda_coordenadas_X
 541+ 901A
 542+ 901A              ; Preparamos registros:
 543+ 901A
 544+ 901A 21 8A 85         ld hl,Amadeus_db+6
 545+ 901D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 901E 23               inc hl
 547+ 901F 23               inc hl
 548+ 9020 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9021 7B               ld a,e
 550+ 9022 08               ex af,af'
 551+ 9023 21 98 85         ld hl,Amadeus_db+20
 552+ 9026 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9027 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 554+ 902A CD 33 92         call Guarda_coordenadas_X
 555+ 902D
 556+ 902D              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 902D              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 902D
 559+ 902D 04               inc b
 560+ 902E 05               dec b
 561+ 902F 28 04            jr z,1F
 562+ 9031 06 03            ld b,3
 563+ 9033 18 02            jr 2F
 564+ 9035 06 02        1 ld b,2
 565+ 9037 08           2 ex af,af'
 566+ 9038 3C               inc a
 567+ 9039 3D               dec a
 568+ 903A 28 04            jr z,5F
 569+ 903C 0E 03            ld c,3
 570+ 903E 18 02            jr 6F
 571+ 9040 0E 02        5 ld c,2
 572+ 9042 79           6 ld a,c
 573+ 9043 08               ex af,af'
 574+ 9044 11 3E 8A         ld de,Coordenadas_X_Entidad
 575+ 9047 1A           4 ld a,(de)
 576+ 9048 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 577+ 904B BE           3 cp (hl)
 578+ 904C 28 0E            jr z,7F
 579+ 904E 23               inc hl
 580+ 904F 0D               dec c
 581+ 9050 20 F9            jr nz,3B
 582+ 9052 13               inc de
 583+ 9053 08               ex af,af'
 584+ 9054 4F               ld c,a
 585+ 9055 08               ex af,af'
 586+ 9056 10 EF            djnz 4B
 587+ 9058
 588+ 9058              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9058
 590+ 9058 CD 6F 92     8 call Limpia_Coordenadas_X
 591+ 905B C9               ret
 592+ 905C
 593+ 905C 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 905E 32 E2 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9061 21 36 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9064 CB D6            set 2,(hl)
 597+ 9066 18 F0            jr 8B
 598+ 9068
 599+ 9068              ; -----------------------------------------------------------------------
 600+ 9068              ;
 601+ 9068              ;   17/04/23
 602+ 9068              ;
 603+ 9068
 604+ 9068              Detecta_colision_nave_entidad
 605+ 9068
 606+ 9068              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9068
 608+ 9068 2A CB 89         ld hl,(Posicion_actual)
 609+ 906B CD AC 95         call Calcula_puntero_de_impresion
 610+ 906E
 611+ 906E              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 906E              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 906E
 614+ 906E DD E5            push ix
 615+ 9070 E1               pop hl
 616+ 9071 E5               push hl
 617+ 9072
 618+ 9072              ; ----- ----- -----
 619+ 9072 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9074 06 0A            ld b,10
 621+ 9076 CD A6 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9079 7B               ld a,e
 623+ 907A FE 05            cp 5
 624+ 907C 38 0E            jr c,3F
 625+ 907E
 626+ 907E              ; LLegados a este punto:
 627+ 907E              ;
 628+ 907E              ;   HAY COLISIÓN !!!!!.
 629+ 907E              ;
 630+ 907E              ;   .db (Impacto) de Amadeus a "1".
 631+ 907E              ;   SET el bit3 de (Impacto2).
 632+ 907E              ;
 633+ 907E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 907E
 635+ 907E 21 9D 85         ld hl,Amadeus_db+25
 636+ 9081 36 01            ld (hl),1
 637+ 9083 21 36 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9086 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9088 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 908A 18 18            jr 1F
 641+ 908C
 642+ 908C              ; -----
 643+ 908C
 644+ 908C E1           3 pop hl
 645+ 908D CD 51 96         call NextScan
 646+ 9090 E5               push hl
 647+ 9091 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9092 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9094 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9096 30 0C            jr nc,1F
 651+ 9098              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9098 10 DC            djnz 2B
 653+ 909A
 654+ 909A              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 909A
 656+ 909A              ; LLegados a este punto:
 657+ 909A              ;
 658+ 909A              ;   NO HAY COLISIÓN !!!!!.
 659+ 909A              ;
 660+ 909A              ;   .db (Impacto) de Amadeus a "0".
 661+ 909A              ;   RES el bit2 de (Impacto2).
 662+ 909A              ;
 663+ 909A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 909A              ;   Lo colocamos a "0".
 665+ 909A
 666+ 909A 21 36 8A         ld hl,Impacto2
 667+ 909D CB 96            res 2,(hl)
 668+ 909F 2A 37 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90A2 36 00            ld (hl),0
 670+ 90A4
 671+ 90A4 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90A5 C9               ret
 673+ 90A6
 674+ 90A6               ; ---------- ----------
 675+ 90A6
 676+ 90A6 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90A7 3A CA 89         ld a,(Columns)
 678+ 90AA 47               ld b,a
 679+ 90AB FD 7E 00     2 ld a,(iy)
 680+ 90AE BE               cp (hl)
 681+ 90AF 28 01            jr z,1F
 682+ 90B1
 683+ 90B1 1C               inc e
 684+ 90B2
 685+ 90B2 23           1 inc hl
 686+ 90B3 FD 23            inc iy
 687+ 90B5 10 F4            djnz 2B
 688+ 90B7 C1               pop bc
 689+ 90B8 C9               ret
 690+ 90B9
 691+ 90B9              ; -------------------------------------------------------------------------------------------------------------
 692+ 90B9              ;
 693+ 90B9              ;   13/03/23
 694+ 90B9              ;
 695+ 90B9              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90B9              ;
 697+ 90B9              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90B9
 699+ 90B9 21 11 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90BC 7E               ld a,(hl)
 701+ 90BD A7               and a
 702+ 90BE C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90BF
 704+ 90BF 44               ld b,h
 705+ 90C0 4D               ld c,l
 706+ 90C1 2A 23 8A         ld hl,(Stack_snapshot_disparos)
 707+ 90C4 E5               push hl
 708+ 90C5 A7               and a
 709+ 90C6 ED 42            sbc hl,bc
 710+ 90C8 E5               push hl
 711+ 90C9 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90CA
 713+ 90CA E1               pop hl
 714+ 90CB 54               ld d,h
 715+ 90CC 5D               ld e,l
 716+ 90CD 1B               dec de
 717+ 90CE ED B8            lddr                                                ; Limpiamos.
 718+ 90D0
 719+ 90D0 21 11 72         ld hl,Album_de_fotos_disparos
 720+ 90D3 22 23 8A         ld (Stack_snapshot_disparos),hl
 721+ 90D6
 722+ 90D6 C9               ret
 723+ 90D7
 724+ 90D7              ; -------------------------------------------------------------------------------------------------------------
 725+ 90D7              ;
 726+ 90D7              ;   18/07/23
 727+ 90D7              ;
 728+ 90D7
 729+ 90D7              Motor_de_disparos
 730+ 90D7
 731+ 90D7              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90D7
 733+ 90D7 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90DA 2A 34 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90DD
 736+ 90DD CD 41 8D     2 call Extrae_address
 737+ 90E0 7E               ld a,(hl)
 738+ 90E1 A7               and a
 739+ 90E2 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90E4
 741+ 90E4              ; ----- ----- ----- ----- ----- -----
 742+ 90E4
 743+ 90E4 C5               push bc
 744+ 90E5 CD A9 91         call foto_disparo_a_borrar
 745+ 90E8
 746+ 90E8              ; Existe colisión con este disparo???
 747+ 90E8
 748+ 90E8 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90E9 7E               ld a,(hl)
 750+ 90EA 2B               dec hl
 751+ 90EB E6 01            and 1
 752+ 90ED 28 1D            jr z,9F
 753+ 90EF
 754+ 90EF              ;   En este punto:
 755+ 90EF              ;
 756+ 90EF              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90EF              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90EF              ;   _con la entidad).
 759+ 90EF              ;
 760+ 90EF              ;   Disparo_2A defw 0                                ; Control.
 761+ 90EF              ;    defw 0                                          ; Puntero objeto.
 762+ 90EF              ;    defw 0                                          ; Puntero de impresión.
 763+ 90EF              ;    defw 0                                          ; Rutina de impresión.
 764+ 90EF
 765+ 90EF E5               push hl
 766+ 90F0
 767+ 90F0 06 04            ld b,4
 768+ 90F2 23           19 inc hl
 769+ 90F3 10 FD            djnz 19B
 770+ 90F5
 771+ 90F5 CD 41 8D         call Extrae_address
 772+ 90F8 CD C7 9C         call Genera_coordenadas_disparo
 773+ 90FB
 774+ 90FB              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90FB
 776+ 90FB 21 39 8A         ld hl,Coordenadas_disparo_certero
 777+ 90FE 72               ld (hl),d
 778+ 90FF 23               inc hl
 779+ 9100 73               ld (hl),e
 780+ 9101
 781+ 9101              ; Elimino el disparo de la base de datos.
 782+ 9101
 783+ 9101 E1               pop hl
 784+ 9102 CD 28 92         call Elimina_disparo_de_base_de_datos
 785+ 9105 21 36 8A         ld hl,Impacto2
 786+ 9108 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 910A
 788+ 910A 18 06            jr 11F
 789+ 910C
 790+ 910C CD D2 91     9 call Mueve_disparo
 791+ 910F CD A9 91         call foto_disparo_a_borrar
 792+ 9112
 793+ 9112 C1           11 pop bc
 794+ 9113 18 04            jr 7F
 795+ 9115
 796+ 9115              ; ----- ----- ----- ----- ----- -----
 797+ 9115
 798+ 9115 ED 42        1 sbc hl,bc
 799+ 9117 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9119
 801+ 9119 2A 34 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 911C 23               inc hl
 803+ 911D 23               inc hl
 804+ 911E 22 34 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9121 18 BA            jr 2B
 806+ 9123
 807+ 9123 CD 0A 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9126              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9126
 810+ 9126              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9126
 812+ 9126 01 6A 85         ld bc,Disparo_11
 813+ 9129 2A 32 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 912C
 815+ 912C CD 41 8D     5 call Extrae_address
 816+ 912F 7E               ld a,(hl)
 817+ 9130 A7               and a
 818+ 9131 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9133
 820+ 9133              ; ----- ----- ----- ----- ----- -----
 821+ 9133
 822+ 9133 C5               push bc
 823+ 9134 CD A9 91         call foto_disparo_a_borrar
 824+ 9137
 825+ 9137              ; Existe colisión con este disparo???
 826+ 9137
 827+ 9137 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9138 7E               ld a,(hl)
 829+ 9139 2B               dec hl
 830+ 913A E6 01            and 1
 831+ 913C 28 4D            jr z,10F
 832+ 913E
 833+ 913E              ;! La colisión se produce con Amadeus???
 834+ 913E              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 913E
 836+ 913E E5               push hl
 837+ 913F
 838+ 913F 06 04            ld b,4
 839+ 9141 23           16 inc hl
 840+ 9142 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9144
 842+ 9144 CD 41 8D         call Extrae_address
 843+ 9147 CD C7 9C         call Genera_coordenadas_disparo
 844+ 914A
 845+ 914A 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 914B FE 16            cp $16
 847+ 914D 38 2A            jr c,15F
 848+ 914F
 849+ 914F
 850+ 914F              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 914F
 852+ 914F D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9150
 854+ 9150              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9150
 856+ 9150
 857+ 9150 2A 41 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9153
 859+ 9153              ; Coordenada X de Amadeus en D.
 860+ 9153
 861+ 9153 7D               ld a,l
 862+ 9154 E6 1F            and $1F
 863+ 9156 57               ld d,a
 864+ 9157
 865+ 9157 21 8C 85         ld hl,Amadeus_db+8
 866+ 915A 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 915B
 868+ 915B 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 869+ 915E CD 33 92         call Guarda_coordenadas_X
 870+ 9161
 871+ 9161 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9162
 873+ 9162              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9162
 875+ 9162 06 02            ld b,2
 876+ 9164 C5           20 push bc
 877+ 9165
 878+ 9165 06 03            ld b,3
 879+ 9167 21 3B 8A         ld hl,Coordenadas_X_Amadeus
 880+ 916A 7E           18 ld a,(hl)
 881+ 916B BA               cp d
 882+ 916C 20 04            jr nz,17F
 883+ 916E
 884+ 916E              ;! Colisión Amadeus !!!!!!!!!!
 885+ 916E
 886+ 916E C1               pop bc
 887+ 916F E1               pop hl
 888+ 9170 18 0D            jr 14F
 889+ 9172
 890+ 9172 23           17 inc hl
 891+ 9173 10 F5            djnz 18B
 892+ 9175
 893+ 9175 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9176
 895+ 9176 C1               pop bc
 896+ 9177 10 EB            djnz 20B
 897+ 9179
 898+ 9179
 899+ 9179              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9179              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9179
 902+ 9179 E1           15 pop hl
 903+ 917A 23               inc hl
 904+ 917B 35               dec (hl)
 905+ 917C 2B               dec hl
 906+ 917D 18 0C            jr 10F
 907+ 917F
 908+ 917F              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 917F              ; _ almacén de coordenadas_X de Amadeus.
 910+ 917F
 911+ 917F E5           14 push hl
 912+ 9180 CD 28 92         call Elimina_disparo_de_base_de_datos
 913+ 9183 21 36 8A         ld hl,Impacto2
 914+ 9186 CB CE            set 1,(hl)
 915+ 9188 E1               pop hl
 916+ 9189 18 06            jr 12F
 917+ 918B
 918+ 918B              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 918B
 920+ 918B CD D2 91     10 call Mueve_disparo
 921+ 918E CD A9 91         call foto_disparo_a_borrar
 922+ 9191 C1           12 pop bc
 923+ 9192
 924+ 9192 18 04            jr 8F
 925+ 9194
 926+ 9194              ; ----- ----- ----- ----- ----- -----
 927+ 9194
 928+ 9194 ED 42        4 sbc hl,bc
 929+ 9196 28 0A            jr z,6F
 930+ 9198
 931+ 9198 2A 32 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 919B 23               inc hl
 933+ 919C 23               inc hl
 934+ 919D 22 32 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91A0 18 8A            jr 5B
 936+ 91A2
 937+ 91A2 CD 03 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91A5 CD 6F 92         call Limpia_Coordenadas_X
 939+ 91A8 C9               ret
 940+ 91A9
 941+ 91A9              ; ------------------------------------------------------------------
 942+ 91A9
 943+ 91A9              foto_disparo_a_borrar
 944+ 91A9
 945+ 91A9 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91AA A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91AB C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91AC
 949+ 91AC E5               push hl
 950+ 91AD 23               inc hl
 951+ 91AE 23               inc hl
 952+ 91AF ED 73 1D 8A      ld (Stack),sp
 953+ 91B3 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91B4 FD E1            pop iy
 955+ 91B6 DD E1            pop ix
 956+ 91B8 E1               pop hl
 957+ 91B9 ED 7B 1D 8A      ld sp,(Stack)
 958+ 91BD 3A 0C 8A         ld a,(Ctrl_1)
 959+ 91C0 CB C7            set 0,a
 960+ 91C2 32 0C 8A         ld (Ctrl_1),a
 961+ 91C5 CD A0 7F         call Guarda_foto_registros
 962+ 91C8 3A 0C 8A         ld a,(Ctrl_1)
 963+ 91CB CB 87            res 0,a
 964+ 91CD 32 0C 8A         ld (Ctrl_1),a
 965+ 91D0 E1               pop hl
 966+ 91D1 C9               ret
 967+ 91D2
 968+ 91D2              ;---------------------------------------------------
 969+ 91D2              ;
 970+ 91D2              ;   18/07/23
 971+ 91D2              ;
 972+ 91D2
 973+ 91D2              Mueve_disparo
 974+ 91D2
 975+ 91D2              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91D2              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91D2              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91D2
 979+ 91D2 E5               push hl
 980+ 91D3
 981+ 91D3 7E               ld a,(hl)
 982+ 91D4
 983+ 91D4 06 04            ld b,4
 984+ 91D6 23           1 inc hl
 985+ 91D7 10 FD            djnz 1B
 986+ 91D9
 987+ 91D9              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91D9
 989+ 91D9 CD 41 8D         call Extrae_address
 990+ 91DC
 991+ 91DC E6 01            and 1
 992+ 91DE 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91E0
 994+ 91E0              ; Disparo hacia arriba, (Amadeus).
 995+ 91E0
 996+ 91E0              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91E0              ; _ de la dificultad.
 998+ 91E0
 999+ 91E0 CD 60 96         call PreviousScan
1000+ 91E3 CD 60 96         call PreviousScan
1001+ 91E6 CD 60 96         call PreviousScan
1002+ 91E9 CD 60 96         call PreviousScan
1003+ 91EC
1004+ 91EC              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91EC
1006+ 91EC 7C               ld a,h
1007+ 91ED FE 40            cp $40
1008+ 91EF 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91F1
1010+ 91F1              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91F1
1012+ 91F1 EB               ex de,hl
1013+ 91F2 06 04            ld b,4
1014+ 91F4 2B           6 dec hl
1015+ 91F5 10 FD            djnz 6B
1016+ 91F7
1017+ 91F7 CD 28 92         call Elimina_disparo_de_base_de_datos
1018+ 91FA E1               pop hl
1019+ 91FB 18 10            jr 7F
1020+ 91FD
1021+ 91FD              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91FD              ; HL contiene el puntero de impresión del disparo.
1023+ 91FD              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91FD
1025+ 91FD D5           3 push de
1026+ 91FE C5               push bc
1027+ 91FF
1028+ 91FF CD C7 8F         call Comprueba_Colision
1029+ 9202
1030+ 9202              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9202
1032+ 9202 78               ld a,b
1033+ 9203
1034+ 9203 C1               pop bc
1035+ 9204 D1               pop de
1036+ 9205
1037+ 9205 EB               ex de,hl
1038+ 9206
1039+ 9206 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9207 23               inc hl                                      ; _ movimiento.
1041+ 9208 72               ld (hl),d
1042+ 9209
1043+ 9209 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 920A
1045+ 920A 23               inc hl                                      ; _ en curso.
1046+ 920B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 920C 2B               dec hl
1048+ 920D
1049+ 920D C9           7 ret
1050+ 920E
1051+ 920E              ; Disparo hacia abajo, (Entidad).
1052+ 920E
1053+ 920E 3A 43 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 9211 47               ld b,a
1055+ 9212
1056+ 9212 CD 51 96     4 call NextScan
1057+ 9215 10 FB            djnz 4B
1058+ 9217
1059+ 9217              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9217
1061+ 9217 7C               ld a,h
1062+ 9218 FE 58            cp $58
1063+ 921A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 921C
1065+ 921C EB               ex de,hl
1066+ 921D 06 04            ld b,4
1067+ 921F 2B           5 dec hl
1068+ 9220 10 FD            djnz 5B
1069+ 9222
1070+ 9222 CD 28 92         call Elimina_disparo_de_base_de_datos
1071+ 9225 E1               pop hl
1072+ 9226 18 E5            jr 7B
1073+ 9228
1074+ 9228              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9228
1076+ 9228 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 922B AF               xor a
1078+ 922C 77               ld (hl),a
1079+ 922D 54               ld d,h
1080+ 922E 5D               ld e,l
1081+ 922F 13               inc de
1082+ 9230 ED B0            ldir
1083+ 9232 C9               ret
1084+ 9233
1085+ 9233              ; -----------------------------------------------------------------
1086+ 9233              ;
1087+ 9233              ;   19/7/23
1088+ 9233              ;
1089+ 9233              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9233              ;
1091+ 9233              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9233              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9233              ;
1094+ 9233              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9233              ;
1096+ 9233              ;   INPUTS:
1097+ 9233              ;
1098+ 9233              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9233              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9233
1101+ 9233              ;   MODIFICA: A, HL, BC y DE.
1102+ 9233
1103+ 9233              Guarda_coordenadas_X
1104+ 9233
1105+ 9233 7B               ld a,e
1106+ 9234 A7               and a
1107+ 9235 20 04            jr nz,1F
1108+ 9237
1109+ 9237 06 02            ld b,2
1110+ 9239 18 02            jr 2F
1111+ 923B
1112+ 923B 06 03        1 ld b,3
1113+ 923D 72           2 ld (hl),d
1114+ 923E 23               inc hl
1115+ 923F 14               inc d
1116+ 9240 10 FB            djnz 2B
1117+ 9242
1118+ 9242 C9               ret
1119+ 9243
1120+ 9243              ; -----------------------------------------------------------------
1121+ 9243              ;
1122+ 9243              ;   12/04/23
1123+ 9243              ;
1124+ 9243
1125+ 9243 3A 36 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9246 A7               and a
1127+ 9247 C8               ret z
1128+ 9248
1129+ 9248 FE 04            cp 4
1130+ 924A 20 09            jr nz,1F
1131+ 924C
1132+ 924C
1133+ 924C              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 924C
1135+ 924C CD 68 90         call Detecta_colision_nave_entidad
1136+ 924F
1137+ 924F 21 36 8A         ld hl,Impacto2
1138+ 9252 CB 5E            bit 3,(hl)
1139+ 9254 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9255
1141+ 9255              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9255              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9255
1144+ 9255 21 36 8A     1 ld hl,Impacto2
1145+ 9258 CB 4E            bit 1,(hl)
1146+ 925A 28 07            jr z,2F
1147+ 925C
1148+ 925C 21 9D 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 925F 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9261 18 0B            jr 3F
1151+ 9263
1152+ 9263 21 36 8A     2 ld hl,Impacto2
1153+ 9266 CB 46            bit 0,(hl)
1154+ 9268 C8               ret z
1155+ 9269
1156+ 9269              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9269
1158+ 9269 21 0C 8A         ld hl,Ctrl_1
1159+ 926C CB D6            set 2,(hl)
1160+ 926E
1161+ 926E C9           3 ret
1162+ 926F
1163+ 926F              ; -----------------------------------------------------------------
1164+ 926F              ;
1165+ 926F              ;   19/7/23
1166+ 926F              ;
1167+ 926F              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 926F
1169+ 926F AF           Limpia_Coordenadas_X xor a
1170+ 9270 06 06            ld b,6
1171+ 9272 21 3B 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9275 77           1 ld (hl),a
1173+ 9276 23               inc hl
1174+ 9277 10 FC            djnz 1B
1175+ 9279 C9               ret
1176+ 927A
1177+ 927A              ; -----------------------------------------------------------------
1178+ 927A              ;
1179+ 927A              ;   25/04/23
1180+ 927A              ;
1181+ 927A
1182+ 927A              Determina_resultado_comparativa
1183+ 927A
1184+ 927A              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 927A              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 927A              ;
1187+ 927A              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 927A              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 927A              ;
1190+ 927A              ;   SBC HL,DE
1191+ 927A
1192+ 927A              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 927A              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 927A
1195+ 927A              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 927A              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 927A
1198+ 927A
1199+ 927A 3A DD 89         ld a,(Cuad_objeto)
1200+ 927D FE 02            cp 2
1201+ 927F 28 26            jr z,2F
1202+ 9281 38 24            jr c,2F
1203+ 9283
1204+ 9283              ; Cuadrantes 3º y 4º
1205+ 9283
1206+ 9283 E6 01            and 1
1207+ 9285 28 10            jr z,4F
1208+ 9287
1209+ 9287              ; Cuadrante 3º
1210+ 9287
1211+ 9287 7C               ld a,h
1212+ 9288 06 00            ld b,0
1213+ 928A
1214+ 928A CD 15 93         call Compara_cositas_H3
1215+ 928D
1216+ 928D 04               inc b
1217+ 928E 05               dec b
1218+ 928F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9290
1220+ 9290 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9291 06 00            ld b,0
1222+ 9293
1223+ 9293 CD 27 93         call Compara_cositas_L3
1224+ 9296 C9               ret
1225+ 9297
1226+ 9297              ; Cuadrante 4º
1227+ 9297
1228+ 9297 7C           4 ld a,h
1229+ 9298 06 00            ld b,0
1230+ 929A
1231+ 929A CD 39 93         call Compara_cositas_H4
1232+ 929D
1233+ 929D 04               inc b
1234+ 929E 05               dec b
1235+ 929F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92A0
1237+ 92A0 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92A1 06 00            ld b,0
1239+ 92A3
1240+ 92A3 CD 4F 93         call Compara_cositas_L4
1241+ 92A6 C9               ret
1242+ 92A7
1243+ 92A7              ; Cuadrantes 1º y 2º.
1244+ 92A7
1245+ 92A7 28 10        2 jr z,3F
1246+ 92A9
1247+ 92A9              ; 1er Cuadrante
1248+ 92A9
1249+ 92A9 7C               ld a,h
1250+ 92AA 06 00            ld b,0
1251+ 92AC
1252+ 92AC CD ED 92         call Compara_cositas_H1
1253+ 92AF
1254+ 92AF 04               inc b
1255+ 92B0 05               dec b
1256+ 92B1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92B2
1258+ 92B2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92B3 06 00            ld b,0
1260+ 92B5
1261+ 92B5 CD 03 93         call Compara_cositas_L1
1262+ 92B8 C9               ret
1263+ 92B9
1264+ 92B9
1265+ 92B9              ; 2º Cuadrante
1266+ 92B9
1267+ 92B9 7C           3 ld a,h
1268+ 92BA 06 00            ld b,0
1269+ 92BC
1270+ 92BC CD C9 92         call Compara_cositas_H2
1271+ 92BF
1272+ 92BF 04               inc b
1273+ 92C0 05               dec b
1274+ 92C1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92C2
1276+ 92C2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92C3 06 00            ld b,0
1278+ 92C5
1279+ 92C5 CD DB 92         call Compara_cositas_L2
1280+ 92C8 C9               ret
1281+ 92C9
1282+ 92C9 A7           Compara_cositas_H2 and a
1283+ 92CA 28 0D            jr z,1F
1284+ 92CC              ;    cp $fd
1285+ 92CC              ;    jr z,1F
1286+ 92CC              ;    cp $fe
1287+ 92CC              ;    jr z,1F
1288+ 92CC FE FF            cp $ff
1289+ 92CE 28 09            jr z,1F
1290+ 92D0 FE 01            cp $01
1291+ 92D2 28 05            jr z,1F
1292+ 92D4 FE 02            cp $02
1293+ 92D6 28 01            jr z,1F
1294+ 92D8 C0               ret nz
1295+ 92D9 04           1 inc b
1296+ 92DA C9               ret
1297+ 92DB
1298+ 92DB A7           Compara_cositas_L2 and a
1299+ 92DC 28 0D            jr z,1F
1300+ 92DE              ;    cp $fd
1301+ 92DE              ;    jr z,1F
1302+ 92DE FE FE            cp $fe
1303+ 92E0 28 09            jr z,1F
1304+ 92E2 FE FF            cp $ff
1305+ 92E4 28 05            jr z,1F
1306+ 92E6 FE 01            cp $01
1307+ 92E8 28 01            jr z,1F
1308+ 92EA              ;    cp $02
1309+ 92EA              ;    jr z,1F
1310+ 92EA C0               ret nz
1311+ 92EB 04           1 inc b
1312+ 92EC C9               ret
1313+ 92ED
1314+ 92ED A7           Compara_cositas_H1 and a
1315+ 92EE 28 11            jr z,1F
1316+ 92F0              ;    cp $fd
1317+ 92F0              ;    jr z,1F
1318+ 92F0              ;    cp $fe
1319+ 92F0              ;    jr z,1F
1320+ 92F0 FE FF            cp $ff
1321+ 92F2 28 0D            jr z,1F
1322+ 92F4 FE 01            cp $01
1323+ 92F6 28 09            jr z,1F
1324+ 92F8 FE 02            cp $02
1325+ 92FA 28 05            jr z,1F
1326+ 92FC FE 03            cp $03
1327+ 92FE 28 01            jr z,1F
1328+ 9300 C0               ret nz
1329+ 9301 04           1 inc b
1330+ 9302 C9               ret
1331+ 9303
1332+ 9303 A7           Compara_cositas_L1 and a
1333+ 9304 28 0D            jr z,1F
1334+ 9306              ;    cp $fd
1335+ 9306              ;    jr z,1F
1336+ 9306              ;    cp $fe
1337+ 9306              ;    jr z,1F
1338+ 9306              ;    cp $ff
1339+ 9306              ;    jr z,1F
1340+ 9306 FE 01            cp $01
1341+ 9308 28 09            jr z,1F
1342+ 930A FE 02            cp $02
1343+ 930C 28 05            jr z,1F
1344+ 930E FE 03            cp $03
1345+ 9310 28 01            jr z,1F
1346+ 9312 C0               ret nz
1347+ 9313 04           1 inc b
1348+ 9314 C9               ret
1349+ 9315
1350+ 9315 A7           Compara_cositas_H3 and a
1351+ 9316 28 0D            jr z,1F
1352+ 9318              ;    cp $fd
1353+ 9318              ;    jr z,1F
1354+ 9318 FE FE            cp $fe
1355+ 931A 28 09            jr z,1F
1356+ 931C FE FF            cp $ff
1357+ 931E 28 05            jr z,1F
1358+ 9320 FE 01            cp $01
1359+ 9322 28 01            jr z,1F
1360+ 9324              ;    cp $02
1361+ 9324              ;    jr z,1F
1362+ 9324              ;    cp $03
1363+ 9324              ;    jr z,1F
1364+ 9324 C0               ret nz
1365+ 9325 04           1 inc b
1366+ 9326 C9               ret
1367+ 9327
1368+ 9327 A7           Compara_cositas_L3 and a
1369+ 9328 28 0D            jr z,1F
1370+ 932A              ;    cp $fd
1371+ 932A              ;    jr z,1F
1372+ 932A              ;    cp $fe
1373+ 932A              ;    jr z,1F
1374+ 932A              ;    cp $ff
1375+ 932A              ;    jr z,1F
1376+ 932A FE 01            cp $01
1377+ 932C 28 09            jr z,1F
1378+ 932E FE 02            cp $02
1379+ 9330 28 05            jr z,1F
1380+ 9332 FE 03            cp $03
1381+ 9334 28 01            jr z,1F
1382+ 9336 C0               ret nz
1383+ 9337 04           1 inc b
1384+ 9338 C9               ret
1385+ 9339
1386+ 9339 A7           Compara_cositas_H4 and a
1387+ 933A 28 11            jr z,1F
1388+ 933C FE FD            cp $fd
1389+ 933E 28 0D            jr z,1F
1390+ 9340 FE FE            cp $fe
1391+ 9342 28 09            jr z,1F
1392+ 9344 FE FF            cp $ff
1393+ 9346 28 05            jr z,1F
1394+ 9348 FE 01            cp $01
1395+ 934A 28 01            jr z,1F
1396+ 934C              ;    cp $02
1397+ 934C              ;    jr z,1F
1398+ 934C              ;    cp $03
1399+ 934C              ;    jr z,1F
1400+ 934C C0               ret nz
1401+ 934D 04           1 inc b
1402+ 934E C9               ret
1403+ 934F
1404+ 934F A7           Compara_cositas_L4 and a
1405+ 9350 28 0D            jr z,1F
1406+ 9352              ;    cp $fd
1407+ 9352              ;    jr z,1F
1408+ 9352 FE FE            cp $fe
1409+ 9354 28 09            jr z,1F
1410+ 9356 FE FF            cp $ff
1411+ 9358 28 05            jr z,1F
1412+ 935A FE 01            cp $01
1413+ 935C 28 01            jr z,1F
1414+ 935E              ;    cp $02
1415+ 935E              ;    jr z,1F
1416+ 935E              ;    cp $03
1417+ 935E              ;    jr z,1F
1418+ 935E C0               ret nz
1419+ 935F 04           1 inc b
1420+ 9360 C9               ret
# file closed: Disparo.asm
1293  9361              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9361              ; ******************************************************************************************************************************************************************************************
   2+ 9361              ;
   3+ 9361              ; 26/06/23
   4+ 9361              ;
   5+ 9361              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9361
   7+ 9361 CD 45 96     Draw call Prepara_draw
   8+ 9364 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9365 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9366 28 05        	jr z,2F
  11+ 9368
  12+ 9368 3A DD 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 936B 18 0C        	jr 1F
  14+ 936D
  15+ 936D 2A DB 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9370 22 CB 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9373 CD 02 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9376              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9376 CD 43 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9379
  21+ 9379 3A F7 89     1 ld a,(Ctrl_0)
  22+ 937C CB 6F        	bit 5,a
  23+ 937E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9380
  25+ 9380 CD 98 93     	call Comprueba_limite_horizontal
  26+ 9383 CD 28 94     	call Comprueba_limite_vertical
  27+ 9386
  28+ 9386              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9386              ; -----------------------
  30+ 9386              ; -----------------------
  31+ 9386              ; -----------------------
  32+ 9386
  33+ 9386 CD 75 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9389 CD AC 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 938C CD 0B 96     	call Define_rutina_de_impresion
  36+ 938F
  37+ 938F 3A F7 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9392 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9394 32 F7 89     	ld (Ctrl_0),a
  40+ 9397
  41+ 9397 C9           	ret
  42+ 9398
  43+ 9398              ; *******************************************************************************************************************************************************************************************
  44+ 9398              ;	21/01/23
  45+ 9398              ;
  46+ 9398              ; 	Comprueba_limite_horizontal.
  47+ 9398              ;
  48+ 9398              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9398              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9398              ;
  51+ 9398              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9398              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9398              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9398              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9398
  56+ 9398
  57+ 9398
  58+ 9398 3A F7 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 939B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 939D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 939F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93A1 32 F7 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93A4 18 09            jr 6F
  64+ 93A6 CB 5F        1 bit 3,a
  65+ 93A8 28 0A            jr z,2F
  66+ 93AA E6 F7            and $f7
  67+ 93AC 32 F7 89         ld (Ctrl_0),a
  68+ 93AF CD 02 95     6 call Inicializacion
  69+ 93B2 18 5B            jr 5F
  70+ 93B4 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93B5
  72+ 93B5              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93B5              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93B5
  75+ 93B5 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93B6 2A 07 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93B9 CD 11 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93BC 67           	ld h,a
  79+ 93BD EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93BE CD 11 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93C1 67           	ld h,a
  82+ 93C2 A7           	and a
  83+ 93C3 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93C5 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93C6 3A DD 89     	ld a,(Cuad_objeto)
  86+ 93C9 FE 02        	cp 2
  87+ 93CB 38 1E        	jr c,3F
  88+ 93CD 28 1C        	jr z,3F
  89+ 93CF 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93D0 28 23            jr z,7F
  91+ 93D2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93D4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93D6 E1           	pop hl
  94+ 93D7
  95+ 93D7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93D7              ; _para indicar con E="2" en caso necesario.
  97+ 93D7
  98+ 93D7 E5               push hl
  99+ 93D8 C5               push bc
 100+ 93D9 CD 11 99     	call calcula_tercio
 101+ 93DC FE 01        	cp 1
 102+ 93DE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93E0 CD 10 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93E3 28 26            jr z,9F
 105+ 93E5 38 24            jr c,9F
 106+ 93E7 1E 00        11 ld e,0
 107+ 93E9 18 22            jr 8F
 108+ 93EB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93EC 28 07        	jr z, 7F
 110+ 93EE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93F0 1E 00         	ld e,0
 112+ 93F2 E1           	pop hl
 113+ 93F3 18 04        	jr 4F
 114+ 93F5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93F7 18 15            jr 10F
 116+ 93F9
 117+ 93F9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93F9              ; _para indicar con E="2" en caso necesario.
 119+ 93F9
 120+ 93F9 E5           4 push hl
 121+ 93FA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93FB CD 11 99     	call calcula_tercio
 123+ 93FE FE 01        	cp 1
 124+ 9400 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9402 CD 10 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9405 28 04            jr z,9F
 127+ 9407 30 02            jr nc,9F
 128+ 9409 18 02        	jr 8F
 129+ 940B 1E 02        9 ld e,2
 130+ 940D C1           8 pop bc
 131+ 940E E1           10 pop hl
 132+ 940F C9           5 ret
 133+ 9410
 134+ 9410              ; --------------------
 135+ 9410              ;
 136+ 9410              ; 25/08/22
 137+ 9410
 138+ 9410 CD 11 99     Comprueba_centro call calcula_tercio
 139+ 9413 67               ld h,a
 140+ 9414 08           	ex af,af
 141+ 9415 FE 02        	cp 2
 142+ 9417 38 07        	jr c,1F
 143+ 9419 28 05        	jr z,1F
 144+ 941B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 941E 18 03        	jr 2F
 146+ 9420 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9423 08           2 ex af,af
 148+ 9424 A7               and a
 149+ 9425 ED 42            sbc hl,bc
 150+ 9427 C9               ret
 151+ 9428
 152+ 9428              ; *********************************************************************************************************************************************************************************************
 153+ 9428              ;
 154+ 9428              ;   16/8/22
 155+ 9428              ;
 156+ 9428              ;	Comprueba_limite_vertical
 157+ 9428              ;
 158+ 9428              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9428              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9428              ;
 161+ 9428
 162+ 9428 2A CB 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 942B 7D           	ld a,l
 164+ 942C E6 1F        	and $1F
 165+ 942E 57           	ld d,a
 166+ 942F 3A 09 8A     	ld a,(Limite_vertical)
 167+ 9432 BA           	cp d 											; Límite - Posición.
 168+ 9433 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9434 3A DD 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9437 CB 47        	bit 0,a
 171+ 9439 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 943B
 173+ 943B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 943B
 175+ 943B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 943C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 943E
 178+ 943E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 943E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 943E
 181+ 943E 3A CF 89         ld a,(Coordenada_X)
 182+ 9441 16 0F            ld d,Centro_izquierda
 183+ 9443 A7               and a
 184+ 9444 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9445 28 1E            jr z,3F
 186+ 9447 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9449              ;                                                    ; _salimos sin modificar nada.
 188+ 9449 18 0E            jr 2F
 189+ 944B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 944C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 944E
 192+ 944E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 944E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 944E
 195+ 944E 3A CF 89         ld a,(Coordenada_X)
 196+ 9451 16 10            ld d,Centro_derecha
 197+ 9453 A7               and a
 198+ 9454 92               sub d
 199+ 9455 28 0E            jr z,3F
 200+ 9457 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9459              ;                                                    ; _salimos sin modificar nada.
 202+ 9459 CB 43        2 bit 0,e
 203+ 945B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 945D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 945E CD F2 94         call Modificaccionne
 206+ 9461 C1           	pop bc
 207+ 9462 CD 02 95         call Inicializacion
 208+ 9465 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9466
 210+ 9466              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9466
 212+ 9466 C5           4 push bc
 213+ 9467 01 CA 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 946A 0A           	ld a,(bc)
 215+ 946B 3D           	dec a
 216+ 946C 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 946D 7D           	ld a,l
 218+ 946E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 946F CB 47        	bit 0,a
 220+ 9471 28 03        	jr z,5F
 221+ 9473 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9474 18 2E        	jr 7F
 223+ 9476
 224+ 9476              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9476
 226+ 9476 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9477 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9478 3A F7 89     	ld a,(Ctrl_0)
 229+ 947B CB 4F        	bit 1,a
 230+ 947D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 947F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9480
 233+ 9480              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9480
 235+ 9480 1C               inc e
 236+ 9481 1D               dec e
 237+ 9482 20 07            jr nz,12F
 238+ 9484 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9485 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9486 22 CB 89     	ld (Posicion_actual),hl
 241+ 9489 18 44        13 jr 9F
 242+ 948B CB 43        12 bit 0,e
 243+ 948D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 948F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 948F C1           	pop bc
 246+ 9490 18 D3        	jr 3B
 247+ 9492 80           14 add b
 248+ 9493 6F               ld l,a
 249+ 9494 22 CB 89     	ld (Posicion_actual),hl
 250+ 9497 CD F2 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 949A 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 949C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 949E 32 F7 89         ld (Ctrl_0),a
 254+ 94A1 F1           	pop af
 255+ 94A2 18 2B        	jr 9F
 256+ 94A4
 257+ 94A4              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94A4
 259+ 94A4 F5           7 push af
 260+ 94A5 3A F7 89     	ld a,(Ctrl_0)
 261+ 94A8 CB 47        	bit 0,a
 262+ 94AA 20 1D        	jr nz,8F
 263+ 94AC F1           	pop af
 264+ 94AD
 265+ 94AD              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94AD
 267+ 94AD 1C           	inc e
 268+ 94AE 1D               dec e
 269+ 94AF 20 07            jr nz,10F
 270+ 94B1 90           	sub b
 271+ 94B2 6F               ld l,a
 272+ 94B3 22 CB 89     	ld (Posicion_actual),hl
 273+ 94B6 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94B8              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94B8 CB 43        10 bit 0,e
 276+ 94BA 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94BC              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94BC C1           	pop bc
 279+ 94BD 18 A6        	jr 3B
 280+ 94BF 90           16 sub b
 281+ 94C0 6F               ld l,a
 282+ 94C1 22 CB 89     	ld (Posicion_actual),hl
 283+ 94C4 CD F2 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94C7 18 06            jr 9F
 285+ 94C9 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94CB 32 F7 89         ld (Ctrl_0),a
 287+ 94CE F1           	pop af
 288+ 94CF C1           9 pop bc
 289+ 94D0 1E 00        	ld e,0
 290+ 94D2 CD 02 95         call Inicializacion
 291+ 94D5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94D6 08           	ex af,af
 293+ 94D7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94D8 18 8B            jr 3B
 295+ 94DA
 296+ 94DA              ; --------------------
 297+ 94DA
 298+ 94DA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94DC CD 60 96     1 call PreviousScan
 300+ 94DF 10 FB            djnz 1B
 301+ 94E1 22 CB 89     	ld (Posicion_actual),hl
 302+ 94E4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94E5 C9           	ret
 304+ 94E6
 305+ 94E6              ; --------------------
 306+ 94E6
 307+ 94E6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94E8 CD 51 96     1 call NextScan
 309+ 94EB 10 FB            djnz 1B
 310+ 94ED 22 CB 89     	ld (Posicion_actual),hl
 311+ 94F0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94F1 C9           	ret
 313+ 94F2
 314+ 94F2              ; --------------------
 315+ 94F2              ;
 316+ 94F2              ;	22/01/23
 317+ 94F2              ;
 318+ 94F2              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94F2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94F2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94F2
 322+ 94F2
 323+ 94F2              Modificaccionne
 324+ 94F2
 325+ 94F2 3A DD 89     	ld a,(Cuad_objeto)
 326+ 94F5 FE 02        	cp 2
 327+ 94F7 CC DA 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94FA DC DA 94         call c,Modifica_Pos_actual
 329+ 94FD C8           	ret z
 330+ 94FE CD E6 94         call Modifica_Pos_actual2
 331+ 9501 C9               ret
 332+ 9502
 333+ 9502              ; *************************************************************************************************************************************************************************************************
 334+ 9502              ;
 335+ 9502              ;	13/8/22
 336+ 9502              ;
 337+ 9502              ;	Inicializacion
 338+ 9502              ;
 339+ 9502              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9502              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9502              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9502              ;
 343+ 9502              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9502              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9502              ;	_ desaparece/aparece.
 346+ 9502
 347+ 9502              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9502              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9502              ;
 350+ 9502              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9502              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9502              ; 		   [E] ="0"
 353+ 9502
 354+ 9502              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9502
 356+ 9502 CD 11 99     Inicializacion call calcula_tercio
 357+ 9505 28 36        	jr z,primit
 358+ 9507 E6 02        	and 2
 359+ 9509 20 07        	jr nz,segmit
 360+ 950B 7D           	ld a,l
 361+ 950C FE 7F        	cp $7f
 362+ 950E 38 2D        	jr c,primit
 363+ 9510 28 2B        	jr z,primit
 364+ 9512 CD 6F 95     segmit call column
 365+ 9515 38 13        	jr c,tercuad
 366+ 9517 3E 04        cuarcuad ld a,4
 367+ 9519 32 DD 89     	ld (Cuad_objeto),a
 368+ 951C 21 20 48     	ld hl,$4820
 369+ 951F 22 07 8A     	ld (Limite_horizontal),hl
 370+ 9522 21 09 8A     	ld hl,Limite_vertical
 371+ 9525 36 0D        	ld (hl),$0d
 372+ 9527 08           	ex af,af
 373+ 9528 18 3C        	jr 1F
 374+ 952A              tercuad
 375+ 952A 3E 03        	ld a,3
 376+ 952C 32 DD 89     	ld (Cuad_objeto),a
 377+ 952F 21 20 48     	ld hl,$4820
 378+ 9532 22 07 8A     	ld (Limite_horizontal),hl
 379+ 9535 21 09 8A     	ld hl,Limite_vertical
 380+ 9538 36 12        	ld (hl),$12
 381+ 953A 08           	ex af,af
 382+ 953B 18 29        	jr 1F
 383+ 953D CD 6F 95     primit call column
 384+ 9540 38 13        	jr c, primcuad
 385+ 9542              segcuad
 386+ 9542 3E 02        	ld a,2
 387+ 9544 32 DD 89     	ld (Cuad_objeto),a
 388+ 9547 21 C0 4F     	ld hl,$4fc0
 389+ 954A 22 07 8A     	ld (Limite_horizontal),hl
 390+ 954D 21 09 8A     	ld hl,Limite_vertical
 391+ 9550 36 0D        	ld (hl),$0d
 392+ 9552 08           	ex af,af
 393+ 9553 18 11        	jr 1F
 394+ 9555              primcuad
 395+ 9555 3E 01        	ld a,1
 396+ 9557 32 DD 89     	ld (Cuad_objeto),a
 397+ 955A 21 C0 4F     	ld hl,$4fc0
 398+ 955D 22 07 8A     	ld (Limite_horizontal),hl
 399+ 9560 21 09 8A     	ld hl,Limite_vertical
 400+ 9563 36 12        	ld (hl),$12
 401+ 9565 08           	ex af,af
 402+ 9566 CD 9C 9C     1 call Genera_coordenadas
 403+ 9569 21 F7 89     	ld hl,Ctrl_0
 404+ 956C CB EE        	set 5,(hl)
 405+ 956E C9           	ret
 406+ 956F
 407+ 956F              ; ------------------------------------------------------------------------------------------------------------------
 408+ 956F
 409+ 956F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 956F              ;
 411+ 956F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 956F
 413+ 956F 7D           column ld a,l
 414+ 9570 E6 1F        	and $1f
 415+ 9572 FE 10         	cp $10
 416+ 9574 C9            	ret
 417+ 9575
 418+ 9575              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9575              ;
 420+ 9575              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9575              ;
 422+ 9575              ; 14/12/22
 423+ 9575              ;
 424+ 9575              ;	Modifica: A y BC.
 425+ 9575
 426+ 9575 3A DD 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9578 E6 01        	and 1
 428+ 957A 28 17        	jr z,1F
 429+ 957C
 430+ 957C              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 957C
 432+ 957C 3A CF 89     	ld a,(Coordenada_X)
 433+ 957F 47           	ld b,a
 434+ 9580 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9581 79           	ld a,c
 436+ 9582 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9583 38 08        	jr c,2F
 438+ 9585 47           	ld b,a
 439+ 9586 79           	ld a,c
 440+ 9587 90           	sub b
 441+ 9588 32 06 8A     	ld (Columnas),a
 442+ 958B 18 1B        	jr 4F
 443+ 958D 79           2 ld a,c
 444+ 958E 32 06 8A     	ld (Columnas),a
 445+ 9591 18 15        	jr 4F
 446+ 9593
 447+ 9593              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9593
 449+ 9593 3A CF 89     1 ld a,(Coordenada_X)
 450+ 9596 81           	add c
 451+ 9597 3D           	dec a
 452+ 9598 D6 1F        	sub $1f
 453+ 959A 38 08        	jr c,3F
 454+ 959C 47           	ld b,a
 455+ 959D 79           	ld a,c
 456+ 959E 90           	sub b
 457+ 959F 32 06 8A     	ld (Columnas),a
 458+ 95A2 18 04        	jr 4F
 459+ 95A4 79           3 ld a,c
 460+ 95A5 32 06 8A     	ld (Columnas),a
 461+ 95A8 D9           4 exx
 462+ 95A9 4F           	ld c,a
 463+ 95AA D9           	exx
 464+ 95AB C9            ret
 465+ 95AC
 466+ 95AC              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95AC              ;
 468+ 95AC              ;   19/7/23
 469+ 95AC              ;
 470+ 95AC              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95AC              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95AC              ;
 473+ 95AC              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95AC              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95AC              ;
 476+ 95AC              ;	DESTRUYE: HL,B Y A.
 477+ 95AC
 478+ 95AC 3A DD 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95AF FE 02        	cp 2
 480+ 95B1 38 18        	jr c,1F
 481+ 95B3 28 16        	jr z,1F
 482+ 95B5 E6 01        	and 1
 483+ 95B7 28 0D        	jr z,3F
 484+ 95B9
 485+ 95B9              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95B9
 487+ 95B9 CD FF 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95BC
 489+ 95BC 7D           9 ld a,l
 490+ 95BD E6 1F        	and $1f
 491+ 95BF 28 2A        	jr z,7F
 492+ 95C1 2B           	dec hl
 493+ 95C2 10 F8        	djnz 9B
 494+ 95C4 18 25        	jr 7F
 495+ 95C6
 496+ 95C6              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95C6
 498+ 95C6 2A CB 89     3 ld hl,(Posicion_actual)
 499+ 95C9 18 20        	jr 7F
 500+ 95CB
 501+ 95CB 28 14        1 jr z,2F
 502+ 95CD
 503+ 95CD              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95CD
 505+ 95CD CD FF 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95D0
 507+ 95D0 7D           4 ld a,l
 508+ 95D1 E6 1F        	and $1f
 509+ 95D3 28 03        	jr z,6F
 510+ 95D5 2B           	dec hl
 511+ 95D6 10 F8        	djnz 4B
 512+ 95D8 06 0F        6 ld b,15
 513+ 95DA CD 60 96     5 call PreviousScan
 514+ 95DD 10 FB        	djnz 5B
 515+ 95DF 18 0A        	jr 7F
 516+ 95E1
 517+ 95E1              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95E1
 519+ 95E1 CD FF 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95E4 06 0F        	ld b,15
 521+ 95E6 CD 60 96     8 call PreviousScan
 522+ 95E9 10 FB        	djnz 8B
 523+ 95EB
 524+ 95EB E5           7 push hl
 525+ 95EC DD E1        	pop ix
 526+ 95EE
 527+ 95EE 2A CD 89     	ld hl,(Puntero_objeto)
 528+ 95F1 E5           	push hl
 529+ 95F2 FD E1        	pop iy
 530+ 95F4
 531+ 95F4              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95F4
 533+ 95F4 3A F7 89     	ld a,(Ctrl_0)
 534+ 95F7 CB 77        	bit 6,a
 535+ 95F9 C8           	ret z
 536+ 95FA
 537+ 95FA              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95FA              ; _ entidad / Amadeus´.
 539+ 95FA
 540+ 95FA DD 22 41 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95FE
 542+ 95FE C9           	ret
 543+ 95FF
 544+ 95FF              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95FF              ;
 546+ 95FF              ;	2/1/23
 547+ 95FF              ;
 548+ 95FF              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95FF              ;
 550+ 95FF              ;	Tras esta rutina tenemos:
 551+ 95FF              ;
 552+ 95FF              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95FF              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95FF              ;
 555+ 95FF              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95FF
 557+ 95FF 2A CB 89     Operandos ld hl,(Posicion_actual)
 558+ 9602 3A 06 8A     	ld a,(Columnas)
 559+ 9605 3D           	dec a
 560+ 9606 20 01        	jr nz,1F
 561+ 9608 3C           	inc a
 562+ 9609 47           1 ld b,a
 563+ 960A C9           	ret
 564+ 960B
 565+ 960B              ; --------------------------------------------------------------------------------------------------------------------
 566+ 960B              ;
 567+ 960B              ;	3/1/23
 568+ 960B              ;
 569+ 960B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 960B              ;
 571+ 960B              ;	Destruye: A,B,HL y DE.
 572+ 960B
 573+ 960B              Define_rutina_de_impresion
 574+ 960B
 575+ 960B 3A CA 89     	ld a,(Columns)
 576+ 960E 47           	ld b,a
 577+ 960F 3A 06 8A     	ld a,(Columnas)
 578+ 9612 B8           	cp b
 579+ 9613 20 0D        	jr nz,2f
 580+ 9615
 581+ 9615              ;	La entidad se imprime entera.
 582+ 9615
 583+ 9615 21 E1 96     	ld hl, Indice_entidades_completas
 584+ 9618 E6 01        	and 1
 585+ 961A 28 02        	jr z,1F
 586+ 961C
 587+ 961C 23           	inc hl
 588+ 961D 23           	inc hl
 589+ 961E
 590+ 961E CD 41 8D     1 call Extrae_address
 591+ 9621 C9           	ret		;	ret
 592+ 9622
 593+ 9622              ;	La entidad no se imprime entera en pantalla.
 594+ 9622
 595+ 9622 3A DD 89     2 ld a,(Cuad_objeto)
 596+ 9625 E6 01        	and 1
 597+ 9627 28 17        	jr z,3F
 598+ 9629
 599+ 9629              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9629
 601+ 9629 21 E5 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 962C 3A CA 89     4 ld a,(Columns)
 603+ 962F E6 01        	and 1
 604+ 9631 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9633
 606+ 9633 23           	inc hl
 607+ 9634 23           	inc hl
 608+ 9635
 609+ 9635 3A 06 8A     	ld a,(Columnas)
 610+ 9638 E6 01        	and 1
 611+ 963A 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 963C
 613+ 963C 23           	inc hl
 614+ 963D 23           	inc hl
 615+ 963E
 616+ 963E 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9640
 618+ 9640 21 EB 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9643 18 E7        	jr 4B
 620+ 9645
 621+ 9645              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9645              ;
 623+ 9645              ;	Prepara_draw
 624+ 9645              ;
 625+ 9645              ;	Es una rutina de carga.
 626+ 9645              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9645              ;
 628+ 9645              ;	FUNCIONAMIENTO:
 629+ 9645              ;
 630+ 9645              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9645              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9645              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9645              ;
 634+ 9645              ;	DESTRUYE:
 635+ 9645              ;
 636+ 9645              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9645
 638+ 9645 21 C9 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9648 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9649 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 964A 4E           	ld c,(hl)
 642+ 964B 2A CB 89     	ld hl,(Posicion_actual)
 643+ 964E 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9650 C9           	ret
 645+ 9651
 646+ 9651              ;----------------------------------------------------------------------------------------------------------------
 647+ 9651              ;
 648+ 9651              ;	5/08/22
 649+ 9651              ;
 650+ 9651              ;   NextScan.
 651+ 9651              ;
 652+ 9651              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9651              ;
 654+ 9651              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9651              ;
 656+ 9651              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9651              ;
 658+ 9651              ;       DESTRUIDOS: AF y HL !!!
 659+ 9651              ;
 660+ 9651              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9651              ;
 662+ 9651
 663+ 9651 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9652 7C               ld a,h
 665+ 9653 E6 07            and 7
 666+ 9655 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9656
 668+ 9656 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9657 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9659 6F               ld l,a
 671+ 965A D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 965B
 673+ 965B 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 965C D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 965E 67               ld h,a
 676+ 965F C9               ret
 677+ 9660
 678+ 9660              ;----------------------------------------------------------------------------------------------------------------
 679+ 9660              ;
 680+ 9660              ;	5/08/22
 681+ 9660              ;
 682+ 9660              ;   PreviousScan.
 683+ 9660              ;
 684+ 9660              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9660              ;
 686+ 9660              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9660              ;
 688+ 9660              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9660              ;
 690+ 9660              ;       DESTRUIDOS: AF y HL !!!
 691+ 9660              ;
 692+ 9660              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9660              ;
 694+ 9660
 695+ 9660 7C           PreviousScan ld a,h
 696+ 9661 25               dec h               ; Dec H.
 697+ 9662 E6 07            and 7
 698+ 9664 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9665
 700+ 9665 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9666 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9668 6F               ld l,a
 703+ 9669 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 966A
 705+ 966A 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 966B C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 966D 67               ld h,a
 708+ 966E C9               ret
 709+ 966F
 710+ 966F              ; -----------------------------------------------------------------------------------
 711+ 966F              ;
 712+ 966F              ;	31/7/23
 713+ 966F              ;
 714+ 966F              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 966F              ;	Extrae fotos de Album_de_fotos.
 716+ 966F
 717+ 966F              Extrae_foto_entidades
 718+ 966F
 719+ 966F 3A 18 8A     	ld a,(Numero_de_malotes)												; Salimos si no hay MOVIMIENTO.
 720+ 9672 A7           	and a
 721+ 9673 C8           	ret z
 722+ 9674
 723+ 9674              ; -----------------------------------
 724+ 9674
 725+ 9674 ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 726+ 9678 31 00 70     	ld sp,Album_de_fotos
 727+ 967B
 728+ 967B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 729+ 967D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 730+ 967E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 731+ 967F
 732+ 967F ED 73 1F 8A  	ld (Stack_2),sp
 733+ 9683 ED 7B 1D 8A  	ld sp,(Stack)
 734+ 9687
 735+ 9687              ; Fabrica la llamada a la correspondiente rutina de impresión.
 736+ 9687
 737+ 9687 3E CD        	ld a,$cd
 738+ 9689 32 91 96     	ld (Imprime),a
 739+ 968C EB           	ex de,hl
 740+ 968D 22 92 96     	ld (Imprime+1),hl
 741+ 9690 EB           	ex de,hl
 742+ 9691
 743+ 9691              ; Ejecuta la llamada:	CALL $xx,xx
 744+ 9691
 745+ 9691 00 00 00     Imprime db 0,0,0
 746+ 9694
 747+ 9694 3A 18 8A     	ld a,(Numero_de_malotes)
 748+ 9697 3D           	dec a
 749+ 9698 28 09        	jr z,1F
 750+ 969A 32 18 8A      	ld (Numero_de_malotes),a
 751+ 969D
 752+ 969D ED 7B 1F 8A   	ld sp,(Stack_2)
 753+ 96A1 18 D8        	jr 2B
 754+ 96A3
 755+ 96A3 AF           1 xor a
 756+ 96A4 32 1F 8A     	ld (Stack_2),a
 757+ 96A7 C9           	ret
 758+ 96A8
 759+ 96A8              ; -----------------------------------------------------------------------------------
 760+ 96A8              ;
 761+ 96A8              ;	28/2/23
 762+ 96A8              ;
 763+ 96A8              ;	Pinta los disparos generados.
 764+ 96A8
 765+ 96A8              Extrae_foto_disparos
 766+ 96A8
 767+ 96A8 3A 31 8A     	ld a,(Numero_de_disparotes)
 768+ 96AB A7           	and a
 769+ 96AC C8           	ret z
 770+ 96AD ED 73 1D 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 771+ 96B1 31 11 72     	ld sp,Album_de_fotos_disparos
 772+ 96B4
 773+ 96B4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 774+ 96B6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 775+ 96B7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 776+ 96B8
 777+ 96B8 ED 73 1F 8A  	ld (Stack_2),sp
 778+ 96BC ED 7B 1D 8A  	ld sp,(Stack)
 779+ 96C0
 780+ 96C0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 781+ 96C0
 782+ 96C0 3E CD        	ld a,$cd
 783+ 96C2 32 CA 96     	ld (Imprime2),a
 784+ 96C5 EB           	ex de,hl
 785+ 96C6 22 CB 96     	ld (Imprime2+1),hl
 786+ 96C9 EB           	ex de,hl
 787+ 96CA
 788+ 96CA              ; Ejecuta la llamada:	CALL $xx,xx
 789+ 96CA
 790+ 96CA 00 00 00     Imprime2 db 0,0,0
 791+ 96CD
 792+ 96CD 3A 31 8A     	ld a,(Numero_de_disparotes)
 793+ 96D0 3D           	dec a
 794+ 96D1 28 09        	jr z,1F
 795+ 96D3 32 31 8A      	ld (Numero_de_disparotes),a
 796+ 96D6
 797+ 96D6 ED 7B 1F 8A  	ld sp,(Stack_2)
 798+ 96DA 18 D8        	jr 2B
 799+ 96DC
 800+ 96DC AF           1 xor a
 801+ 96DD 32 1F 8A     	ld (Stack_2),a
 802+ 96E0 C9           	ret
 803+ 96E1
# file closed: Draw_XOR.asm
1294  96E1              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96E1              ;   índices de Rutinas de impresión.
   2+ 96E1
   3+ 96E1 F1 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96E3 1E 97            defw Pinta_Amadeus_3x2
   5+ 96E5
   6+ 96E5 74 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96E7 14 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96E9 C8 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96EB
  10+ 96EB 9E 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96ED A2 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96EF 56 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96F1
  14+ 96F1
  15+ 96F1              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96F1              ;
  17+ 96F1              ;   12/12/22
  18+ 96F1              ;
  19+ 96F1              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96F1              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96F1              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96F1              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96F1              ;
  24+ 96F1              ;   Modifica: DE y HL.
  25+ 96F1
  26+ 96F1 ED 73 1D 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96F5 FD F9        	ld sp,iy
  28+ 96F7 06 10            ld b,16
  29+ 96F9 D1           1 pop de
  30+ 96FA 7B               ld a,e
  31+ 96FB AE               xor (hl)
  32+ 96FC 77           	ld (hl),a
  33+ 96FD 23           	inc hl
  34+ 96FE 7A               ld a,d
  35+ 96FF AE               xor (hl)
  36+ 9700 77           	ld (hl),a
  37+ 9701 2B           	dec hl
  38+ 9702 24           	inc h
  39+ 9703 7C               ld a,h
  40+ 9704 E6 07            and 7
  41+ 9706 20 0A            jr nz,2F
  42+ 9708 7D               ld a,l
  43+ 9709 C6 20            add a,$20
  44+ 970B 6F               ld l,a
  45+ 970C 38 04            jr c,2F
  46+ 970E 7C               ld a,h
  47+ 970F D6 08            sub 8
  48+ 9711 67               ld h,a
  49+ 9712 7C           2 ld a,h
  50+ 9713 FE 58            cp $58
  51+ 9715 28 02            jr z,3F
  52+ 9717 10 E0            djnz 1B
  53+ 9719 ED 7B 1D 8A  3 ld sp,(Stack)
  54+ 971D C9           	ret
  55+ 971E
  56+ 971E ED 73 1D 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9722 FD F9        	ld sp,iy
  58+ 9724 06 08            ld b,8
  59+ 9726 D1           1 pop de
  60+ 9727 7B               ld a,e
  61+ 9728 AE               xor (hl)
  62+ 9729 77           	ld (hl),a
  63+ 972A 23           	inc hl
  64+ 972B 7A               ld a,d
  65+ 972C AE               xor (hl)
  66+ 972D 77           	ld (hl),a
  67+ 972E 23           	inc hl
  68+ 972F D1           	pop de
  69+ 9730 7B               ld a,e
  70+ 9731 AE               xor (hl)
  71+ 9732 77           	ld (hl),a
  72+ 9733 2B           	dec hl
  73+ 9734 2B           	dec hl
  74+ 9735 24           	inc h
  75+ 9736 7C               ld a,h
  76+ 9737 E6 07            and 7
  77+ 9739 20 0A            jr nz,2F
  78+ 973B 7D               ld a,l
  79+ 973C C6 20            add a,$20
  80+ 973E 6F               ld l,a
  81+ 973F 38 04            jr c,2F
  82+ 9741 7C               ld a,h
  83+ 9742 D6 08            sub 8
  84+ 9744 67               ld h,a
  85+ 9745 7C           2 ld a,h
  86+ 9746 FE 58            cp $58
  87+ 9748 28 25            jr z,4F
  88+ 974A 7A               ld a,d
  89+ 974B AE               xor (hl)
  90+ 974C 77               ld (hl),a
  91+ 974D D1           	pop de
  92+ 974E 23           	inc hl
  93+ 974F 7B               ld a,e
  94+ 9750 AE               xor (hl)
  95+ 9751 77           	ld (hl),a
  96+ 9752 23           	inc hl
  97+ 9753 7A               ld a,d
  98+ 9754 AE               xor (hl)
  99+ 9755 77           	ld (hl),a
 100+ 9756 2B           	dec hl
 101+ 9757 2B           	dec hl
 102+ 9758 24           	inc h
 103+ 9759 7C               ld a,h
 104+ 975A E6 07            and 7
 105+ 975C 20 0A            jr nz,3F
 106+ 975E 7D               ld a,l
 107+ 975F C6 20            add a,$20
 108+ 9761 6F               ld l,a
 109+ 9762 38 04            jr c,3F
 110+ 9764 7C               ld a,h
 111+ 9765 D6 08            sub 8
 112+ 9767 67               ld h,a
 113+ 9768 7C           3 ld a,h
 114+ 9769 FE 58            cp $58
 115+ 976B 28 02            jr z,4F
 116+ 976D 10 B7            djnz 1B
 117+ 976F ED 7B 1D 8A  4 ld sp,(Stack)
 118+ 9773 C9           	ret
 119+ 9774
 120+ 9774              ; ---------------------------------------------------
 121+ 9774
 122+ 9774 ED 73 1D 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9778 FD F9        	ld sp,iy
 124+ 977A
 125+ 977A              ; >>>
 126+ 977A
 127+ 977A 06 10            ld b,16
 128+ 977C D1           1 pop de
 129+ 977D 7A           	ld a,d
 130+ 977E AE           	xor (hl)
 131+ 977F 77           	ld (hl),a
 132+ 9780 24           	inc h
 133+ 9781 7C               ld a,h
 134+ 9782 E6 07            and 7
 135+ 9784 20 0C            jr nz,2F
 136+ 9786 7D               ld a,l
 137+ 9787 C6 20            add a,$20
 138+ 9789 6F               ld l,a
 139+ 978A 38 06            jr c,2F
 140+ 978C 7C               ld a,h
 141+ 978D D6 08            sub 8
 142+ 978F 67               ld h,a
 143+ 9790 18 00            jr 2F
 144+ 9792 7C           2 ld a,h
 145+ 9793 FE 58            cp $58
 146+ 9795 28 02            jr z,3F
 147+ 9797 10 E3            djnz 1B
 148+ 9799 ED 7B 1D 8A  3 ld sp,(Stack)
 149+ 979D C9           	ret
 150+ 979E
 151+ 979E ED 73 1D 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97A2 FD F9        	ld sp,iy
 153+ 97A4
 154+ 97A4              ; >>>
 155+ 97A4
 156+ 97A4 06 10            ld b,16
 157+ 97A6 D1           1 pop de
 158+ 97A7 7B           	ld a,e
 159+ 97A8 AE           	xor (hl)
 160+ 97A9 77           	ld (hl),a
 161+ 97AA 24           	inc h
 162+ 97AB 7C               ld a,h
 163+ 97AC E6 07            and 7
 164+ 97AE 20 0C            jr nz,2F
 165+ 97B0 7D               ld a,l
 166+ 97B1 C6 20            add a,$20
 167+ 97B3 6F               ld l,a
 168+ 97B4 38 06            jr c,2F
 169+ 97B6 7C               ld a,h
 170+ 97B7 D6 08            sub 8
 171+ 97B9 67               ld h,a
 172+ 97BA 18 00            jr 2F
 173+ 97BC 7C           2 ld a,h
 174+ 97BD FE 58            cp $58
 175+ 97BF 28 02            jr z,3F
 176+ 97C1 10 E3            djnz 1B
 177+ 97C3 ED 7B 1D 8A  3 ld sp,(Stack)
 178+ 97C7 C9           	ret
 179+ 97C8
 180+ 97C8              ; ---------------------------------------------------
 181+ 97C8
 182+ 97C8 ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97CC FD F9        	ld sp,iy
 184+ 97CE 06 08            ld b,8
 185+ 97D0 D1           1 pop de
 186+ 97D1 7A           	ld a,d
 187+ 97D2 AE           	xor (hl)
 188+ 97D3 77           	ld (hl),a
 189+ 97D4 23           	inc hl
 190+ 97D5 D1           	pop de
 191+ 97D6 7B           	ld a,e
 192+ 97D7 AE           	xor (hl)
 193+ 97D8 77           	ld (hl),a
 194+ 97D9 2B           	dec hl
 195+ 97DA 24            	inc h
 196+ 97DB 7C               ld a,h
 197+ 97DC E6 07            and 7
 198+ 97DE 20 0A            jr nz,2F
 199+ 97E0 7D               ld a,l
 200+ 97E1 C6 20            add a,$20
 201+ 97E3 6F               ld l,a
 202+ 97E4 38 04            jr c,2F
 203+ 97E6 7C               ld a,h
 204+ 97E7 D6 08            sub 8
 205+ 97E9 67               ld h,a
 206+ 97EA 7C           2 ld a,h
 207+ 97EB FE 58            cp $58
 208+ 97ED 28 20            jr z,4F
 209+ 97EF D1               pop de
 210+ 97F0 7B           	ld a,e
 211+ 97F1 AE           	xor (hl)
 212+ 97F2 77           	ld (hl),a
 213+ 97F3 23           	inc hl
 214+ 97F4 7A           	ld a,d
 215+ 97F5 AE           	xor (hl)
 216+ 97F6 77           	ld (hl),a
 217+ 97F7 2B           	dec hl
 218+ 97F8 24           	inc h
 219+ 97F9 7C               ld a,h
 220+ 97FA E6 07            and 7
 221+ 97FC 20 0A            jr nz,3F
 222+ 97FE 7D               ld a,l
 223+ 97FF C6 20            add a,$20
 224+ 9801 6F               ld l,a
 225+ 9802 38 04            jr c,3F
 226+ 9804 7C               ld a,h
 227+ 9805 D6 08            sub 8
 228+ 9807 67               ld h,a
 229+ 9808 7C           3 ld a,h
 230+ 9809 FE 58            cp $58
 231+ 980B 28 02            jr z,4F
 232+ 980D 10 C1            djnz 1B
 233+ 980F ED 7B 1D 8A  4 ld sp,(Stack)
 234+ 9813 C9           	ret
 235+ 9814
 236+ 9814 ED 73 1D 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9818 FD F9        	ld sp,iy
 238+ 981A 06 08            ld b,8
 239+ 981C D1           1 pop de
 240+ 981D D1           	pop de
 241+ 981E 7B           	ld a,e
 242+ 981F AE           	xor (hl)
 243+ 9820 77           	ld (hl),a
 244+ 9821 24            	inc h
 245+ 9822 7C               ld a,h
 246+ 9823 E6 07            and 7
 247+ 9825 20 0A            jr nz,2F
 248+ 9827 7D               ld a,l
 249+ 9828 C6 20            add a,$20
 250+ 982A 6F               ld l,a
 251+ 982B 38 04            jr c,2F
 252+ 982D 7C               ld a,h
 253+ 982E D6 08            sub 8
 254+ 9830 67               ld h,a
 255+ 9831 7C           2 ld a,h
 256+ 9832 FE 58            cp $58
 257+ 9834 28 1B            jr z,4F
 258+ 9836 D1               pop de
 259+ 9837 7A           	ld a,d
 260+ 9838 AE           	xor (hl)
 261+ 9839 77           	ld (hl),a
 262+ 983A 24           	inc h
 263+ 983B 7C               ld a,h
 264+ 983C E6 07            and 7
 265+ 983E 20 0A            jr nz,3F
 266+ 9840 7D               ld a,l
 267+ 9841 C6 20            add a,$20
 268+ 9843 6F               ld l,a
 269+ 9844 38 04            jr c,3F
 270+ 9846 7C               ld a,h
 271+ 9847 D6 08            sub 8
 272+ 9849 67               ld h,a
 273+ 984A 7C           3 ld a,h
 274+ 984B FE 58            cp $58
 275+ 984D 28 02            jr z,4F
 276+ 984F 10 CB            djnz 1B
 277+ 9851 ED 7B 1D 8A  4 ld sp,(Stack)
 278+ 9855 C9           	ret
 279+ 9856
 280+ 9856 ED 73 1D 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 985A FD F9        	ld sp,iy
 282+ 985C 06 08            ld b,8
 283+ 985E D1           1 pop de
 284+ 985F 7B           	ld a,e
 285+ 9860 AE           	xor (hl)
 286+ 9861 77           	ld (hl),a
 287+ 9862 23           	inc hl
 288+ 9863 7A           	ld a,d
 289+ 9864 AE           	xor (hl)
 290+ 9865 77           	ld (hl),a
 291+ 9866 2B           	dec hl
 292+ 9867 24             	inc h
 293+ 9868 7C               ld a,h
 294+ 9869 E6 07            and 7
 295+ 986B 20 0A            jr nz,2F
 296+ 986D 7D               ld a,l
 297+ 986E C6 20            add a,$20
 298+ 9870 6F               ld l,a
 299+ 9871 38 04            jr c,2F
 300+ 9873 7C               ld a,h
 301+ 9874 D6 08            sub 8
 302+ 9876 67               ld h,a
 303+ 9877 7C           2 ld a,h
 304+ 9878 FE 58            cp $58
 305+ 987A 28 21            jr z,4F
 306+ 987C D1               pop de
 307+ 987D 7A           	ld a,d
 308+ 987E AE           	xor (hl)
 309+ 987F 77           	ld (hl),a
 310+ 9880 23           	inc hl
 311+ 9881 D1               pop de
 312+ 9882 7B           	ld a,e
 313+ 9883 AE           	xor (hl)
 314+ 9884 77           	ld (hl),a
 315+ 9885 2B           	dec hl
 316+ 9886 24           	inc h
 317+ 9887 7C               ld a,h
 318+ 9888 E6 07            and 7
 319+ 988A 20 0A            jr nz,3F
 320+ 988C 7D               ld a,l
 321+ 988D C6 20            add a,$20
 322+ 988F 6F               ld l,a
 323+ 9890 38 04            jr c,3F
 324+ 9892 7C               ld a,h
 325+ 9893 D6 08            sub 8
 326+ 9895 67               ld h,a
 327+ 9896 7C           3 ld a,h
 328+ 9897 FE 58            cp $58
 329+ 9899 28 02            jr z,4F
 330+ 989B 10 C1            djnz 1B
 331+ 989D ED 7B 1D 8A  4 ld sp,(Stack)
 332+ 98A1 C9           	ret
 333+ 98A2
 334+ 98A2 ED 73 1D 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98A6 FD F9        	ld sp,iy
 336+ 98A8 06 08            ld b,8
 337+ 98AA D1           1 pop de
 338+ 98AB 7B           	ld a,e
 339+ 98AC AE           	xor (hl)
 340+ 98AD 77           	ld (hl),a
 341+ 98AE 24            	inc h
 342+ 98AF 7C               ld a,h
 343+ 98B0 E6 07            and 7
 344+ 98B2 20 0A            jr nz,2F
 345+ 98B4 7D               ld a,l
 346+ 98B5 C6 20            add a,$20
 347+ 98B7 6F               ld l,a
 348+ 98B8 38 04            jr c,2F
 349+ 98BA 7C               ld a,h
 350+ 98BB D6 08            sub 8
 351+ 98BD 67               ld h,a
 352+ 98BE 7C           2 ld a,h
 353+ 98BF FE 58            cp $58
 354+ 98C1 28 1C            jr z,4F
 355+ 98C3 D1               pop de
 356+ 98C4 7A           	ld a,d
 357+ 98C5 AE           	xor (hl)
 358+ 98C6 77           	ld (hl),a
 359+ 98C7 24           	inc h
 360+ 98C8 7C               ld a,h
 361+ 98C9 E6 07            and 7
 362+ 98CB 20 0A            jr nz,3F
 363+ 98CD 7D               ld a,l
 364+ 98CE C6 20            add a,$20
 365+ 98D0 6F               ld l,a
 366+ 98D1 38 04            jr c,3F
 367+ 98D3 7C               ld a,h
 368+ 98D4 D6 08            sub 8
 369+ 98D6 67               ld h,a
 370+ 98D7 7C           3 ld a,h
 371+ 98D8 FE 58            cp $58
 372+ 98DA 28 03            jr z,4F
 373+ 98DC D1               pop de
 374+ 98DD 10 CB            djnz 1B
 375+ 98DF ED 7B 1D 8A  4 ld sp,(Stack)
 376+ 98E3 C9           	ret
 377+ 98E4
 378+ 98E4              ; ---------------------------------------------------
 379+ 98E4              ;
 380+ 98E4              ;   27/02/23
 381+ 98E4              ;
 382+ 98E4              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98E4              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98E4              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98E4
 386+ 98E4 ED 73 1D 8A  Pinta_Disparo ld (Stack),sp
 387+ 98E8 FD F9            ld sp,iy
 388+ 98EA 06 03            ld b,3
 389+ 98EC D1           1 pop de
 390+ 98ED 7B               ld a,e
 391+ 98EE AE               xor (hl)
 392+ 98EF 77               ld (hl),a
 393+ 98F0 23               inc hl
 394+ 98F1 7A               ld a,d
 395+ 98F2 AE               xor (hl)
 396+ 98F3 77               ld (hl),a
 397+ 98F4 2B               dec hl
 398+ 98F5
 399+ 98F5 24               inc h
 400+ 98F6 7C               ld a,h
 401+ 98F7 E6 07            and 7
 402+ 98F9 20 0A            jr nz,2F
 403+ 98FB 7D               ld a,l
 404+ 98FC C6 20            add a,$20
 405+ 98FE 6F               ld l,a
 406+ 98FF 38 04            jr c,2F
 407+ 9901 7C               ld a,h
 408+ 9902 D6 08            sub 8
 409+ 9904 67               ld h,a
 410+ 9905 7C           2 ld a,h
 411+ 9906 FE 58            cp $58
 412+ 9908 28 02            jr z,3F
 413+ 990A
 414+ 990A 10 E0            djnz 1B
 415+ 990C ED 7B 1D 8A  3 ld sp,(Stack)
 416+ 9910 C9               ret
 417+ 9911
# file closed: Rutinas_de_impresion_sprites.asm
1295  9911              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9911              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9911              ;
   3+ 9911              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9911              ;
   5+ 9911              ; *****************************************************************************************************************************************************************************************
   6+ 9911              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9911
   8+ 9911 7C           calcula_tercio ld a,h
   9+ 9912 E6 18        	and $18
  10+ 9914 CB 2F        	sra a
  11+ 9916 CB 2F        	sra a
  12+ 9918 CB 2F        	sra a
  13+ 991A C9           	ret
  14+ 991B
# file closed: calcula_tercio.asm
1296  991B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 991B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 991B              ;
   3+ 991B              ;
   4+ 991B              ;	CLS.
   5+ 991B              ;
   6+ 991B              ;	Limpia la pantalla y define sus atributos.
   7+ 991B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 991B              ;
   9+ 991B              ;	COLORES: 0 ..... NEGRO
  10+ 991B              ;    		 1 ..... AZUL
  11+ 991B              ; 			 2 ..... ROJO
  12+ 991B              ;			 3 ..... MAGENTA
  13+ 991B              ; 			 4 ..... VERDE
  14+ 991B              ; 			 5 ..... CIAN
  15+ 991B              ;			 6 ..... AMARILLO
  16+ 991B              ; 			 7 ..... BLANCO
  17+ 991B              ;
  18+ 991B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 991B              ;
  20+ 991B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 991B
  22+ 991B
  23+ 991B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 991E 11 01 40     	LD DE,$4001
  25+ 9921 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9924 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9926 ED B0        	LDIR
  28+ 9928 01 FF 02     	LD BC,767
  29+ 992B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 992C ED B0        	LDIR
  31+ 992E C9           	ret
  32+ 992F
# file closed: Cls.asm
1297  992F              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 992F              ; ******************************************************************************************************************************************************************************************
   2+ 992F              ;
   3+ 992F              ;   20/05/23
   4+ 992F              ;
   5+ 992F              ;	Recompone_posicion_inicio
   6+ 992F              ;
   7+ 992F              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 992F              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 992F              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 992F              ;	_ a una u otra rutina.
  11+ 992F
  12+ 992F              Recompone_posicion_inicio
  13+ 992F
  14+ 992F 2A DB 89     	ld hl,(Posicion_inicio)
  15+ 9932 7D           	ld a,l
  16+ 9933 E6 1F        	and $1f
  17+ 9935 28 16        	jr z,1F
  18+ 9937
  19+ 9937 FE 1F        	cp $1f
  20+ 9939 28 0D        	jr z,3F
  21+ 993B
  22+ 993B 21 0A 8A     	ld hl,Ctrl_2
  23+ 993E CB C6        	set 0,(hl)
  24+ 9940 2A CD 89     	ld hl,(Puntero_objeto)
  25+ 9943 22 0D 8A     	ld (Repone_puntero_objeto),hl
  26+ 9946 18 08        	jr 2F
  27+ 9948
  28+ 9948 CD E9 9A     3 call Mov_left
  29+ 994B 18 03        	jr 2F
  30+ 994D
  31+ 994D CD CB 99     1 call Mov_right
  32+ 9950 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9953 22 CD 89     	ld (Puntero_objeto),hl
  34+ 9956 C9           	ret
  35+ 9957
  36+ 9957              ; ******************************************************************************************************************************************************************************************
  37+ 9957              ;
  38+ 9957              ;   27/05/23
  39+ 9957              ;
  40+ 9957              ;	Mov_down
  41+ 9957              ;
  42+ 9957              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9957              ;
  44+ 9957              ;
  45+ 9957              Mov_down
  46+ 9957
  47+ 9957 CD B9 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 995A              ;																	; _ repone (Puntero_objeto).
  49+ 995A 21 F7 89     	ld hl,Ctrl_0
  50+ 995D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 995F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 995F              ; 																	; _ en el caso de que no lo haya.
  53+ 995F 3A E1 89     	ld a,(Vel_down)
  54+ 9962 47           	ld b,a
  55+ 9963 2A CB 89         ld hl,(Posicion_actual)
  56+ 9966 CD 11 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9969 E6 02        	and 2
  58+ 996B 28 0F        	jr z,1F
  59+ 996D
  60+ 996D              ; Nos encontramos en el último tercio de pantalla.
  61+ 996D              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 996D
  63+ 996D 7C           	ld a,h
  64+ 996E FE 57        	cp $57
  65+ 9970 20 0A        	jr nz,1F
  66+ 9972
  67+ 9972 7D           	ld a,l
  68+ 9973 C6 20        	add $20
  69+ 9975 30 05        	jr nc,1F
  70+ 9977
  71+ 9977              ; ------------------------------
  72+ 9977              ;	call Reaparece_arriba
  73+ 9977 CD 76 9C     	call Reinicio
  74+ 997A              ; ------------------------------
  75+ 997A
  76+ 997A 18 08        	jr 3F
  77+ 997C CD 51 96     1 call NextScan
  78+ 997F 22 CB 89     	ld (Posicion_actual),hl
  79+ 9982 10 E2            djnz 2B
  80+ 9984 CD 9C 9C     3 call Genera_coordenadas
  81+ 9987 C9           	ret
  82+ 9988
  83+ 9988              ; ******************************************************************************************************************************************************************************************
  84+ 9988              ;
  85+ 9988              ;   27/05/23
  86+ 9988              ;
  87+ 9988              ;	Mov_up
  88+ 9988              ;
  89+ 9988              ; 	Mueve el Sprite hacia arriba.
  90+ 9988              ;
  91+ 9988              ;
  92+ 9988              Mov_up
  93+ 9988
  94+ 9988 CD B9 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 998B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 998B 21 F7 89     	ld hl,Ctrl_0
  97+ 998E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9990              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9990              ; 																		; _ en el caso de que no lo haya.
 100+ 9990 3A E0 89     	ld a,(Vel_up)
 101+ 9993 47           	ld b,a
 102+ 9994 2A CB 89     	ld hl,(Posicion_actual)
 103+ 9997 CD 11 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 999A A7           	and a
 105+ 999B 20 10        	jr nz,1F
 106+ 999D
 107+ 999D              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 999D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 999D
 110+ 999D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 999E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99A0 20 0B            jr nz,1F
 113+ 99A2 7D               ld a,l
 114+ 99A3 D6 20            sub $20
 115+ 99A5 30 06            jr nc,1F
 116+ 99A7 25               dec h
 117+ 99A8
 118+ 99A8              ; -----------------------------
 119+ 99A8 CD 57 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99AB              ;	call Reinicio
 121+ 99AB              ; -----------------------------
 122+ 99AB
 123+ 99AB 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99AD CD 60 96     1 call PreviousScan
 125+ 99B0 22 CB 89     	ld (Posicion_actual),hl
 126+ 99B3 10 E2            djnz 3B
 127+ 99B5 CD 9C 9C     2 call Genera_coordenadas
 128+ 99B8 C9           	ret
 129+ 99B9
 130+ 99B9              ; -----------------------------
 131+ 99B9              ;
 132+ 99B9              ;	27/5/23
 133+ 99B9              ;
 134+ 99B9              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99B9              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99B9              ;
 137+ 99B9              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99B9              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99B9              ;
 140+ 99B9              ;	Modifica: A y (Puntero_objeto).
 141+ 99B9
 142+ 99B9 3A 0A 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99BC CB 47        	bit 0,a
 144+ 99BE C8           	ret z
 145+ 99BF CB 87        	res 0,a
 146+ 99C1 32 0A 8A     	ld (Ctrl_2),a
 147+ 99C4 2A 0D 8A     	ld hl,(Repone_puntero_objeto)
 148+ 99C7 22 CD 89     	ld (Puntero_objeto),hl
 149+ 99CA C9           	ret
 150+ 99CB
 151+ 99CB              ; ******************************************************************************************************************************************************************************************
 152+ 99CB              ;
 153+ 99CB              ;	19/10/22
 154+ 99CB              ;
 155+ 99CB              ;	Mov_right.
 156+ 99CB              ;
 157+ 99CB              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99CB              ;
 159+ 99CB
 160+ 99CB 21 F7 89     Mov_right ld hl,Ctrl_0
 161+ 99CE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99D0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99D0              ; 																	; _ en el caso de que no lo haya.
 164+ 99D0 3A F7 89     	ld a,(Ctrl_0)
 165+ 99D3 CB 77        	bit 6,a
 166+ 99D5 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99D7
 168+ 99D7 CD 05 9C     	call Stop_Amadeus_right
 169+ 99DA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99DB 18 4D        	jr 8F
 171+ 99DD
 172+ 99DD 3A CF 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99E0 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99E2 20 46        	jr nz,8F
 175+ 99E4
 176+ 99E4 3A D1 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 99E7 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 99E8 28 40        	jr z,8F
 179+ 99EA
 180+ 99EA              ; ---------- ---------- ----------
 181+ 99EA              ;
 182+ 99EA              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 99EA
 184+ 99EA 3A DF 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 99ED FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 99EF 28 11        	jr z,1F
 187+ 99F1 38 06        	jr c,6F
 188+ 99F3 FE 04        	cp 4
 189+ 99F5 28 14        	jr z,7F
 190+ 99F7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 99F9
 192+ 99F9              ; ---------- ---------- ----------
 193+ 99F9              ;
 194+ 99F9              ; Perfiles de velocidad
 195+ 99F9              ;
 196+ 99F9
 197+ 99F9 3A D1 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 99FC FE FE        	cp $fe
 199+ 99FE 20 2A        	jr nz,8F
 200+ 9A00 18 10        	jr 3F
 201+ 9A02 3A D1 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A05 FE FD        	cp $fd
 203+ 9A07 20 21        	jr nz,8F
 204+ 9A09 18 07        	jr 3F
 205+ 9A0B 3A D1 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A0E FE FB        	cp $fb
 207+ 9A10 20 18        	jr nz,8F
 208+ 9A12
 209+ 9A12              ; ---------- ---------- ----------
 210+ 9A12
 211+ 9A12              3
 212+ 9A12 CD 45 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A15              ;	call Reinicio
 214+ 9A15
 215+ 9A15              ; ---------- ---------- ----------
 216+ 9A15              ;
 217+ 9A15              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A15
 219+ 9A15 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A17 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A18 CD 31 9A     	call DESPLZ_DER
 222+ 9A1B C1           	pop bc
 223+ 9A1C 10 F9        	djnz 5B
 224+ 9A1E 2A CB 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A21 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A22 22 CB 89     	ld (Posicion_actual),hl
 227+ 9A25 CD 9C 9C     	call Genera_coordenadas
 228+ 9A28 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A2A
 230+ 9A2A              ; ---------- ---------- ----------
 231+ 9A2A
 232+ 9A2A 2A CB 89     8 ld hl,(Posicion_actual)
 233+ 9A2D CD 31 9A     	call DESPLZ_DER
 234+ 9A30 C9           2 ret
 235+ 9A31
 236+ 9A31              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A31              ;
 238+ 9A31              ;	22/9/22
 239+ 9A31              ;
 240+ 9A31
 241+ 9A31 CD 40 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A34 CD 8C 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A37 CD B5 9A         call Ciclo_completo
 244+ 9A3A 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A3D CB FE        	set 7,(hl)
 246+ 9A3F C9           	ret
 247+ 9A40
 248+ 9A40              ; ******************************************************************************************************************************************************************************************
 249+ 9A40              ;	15/02/23
 250+ 9A40              ;
 251+ 9A40
 252+ 9A40 3A DF 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A43 47           	ld b,a
 254+ 9A44 2A D7 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A47 23           1 inc hl
 256+ 9A48 23           	inc hl
 257+ 9A49 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A4B 22 D7 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A4E CD 41 8D     	call Extrae_address
 260+ 9A51 22 CD 89     	ld (Puntero_objeto),hl
 261+ 9A54
 262+ 9A54              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A54
 264+ 9A54              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A54              ; Cuántos movimientos hemos hecho ??
 266+ 9A54              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A54
 268+ 9A54 2A D3 89     7 ld hl,(Indice_Sprite_der)
 269+ 9A57 EB           	ex de,hl
 270+ 9A58 A7           	and a
 271+ 9A59 ED 52        	sbc hl,de
 272+ 9A5B CB 3D        	srl l
 273+ 9A5D 3E 08        6 ld a,8
 274+ 9A5F 95           	sub l
 275+ 9A60 30 1E        	jr nc,3F
 276+ 9A62
 277+ 9A62              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A62              ; B="0".
 279+ 9A62
 280+ 9A62 04           4 inc b
 281+ 9A63 3C           	inc a
 282+ 9A64 20 FC        	jr nz,4B
 283+ 9A66 78           	ld a,b
 284+ 9A67 08           	ex af,af
 285+ 9A68 2A D3 89     	ld hl,(Indice_Sprite_der)
 286+ 9A6B 23           5 inc hl
 287+ 9A6C 23           	inc hl
 288+ 9A6D 10 FC        	djnz 5B
 289+ 9A6F 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9A72 CD 41 8D     	call Extrae_address
 291+ 9A75 22 CD 89     	ld (Puntero_objeto),hl
 292+ 9A78
 293+ 9A78              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A78              ; _(Posicion_actual).
 295+ 9A78
 296+ 9A78 21 CB 89     	ld hl,Posicion_actual
 297+ 9A7B 34           	inc (hl)
 298+ 9A7C 08               ex af,af
 299+ 9A7D 6F           	ld l,a
 300+ 9A7E 18 DD        	jr 6B
 301+ 9A80
 302+ 9A80              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A80
 304+ 9A80 47           3 ld b,a
 305+ 9A81 2A D5 89     	ld hl,(Indice_Sprite_izq)
 306+ 9A84 23           2 inc hl
 307+ 9A85 23           	inc hl
 308+ 9A86 10 FC        	djnz 2B
 309+ 9A88 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A8B C9           8 ret
 311+ 9A8C
 312+ 9A8C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A8C              ;
 314+ 9A8C              ;	24/7/22
 315+ 9A8C              ;
 316+ 9A8C              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A8C              ;
 318+ 9A8C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A8C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A8C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A8C
 322+ 9A8C 3A D1 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A8F A7           	and a
 324+ 9A90 20 1F        	jr nz,1F
 325+ 9A92 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A94 32 D1 89         ld (CTRL_DESPLZ),a
 327+ 9A97
 328+ 9A97 21 CA 89     	ld hl,Columns
 329+ 9A9A 34           	inc (hl)
 330+ 9A9B 3A DD 89     	ld a,(Cuad_objeto)
 331+ 9A9E E6 01        	and 1
 332+ 9AA0 28 0F        	jr z,1F
 333+ 9AA2 2A CB 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AA5 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AA6 22 CB 89     	ld (Posicion_actual),hl
 336+ 9AA9 CD 9C 9C     	call Genera_coordenadas
 337+ 9AAC CD 11 9C     	call Inc_CTRL_DESPLZ
 338+ 9AAF 18 03        	jr 2F
 339+ 9AB1 CD 11 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AB4 C9           2 ret
 341+ 9AB5
 342+ 9AB5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AB5              ;
 344+ 9AB5              ;	24/7/22
 345+ 9AB5              ;
 346+ 9AB5              ;	Ciclo_completo.
 347+ 9AB5              ;
 348+ 9AB5              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AB5              ;
 350+ 9AB5              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AB5              ; 	Decrementamos (Columns).
 352+ 9AB5              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AB5              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AB5
 355+ 9AB5
 356+ 9AB5 3A D1 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AB8 FE FF        	cp $ff
 358+ 9ABA 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9ABC E6 F0        	and $f0
 360+ 9ABE 20 28        	jr nz,3F
 361+ 9AC0
 362+ 9AC0              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AC0
 364+ 9AC0 3A D1 89     	ld a,(CTRL_DESPLZ)
 365+ 9AC3 47           	ld b,a
 366+ 9AC4 3E F8        	ld a,$f8
 367+ 9AC6 80           	add b
 368+ 9AC7 32 D1 89     	ld (CTRL_DESPLZ),a
 369+ 9ACA 18 1C        	jr 3F
 370+ 9ACC 21 CA 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9ACF 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AD0 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AD1 32 D1 89     	ld (CTRL_DESPLZ),a
 374+ 9AD4 3A DD 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AD7 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AD9 20 0A        	jr nz,2F
 377+ 9ADB 2A CB 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9ADE 23           	inc hl
 379+ 9ADF 22 CB 89     	ld (Posicion_actual),hl
 380+ 9AE2 CD 9C 9C     	call Genera_coordenadas
 381+ 9AE5
 382+ 9AE5              ; Inicia el puntero de Sprite.
 383+ 9AE5
 384+ 9AE5 CD 58 8D     2 call Inicia_puntero_objeto_der
 385+ 9AE8 C9           3 ret
 386+ 9AE9
 387+ 9AE9              ; ******************************************************************************************************************************************************************************************
 388+ 9AE9              ;
 389+ 9AE9              ;	15/02/23
 390+ 9AE9              ;
 391+ 9AE9              ;	Mov_left.
 392+ 9AE9              ;
 393+ 9AE9              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9AE9              ;
 395+ 9AE9 21 F7 89     Mov_left ld hl,Ctrl_0
 396+ 9AEC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9AEE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9AEE              ; 																	; _ en el caso de que no lo haya.
 399+ 9AEE 3A F7 89     	ld a,(Ctrl_0)
 400+ 9AF1 CB 77        	bit 6,a
 401+ 9AF3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9AF5
 403+ 9AF5 CD 0B 9C     	call Stop_Amadeus_left
 404+ 9AF8 C8           	ret z
 405+ 9AF9 20 4A        	jr nz,8F
 406+ 9AFB
 407+ 9AFB 3A CF 89     11 ld a,(Coordenada_X)
 408+ 9AFE A7           	and a
 409+ 9AFF 20 44        	jr nz,8F
 410+ 9B01
 411+ 9B01 3A D1 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B04 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B05 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B07
 415+ 9B07              ; ---------- ---------- ----------
 416+ 9B07
 417+ 9B07 3A DE 89     	ld a,(Vel_left)
 418+ 9B0A FE 02        	cp 2
 419+ 9B0C 28 0F        	jr z,1F
 420+ 9B0E 38 04        	jr c,6F
 421+ 9B10 FE 04        	cp 4
 422+ 9B12 28 12        	jr z,7F
 423+ 9B14
 424+ 9B14              ; ---------- ---------- ----------
 425+ 9B14
 426+ 9B14 3A D1 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B17 FE F8        	cp $f8
 428+ 9B19 20 2A        	jr nz,8F
 429+ 9B1B 18 10        	jr 4F
 430+ 9B1D 3A D1 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B20 FE F9        	cp $f9
 432+ 9B22 20 21        	jr nz,8F
 433+ 9B24 18 07        	jr 4F
 434+ 9B26 3A D1 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B29 FE FB        	cp $fb
 436+ 9B2B 20 18        	jr nz,8F
 437+ 9B2D
 438+ 9B2D              ; ---------- ---------- ----------
 439+ 9B2D
 440+ 9B2D              4
 441+ 9B2D CD 33 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B30              ;	call Reinicio
 443+ 9B30
 444+ 9B30              ; ---------- ---------- ----------
 445+ 9B30
 446+ 9B30 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B32 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B33
 449+ 9B33              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B33              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B33
 452+ 9B33 CD 4C 9B     	call DESPLZ_IZQ
 453+ 9B36 C1           	pop bc
 454+ 9B37 10 F9        	djnz 5B
 455+ 9B39 2A CB 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B3C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B3D 22 CB 89     	ld (Posicion_actual),hl
 458+ 9B40 CD 9C 9C     	call Genera_coordenadas
 459+ 9B43 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B45
 461+ 9B45              ; ---------- ---------- ----------
 462+ 9B45
 463+ 9B45              ; Movemos, no hay recolocación.
 464+ 9B45
 465+ 9B45 2A CB 89     8 ld hl,(Posicion_actual)
 466+ 9B48 CD 4C 9B     	call DESPLZ_IZQ
 467+ 9B4B C9           2 ret
 468+ 9B4C
 469+ 9B4C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B4C              ;
 471+ 9B4C              ;	22/9/22
 472+ 9B4C
 473+ 9B4C              DESPLZ_IZQ
 474+ 9B4C
 475+ 9B4C CD 5B 9B     	call Desplaza_izquierda
 476+ 9B4F CD A7 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B52 CD CF 9B     	call Ciclo_completo_2
 478+ 9B55 21 F7 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B58 CB BE        	res 7,(hl)
 480+ 9B5A C9           	ret
 481+ 9B5B
 482+ 9B5B              Desplaza_izquierda
 483+ 9B5B
 484+ 9B5B 3A DE 89     	ld a,(Vel_left)
 485+ 9B5E 47           	ld b,a
 486+ 9B5F 2A D9 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9B62 23           1 inc hl
 488+ 9B63 23           	inc hl
 489+ 9B64 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9B66 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9B69 CD 41 8D     	call Extrae_address
 492+ 9B6C 22 CD 89     	ld (Puntero_objeto),hl
 493+ 9B6F
 494+ 9B6F              ; Modifica (Puntero_DESPLZ_der).
 495+ 9B6F
 496+ 9B6F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9B6F              ; Cuántos movimientos hemos hecho ??
 498+ 9B6F              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9B6F
 500+ 9B6F 2A D5 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9B72 EB           	ex de,hl
 502+ 9B73 A7           	and a
 503+ 9B74 ED 52        	sbc hl,de
 504+ 9B76 CB 3D        	srl l
 505+ 9B78 3E 08        6 ld a,8
 506+ 9B7A 95           	sub l
 507+ 9B7B 30 1E        	jr nc,3F
 508+ 9B7D
 509+ 9B7D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9B7D              ; B="0".
 511+ 9B7D
 512+ 9B7D 04           4 inc b
 513+ 9B7E 3C           	inc a
 514+ 9B7F 20 FC        	jr nz,4B
 515+ 9B81 78           	ld a,b
 516+ 9B82 08           	ex af,af
 517+ 9B83 2A D5 89     	ld hl,(Indice_Sprite_izq)
 518+ 9B86 23           5 inc hl
 519+ 9B87 23           	inc hl
 520+ 9B88 10 FC        	djnz 5B
 521+ 9B8A 22 D9 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9B8D CD 41 8D     	call Extrae_address
 523+ 9B90 22 CD 89     	ld (Puntero_objeto),hl
 524+ 9B93
 525+ 9B93              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9B93              ; _(Posicion_actual).
 527+ 9B93
 528+ 9B93 21 CB 89     	ld hl,Posicion_actual
 529+ 9B96 35           	dec (hl)
 530+ 9B97 08           	ex af,af
 531+ 9B98 6F           	ld l,a
 532+ 9B99 18 DD        	jr 6B
 533+ 9B9B
 534+ 9B9B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9B9B
 536+ 9B9B 47           3 ld b,a
 537+ 9B9C 2A D3 89     	ld hl,(Indice_Sprite_der)
 538+ 9B9F 23           2 inc hl
 539+ 9BA0 23           	inc hl
 540+ 9BA1 10 FC        	djnz 2B
 541+ 9BA3 22 D7 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9BA6 C9           8 ret
 543+ 9BA7
 544+ 9BA7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9BA7              ;
 546+ 9BA7              ;	modifica_parametros_1er_DESPLZ
 547+ 9BA7              ;
 548+ 9BA7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9BA7              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9BA7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9BA7
 552+ 9BA7 3A D1 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9BAA A7           	and a
 554+ 9BAB 20 1E        	jr nz,1F
 555+ 9BAD 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9BAE 32 D1 89         ld (CTRL_DESPLZ),a
 557+ 9BB1 21 CA 89     	ld hl,Columns
 558+ 9BB4 34           	inc (hl)
 559+ 9BB5 3A DD 89     	ld a,(Cuad_objeto)
 560+ 9BB8 E6 01        	and 1
 561+ 9BBA 20 0F        	jr nz,1F
 562+ 9BBC 2A CB 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9BBF 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9BC0 22 CB 89     	ld (Posicion_actual),hl
 565+ 9BC3 CD 9C 9C     	call Genera_coordenadas
 566+ 9BC6 CD 22 9C     	call Dec_CTRL_DESPLZ
 567+ 9BC9 18 03        	jr 2F
 568+ 9BCB CD 22 9C     1 call Dec_CTRL_DESPLZ
 569+ 9BCE C9           2 ret
 570+ 9BCF
 571+ 9BCF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9BCF
 573+ 9BCF 3A D1 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9BD2 FE F7        	cp $f7
 575+ 9BD4 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9BD6 30 2C        	jr nc,3F
 577+ 9BD8
 578+ 9BD8              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9BD8
 580+ 9BD8 06 00        	ld b,0
 581+ 9BDA 04           4 inc b
 582+ 9BDB 3C           	inc a
 583+ 9BDC FE F7        	cp $f7
 584+ 9BDE 20 FA        	jr nz,4B
 585+ 9BE0 3E FF        	ld a,$ff
 586+ 9BE2 90           	sub b
 587+ 9BE3 32 D1 89     	ld (CTRL_DESPLZ),a
 588+ 9BE6 18 1C        	jr 3F
 589+ 9BE8
 590+ 9BE8              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9BE8
 592+ 9BE8 21 CA 89     1 ld hl,Columns
 593+ 9BEB 35           	dec (hl)
 594+ 9BEC AF           	xor a
 595+ 9BED 32 D1 89     	ld (CTRL_DESPLZ),a
 596+ 9BF0 3A DD 89     	ld a,(Cuad_objeto)
 597+ 9BF3 E6 01        	and 1
 598+ 9BF5 28 0A        	jr z,2F
 599+ 9BF7 2A CB 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9BFA 2B           	dec hl
 601+ 9BFB 22 CB 89     	ld (Posicion_actual),hl
 602+ 9BFE CD 9C 9C     	call Genera_coordenadas
 603+ 9C01
 604+ 9C01              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C01
 606+ 9C01 CD 6B 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C04 C9           3 ret
 608+ 9C05
 609+ 9C05              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C05              ;
 611+ 9C05              ;	19/10/22
 612+ 9C05              ;
 613+ 9C05              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C05              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C05
 616+ 9C05 3A CF 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C08 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C0A C9           	ret
 619+ 9C0B
 620+ 9C0B              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C0B              ;
 622+ 9C0B              ;	19/10/22
 623+ 9C0B              ;
 624+ 9C0B              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C0B              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C0B
 627+ 9C0B 3A CF 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C0E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C10 C9           	ret
 630+ 9C11
 631+ 9C11              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C11              ;
 633+ 9C11              ;	24/7/22
 634+ 9C11              ;
 635+ 9C11              ;	Inc_CTRL_DESPLZ
 636+ 9C11              ;
 637+ 9C11              ;
 638+ 9C11              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C11
 640+ 9C11 21 D1 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C14 3A DF 89     	ld a,(Vel_right)
 642+ 9C17 A7           	and a
 643+ 9C18 28 06        	jr z,1F
 644+ 9C1A 47           	ld b,a
 645+ 9C1B 34           3 inc (hl)
 646+ 9C1C 10 FD        	djnz 3B
 647+ 9C1E 18 01        	jr 2F
 648+ 9C20 34           1 inc (hl)
 649+ 9C21 C9           2 ret
 650+ 9C22
 651+ 9C22              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C22              ;
 653+ 9C22              ;	5/2/23
 654+ 9C22              ;
 655+ 9C22              ;	Dec_CTRL_DESPLZ
 656+ 9C22              ;
 657+ 9C22              ;
 658+ 9C22              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C22
 660+ 9C22 21 D1 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C25 3A DE 89     	ld a,(Vel_left)
 662+ 9C28 A7           	and a
 663+ 9C29 28 06        	jr z,1F
 664+ 9C2B 47           	ld b,a
 665+ 9C2C 35           3 dec (hl)
 666+ 9C2D 10 FD        	djnz 3B
 667+ 9C2F 18 01        	jr 2F
 668+ 9C31 35           1 dec (hl)
 669+ 9C32 C9           2 ret
 670+ 9C33
 671+ 9C33              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C33
 673+ 9C33 2A CB 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C36 01 1F 00     	ld bc,31
 675+ 9C39 A7           	and a
 676+ 9C3A ED 4A        	adc hl,bc
 677+ 9C3C 22 CB 89     	ld (Posicion_actual),hl
 678+ 9C3F 21 F7 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C42 CB C6        	set 0,(hl)
 680+ 9C44 C9           	ret
 681+ 9C45
 682+ 9C45              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C45
 684+ 9C45 2A CB 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C48 01 1F 00     	ld bc,31
 686+ 9C4B A7           	and a
 687+ 9C4C ED 42        	sbc hl,bc
 688+ 9C4E 22 CB 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9C51 21 F7 89     	ld hl,Ctrl_0
 690+ 9C54 CB CE        	set 1,(hl)
 691+ 9C56 C9           	ret
 692+ 9C57
 693+ 9C57              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9C57
 695+ 9C57 24           Reaparece_abajo inc h
 696+ 9C58 01 E0 17     	ld bc,$17e0
 697+ 9C5B A7           	and a
 698+ 9C5C ED 4A        	adc hl,bc
 699+ 9C5E 22 CB 89     	ld (Posicion_actual),hl
 700+ 9C61 21 F7 89     	ld hl,Ctrl_0
 701+ 9C64 CB D6        	set 2,(hl)
 702+ 9C66 C9           	ret
 703+ 9C67
 704+ 9C67              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9C67
 706+ 9C67 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9C6A A7           	and a
 708+ 9C6B ED 42        	sbc hl,bc
 709+ 9C6D 22 CB 89     	ld (Posicion_actual),hl
 710+ 9C70 21 F7 89     	ld hl,Ctrl_0
 711+ 9C73 CB DE        	set 3,(hl)
 712+ 9C75 C9           	ret
 713+ 9C76
 714+ 9C76              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9C76              ;
 716+ 9C76              ;	15/07/23
 717+ 9C76
 718+ 9C76              Reinicio
 719+ 9C76
 720+ 9C76              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9C76
 722+ 9C76 AF           	xor a
 723+ 9C77 21 FE 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9C7A CD 98 9C     	call Limpia_contenido_hl
 725+ 9C7D
 726+ 9C7D 21 CB 89     	ld hl,Posicion_actual
 727+ 9C80 CD 98 9C     	call Limpia_contenido_hl
 728+ 9C83
 729+ 9C83 CD B9 9F     	call Inicializa_Puntero_indice_mov
 730+ 9C86 CD 43 9F     	call Inicia_Puntero_mov
 731+ 9C89
 732+ 9C89 21 00 8A     	ld hl,Incrementa_puntero
 733+ 9C8C 06 05        	ld b,5
 734+ 9C8E 77           1 ld (hl),a
 735+ 9C8F 23           	inc hl
 736+ 9C90 10 FC        	djnz 1B
 737+ 9C92
 738+ 9C92 21 0A 8A     	ld hl,Ctrl_2
 739+ 9C95 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9C97
 741+ 9C97 C9           	ret
 742+ 9C98
 743+ 9C98 77           Limpia_contenido_hl	ld (hl),a
 744+ 9C99 23           	inc hl
 745+ 9C9A 77           	ld (hl),a
 746+ 9C9B C9           	ret
 747+ 9C9C
 748+ 9C9C
# file closed: Direcciones.asm
1298  9C9C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C9C              ; ------------------------------------------------------------------------
   2+ 9C9C              ;
   3+ 9C9C              ;	02/04/23
   4+ 9C9C              ;
   5+ 9C9C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C9C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C9C              ;
   8+ 9C9C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C9C              ;
  10+ 9C9C              ;	Modifica: A,BC y DE.
  11+ 9C9C
  12+ 9C9C C5           Genera_coordenadas push bc
  13+ 9C9D E5           	push hl
  14+ 9C9E D5           	push de
  15+ 9C9F
  16+ 9C9F 2A CB 89     	ld hl,(Posicion_actual)
  17+ 9CA2
  18+ 9CA2 7D           	ld a,l
  19+ 9CA3 E6 1F        	and $1f
  20+ 9CA5 32 CF 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CA8
  22+ 9CA8 CD 11 99     	call calcula_tercio
  23+ 9CAB 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CAC
  25+ 9CAC 1E 00        	ld e,0
  26+ 9CAE 7D           	ld a,l
  27+ 9CAF E6 E0        	and $e0
  28+ 9CB1 28 01        	jr z,1F
  29+ 9CB3 04           	inc b
  30+ 9CB4
  31+ 9CB4 04           1 inc b
  32+ 9CB5 05           	dec b
  33+ 9CB6 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CB8              ;														; _ , salimos.
  35+ 9CB8 1C           3 inc e
  36+ 9CB9 D6 20        	sub 32
  37+ 9CBB 20 FB        	jr nz,3B
  38+ 9CBD 10 F5        	djnz 1B
  39+ 9CBF
  40+ 9CBF 7B           2 ld a,e
  41+ 9CC0 32 D0 89     	ld (Coordenada_y),a
  42+ 9CC3
  43+ 9CC3 D1           	pop de
  44+ 9CC4 E1           	pop hl
  45+ 9CC5 C1           	pop bc
  46+ 9CC6
  47+ 9CC6 C9           	ret
  48+ 9CC7
  49+ 9CC7              ; ------------------------------------------------------------------------
  50+ 9CC7              ;	28/05/23
  51+ 9CC7              ;
  52+ 9CC7              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CC7              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CC7              ;
  55+ 9CC7              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CC7              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CC7              ;
  58+ 9CC7              ;		DE="$120d"
  59+ 9CC7              ;
  60+ 9CC7              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CC7              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CC7              ;
  63+ 9CC7              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CC7
  65+ 9CC7              ;	Modifica: A,BC y DE.
  66+ 9CC7
  67+ 9CC7
  68+ 9CC7              Genera_coordenadas_disparo
  69+ 9CC7
  70+ 9CC7              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CC7
  72+ 9CC7 7D           	ld a,l
  73+ 9CC8 E6 1F        	and $1f
  74+ 9CCA 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CCB CD 11 99     	call calcula_tercio
  76+ 9CCE 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CCF 1E 00        	ld e,0
  78+ 9CD1 7D           	ld a,l
  79+ 9CD2 E6 E0        	and $e0
  80+ 9CD4 28 01        	jr z,1F
  81+ 9CD6 04           	inc b
  82+ 9CD7 1C           1 inc e
  83+ 9CD8 D6 20        	sub 32
  84+ 9CDA 20 FB        	jr nz,1B
  85+ 9CDC 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CDE C9           	ret
  87+ 9CDF
# file closed: Genera_coordenadas.asm
1299  9CDF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CDF
   2+ 9CDF
   3+ 9CDF              ;   07/07/23
   4+ 9CDF              ;
   5+ 9CDF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CDF              ;
   7+ 9CDF              ;   Codificación:
   8+ 9CDF              ;
   9+ 9CDF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CDF              ;
  11+ 9CDF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CDF              ;
  13+ 9CDF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CDF              ;
  15+ 9CDF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CDF              ;
  17+ 9CDF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CDF              ;                               ..... %01000010 Vel_up 4
  19+ 9CDF              ;                                               Vel_down 2
  20+ 9CDF              ;                               ..... $42
  21+ 9CDF              ;
  22+ 9CDF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CDF              ;
  24+ 9CDF              ;                               ..... %01000010 Vel_left 4
  25+ 9CDF              ;                                               Vel_right 2
  26+ 9CDF              ;                               ..... $42
  27+ 9CDF              ;
  28+ 9CDF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CDF              ;
  30+ 9CDF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CDF              ;
  32+ 9CDF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CDF              ;
  34+ 9CDF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CDF              ;                                     $53
  36+ 9CDF              ;
  37+ 9CDF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CDF              ;
  39+ 9CDF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CDF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CDF              ;
  42+ 9CDF              ;                       Arriba ..... $81
  43+ 9CDF              ;                       Arriba - izquierda ..... $a1
  44+ 9CDF              ;                       Arriba - derecha ..... $91
  45+ 9CDF              ;
  46+ 9CDF              ;                       Abajo ..... $41
  47+ 9CDF              ;                       Abajo - izquierda ..... $61
  48+ 9CDF              ;                       Abajo - derecha ..... $51
  49+ 9CDF              ;
  50+ 9CDF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CDF              ;
  52+ 9CDF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CDF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CDF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CDF              ;
  56+ 9CDF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CDF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CDF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CDF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CDF              ;
  61+ 9CDF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CDF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CDF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CDF              ;
  65+ 9CDF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CDF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CDF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CDF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CDF
  70+ 9CDF              ; ----- ----- ----- ----- -----
  71+ 9CDF
  72+ 9CDF 0B 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CE1 13 9D            defw F_1
  74+ 9CE3 1D 9D            defw F_2
  75+ 9CE5 27 9D            defw Codo_abajo_derecha
  76+ 9CE7 5B 9D            defw Derecha_y_subiendo
  77+ 9CE9 65 9D            defw Derecha_y_subiendo_1
  78+ 9CEB 6F 9D            defw F_3
  79+ 9CED 79 9D            defw F_4
  80+ 9CEF 83 9D            defw Derecha_y_bajando
  81+ 9CF1 8D 9D            defw Derecha_y_bajando_1
  82+ 9CF3 97 9D            defw Derecha_y_bajando_2
  83+ 9CF5 A1 9D            defw Codo_derecha_abajo
  84+ 9CF7 D1 9D            defw Codo_abajo_izq.
  85+ 9CF9 05 9E            defw Izquierda_y_subiendo
  86+ 9CFB 0F 9E            defw Izquierda_y_subiendo_1
  87+ 9CFD 19 9E            defw F_5
  88+ 9CFF 23 9E            defw F_6
  89+ 9D01 2D 9E            defw Izquierda_y_bajando
  90+ 9D03 37 9E            defw Izquierda_y_bajando_1
  91+ 9D05 41 9E            defw Izquierda_y_bajando_2
  92+ 9D07 4B 9E            defw Codo_izquierda_abajo
  93+ 9D09 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D0B
  95+ 9D0B 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D0F 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D13
  98+ 9D13 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D17 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D1B 08 00
 100+ 9D1D 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D21 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D25 0F FE
 102+ 9D27
 103+ 9D27 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D2B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D2F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D33 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D37 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D3B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D3F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D43 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D47 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D4B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D4F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D53 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D57 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D5B
 117+ 9D5B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D5F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D63 06 00
 119+ 9D65
 120+ 9D65 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D69 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D6D 02 00
 122+ 9D6F
 123+ 9D6F 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D73 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D77 04 00
 125+ 9D79 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D7D 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D81 08 00
 127+ 9D83
 128+ 9D83 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D87 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D8B 02 00
 130+ 9D8D
 131+ 9D8D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D91 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D95 06 00
 133+ 9D97
 134+ 9D97 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D9B 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D9F 06 00
 136+ 9DA1
 137+ 9DA1              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DA1
 139+ 9DA1 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DA5 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DA9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DAD 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DB1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DB5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DB9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DBD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DC1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DC5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DC9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DCD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9DD1
 152+ 9DD1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DD5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DD9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DDD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DE1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9DE5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9DE9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9DED 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9DF1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9DF5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9DF9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9DFD 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E01 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E05
 166+ 9E05 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E09 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E0D 06 00
 168+ 9E0F
 169+ 9E0F 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E13 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E17 02 00
 171+ 9E19
 172+ 9E19 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E1D 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E21 04 00
 174+ 9E23 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E27 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E2B 08 00
 176+ 9E2D
 177+ 9E2D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E31 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E35 02 00
 179+ 9E37
 180+ 9E37 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E3B 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E3F 06 00
 182+ 9E41
 183+ 9E41 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E45 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E49 06 00
 185+ 9E4B
 186+ 9E4B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E4F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E53 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E57 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E5B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E5F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E63 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E67 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E6B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E6F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E73 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E77 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E7B
 199+ 9E7B              ; ----- ----- ----- ----- -----
 200+ 9E7B              ;
 201+ 9E7B              ;   27/06/23
 202+ 9E7B
 203+ 9E7B              Movimiento
 204+ 9E7B
 205+ 9E7B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E7B
 207+ 9E7B              ;    ld hl,(Posicion_actual)
 208+ 9E7B
 209+ 9E7B 3A 0A 8A         ld a,(Ctrl_2)
 210+ 9E7E CB 57            bit 2,a
 211+ 9E80 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E82
 213+ 9E82 2A FC 89         ld hl,(Puntero_mov)
 214+ 9E85 7E               ld a,(hl)
 215+ 9E86
 216+ 9E86              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E86
 218+ 9E86              Inicia_desplazamiento.
 219+ 9E86
 220+ 9E86              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E86
 222+ 9E86 CD 7A 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E89
 224+ 9E89              ; Iniciamos (Repetimos_mov).
 225+ 9E89
 226+ 9E89 7E               ld a,(hl)
 227+ 9E8A E6 0F            and $0f
 228+ 9E8C 32 02 8A         ld (Repetimos_desplazamiento),a
 229+ 9E8F 32 03 8A         ld (Repetimos_desplazamiento_backup),a
 230+ 9E92
 231+ 9E92              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E92
 233+ 9E92 23               inc hl
 234+ 9E93 7E               ld a,(hl)
 235+ 9E94 32 05 8A         ld (Cola_de_desplazamiento),a
 236+ 9E97 2B               dec hl
 237+ 9E98
 238+ 9E98 21 0A 8A         ld hl,Ctrl_2
 239+ 9E9B CB D6            set 2,(hl)
 240+ 9E9D
 241+ 9E9D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E9D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E9D
 244+ 9E9D              Desplazamiento_iniciado
 245+ 9E9D
 246+ 9E9D CD 4E 9F         call Aplica_desplazamiento
 247+ 9EA0
 248+ 9EA0 3A 0A 8A         ld a,(Ctrl_2)
 249+ 9EA3 CB 67            bit 4,a
 250+ 9EA5 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EA6
 252+ 9EA6 21 02 8A     3 ld hl,Repetimos_desplazamiento
 253+ 9EA9 35               dec (hl)
 254+ 9EAA C0               ret nz
 255+ 9EAB
 256+ 9EAB              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EAB              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EAB              ; Analiza (Cola_de_desplazamiento).
 259+ 9EAB
 260+ 9EAB 3A 05 8A     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EAE A7               and a
 262+ 9EAF CC A3 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EB2 28 30            jr z,Reinicia_el_movimiento
 264+ 9EB4
 265+ 9EB4 FE FF            cp $ff
 266+ 9EB6 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EB8
 268+ 9EB8 FE FE            cp $fe
 269+ 9EBA CC 27 9F         call z,Fijamos_bucle
 270+ 9EBD 28 25            jr z,Reinicia_el_movimiento
 271+ 9EBF
 272+ 9EBF FE FD            cp $fd
 273+ 9EC1 20 11            jr nz,1F
 274+ 9EC3
 275+ 9EC3              ; ---
 276+ 9EC3              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EC3
 278+ 9EC3 3A 0A 8A         ld a,(Ctrl_2)
 279+ 9EC6 CB 5F            bit 3,a
 280+ 9EC8 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9ECA
 282+ 9ECA              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9ECA
 284+ 9ECA 21 0A 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9ECD CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9ECF
 287+ 9ECF CD 38 9F         call Inicia_Repetimos_movimiento
 288+ 9ED2 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9ED4              ; ---
 290+ 9ED4
 291+ 9ED4 FE 01        1 cp 1
 292+ 9ED6 CA 11 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9ED9
 294+ 9ED9 3D               dec a
 295+ 9EDA 32 05 8A         ld (Cola_de_desplazamiento),a
 296+ 9EDD
 297+ 9EDD 3A 03 8A         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9EE0 32 02 8A         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9EE3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9EE3 C9               ret
 301+ 9EE4
 302+ 9EE4              Reinicia_el_movimiento
 303+ 9EE4
 304+ 9EE4 3A 0A 8A         ld a,(Ctrl_2)
 305+ 9EE7 CB 5F            bit 3,a
 306+ 9EE9 28 1B            jr z,2F
 307+ 9EEB
 308+ 9EEB              ; (Cola_de_desplazamiento)="254".
 309+ 9EEB
 310+ 9EEB 21 04 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9EEE 35               dec (hl)
 312+ 9EEF 20 15            jr nz,2F
 313+ 9EF1
 314+ 9EF1              ; Fin de las repeticiones del último movimiento.
 315+ 9EF1
 316+ 9EF1 21 0A 8A         ld hl,Ctrl_2
 317+ 9EF4 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9EF6
 319+ 9EF6 2A FC 89         ld hl,(Puntero_mov)
 320+ 9EF9 23               inc hl
 321+ 9EFA 23               inc hl
 322+ 9EFB 23               inc hl
 323+ 9EFC 22 FC 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9EFF              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9EFF 7E               ld a,(hl)
 326+ 9F00 32 05 8A         ld (Cola_de_desplazamiento),a
 327+ 9F03
 328+ 9F03 C3 AB 9E         jp Cola
 329+ 9F06
 330+ 9F06
 331+ 9F06 CD 43 9F     2 call Inicia_Puntero_mov
 332+ 9F09
 333+ 9F09 21 0A 8A         ld hl,Ctrl_2
 334+ 9F0C CB 96            res 2,(hl)
 335+ 9F0E
 336+ 9F0E C3 7B 9E         jp Movimiento
 337+ 9F11
 338+ 9F11              Siguiente_desplazamiento
 339+ 9F11
 340+ 9F11              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F11              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F11
 343+ 9F11 21 0A 8A         ld hl,Ctrl_2
 344+ 9F14 CB 96            res 2,(hl)
 345+ 9F16
 346+ 9F16 2A FC 89         ld hl,(Puntero_mov)
 347+ 9F19 23               inc hl
 348+ 9F1A 23               inc hl
 349+ 9F1B 22 FC 89         ld (Puntero_mov),hl
 350+ 9F1E
 351+ 9F1E 7E               ld a,(hl)
 352+ 9F1F A7               and a
 353+ 9F20 CC A3 9F         call z,Incrementa_Puntero_indice_mov
 354+ 9F23 CA E4 9E         jp z,Reinicia_el_movimiento
 355+ 9F26
 356+ 9F26 C9               ret
 357+ 9F27              ; Subrutinas -----------------------------------------
 358+ 9F27              ; ---------- --------- --------- ---------- ----------
 359+ 9F27              ;
 360+ 9F27              ;   24/07/23
 361+ 9F27              ;
 362+ 9F27              ;   Fijamos_bucle
 363+ 9F27              ;
 364+ 9F27              ;
 365+ 9F27
 366+ 9F27              Fijamos_bucle
 367+ 9F27
 368+ 9F27 3A 00 8A         ld a,(Incrementa_puntero)
 369+ 9F2A 3C               inc a
 370+ 9F2B 32 01 8A         ld (Incrementa_puntero_backup),a
 371+ 9F2E
 372+ 9F2E CD A3 9F         call Incrementa_Puntero_indice_mov
 373+ 9F31 2A FA 89         ld hl,(Puntero_indice_mov)
 374+ 9F34 22 FE 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9F37 C9               ret
 376+ 9F38
 377+ 9F38              ; ---------- --------- --------- ---------- ----------
 378+ 9F38              ;
 379+ 9F38              ;   07/7/23
 380+ 9F38              ;
 381+ 9F38              ;   Inicia_Repetimos_movimiento
 382+ 9F38              ;
 383+ 9F38              ;
 384+ 9F38
 385+ 9F38              Inicia_Repetimos_movimiento
 386+ 9F38
 387+ 9F38              ; Iniciamos (Repetimos_movimiento).
 388+ 9F38
 389+ 9F38 DD 2A FC 89      ld ix,(Puntero_mov)
 390+ 9F3C DD 7E 02         ld a,(ix+2)
 391+ 9F3F 32 04 8A         ld (Repetimos_movimiento),a
 392+ 9F42
 393+ 9F42 C9               ret
 394+ 9F43
 395+ 9F43              ; ---------- --------- --------- ---------- ----------
 396+ 9F43              ;
 397+ 9F43              ;   26/6/23
 398+ 9F43              ;
 399+ 9F43              ;   Inicia_Puntero_mov
 400+ 9F43              ;
 401+ 9F43              ;
 402+ 9F43
 403+ 9F43 2A FA 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F46 5E               ld e,(hl)
 405+ 9F47 23               inc hl
 406+ 9F48 56               ld d,(hl)
 407+ 9F49 EB               ex de,hl
 408+ 9F4A 22 FC 89         ld (Puntero_mov),hl
 409+ 9F4D C9               ret
 410+ 9F4E
 411+ 9F4E              ; ---------- --------- --------- ---------- ----------
 412+ 9F4E              ;
 413+ 9F4E              ;   27/06/23
 414+ 9F4E              ;
 415+ 9F4E              ;   Aplica_movimiento.
 416+ 9F4E
 417+ 9F4E              Aplica_desplazamiento
 418+ 9F4E
 419+ 9F4E              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F4E
 421+ 9F4E 2A FC 89         ld hl, (Puntero_mov)
 422+ 9F51
 423+ 9F51 7E               ld a,(hl)
 424+ 9F52 E6 F0            and $f0
 425+ 9F54 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F55
 427+ 9F55 CB 7E            bit 7,(hl)
 428+ 9F57 28 03            jr z,1F
 429+ 9F59 CD 88 99         call Mov_up
 430+ 9F5C 2A FC 89     1 ld hl, (Puntero_mov)
 431+ 9F5F CB 76            bit 6,(hl)
 432+ 9F61 28 03            jr z,2F
 433+ 9F63 CD 57 99         call Mov_down
 434+ 9F66 2A FC 89     2 ld hl, (Puntero_mov)
 435+ 9F69 CB 6E            bit 5,(hl)
 436+ 9F6B 28 03            jr z,3F
 437+ 9F6D CD E9 9A         call Mov_left
 438+ 9F70 2A FC 89     3 ld hl, (Puntero_mov)
 439+ 9F73 CB 66            bit 4,(hl)
 440+ 9F75 C8               ret z
 441+ 9F76 CD CB 99         call Mov_right
 442+ 9F79 C9               ret
 443+ 9F7A
 444+ 9F7A              ; ---------- --------- --------- ---------- ----------
 445+ 9F7A              ;
 446+ 9F7A              ;   26/06/23
 447+ 9F7A              ;
 448+ 9F7A              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F7A
 450+ 9F7A              Ajusta_velocidad_desplazamiento
 451+ 9F7A
 452+ 9F7A              ; 1er byte de la cadena de movimiento.
 453+ 9F7A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F7A
 455+ 9F7A CD 98 9F         call Extrae_nibble_alto
 456+ 9F7D
 457+ 9F7D 32 E0 89         ld (Vel_up),a
 458+ 9F80 79               ld a,c
 459+ 9F81 E6 0F            and $0f
 460+ 9F83 32 E1 89         ld (Vel_down),a
 461+ 9F86
 462+ 9F86              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F86              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F86
 465+ 9F86 23               inc hl
 466+ 9F87 CD 98 9F         call Extrae_nibble_alto
 467+ 9F8A
 468+ 9F8A 32 DE 89         ld (Vel_left),a
 469+ 9F8D 79               ld a,c
 470+ 9F8E E6 0F            and $0f
 471+ 9F90 32 DF 89         ld (Vel_right),a
 472+ 9F93
 473+ 9F93              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F93
 475+ 9F93 23               inc hl
 476+ 9F94 22 FC 89         ld (Puntero_mov),hl
 477+ 9F97 C9               ret
 478+ 9F98
 479+ 9F98 06 04        Extrae_nibble_alto ld b,4
 480+ 9F9A 7E               ld a,(hl)
 481+ 9F9B 4F               ld c,a
 482+ 9F9C E6 F0            and $f0
 483+ 9F9E CB 3F        1 srl a
 484+ 9FA0 10 FC            djnz 1B
 485+ 9FA2 C9               ret
 486+ 9FA3
 487+ 9FA3              ; ---------- --------- --------- ---------- ----------
 488+ 9FA3              ;
 489+ 9FA3              ;   5/7/23
 490+ 9FA3              ;
 491+ 9FA3              ;   Incrementa_Puntero_indice_mov
 492+ 9FA3
 493+ 9FA3              Incrementa_Puntero_indice_mov
 494+ 9FA3
 495+ 9FA3 21 00 8A         ld hl,Incrementa_puntero
 496+ 9FA6 34               inc (hl)
 497+ 9FA7
 498+ 9FA7 2A FA 89         ld hl,(Puntero_indice_mov)
 499+ 9FAA 01 02 00         ld bc,2
 500+ 9FAD A7               and a
 501+ 9FAE 09               add hl,bc
 502+ 9FAF 22 FA 89         ld (Puntero_indice_mov),hl
 503+ 9FB2
 504+ 9FB2 7E               ld a,(hl)
 505+ 9FB3 A7               and a
 506+ 9FB4
 507+ 9FB4              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FB4
 509+ 9FB4              ;    jr z,$
 510+ 9FB4
 511+ 9FB4              ;! Reinicia el Patrón de movimiento.
 512+ 9FB4
 513+ 9FB4 CC B9 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FB7
 515+ 9FB7 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FB8
 517+ 9FB8 C9               ret
 518+ 9FB9
 519+ 9FB9
 520+ 9FB9              ; ---------- --------- --------- ---------- ----------
 521+ 9FB9              ;
 522+ 9FB9              ;   24/07/23
 523+ 9FB9              ;
 524+ 9FB9              ;   Inicializa_Puntero_indice_mov
 525+ 9FB9
 526+ 9FB9              Inicializa_Puntero_indice_mov
 527+ 9FB9
 528+ 9FB9              ; Existe etiqueta de bucle principal???
 529+ 9FB9
 530+ 9FB9 2A FE 89         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FBC 24               inc h
 532+ 9FBD 25               dec h
 533+ 9FBE 28 05            jr z,2F
 534+ 9FC0
 535+ 9FC0 22 FA 89         ld (Puntero_indice_mov),hl
 536+ 9FC3 18 14            jr 3F
 537+ 9FC5
 538+ 9FC5              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FC5
 540+ 9FC5 3A 00 8A     2 ld a,(Incrementa_puntero)
 541+ 9FC8 47               ld b,a
 542+ 9FC9
 543+ 9FC9 2A FA 89         ld hl,(Puntero_indice_mov)
 544+ 9FCC 2B           1 dec hl
 545+ 9FCD 2B               dec hl
 546+ 9FCE 10 FC            djnz 1B
 547+ 9FD0 22 FA 89         ld (Puntero_indice_mov),hl
 548+ 9FD3
 549+ 9FD3 AF               xor a
 550+ 9FD4 32 00 8A         ld (Incrementa_puntero),a
 551+ 9FD7 18 06            jr 4F
 552+ 9FD9
 553+ 9FD9 3A 01 8A     3 ld a,(Incrementa_puntero_backup)
 554+ 9FDC 32 00 8A         ld (Incrementa_puntero),a
 555+ 9FDF C9           4 ret
 556+ 9FE0
 557+ 9FE0
 558+ 9FE0
# file closed: Patrones_de_mov.asm
1300  9FE0              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9FE0              ; Relojes y temporizaciones.
   2+ 9FE0
   3+ 9FE0              ; ------------------------------------------------------
   4+ 9FE0              ;
   5+ 9FE0              ;	16/7/23
   6+ 9FE0              ;
   7+ 9FE0              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9FE0              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9FE0              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9FE0              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9FE0              ;
  12+ 9FE0              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9FE0              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9FE0
  15+ 9FE0              ; Disparo_entidad db 1
  16+ 9FE0              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9FE0              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9FE0
  19+ 9FE0              Habilita_disparos
  20+ 9FE0
  21+ 9FE0 7E           	ld a,(hl)
  22+ 9FE1 A7           	and a
  23+ 9FE2 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9FE3
  25+ 9FE3 EB           	ex de,hl
  26+ 9FE4
  27+ 9FE4 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9FE5 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9FE6
  30+ 9FE6              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9FE6
  32+ 9FE6 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9FE7 7E           	ld a,(hl)
  34+ 9FE8 23           	inc hl
  35+ 9FE9 77           	ld (hl),a
  36+ 9FEA
  37+ 9FEA EB           	ex de,hl						; Habilitamos disparo.
  38+ 9FEB 3E 01        	ld a,1
  39+ 9FED 77           	ld (hl),a
  40+ 9FEE C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1301  9FEF              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FEF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FEF              ;
   3+ 9FEF              ;	3/1/23
   4+ 9FEF              ;
   5+ 9FEF              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FEF
   7+ 9FEF              ;	ADC HL,SP	LD (addr),SP
   8+ 9FEF              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FEF              ;	ADD IX,SP	LD SP,nn
  10+ 9FEF              ; 	ADD IY,SP	LD SP,HL
  11+ 9FEF              ;				LD SP,IX
  12+ 9FEF              ;	DEC SP		LD SP,IY
  13+ 9FEF
  14+ 9FEF              ;	EX (SP),HL
  15+ 9FEF              ;	EX (SP),IX
  16+ 9FEF              ;	EX (SP),IY
  17+ 9FEF
  18+ 9FEF              ;	INC SP
  19+ 9FEF
  20+ 9FEF
  21+ 9FEF                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0              ;    call Selecciona_punteros
  33+ 7FA0
  34+ 7FA0 ED 73 1D 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  36+ 7FA7
  37+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  38+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  39+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  40+ 7FAC
  41+ 7FAC 3A 0C 8A         ld a,(Ctrl_1)
  42+ 7FAF CB 47            bit 0,a
  43+ 7FB1 28 05            jr z,2F
  44+ 7FB3
  45+ 7FB3 2A 23 8A         ld hl,(Stack_snapshot_disparos)
  46+ 7FB6
  47+ 7FB6 18 03            jr 4F
  48+ 7FB8
  49+ 7FB8 2A 21 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  50+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  51+ 7FBD
  52+ 7FBD D1           1 pop de
  53+ 7FBE 73               ld (hl),e
  54+ 7FBF 23               inc hl
  55+ 7FC0 72               ld (hl),d
  56+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  57+ 7FC2 10 F9            djnz 1B
  58+ 7FC4
  59+ 7FC4 CB 47            bit 0,a
  60+ 7FC6 28 05            jr z,5F
  61+ 7FC8
  62+ 7FC8 22 23 8A         ld (Stack_snapshot_disparos),hl
  63+ 7FCB 18 03            jr 6F
  64+ 7FCD
  65+ 7FCD 22 21 8A     5 ld (Stack_snapshot),hl
  66+ 7FD0 ED 7B 1D 8A  6 ld sp,(Stack)
  67+ 7FD4              ;    call Actualiza_punteros                         ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  68+ 7FD4 C9               ret
  69+ 7FD5
  70+ 7FD5              ; ------------------------------------------------
  71+ 7FD5              ;
  72+ 7FD5              ;   28/07/23
  73+ 7FD5              ;
  74+ 7FD5              ;   Seleccionamos el primer Album_de_fotos y disparos si (Resorte)="1".
  75+ 7FD5              ;   Seleccionamos el segundo Album_de_fotos y disparos si (Resorte)="0".
  76+ 7FD5
  77+ 7FD5              ;Selecciona_punteros
  78+ 7FD5
  79+ 7FD5              ;     push ix
  80+ 7FD5              ;     push iy
  81+ 7FD5
  82+ 7FD5              ;     ld a,(Resorte)
  83+ 7FD5              ;     and a
  84+ 7FD5              ;     jr z,1F
  85+ 7FD5
  86+ 7FD5              ; 1er Album.
  87+ 7FD5              ;     ld ix,(Stack_snapshot_1)
  88+ 7FD5              ;     ld iy,(Stack_snapshot_disparos_1)
  89+ 7FD5              ;     ld (Stack_snapshot),ix
  90+ 7FD5              ;     ld (Stack_snapshot_disparos),iy
  91+ 7FD5              ;     jr 2F
  92+ 7FD5
  93+ 7FD5              ; 2º Album.
  94+ 7FD5              ; 1 ld ix,(Stack_snapshot_2)
  95+ 7FD5              ;     ld iy,(Stack_snapshot_disparos_2)
  96+ 7FD5              ;     ld (Stack_snapshot),ix
  97+ 7FD5              ;     ld (Stack_snapshot_disparos),iy
  98+ 7FD5
  99+ 7FD5              ; 2 pop iy
 100+ 7FD5              ;     pop ix
 101+ 7FD5              ;     ret
 102+ 7FD5
 103+ 7FD5              ; ------------------------------------------------
 104+ 7FD5              ;
 105+ 7FD5              ;   28/07/23
 106+ 7FD5              ;
 107+ 7FD5              ;   Actualizamos los punteros del 1er album de fotos y disparos, si (Resorte)="1".
 108+ 7FD5              ;   Actualizamos los punteros del 2º album de fotos y disparos, si (Resorte)="0".
 109+ 7FD5
 110+ 7FD5              ;Actualiza_punteros
 111+ 7FD5
 112+ 7FD5              ;     push ix
 113+ 7FD5              ;     push iy
 114+ 7FD5
 115+ 7FD5              ;     ld a,(Resorte)
 116+ 7FD5              ;     and a
 117+ 7FD5              ;     jr z,1F
 118+ 7FD5
 119+ 7FD5              ; 1er Album.
 120+ 7FD5              ;     ld ix,(Stack_snapshot)
 121+ 7FD5              ;     ld iy,(Stack_snapshot_disparos)
 122+ 7FD5              ;     ld (Stack_snapshot_1),ix
 123+ 7FD5              ;     ld (Stack_snapshot_disparos_1),iy
 124+ 7FD5              ;     jr 2F
 125+ 7FD5
 126+ 7FD5              ; 2º Album.
 127+ 7FD5              ; 1 ld ix,(Stack_snapshot)
 128+ 7FD5              ;     ld iy,(Stack_snapshot_disparos)
 129+ 7FD5              ;     ld (Stack_snapshot_2),ix
 130+ 7FD5              ;     ld (Stack_snapshot_disparos_2),iy
 131+ 7FD5
 132+ 7FD5              ; 2 pop iy
 133+ 7FD5              ;     pop ix
 134+ 7FD5              ;     ret
# file closed: Guarda_foto_registros.asm
1302  7FD5
1303  7FD5              	SAVESNA "Pruebas.sna", START
1304  7FD5
1305  7FD5
1306  7FD5
1307  7FD5
# file closed: Banco_de_pruebas.asm
