# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 52 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 0A 97 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 FA 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 0A 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad.
 167  85D7
 168  85D7              ; Gestión de ENTIDADES.
 169  85D7
 170  85D7 00 00        Puntero_store_entidades defw 0
 171  85D9 00 00        Puntero_restore_entidades defw 0
 172  85DB 00 00        Indice_restore defw 0
 173  85DD 02           Numero_de_entidades db 2								; Nº de entidades en pantalla, (contando con Amadeus).
 174  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 175  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 176  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 177  85DF              ;														; _ (Numero_de_malotes)="0".
 178  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 179  85E1              ;														; _variable para almacenar lo posición del puntero_
 180  85E1              ; 														; _de pila, SP.
 181  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 182  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 183  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 184  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 185  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 186  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 188  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 189  85E7
 190  85E7              ;---------------------------------------------------------------------------------------------------------------
 191  85E7
 192  85E7              ; Gestión de Disparos.
 193  85E7
 194  85E7 00           Numero_de_disparotes db 0
 195  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 196  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 197  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 198  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 199  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 200  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 201  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 202  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 203  85EF              ;														; _produzca colisión.
 204  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 205  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 206  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 208  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 209  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 210  85F7
 211  85F7              ;---------------------------------------------------------------------------------------------------------------
 212  85F7
 213  85F7              ; Relojes y temporizaciones.
 214  85F7
 215  85F7 01           Habilita_disparo_Amadeus db 1
 216  85F8 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 217  85F9 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 218  85FA
 219  85FA 01           Habilita_disparo_entidad db 1
 220  85FB 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 221  85FC 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 222  85FD
 223  85FD              ;---------------------------------------------------------------------------------------------------------------
 224  85FD
 225  85FD              ; Gestión de FRAMES.
 226  85FD
 227  85FD 00           Switch db 0
 228  85FE
 229  85FE              ; Variables de Raster y localización en pantalla.
 230  85FE
 231  85FE 00 FF        Temp_Raster defw $ff00
 232  8600
 233  8600              ; Rutina principal *************************************************************************************************************************************************************************
 234  8600              ;
 235  8600              ;	14/11/22
 236  8600
 237  8600 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 238  8603
 239  8603 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 240  8605 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 241  8607 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 242  8609 F3           	DI
 243  860A
 244  860A 3E 07        	ld a,%00000111
 245  860C CD 1E 93     	call Cls
 246  860F
 247  860F              ;	call Pinta_FILAS
 248  860F
 249  860F CD CE 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 250  8612
 251  8612 21 DD 85     	ld hl,Numero_de_entidades
 252  8615 46           	ld b,(hl)
 253  8616 04           	inc b
 254  8617 05           	dec b
 255  8618 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 256  861A
 257  861A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 258  861A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 259  861A              ;	Pintamos el resto de entidades:
 260  861A
 261  861A CD A7 87     	call Inicia_punteros_de_entidades
 262  861D
 263  861D              ;	INICIA ENTIDADES!!!!!
 264  861D
 265  861D C5           1 push bc  												; Guardo el contador de entidades.
 266  861E CD 01 88      	call Inicia_Puntero_objeto
 267  8621 CD 6E 8D     	call Draw
 268  8624 CD A0 7F     	call Guarda_foto_registros
 269  8627 CD 49 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 270  862A C1           	pop bc
 271  862B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 272  862D
 273  862D              ; 	INICIA AMADEUS!!!!!
 274  862D
 275  862D CD 9C 88     3 call Restore_Amadeus
 276  8630 CD 01 88     	call Inicia_Puntero_objeto
 277  8633 CD 6E 8D     	call Draw
 278  8636 CD A0 7F     	call Guarda_foto_registros
 279  8639 CD AE 88     	call Store_Amadeus
 280  863C
 281  863C              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 282  863C
 283  863C CD BD 87     	call Inicia_Puntero_Disparo_Entidades
 284  863F CD C4 87     	call Inicia_Puntero_Disparo_Amadeus
 285  8642
 286  8642              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 287  8642
 288  8642 CD A7 87     	call Inicia_punteros_de_entidades
 289  8645 CD 8A 88     	call Restore_Primera_entidad
 290  8648
 291  8648 3A DD 85     	ld a,(Numero_de_entidades)
 292  864B 3C           	inc a
 293  864C 32 DE 85     	ld (Numero_de_malotes),a
 294  864F
 295  864F FB           2 ei
 296  8650 18 FD        	jr 2B
 297  8652
 298  8652              ; -----------------------------------------------------------------------------------
 299  8652
 300  8652              Frame
 301  8652
 302  8652              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 303  8652              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 304  8652
 305  8652              ; PINTAMOS.
 306  8652
 307  8652 3E 02            ld a,2
 308  8654 D3 FE            out ($fe),a
 309  8656 CD 72 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 310  8659 CD AB 90     	call Extrae_foto_disparos
 311  865C 3E 01            ld a,1
 312  865E D3 FE            out ($fe),a
 313  8660
 314  8660              ; ----------------------------------------------------------------------
 315  8660
 316  8660              ; RELOJES.
 317  8660
 318  8660 21 F7 85     	ld hl,Habilita_disparo_Amadeus
 319  8663 11 F9 85     	ld de,Temporiza_disparo_Amadeus
 320  8666 CD D4 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 321  8669
 322  8669 21 FA 85     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 323  866C 11 FC 85     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 324  866F CD D4 7F     	call Habilita_disparos
 325  8672
 326  8672              ; COLISIONES.
 327  8672
 328  8672 CD 10 8D     8 call Selector_de_impactos
 329  8675
 330  8675              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 331  8675              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 332  8675              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 333  8675
 334  8675 AF           	xor a
 335  8676 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 336  8679
 337  8679 CD A7 87     	call Inicia_punteros_de_entidades
 338  867C CD 8A 88     	call Restore_Primera_entidad
 339  867F
 340  867F              ; ---------------------------------------------------------------------------------------
 341  867F
 342  867F CD 90 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 343  8682 21 00 70     	ld hl,Album_de_fotos
 344  8685 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 345  8688              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 346  8688 3A DD 85         ld a,(Numero_de_entidades)
 347  868B 47               ld b,a
 348  868C A7           	and a
 349  868D 28 53        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 350  868F
 351  868F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 352  868F
 353  868F              ; Código que ejecutamos con cada entidad:
 354  868F
 355  868F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 356  868F              ; _con las coordenadas de la entidad almacenada en DRAW.
 357  868F
 358  868F 3A D6 85     2 ld a,(Ctrl_1)
 359  8692 CB 57        	bit 2,a
 360  8694 28 1B        	jr z,7F
 361  8696
 362  8696 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 363  8699 EB           	ex de,hl 										; D contiene la coordenada_y del disparo.
 364  869A              ;													; E contiene la coordenada_X del disparo.
 365  869A 2A A1 85     	ld hl,(Coordenada_X) 							; L Coordenada_x de la entidad.
 366  869D              ;													; H Coordenado_y de la entidad.
 367  869D A7           	and a
 368  869E ED 52        	sbc hl,de
 369  86A0
 370  86A0 CD 47 8D     	call Determina_resultado_comparativa
 371  86A3
 372  86A3 04           	inc b
 373  86A4 05           	dec b
 374  86A5 28 0A        	jr z,7F
 375  86A7
 376  86A7 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 377  86A9 32 B4 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 378  86AC 21 D6 85     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 379  86AF CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 380  86B1
 381  86B1 C5           7 push bc
 382  86B2
 383  86B2 3A B4 85     	ld a,(Impacto)
 384  86B5 A7           	and a
 385  86B6 28 0B        	jr z,9F
 386  86B8
 387  86B8              ; ----- Impacto
 388  86B8
 389  86B8 CD 5E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido IMPACTO!!!!!
 390  86BB
 391  86BB              ;	call Borra_datos_entidad
 392  86BB              ;	ld hl,Numero_de_entidades
 393  86BB              ;	dec (hl)
 394  86BB
 395  86BB AF           	xor a
 396  86BC 32 B4 85     	ld (Impacto),a
 397  86BF
 398  86BF 18 FE        	jr $
 399  86C1
 400  86C1 18 19        	jr 6F
 401  86C3
 402  86C3              ; ----- Impacto
 403  86C3
 404  86C3 CD 12 87     9 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 405  86C6
 406  86C6 3A C9 85     	ld a,(Ctrl_0)
 407  86C9 CB 67        	bit 4,a
 408  86CB 28 06        	jr z,1F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 409  86CD
 410  86CD              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 411  86CD              ; [[[
 412  86CD CD 19 89     	call Detecta_disparo_entidad
 413  86D0              ; ]]]
 414  86D0 CD 6E 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 415  86D3
 416  86D3 21 C9 85     1 ld hl,Ctrl_0
 417  86D6 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 418  86D8 AF           	xor a
 419  86D9 32 CA 85     	ld (Obj_dibujado),a
 420  86DC
 421  86DC CD 49 88     6 call Store_Restore_entidades
 422  86DF C1           	pop bc
 423  86E0 10 AD        	djnz 2B
 424  86E2
 425  86E2              ; Tras la gestión de las entidades, ... AMADEUS.
 426  86E2
 427  86E2 CD 9C 88     4 call Restore_Amadeus
 428  86E5
 429  86E5              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 430  86E5
 431  86E5 3A B4 85     	ld a,(Impacto)
 432  86E8 A7           	and a
 433  86E9 20 FE        	jr nz,$
 434  86EB
 435  86EB              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 436  86EB
 437  86EB CD 3F 87     	call Mov_Amadeus
 438  86EE
 439  86EE 3A C9 85     	ld a,(Ctrl_0)
 440  86F1 CB 67        	bit 4,a
 441  86F3 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 442  86F5
 443  86F5 CD 6E 87     	call Guarda_foto_entidad_a_pintar
 444  86F8
 445  86F8 21 C9 85     3 ld hl,Ctrl_0
 446  86FB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 447  86FD AF           	xor a
 448  86FE 32 CA 85     	ld (Obj_dibujado),a
 449  8701
 450  8701 CD AE 88     	call Store_Amadeus
 451  8704
 452  8704 CD AE 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 453  8707
 454  8707              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 455  8707
 456  8707 CD CB 87     	call Calcula_numero_de_malotes
 457  870A CD E3 87     	call Calcula_numero_de_disparotes
 458  870D
 459  870D 3E 04        	ld a,4
 460  870F D3 FE        	out ($fe),a
 461  8711 C9           	ret
 462  8712
 463  8712              ; --------------------------------------------------------------------------------------------------------------
 464  8712              ;
 465  8712              ;	27/03/23
 466  8712
 467  8712              Mov_obj
 468  8712
 469  8712              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 470  8712
 471  8712 AF           	xor a
 472  8713 32 CA 85     	ld (Obj_dibujado),a
 473  8716 CD 78 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 474  8719              ;														; Obj_dibujado="0".
 475  8719
 476  8719              ; Movemos Entidades malignas.
 477  8719
 478  8719 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 479  871C 24           	inc h                                               ; Salimos de la rutina.
 480  871D 25           	dec h
 481  871E C8           	ret z
 482  871F
 483  871F CD 0C 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 484  8722
 485  8722 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 486  8725 CB 67        	bit 4,a
 487  8727 C8           	ret z
 488  8728
 489  8728              ; Ha habido desplazamiento de la entidad maligna.
 490  8728              ; Ha llegado a zona de AMADEUS ???
 491  8728
 492  8728 3A A2 85     	ld a,(Coordenada_y)
 493  872B FE 14        	cp $14
 494  872D D4 DF 8A     	call nc, Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 495  8730              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 496  8730
 497  8730              ; ---------
 498  8730
 499  8730 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 500  8732 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 501  8735 CD 78 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 502  8738 CD 8F 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 503  873B CD 5E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 504  873E C9           	ret													; _de la misma.
 505  873F
 506  873F              ; --------------------------------------------------------------------------------------------------------------
 507  873F              ;
 508  873F              ;	29/1/23
 509  873F
 510  873F              Mov_Amadeus
 511  873F
 512  873F AF           	xor a
 513  8740 32 CA 85     	ld (Obj_dibujado),a
 514  8743 CD 78 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 515  8746              ;														; Obj_dibujado="0".
 516  8746              ; Movemos Amadeus.
 517  8746
 518  8746 CD E2 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 519  8749 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 520  874C CB 67        	bit 4,a
 521  874E C8           	ret z
 522  874F
 523  874F              ; ---------
 524  874F
 525  874F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 526  8751 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 527  8754 CD 78 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 528  8757 CD 8F 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 529  875A CD 5E 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 530  875D C9           	ret													; _de la nave.
 531  875E
 532  875E              ; --------------------------------------------------------------------------------------------------------------
 533  875E              ;
 534  875E              ;	31/01/23
 535  875E              ;
 536  875E              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 537  875E
 538  875E              Guarda_foto_entidad_a_borrar
 539  875E
 540  875E CD 48 90     	call Prepara_draw
 541  8761 CD 82 8F     	call calcula_CColumnass
 542  8764 CD B9 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 543  8767 CD 0E 90     	call Define_rutina_de_impresion
 544  876A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 545  876D C9           	ret
 546  876E
 547  876E              ; --------------------------------------------------------------------------------------------------------------
 548  876E              ;
 549  876E              ;	31/01/23
 550  876E              ;
 551  876E              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 552  876E              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 553  876E
 554  876E              Guarda_foto_entidad_a_pintar
 555  876E
 556  876E CD 9B 87     	call Repone_pintar
 557  8771 CD 6E 8D     	call Draw
 558  8774 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 559  8777 C9           	ret
 560  8778
 561  8778              ; --------------------------------------------------------------------------------------------------------------
 562  8778              ;
 563  8778              ;
 564  8778
 565  8778 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 566  877B 3A CA 85     	ld a,(Obj_dibujado)
 567  877E A7           	and a
 568  877F 28 05        	jr z,1F
 569  8781 11 BF 85     	ld de,Variables_de_pintado
 570  8784 18 03        	jr 2F
 571  8786 11 B5 85     1 ld de,Variables_de_borrado
 572  8789 01 08 00     2 ld bc,8
 573  878C ED B0        	ldir
 574  878E C9           	ret
 575  878F
 576  878F              ; --------------------------------------------------------------------------------------------------------------
 577  878F
 578  878F 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 579  8792 11 9B 85     	ld de,Filas
 580  8795 01 08 00     	ld bc,8
 581  8798 ED B0        	ldir
 582  879A C9           	ret
 583  879B
 584  879B 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 585  879E 11 9B 85     	ld de,Filas
 586  87A1 01 08 00     	ld bc,8
 587  87A4 ED B0        	ldir
 588  87A6 C9           	ret
 589  87A7
 590  87A7              ; *************************************************************************************************************************************************************
 591  87A7              ;
 592  87A7              ; 8/1/23
 593  87A7              ;
 594  87A7              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 595  87A7              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 596  87A7              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 597  87A7
 598  87A7              ; Destruye HL y DE !!!!!
 599  87A7
 600  87A7              Inicia_punteros_de_entidades
 601  87A7
 602  87A7 21 68 84     	ld hl,Indice_de_entidades
 603  87AA CD FB 87         call Extrae_address
 604  87AD 22 D7 85         ld (Puntero_store_entidades),hl
 605  87B0 21 6A 84     	ld hl,Indice_de_entidades+2
 606  87B3 22 DB 85     	ld (Indice_restore),hl
 607  87B6 CD FB 87     	call Extrae_address
 608  87B9 22 D9 85     	ld (Puntero_restore_entidades),hl
 609  87BC C9               ret
 610  87BD
 611  87BD              ; *************************************************************************************************************************************************************
 612  87BD              ;
 613  87BD              ; 8/1/23
 614  87BD              ;
 615  87BD              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 616  87BD
 617  87BD 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 618  87C0 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 619  87C3 C9           	ret
 620  87C4 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 621  87C7 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 622  87CA C9           	ret
 623  87CB
 624  87CB              ; -------------------------------------------------------------------------------------------------------------
 625  87CB              ;
 626  87CB              ; 28/2/23
 627  87CB              ;
 628  87CB
 629  87CB              Calcula_numero_de_malotes
 630  87CB
 631  87CB 21 00 70     	ld hl,Album_de_fotos
 632  87CE EB           	ex de,hl
 633  87CF 2A E3 85     	ld hl,(Stack_snapshot)
 634  87D2
 635  87D2 06 00        	ld b,0
 636  87D4 7D           	ld a,l
 637  87D5 93           	sub e
 638  87D6 28 07        	jr z,1F
 639  87D8
 640  87D8              ; Nº de malotes no es "0".
 641  87D8
 642  87D8 D6 06        2 sub 6
 643  87DA 04           	inc b
 644  87DB A7           	and a
 645  87DC 20 FA        	jr nz,2B
 646  87DE 78           	ld a,b
 647  87DF
 648  87DF 32 DE 85     1 ld (Numero_de_malotes),a
 649  87E2 C9           	ret
 650  87E3
 651  87E3              ; -------------------------------------------------------------------------------------------------------------
 652  87E3              ;
 653  87E3              ; 28/2/23
 654  87E3              ;
 655  87E3
 656  87E3              Calcula_numero_de_disparotes
 657  87E3
 658  87E3 21 60 70     	ld hl,Album_de_fotos_disparos
 659  87E6 EB           	ex de,hl
 660  87E7 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 661  87EA
 662  87EA 06 00        	ld b,0
 663  87EC 7D           	ld a,l
 664  87ED 93           	sub e
 665  87EE 28 07        	jr z,1F
 666  87F0
 667  87F0              ; Nº de malotes no es "0".
 668  87F0
 669  87F0 D6 06        2 sub 6
 670  87F2 04           	inc b
 671  87F3 A7           	and a
 672  87F4 20 FA        	jr nz,2B
 673  87F6 78           	ld a,b
 674  87F7
 675  87F7 32 E7 85     1 ld (Numero_de_disparotes),a
 676  87FA C9           	ret
 677  87FB              ; *************************************************************************************************************************************************************
 678  87FB              ;
 679  87FB              ; 20/10/22
 680  87FB              ;
 681  87FB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 682  87FB              ;
 683  87FB              ; Destruye el puntero y DE !!!!!
 684  87FB
 685  87FB 5E           Extrae_address ld e,(hl)
 686  87FC 23           	inc hl
 687  87FD 56           	ld d,(hl)
 688  87FE 2B           	dec hl
 689  87FF EB           	ex de,hl
 690  8800 C9           	ret
 691  8801
 692  8801              ; *************************************************************************************************************************************************************
 693  8801              ;
 694  8801              ;	7/2/23
 695  8801              ;
 696  8801              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 697  8801              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 698  8801              ;
 699  8801              ;   Destruye HL y BC !!!!!,
 700  8801              ;
 701  8801              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 702  8801              ;					"0" ..... Izquierda.
 703  8801
 704  8801              Inicia_Puntero_objeto
 705  8801
 706  8801 3A AF 85     	ld a,(Cuad_objeto)
 707  8804 E6 01        	and 1
 708  8806 F5           	push af
 709  8807 CC 25 88     	call z,Inicia_puntero_objeto_izq
 710  880A F1           	pop af
 711  880B 28 2B        	jr z,1F
 712  880D CD 12 88     	call Inicia_puntero_objeto_der
 713  8810 18 26        	jr 1F
 714  8812
 715  8812              ; Arrancamos desde la parte izquierda de la pantalla.
 716  8812              ; Iniciamos (Indice_Sprite_der).
 717  8812
 718  8812 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 719  8815 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 720  8818 CD FB 87     	call Extrae_address
 721  881B 22 9F 85     	ld (Puntero_objeto),hl
 722  881E
 723  881E 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 724  8821              ;	call Extrae_address
 725  8821 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 726  8824 C9           	ret
 727  8825
 728  8825              ; Arrancamos desde la parte derecha de la pantalla.
 729  8825              ; Iniciamos (Indice_Sprite_izq).
 730  8825
 731  8825 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 732  8828 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 733  882B CD FB 87     	call Extrae_address
 734  882E 22 9F 85     	ld (Puntero_objeto),hl
 735  8831
 736  8831 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 737  8834              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 738  8834 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 739  8837 C9           	ret
 740  8838
 741  8838              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 742  8838
 743  8838 21 38 83     1 ld hl,Amadeus
 744  883B ED 4B 9F 85  	ld bc,(Puntero_objeto)
 745  883F B7 ED 42     	sub hl,bc
 746  8842 C0           	ret nz
 747  8843 21 C9 85     	ld hl,Ctrl_0
 748  8846 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 749  8848 C9           	ret 												; _de nuestra nave en los extremos.
 750  8849
 751  8849              ; *************************************************************************************************************************************************************
 752  8849              ;
 753  8849              ;	8/1/23
 754  8849              ;
 755  8849              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 756  8849              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 757  8849
 758  8849              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 759  8849              ;	_de la 2ª y 3ª entidad respectivamente.
 760  8849
 761  8849              Store_Restore_entidades
 762  8849
 763  8849 E5           	push hl
 764  884A D5           	push de
 765  884B C5            	push bc
 766  884C
 767  884C              ;	STORE !!!!!
 768  884C              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 769  884C
 770  884C 21 9B 85     	ld hl,Filas
 771  884F ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 772  8853 01 3B 00     	ld bc,59
 773  8856 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 774  8858
 775  8858              ; 	Entidad_sospechosa. 20/4/23
 776  8858
 777  8858 3A B4 85     	ld a,(Impacto)
 778  885B A7           	and a
 779  885C 28 0C        	jr z,1F
 780  885E
 781  885E 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 782  8861 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 783  8864 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 784  8865 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 785  8867 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 786  886A
 787  886A              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 788  886A
 789  886A 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 790  886D 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 791  8870 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 792  8873 01 3B 00     	ld bc,59
 793  8876 ED B0        	ldir
 794  8878
 795  8878              ;	Incrementa RESTORE !!!!!
 796  8878
 797  8878 2A DB 85         ld hl,(Indice_restore)
 798  887B 23           	inc hl
 799  887C 23           	inc hl
 800  887D 22 DB 85     	ld (Indice_restore),hl
 801  8880 CD FB 87         call Extrae_address
 802  8883 22 D9 85         ld (Puntero_restore_entidades),hl
 803  8886 C1           	pop bc
 804  8887 D1           	pop de
 805  8888 E1           	pop hl
 806  8889 C9           	ret
 807  888A
 808  888A              ; **************************************************************************************************
 809  888A              ;
 810  888A              ;	29/10/22
 811  888A              ;
 812  888A              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 813  888A
 814  888A E5           Restore_Primera_entidad push hl
 815  888B D5           	push de
 816  888C C5            	push bc
 817  888D 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 818  8890 11 9B 85     	ld de,Filas
 819  8893 01 3B 00     	ld bc,59
 820  8896 ED B0        	ldir
 821  8898 C1           	pop bc
 822  8899 D1           	pop de
 823  889A E1           	pop hl
 824  889B C9           	ret
 825  889C
 826  889C              ; **************************************************************************************************
 827  889C              ;
 828  889C              ;	25/01/23
 829  889C              ;
 830  889C              ;	Restore_Amadeus
 831  889C              ;
 832  889C              ;	Cargamos en DRAW los parámetros de Amadeus.
 833  889C              ;
 834  889C
 835  889C E5           Restore_Amadeus	push hl
 836  889D D5           	push de
 837  889E C5            	push bc
 838  889F 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 839  88A2 11 9B 85     	ld de,Filas
 840  88A5 01 3B 00     	ld bc,59
 841  88A8 ED B0        	ldir
 842  88AA C1           	pop bc
 843  88AB D1           	pop de
 844  88AC E1           	pop hl
 845  88AD C9           	ret
 846  88AE
 847  88AE              ; *************************************************************************************************************************************************************
 848  88AE              ;
 849  88AE              ;	29/01/23
 850  88AE              ;
 851  88AE              ;	Store_Amadeus
 852  88AE              ;
 853  88AE              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 854  88AE              ;
 855  88AE
 856  88AE E5           Store_Amadeus push hl
 857  88AF D5           	push de
 858  88B0 C5            	push bc
 859  88B1 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 860  88B4 11 74 84     	ld de,Amadeus_db
 861  88B7 01 3B 00     	ld bc,59
 862  88BA ED B0        	ldir
 863  88BC C1           	pop bc
 864  88BD D1           	pop de
 865  88BE E1           	pop hl
 866  88BF C9           	ret
 867  88C0
 868  88C0              ; **************************************************************************************************
 869  88C0
 870  88C0              ; -----------------------------------------------------------
 871  88C0              ;
 872  88C0              ;	27/04/23
 873  88C0              ;
 874  88C0              ; 	Limpia los datos del almacén de entidades de DRAW donde se encuentra una "entidad impactada".
 875  88C0              ;
 876  88C0              ;	Destruye: HL,BC,DE,A
 877  88C0
 878  88C0 2A D7 85     Borra_datos_entidad ld hl,(Puntero_store_entidades)
 879  88C3 01 3A 00     	ld bc,58
 880  88C6 AF           	xor a
 881  88C7 77           	ld (hl),a
 882  88C8 E5           	push hl
 883  88C9 D1           	pop de
 884  88CA 13           	inc de
 885  88CB ED B0        	ldir
 886  88CD C9           	ret
 887  88CE
 888  88CE              ; -----------------------------------------------------------
 889  88CE
 890  88CE              ; Teclado.
 891  88CE
 892  88CE 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 893  88D0 DB FE        	in a,($fe)
 894  88D2 E6 01        	and $01
 895  88D4 28 02        	jr z,1f
 896  88D6 18 F6        	jr Pulsa_ENTER
 897  88D8 C9           1 ret
 898  88D9
 899  88D9              ; **************************************************************************************************
 900  88D9              ;
 901  88D9              ; Temporización.
 902  88D9
 903  88D9              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 904  88D9              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 905  88D9              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 906  88D9              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 907  88D9
 908  88D9              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 909  88D9              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 910  88D9              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 911  88D9
 912  88D9              ; A partir de $4f61 no hace falta DELAY.
 913  88D9
 914  88D9              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 915  88D9
 916  88D9 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 917  88DC 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 918  88DD 78           	LD A,B
 919  88DE A7           	AND A
 920  88DF 20 FB        	JR NZ,wait
 921  88E1 C9           	RET
 922  88E2
 923  88E2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 924  88E2              ;
 925  88E2              ;	5/3/23
 926  88E2              ;
 927  88E2              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 928  88E2
 929  88E2              Movimiento_Amadeus
 930  88E2
 931  88E2              ; Disparo.
 932  88E2
 933  88E2 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 934  88E5 A7           	and a
 935  88E6 20 02        	jr nz,1F
 936  88E8 18 15        	jr 2F
 937  88EA
 938  88EA 3E F7        1 ld a,$f7													; "5" para disparar.
 939  88EC DB FE        	in a,($fe)
 940  88EE E6 10        	and $10
 941  88F0
 942  88F0 F5           	push af
 943  88F1 CC 5B 89     	call z,Genera_disparo
 944  88F4 F1           	pop af
 945  88F5 20 08        	jr nz,2F
 946  88F7
 947  88F7 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 948  88FA EE 01        	xor 1
 949  88FC 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 950  88FF
 951  88FF 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 952  8901 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 953  8903 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 954  8905 CC AC 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 955  8908 3E F7        	ld a,$f7
 956  890A DB FE        	in a,($fe)
 957  890C E6 01        	and $01
 958  890E C8           	ret z
 959  890F
 960  890F 3E F7        	ld a,$f7
 961  8911 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 962  8913 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 963  8915 CC 8E 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 964  8918 C9           	ret
 965  8919
 966  8919              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 967  8919              ;
 968  8919              ;	Rutina provisional para que los malotes cagen balas.
 969  8919
 970  8919              Detecta_disparo_entidad
 971  8919
 972  8919 3A FA 85     	ld a,(Habilita_disparo_entidad)
 973  891C A7           	and a
 974  891D C8           	ret z
 975  891E 3E 7F        	ld a,$7f
 976  8920 DB FE        	in a,($fe)
 977  8922 E6 01        	and 1
 978  8924 C0           	ret nz
 979  8925 CD 5B 89     	call Genera_disparo
 980  8928 C9           	ret
 981  8929
 982  8929              ; Pinta indicadores de FILAS. ------------------------------------------------------
 983  8929
 984  8929 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 985  892C
 986  892C              ; ----------
 987  892C 06 20        	ld b,32
 988  892E E5           2 push hl
 989  892F C5           	push bc
 990  8930              ; ----------
 991  8930
 992  8930 06 BF        	ld b,$bf
 993  8932 36 80        1 ld (hl),%10000000
 994  8934 CD 54 90     	call NextScan
 995  8937 10 F9        	djnz 1B
 996  8939
 997  8939              ; ----------
 998  8939 C1           	pop bc
 999  893A E1           	pop hl
1000  893B 2C           	inc l
1001  893C 10 F0        	djnz 2B
1002  893E              ; ----------
1003  893E
1004  893E 06 03        	ld b,3
1005  8940 21 00 47         ld hl,$4700
1006  8943 CD 49 89     3 call Bucle_1
1007  8946 10 FB            djnz 3B
1008  8948 C9               ret
1009  8949
1010  8949 C5           Bucle_1 push bc
1011  894A E5                   push hl
1012  894B D1                   pop de
1013  894C 13                   inc de
1014  894D 01 FF 00             ld bc,255
1015  8950 36 FF                ld (hl),255
1016  8952 ED B0                ldir
1017  8954 23                   inc hl
1018  8955 3E 07                ld a,7
1019  8957 84                   add a,h
1020  8958 67                   ld h,a
1021  8959 C1                   pop bc
1022  895A C9                   ret
1023  895B
1024  895B              ; ---------------------------------------------------------------
1025  895B
1026  895B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 895B              ; ******************************************************************************************************************************************************************************************
   2+ 895B              ;
   3+ 895B              ;   17/04/23
   4+ 895B              ;
   5+ 895B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 895B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 895B              ;
   8+ 895B              ;
   9+ 895B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 895B              ;
  11+ 895B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 895B              ;               _ hacen las entidades hacia abajo.
  13+ 895B              ;
  14+ 895B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 895B              ;
  16+ 895B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 895B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 895B              ;
  19+ 895B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 895B              ;           _ la bala.
  21+ 895B              ;
  22+ 895B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 895B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 895B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 895B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 895B              ;           _ en el momento de generarse la bala)).
  27+ 895B
  28+ 895B              Genera_disparo
  29+ 895B
  30+ 895B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 895B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 895B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 895B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 895B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 895B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 895B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 895B
  38+ 895B              ; Exclusiones:
  39+ 895B
  40+ 895B 3A D2 85         ld a,(Columnas)
  41+ 895E 47               ld b,a
  42+ 895F 3A 9C 85         ld a,(Columns)
  43+ 8962 B8               cp b
  44+ 8963 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8964
  46+ 8964              ; ----- ----- -----
  47+ 8964
  48+ 8964 3A C9 85         ld a,(Ctrl_0)
  49+ 8967 CB 77            bit 6,a
  50+ 8969 20 06            jr nz,14F
  51+ 896B
  52+ 896B 3A A2 85         ld a,(Coordenada_y)
  53+ 896E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8970 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8971
  56+ 8971 21 00 80     14 ld hl,Indice_disparo
  57+ 8974 3A A3 85         ld a,(CTRL_DESPLZ)
  58+ 8977 4F               ld c,a
  59+ 8978 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 897A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 897A              ;                                            ""        ""       "f9", B="1"
  62+ 897A              ;                                            ""        ""       "fb", B="2"
  63+ 897A              ;                                            ""        ""       "fb", B="3"
  64+ 897A A7               and a
  65+ 897B 28 10            jr z,1F
  66+ 897D E6 01            and 1
  67+ 897F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8980
  69+ 8980 79               ld a,c
  70+ 8981 16 F9            ld d,$f9
  71+ 8983 23           2 inc hl
  72+ 8984 23               inc hl
  73+ 8985 04               inc b
  74+ 8986 BA               cp d
  75+ 8987 28 04            jr z,1F
  76+ 8989 14               inc d
  77+ 898A 14               inc d
  78+ 898B 18 F6            jr 2B
  79+ 898D
  80+ 898D CD FB 87     1 call Extrae_address
  81+ 8990 E5               push hl
  82+ 8991 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8993 DD 21 E7 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8997
  85+ 8997              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8997              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8997
  88+ 8997 3A C9 85         ld a,(Ctrl_0)
  89+ 899A CB 77            bit 6,a
  90+ 899C 20 04            jr nz,19F
  91+ 899E
  92+ 899E AF               xor a
  93+ 899F 32 FA 85         ld (Habilita_disparo_entidad),a
  94+ 89A2
  95+ 89A2 3A AF 85     19 ld a,(Cuad_objeto)
  96+ 89A5 FE 02            cp 2
  97+ 89A7 38 66            jr c,3F
  98+ 89A9 28 64            jr z,3F
  99+ 89AB
 100+ 89AB              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 89AB
 102+ 89AB E6 01            and 1
 103+ 89AD 28 30            jr z,4F
 104+ 89AF
 105+ 89AF              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 89AF              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 89AF              ;
 108+ 89AF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 89AF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 89AF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 89AF
 112+ 89AF 2A 9D 85     	ld hl,(Posicion_actual)
 113+ 89B2
 114+ 89B2              ;   Amadeus o entidad ???.
 115+ 89B2
 116+ 89B2 3A C9 85         ld a,(Ctrl_0)
 117+ 89B5 CB 77            bit 6,a
 118+ 89B7 28 0A            jr z,8F
 119+ 89B9
 120+ 89B9              ; 	Dispara Amadeus.
 121+ 89B9
 122+ 89B9 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 89BB CD 63 90         call PreviousScan
 124+ 89BE CD 63 90         call PreviousScan
 125+ 89C1
 126+ 89C1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 89C1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 89C1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 89C1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 89C1
 131+ 89C1 18 11            jr 10F
 132+ 89C3
 133+ 89C3              ; 	Dispara Entidad.
 134+ 89C3
 135+ 89C3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 89C6              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 89C6
 138+ 89C6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 89C6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 89C6
 141+ 89C6 C5               push bc
 142+ 89C7 06 10            ld b,16
 143+ 89C9 CD 54 90     9 call NextScan
 144+ 89CC 10 FB            djnz 9B
 145+ 89CE C1               pop bc
 146+ 89CF CD 39 8A         call Ajusta_disparo_parte_izquierda
 147+ 89D2 18 06            jr 17F
 148+ 89D4
 149+ 89D4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 89D4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 89D4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 89D4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 89D4
 154+ 89D4 CD 39 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 89D7 CD AE 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 89DA              ;                                                      ; _al generar el disparo.
 157+ 89DA
 158+ 89DA              ; 	LLegados a este punto tendremos:
 159+ 89DA              ;
 160+ 89DA              ;       Puntero_objeto_disparo en IY.
 161+ 89DA              ;       Rutinas_de_impresion en IX.
 162+ 89DA              ;       Puntero_de_impresion en HL.
 163+ 89DA              ;       Impacto/Dirección en BC.
 164+ 89DA
 165+ 89DA CD 41 8A     17 call Almacena_disparo
 166+ 89DD 18 52            jr 6F                                             ; RET.
 167+ 89DF
 168+ 89DF              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 89DF              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 89DF              ;
 171+ 89DF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 89DF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 89DF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 89DF
 175+ 89DF 2A 9D 85     4 ld hl,(Posicion_actual)
 176+ 89E2
 177+ 89E2              ;   Amadeus o entidad ???.
 178+ 89E2
 179+ 89E2 3A C9 85         ld a,(Ctrl_0)
 180+ 89E5 CB 77            bit 6,a
 181+ 89E7 28 0A            jr z,11F
 182+ 89E9
 183+ 89E9              ; 	Dispara Amadeus.
 184+ 89E9
 185+ 89E9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 89EB CD 63 90         call PreviousScan
 187+ 89EE CD 63 90         call PreviousScan
 188+ 89F1
 189+ 89F1              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 89F1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 89F1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 89F1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 89F1
 194+ 89F1 18 11            jr 13F
 195+ 89F3
 196+ 89F3              ; 	Dispara Entidad.
 197+ 89F3
 198+ 89F3 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 89F6              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 89F6
 201+ 89F6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 89F6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 89F6
 204+ 89F6 C5               push bc
 205+ 89F7 06 10            ld b,16
 206+ 89F9 CD 54 90     12 call NextScan
 207+ 89FC 10 FB            djnz 12B
 208+ 89FE C1               pop bc
 209+ 89FF
 210+ 89FF CD 32 8A         call Ajusta_disparo_parte_derecha
 211+ 8A02 18 06            jr 18F
 212+ 8A04
 213+ 8A04              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A04              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A04              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A04              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A04
 218+ 8A04 CD 32 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A07 CD AE 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A0A              ;                                                       ; _al generar el disparo.
 221+ 8A0A
 222+ 8A0A              ; LLegados a este punto tendremos:
 223+ 8A0A              ;
 224+ 8A0A              ;       Puntero_objeto_disparo en IY.
 225+ 8A0A              ;       Rutinas_de_impresion en IX.
 226+ 8A0A              ;       Puntero_de_impresion en HL.
 227+ 8A0A              ;       Impacto/Dirección en BC.
 228+ 8A0A
 229+ 8A0A CD 41 8A     18 call Almacena_disparo
 230+ 8A0D 18 22            jr 6F                                               ; RET.
 231+ 8A0F
 232+ 8A0F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A0F
 234+ 8A0F 28 11        3 jr z,5F
 235+ 8A11
 236+ 8A11              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A11              ;
 238+ 8A11              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A11              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A11              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A11              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A11
 243+ 8A11              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A11              ;	   ""        ""       "f9", B="1"
 245+ 8A11              ;	   ""        ""       "fb", B="2"
 246+ 8A11              ; 	   ""        ""       "fb", B="3"
 247+ 8A11
 248+ 8A11 2A 9D 85     	ld hl,(Posicion_actual)
 249+ 8A14 CD 54 90     	call NextScan
 250+ 8A17
 251+ 8A17              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A17              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A17              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A17
 256+ 8A17 CD 39 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A1A
 258+ 8A1A              ; 	No se produce impacto. B="$80"
 259+ 8A1A              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A1A
 261+ 8A1A 01 80 80         ld bc,$8080
 262+ 8A1D
 263+ 8A1D              ; 	LLegados a este punto tendremos:
 264+ 8A1D              ;
 265+ 8A1D              ;       Puntero_objeto_disparo en IY.
 266+ 8A1D              ;       Rutinas_de_impresion en IX.
 267+ 8A1D              ;       Puntero_de_impresion en HL.
 268+ 8A1D              ;       Impacto/Dirección en BC.
 269+ 8A1D
 270+ 8A1D CD 41 8A         call Almacena_disparo
 271+ 8A20 18 0F            jr 6F                                           ; RET.
 272+ 8A22
 273+ 8A22              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A22              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A22              ;
 276+ 8A22              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A22              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A22              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A22              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A22
 281+ 8A22 2A 9D 85     5 ld hl,(Posicion_actual)
 282+ 8A25 CD 54 90     	call NextScan
 283+ 8A28
 284+ 8A28              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A28              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A28              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A28              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A28
 289+ 8A28 CD 32 8A         call Ajusta_disparo_parte_derecha
 290+ 8A2B
 291+ 8A2B              ; 	No se produce impacto. B="$80"
 292+ 8A2B              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A2B
 294+ 8A2B 01 80 80     15 ld bc,$8080
 295+ 8A2E
 296+ 8A2E              ; 	LLegados a este punto tendremos:
 297+ 8A2E              ;
 298+ 8A2E              ;       Puntero_objeto_disparo en IY.
 299+ 8A2E              ;       Rutinas_de_impresion en IX.
 300+ 8A2E              ;       Puntero_de_impresion en HL.
 301+ 8A2E              ;       Impacto/Dirección en BC.
 302+ 8A2E
 303+ 8A2E CD 41 8A         call Almacena_disparo
 304+ 8A31
 305+ 8A31 C9           6 ret
 306+ 8A32
 307+ 8A32              ; ----------------------------------------------------------------
 308+ 8A32              ;
 309+ 8A32              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A32              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A32              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A32
 313+ 8A32 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A33 FE 02            cp 2
 315+ 8A35 38 01            jr c,1F
 316+ 8A37 23               inc hl
 317+ 8A38 C9           1 ret
 318+ 8A39
 319+ 8A39 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A3A FE 01        	cp 1
 321+ 8A3C 20 01        	jr nz,1F
 322+ 8A3E 2B           	dec hl
 323+ 8A3F 2B           1 dec hl
 324+ 8A40 C9               ret
 325+ 8A41
 326+ 8A41              ; ----------------------------------------------------------------
 327+ 8A41              ;
 328+ 8A41              ;   25/02/23
 329+ 8A41              ;
 330+ 8A41              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8A41              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8A41              ;
 333+ 8A41              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8A41              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8A41
 336+ 8A41              Almacena_disparo
 337+ 8A41
 338+ 8A41 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8A42 F1               pop af
 340+ 8A43 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8A44
 342+ 8A44 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8A45 E6 01            and 1
 344+ 8A47 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8A49              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8A49              ; 	Dispara AMADEUS.
 347+ 8A49
 348+ 8A49              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8A49              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8A49              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8A49              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8A49
 353+ 8A49 C5               push bc
 354+ 8A4A 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8A4D 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8A50 A7               and a
 357+ 8A51 ED 42            sbc hl,bc
 358+ 8A53 CC C4 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8A56 C1               pop bc
 360+ 8A57 28 54            jr z,4F
 361+ 8A59
 362+ 8A59 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8A5C 23               inc hl
 364+ 8A5D 23               inc hl
 365+ 8A5E 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8A61              ;                                                   ; _ Disparo_(+1).
 367+ 8A61 18 18            jr 2F
 368+ 8A63
 369+ 8A63              ; Dispara una entidad.
 370+ 8A63
 371+ 8A63 C5           1 push bc
 372+ 8A64 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8A67 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8A6A A7               and a
 375+ 8A6B ED 42            sbc hl,bc
 376+ 8A6D CC BD 87         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8A70 C1               pop bc
 378+ 8A71 28 3A            jr z,4F
 379+ 8A73
 380+ 8A73 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8A76 23               inc hl
 382+ 8A77 23               inc hl
 383+ 8A78 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8A7B              ;                                                   ; _ Disparo_(+1).
 385+ 8A7B CD FB 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8A7E              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8A7E              ;
 388+ 8A7E              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8A7E              ;                                                     Rutinas_de_impresion en IX.
 390+ 8A7E              ;                                                     Puntero_de_impresion en HL.
 391+ 8A7E              ;                                                     Impacto/Dirección en BC.
 392+ 8A7E
 393+ 8A7E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8A7F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8A80 23               inc hl                                          ; _ al siguiente.
 396+ 8A81 A7               and a
 397+ 8A82 20 C0            jr nz,3B
 398+ 8A84
 399+ 8A84 08               ex af,af
 400+ 8A85 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8A89 F9               ld sp,hl
 402+ 8A8A
 403+ 8A8A DD E5            push ix                                         ; Rutina de impresión.
 404+ 8A8C F5               push af                                         ; Puntero de impresión.
 405+ 8A8D FD E5            push iy                                         ; Puntero objeto.
 406+ 8A8F C5               push bc                                         ; Control.
 407+ 8A90
 408+ 8A90 ED 7B DF 85      ld sp,(Stack)
 409+ 8A94
 410+ 8A94              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8A94
 412+ 8A94 21 D6 85     	ld hl,Ctrl_1
 413+ 8A97 CB C6        	set 0,(hl)
 414+ 8A99
 415+ 8A99 DD E5        	push ix
 416+ 8A9B E1               pop hl
 417+ 8A9C F5               push af
 418+ 8A9D DD E1            pop ix
 419+ 8A9F
 420+ 8A9F CD A0 7F     	call Guarda_foto_registros
 421+ 8AA2
 422+ 8AA2 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8AA5 CB 86        	res 0,(hl)
 424+ 8AA7
 425+ 8AA7              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8AA7              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8AA7
 428+ 8AA7 CD C4 87         call Inicia_Puntero_Disparo_Amadeus
 429+ 8AAA CD BD 87         call Inicia_Puntero_Disparo_Entidades
 430+ 8AAD
 431+ 8AAD C9           4 ret
 432+ 8AAE
 433+ 8AAE              ; ----------------------------------------------------------------
 434+ 8AAE              ;
 435+ 8AAE              ;   4/3/23
 436+ 8AAE              ;
 437+ 8AAE              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8AAE              ;   _ al generarse el disparo.
 439+ 8AAE              ;
 440+ 8AAE              ;       "$80" ..... No se produce colisión.
 441+ 8AAE              ;       "$81" ..... Se produce colisión.
 442+ 8AAE
 443+ 8AAE              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8AAE              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8AAE
 446+ 8AAE
 447+ 8AAE FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8AB0 E5               push hl                                        ; Puntero de impresión.
 449+ 8AB1 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8AB3 CD CF 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8AB6
 452+ 8AB6 7B               ld a,e
 453+ 8AB7 E6 01            and 1
 454+ 8AB9 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8ABB
 456+ 8ABB E1               pop hl
 457+ 8ABC E5               push hl
 458+ 8ABD CD 54 90         call NextScan
 459+ 8AC0
 460+ 8AC0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8AC1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8AC3 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8AC5              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8AC5 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8AC7 CD CF 8A         call Bucle_2
 466+ 8ACA
 467+ 8ACA 43           2 ld b,e
 468+ 8ACB E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8ACC FD E1            pop iy
 470+ 8ACE C9               ret
 471+ 8ACF
 472+ 8ACF               ; ---------- ----------
 473+ 8ACF
 474+ 8ACF 06 02        Bucle_2 ld b,2
 475+ 8AD1 FD 7E 00     2 ld a,(iy)
 476+ 8AD4 A6               and (hl)
 477+ 8AD5 28 02            jr z,1F
 478+ 8AD7 1E 81            ld e,$81
 479+ 8AD9 23           1 inc hl
 480+ 8ADA FD 23            inc iy
 481+ 8ADC 10 F3            djnz 2B
 482+ 8ADE C9               ret
 483+ 8ADF
 484+ 8ADF              ; -------------------------------------------------------------------------------------------------------------
 485+ 8ADF              ;
 486+ 8ADF              ;   11/04/23
 487+ 8ADF              ;
 488+ 8ADF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8ADF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8ADF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8ADF              ;
 492+ 8ADF              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8ADF
 494+ 8ADF              Compara_coordenadas_X
 495+ 8ADF
 496+ 8ADF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8ADF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8ADF
 499+ 8ADF              ; Preparamos registros:
 500+ 8ADF
 501+ 8ADF 21 A1 85         ld hl,Filas+6
 502+ 8AE2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8AE3 23               inc hl
 504+ 8AE4 23               inc hl
 505+ 8AE5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8AE6 43               ld b,e
 507+ 8AE7 21 AF 85         ld hl,Filas+20
 508+ 8AEA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8AEB 21 F4 85         ld hl,Coordenadas_X_Entidad
 510+ 8AEE CD FD 8C         call Guarda_coordenadas_X
 511+ 8AF1
 512+ 8AF1              ; Preparamos registros:
 513+ 8AF1
 514+ 8AF1 21 7A 84         ld hl,Amadeus_db+6
 515+ 8AF4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8AF5 23               inc hl
 517+ 8AF6 23               inc hl
 518+ 8AF7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8AF8 7B               ld a,e
 520+ 8AF9 08               ex af,af'
 521+ 8AFA 21 88 84         ld hl,Amadeus_db+20
 522+ 8AFD 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8AFE 21 F1 85         ld hl,Coordenadas_X_Amadeus
 524+ 8B01 CD FD 8C         call Guarda_coordenadas_X
 525+ 8B04
 526+ 8B04              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B04              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B04
 529+ 8B04 04               inc b
 530+ 8B05 05               dec b
 531+ 8B06 28 04            jr z,1F
 532+ 8B08 06 03            ld b,3
 533+ 8B0A 18 02            jr 2F
 534+ 8B0C 06 02        1 ld b,2
 535+ 8B0E 08           2 ex af,af'
 536+ 8B0F 3C               inc a
 537+ 8B10 3D               dec a
 538+ 8B11 28 04            jr z,5F
 539+ 8B13 0E 03            ld c,3
 540+ 8B15 18 02            jr 6F
 541+ 8B17 0E 02        5 ld c,2
 542+ 8B19 79           6 ld a,c
 543+ 8B1A 08               ex af,af'
 544+ 8B1B 11 F4 85         ld de,Coordenadas_X_Entidad
 545+ 8B1E 1A           4 ld a,(de)
 546+ 8B1F 21 F1 85         ld hl,Coordenadas_X_Amadeus
 547+ 8B22 BE           3 cp (hl)
 548+ 8B23 28 0E            jr z,7F
 549+ 8B25 23               inc hl
 550+ 8B26 0D               dec c
 551+ 8B27 20 F9            jr nz,3B
 552+ 8B29 13               inc de
 553+ 8B2A 08               ex af,af'
 554+ 8B2B 4F               ld c,a
 555+ 8B2C 08               ex af,af'
 556+ 8B2D 10 EF            djnz 4B
 557+ 8B2F
 558+ 8B2F              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B2F
 560+ 8B2F CD 3C 8D     8 call Limpia_Coordenadas_X
 561+ 8B32 C9               ret
 562+ 8B33
 563+ 8B33 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 564+ 8B35 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 565+ 8B38 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 566+ 8B3B CB D6            set 2,(hl)
 567+ 8B3D 18 F0            jr 8B
 568+ 8B3F
 569+ 8B3F              ; -----------------------------------------------------------------------
 570+ 8B3F              ;
 571+ 8B3F              ;   17/04/23
 572+ 8B3F              ;
 573+ 8B3F
 574+ 8B3F              Detecta_colision_nave_entidad
 575+ 8B3F
 576+ 8B3F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 577+ 8B3F
 578+ 8B3F 2A 9D 85         ld hl,(Posicion_actual)
 579+ 8B42 CD B9 8F         call Calcula_puntero_de_impresion
 580+ 8B45
 581+ 8B45              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 582+ 8B45              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 583+ 8B45
 584+ 8B45 DD E5            push ix
 585+ 8B47 E1               pop hl
 586+ 8B48 E5               push hl
 587+ 8B49
 588+ 8B49              ; ----- ----- -----
 589+ 8B49 1E 00            ld e,0                                         ; Indica impacto.
 590+ 8B4B 06 0A            ld b,10
 591+ 8B4D CD 7D 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 592+ 8B50 7B               ld a,e
 593+ 8B51 FE 05            cp 5
 594+ 8B53 38 0E            jr c,3F
 595+ 8B55
 596+ 8B55              ; LLegados a este punto:
 597+ 8B55              ;
 598+ 8B55              ;   HAY COLISIÓN !!!!!.
 599+ 8B55              ;
 600+ 8B55              ;   .db (Impacto) de Amadeus a "1".
 601+ 8B55              ;   SET el bit3 de (Impacto2).
 602+ 8B55              ;
 603+ 8B55              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 604+ 8B55
 605+ 8B55 21 8D 84         ld hl,Amadeus_db+25
 606+ 8B58 36 01            ld (hl),1
 607+ 8B5A 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 608+ 8B5D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 609+ 8B5F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 610+ 8B61 18 18            jr 1F
 611+ 8B63
 612+ 8B63              ; -----
 613+ 8B63
 614+ 8B63 E1           3 pop hl
 615+ 8B64 CD 54 90         call NextScan
 616+ 8B67 E5               push hl
 617+ 8B68 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 618+ 8B69 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 619+ 8B6B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 620+ 8B6D 30 0C            jr nc,1F
 621+ 8B6F              ;                                                  ; _ 2º scanline si esto es así.
 622+ 8B6F 10 DC            djnz 2B
 623+ 8B71
 624+ 8B71              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 625+ 8B71
 626+ 8B71              ; LLegados a este punto:
 627+ 8B71              ;
 628+ 8B71              ;   NO HAY COLISIÓN !!!!!.
 629+ 8B71              ;
 630+ 8B71              ;   .db (Impacto) de Amadeus a "0".
 631+ 8B71              ;   RES el bit2 de (Impacto2).
 632+ 8B71              ;
 633+ 8B71              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 8B71              ;   Lo colocamos a "0".
 635+ 8B71
 636+ 8B71 21 EC 85         ld hl,Impacto2
 637+ 8B74 CB 96            res 2,(hl)
 638+ 8B76 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 639+ 8B79 36 00            ld (hl),0
 640+ 8B7B
 641+ 8B7B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 642+ 8B7C C9               ret
 643+ 8B7D
 644+ 8B7D               ; ---------- ----------
 645+ 8B7D
 646+ 8B7D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 647+ 8B7E 3A 9C 85         ld a,(Columns)
 648+ 8B81 47               ld b,a
 649+ 8B82 FD 7E 00     2 ld a,(iy)
 650+ 8B85 BE               cp (hl)
 651+ 8B86 28 01            jr z,1F
 652+ 8B88
 653+ 8B88 1C               inc e
 654+ 8B89
 655+ 8B89 23           1 inc hl
 656+ 8B8A FD 23            inc iy
 657+ 8B8C 10 F4            djnz 2B
 658+ 8B8E C1               pop bc
 659+ 8B8F C9               ret
 660+ 8B90
 661+ 8B90              ; -------------------------------------------------------------------------------------------------------------
 662+ 8B90              ;
 663+ 8B90              ;   13/03/23
 664+ 8B90              ;
 665+ 8B90              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 666+ 8B90              ;
 667+ 8B90              ;   DESTRUYE: HL,BC,DE y A.
 668+ 8B90
 669+ 8B90 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 670+ 8B93 7E               ld a,(hl)
 671+ 8B94 A7               and a
 672+ 8B95 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 673+ 8B96
 674+ 8B96 44               ld b,h
 675+ 8B97 4D               ld c,l
 676+ 8B98 2A E5 85         ld hl,(Stack_snapshot_disparos)
 677+ 8B9B E5               push hl
 678+ 8B9C A7               and a
 679+ 8B9D ED 42            sbc hl,bc
 680+ 8B9F E5               push hl
 681+ 8BA0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 682+ 8BA1
 683+ 8BA1 E1               pop hl
 684+ 8BA2 54               ld d,h
 685+ 8BA3 5D               ld e,l
 686+ 8BA4 1B               dec de
 687+ 8BA5 ED B8            lddr                                                ; Limpiamos.
 688+ 8BA7
 689+ 8BA7 21 60 70         ld hl,Album_de_fotos_disparos
 690+ 8BAA 22 E5 85         ld (Stack_snapshot_disparos),hl
 691+ 8BAD
 692+ 8BAD C9               ret
 693+ 8BAE
 694+ 8BAE              ; -------------------------------------------------------------------------------------------------------------
 695+ 8BAE              ;
 696+ 8BAE              ;   28/03/23
 697+ 8BAE              ;
 698+ 8BAE
 699+ 8BAE 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 700+ 8BB1 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 701+ 8BB4
 702+ 8BB4 CD FB 87     2 call Extrae_address
 703+ 8BB7 7E               ld a,(hl)
 704+ 8BB8 A7               and a
 705+ 8BB9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 706+ 8BBB
 707+ 8BBB              ; ----- ----- ----- ----- ----- -----
 708+ 8BBB
 709+ 8BBB C5               push bc
 710+ 8BBC CD 78 8C         call foto_disparo_a_borrar
 711+ 8BBF
 712+ 8BBF              ; Existe colisión con este disparo???
 713+ 8BBF
 714+ 8BBF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 715+ 8BC0 7E               ld a,(hl)
 716+ 8BC1 2B               dec hl
 717+ 8BC2 E6 01            and 1
 718+ 8BC4 28 1D            jr z,9F
 719+ 8BC6
 720+ 8BC6              ;   En este punto:
 721+ 8BC6              ;
 722+ 8BC6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 723+ 8BC6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 724+ 8BC6              ;   _con la entidad).
 725+ 8BC6              ;
 726+ 8BC6              ;   Disparo_2A defw 0                                ; Control.
 727+ 8BC6              ;    defw 0                                          ; Puntero objeto.
 728+ 8BC6              ;    defw 0                                          ; Puntero de impresión.
 729+ 8BC6              ;    defw 0                                          ; Rutina de impresión.
 730+ 8BC6
 731+ 8BC6 E5               push hl
 732+ 8BC7
 733+ 8BC7 06 04            ld b,4
 734+ 8BC9 23           19 inc hl
 735+ 8BCA 10 FD            djnz 19B
 736+ 8BCC
 737+ 8BCC CD FB 87         call Extrae_address
 738+ 8BCF CD 6B 96         call Genera_coordenadas_disparo
 739+ 8BD2
 740+ 8BD2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 741+ 8BD2
 742+ 8BD2 21 EF 85         ld hl,Coordenadas_disparo_certero
 743+ 8BD5 72               ld (hl),d
 744+ 8BD6 23               inc hl
 745+ 8BD7 73               ld (hl),e
 746+ 8BD8
 747+ 8BD8              ; Elimino el disparo de la base de datos.
 748+ 8BD8
 749+ 8BD8 E1               pop hl
 750+ 8BD9 CD F2 8C         call Elimina_disparo_de_base_de_datos
 751+ 8BDC 21 EC 85         ld hl,Impacto2
 752+ 8BDF CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 753+ 8BE1
 754+ 8BE1 18 06            jr 11F
 755+ 8BE3
 756+ 8BE3 CD A1 8C     9 call Mueve_disparo
 757+ 8BE6 CD 78 8C         call foto_disparo_a_borrar
 758+ 8BE9
 759+ 8BE9 C1           11 pop bc
 760+ 8BEA 18 04            jr 7F
 761+ 8BEC
 762+ 8BEC              ; ----- ----- ----- ----- ----- -----
 763+ 8BEC
 764+ 8BEC ED 42        1 sbc hl,bc
 765+ 8BEE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 766+ 8BF0
 767+ 8BF0 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 768+ 8BF3 23               inc hl
 769+ 8BF4 23               inc hl
 770+ 8BF5 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 771+ 8BF8 18 BA            jr 2B
 772+ 8BFA
 773+ 8BFA CD C4 87     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8BFD 01 66 84         ld bc,Disparo_11
 775+ 8C00 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 776+ 8C03
 777+ 8C03 CD FB 87     5 call Extrae_address
 778+ 8C06 7E               ld a,(hl)
 779+ 8C07 A7               and a
 780+ 8C08 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 781+ 8C0A
 782+ 8C0A              ; ----- ----- ----- ----- ----- -----
 783+ 8C0A
 784+ 8C0A C5               push bc
 785+ 8C0B CD 78 8C         call foto_disparo_a_borrar
 786+ 8C0E
 787+ 8C0E              ; Existe colisión con este disparo???
 788+ 8C0E
 789+ 8C0E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 790+ 8C0F 7E               ld a,(hl)
 791+ 8C10 2B               dec hl
 792+ 8C11 E6 01            and 1
 793+ 8C13 28 48            jr z,10F
 794+ 8C15
 795+ 8C15              ; La colisión se produce con Amadeus???
 796+ 8C15              ; Amadeus siempre tiene (Coordenada_y)="$16".
 797+ 8C15
 798+ 8C15 E5               push hl
 799+ 8C16
 800+ 8C16 06 04            ld b,4
 801+ 8C18 23           16 inc hl
 802+ 8C19 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 803+ 8C1B CD FB 87         call Extrae_address
 804+ 8C1E CD 6B 96         call Genera_coordenadas_disparo
 805+ 8C21
 806+ 8C21 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 807+ 8C22 FE 16            cp $16
 808+ 8C24 38 22            jr c,15F
 809+ 8C26
 810+ 8C26              ; (Colisiones en filas 16 y 17).
 811+ 8C26
 812+ 8C26 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 813+ 8C27
 814+ 8C27              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 815+ 8C27
 816+ 8C27 21 7A 84         ld hl,Amadeus_db+6
 817+ 8C2A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 818+ 8C2B 23               inc hl
 819+ 8C2C 23               inc hl
 820+ 8C2D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 821+ 8C2E 21 88 84         ld hl,Amadeus_db+20
 822+ 8C31 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 823+ 8C32 21 F1 85         ld hl,Coordenadas_X_Amadeus
 824+ 8C35 CD FD 8C         call Guarda_coordenadas_X
 825+ 8C38
 826+ 8C38 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 827+ 8C39
 828+ 8C39              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 829+ 8C39
 830+ 8C39 06 03            ld b,3
 831+ 8C3B 21 F1 85         ld hl,Coordenadas_X_Amadeus
 832+ 8C3E 7E           18 ld a,(hl)
 833+ 8C3F BA               cp d
 834+ 8C40 20 03            jr nz,17F
 835+ 8C42
 836+ 8C42              ; Colisión Amadeus !!!!!!!!!!
 837+ 8C42
 838+ 8C42 E1               pop hl
 839+ 8C43 18 09            jr 14F
 840+ 8C45
 841+ 8C45 23           17 inc hl
 842+ 8C46 10 F6            djnz 18B
 843+ 8C48
 844+ 8C48              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 845+ 8C48              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 846+ 8C48
 847+ 8C48 E1           15 pop hl
 848+ 8C49 23               inc hl
 849+ 8C4A 35               dec (hl)
 850+ 8C4B 2B               dec hl
 851+ 8C4C 18 0F            jr 10F
 852+ 8C4E
 853+ 8C4E              ; -----------------------debug
 854+ 8C4E
 855+ 8C4E              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 856+ 8C4E              ; _ almacén de coordenadas_X de Amadeus.
 857+ 8C4E
 858+ 8C4E E5           14 push hl
 859+ 8C4F CD F2 8C         call Elimina_disparo_de_base_de_datos
 860+ 8C52 21 EC 85         ld hl,Impacto2
 861+ 8C55 CB CE            set 1,(hl)
 862+ 8C57 CD 3C 8D         call Limpia_Coordenadas_X
 863+ 8C5A
 864+ 8C5A E1               pop hl
 865+ 8C5B 18 06            jr 12F
 866+ 8C5D
 867+ 8C5D CD A1 8C     10 call Mueve_disparo
 868+ 8C60 CD 78 8C         call foto_disparo_a_borrar
 869+ 8C63 C1           12 pop bc
 870+ 8C64
 871+ 8C64 18 04            jr 8F
 872+ 8C66
 873+ 8C66              ; ----- ----- ----- ----- ----- -----
 874+ 8C66
 875+ 8C66 ED 42        4 sbc hl,bc
 876+ 8C68 28 0A            jr z,6F
 877+ 8C6A
 878+ 8C6A 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 879+ 8C6D 23               inc hl
 880+ 8C6E 23               inc hl
 881+ 8C6F 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 882+ 8C72 18 8F            jr 5B
 883+ 8C74
 884+ 8C74 CD BD 87     6 call Inicia_Puntero_Disparo_Entidades
 885+ 8C77 C9               ret
 886+ 8C78
 887+ 8C78              ; ------------------------------------------------------------------
 888+ 8C78
 889+ 8C78              foto_disparo_a_borrar
 890+ 8C78
 891+ 8C78 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 892+ 8C79 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 893+ 8C7A C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 894+ 8C7B
 895+ 8C7B E5               push hl
 896+ 8C7C 23               inc hl
 897+ 8C7D 23               inc hl
 898+ 8C7E ED 73 DF 85      ld (Stack),sp
 899+ 8C82 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 900+ 8C83 FD E1            pop iy
 901+ 8C85 DD E1            pop ix
 902+ 8C87 E1               pop hl
 903+ 8C88 ED 7B DF 85      ld sp,(Stack)
 904+ 8C8C 3A D6 85         ld a,(Ctrl_1)
 905+ 8C8F CB C7            set 0,a
 906+ 8C91 32 D6 85         ld (Ctrl_1),a
 907+ 8C94 CD A0 7F         call Guarda_foto_registros
 908+ 8C97 3A D6 85         ld a,(Ctrl_1)
 909+ 8C9A CB 87            res 0,a
 910+ 8C9C 32 D6 85         ld (Ctrl_1),a
 911+ 8C9F E1               pop hl
 912+ 8CA0 C9               ret
 913+ 8CA1
 914+ 8CA1 E5           Mueve_disparo push hl
 915+ 8CA2 7E               ld a,(hl)
 916+ 8CA3 06 04            ld b,4
 917+ 8CA5 23           1 inc hl
 918+ 8CA6 10 FD            djnz 1B
 919+ 8CA8
 920+ 8CA8              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 921+ 8CA8
 922+ 8CA8 CD FB 87         call Extrae_address
 923+ 8CAB
 924+ 8CAB E6 01            and 1
 925+ 8CAD 28 2A            jr z,2F
 926+ 8CAF
 927+ 8CAF              ; Disparo hacia arriba, (Amadeus).
 928+ 8CAF
 929+ 8CAF              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 930+ 8CAF              ; _ de la dificultad.
 931+ 8CAF
 932+ 8CAF CD 63 90         call PreviousScan
 933+ 8CB2 CD 63 90         call PreviousScan
 934+ 8CB5 CD 63 90         call PreviousScan
 935+ 8CB8
 936+ 8CB8              ; Detecta si el disparo de Amadeus sale de pantalla:
 937+ 8CB8
 938+ 8CB8 7C               ld a,h
 939+ 8CB9 FE 40            cp $40
 940+ 8CBB 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 941+ 8CBD
 942+ 8CBD              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 943+ 8CBD
 944+ 8CBD EB               ex de,hl
 945+ 8CBE 06 04            ld b,4
 946+ 8CC0 2B           6 dec hl
 947+ 8CC1 10 FD            djnz 6B
 948+ 8CC3
 949+ 8CC3 CD F2 8C         call Elimina_disparo_de_base_de_datos
 950+ 8CC6
 951+ 8CC6 18 0C            jr 4F
 952+ 8CC8
 953+ 8CC8              ; Se ha desplazado la bala, compruebo colisión.
 954+ 8CC8
 955+ 8CC8 D5           3 push de
 956+ 8CC9 C5               push bc
 957+ 8CCA CD AE 8A         call Comprueba_Colision
 958+ 8CCD 78               ld a,b
 959+ 8CCE C1               pop bc
 960+ 8CCF D1               pop de
 961+ 8CD0
 962+ 8CD0 EB               ex de,hl
 963+ 8CD1
 964+ 8CD1 73               ld (hl),e
 965+ 8CD2 23               inc hl
 966+ 8CD3 72               ld (hl),d
 967+ 8CD4
 968+ 8CD4 E1           4 pop hl
 969+ 8CD5 23               inc hl
 970+ 8CD6 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 971+ 8CD7 2B               dec hl
 972+ 8CD8 C9               ret
 973+ 8CD9
 974+ 8CD9              ; Disparo hacia abajo, (Entidad).
 975+ 8CD9
 976+ 8CD9              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 977+ 8CD9              ; _ de la dificultad.
 978+ 8CD9
 979+ 8CD9 CD 54 90     2 call NextScan
 980+ 8CDC CD 54 90         call NextScan
 981+ 8CDF CD 54 90         call NextScan
 982+ 8CE2
 983+ 8CE2              ; Detecta si el disparo de la entidad sale de la pantalla.
 984+ 8CE2
 985+ 8CE2 7C               ld a,h
 986+ 8CE3 FE 58            cp $58
 987+ 8CE5 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 988+ 8CE7
 989+ 8CE7 EB               ex de,hl
 990+ 8CE8 06 04            ld b,4
 991+ 8CEA 2B           5 dec hl
 992+ 8CEB 10 FD            djnz 5B
 993+ 8CED
 994+ 8CED CD F2 8C         call Elimina_disparo_de_base_de_datos
 995+ 8CF0
 996+ 8CF0 18 E2            jr 4B
 997+ 8CF2
 998+ 8CF2              ; HL apunta al primer byte de la base de datos del disparo.
 999+ 8CF2
1000+ 8CF2 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1001+ 8CF5 AF               xor a
1002+ 8CF6 77               ld (hl),a
1003+ 8CF7 54               ld d,h
1004+ 8CF8 5D               ld e,l
1005+ 8CF9 13               inc de
1006+ 8CFA ED B0            ldir
1007+ 8CFC C9               ret
1008+ 8CFD
1009+ 8CFD              ; -----------------------------------------------------------------
1010+ 8CFD              ;
1011+ 8CFD              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1012+ 8CFD              ;
1013+ 8CFD              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1014+ 8CFD              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1015+ 8CFD              ;
1016+ 8CFD              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1017+ 8CFD              ;
1018+ 8CFD              ;   INPUTS:
1019+ 8CFD              ;
1020+ 8CFD              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1021+ 8CFD              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1022+ 8CFD              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1023+ 8CFD
1024+ 8CFD              ;   MODIFICA: A, HL, DE y C
1025+ 8CFD
1026+ 8CFD 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1027+ 8CFE 79               ld a,c
1028+ 8CFF E6 01            and 1
1029+ 8D01 20 03            jr nz,1F
1030+ 8D03 14               inc d
1031+ 8D04 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1032+ 8D06
1033+ 8D06              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1034+ 8D06              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D06
1036+ 8D06 15           1 dec d
1037+ 8D07 23           2 inc hl
1038+ 8D08 72               ld (hl),d
1039+ 8D09
1040+ 8D09 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1041+ 8D0A A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1042+ 8D0B C8               ret z
1043+ 8D0C
1044+ 8D0C AF               xor a
1045+ 8D0D 5F               ld e,a
1046+ 8D0E 18 ED            jr Guarda_coordenadas_X
1047+ 8D10
1048+ 8D10              ; -----------------------------------------------------------------
1049+ 8D10              ;
1050+ 8D10              ;   12/04/23
1051+ 8D10              ;
1052+ 8D10
1053+ 8D10 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1054+ 8D13 A7               and a
1055+ 8D14 C8               ret z
1056+ 8D15
1057+ 8D15 FE 04            cp 4
1058+ 8D17 20 09            jr nz,1F
1059+ 8D19
1060+ 8D19
1061+ 8D19              ; La colisión se produce por contacto entre Amadeus y una entidad.
1062+ 8D19
1063+ 8D19 CD 3F 8B         call Detecta_colision_nave_entidad
1064+ 8D1C
1065+ 8D1C 21 EC 85         ld hl,Impacto2
1066+ 8D1F CB 5E            bit 3,(hl)
1067+ 8D21 C0               ret nz                                               ; Existe colisión, RET.
1068+ 8D22
1069+ 8D22              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1070+ 8D22              ; Primero analizamos si algún disparo impacta en Amadeus.
1071+ 8D22
1072+ 8D22 21 EC 85     1 ld hl,Impacto2
1073+ 8D25 CB 4E            bit 1,(hl)
1074+ 8D27 28 07            jr z,2F
1075+ 8D29
1076+ 8D29 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1077+ 8D2C 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1078+ 8D2E 18 0B            jr 3F
1079+ 8D30
1080+ 8D30 21 EC 85     2 ld hl,Impacto2
1081+ 8D33 CB 46            bit 0,(hl)
1082+ 8D35 C8               ret z
1083+ 8D36
1084+ 8D36              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1085+ 8D36
1086+ 8D36 21 D6 85         ld hl,Ctrl_1
1087+ 8D39 CB D6            set 2,(hl)
1088+ 8D3B
1089+ 8D3B C9           3 ret
1090+ 8D3C
1091+ 8D3C              ; -----------------------------------------------------------------
1092+ 8D3C              ;
1093+ 8D3C              ;   16/04/23
1094+ 8D3C              ;
1095+ 8D3C
1096+ 8D3C AF           Limpia_Coordenadas_X xor a
1097+ 8D3D 06 06            ld b,6
1098+ 8D3F 21 F1 85         ld hl,Coordenadas_X_Amadeus
1099+ 8D42 77           1 ld (hl),a
1100+ 8D43 23               inc hl
1101+ 8D44 10 FC            djnz 1B
1102+ 8D46 C9               ret
1103+ 8D47
1104+ 8D47              ; -----------------------------------------------------------------
1105+ 8D47              ;
1106+ 8D47              ;   25/04/23
1107+ 8D47              ;
1108+ 8D47
1109+ 8D47              Determina_resultado_comparativa
1110+ 8D47
1111+ 8D47 7C               ld a,h
1112+ 8D48 06 00            ld b,0
1113+ 8D4A
1114+ 8D4A CD 62 8D         call Compara_cositas
1115+ 8D4D 04               inc b
1116+ 8D4E 05               dec b
1117+ 8D4F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1118+ 8D50
1119+ 8D50 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1120+ 8D51 06 00            ld b,0
1121+ 8D53 FE 02            cp $02
1122+ 8D55 28 09            jr z,1F
1123+ 8D57 FE FE            cp $fe
1124+ 8D59 28 05            jr z,1F
1125+ 8D5B
1126+ 8D5B CD 62 8D         call Compara_cositas
1127+ 8D5E 18 01            jr 2F
1128+ 8D60
1129+ 8D60 04           1 inc b
1130+ 8D61 C9           2 ret
1131+ 8D62
1132+ 8D62 A7           Compara_cositas and a
1133+ 8D63 28 07            jr z,1F
1134+ 8D65 FE FF            cp $ff
1135+ 8D67 28 03            jr z,1F
1136+ 8D69 FE 01            cp $01
1137+ 8D6B C0               ret nz
1138+ 8D6C 04           1 inc b
1139+ 8D6D C9               ret
1140+ 8D6E
# file closed: Disparo.asm
1027  8D6E              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D6E              ; ******************************************************************************************************************************************************************************************
   2+ 8D6E              ;
   3+ 8D6E              ; 01/23
   4+ 8D6E              ;
   5+ 8D6E              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D6E
   7+ 8D6E CD 48 90     Draw call Prepara_draw
   8+ 8D71 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D72 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D73 28 05        	jr z,2F
  11+ 8D75
  12+ 8D75 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D78 18 0C        	jr 1F
  14+ 8D7A 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D7D 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D80 CD 0F 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D83              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D83 CD 8E 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D86 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8D89 CB 6F        	bit 5,a
  21+ 8D8B 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8D8D
  23+ 8D8D CD A5 8D     	call Comprueba_limite_horizontal
  24+ 8D90 CD 35 8E     	call Comprueba_limite_vertical
  25+ 8D93
  26+ 8D93              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8D93
  28+ 8D93 CD 82 8F     3 call calcula_CColumnass
  29+ 8D96 CD B9 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8D99 CD 0E 90     	call Define_rutina_de_impresion
  31+ 8D9C
  32+ 8D9C 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8D9F CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8DA1 32 C9 85     	ld (Ctrl_0),a
  35+ 8DA4
  36+ 8DA4 C9           	ret
  37+ 8DA5
  38+ 8DA5              ; *******************************************************************************************************************************************************************************************
  39+ 8DA5              ;	21/01/23
  40+ 8DA5              ;
  41+ 8DA5              ; 	Comprueba_limite_horizontal.
  42+ 8DA5              ;
  43+ 8DA5              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8DA5              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8DA5              ;
  46+ 8DA5              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8DA5              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8DA5              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8DA5              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8DA5
  51+ 8DA5
  52+ 8DA5
  53+ 8DA5 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8DA8 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8DAA 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8DAC E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8DAE 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8DB1 18 09            jr 6F
  59+ 8DB3 CB 5F        1 bit 3,a
  60+ 8DB5 28 0A            jr z,2F
  61+ 8DB7 E6 F7            and $f7
  62+ 8DB9 32 C9 85         ld (Ctrl_0),a
  63+ 8DBC CD 0F 8F     6 call Inicializacion
  64+ 8DBF 18 5B            jr 5F
  65+ 8DC1 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8DC2
  67+ 8DC2              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8DC2              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8DC2
  70+ 8DC2 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8DC3 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8DC6 CD 14 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8DC9 67           	ld h,a
  74+ 8DCA EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8DCB CD 14 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DCE 67           	ld h,a
  77+ 8DCF A7           	and a
  78+ 8DD0 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DD2 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DD3 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DD6 FE 02        	cp 2
  82+ 8DD8 38 1E        	jr c,3F
  83+ 8DDA 28 1C        	jr z,3F
  84+ 8DDC 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DDD 28 23            jr z,7F
  86+ 8DDF 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DE1 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8DE3 E1           	pop hl
  89+ 8DE4
  90+ 8DE4              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8DE4              ; _para indicar con E="2" en caso necesario.
  92+ 8DE4
  93+ 8DE4 E5               push hl
  94+ 8DE5 C5               push bc
  95+ 8DE6 CD 14 93     	call calcula_tercio
  96+ 8DE9 FE 01        	cp 1
  97+ 8DEB 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8DED CD 1D 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8DF0 28 26            jr z,9F
 100+ 8DF2 38 24            jr c,9F
 101+ 8DF4 1E 00        11 ld e,0
 102+ 8DF6 18 22            jr 8F
 103+ 8DF8 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8DF9 28 07        	jr z, 7F
 105+ 8DFB 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8DFD 1E 00         	ld e,0
 107+ 8DFF E1           	pop hl
 108+ 8E00 18 04        	jr 4F
 109+ 8E02 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E04 18 15            jr 10F
 111+ 8E06
 112+ 8E06              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E06              ; _para indicar con E="2" en caso necesario.
 114+ 8E06
 115+ 8E06 E5           4 push hl
 116+ 8E07 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E08 CD 14 93     	call calcula_tercio
 118+ 8E0B FE 01        	cp 1
 119+ 8E0D 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E0F CD 1D 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E12 28 04            jr z,9F
 122+ 8E14 30 02            jr nc,9F
 123+ 8E16 18 02        	jr 8F
 124+ 8E18 1E 02        9 ld e,2
 125+ 8E1A C1           8 pop bc
 126+ 8E1B E1           10 pop hl
 127+ 8E1C C9           5 ret
 128+ 8E1D
 129+ 8E1D              ; --------------------
 130+ 8E1D              ;
 131+ 8E1D              ; 25/08/22
 132+ 8E1D
 133+ 8E1D CD 14 93     Comprueba_centro call calcula_tercio
 134+ 8E20 67               ld h,a
 135+ 8E21 08           	ex af,af
 136+ 8E22 FE 02        	cp 2
 137+ 8E24 38 07        	jr c,1F
 138+ 8E26 28 05        	jr z,1F
 139+ 8E28 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E2B 18 03        	jr 2F
 141+ 8E2D 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E30 08           2 ex af,af
 143+ 8E31 A7               and a
 144+ 8E32 ED 42            sbc hl,bc
 145+ 8E34 C9               ret
 146+ 8E35
 147+ 8E35              ; *********************************************************************************************************************************************************************************************
 148+ 8E35              ;
 149+ 8E35              ;   16/8/22
 150+ 8E35              ;
 151+ 8E35              ;	Comprueba_limite_vertical
 152+ 8E35              ;
 153+ 8E35              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E35              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E35              ;
 156+ 8E35
 157+ 8E35 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E38 7D           	ld a,l
 159+ 8E39 E6 1F        	and $1F
 160+ 8E3B 57           	ld d,a
 161+ 8E3C 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E3F BA           	cp d 											; Límite - Posición.
 163+ 8E40 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E41 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E44 CB 47        	bit 0,a
 166+ 8E46 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E48
 168+ 8E48              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E48
 170+ 8E48 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E49 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E4B
 173+ 8E4B              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E4B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E4B
 176+ 8E4B 3A A1 85         ld a,(Coordenada_X)
 177+ 8E4E 16 0F            ld d,Centro_izquierda
 178+ 8E50 A7               and a
 179+ 8E51 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E52 28 1E            jr z,3F
 181+ 8E54 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E56              ;                                                    ; _salimos sin modificar nada.
 183+ 8E56 18 0E            jr 2F
 184+ 8E58 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E59 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E5B
 187+ 8E5B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E5B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E5B
 190+ 8E5B 3A A1 85         ld a,(Coordenada_X)
 191+ 8E5E 16 10            ld d,Centro_derecha
 192+ 8E60 A7               and a
 193+ 8E61 92               sub d
 194+ 8E62 28 0E            jr z,3F
 195+ 8E64 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E66              ;                                                    ; _salimos sin modificar nada.
 197+ 8E66 CB 43        2 bit 0,e
 198+ 8E68 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E6A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E6B CD FF 8E         call Modificaccionne
 201+ 8E6E C1           	pop bc
 202+ 8E6F CD 0F 8F         call Inicializacion
 203+ 8E72 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E73
 205+ 8E73              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E73
 207+ 8E73 C5           4 push bc
 208+ 8E74 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E77 0A           	ld a,(bc)
 210+ 8E78 3D           	dec a
 211+ 8E79 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E7A 7D           	ld a,l
 213+ 8E7B 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E7C CB 47        	bit 0,a
 215+ 8E7E 28 03        	jr z,5F
 216+ 8E80 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E81 18 2E        	jr 7F
 218+ 8E83
 219+ 8E83              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E83
 221+ 8E83 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E84 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E85 3A C9 85     	ld a,(Ctrl_0)
 224+ 8E88 CB 4F        	bit 1,a
 225+ 8E8A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8E8C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8E8D
 228+ 8E8D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8E8D
 230+ 8E8D 1C               inc e
 231+ 8E8E 1D               dec e
 232+ 8E8F 20 07            jr nz,12F
 233+ 8E91 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8E92 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8E93 22 9D 85     	ld (Posicion_actual),hl
 236+ 8E96 18 44        13 jr 9F
 237+ 8E98 CB 43        12 bit 0,e
 238+ 8E9A 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8E9C              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8E9C C1           	pop bc
 241+ 8E9D 18 D3        	jr 3B
 242+ 8E9F 80           14 add b
 243+ 8EA0 6F               ld l,a
 244+ 8EA1 22 9D 85     	ld (Posicion_actual),hl
 245+ 8EA4 CD FF 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8EA7 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8EA9 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8EAB 32 C9 85         ld (Ctrl_0),a
 249+ 8EAE F1           	pop af
 250+ 8EAF 18 2B        	jr 9F
 251+ 8EB1
 252+ 8EB1              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8EB1
 254+ 8EB1 F5           7 push af
 255+ 8EB2 3A C9 85     	ld a,(Ctrl_0)
 256+ 8EB5 CB 47        	bit 0,a
 257+ 8EB7 20 1D        	jr nz,8F
 258+ 8EB9 F1           	pop af
 259+ 8EBA
 260+ 8EBA              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8EBA
 262+ 8EBA 1C           	inc e
 263+ 8EBB 1D               dec e
 264+ 8EBC 20 07            jr nz,10F
 265+ 8EBE 90           	sub b
 266+ 8EBF 6F               ld l,a
 267+ 8EC0 22 9D 85     	ld (Posicion_actual),hl
 268+ 8EC3 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8EC5              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8EC5 CB 43        10 bit 0,e
 271+ 8EC7 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8EC9              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8EC9 C1           	pop bc
 274+ 8ECA 18 A6        	jr 3B
 275+ 8ECC 90           16 sub b
 276+ 8ECD 6F               ld l,a
 277+ 8ECE 22 9D 85     	ld (Posicion_actual),hl
 278+ 8ED1 CD FF 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8ED4 18 06            jr 9F
 280+ 8ED6 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8ED8 32 C9 85         ld (Ctrl_0),a
 282+ 8EDB F1           	pop af
 283+ 8EDC C1           9 pop bc
 284+ 8EDD 1E 00        	ld e,0
 285+ 8EDF CD 0F 8F         call Inicializacion
 286+ 8EE2 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8EE3 08           	ex af,af
 288+ 8EE4 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8EE5 18 8B            jr 3B
 290+ 8EE7
 291+ 8EE7              ; --------------------
 292+ 8EE7
 293+ 8EE7 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8EE9 CD 63 90     1 call PreviousScan
 295+ 8EEC 10 FB            djnz 1B
 296+ 8EEE 22 9D 85     	ld (Posicion_actual),hl
 297+ 8EF1 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8EF2 C9           	ret
 299+ 8EF3
 300+ 8EF3              ; --------------------
 301+ 8EF3
 302+ 8EF3 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8EF5 CD 54 90     1 call NextScan
 304+ 8EF8 10 FB            djnz 1B
 305+ 8EFA 22 9D 85     	ld (Posicion_actual),hl
 306+ 8EFD AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8EFE C9           	ret
 308+ 8EFF
 309+ 8EFF              ; --------------------
 310+ 8EFF              ;
 311+ 8EFF              ;	22/01/23
 312+ 8EFF              ;
 313+ 8EFF              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8EFF              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8EFF              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8EFF
 317+ 8EFF
 318+ 8EFF              Modificaccionne
 319+ 8EFF
 320+ 8EFF 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8F02 FE 02        	cp 2
 322+ 8F04 CC E7 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F07 DC E7 8E         call c,Modifica_Pos_actual
 324+ 8F0A C8           	ret z
 325+ 8F0B CD F3 8E         call Modifica_Pos_actual2
 326+ 8F0E C9               ret
 327+ 8F0F
 328+ 8F0F              ; *************************************************************************************************************************************************************************************************
 329+ 8F0F              ;
 330+ 8F0F              ;	13/8/22
 331+ 8F0F              ;
 332+ 8F0F              ;	Inicializacion
 333+ 8F0F              ;
 334+ 8F0F              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F0F              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F0F              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F0F              ;
 338+ 8F0F              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F0F              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F0F              ;	_ desaparece/aparece.
 341+ 8F0F
 342+ 8F0F              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F0F              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F0F              ;
 345+ 8F0F              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F0F              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F0F              ; 		   [E] ="0"
 348+ 8F0F
 349+ 8F0F              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F0F
 351+ 8F0F CD 14 93     Inicializacion call calcula_tercio
 352+ 8F12 28 36        	jr z,primit
 353+ 8F14 E6 02        	and 2
 354+ 8F16 20 07        	jr nz,segmit
 355+ 8F18 7D           	ld a,l
 356+ 8F19 FE 7F        	cp $7f
 357+ 8F1B 38 2D        	jr c,primit
 358+ 8F1D 28 2B        	jr z,primit
 359+ 8F1F CD 7C 8F     segmit call column
 360+ 8F22 38 13        	jr c,tercuad
 361+ 8F24 3E 04        cuarcuad ld a,4
 362+ 8F26 32 AF 85     	ld (Cuad_objeto),a
 363+ 8F29 21 20 48     	ld hl,$4820
 364+ 8F2C 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F2F 21 D5 85     	ld hl,Limite_vertical
 366+ 8F32 36 0D        	ld (hl),$0d
 367+ 8F34 08           	ex af,af
 368+ 8F35 18 3C        	jr 1F
 369+ 8F37              tercuad
 370+ 8F37 3E 03        	ld a,3
 371+ 8F39 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F3C 21 20 48     	ld hl,$4820
 373+ 8F3F 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F42 21 D5 85     	ld hl,Limite_vertical
 375+ 8F45 36 12        	ld (hl),$12
 376+ 8F47 08           	ex af,af
 377+ 8F48 18 29        	jr 1F
 378+ 8F4A CD 7C 8F     primit call column
 379+ 8F4D 38 13        	jr c, primcuad
 380+ 8F4F              segcuad
 381+ 8F4F 3E 02        	ld a,2
 382+ 8F51 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F54 21 C0 4F     	ld hl,$4fc0
 384+ 8F57 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F5A 21 D5 85     	ld hl,Limite_vertical
 386+ 8F5D 36 0D        	ld (hl),$0d
 387+ 8F5F 08           	ex af,af
 388+ 8F60 18 11        	jr 1F
 389+ 8F62              primcuad
 390+ 8F62 3E 01        	ld a,1
 391+ 8F64 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F67 21 C0 4F     	ld hl,$4fc0
 393+ 8F6A 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F6D 21 D5 85     	ld hl,Limite_vertical
 395+ 8F70 36 12        	ld (hl),$12
 396+ 8F72 08           	ex af,af
 397+ 8F73 CD 40 96     1 call Genera_coordenadas
 398+ 8F76 21 C9 85     	ld hl,Ctrl_0
 399+ 8F79 CB EE        	set 5,(hl)
 400+ 8F7B C9           	ret
 401+ 8F7C
 402+ 8F7C              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F7C
 404+ 8F7C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F7C              ;
 406+ 8F7C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F7C
 408+ 8F7C 7D           column ld a,l
 409+ 8F7D E6 1F        	and $1f
 410+ 8F7F FE 10         	cp $10
 411+ 8F81 C9            	ret
 412+ 8F82
 413+ 8F82              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F82              ;
 415+ 8F82              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F82              ;
 417+ 8F82              ; 14/12/22
 418+ 8F82              ;
 419+ 8F82              ;	Modifica: A y BC.
 420+ 8F82
 421+ 8F82 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F85 E6 01        	and 1
 423+ 8F87 28 17        	jr z,1F
 424+ 8F89
 425+ 8F89              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8F89
 427+ 8F89 3A A1 85     	ld a,(Coordenada_X)
 428+ 8F8C 47           	ld b,a
 429+ 8F8D 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8F8E 79           	ld a,c
 431+ 8F8F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8F90 38 08        	jr c,2F
 433+ 8F92 47           	ld b,a
 434+ 8F93 79           	ld a,c
 435+ 8F94 90           	sub b
 436+ 8F95 32 D2 85     	ld (Columnas),a
 437+ 8F98 18 1B        	jr 4F
 438+ 8F9A 79           2 ld a,c
 439+ 8F9B 32 D2 85     	ld (Columnas),a
 440+ 8F9E 18 15        	jr 4F
 441+ 8FA0
 442+ 8FA0              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8FA0
 444+ 8FA0 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8FA3 81           	add c
 446+ 8FA4 3D           	dec a
 447+ 8FA5 D6 1F        	sub $1f
 448+ 8FA7 38 08        	jr c,3F
 449+ 8FA9 47           	ld b,a
 450+ 8FAA 79           	ld a,c
 451+ 8FAB 90           	sub b
 452+ 8FAC 32 D2 85     	ld (Columnas),a
 453+ 8FAF 18 04        	jr 4F
 454+ 8FB1 79           3 ld a,c
 455+ 8FB2 32 D2 85     	ld (Columnas),a
 456+ 8FB5 D9           4 exx
 457+ 8FB6 4F           	ld c,a
 458+ 8FB7 D9           	exx
 459+ 8FB8 C9            ret
 460+ 8FB9
 461+ 8FB9              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8FB9              ;
 463+ 8FB9              ; 7/1/23
 464+ 8FB9              ;
 465+ 8FB9              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8FB9              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8FB9              ;
 468+ 8FB9              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8FB9              ;	DESTRUYE: HL,B Y A.
 470+ 8FB9
 471+ 8FB9 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8FBC FE 02        	cp 2
 473+ 8FBE 38 18        	jr c,1F
 474+ 8FC0 28 16        	jr z,1F
 475+ 8FC2 E6 01        	and 1
 476+ 8FC4 28 0D        	jr z,3F
 477+ 8FC6
 478+ 8FC6              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8FC6
 480+ 8FC6 CD 02 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8FC9
 482+ 8FC9 7D           9 ld a,l
 483+ 8FCA E6 1F        	and $1f
 484+ 8FCC 28 2A        	jr z,7F
 485+ 8FCE 2B           	dec hl
 486+ 8FCF 10 F8        	djnz 9B
 487+ 8FD1 18 25        	jr 7F
 488+ 8FD3
 489+ 8FD3              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FD3
 491+ 8FD3 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FD6 18 20        	jr 7F
 493+ 8FD8
 494+ 8FD8 28 14        1 jr z,2F
 495+ 8FDA
 496+ 8FDA              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FDA
 498+ 8FDA CD 02 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FDD 7D           4 ld a,l
 500+ 8FDE E6 1F        	and $1f
 501+ 8FE0 28 03        	jr z,6F
 502+ 8FE2 2B           	dec hl
 503+ 8FE3 10 F8        	djnz 4B
 504+ 8FE5 06 0F        6 ld b,15
 505+ 8FE7 CD 63 90     5 call PreviousScan
 506+ 8FEA 10 FB        	djnz 5B
 507+ 8FEC 18 0A        	jr 7F
 508+ 8FEE
 509+ 8FEE              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8FEE
 511+ 8FEE CD 02 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8FF1 06 0F        	ld b,15
 513+ 8FF3 CD 63 90     8 call PreviousScan
 514+ 8FF6 10 FB        	djnz 8B
 515+ 8FF8
 516+ 8FF8 E5           7 push hl
 517+ 8FF9 DD E1        	pop ix
 518+ 8FFB
 519+ 8FFB 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8FFE E5           	push hl
 521+ 8FFF FD E1        	pop iy
 522+ 9001
 523+ 9001 C9           	ret
 524+ 9002
 525+ 9002              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9002              ;
 527+ 9002              ;	2/1/23
 528+ 9002              ;
 529+ 9002              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9002              ;
 531+ 9002              ;	Tras esta rutina tenemos:
 532+ 9002              ;
 533+ 9002              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9002              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9002              ;
 536+ 9002              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9002
 538+ 9002 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 9005 3A D2 85     	ld a,(Columnas)
 540+ 9008 3D           	dec a
 541+ 9009 20 01        	jr nz,1F
 542+ 900B 3C           	inc a
 543+ 900C 47           1 ld b,a
 544+ 900D C9           	ret
 545+ 900E
 546+ 900E              ; --------------------------------------------------------------------------------------------------------------------
 547+ 900E              ;
 548+ 900E              ;	3/1/23
 549+ 900E              ;
 550+ 900E              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 900E              ;
 552+ 900E              ;	Destruye: A,B,HL y DE.
 553+ 900E
 554+ 900E              Define_rutina_de_impresion
 555+ 900E
 556+ 900E 3A 9C 85     	ld a,(Columns)
 557+ 9011 47           	ld b,a
 558+ 9012 3A D2 85     	ld a,(Columnas)
 559+ 9015 B8           	cp b
 560+ 9016 20 0D        	jr nz,2f
 561+ 9018
 562+ 9018              ;	La entidad se imprime entera.
 563+ 9018
 564+ 9018 21 E4 90     	ld hl, Indice_entidades_completas
 565+ 901B E6 01        	and 1
 566+ 901D 28 02        	jr z,1F
 567+ 901F
 568+ 901F 23           	inc hl
 569+ 9020 23           	inc hl
 570+ 9021
 571+ 9021 CD FB 87     1 call Extrae_address
 572+ 9024 C9           	ret		;	ret
 573+ 9025
 574+ 9025              ;	La entidad no se imprime entera en pantalla.
 575+ 9025
 576+ 9025 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 9028 E6 01        	and 1
 578+ 902A 28 17        	jr z,3F
 579+ 902C
 580+ 902C              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 902C
 582+ 902C 21 E8 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 902F 3A 9C 85     4 ld a,(Columns)
 584+ 9032 E6 01        	and 1
 585+ 9034 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9036
 587+ 9036 23           	inc hl
 588+ 9037 23           	inc hl
 589+ 9038
 590+ 9038 3A D2 85     	ld a,(Columnas)
 591+ 903B E6 01        	and 1
 592+ 903D 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 903F
 594+ 903F 23           	inc hl
 595+ 9040 23           	inc hl
 596+ 9041
 597+ 9041 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9043
 599+ 9043 21 EE 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9046 18 E7        	jr 4B
 601+ 9048
 602+ 9048              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9048              ;
 604+ 9048              ;	Prepara_draw
 605+ 9048              ;
 606+ 9048              ;	Es una rutina de carga.
 607+ 9048              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9048              ;
 609+ 9048              ;	FUNCIONAMIENTO:
 610+ 9048              ;
 611+ 9048              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9048              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9048              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9048              ;
 615+ 9048              ;	DESTRUYE:
 616+ 9048              ;
 617+ 9048              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9048
 619+ 9048 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 904B 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 904C 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 904D 4E           	ld c,(hl)
 623+ 904E 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 9051 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9053 C9           	ret
 626+ 9054
 627+ 9054              ;----------------------------------------------------------------------------------------------------------------
 628+ 9054              ;
 629+ 9054              ;	5/08/22
 630+ 9054              ;
 631+ 9054              ;   NextScan.
 632+ 9054              ;
 633+ 9054              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9054              ;
 635+ 9054              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9054              ;
 637+ 9054              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9054              ;
 639+ 9054              ;       DESTRUIDOS: AF y HL !!!
 640+ 9054              ;
 641+ 9054              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9054              ;
 643+ 9054
 644+ 9054 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9055 7C               ld a,h
 646+ 9056 E6 07            and 7
 647+ 9058 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9059
 649+ 9059 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 905A C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 905C 6F               ld l,a
 652+ 905D D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 905E
 654+ 905E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 905F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9061 67               ld h,a
 657+ 9062 C9               ret
 658+ 9063
 659+ 9063              ;----------------------------------------------------------------------------------------------------------------
 660+ 9063              ;
 661+ 9063              ;	5/08/22
 662+ 9063              ;
 663+ 9063              ;   PreviousScan.
 664+ 9063              ;
 665+ 9063              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9063              ;
 667+ 9063              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9063              ;
 669+ 9063              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9063              ;
 671+ 9063              ;       DESTRUIDOS: AF y HL !!!
 672+ 9063              ;
 673+ 9063              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9063              ;
 675+ 9063
 676+ 9063 7C           PreviousScan ld a,h
 677+ 9064 25               dec h               ; Dec H.
 678+ 9065 E6 07            and 7
 679+ 9067 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9068
 681+ 9068 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9069 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 906B 6F               ld l,a
 684+ 906C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 906D
 686+ 906D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 906E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9070 67               ld h,a
 689+ 9071 C9               ret
 690+ 9072
 691+ 9072              ; -----------------------------------------------------------------------------------
 692+ 9072              ;
 693+ 9072              ;	28/2/23
 694+ 9072              ;
 695+ 9072              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9072              ;	Extrae fotos de Album_de_fotos.
 697+ 9072
 698+ 9072 3A DE 85     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 9075 A7           	and a
 700+ 9076 C8           	ret z
 701+ 9077 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 907B 31 00 70     	ld sp,Album_de_fotos
 703+ 907E
 704+ 907E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 9080 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 9081 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 9082
 708+ 9082 ED 73 E1 85  	ld (Stack_2),sp
 709+ 9086 ED 7B DF 85  	ld sp,(Stack)
 710+ 908A
 711+ 908A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 908A
 713+ 908A 3E CD        	ld a,$cd
 714+ 908C 32 94 90     	ld (Imprime),a
 715+ 908F EB           	ex de,hl
 716+ 9090 22 95 90     	ld (Imprime+1),hl
 717+ 9093 EB           	ex de,hl
 718+ 9094
 719+ 9094              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 9094
 721+ 9094 00 00 00     Imprime db 0,0,0
 722+ 9097
 723+ 9097 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 909A 3D           	dec a
 725+ 909B 28 09        	jr z,1F
 726+ 909D 32 DE 85      	ld (Numero_de_malotes),a
 727+ 90A0
 728+ 90A0 ED 7B E1 85   	ld sp,(Stack_2)
 729+ 90A4 18 D8        	jr 2B
 730+ 90A6
 731+ 90A6 AF           1 xor a
 732+ 90A7 32 E1 85     	ld (Stack_2),a
 733+ 90AA C9           	ret
 734+ 90AB
 735+ 90AB              ; -----------------------------------------------------------------------------------
 736+ 90AB              ;
 737+ 90AB              ;	28/2/23
 738+ 90AB              ;
 739+ 90AB              ;	Pinta los disparos generados.
 740+ 90AB
 741+ 90AB              Extrae_foto_disparos
 742+ 90AB
 743+ 90AB 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 90AE A7           	and a
 745+ 90AF C8           	ret z
 746+ 90B0 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 90B4 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 90B7
 749+ 90B7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 90B9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 90BA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 90BB
 753+ 90BB ED 73 E1 85  	ld (Stack_2),sp
 754+ 90BF ED 7B DF 85  	ld sp,(Stack)
 755+ 90C3
 756+ 90C3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 90C3
 758+ 90C3 3E CD        	ld a,$cd
 759+ 90C5 32 CD 90     	ld (Imprime2),a
 760+ 90C8 EB           	ex de,hl
 761+ 90C9 22 CE 90     	ld (Imprime2+1),hl
 762+ 90CC EB           	ex de,hl
 763+ 90CD
 764+ 90CD              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 90CD
 766+ 90CD 00 00 00     Imprime2 db 0,0,0
 767+ 90D0
 768+ 90D0 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 90D3 3D           	dec a
 770+ 90D4 28 09        	jr z,1F
 771+ 90D6 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 90D9
 773+ 90D9 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 90DD 18 D8        	jr 2B
 775+ 90DF
 776+ 90DF AF           1 xor a
 777+ 90E0 32 E1 85     	ld (Stack_2),a
 778+ 90E3 C9           	ret
 779+ 90E4
# file closed: Draw_XOR.asm
1028  90E4              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 90E4              ;   índices de Rutinas de impresión.
   2+ 90E4
   3+ 90E4 F4 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 90E6 21 91            defw Pinta_Amadeus_3x2
   5+ 90E8
   6+ 90E8 77 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 90EA 17 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 90EC CB 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 90EE
  10+ 90EE A1 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 90F0 A5 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 90F2 59 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 90F4
  14+ 90F4
  15+ 90F4              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 90F4              ;
  17+ 90F4              ;   12/12/22
  18+ 90F4              ;
  19+ 90F4              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 90F4              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 90F4              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 90F4              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 90F4              ;
  24+ 90F4              ;   Modifica: DE y HL.
  25+ 90F4
  26+ 90F4 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 90F8 FD F9        	ld sp,iy
  28+ 90FA 06 10            ld b,16
  29+ 90FC D1           1 pop de
  30+ 90FD 7B               ld a,e
  31+ 90FE AE               xor (hl)
  32+ 90FF 77           	ld (hl),a
  33+ 9100 23           	inc hl
  34+ 9101 7A               ld a,d
  35+ 9102 AE               xor (hl)
  36+ 9103 77           	ld (hl),a
  37+ 9104 2B           	dec hl
  38+ 9105 24           	inc h
  39+ 9106 7C               ld a,h
  40+ 9107 E6 07            and 7
  41+ 9109 20 0A            jr nz,2F
  42+ 910B 7D               ld a,l
  43+ 910C C6 20            add a,$20
  44+ 910E 6F               ld l,a
  45+ 910F 38 04            jr c,2F
  46+ 9111 7C               ld a,h
  47+ 9112 D6 08            sub 8
  48+ 9114 67               ld h,a
  49+ 9115 7C           2 ld a,h
  50+ 9116 FE 58            cp $58
  51+ 9118 28 02            jr z,3F
  52+ 911A 10 E0            djnz 1B
  53+ 911C ED 7B DF 85  3 ld sp,(Stack)
  54+ 9120 C9           	ret
  55+ 9121
  56+ 9121 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9125 FD F9        	ld sp,iy
  58+ 9127 06 08            ld b,8
  59+ 9129 D1           1 pop de
  60+ 912A 7B               ld a,e
  61+ 912B AE               xor (hl)
  62+ 912C 77           	ld (hl),a
  63+ 912D 23           	inc hl
  64+ 912E 7A               ld a,d
  65+ 912F AE               xor (hl)
  66+ 9130 77           	ld (hl),a
  67+ 9131 23           	inc hl
  68+ 9132 D1           	pop de
  69+ 9133 7B               ld a,e
  70+ 9134 AE               xor (hl)
  71+ 9135 77           	ld (hl),a
  72+ 9136 2B           	dec hl
  73+ 9137 2B           	dec hl
  74+ 9138 24           	inc h
  75+ 9139 7C               ld a,h
  76+ 913A E6 07            and 7
  77+ 913C 20 0A            jr nz,2F
  78+ 913E 7D               ld a,l
  79+ 913F C6 20            add a,$20
  80+ 9141 6F               ld l,a
  81+ 9142 38 04            jr c,2F
  82+ 9144 7C               ld a,h
  83+ 9145 D6 08            sub 8
  84+ 9147 67               ld h,a
  85+ 9148 7C           2 ld a,h
  86+ 9149 FE 58            cp $58
  87+ 914B 28 25            jr z,4F
  88+ 914D 7A               ld a,d
  89+ 914E AE               xor (hl)
  90+ 914F 77               ld (hl),a
  91+ 9150 D1           	pop de
  92+ 9151 23           	inc hl
  93+ 9152 7B               ld a,e
  94+ 9153 AE               xor (hl)
  95+ 9154 77           	ld (hl),a
  96+ 9155 23           	inc hl
  97+ 9156 7A               ld a,d
  98+ 9157 AE               xor (hl)
  99+ 9158 77           	ld (hl),a
 100+ 9159 2B           	dec hl
 101+ 915A 2B           	dec hl
 102+ 915B 24           	inc h
 103+ 915C 7C               ld a,h
 104+ 915D E6 07            and 7
 105+ 915F 20 0A            jr nz,3F
 106+ 9161 7D               ld a,l
 107+ 9162 C6 20            add a,$20
 108+ 9164 6F               ld l,a
 109+ 9165 38 04            jr c,3F
 110+ 9167 7C               ld a,h
 111+ 9168 D6 08            sub 8
 112+ 916A 67               ld h,a
 113+ 916B 7C           3 ld a,h
 114+ 916C FE 58            cp $58
 115+ 916E 28 02            jr z,4F
 116+ 9170 10 B7            djnz 1B
 117+ 9172 ED 7B DF 85  4 ld sp,(Stack)
 118+ 9176 C9           	ret
 119+ 9177
 120+ 9177              ; ---------------------------------------------------
 121+ 9177
 122+ 9177 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 917B FD F9        	ld sp,iy
 124+ 917D
 125+ 917D              ; >>>
 126+ 917D
 127+ 917D 06 10            ld b,16
 128+ 917F D1           1 pop de
 129+ 9180 7A           	ld a,d
 130+ 9181 AE           	xor (hl)
 131+ 9182 77           	ld (hl),a
 132+ 9183 24           	inc h
 133+ 9184 7C               ld a,h
 134+ 9185 E6 07            and 7
 135+ 9187 20 0C            jr nz,2F
 136+ 9189 7D               ld a,l
 137+ 918A C6 20            add a,$20
 138+ 918C 6F               ld l,a
 139+ 918D 38 06            jr c,2F
 140+ 918F 7C               ld a,h
 141+ 9190 D6 08            sub 8
 142+ 9192 67               ld h,a
 143+ 9193 18 00            jr 2F
 144+ 9195 7C           2 ld a,h
 145+ 9196 FE 58            cp $58
 146+ 9198 28 02            jr z,3F
 147+ 919A 10 E3            djnz 1B
 148+ 919C ED 7B DF 85  3 ld sp,(Stack)
 149+ 91A0 C9           	ret
 150+ 91A1
 151+ 91A1 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 91A5 FD F9        	ld sp,iy
 153+ 91A7
 154+ 91A7              ; >>>
 155+ 91A7
 156+ 91A7 06 10            ld b,16
 157+ 91A9 D1           1 pop de
 158+ 91AA 7B           	ld a,e
 159+ 91AB AE           	xor (hl)
 160+ 91AC 77           	ld (hl),a
 161+ 91AD 24           	inc h
 162+ 91AE 7C               ld a,h
 163+ 91AF E6 07            and 7
 164+ 91B1 20 0C            jr nz,2F
 165+ 91B3 7D               ld a,l
 166+ 91B4 C6 20            add a,$20
 167+ 91B6 6F               ld l,a
 168+ 91B7 38 06            jr c,2F
 169+ 91B9 7C               ld a,h
 170+ 91BA D6 08            sub 8
 171+ 91BC 67               ld h,a
 172+ 91BD 18 00            jr 2F
 173+ 91BF 7C           2 ld a,h
 174+ 91C0 FE 58            cp $58
 175+ 91C2 28 02            jr z,3F
 176+ 91C4 10 E3            djnz 1B
 177+ 91C6 ED 7B DF 85  3 ld sp,(Stack)
 178+ 91CA C9           	ret
 179+ 91CB
 180+ 91CB              ; ---------------------------------------------------
 181+ 91CB
 182+ 91CB ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91CF FD F9        	ld sp,iy
 184+ 91D1 06 08            ld b,8
 185+ 91D3 D1           1 pop de
 186+ 91D4 7A           	ld a,d
 187+ 91D5 AE           	xor (hl)
 188+ 91D6 77           	ld (hl),a
 189+ 91D7 23           	inc hl
 190+ 91D8 D1           	pop de
 191+ 91D9 7B           	ld a,e
 192+ 91DA AE           	xor (hl)
 193+ 91DB 77           	ld (hl),a
 194+ 91DC 2B           	dec hl
 195+ 91DD 24            	inc h
 196+ 91DE 7C               ld a,h
 197+ 91DF E6 07            and 7
 198+ 91E1 20 0A            jr nz,2F
 199+ 91E3 7D               ld a,l
 200+ 91E4 C6 20            add a,$20
 201+ 91E6 6F               ld l,a
 202+ 91E7 38 04            jr c,2F
 203+ 91E9 7C               ld a,h
 204+ 91EA D6 08            sub 8
 205+ 91EC 67               ld h,a
 206+ 91ED 7C           2 ld a,h
 207+ 91EE FE 58            cp $58
 208+ 91F0 28 20            jr z,4F
 209+ 91F2 D1               pop de
 210+ 91F3 7B           	ld a,e
 211+ 91F4 AE           	xor (hl)
 212+ 91F5 77           	ld (hl),a
 213+ 91F6 23           	inc hl
 214+ 91F7 7A           	ld a,d
 215+ 91F8 AE           	xor (hl)
 216+ 91F9 77           	ld (hl),a
 217+ 91FA 2B           	dec hl
 218+ 91FB 24           	inc h
 219+ 91FC 7C               ld a,h
 220+ 91FD E6 07            and 7
 221+ 91FF 20 0A            jr nz,3F
 222+ 9201 7D               ld a,l
 223+ 9202 C6 20            add a,$20
 224+ 9204 6F               ld l,a
 225+ 9205 38 04            jr c,3F
 226+ 9207 7C               ld a,h
 227+ 9208 D6 08            sub 8
 228+ 920A 67               ld h,a
 229+ 920B 7C           3 ld a,h
 230+ 920C FE 58            cp $58
 231+ 920E 28 02            jr z,4F
 232+ 9210 10 C1            djnz 1B
 233+ 9212 ED 7B DF 85  4 ld sp,(Stack)
 234+ 9216 C9           	ret
 235+ 9217
 236+ 9217 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 921B FD F9        	ld sp,iy
 238+ 921D 06 08            ld b,8
 239+ 921F D1           1 pop de
 240+ 9220 D1           	pop de
 241+ 9221 7B           	ld a,e
 242+ 9222 AE           	xor (hl)
 243+ 9223 77           	ld (hl),a
 244+ 9224 24            	inc h
 245+ 9225 7C               ld a,h
 246+ 9226 E6 07            and 7
 247+ 9228 20 0A            jr nz,2F
 248+ 922A 7D               ld a,l
 249+ 922B C6 20            add a,$20
 250+ 922D 6F               ld l,a
 251+ 922E 38 04            jr c,2F
 252+ 9230 7C               ld a,h
 253+ 9231 D6 08            sub 8
 254+ 9233 67               ld h,a
 255+ 9234 7C           2 ld a,h
 256+ 9235 FE 58            cp $58
 257+ 9237 28 1B            jr z,4F
 258+ 9239 D1               pop de
 259+ 923A 7A           	ld a,d
 260+ 923B AE           	xor (hl)
 261+ 923C 77           	ld (hl),a
 262+ 923D 24           	inc h
 263+ 923E 7C               ld a,h
 264+ 923F E6 07            and 7
 265+ 9241 20 0A            jr nz,3F
 266+ 9243 7D               ld a,l
 267+ 9244 C6 20            add a,$20
 268+ 9246 6F               ld l,a
 269+ 9247 38 04            jr c,3F
 270+ 9249 7C               ld a,h
 271+ 924A D6 08            sub 8
 272+ 924C 67               ld h,a
 273+ 924D 7C           3 ld a,h
 274+ 924E FE 58            cp $58
 275+ 9250 28 02            jr z,4F
 276+ 9252 10 CB            djnz 1B
 277+ 9254 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9258 C9           	ret
 279+ 9259
 280+ 9259 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 925D FD F9        	ld sp,iy
 282+ 925F 06 08            ld b,8
 283+ 9261 D1           1 pop de
 284+ 9262 7B           	ld a,e
 285+ 9263 AE           	xor (hl)
 286+ 9264 77           	ld (hl),a
 287+ 9265 23           	inc hl
 288+ 9266 7A           	ld a,d
 289+ 9267 AE           	xor (hl)
 290+ 9268 77           	ld (hl),a
 291+ 9269 2B           	dec hl
 292+ 926A 24             	inc h
 293+ 926B 7C               ld a,h
 294+ 926C E6 07            and 7
 295+ 926E 20 0A            jr nz,2F
 296+ 9270 7D               ld a,l
 297+ 9271 C6 20            add a,$20
 298+ 9273 6F               ld l,a
 299+ 9274 38 04            jr c,2F
 300+ 9276 7C               ld a,h
 301+ 9277 D6 08            sub 8
 302+ 9279 67               ld h,a
 303+ 927A 7C           2 ld a,h
 304+ 927B FE 58            cp $58
 305+ 927D 28 21            jr z,4F
 306+ 927F D1               pop de
 307+ 9280 7A           	ld a,d
 308+ 9281 AE           	xor (hl)
 309+ 9282 77           	ld (hl),a
 310+ 9283 23           	inc hl
 311+ 9284 D1               pop de
 312+ 9285 7B           	ld a,e
 313+ 9286 AE           	xor (hl)
 314+ 9287 77           	ld (hl),a
 315+ 9288 2B           	dec hl
 316+ 9289 24           	inc h
 317+ 928A 7C               ld a,h
 318+ 928B E6 07            and 7
 319+ 928D 20 0A            jr nz,3F
 320+ 928F 7D               ld a,l
 321+ 9290 C6 20            add a,$20
 322+ 9292 6F               ld l,a
 323+ 9293 38 04            jr c,3F
 324+ 9295 7C               ld a,h
 325+ 9296 D6 08            sub 8
 326+ 9298 67               ld h,a
 327+ 9299 7C           3 ld a,h
 328+ 929A FE 58            cp $58
 329+ 929C 28 02            jr z,4F
 330+ 929E 10 C1            djnz 1B
 331+ 92A0 ED 7B DF 85  4 ld sp,(Stack)
 332+ 92A4 C9           	ret
 333+ 92A5
 334+ 92A5 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 92A9 FD F9        	ld sp,iy
 336+ 92AB 06 08            ld b,8
 337+ 92AD D1           1 pop de
 338+ 92AE 7B           	ld a,e
 339+ 92AF AE           	xor (hl)
 340+ 92B0 77           	ld (hl),a
 341+ 92B1 24            	inc h
 342+ 92B2 7C               ld a,h
 343+ 92B3 E6 07            and 7
 344+ 92B5 20 0A            jr nz,2F
 345+ 92B7 7D               ld a,l
 346+ 92B8 C6 20            add a,$20
 347+ 92BA 6F               ld l,a
 348+ 92BB 38 04            jr c,2F
 349+ 92BD 7C               ld a,h
 350+ 92BE D6 08            sub 8
 351+ 92C0 67               ld h,a
 352+ 92C1 7C           2 ld a,h
 353+ 92C2 FE 58            cp $58
 354+ 92C4 28 1C            jr z,4F
 355+ 92C6 D1               pop de
 356+ 92C7 7A           	ld a,d
 357+ 92C8 AE           	xor (hl)
 358+ 92C9 77           	ld (hl),a
 359+ 92CA 24           	inc h
 360+ 92CB 7C               ld a,h
 361+ 92CC E6 07            and 7
 362+ 92CE 20 0A            jr nz,3F
 363+ 92D0 7D               ld a,l
 364+ 92D1 C6 20            add a,$20
 365+ 92D3 6F               ld l,a
 366+ 92D4 38 04            jr c,3F
 367+ 92D6 7C               ld a,h
 368+ 92D7 D6 08            sub 8
 369+ 92D9 67               ld h,a
 370+ 92DA 7C           3 ld a,h
 371+ 92DB FE 58            cp $58
 372+ 92DD 28 03            jr z,4F
 373+ 92DF D1               pop de
 374+ 92E0 10 CB            djnz 1B
 375+ 92E2 ED 7B DF 85  4 ld sp,(Stack)
 376+ 92E6 C9           	ret
 377+ 92E7
 378+ 92E7              ; ---------------------------------------------------
 379+ 92E7              ;
 380+ 92E7              ;   27/02/23
 381+ 92E7              ;
 382+ 92E7              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 92E7              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 92E7              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 92E7
 386+ 92E7 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 92EB FD F9            ld sp,iy
 388+ 92ED 06 02            ld b,2
 389+ 92EF D1           1 pop de
 390+ 92F0 7B               ld a,e
 391+ 92F1 AE               xor (hl)
 392+ 92F2 77               ld (hl),a
 393+ 92F3 23               inc hl
 394+ 92F4 7A               ld a,d
 395+ 92F5 AE               xor (hl)
 396+ 92F6 77               ld (hl),a
 397+ 92F7 2B               dec hl
 398+ 92F8
 399+ 92F8 24               inc h
 400+ 92F9 7C               ld a,h
 401+ 92FA E6 07            and 7
 402+ 92FC 20 0A            jr nz,2F
 403+ 92FE 7D               ld a,l
 404+ 92FF C6 20            add a,$20
 405+ 9301 6F               ld l,a
 406+ 9302 38 04            jr c,2F
 407+ 9304 7C               ld a,h
 408+ 9305 D6 08            sub 8
 409+ 9307 67               ld h,a
 410+ 9308 7C           2 ld a,h
 411+ 9309 FE 58            cp $58
 412+ 930B 28 02            jr z,3F
 413+ 930D
 414+ 930D 10 E0            djnz 1B
 415+ 930F ED 7B DF 85  3 ld sp,(Stack)
 416+ 9313 C9               ret
 417+ 9314
# file closed: Rutinas_de_impresion_sprites.asm
1029  9314              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9314              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9314              ;
   3+ 9314              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9314              ;
   5+ 9314              ; *****************************************************************************************************************************************************************************************
   6+ 9314              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9314
   8+ 9314 7C           calcula_tercio ld a,h
   9+ 9315 E6 18        	and $18
  10+ 9317 CB 2F        	sra a
  11+ 9319 CB 2F        	sra a
  12+ 931B CB 2F        	sra a
  13+ 931D C9           	ret
  14+ 931E
# file closed: calcula_tercio.asm
1030  931E              	include "Cls.asm"
# file opened: Cls.asm
   1+ 931E              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 931E              ;
   3+ 931E              ;
   4+ 931E              ;	CLS.
   5+ 931E              ;
   6+ 931E              ;	Limpia la pantalla y define sus atributos.
   7+ 931E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 931E              ;
   9+ 931E              ;	COLORES: 0 ..... NEGRO
  10+ 931E              ;    		 1 ..... AZUL
  11+ 931E              ; 			 2 ..... ROJO
  12+ 931E              ;			 3 ..... MAGENTA
  13+ 931E              ; 			 4 ..... VERDE
  14+ 931E              ; 			 5 ..... CIAN
  15+ 931E              ;			 6 ..... AMARILLO
  16+ 931E              ; 			 7 ..... BLANCO
  17+ 931E              ;
  18+ 931E              ;	INPUT: A contiene los atributos de pantalla.
  19+ 931E              ;
  20+ 931E              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 931E
  22+ 931E
  23+ 931E 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9321 11 01 40     	LD DE,$4001
  25+ 9324 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9327 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9329 ED B0        	LDIR
  28+ 932B 01 FF 02     	LD BC,767
  29+ 932E 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 932F ED B0        	LDIR
  31+ 9331 C9           	ret
  32+ 9332
# file closed: Cls.asm
1031  9332              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9332              ; ******************************************************************************************************************************************************************************************
   2+ 9332              ;
   3+ 9332              ;   22/01/23
   4+ 9332              ;
   5+ 9332              ;	Mov_down
   6+ 9332              ;
   7+ 9332              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9332              ;
   9+ 9332              ;
  10+ 9332 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9335 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9337              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9337              ; 																	; _ en el caso de que no lo haya.
  14+ 9337 3A B3 85     	ld a,(Vel_down)
  15+ 933A 47           	ld b,a
  16+ 933B 2A 9D 85         ld hl,(Posicion_actual)
  17+ 933E CD 14 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9341 E6 02        	and 2
  19+ 9343 28 0F        	jr z,1F
  20+ 9345
  21+ 9345              ; Nos encontramos en el último tercio de pantalla.
  22+ 9345              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9345
  24+ 9345 7C           	ld a,h
  25+ 9346 FE 57        	cp $57
  26+ 9348 20 0A        	jr nz,1F
  27+ 934A 7D           	ld a,l
  28+ 934B C6 20        	add $20
  29+ 934D 30 05        	jr nc,1F
  30+ 934F
  31+ 934F              ; ------------------------------
  32+ 934F CD 2A 96     	call Reaparece_arriba
  33+ 9352              ;	call Reinicio
  34+ 9352              ; ------------------------------
  35+ 9352
  36+ 9352 18 08        	jr 3F
  37+ 9354 CD 54 90     1 call NextScan
  38+ 9357 22 9D 85     	ld (Posicion_actual),hl
  39+ 935A 10 E2            djnz 2B
  40+ 935C CD 40 96     3 call Genera_coordenadas
  41+ 935F C9           	ret
  42+ 9360
  43+ 9360              ; ******************************************************************************************************************************************************************************************
  44+ 9360              ;
  45+ 9360              ;   22/01/23
  46+ 9360              ;
  47+ 9360              ;	Mov_up
  48+ 9360              ;
  49+ 9360              ; 	Mueve el Sprite hacia arriba.
  50+ 9360              ;
  51+ 9360              ;
  52+ 9360 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9363 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9365              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9365              ; 																		; _ en el caso de que no lo haya.
  56+ 9365 3A B2 85     	ld a,(Vel_up)
  57+ 9368 47           	ld b,a
  58+ 9369 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 936C CD 14 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 936F A7           	and a
  61+ 9370 20 10        	jr nz,1F
  62+ 9372
  63+ 9372              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9372              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9372
  66+ 9372 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9373 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9375 20 0B            jr nz,1F
  69+ 9377 7D               ld a,l
  70+ 9378 D6 20            sub $20
  71+ 937A 30 06            jr nc,1F
  72+ 937C 25               dec h
  73+ 937D
  74+ 937D              ; -----------------------------
  75+ 937D CD 1A 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9380              ;	call Reinicio
  77+ 9380              ; -----------------------------
  78+ 9380
  79+ 9380 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9382 CD 63 90     1 call PreviousScan
  81+ 9385 22 9D 85     	ld (Posicion_actual),hl
  82+ 9388 10 E2            djnz 3B
  83+ 938A CD 40 96     2 call Genera_coordenadas
  84+ 938D C9           	ret
  85+ 938E
  86+ 938E              ; ******************************************************************************************************************************************************************************************
  87+ 938E              ;
  88+ 938E              ;	19/10/22
  89+ 938E              ;
  90+ 938E              ;	Mov_right.
  91+ 938E              ;
  92+ 938E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 938E              ;
  94+ 938E
  95+ 938E 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 9391 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9393              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9393              ; 																	; _ en el caso de que no lo haya.
  99+ 9393 3A C9 85     	ld a,(Ctrl_0)
 100+ 9396 CB 77        	bit 6,a
 101+ 9398 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 939A
 103+ 939A CD C8 95     	call Stop_Amadeus_right
 104+ 939D C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 939E 18 4D        	jr 8F
 106+ 93A0
 107+ 93A0 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 93A3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 93A5 20 46        	jr nz,8F
 110+ 93A7
 111+ 93A7 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 93AA A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 93AB 28 40        	jr z,8F
 114+ 93AD
 115+ 93AD              ; ---------- ---------- ----------
 116+ 93AD              ;
 117+ 93AD              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 93AD
 119+ 93AD 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 93B0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 93B2 28 11        	jr z,1F
 122+ 93B4 38 06        	jr c,6F
 123+ 93B6 FE 04        	cp 4
 124+ 93B8 28 14        	jr z,7F
 125+ 93BA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 93BC
 127+ 93BC              ; ---------- ---------- ----------
 128+ 93BC              ;
 129+ 93BC              ; Perfiles de velocidad
 130+ 93BC              ;
 131+ 93BC
 132+ 93BC 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 93BF FE FE        	cp $fe
 134+ 93C1 20 2A        	jr nz,8F
 135+ 93C3 18 10        	jr 3F
 136+ 93C5 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 93C8 FE FD        	cp $fd
 138+ 93CA 20 21        	jr nz,8F
 139+ 93CC 18 07        	jr 3F
 140+ 93CE 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93D1 FE FB        	cp $fb
 142+ 93D3 20 18        	jr nz,8F
 143+ 93D5
 144+ 93D5              ; ---------- ---------- ----------
 145+ 93D5
 146+ 93D5              3
 147+ 93D5 CD 08 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93D8              ;	call Reinicio
 149+ 93D8
 150+ 93D8              ; ---------- ---------- ----------
 151+ 93D8              ;
 152+ 93D8              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93D8
 154+ 93D8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93DA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93DB CD F4 93     	call DESPLZ_DER
 157+ 93DE C1           	pop bc
 158+ 93DF 10 F9        	djnz 5B
 159+ 93E1 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 93E4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 93E5 22 9D 85     	ld (Posicion_actual),hl
 162+ 93E8 CD 40 96     	call Genera_coordenadas
 163+ 93EB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 93ED
 165+ 93ED              ; ---------- ---------- ----------
 166+ 93ED
 167+ 93ED 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 93F0 CD F4 93     	call DESPLZ_DER
 169+ 93F3 C9           2 ret
 170+ 93F4
 171+ 93F4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 93F4              ;
 173+ 93F4              ;	22/9/22
 174+ 93F4              ;
 175+ 93F4
 176+ 93F4 CD 03 94     DESPLZ_DER call Desplaza_derecha
 177+ 93F7 CD 4F 94         call modifica_parametros_1er_DESPLZ_2
 178+ 93FA CD 78 94         call Ciclo_completo
 179+ 93FD 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9400 CB FE        	set 7,(hl)
 181+ 9402 C9           	ret
 182+ 9403
 183+ 9403              ; ******************************************************************************************************************************************************************************************
 184+ 9403              ;	15/02/23
 185+ 9403              ;
 186+ 9403
 187+ 9403 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9406 47           	ld b,a
 189+ 9407 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 940A 23           1 inc hl
 191+ 940B 23           	inc hl
 192+ 940C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 940E 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9411 CD FB 87     	call Extrae_address
 195+ 9414 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9417
 197+ 9417              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9417
 199+ 9417              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9417              ; Cuántos movimientos hemos hecho ??
 201+ 9417              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9417
 203+ 9417 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 941A EB           	ex de,hl
 205+ 941B A7           	and a
 206+ 941C ED 52        	sbc hl,de
 207+ 941E CB 3D        	srl l
 208+ 9420 3E 08        6 ld a,8
 209+ 9422 95           	sub l
 210+ 9423 30 1E        	jr nc,3F
 211+ 9425
 212+ 9425              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9425              ; B="0".
 214+ 9425
 215+ 9425 04           4 inc b
 216+ 9426 3C           	inc a
 217+ 9427 20 FC        	jr nz,4B
 218+ 9429 78           	ld a,b
 219+ 942A 08           	ex af,af
 220+ 942B 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 942E 23           5 inc hl
 222+ 942F 23           	inc hl
 223+ 9430 10 FC        	djnz 5B
 224+ 9432 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9435 CD FB 87     	call Extrae_address
 226+ 9438 22 9F 85     	ld (Puntero_objeto),hl
 227+ 943B
 228+ 943B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 943B              ; _(Posicion_actual).
 230+ 943B
 231+ 943B 21 9D 85     	ld hl,Posicion_actual
 232+ 943E 34           	inc (hl)
 233+ 943F 08               ex af,af
 234+ 9440 6F           	ld l,a
 235+ 9441 18 DD        	jr 6B
 236+ 9443
 237+ 9443              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9443
 239+ 9443 47           3 ld b,a
 240+ 9444 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9447 23           2 inc hl
 242+ 9448 23           	inc hl
 243+ 9449 10 FC        	djnz 2B
 244+ 944B 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 944E C9           8 ret
 246+ 944F
 247+ 944F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 944F              ;
 249+ 944F              ;	24/7/22
 250+ 944F              ;
 251+ 944F              ;	modifica_parametros_1er_DESPLZ_2
 252+ 944F              ;
 253+ 944F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 944F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 944F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 944F
 257+ 944F 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9452 A7           	and a
 259+ 9453 20 1F        	jr nz,1F
 260+ 9455 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9457 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 945A
 263+ 945A 21 9C 85     	ld hl,Columns
 264+ 945D 34           	inc (hl)
 265+ 945E 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9461 E6 01        	and 1
 267+ 9463 28 0F        	jr z,1F
 268+ 9465 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9468 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9469 22 9D 85     	ld (Posicion_actual),hl
 271+ 946C CD 40 96     	call Genera_coordenadas
 272+ 946F CD D4 95     	call Inc_CTRL_DESPLZ
 273+ 9472 18 03        	jr 2F
 274+ 9474 CD D4 95     1 call Inc_CTRL_DESPLZ
 275+ 9477 C9           2 ret
 276+ 9478
 277+ 9478              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9478              ;
 279+ 9478              ;	24/7/22
 280+ 9478              ;
 281+ 9478              ;	Ciclo_completo.
 282+ 9478              ;
 283+ 9478              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9478              ;
 285+ 9478              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9478              ; 	Decrementamos (Columns).
 287+ 9478              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9478              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9478
 290+ 9478
 291+ 9478 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 947B FE FF        	cp $ff
 293+ 947D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 947F E6 F0        	and $f0
 295+ 9481 20 28        	jr nz,3F
 296+ 9483
 297+ 9483              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9483
 299+ 9483 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9486 47           	ld b,a
 301+ 9487 3E F8        	ld a,$f8
 302+ 9489 80           	add b
 303+ 948A 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 948D 18 1C        	jr 3F
 305+ 948F 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9492 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9493 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9494 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 9497 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 949A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 949C 20 0A        	jr nz,2F
 312+ 949E 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 94A1 23           	inc hl
 314+ 94A2 22 9D 85     	ld (Posicion_actual),hl
 315+ 94A5 CD 40 96     	call Genera_coordenadas
 316+ 94A8
 317+ 94A8              ; Inicia el puntero de Sprite.
 318+ 94A8
 319+ 94A8 CD 12 88     2 call Inicia_puntero_objeto_der
 320+ 94AB C9           3 ret
 321+ 94AC
 322+ 94AC              ; ******************************************************************************************************************************************************************************************
 323+ 94AC              ;
 324+ 94AC              ;	15/02/23
 325+ 94AC              ;
 326+ 94AC              ;	Mov_left.
 327+ 94AC              ;
 328+ 94AC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 94AC              ;
 330+ 94AC              Mov_left
 331+ 94AC
 332+ 94AC 21 C9 85     	ld hl,Ctrl_0
 333+ 94AF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 94B1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 94B1              ; 																	; _ en el caso de que no lo haya.
 336+ 94B1 3A C9 85     	ld a,(Ctrl_0)
 337+ 94B4 CB 77        	bit 6,a
 338+ 94B6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 94B8
 340+ 94B8 CD CE 95     	call Stop_Amadeus_left
 341+ 94BB C8           	ret z
 342+ 94BC 20 4A        	jr nz,8F
 343+ 94BE
 344+ 94BE 3A A1 85     11 ld a,(Coordenada_X)
 345+ 94C1 A7           	and a
 346+ 94C2 20 44        	jr nz,8F
 347+ 94C4
 348+ 94C4 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 94C7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 94C8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 94CA
 352+ 94CA              ; ---------- ---------- ----------
 353+ 94CA
 354+ 94CA 3A B0 85     	ld a,(Vel_left)
 355+ 94CD FE 02        	cp 2
 356+ 94CF 28 0F        	jr z,1F
 357+ 94D1 38 04        	jr c,6F
 358+ 94D3 FE 04        	cp 4
 359+ 94D5 28 12        	jr z,7F
 360+ 94D7
 361+ 94D7              ; ---------- ---------- ----------
 362+ 94D7
 363+ 94D7 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94DA FE F8        	cp $f8
 365+ 94DC 20 2A        	jr nz,8F
 366+ 94DE 18 10        	jr 4F
 367+ 94E0 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 94E3 FE F9        	cp $f9
 369+ 94E5 20 21        	jr nz,8F
 370+ 94E7 18 07        	jr 4F
 371+ 94E9 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 94EC FE FB        	cp $fb
 373+ 94EE 20 18        	jr nz,8F
 374+ 94F0
 375+ 94F0              ; ---------- ---------- ----------
 376+ 94F0
 377+ 94F0              4
 378+ 94F0 CD F6 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 94F3              ;	call Reinicio
 380+ 94F3
 381+ 94F3              ; ---------- ---------- ----------
 382+ 94F3
 383+ 94F3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 94F5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 94F6
 386+ 94F6              ;	ld hl,(Indice_Sprite_izq)
 387+ 94F6              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 94F6
 389+ 94F6 CD 0F 95     	call DESPLZ_IZQ
 390+ 94F9 C1           	pop bc
 391+ 94FA 10 F9        	djnz 5B
 392+ 94FC 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 94FF 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9500 22 9D 85     	ld (Posicion_actual),hl
 395+ 9503 CD 40 96     	call Genera_coordenadas
 396+ 9506 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9508
 398+ 9508              ; ---------- ---------- ----------
 399+ 9508
 400+ 9508              ; Movemos, no hay recolocación.
 401+ 9508
 402+ 9508 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 950B CD 0F 95     	call DESPLZ_IZQ
 404+ 950E C9           2 ret
 405+ 950F
 406+ 950F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 950F              ;
 408+ 950F              ;	22/9/22
 409+ 950F
 410+ 950F              DESPLZ_IZQ
 411+ 950F
 412+ 950F CD 1E 95     	call Desplaza_izquierda
 413+ 9512 CD 6A 95         call modifica_parametros_1er_DESPLZ
 414+ 9515 CD 92 95     	call Ciclo_completo_2
 415+ 9518 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 951B CB BE        	res 7,(hl)
 417+ 951D C9           	ret
 418+ 951E
 419+ 951E              Desplaza_izquierda
 420+ 951E
 421+ 951E 3A B0 85     	ld a,(Vel_left)
 422+ 9521 47           	ld b,a
 423+ 9522 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9525 23           1 inc hl
 425+ 9526 23           	inc hl
 426+ 9527 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9529 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 952C CD FB 87     	call Extrae_address
 429+ 952F 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9532
 431+ 9532              ; Modifica (Puntero_DESPLZ_der).
 432+ 9532
 433+ 9532              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9532              ; Cuántos movimientos hemos hecho ??
 435+ 9532              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9532
 437+ 9532 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9535 EB           	ex de,hl
 439+ 9536 A7           	and a
 440+ 9537 ED 52        	sbc hl,de
 441+ 9539 CB 3D        	srl l
 442+ 953B 3E 08        6 ld a,8
 443+ 953D 95           	sub l
 444+ 953E 30 1E        	jr nc,3F
 445+ 9540
 446+ 9540              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 9540              ; B="0".
 448+ 9540
 449+ 9540 04           4 inc b
 450+ 9541 3C           	inc a
 451+ 9542 20 FC        	jr nz,4B
 452+ 9544 78           	ld a,b
 453+ 9545 08           	ex af,af
 454+ 9546 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9549 23           5 inc hl
 456+ 954A 23           	inc hl
 457+ 954B 10 FC        	djnz 5B
 458+ 954D 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 9550 CD FB 87     	call Extrae_address
 460+ 9553 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9556
 462+ 9556              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9556              ; _(Posicion_actual).
 464+ 9556
 465+ 9556 21 9D 85     	ld hl,Posicion_actual
 466+ 9559 35           	dec (hl)
 467+ 955A 08           	ex af,af
 468+ 955B 6F           	ld l,a
 469+ 955C 18 DD        	jr 6B
 470+ 955E
 471+ 955E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 955E
 473+ 955E 47           3 ld b,a
 474+ 955F 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9562 23           2 inc hl
 476+ 9563 23           	inc hl
 477+ 9564 10 FC        	djnz 2B
 478+ 9566 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9569 C9           8 ret
 480+ 956A
 481+ 956A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 956A              ;
 483+ 956A              ;	modifica_parametros_1er_DESPLZ
 484+ 956A              ;
 485+ 956A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 956A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 956A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 956A
 489+ 956A 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 956D A7           	and a
 491+ 956E 20 1E        	jr nz,1F
 492+ 9570 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9571 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9574 21 9C 85     	ld hl,Columns
 495+ 9577 34           	inc (hl)
 496+ 9578 3A AF 85     	ld a,(Cuad_objeto)
 497+ 957B E6 01        	and 1
 498+ 957D 20 0F        	jr nz,1F
 499+ 957F 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9582 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9583 22 9D 85     	ld (Posicion_actual),hl
 502+ 9586 CD 40 96     	call Genera_coordenadas
 503+ 9589 CD E5 95     	call Dec_CTRL_DESPLZ
 504+ 958C 18 03        	jr 2F
 505+ 958E CD E5 95     1 call Dec_CTRL_DESPLZ
 506+ 9591 C9           2 ret
 507+ 9592
 508+ 9592              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9592
 510+ 9592 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9595 FE F7        	cp $f7
 512+ 9597 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9599 30 2C        	jr nc,3F
 514+ 959B
 515+ 959B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 959B
 517+ 959B 06 00        	ld b,0
 518+ 959D 04           4 inc b
 519+ 959E 3C           	inc a
 520+ 959F FE F7        	cp $f7
 521+ 95A1 20 FA        	jr nz,4B
 522+ 95A3 3E FF        	ld a,$ff
 523+ 95A5 90           	sub b
 524+ 95A6 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 95A9 18 1C        	jr 3F
 526+ 95AB
 527+ 95AB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 95AB
 529+ 95AB 21 9C 85     1 ld hl,Columns
 530+ 95AE 35           	dec (hl)
 531+ 95AF AF           	xor a
 532+ 95B0 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 95B3 3A AF 85     	ld a,(Cuad_objeto)
 534+ 95B6 E6 01        	and 1
 535+ 95B8 28 0A        	jr z,2F
 536+ 95BA 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 95BD 2B           	dec hl
 538+ 95BE 22 9D 85     	ld (Posicion_actual),hl
 539+ 95C1 CD 40 96     	call Genera_coordenadas
 540+ 95C4
 541+ 95C4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 95C4
 543+ 95C4 CD 25 88     2 call Inicia_puntero_objeto_izq
 544+ 95C7 C9           3 ret
 545+ 95C8
 546+ 95C8              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 95C8              ;
 548+ 95C8              ;	19/10/22
 549+ 95C8              ;
 550+ 95C8              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 95C8              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 95C8
 553+ 95C8 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 95CB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95CD C9           	ret
 556+ 95CE
 557+ 95CE              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95CE              ;
 559+ 95CE              ;	19/10/22
 560+ 95CE              ;
 561+ 95CE              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95CE              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95CE
 564+ 95CE 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95D1 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95D3 C9           	ret
 567+ 95D4
 568+ 95D4              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95D4              ;
 570+ 95D4              ;	24/7/22
 571+ 95D4              ;
 572+ 95D4              ;	Inc_CTRL_DESPLZ
 573+ 95D4              ;
 574+ 95D4              ;
 575+ 95D4              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95D4
 577+ 95D4 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95D7 3A B1 85     	ld a,(Vel_right)
 579+ 95DA A7           	and a
 580+ 95DB 28 06        	jr z,1F
 581+ 95DD 47           	ld b,a
 582+ 95DE 34           3 inc (hl)
 583+ 95DF 10 FD        	djnz 3B
 584+ 95E1 18 01        	jr 2F
 585+ 95E3 34           1 inc (hl)
 586+ 95E4 C9           2 ret
 587+ 95E5
 588+ 95E5              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 95E5              ;
 590+ 95E5              ;	5/2/23
 591+ 95E5              ;
 592+ 95E5              ;	Dec_CTRL_DESPLZ
 593+ 95E5              ;
 594+ 95E5              ;
 595+ 95E5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 95E5
 597+ 95E5 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 95E8 3A B0 85     	ld a,(Vel_left)
 599+ 95EB A7           	and a
 600+ 95EC 28 06        	jr z,1F
 601+ 95EE 47           	ld b,a
 602+ 95EF 35           3 dec (hl)
 603+ 95F0 10 FD        	djnz 3B
 604+ 95F2 18 01        	jr 2F
 605+ 95F4 35           1 dec (hl)
 606+ 95F5 C9           2 ret
 607+ 95F6
 608+ 95F6              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 95F6
 610+ 95F6 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 95F9 01 1F 00     	ld bc,31
 612+ 95FC A7           	and a
 613+ 95FD ED 4A        	adc hl,bc
 614+ 95FF 22 9D 85     	ld (Posicion_actual),hl
 615+ 9602 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9605 CB C6        	set 0,(hl)
 617+ 9607 C9           	ret
 618+ 9608
 619+ 9608              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9608
 621+ 9608 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 960B 01 1F 00     	ld bc,31
 623+ 960E A7           	and a
 624+ 960F ED 42        	sbc hl,bc
 625+ 9611 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9614 21 C9 85     	ld hl,Ctrl_0
 627+ 9617 CB CE        	set 1,(hl)
 628+ 9619 C9           	ret
 629+ 961A
 630+ 961A              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 961A
 632+ 961A 24           Reaparece_abajo inc h
 633+ 961B 01 E0 17     	ld bc,$17e0
 634+ 961E A7           	and a
 635+ 961F ED 4A        	adc hl,bc
 636+ 9621 22 9D 85     	ld (Posicion_actual),hl
 637+ 9624 21 C9 85     	ld hl,Ctrl_0
 638+ 9627 CB D6        	set 2,(hl)
 639+ 9629 C9           	ret
 640+ 962A
 641+ 962A              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 962A
 643+ 962A 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 962D A7           	and a
 645+ 962E ED 42        	sbc hl,bc
 646+ 9630 22 9D 85     	ld (Posicion_actual),hl
 647+ 9633 21 C9 85     	ld hl,Ctrl_0
 648+ 9636 CB DE        	set 3,(hl)
 649+ 9638 C9           	ret
 650+ 9639
 651+ 9639              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9639
 653+ 9639 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 963C 22 9D 85     	ld (Posicion_actual),hl
 655+ 963F C9           	ret
# file closed: Direcciones.asm
1032  9640              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9640              ; ------------------------------------------------------------------------
   2+ 9640              ;
   3+ 9640              ;	02/04/23
   4+ 9640              ;
   5+ 9640              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9640              ;	Fila superior "0", Columna izquierda "0".
   7+ 9640              ;
   8+ 9640              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9640              ;
  10+ 9640              ;	Modifica: A,BC y DE.
  11+ 9640
  12+ 9640 C5           Genera_coordenadas push bc
  13+ 9641 E5           	push hl
  14+ 9642 D5           	push de
  15+ 9643
  16+ 9643 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9646
  18+ 9646 7D           	ld a,l
  19+ 9647 E6 1F        	and $1f
  20+ 9649 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 964C
  22+ 964C CD 14 93     	call calcula_tercio
  23+ 964F 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9650
  25+ 9650 1E 00        	ld e,0
  26+ 9652 7D           	ld a,l
  27+ 9653 E6 E0        	and $e0
  28+ 9655 28 01        	jr z,1F
  29+ 9657 04           	inc b
  30+ 9658
  31+ 9658 04           1 inc b
  32+ 9659 05           	dec b
  33+ 965A 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 965C              ;														; _ , salimos.
  35+ 965C 1C           3 inc e
  36+ 965D D6 20        	sub 32
  37+ 965F 20 FB        	jr nz,3B
  38+ 9661 10 F5        	djnz 1B
  39+ 9663
  40+ 9663 7B           2 ld a,e
  41+ 9664 32 A2 85     	ld (Coordenada_y),a
  42+ 9667
  43+ 9667 D1           	pop de
  44+ 9668 E1           	pop hl
  45+ 9669 C1           	pop bc
  46+ 966A
  47+ 966A C9           	ret
  48+ 966B
  49+ 966B              ; ------------------------------------------------------------------------
  50+ 966B              ;	28/03/23
  51+ 966B              ;
  52+ 966B              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 966B              ;	Fila superior "0", Columna izquierda "0".
  54+ 966B              ;
  55+ 966B              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 966B              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 966B              ;
  58+ 966B              ;		DE="$120d"
  59+ 966B              ;
  60+ 966B              ;		D, (Coordenada_X), Columnas, $12
  61+ 966B              ;		E, (Coordenada_y), Filas, $0d
  62+ 966B              ;
  63+ 966B              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 966B
  65+ 966B              ;	Modifica: A,BC y DE.
  66+ 966B
  67+ 966B
  68+ 966B              Genera_coordenadas_disparo
  69+ 966B
  70+ 966B              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 966B
  72+ 966B 7D           	ld a,l
  73+ 966C E6 1F        	and $1f
  74+ 966E 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 966F CD 14 93     	call calcula_tercio
  76+ 9672 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9673 1E 00        	ld e,0
  78+ 9675 7D           	ld a,l
  79+ 9676 E6 E0        	and $e0
  80+ 9678 28 01        	jr z,1F
  81+ 967A 04           	inc b
  82+ 967B 1C           1 inc e
  83+ 967C D6 20        	sub 32
  84+ 967E 20 FB        	jr nz,1B
  85+ 9680 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9682 C9           	ret
  87+ 9683
# file closed: Genera_coordenadas.asm
1033  9683              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9683
   2+ 9683
   3+ 9683              ;   11/8/22
   4+ 9683              ;
   5+ 9683              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9683              ;
   7+ 9683              ;   Mov_obj.asm
   8+ 9683              ;
   9+ 9683              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9683              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9683              ;
  12+ 9683              ;   Codificación:
  13+ 9683              ;
  14+ 9683              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9683
  16+ 9683              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9683
  18+ 9683 02 40 00     Arriba db 2,%01000000,0
  19+ 9686 02 80 00     Abajo db 2,%10000000,0
  20+ 9689 02 20 00     Derecha db 2,%00100000,0
  21+ 968C 02 10 00     Izquierda db 2,%00010000,0
  22+ 968F 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9693 60 42 60 40
  22+ 9697 63
  23+ 9698 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 969C 22 A3 80 A0
  24+ 96A0 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 96A4 84 A0 83 A0
  25+ 96A8 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 96AC 80 A3 22 A0
  26+ 96B0 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 96B4 40 60 42 60
  27+ 96B8 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 96BC
  29+ 96BC 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 96C0 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 96C4 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 96C8 84 00
  32+ 96CA 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96CE 84 00
  33+ 96D0 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96D4 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96D8 1F 1F 1F 1F
  35+ 96DC 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96E0 1F 1F 1F 1F
  35+ 96E4 1F
  36+ 96E5 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 96E9 2F 2F 2F 2F
  36+ 96ED 2F 2F
  37+ 96EF 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 96F3 2F 2F 00
  38+ 96F6
  39+ 96F6              ; ----- ----- ----- ----- -----
  40+ 96F6
  41+ 96F6 D4 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 96F8 D0 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 96FA 8C 96        Indice_mov_Izquierda defw Izquierda
  44+ 96FC 89 96        Indice_mov_Derecha defw Derecha
  45+ 96FE 86 96        Indice_mov_Abajo defw Abajo
  46+ 9700 83 96        Indice_mov_Arriba defw Arriba
  47+ 9702 C0 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9704 C4 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9706 BC 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9708 CA 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 970A 8F 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 970C              ; ----- ----- ----- ----- -----
  53+ 970C
  54+ 970C 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 970F A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9710 28 02            jr z,1F
  57+ 9712 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9714 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9717 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9719 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 971C              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 971C 2A CD 85         ld hl,(Puntero_mov)
  63+ 971F 7E               ld a,(hl)
  64+ 9720 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9723 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9724 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9727
  68+ 9727 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 972A A7               and a
  70+ 972B 20 0C            jr nz,12F
  71+ 972D 2A CD 85         ld hl,(Puntero_mov)
  72+ 9730 7E               ld a,(hl)
  73+ 9731 A7               and a
  74+ 9732 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9734 E6 0F            and $0f
  76+ 9736 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9739              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9739 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 973C CB 7E            bit 7,(hl)
  80+ 973E 28 03            jr z,2F
  81+ 9740 CD 32 93         call Mov_down
  82+ 9743 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9746 CB 76            bit 6,(hl)
  84+ 9748 28 03            jr z,3F
  85+ 974A CD 60 93         call Mov_up
  86+ 974D 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 9750 CB 6E            bit 5,(hl)
  88+ 9752 28 03            jr z,4F
  89+ 9754 CD 8E 93         call Mov_right
  90+ 9757 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 975A CB 66            bit 4,(hl)
  92+ 975C 28 03            jr z,5F
  93+ 975E CD AC 94         call Mov_left
  94+ 9761
  95+ 9761              ; ---------- --------- --------- ---------- ----------
  96+ 9761
  97+ 9761 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9764 A7               and a
  99+ 9765 28 07            jr z,6F
 100+ 9767 3D               dec a
 101+ 9768 32 D1 85         ld (Repetimos_db),a
 102+ 976B 28 01            jr z,6f
 103+ 976D C9           11 ret
 104+ 976E 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9771 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9772 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9775 23               inc hl
 108+ 9776 22 CD 85         ld (Puntero_mov),hl
 109+ 9779 18 F2            jr 11B
 110+ 977B 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 977E 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9781 47               ld b,a
 113+ 9782 23           8 inc hl
 114+ 9783 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9785 5E               ld e,(hl)
 116+ 9786 23               inc hl
 117+ 9787 56               ld d,(hl)
 118+ 9788 EB               ex de,hl
 119+ 9789 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 978C 18 DF            jr 11B
 121+ 978E
 122+ 978E              ; ---------- --------- --------- ---------- ----------
 123+ 978E              ;
 124+ 978E              ;   11/8/22
 125+ 978E              ;
 126+ 978E              ;   Prepara_Puntero_mov
 127+ 978E
 128+ 978E E5           Prepara_Puntero_mov push hl
 129+ 978F D5               push de
 130+ 9790 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 9793 5E               ld e,(hl)
 132+ 9794 23               inc hl
 133+ 9795 56               ld d,(hl)
 134+ 9796 EB               ex de,hl
 135+ 9797 22 CD 85         ld (Puntero_mov),hl
 136+ 979A D1               pop de
 137+ 979B E1               pop hl
 138+ 979C C9               ret
 139+ 979D
 140+ 979D              ; ---------- --------- --------- ---------- ----------
 141+ 979D              ;
 142+ 979D              ;   11/8/22
 143+ 979D              ;
 144+ 979D              ;   Reinicia_el_movimiento
 145+ 979D
 146+ 979D CD 8E 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 97A0 AF               xor a
 148+ 97A1 32 CF 85         ld (Contador_db_mov),a
 149+ 97A4 32 D0 85         ld (Incrementa_puntero),a
 150+ 97A7 C3 0C 97         jp Movimiento
 151+ 97AA C9               ret
 152+ 97AB              ; ---------- --------- --------- ---------- ----------
 153+ 97AB
 154+ 97AB
 155+ 97AB
 156+ 97AB
 157+ 97AB
 158+ 97AB
 159+ 97AB
 160+ 97AB
 161+ 97AB
 162+ 97AB
 163+ 97AB
 164+ 97AB
 165+ 97AB
 166+ 97AB
 167+ 97AB
 168+ 97AB
 169+ 97AB
 170+ 97AB
# file closed: Patrones_de_mov.asm
1034  97AB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 97AB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 97AB              ;
   3+ 97AB              ;	3/1/23
   4+ 97AB              ;
   5+ 97AB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 97AB
   7+ 97AB              ;	ADC HL,SP	LD (addr),SP
   8+ 97AB              ;	ADD HL,SP	LD SP,(addr)
   9+ 97AB              ;	ADD IX,SP	LD SP,nn
  10+ 97AB              ; 	ADD IY,SP	LD SP,HL
  11+ 97AB              ;				LD SP,IX
  12+ 97AB              ;	DEC SP		LD SP,IY
  13+ 97AB
  14+ 97AB              ;	EX (SP),HL
  15+ 97AB              ;	EX (SP),IX
  16+ 97AB              ;	EX (SP),IY
  17+ 97AB
  18+ 97AB              ;	INC SP
  19+ 97AB
  20+ 97AB
  21+ 97AB                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
1035  7FD4              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD4              ; Relojes y temporizaciones.
   2+ 7FD4
   3+ 7FD4              ; ------------------------------------------------------
   4+ 7FD4              ;
   5+ 7FD4              ;	27/04/23
   6+ 7FD4              ;
   7+ 7FD4              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD4              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD4              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD4              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD4              ;
  12+ 7FD4              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD4              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD4
  15+ 7FD4              Habilita_disparos
  16+ 7FD4
  17+ 7FD4 7E           	ld a,(hl)
  18+ 7FD5 A7           	and a
  19+ 7FD6 C0           	ret nz
  20+ 7FD7
  21+ 7FD7 EB           	ex de,hl
  22+ 7FD8
  23+ 7FD8 35           	dec (hl)
  24+ 7FD9 34           	inc (hl)
  25+ 7FDA 35           	dec (hl)
  26+ 7FDB C0           	ret nz
  27+ 7FDC
  28+ 7FDC 2B           	dec hl
  29+ 7FDD 7E           	ld a,(hl)
  30+ 7FDE 23           	inc hl
  31+ 7FDF 77           	ld (hl),a
  32+ 7FE0
  33+ 7FE0 EB           	ex de,hl
  34+ 7FE1 3E 01        	ld a,1
  35+ 7FE3 77           	ld (hl),a
  36+ 7FE4 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1036  7FE5
1037  7FE5              	SAVESNA "Pruebas.sna", START
1038  7FE5
1039  7FE5
1040  7FE5
# file closed: Banco_de_pruebas.asm
