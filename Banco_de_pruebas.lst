# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B7 8A     	call Frame
  15  A104
  16  A104 3A E1 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  23  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										; 62 Bytes por entidad.
  96+ 8574
  97+ 8574 CA 85        	defw Caja_1
  98+ 8576 08 86        	defw Caja_2
  99+ 8578 46 86        	defw Caja_3
 100+ 857A 84 86        	defw Caja_4
 101+ 857C C2 86        	defw Caja_5
 102+ 857E 00 87        	defw Caja_6
 103+ 8580 3E 87        	defw Caja_7
 104+ 8582 7C 87        	defw Caja_8
 105+ 8584 BA 87        	defw Caja_9
 106+ 8586 F8 87        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 85BD
 145+ 85BD 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 85C1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 85C4
 148+ 85C4 00           	db 0 											; (Columnas).
 149+ 85C5 00 00        	defw 0											; (Limite_horizontal).
 150+ 85C7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 85CA
 152+ 85CA              ; ---------- ---------- ---------- ---------- ----------
 153+ 85CA
 154+ 85CA 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 85CC 00 00        	defw 0											; (Posicion_actual).
 156+ 85CE 00 00        	defw 0 											; (Puntero_objeto).
 157+ 85D0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 85D3
 159+ 85D3 00           	db %00000000 									; (Attr).
 160+ 85D4
 161+ 85D4 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 85D6 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 85D8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 85DA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 85DC
 166+ 85DC 00 00        	defw 0											; (Posicion_inicio).
 167+ 85DE 00           	db 0											; (Cuad_objeto).
 168+ 85DF
 169+ 85DF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 85E3
 171+ 85E3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 85E4
 173+ 85E4 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 85E6 00 00        	defw 0											;	" " " " " " "
 175+ 85E8 00 00        	defw 0											;	" " " " " " "
 176+ 85EA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85EE
 178+ 85EE 00 00        	db 0,0											; Variables_de_pintado
 179+ 85F0 00 00        	defw 0											;	" " " " " " "
 180+ 85F2 00 00        	defw 0											;	" " " " " " "
 181+ 85F4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 85F8
 183+ 85F8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 184+ 85FA 00           	db 0											; (Autoriza_movimiento).
 185+ 85FB
 186+ 85FB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 187+ 85FF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 188+ 8602
 189+ 8602 00           	db 0 											; (Columnas).
 190+ 8603 00 00        	defw 0											; (Limite_horizontal).
 191+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 192+ 8608
 193+ 8608              ; ---------- ---------- ---------- ---------- ----------
 194+ 8608
 195+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 196+ 860A 00 00        	defw 0											; (Posicion_actual).
 197+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 198+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 199+ 8611
 200+ 8611 00           	db %00000000 									; (Attr).
 201+ 8612
 202+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 203+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 204+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 205+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 206+ 861A
 207+ 861A 00 00        	defw 0											; (Posicion_inicio).
 208+ 861C 00           	db 0											; (Cuad_objeto).
 209+ 861D
 210+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 211+ 8621
 212+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 213+ 8622
 214+ 8622 00 00        	db 0,0										    ; Variables_de_borrado
 215+ 8624 00 00        	defw 0											;	" " " " " " "
 216+ 8626 00 00        	defw 0											;	" " " " " " "
 217+ 8628 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 862C
 219+ 862C 00 00        	db 0,0											; Variables_de_pintado
 220+ 862E 00 00        	defw 0											;	" " " " " " "
 221+ 8630 00 00        	defw 0											;	" " " " " " "
 222+ 8632 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8636
 224+ 8636 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 225+ 8638 00           	db 0											; (Autoriza_movimiento).
 226+ 8639
 227+ 8639 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 228+ 863D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 229+ 8640
 230+ 8640 00           	db 0 											; (Columnas).
 231+ 8641 00 00        	defw 0											; (Limite_horizontal).
 232+ 8643 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 233+ 8646
 234+ 8646              ; ---------- ---------- ---------- ---------- ----------
 235+ 8646
 236+ 8646 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 237+ 8648 00 00        	defw 0											; (Posicion_actual).
 238+ 864A 00 00        	defw 0 											; (Puntero_objeto).
 239+ 864C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 240+ 864F
 241+ 864F 00           	db %00000000 									; (Attr).
 242+ 8650
 243+ 8650 00 00        	defw 0											; (Indice_Sprite_der).
 244+ 8652 00 00        	defw 0											; (Indice_Sprite_izq).
 245+ 8654 00 00        	defw 0											; (Puntero_DESPLZ_der).
 246+ 8656 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 247+ 8658
 248+ 8658 00 00        	defw 0											; (Posicion_inicio).
 249+ 865A 00           	db 0											; (Cuad_objeto).
 250+ 865B
 251+ 865B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 252+ 865F
 253+ 865F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 254+ 8660
 255+ 8660 00 00        	db 0,0										    ; Variables_de_borrado
 256+ 8662 00 00        	defw 0											;	" " " " " " "
 257+ 8664 00 00        	defw 0											;	" " " " " " "
 258+ 8666 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 866A
 260+ 866A 00 00        	db 0,0											; Variables_de_pintado
 261+ 866C 00 00        	defw 0											;	" " " " " " "
 262+ 866E 00 00        	defw 0											;	" " " " " " "
 263+ 8670 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 8674
 265+ 8674 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 266+ 8676 00           	db 0											; (Autoriza_movimiento).
 267+ 8677
 268+ 8677 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 269+ 867B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 270+ 867E
 271+ 867E 00           	db 0 											; (Columnas).
 272+ 867F 00 00        	defw 0											; (Limite_horizontal).
 273+ 8681 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 274+ 8684
 275+ 8684              ; ---------- ---------- ---------- ---------- ----------
 276+ 8684
 277+ 8684 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 278+ 8686 00 00        	defw 0											; (Posicion_actual).
 279+ 8688 00 00        	defw 0 											; (Puntero_objeto).
 280+ 868A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 281+ 868D
 282+ 868D 00           	db %00000000 									; (Attr).
 283+ 868E
 284+ 868E 00 00        	defw 0											; (Indice_Sprite_der).
 285+ 8690 00 00        	defw 0											; (Indice_Sprite_izq).
 286+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_der).
 287+ 8694 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 288+ 8696
 289+ 8696 00 00        	defw 0											; (Posicion_inicio).
 290+ 8698 00           	db 0											; (Cuad_objeto).
 291+ 8699
 292+ 8699 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 293+ 869D
 294+ 869D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 295+ 869E
 296+ 869E 00 00        	db 0,0										    ; Variables_de_borrado
 297+ 86A0 00 00        	defw 0											;	" " " " " " "
 298+ 86A2 00 00        	defw 0											;	" " " " " " "
 299+ 86A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A8
 301+ 86A8 00 00        	db 0,0											; Variables_de_pintado
 302+ 86AA 00 00        	defw 0											;	" " " " " " "
 303+ 86AC 00 00        	defw 0											;	" " " " " " "
 304+ 86AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 305+ 86B2
 306+ 86B2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 307+ 86B4 00           	db 0											; (Autoriza_movimiento).
 308+ 86B5
 309+ 86B5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 310+ 86B9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 311+ 86BC
 312+ 86BC 00           	db 0 											; (Columnas).
 313+ 86BD 00 00        	defw 0											; (Limite_horizontal).
 314+ 86BF 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 315+ 86C2
 316+ 86C2              ; ---------- ---------- ---------- ---------- ----------
 317+ 86C2
 318+ 86C2 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 319+ 86C4 00 00        	defw 0											; (Posicion_actual).
 320+ 86C6 00 00        	defw 0 											; (Puntero_objeto).
 321+ 86C8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 322+ 86CB
 323+ 86CB 00           	db %00000000 									; (Attr).
 324+ 86CC
 325+ 86CC 00 00        	defw 0											; (Indice_Sprite_der).
 326+ 86CE 00 00        	defw 0											; (Indice_Sprite_izq).
 327+ 86D0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 328+ 86D2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 329+ 86D4
 330+ 86D4 00 00        	defw 0											; (Posicion_inicio).
 331+ 86D6 00           	db 0											; (Cuad_objeto).
 332+ 86D7
 333+ 86D7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 334+ 86DB
 335+ 86DB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 336+ 86DC
 337+ 86DC 00 00        	db 0,0										    ; Variables_de_borrado
 338+ 86DE 00 00        	defw 0											;	" " " " " " "
 339+ 86E0 00 00        	defw 0											;	" " " " " " "
 340+ 86E2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E6
 342+ 86E6 00 00        	db 0,0											; Variables_de_pintado
 343+ 86E8 00 00        	defw 0											;	" " " " " " "
 344+ 86EA 00 00        	defw 0											;	" " " " " " "
 345+ 86EC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 346+ 86F0
 347+ 86F0 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 348+ 86F2 00           	db 0											; (Autoriza_movimiento).
 349+ 86F3
 350+ 86F3 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 351+ 86F7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 352+ 86FA
 353+ 86FA 00           	db 0 											; (Columnas).
 354+ 86FB 00 00        	defw 0											; (Limite_horizontal).
 355+ 86FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 356+ 8700
 357+ 8700              ; ---------- ---------- ---------- ---------- ----------
 358+ 8700
 359+ 8700 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 360+ 8702 00 00        	defw 0											; (Posicion_actual).
 361+ 8704 00 00        	defw 0 											; (Puntero_objeto).
 362+ 8706 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 363+ 8709
 364+ 8709 00           	db %00000000 									; (Attr).
 365+ 870A
 366+ 870A 00 00        	defw 0											; (Indice_Sprite_der).
 367+ 870C 00 00        	defw 0											; (Indice_Sprite_izq).
 368+ 870E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 369+ 8710 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 370+ 8712
 371+ 8712 00 00        	defw 0											; (Posicion_inicio).
 372+ 8714 00           	db 0											; (Cuad_objeto).
 373+ 8715
 374+ 8715 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 375+ 8719
 376+ 8719 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 377+ 871A
 378+ 871A 00 00        	db 0,0										    ; Variables_de_borrado
 379+ 871C 00 00        	defw 0											;	" " " " " " "
 380+ 871E 00 00        	defw 0											;	" " " " " " "
 381+ 8720 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8724
 383+ 8724 00 00        	db 0,0											; Variables_de_pintado
 384+ 8726 00 00        	defw 0											;	" " " " " " "
 385+ 8728 00 00        	defw 0											;	" " " " " " "
 386+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 387+ 872E
 388+ 872E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 389+ 8730 00           	db 0											; (Autoriza_movimiento).
 390+ 8731
 391+ 8731 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 392+ 8735 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 393+ 8738
 394+ 8738 00           	db 0 											; (Columnas).
 395+ 8739 00 00        	defw 0											; (Limite_horizontal).
 396+ 873B 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 397+ 873E
 398+ 873E              ; ---------- ---------- ---------- ---------- ----------
 399+ 873E
 400+ 873E 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 401+ 8740 00 00        	defw 0											; (Posicion_actual).
 402+ 8742 00 00        	defw 0 											; (Puntero_objeto).
 403+ 8744 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 404+ 8747
 405+ 8747 00           	db %00000000 									; (Attr).
 406+ 8748
 407+ 8748 00 00        	defw 0											; (Indice_Sprite_der).
 408+ 874A 00 00        	defw 0											; (Indice_Sprite_izq).
 409+ 874C 00 00        	defw 0											; (Puntero_DESPLZ_der).
 410+ 874E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 411+ 8750
 412+ 8750 00 00        	defw 0											; (Posicion_inicio).
 413+ 8752 00           	db 0											; (Cuad_objeto).
 414+ 8753
 415+ 8753 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 416+ 8757
 417+ 8757 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 418+ 8758
 419+ 8758 00 00        	db 0,0										    ; Variables_de_borrado
 420+ 875A 00 00        	defw 0											;	" " " " " " "
 421+ 875C 00 00        	defw 0											;	" " " " " " "
 422+ 875E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8762
 424+ 8762 00 00        	db 0,0											; Variables_de_pintado
 425+ 8764 00 00        	defw 0											;	" " " " " " "
 426+ 8766 00 00        	defw 0											;	" " " " " " "
 427+ 8768 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 428+ 876C
 429+ 876C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 430+ 876E 00           	db 0											; (Autoriza_movimiento).
 431+ 876F
 432+ 876F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 433+ 8773 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 434+ 8776
 435+ 8776 00           	db 0 											; (Columnas).
 436+ 8777 00 00        	defw 0											; (Limite_horizontal).
 437+ 8779 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 438+ 877C
 439+ 877C              ; ---------- ---------- ---------- ---------- ----------
 440+ 877C
 441+ 877C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 442+ 877E 00 00        	defw 0											; (Posicion_actual).
 443+ 8780 00 00        	defw 0 											; (Puntero_objeto).
 444+ 8782 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 445+ 8785
 446+ 8785 00           	db %00000000 									; (Attr).
 447+ 8786
 448+ 8786 00 00        	defw 0											; (Indice_Sprite_der).
 449+ 8788 00 00        	defw 0											; (Indice_Sprite_izq).
 450+ 878A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 451+ 878C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 452+ 878E
 453+ 878E 00 00        	defw 0											; (Posicion_inicio).
 454+ 8790 00           	db 0											; (Cuad_objeto).
 455+ 8791
 456+ 8791 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 457+ 8795
 458+ 8795 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 459+ 8796
 460+ 8796 00 00        	db 0,0										    ; Variables_de_borrado
 461+ 8798 00 00        	defw 0											;	" " " " " " "
 462+ 879A 00 00        	defw 0											;	" " " " " " "
 463+ 879C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 464+ 87A0
 465+ 87A0 00 00        	db 0,0											; Variables_de_pintado
 466+ 87A2 00 00        	defw 0											;	" " " " " " "
 467+ 87A4 00 00        	defw 0											;	" " " " " " "
 468+ 87A6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 469+ 87AA
 470+ 87AA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 471+ 87AC 00           	db 0											; (Autoriza_movimiento).
 472+ 87AD
 473+ 87AD 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 474+ 87B1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 475+ 87B4
 476+ 87B4 00           	db 0 											; (Columnas).
 477+ 87B5 00 00        	defw 0											; (Limite_horizontal).
 478+ 87B7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 479+ 87BA
 480+ 87BA              ; ---------- ---------- ---------- ---------- ----------
 481+ 87BA
 482+ 87BA 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 483+ 87BC 00 00        	defw 0											; (Posicion_actual).
 484+ 87BE 00 00        	defw 0 											; (Puntero_objeto).
 485+ 87C0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 486+ 87C3
 487+ 87C3 00           	db %00000000 									; (Attr).
 488+ 87C4
 489+ 87C4 00 00        	defw 0											; (Indice_Sprite_der).
 490+ 87C6 00 00        	defw 0											; (Indice_Sprite_izq).
 491+ 87C8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 492+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 493+ 87CC
 494+ 87CC 00 00        	defw 0											; (Posicion_inicio).
 495+ 87CE 00           	db 0											; (Cuad_objeto).
 496+ 87CF
 497+ 87CF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 498+ 87D3
 499+ 87D3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 500+ 87D4
 501+ 87D4 00 00        	db 0,0										    ; Variables_de_borrado
 502+ 87D6 00 00        	defw 0											;	" " " " " " "
 503+ 87D8 00 00        	defw 0											;	" " " " " " "
 504+ 87DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 505+ 87DE
 506+ 87DE 00 00        	db 0,0											; Variables_de_pintado
 507+ 87E0 00 00        	defw 0											;	" " " " " " "
 508+ 87E2 00 00        	defw 0											;	" " " " " " "
 509+ 87E4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 510+ 87E8
 511+ 87E8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 512+ 87EA 00           	db 0											; (Autoriza_movimiento).
 513+ 87EB
 514+ 87EB 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 515+ 87EF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 516+ 87F2
 517+ 87F2 00           	db 0 											; (Columnas).
 518+ 87F3 00 00        	defw 0											; (Limite_horizontal).
 519+ 87F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 520+ 87F8
 521+ 87F8              ; ---------- ---------- ---------- ---------- ----------
 522+ 87F8
 523+ 87F8 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 524+ 87FA 00 00        	defw 0											; (Posicion_actual).
 525+ 87FC 00 00        	defw 0 											; (Puntero_objeto).
 526+ 87FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 527+ 8801
 528+ 8801 00           	db %00000000 									; (Attr).
 529+ 8802
 530+ 8802 00 00        	defw 0											; (Indice_Sprite_der).
 531+ 8804 00 00        	defw 0											; (Indice_Sprite_izq).
 532+ 8806 00 00        	defw 0											; (Puntero_DESPLZ_der).
 533+ 8808 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 534+ 880A
 535+ 880A 00 00        	defw 0											; (Posicion_inicio).
 536+ 880C 00           	db 0											; (Cuad_objeto).
 537+ 880D
 538+ 880D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 539+ 8811
 540+ 8811 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 541+ 8812
 542+ 8812 00 00        	db 0,0										    ; Variables_de_borrado
 543+ 8814 00 00        	defw 0											;	" " " " " " "
 544+ 8816 00 00        	defw 0											;	" " " " " " "
 545+ 8818 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 546+ 881C
 547+ 881C 00 00        	db 0,0											; Variables_de_pintado
 548+ 881E 00 00        	defw 0											;	" " " " " " "
 549+ 8820 00 00        	defw 0											;	" " " " " " "
 550+ 8822 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 551+ 8826
 552+ 8826 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 553+ 8828 00           	db 0											; (Autoriza_movimiento).
 554+ 8829
 555+ 8829 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 556+ 882D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 557+ 8830
 558+ 8830 00           	db 0 											; (Columnas).
 559+ 8831 00 00        	defw 0											; (Limite_horizontal).
 560+ 8833 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 561+ 8836
 562+ 8836              ; -------------------------------------------------------------------------------------
 563+ 8836              ;
 564+ 8836              ;	20/05/23
 565+ 8836              ;
 566+ 8836              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 567+ 8836              ;
 568+ 8836              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 569+ 8836              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 570+ 8836              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 571+ 8836              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 572+ 8836
 573+ 8836              Indice_de_entidades
 574+ 8836
 575+ 8836 40 88        	defw Entidad_1
 576+ 8838 50 88        	defw Entidad_2
 577+ 883A 60 88        	defw Entidad_3
 578+ 883C 70 88        	defw Entidad_4
 579+ 883E 80 88        	defw Entidad_5
 580+ 8840
 581+ 8840              ;	BADSAT, (Satélite malvado).
 582+ 8840
 583+ 8840 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 584+ 8842 04           	db %00000100									; (Attr).
 585+ 8843 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 586+ 8845 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 587+ 8847 3F 50        	defw $503f	                             	    ; (Posicion_inicio).
 588+ 8849 01           	db 1											; (Cuad_objeto).
 589+ 884A 02 02 01 02  	db 2,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 590+ 884E EE 9C        	defw Indice_mov_Escaloncitos_izquierda_arriba   ; (Puntero_indice_mov)
 591+ 8850
 592+ 8850 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 593+ 8852 02           	db %00000010									; (Attr).
 594+ 8853 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 595+ 8855 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 596+ 8857 40 50        	defw $5040                                      ; (Posicion_inicio).
 597+ 8859 01           	db 1											; (Cuad_objeto).
 598+ 885A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 599+ 885E F2 9C        	defw Indice_mov_Onda_senoidal				    ; (Puntero_indice_mov)
 600+ 8860
 601+ 8860 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 602+ 8862 04           	db %00000100									; (Attr).
 603+ 8863 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 604+ 8865 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 605+ 8867 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 606+ 8869 01           	db 1											; (Cuad_objeto).
 607+ 886A 02 02 02 02  	db 2,2,2,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 608+ 886E F2 9C        	defw Indice_mov_Onda_senoidal					; (Puntero_indice_mov)
 609+ 8870
 610+ 8870 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 611+ 8872 01           	db %00000001									; (Attr).
 612+ 8873 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 613+ 8875 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 614+ 8877 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 615+ 8879 01           	db 1											; (Cuad_objeto).
 616+ 887A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 617+ 887E F0 9C        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 618+ 8880
 619+ 8880 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 620+ 8882 01           	db %00000001									; (Attr).
 621+ 8883 A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 622+ 8885 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 623+ 8887 07 40        	defw $4007                                      ; (Posicion_inicio).
 624+ 8889 01           	db 1											; (Cuad_objeto).
 625+ 888A 01 02 01 02  	db 1,2,1,2                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 626+ 888E EC 9C        	defw Indice_mov_Escaloncitos_derecha_abajo							; (Puntero_indice_mov)
 627+ 8890
# file closed: Cajas_y_disparos.asm
  24  8890              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8890              ; 13/05/23
   2+ 8890
   3+ 8890              Indice_de_niveles
   4+ 8890
   5+ 8890 9E 88        	defw Nivel_1
   6+ 8892 A9 88        	defw Nivel_2
   7+ 8894 B6 88        	defw Nivel_3
   8+ 8896 C6 88        	defw Nivel_4
   9+ 8898 D8 88        	defw Nivel_5
  10+ 889A
  11+ 889A              ;	...
  12+ 889A              ;	...
  13+ 889A              ;	+ Niveles ...
  14+ 889A
  15+ 889A 00 00        	defw 0
  16+ 889C 00 00        	defw 0
  17+ 889E
  18+ 889E 0A           Nivel_1 db 10	                                ; Nº de entidades.
  19+ 889F 05 04 03 02  	db 5,4,3,2,1
  19+ 88A3 01
  20+ 88A4 01 02 03 04  	db 1,2,3,4,5
  20+ 88A8 05
  21+ 88A9 0C           Nivel_2 db 12									; Nº de entidades.
  22+ 88AA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  22+ 88AE 01 02
  23+ 88B0 02 01 01 01  	db 2,1,1,1,1,2
  23+ 88B4 01 02
  24+ 88B6 0F           Nivel_3 db 15									; Nº de entidades.
  25+ 88B7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  25+ 88BB 01
  26+ 88BC 03 01 01 01  	db 3,1,1,1,1
  26+ 88C0 01
  27+ 88C1 03 01 01 01  	db 3,1,1,1,1
  27+ 88C5 01
  28+ 88C6 11           Nivel_4 db 17									; Nº de entidades.
  29+ 88C7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  29+ 88CB 01
  30+ 88CC 04 01 01 01  	db 4,1,1,1,1
  30+ 88D0 01
  31+ 88D1 04 01 01 01  	db 4,1,1,1,1
  31+ 88D5 01
  32+ 88D6 02 03        	db 2,3
  33+ 88D8 14           Nivel_5 db 20									; Nº de entidades.
  34+ 88D9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 88DD 01
  35+ 88DE 05 01 01 01  	db 5,1,1,1,1
  35+ 88E2 01
  36+ 88E3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  36+ 88E7 01
  37+ 88E8 05 01 01 01  	db 5,1,1,1,1
  37+ 88EC 01
  38+ 88ED
  39+ 88ED              ;---------------------------------------------------------------------------------------------------------------
  40+ 88ED              ;
  41+ 88ED              ;   21/5/23
  42+ 88ED              ;
  43+ 88ED              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  44+ 88ED              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  45+ 88ED              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  46+ 88ED              ;	_en la caja DRAW correspondiente.
  47+ 88ED              ;
  48+ 88ED              ;	MODIFICA: HL,DE y A.
  49+ 88ED              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  50+ 88ED
  51+ 88ED              Inicializa_Punteros_de_nivel
  52+ 88ED
  53+ 88ED 21 90 88     	ld hl,Indice_de_niveles
  54+ 88F0 22 16 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  55+ 88F3 CD 0A 8D     	call Extrae_address
  56+ 88F6 7E           	ld a,(hl)
  57+ 88F7 32 EB 89     	ld (Numero_de_entidades),a
  58+ 88FA 23           	inc hl
  59+ 88FB 22 18 8A     	ld (Datos_de_nivel),hl
  60+ 88FE C9           	ret
  61+ 88FF
  62+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  63+ 88FF              ;
  64+ 88FF              ;   13/5/23
  65+ 88FF              ;
  66+ 88FF              ;	Destruye A,BC,HL,DE
  67+ 88FF
  68+ 88FF              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  69+ 88FF              ;	_del juego.
  70+ 88FF
  71+ 88FF              Prepara_cajas
  72+ 88FF
  73+ 88FF              ; Preparamos los punteros de las cajas.
  74+ 88FF
  75+ 88FF 21 74 85     	ld hl,Indice_de_cajas
  76+ 8902 CD 0A 8D     	call Extrae_address
  77+ 8905 CD 42 89     	call Avanza_caja
  78+ 8908
  79+ 8908 CD 86 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 890B
  81+ 890B 2A 18 8A     	ld hl,(Datos_de_nivel)
  82+ 890E
  83+ 890E              ; HL está en los datos del nivel correspondiente.
  84+ 890E              ; B actuará como contador de cajas.
  85+ 890E
  86+ 890E C5           1 push bc
  87+ 890F
  88+ 890F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  89+ 8910 CD 33 89     	call PreparaBC
  90+ 8913
  91+ 8913 21 36 88     	ld hl,Indice_de_entidades
  92+ 8916 CD 3B 89     	call SBC_HL_con_BC_y_Extrae
  93+ 8919 22 F1 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  94+ 891C
  95+ 891C CD 4C 89     	call Datos_de_entidad_a_caja
  96+ 891F
  97+ 891F 2A E9 89     	ld hl,(Indice_restore_caja)
  98+ 8922 CD 0A 8D     	call Extrae_address
  99+ 8925 CD 42 89     	call Avanza_caja
 100+ 8928
 101+ 8928 2A 18 8A     	ld hl,(Datos_de_nivel)
 102+ 892B 23           	inc hl
 103+ 892C 22 18 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 104+ 892F
 105+ 892F C1           	pop bc
 106+ 8930 10 DC        	djnz 1B
 107+ 8932 C9           	ret
 108+ 8933
 109+ 8933 CB 27        PreparaBC sla a
 110+ 8935 D6 02        	sub 2										; [(Nivel)*2]-2.
 111+ 8937 4F           	ld c,a
 112+ 8938 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 113+ 893A C9           	ret
 114+ 893B
 115+ 893B A7           SBC_HL_con_BC_y_Extrae and a
 116+ 893C ED 4A        	adc hl,bc
 117+ 893E CD 0A 8D     	call Extrae_address
 118+ 8941 C9           	ret
 119+ 8942
 120+ 8942 22 E5 89     Avanza_caja	ld (Puntero_store_caja),hl
 121+ 8945 13           	inc de
 122+ 8946 13           	inc de
 123+ 8947 EB           	ex de,hl
 124+ 8948 22 E9 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 125+ 894B C9           	ret
 126+ 894C
 127+ 894C              Datos_de_entidad_a_caja
 128+ 894C
 129+ 894C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 130+ 894C
 131+ 894C
 132+ 894C ED 5B E5 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 133+ 8950
 134+ 8950 01 02 00     	ld bc,2
 135+ 8953 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 136+ 8955
 137+ 8955 01 07 00     	ld bc,7
 138+ 8958 CD 80 89     	call Situa_DE
 139+ 895B
 140+ 895B 01 05 00     	ld bc,5
 141+ 895E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 142+ 8960
 143+ 8960 01 04 00     	ld bc,4
 144+ 8963 CD 80 89     	call Situa_DE
 145+ 8966
 146+ 8966 01 07 00     	ld bc,7
 147+ 8969 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 148+ 896B
 149+ 896B 01 18 00     	ld bc,24
 150+ 896E CD 80 89     	call Situa_DE
 151+ 8971
 152+ 8971 01 02 00     	ld bc,2
 153+ 8974 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 154+ 8976
 155+ 8976 01 0A 00     	ld bc,10
 156+ 8979 CD 80 89     	call Situa_DE
 157+ 897C
 158+ 897C 3E 03        	ld a,3
 159+ 897E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 160+ 897F
 161+ 897F C9           	ret
 162+ 8980
 163+ 8980 EB           Situa_DE ex de,hl
 164+ 8981 A7           	and a
 165+ 8982 ED 4A        	adc hl,bc
 166+ 8984 EB           	ex de,hl
 167+ 8985 C9           	ret
 168+ 8986
 169+ 8986              ;---------------------------------------------------------------------------------------------------------------
 170+ 8986              ;
 171+ 8986              ;	21/5/23
 172+ 8986              ;
 173+ 8986              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 174+ 8986              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 175+ 8986              ;
 176+ 8986              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 177+ 8986              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 178+ 8986              ;	_ total de entidades que contiene (Numero_de_entidades).
 179+ 8986              ;
 180+ 8986              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 181+ 8986              ;	MODIFICA: A y B.
 182+ 8986              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 183+ 8986
 184+ 8986              Admin_num_entidades
 185+ 8986
 186+ 8986              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 187+ 8986
 188+ 8986 3A EB 89     	ld a,(Numero_de_entidades)
 189+ 8989 A7           	and a
 190+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 191+ 898A              ;	jr z,$
 192+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 898A
 194+ 898A 20 03        	jr nz,3F
 195+ 898C
 196+ 898C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 197+ 898C
 198+ 898C CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 199+ 898F
 200+ 898F
 201+ 898F 3A EB 89     3 ld a,(Numero_de_entidades)
 202+ 8992 FE 0A        	cp 10
 203+ 8994 38 08        	jr c,1F
 204+ 8996
 205+ 8996              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 8996              ; Actualizamos variables.
 207+ 8996
 208+ 8996 3E 0A        	ld a,10
 209+ 8998 32 EC 89     	ld (Numero_parcial_de_entidades),a
 210+ 899B 47           	ld b,a
 211+ 899C 18 04        	jr 2F
 212+ 899E
 213+ 899E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 899E              ; (Numero_de_entidades)="0".
 215+ 899E
 216+ 899E 32 EC 89     1 ld (Numero_parcial_de_entidades),a
 217+ 89A1 47           	ld b,a
 218+ 89A2 C9           2 ret
# file closed: Niveles.asm
  25  89A3
  26  89A3              ; ******************************************************************************************************************************************************************************************
  27  89A3              ; Constantes.
  28  89A3              ; ******************************************************************************************************************************************************************************************
  29  89A3              ;
  30  89A3              ; 25/05/23
  31  89A3              ;
  32  89A3              ; Constantes generales.
  33  89A3              ;
  34  89A3
  35  89A3              Sprite_vacio equ $f000
  36  89A3              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  89A3              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  89A3              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  89A3              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  89A3
  41  89A3              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  89A3              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  89A3              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  89A3              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  89A3              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  89A3              ;                               				        ; De momento situamos este almacén en $7060.
  47  89A3
  48  89A3              ; ******************************************************************************************************************************************************************************************
  49  89A3              ; Variables.
  50  89A3              ; ******************************************************************************************************************************************************************************************
  51  89A3              ;
  52  89A3              ; 30/05/23
  53  89A3              ;
  54  89A3              ; Variables de DRAW. (Motor principal).
  55  89A3              ;
  56  89A3              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  89A3
  58  89A3 00           Filas db 0												; Filas. [DRAW]
  59  89A4 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  89A5 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  89A7 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  89A9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  89AA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  89AB
  65  89AB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  89AB
  67  89AB 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  89AC              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  89AC              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  89AC 00           Attr db 0												; Atributos de la entidad:
  71  89AD
  72  89AD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  89AD              ;
  74  89AD              ;	COLORES: 0 ..... NEGRO
  75  89AD              ;    		 1 ..... AZUL
  76  89AD              ; 			 2 ..... ROJO
  77  89AD              ;			 3 ..... MAGENTA
  78  89AD              ; 			 4 ..... VERDE
  79  89AD              ; 			 5 ..... CIAN
  80  89AD              ;			 6 ..... AMARILLO
  81  89AD              ; 			 7 ..... BLANCO
  82  89AD
  83  89AD 00 00        Indice_Sprite_der defw 0
  84  89AF 00 00        Indice_Sprite_izq defw 0
  85  89B1 00 00        Puntero_DESPLZ_der defw 0
  86  89B3 00 00        Puntero_DESPLZ_izq defw 0
  87  89B5
  88  89B5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  89B7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  89B8
  91  89B8              ; Variables de objeto. (Características).
  92  89B8
  93  89B8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  89B9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  89BA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  89BB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  89BC
  98  89BC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  89BD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  89BD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  89BD
 102  89BD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 103  89BF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  89C1 00 00        	defw 0
 105  89C3 00 00 00 00  	db 0,0,0,0
 106  89C7
 107  89C7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 108  89C9 00 00        	defw 0
 109  89CB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89CD 00 00 00 00  	db 0,0,0,0
 111  89D1
 112  89D1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 113  89D1
 114  89D1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 115  89D2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 116  89D2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 117  89D2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 118  89D2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 119  89D2              ;
 120  89D2              ; 														DESCRIPCIÖN:
 121  89D2              ;
 122  89D2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 123  89D2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 124  89D2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 125  89D2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 126  89D2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 127  89D2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 128  89D2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 129  89D2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 130  89D2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 131  89D2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 132  89D2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 133  89D2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 134  89D2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 135  89D2              ;
 136  89D2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 137  89D2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 138  89D2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 139  89D2
 140  89D2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 141  89D3
 142  89D3              ; Movimiento.
 143  89D3
 144  89D3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 145  89D4 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 146  89D6 00 00        Puntero_mov defw 0
 147  89D8 00           Contador_db_mov db 0
 148  89D9 00           Incrementa_puntero db 0
 149  89DA 00           Repetimos_db db 0
 150  89DB
 151  89DB              ; Variables de funcionamiento. [DRAW].
 152  89DB
 153  89DB 00           Columnas db 0
 154  89DC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 155  89DE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  89DE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 157  89DF
 158  89DF              ; variables de control general.
 159  89DF
 160  89DF 00           Ctrl_2 db 0
 161  89E0              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 162  89E0              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 163  89E0              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 164  89E0              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 165  89E0              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 166  89E0              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 167  89E0              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 168  89E0              ;
 169  89E0              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 170  89E0
 171  89E0 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 172  89E1
 173  89E1              ; 62 Bytes por entidad.
 174  89E1              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 175  89E1              ;					         		---------;      ;---------
 176  89E1
 177  89E1
 178  89E1              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 179  89E1
 180  89E1 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 181  89E2
 182  89E2              ;														DESCRIPCIÓN:
 183  89E2              ;
 184  89E2              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 185  89E2              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 186  89E2              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 187  89E2              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 188  89E2              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 189  89E2              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 190  89E2              ;														BIT 3, Recarga de nueva oleada.
 191  89E2              ;														BIT 4, Recarga de nueva oleada.
 192  89E2
 193  89E2 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 194  89E4              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 195  89E4              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 196  89E4              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 197  89E4
 198  89E4
 199  89E4
 200  89E4              ; Gestión de ENTIDADES y CAJAS.
 201  89E4
 202  89E4 02           Limitador_de_entidades_x_frame db 2						; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 203  89E5 00 00        Puntero_store_caja defw 0
 204  89E7 00 00        Puntero_restore_caja defw 0
 205  89E9 00 00        Indice_restore_caja defw 0
 206  89EB 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 207  89EC 00           Numero_parcial_de_entidades db 0
 208  89ED 00           Entidades_en_curso db 0									; ..... ..... .....
 209  89EE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 210  89EF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 211  89EF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 212  89EF              ;														; _ (Numero_de_malotes)="0".
 213  89EF 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 214  89F1 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 215  89F3              ;														; _ puntero (Indice_entidades).
 216  89F3
 217  89F3
 218  89F3              ;---------------------------------------------------------------------------------------------------------------
 219  89F3              ;
 220  89F3              ; Sirven para PINTAR.
 221  89F3
 222  89F3 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 223  89F5              ;														; _variable para almacenar lo posición del puntero_
 224  89F5              ; 														; _de pila, SP.
 225  89F5 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 226  89F7              ;														; La utiliza la rutina [Extrae_foto_registros].
 227  89F7 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 228  89F9              ;														; _el snapshot de los registros de la siguiente entidad.
 229  89F9              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 230  89F9 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 231  89FB              ;														; _el snapshot de los registros del siguiente disparo.
 232  89FB              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 233  89FB
 234  89FB              ;---------------------------------------------------------------------------------------------------------------
 235  89FB
 236  89FB              ; Gestión de Disparos.
 237  89FB
 238  89FB 00           Numero_de_disparotes db 0
 239  89FC 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 240  89FE 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 241  8A00 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 242  8A01              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 243  8A01              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 244  8A01 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 245  8A03              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 246  8A03              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 247  8A03              ;														; _produzca colisión.
 248  8A03 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 249  8A05              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 250  8A05 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 251  8A08              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 252  8A08 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 253  8A0B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 254  8A0B              ;---------------------------------------------------------------------------------------------------------------
 255  8A0B
 256  8A0B              ; Relojes y temporizaciones.
 257  8A0B
 258  8A0B 00           Contador_de_frames db 0
 259  8A0C 03           Clock_explosion db 3
 260  8A0D 1E           Clock_Entidades_en_curso db 30
 261  8A0E 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 262  8A0F              ;														; Repite la oleada de entidades.
 263  8A0F 01           Habilita_disparo_Amadeus db 1
 264  8A10 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 265  8A11 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 266  8A12
 267  8A12 01           Habilita_disparo_entidad db 1
 268  8A13 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 269  8A14 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 270  8A15
 271  8A15              ;---------------------------------------------------------------------------------------------------------------
 272  8A15
 273  8A15              ; Gestión de NIVELES.
 274  8A15
 275  8A15 00           Nivel db 0												 ; Nivel actual del juego.
 276  8A16 00 00        Puntero_indice_NIVELES defw 0
 277  8A18 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 278  8A1A              ; 														 ; _ que definen el NIVEL.
 279  8A1A
 280  8A1A
 281  8A1A              ; Y todo comienza aquí .....
 282  8A1A              ;
 283  8A1A              ; Rutina principal *************************************************************************************************************************************************************************
 284  8A1A              ;
 285  8A1A              ;	14/11/22
 286  8A1A
 287  8A1A              START
 288  8A1A
 289  8A1A 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 290  8A1D 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 291  8A1F ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 292  8A21 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 293  8A23 F3           	DI
 294  8A24
 295  8A24 3E 07        	ld a,%00000111
 296  8A26 CD C6 98     	call Cls
 297  8A29
 298  8A29              ;	call Pinta_marco
 299  8A29
 300  8A29 CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 301  8A2C
 302  8A2C              ;!! Aqui llamaremos a la rutina que hace copia de seguridad de las variables generales.
 303  8A2C
 304  8A2C CD E3 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 305  8A2F
 306  8A2F CD FF 88     4 call Prepara_cajas
 307  8A32
 308  8A32 CD B6 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 309  8A35              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 310  8A35 CD 93 8D     	call Restore_entidad
 311  8A38
 312  8A38 21 EC 89     	ld hl,Numero_parcial_de_entidades
 313  8A3B 46           	ld b,(hl)
 314  8A3C 04           	inc b
 315  8A3D 05           	dec b
 316  8A3E 28 1A        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 317  8A40
 318  8A40              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 319  8A40              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 320  8A40              ;	Pintamos el resto de entidades:
 321  8A40
 322  8A40              ;	INICIA ENTIDADES !!!!!
 323  8A40
 324  8A40 C5           1 push bc  												; Guardo el contador de entidades.
 325  8A41 CD 10 8D     	call Inicia_Puntero_objeto
 326  8A44 CD DA 98     	call Recompone_posicion_inicio
 327  8A47 CD 16 93     	call Draw
 328  8A4A CD A0 7F     	call Guarda_foto_registros
 329  8A4D CD 58 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 330  8A50 C1           	pop bc
 331  8A51 10 ED        	djnz 1B  											; Decremento el contador de entidades.
 332  8A53
 333  8A53              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 334  8A53              ; (Esto se dá cuando se inicia una nueva oleada).
 335  8A53
 336  8A53 3A E1 89     	ld a,(Ctrl_1)
 337  8A56 CB 5F        	bit 3,a
 338  8A58 20 18        	jr nz,5F											; Loop
 339  8A5A
 340  8A5A              ; 	INICIA AMADEUS !!!!!
 341  8A5A
 342  8A5A CD BA 8D     3 call Restore_Amadeus
 343  8A5D CD 10 8D     	call Inicia_Puntero_objeto
 344  8A60 CD 16 93     	call Draw
 345  8A63 CD A0 7F     	call Guarda_foto_registros
 346  8A66 11 8C 85     	ld de,Amadeus_db
 347  8A69 CD CC 8D     	call Store_Amadeus
 348  8A6C
 349  8A6C              ; 	INICIA DISPAROS !!!!!
 350  8A6C
 351  8A6C CD CC 8C     	call Inicia_Puntero_Disparo_Entidades
 352  8A6F CD D3 8C     	call Inicia_Puntero_Disparo_Amadeus
 353  8A72
 354  8A72              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 355  8A72
 356  8A72 CD B6 8C     5 call Inicia_punteros_de_cajas
 357  8A75 CD 93 8D     	call Restore_entidad
 358  8A78
 359  8A78 3A E1 89     	ld a,(Ctrl_1)
 360  8A7B CB 5F        	bit 3,a
 361  8A7D 28 0A        	jr z,6F
 362  8A7F
 363  8A7F              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 364  8A7F
 365  8A7F 21 E1 89     	ld hl,Ctrl_1
 366  8A82 CB 9E        	res 3,(hl)
 367  8A84 CD DA 8C     	call Calcula_numero_de_malotes
 368  8A87 18 07        	jr 7F
 369  8A89
 370  8A89              ; ----------
 371  8A89
 372  8A89 3A EC 89     6 ld a,(Numero_parcial_de_entidades)
 373  8A8C 3C           	inc a
 374  8A8D 32 EE 89     	ld (Numero_de_malotes),a
 375  8A90
 376  8A90 AF           7 xor a
 377  8A91 FB           2 ei
 378  8A92 28 FD        	jr z,2B
 379  8A94
 380  8A94 3A 0B 8A     	ld a,(Contador_de_frames)
 381  8A97 47           	ld b,a
 382  8A98 3A 0E 8A     	ld a,(Activa_recarga_cajas)
 383  8A9B B8           	cp b
 384  8A9C 28 08        	jr z,8F
 385  8A9E
 386  8A9E 21 E1 89     	ld hl,Ctrl_1
 387  8AA1 CB E6        	set 4,(hl)
 388  8AA3 AF           	xor a
 389  8AA4 18 EB        	jr 2B
 390  8AA6
 391  8AA6 21 E1 89     8 ld hl,Ctrl_1
 392  8AA9 CB A6        	res 4,(hl)
 393  8AAB F3           	di
 394  8AAC
 395  8AAC 3A 0B 8A     	ld a,(Contador_de_frames)
 396  8AAF
 397  8AAF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 398  8AAF              ;! _ IMPREDECIBLE !!!!
 399  8AAF
 400  8AAF C6 0A        	add 10
 401  8AB1 32 0D 8A     	ld (Clock_Entidades_en_curso),a
 402  8AB4
 403  8AB4 C3 2F 8A     	jp 4B
 404  8AB7
 405  8AB7              ; -----------------------------------------------------------------------------------
 406  8AB7
 407  8AB7              Frame
 408  8AB7
 409  8AB7              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 410  8AB7              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 411  8AB7
 412  8AB7              ; PINTAMOS.
 413  8AB7
 414  8AB7 3E 02            ld a,2
 415  8AB9 D3 FE            out ($fe),a
 416  8ABB CD 1A 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 417  8ABE CD 53 96     	call Extrae_foto_disparos
 418  8AC1 3E 01            ld a,1
 419  8AC3 D3 FE            out ($fe),a
 420  8AC5
 421  8AC5              ; ----------------------------------------------------------------------
 422  8AC5
 423  8AC5              ; RELOJES.
 424  8AC5
 425  8AC5 21 0B 8A     	ld hl,Contador_de_frames
 426  8AC8 34           	inc (hl)											; 0 - 255
 427  8AC9
 428  8AC9 3A 0D 8A     	ld a,(Clock_Entidades_en_curso)
 429  8ACC 47           	ld b,a
 430  8ACD 3A 0B 8A     	ld a,(Contador_de_frames)
 431  8AD0 B8           	cp b
 432  8AD1 20 18        	jr nz,13F
 433  8AD3
 434  8AD3 3A EC 89     	ld a,(Numero_parcial_de_entidades)
 435  8AD6 47           	ld b,a
 436  8AD7 3A ED 89     	ld a,(Entidades_en_curso)
 437  8ADA B8           	cp b
 438  8ADB 28 0E        	jr z,13F
 439  8ADD 30 0C        	jr nc,13F
 440  8ADF
 441  8ADF 3C           	inc a
 442  8AE0 32 ED 89     	ld (Entidades_en_curso),a
 443  8AE3
 444  8AE3 3A 0D 8A     	ld a,(Clock_Entidades_en_curso)
 445  8AE6
 446  8AE6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 447  8AE6              ;! _ IMPREDECIBLE !!!!
 448  8AE6
 449  8AE6 C6 64        	add 100
 450  8AE8 32 0D 8A     	ld (Clock_Entidades_en_curso),a
 451  8AEB
 452  8AEB 21 0F 8A     13 ld hl,Habilita_disparo_Amadeus
 453  8AEE 11 11 8A     	ld de,Temporiza_disparo_Amadeus
 454  8AF1 CD 93 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 455  8AF4
 456  8AF4 21 12 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 457  8AF7 11 14 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 458  8AFA CD 93 9D     	call Habilita_disparos
 459  8AFD
 460  8AFD              ; COLISIONES.
 461  8AFD
 462  8AFD CD F8 91     	call Selector_de_impactos
 463  8B00
 464  8B00              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 465  8B00              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 466  8B00              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 467  8B00
 468  8B00 AF           	xor a
 469  8B01 32 00 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 470  8B04
 471  8B04 CD B6 8C     	call Inicia_punteros_de_cajas
 472  8B07 CD 93 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 473  8B0A              ; 														; _ en DRAW.
 474  8B0A 3A A3 89     	ld a,(Filas)
 475  8B0D A7           	and a
 476  8B0E 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 477  8B10 CD A5 8D     	call Incrementa_punteros_de_cajas
 478  8B13 18 F2        	jr 12B
 479  8B15
 480  8B15              ; ---------------------------------------------------------------------------------------
 481  8B15
 482  8B15 CD 73 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 483  8B18 21 00 70     	ld hl,Album_de_fotos
 484  8B1B 22 F7 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 485  8B1E              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 486  8B1E 3A EC 89     	ld a,(Numero_parcial_de_entidades)
 487  8B21 47               ld b,a
 488  8B22 A7           	and a
 489  8B23 20 14        	jr nz,2F
 490  8B25
 491  8B25 21 E1 89     	ld hl,Ctrl_1
 492  8B28 CB 66        	bit 4,(hl)
 493  8B2A C2 B6 8B     	jp nz,4F
 494  8B2D
 495  8B2D 21 E1 89     	ld hl,Ctrl_1
 496  8B30 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 497  8B32
 498  8B32 3A 0B 8A     	ld a,(Contador_de_frames)
 499  8B35 3C           	inc a
 500  8B36 32 0E 8A     	ld (Activa_recarga_cajas),a
 501  8B39
 502  8B39              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 503  8B39
 504  8B39 3A ED 89     2 ld a,(Entidades_en_curso)
 505  8B3C A7           	and a
 506  8B3D CA B6 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 507  8B40 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 508  8B41
 509  8B41              ;	ex af,af
 510  8B41
 511  8B41              ; Código que ejecutamos con cada entidad:
 512  8B41              ; Impacto ???
 513  8B41
 514  8B41 C5           15 push bc 												; Nº de entidades en curso.
 515  8B42
 516  8B42              ;	call Autorizacion
 517  8B42
 518  8B42 3A BC 89     	ld a,(Impacto)
 519  8B45 A7           	and a
 520  8B46 28 2D        	jr z,8F
 521  8B48
 522  8B48              ; Hay Impacto en esta entidad.
 523  8B48
 524  8B48 21 0C 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 525  8B4B 35           	dec (hl)
 526  8B4C 20 62        	jr nz,6F
 527  8B4E
 528  8B4E              ;! Velocidad de la animación de la explosión.
 529  8B4E
 530  8B4E 36 03        	ld (hl),3 											; Reiniciamos el temporizador de la explosión,_
 531  8B50              ;														; _,(velocidad de la explosión).
 532  8B50 CD 6D 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 533  8B53
 534  8B53              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 535  8B53
 536  8B53 3A DF 89     	ld a,(Ctrl_2)
 537  8B56 CB 4F        	bit 1,a
 538  8B58 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 539  8B5A
 540  8B5A              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 541  8B5A
 542  8B5A 3A AB 89     	ld a,(CTRL_DESPLZ)
 543  8B5D A7           	and a
 544  8B5E 20 08        	jr nz,21F
 545  8B60
 546  8B60 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 547  8B63 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 548  8B66 18 06        	jr 22F
 549  8B68
 550  8B68 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 551  8B6B 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 552  8B6E
 553  8B6E 21 DF 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 554  8B71 CB CE        	set 1,(hl)
 555  8B73 18 22        	jr 7F
 556  8B75
 557  8B75              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 558  8B75              ; _con las coordenadas de la entidad almacenada en DRAW.
 559  8B75
 560  8B75 3A E1 89     8 ld a,(Ctrl_1)
 561  8B78 CB 57        	bit 2,a
 562  8B7A 28 1B        	jr z,7F
 563  8B7C
 564  8B7C 2A 03 8A     	ld hl,(Coordenadas_disparo_certero)
 565  8B7F EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 566  8B80              ;														; E contiene la coordenada_X del disparo.
 567  8B80 2A A9 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 568  8B83              ;														; H FILA, (Coordenada_y de la entidad).
 569  8B83 A7           	and a
 570  8B84 ED 52        	sbc hl,de
 571  8B86
 572  8B86 CD 2F 92     	call Determina_resultado_comparativa
 573  8B89
 574  8B89              ;! Debug colisiones
 575  8B89 78           	ld a,b
 576  8B8A A7           	and a
 577  8B8B              ;	ld a,(Cuad_objeto)
 578  8B8B              ;	inc b
 579  8B8B              ;	dec b
 580  8B8B 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 581  8B8D              ;	jr z,$
 582  8B8D
 583  8B8D              ;! Debug colisiones
 584  8B8D
 585  8B8D              ; ----- ----- -----
 586  8B8D
 587  8B8D 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 588  8B8F 32 BC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 589  8B92
 590  8B92 21 E1 89     	ld hl,Ctrl_1
 591  8B95 CB 96        	res 2,(hl)
 592  8B97
 593  8B97 CD E9 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 594  8B9A
 595  8B9A 3A D1 89     	ld a,(Ctrl_0)
 596  8B9D CB 67        	bit 4,a
 597  8B9F 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 598  8BA1
 599  8BA1              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 600  8BA1              ; [[[
 601  8BA1 CD 2E 8E     	call Detecta_disparo_entidad
 602  8BA4              ; ]]]
 603  8BA4 CD 7D 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 604  8BA7
 605  8BA7 21 D1 89     	ld hl,Ctrl_0
 606  8BAA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 607  8BAC AF           	xor a
 608  8BAD 32 D2 89     	ld (Obj_dibujado),a
 609  8BB0
 610  8BB0 CD 58 8D     6 call Store_Restore_cajas
 611  8BB3
 612  8BB3 C1           	pop bc
 613  8BB4 10 8B        	djnz 15B
 614  8BB6
 615  8BB6              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 616  8BB6
 617  8BB6              ;	ld a,2
 618  8BB6              ;	ld (Limitador_de_entidades_x_frame),a
 619  8BB6
 620  8BB6              ; ------------------------------------
 621  8BB6              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 622  8BB6              ; Hemos gestionado todas las unidades.
 623  8BB6              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 624  8BB6
 625  8BB6              ;	ld hl,Ctrl_1
 626  8BB6              ;	res 2,(hl)
 627  8BB6
 628  8BB6              ; ------------------------------------
 629  8BB6
 630  8BB6              ; Tras la gestión de las entidades, ... AMADEUS.
 631  8BB6
 632  8BB6 CD BA 8D     4 call Restore_Amadeus
 633  8BB9
 634  8BB9 3A BC 89     	ld a,(Impacto)
 635  8BBC A7           	and a
 636  8BBD 20 FE        	jr nz,$
 637  8BBF
 638  8BBF CD 4E 8C     	call Mov_Amadeus
 639  8BC2
 640  8BC2 3A D1 89     	ld a,(Ctrl_0)
 641  8BC5 CB 67        	bit 4,a
 642  8BC7 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 643  8BC9
 644  8BC9 CD 7D 8C     	call Guarda_foto_entidad_a_pintar
 645  8BCC
 646  8BCC 21 D1 89     3 ld hl,Ctrl_0
 647  8BCF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 648  8BD1 AF           	xor a
 649  8BD2 32 D2 89     	ld (Obj_dibujado),a
 650  8BD5
 651  8BD5 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 652  8BD8 CD CC 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 653  8BDB
 654  8BDB CD 91 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 655  8BDE
 656  8BDE              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 657  8BDE
 658  8BDE CD F2 8C     	call Calcula_numero_de_disparotes
 659  8BE1 CD DA 8C     9 call Calcula_numero_de_malotes
 660  8BE4
 661  8BE4 3E 04        	ld a,4
 662  8BE6 D3 FE        	out ($fe),a
 663  8BE8
 664  8BE8 C9           	ret
 665  8BE9
 666  8BE9              ; --------------------------------------------------------------------------------------------------------------
 667  8BE9              ;
 668  8BE9              ;	27/05/23
 669  8BE9
 670  8BE9              Mov_obj
 671  8BE9
 672  8BE9              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 673  8BE9
 674  8BE9 3A DF 89     	ld a,(Ctrl_2)
 675  8BEC CB 4F        	bit 1,a
 676  8BEE 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 677  8BF0
 678  8BF0              ; Explosión:
 679  8BF0
 680  8BF0 3A E0 89     	ld a,(Frames_explosion)
 681  8BF3 A7           	and a
 682  8BF4 20 11        	jr nz,4F
 683  8BF6
 684  8BF6              ; Una alimaña menos!!!!!!!!!1
 685  8BF6
 686  8BF6 CD D5 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 687  8BF9 21 EC 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 688  8BFC 35           	dec (hl)
 689  8BFD 21 ED 89     	ld hl,Entidades_en_curso
 690  8C00 35           	dec (hl)
 691  8C01 21 EB 89     	ld hl,Numero_de_entidades
 692  8C04 35           	dec (hl)
 693  8C05 18 46        	jr 3F
 694  8C07
 695  8C07              ; -----
 696  8C07
 697  8C07              ;	`Movemos´ la explosión.
 698  8C07
 699  8C07 2A B1 89     4 ld hl,(Puntero_DESPLZ_der)
 700  8C0A 23           	inc hl
 701  8C0B 23           	inc hl
 702  8C0C 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 703  8C0F CD 0A 8D     	call Extrae_address
 704  8C12 22 A7 89     	ld (Puntero_objeto),hl
 705  8C15
 706  8C15 21 E0 89     	ld hl,Frames_explosion
 707  8C18 35           	dec (hl)
 708  8C19
 709  8C19 CD 6D 8C     	call Guarda_foto_entidad_a_borrar
 710  8C1C 18 2F        	jr 3F
 711  8C1E
 712  8C1E AF           2 xor a
 713  8C1F 32 D2 89     	ld (Obj_dibujado),a
 714  8C22 32 D1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 715  8C25              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 716  8C25              ; 														; _de la entidad.
 717  8C25 CD 87 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 718  8C28              ;														; Obj_dibujado="0".
 719  8C28              ; Movemos Entidades malignas.
 720  8C28
 721  8C28              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 722  8C28              ;	and a 												; _a movernos. (Limitador_de_entidades).
 723  8C28              ;	ret z
 724  8C28
 725  8C28 21 D4 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 726  8C2B 34           	inc (hl)
 727  8C2C 35           	dec (hl)                                            ; Salimos de la rutina.
 728  8C2D C8           	ret z
 729  8C2E
 730  8C2E CD F4 9C     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 731  8C31
 732  8C31 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 733  8C34 CB 67        	bit 4,a
 734  8C36 C8           	ret z
 735  8C37
 736  8C37              ; Ha habido desplazamiento de la entidad maligna.
 737  8C37              ; Ha llegado a zona de AMADEUS ???
 738  8C37
 739  8C37 3A AA 89     	ld a,(Coordenada_y)
 740  8C3A FE 14        	cp $14
 741  8C3C D4 C2 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 742  8C3F              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 743  8C3F              ; ---------
 744  8C3F
 745  8C3F 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 746  8C41 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 747  8C44 CD 87 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 748  8C47 CD 9E 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 749  8C4A CD 6D 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 750  8C4D C9           3 ret													; _de la misma.
 751  8C4E
 752  8C4E              ; --------------------------------------------------------------------------------------------------------------
 753  8C4E              ;
 754  8C4E              ;	29/1/23
 755  8C4E
 756  8C4E              Mov_Amadeus
 757  8C4E
 758  8C4E AF           	xor a
 759  8C4F 32 D2 89     	ld (Obj_dibujado),a
 760  8C52 CD 87 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 761  8C55              ;														; Obj_dibujado="0".
 762  8C55              ; Movemos Amadeus.
 763  8C55
 764  8C55 CD F7 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 765  8C58 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 766  8C5B CB 67        	bit 4,a
 767  8C5D C8           	ret z
 768  8C5E
 769  8C5E              ; ---------
 770  8C5E
 771  8C5E 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 772  8C60 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 773  8C63 CD 87 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 774  8C66 CD 9E 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 775  8C69 CD 6D 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 776  8C6C C9           	ret													; _de la nave.
 777  8C6D
 778  8C6D              ; --------------------------------------------------------------------------------------------------------------
 779  8C6D              ;
 780  8C6D              ;	31/01/23
 781  8C6D              ;
 782  8C6D              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 783  8C6D
 784  8C6D              Guarda_foto_entidad_a_borrar
 785  8C6D
 786  8C6D CD F0 95     	call Prepara_draw
 787  8C70 CD 2A 95     	call calcula_CColumnass
 788  8C73 CD 61 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 789  8C76 CD B6 95     	call Define_rutina_de_impresion
 790  8C79 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 791  8C7C C9           	ret
 792  8C7D
 793  8C7D              ; --------------------------------------------------------------------------------------------------------------
 794  8C7D              ;
 795  8C7D              ;	31/01/23
 796  8C7D              ;
 797  8C7D              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 798  8C7D              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 799  8C7D
 800  8C7D              Guarda_foto_entidad_a_pintar
 801  8C7D
 802  8C7D CD AA 8C     	call Repone_pintar
 803  8C80 CD 16 93     	call Draw
 804  8C83 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 805  8C86 C9           	ret
 806  8C87
 807  8C87              ; --------------------------------------------------------------------------------------------------------------
 808  8C87              ;
 809  8C87              ;
 810  8C87
 811  8C87 21 A3 89     Prepara_var_pintado_borrado	ld hl,Filas
 812  8C8A 3A D2 89     	ld a,(Obj_dibujado)
 813  8C8D A7           	and a
 814  8C8E 28 05        	jr z,1F
 815  8C90 11 C7 89     	ld de,Variables_de_pintado
 816  8C93 18 03        	jr 2F
 817  8C95 11 BD 89     1 ld de,Variables_de_borrado
 818  8C98 01 08 00     2 ld bc,8
 819  8C9B ED B0        	ldir
 820  8C9D C9           	ret
 821  8C9E
 822  8C9E              ; --------------------------------------------------------------------------------------------------------------
 823  8C9E
 824  8C9E 21 BD 89     Repone_borrar ld hl,Variables_de_borrado
 825  8CA1 11 A3 89     	ld de,Filas
 826  8CA4 01 08 00     	ld bc,8
 827  8CA7 ED B0        	ldir
 828  8CA9 C9           	ret
 829  8CAA
 830  8CAA 21 C7 89     Repone_pintar ld hl,Variables_de_pintado
 831  8CAD 11 A3 89     	ld de,Filas
 832  8CB0 01 08 00     	ld bc,8
 833  8CB3 ED B0        	ldir
 834  8CB5 C9           	ret
 835  8CB6
 836  8CB6              ; *************************************************************************************************************************************************************
 837  8CB6              ;
 838  8CB6              ; 8/1/23
 839  8CB6              ;
 840  8CB6              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 841  8CB6              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 842  8CB6              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 843  8CB6
 844  8CB6              ; Destruye HL y DE !!!!!
 845  8CB6
 846  8CB6              Inicia_punteros_de_cajas
 847  8CB6
 848  8CB6 21 74 85     	ld hl,Indice_de_cajas
 849  8CB9 CD 0A 8D         call Extrae_address
 850  8CBC 22 E5 89         ld (Puntero_store_caja),hl
 851  8CBF 21 76 85     	ld hl,Indice_de_cajas+2
 852  8CC2 22 E9 89     	ld (Indice_restore_caja),hl
 853  8CC5 CD 0A 8D     	call Extrae_address
 854  8CC8 22 E7 89     	ld (Puntero_restore_caja),hl
 855  8CCB C9               ret
 856  8CCC
 857  8CCC              ; *************************************************************************************************************************************************************
 858  8CCC              ;
 859  8CCC              ; 8/1/23
 860  8CCC              ;
 861  8CCC              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 862  8CCC
 863  8CCC 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 864  8CCF 22 FC 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 865  8CD2 C9           	ret
 866  8CD3 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 867  8CD6 22 FE 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 868  8CD9 C9           	ret
 869  8CDA
 870  8CDA              ; -------------------------------------------------------------------------------------------------------------
 871  8CDA              ;
 872  8CDA              ; 28/2/23
 873  8CDA              ;
 874  8CDA
 875  8CDA              Calcula_numero_de_malotes
 876  8CDA
 877  8CDA 21 00 70     	ld hl,Album_de_fotos
 878  8CDD EB           	ex de,hl
 879  8CDE 2A F7 89     	ld hl,(Stack_snapshot)
 880  8CE1
 881  8CE1 06 00        	ld b,0
 882  8CE3 7D           	ld a,l
 883  8CE4 93           	sub e
 884  8CE5 28 07        	jr z,1F
 885  8CE7
 886  8CE7              ; Nº de malotes no es "0".
 887  8CE7
 888  8CE7 D6 06        2 sub 6
 889  8CE9 04           	inc b
 890  8CEA A7           	and a
 891  8CEB 20 FA        	jr nz,2B
 892  8CED 78           	ld a,b
 893  8CEE
 894  8CEE 32 EE 89     1 ld (Numero_de_malotes),a
 895  8CF1 C9           	ret
 896  8CF2
 897  8CF2              ; -------------------------------------------------------------------------------------------------------------
 898  8CF2              ;
 899  8CF2              ; 28/2/23
 900  8CF2              ;
 901  8CF2
 902  8CF2              Calcula_numero_de_disparotes
 903  8CF2
 904  8CF2 21 85 70     	ld hl,Album_de_fotos_disparos
 905  8CF5 EB           	ex de,hl
 906  8CF6 2A F9 89     	ld hl,(Stack_snapshot_disparos)
 907  8CF9
 908  8CF9 06 00        	ld b,0
 909  8CFB 7D           	ld a,l
 910  8CFC 93           	sub e
 911  8CFD 28 07        	jr z,1F
 912  8CFF
 913  8CFF              ; Nº de malotes no es "0".
 914  8CFF
 915  8CFF D6 06        2 sub 6
 916  8D01 04           	inc b
 917  8D02 A7           	and a
 918  8D03 20 FA        	jr nz,2B
 919  8D05 78           	ld a,b
 920  8D06
 921  8D06 32 FB 89     1 ld (Numero_de_disparotes),a
 922  8D09 C9           	ret
 923  8D0A              ; *************************************************************************************************************************************************************
 924  8D0A              ;
 925  8D0A              ; 20/10/22
 926  8D0A              ;
 927  8D0A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 928  8D0A              ;
 929  8D0A              ; Destruye el puntero y DE !!!!!
 930  8D0A
 931  8D0A 5E           Extrae_address ld e,(hl)
 932  8D0B 23           	inc hl
 933  8D0C 56           	ld d,(hl)
 934  8D0D 2B           	dec hl
 935  8D0E EB           	ex de,hl
 936  8D0F C9           	ret
 937  8D10
 938  8D10              ; *************************************************************************************************************************************************************
 939  8D10              ;
 940  8D10              ;	7/2/23
 941  8D10              ;
 942  8D10              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 943  8D10              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 944  8D10              ;
 945  8D10              ;   Destruye HL y BC !!!!!,
 946  8D10              ;
 947  8D10              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 948  8D10              ;					"0" ..... Izquierda.
 949  8D10
 950  8D10              Inicia_Puntero_objeto
 951  8D10
 952  8D10 3A B7 89     	ld a,(Cuad_objeto)
 953  8D13 E6 01        	and 1
 954  8D15 F5           	push af
 955  8D16 CC 34 8D     	call z,Inicia_puntero_objeto_izq
 956  8D19 F1           	pop af
 957  8D1A 28 2B        	jr z,1F
 958  8D1C CD 21 8D     	call Inicia_puntero_objeto_der
 959  8D1F 18 26        	jr 1F
 960  8D21
 961  8D21              ; Arrancamos desde la parte izquierda de la pantalla.
 962  8D21              ; Iniciamos (Indice_Sprite_der).
 963  8D21
 964  8D21 2A AD 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 965  8D24 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 966  8D27 CD 0A 8D     	call Extrae_address
 967  8D2A 22 A7 89     	ld (Puntero_objeto),hl
 968  8D2D
 969  8D2D 2A AF 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 970  8D30 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 971  8D33 C9           	ret
 972  8D34
 973  8D34              ; Arrancamos desde la parte derecha de la pantalla.
 974  8D34              ; Iniciamos (Indice_Sprite_izq).
 975  8D34
 976  8D34 2A AF 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 977  8D37 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 978  8D3A CD 0A 8D     	call Extrae_address
 979  8D3D 22 A7 89     	ld (Puntero_objeto),hl
 980  8D40
 981  8D40 2A AD 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 982  8D43 22 B1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 983  8D46 C9           	ret
 984  8D47
 985  8D47              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 986  8D47
 987  8D47 21 48 83     1 ld hl,Amadeus
 988  8D4A ED 4B A7 89  	ld bc,(Puntero_objeto)
 989  8D4E B7 ED 42     	sub hl,bc
 990  8D51 C0           	ret nz
 991  8D52 21 D1 89     	ld hl,Ctrl_0
 992  8D55 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 993  8D57 C9           	ret 												; _de nuestra nave en los extremos.
 994  8D58
 995  8D58              ; *************************************************************************************************************************************************************
 996  8D58              ;
 997  8D58              ;	14/5/23
 998  8D58              ;
 999  8D58              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1000  8D58              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1001  8D58
1002  8D58              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1003  8D58              ;	_de la 2ª y 3ª entidad respectivamente.
1004  8D58
1005  8D58              Store_Restore_cajas
1006  8D58
1007  8D58 E5           	push hl
1008  8D59 D5           	push de
1009  8D5A C5            	push bc
1010  8D5B
1011  8D5B              ;	STORE !!!!!
1012  8D5B              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1013  8D5B
1014  8D5B 21 A3 89     	ld hl,Filas
1015  8D5E ED 5B E5 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1016  8D62 01 3E 00     	ld bc,62
1017  8D65 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1018  8D67
1019  8D67              ; 	Entidad_sospechosa. 20/4/23
1020  8D67
1021  8D67 3A BC 89     	ld a,(Impacto)
1022  8D6A A7           	and a
1023  8D6B 28 0C        	jr z,1F
1024  8D6D
1025  8D6D 2A E5 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1026  8D70 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1027  8D73 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1028  8D74 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1029  8D76 22 01 8A     	ld (Entidad_sospechosa_de_colision),hl
1030  8D79
1031  8D79              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1032  8D79
1033  8D79 2A E7 89     1 ld hl,(Puntero_restore_caja)
1034  8D7C 7E           	ld a,(hl)
1035  8D7D A7           	and a
1036  8D7E F5           	push af
1037  8D7F 28 08        	jr z,2F
1038  8D81
1039  8D81 11 A3 89     	ld de,Filas
1040  8D84 01 3E 00     	ld bc,62
1041  8D87 ED B0        	ldir
1042  8D89
1043  8D89 CD A5 8D     2 call Incrementa_punteros_de_cajas
1044  8D8C F1           	pop af
1045  8D8D 28 EA        	jr z,1B
1046  8D8F
1047  8D8F C1           	pop bc
1048  8D90 D1           	pop de
1049  8D91 E1           	pop hl
1050  8D92
1051  8D92 C9           	ret
1052  8D93
1053  8D93              ; **************************************************************************************************
1054  8D93              ;
1055  8D93              ;	12/05/23
1056  8D93              ;
1057  8D93              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1058  8D93
1059  8D93 E5           Restore_entidad push hl
1060  8D94 D5           	push de
1061  8D95 C5            	push bc
1062  8D96
1063  8D96 2A E5 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1064  8D99 11 A3 89     	ld de,Filas
1065  8D9C 01 3E 00     	ld bc,62
1066  8D9F ED B0        	ldir
1067  8DA1
1068  8DA1 C1           	pop bc
1069  8DA2 D1           	pop de
1070  8DA3 E1           	pop hl
1071  8DA4 C9           	ret
1072  8DA5
1073  8DA5
1074  8DA5              ; **************************************************************************************************
1075  8DA5              ;
1076  8DA5              ;	08/05/23
1077  8DA5              ;
1078  8DA5              ;	Incrementamos los dos punteros de entidades. (+1).
1079  8DA5
1080  8DA5 2A E7 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1081  8DA8 22 E5 89     	ld (Puntero_store_caja),hl
1082  8DAB 2A E9 89     	ld hl,(Indice_restore_caja)
1083  8DAE 23           	inc hl
1084  8DAF 23           	inc hl
1085  8DB0 22 E9 89     	ld (Indice_restore_caja),hl
1086  8DB3 CD 0A 8D         call Extrae_address
1087  8DB6 22 E7 89         ld (Puntero_restore_caja),hl
1088  8DB9 C9               ret
1089  8DBA
1090  8DBA              ; **************************************************************************************************
1091  8DBA              ;
1092  8DBA              ;	25/01/23
1093  8DBA              ;
1094  8DBA              ;	Restore_Amadeus
1095  8DBA              ;
1096  8DBA              ;	Cargamos en DRAW los parámetros de Amadeus.
1097  8DBA              ;
1098  8DBA
1099  8DBA E5           Restore_Amadeus	push hl
1100  8DBB D5           	push de
1101  8DBC C5            	push bc
1102  8DBD 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1103  8DC0 11 A3 89     	ld de,Filas
1104  8DC3 01 3E 00     	ld bc,62
1105  8DC6 ED B0        	ldir
1106  8DC8 C1           	pop bc
1107  8DC9 D1           	pop de
1108  8DCA E1           	pop hl
1109  8DCB C9           	ret
1110  8DCC
1111  8DCC              ; *************************************************************************************************************************************************************
1112  8DCC              ;
1113  8DCC              ;	29/04/23
1114  8DCC              ;
1115  8DCC              ;	Store_Amadeus
1116  8DCC              ;
1117  8DCC              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1118  8DCC              ;
1119  8DCC              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1120  8DCC              ;
1121  8DCC              ;	DESTRUYE: HL y BC y DE.
1122  8DCC
1123  8DCC 21 A3 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1124  8DCF 01 3E 00     	ld bc,62
1125  8DD2 ED B0        	ldir
1126  8DD4 C9           	ret
1127  8DD5
1128  8DD5              ; -----------------------------------------------------------
1129  8DD5              ;
1130  8DD5              ;	27/04/23
1131  8DD5              ;
1132  8DD5              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1133  8DD5              ;
1134  8DD5              ;	Destruye: HL,BC,DE,A
1135  8DD5
1136  8DD5 21 A3 89     Borra_datos_entidad ld hl,Filas
1137  8DD8 01 3D 00     	ld bc,61
1138  8DDB AF           	xor a
1139  8DDC 77           	ld (hl),a
1140  8DDD 11 A4 89     	ld de,Filas+1
1141  8DE0 ED B0        	ldir
1142  8DE2 C9           	ret
1143  8DE3
1144  8DE3              ; -----------------------------------------------------------
1145  8DE3
1146  8DE3              ; Teclado.
1147  8DE3
1148  8DE3 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1149  8DE5 DB FE        	in a,($fe)
1150  8DE7 E6 01        	and $01
1151  8DE9 28 02        	jr z,1f
1152  8DEB 18 F6        	jr Pulsa_ENTER
1153  8DED C9           1 ret
1154  8DEE
1155  8DEE              ; **************************************************************************************************
1156  8DEE              ;
1157  8DEE              ; Temporización.
1158  8DEE
1159  8DEE              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1160  8DEE              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1161  8DEE              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1162  8DEE              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1163  8DEE
1164  8DEE              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1165  8DEE              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1166  8DEE              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1167  8DEE
1168  8DEE              ; A partir de $4f61 no hace falta DELAY.
1169  8DEE
1170  8DEE              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1171  8DEE
1172  8DEE 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1173  8DF1 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1174  8DF2 78           	LD A,B
1175  8DF3 A7           	AND A
1176  8DF4 20 FB        	JR NZ,wait
1177  8DF6 C9           	RET
1178  8DF7
1179  8DF7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1180  8DF7              ;
1181  8DF7              ;	5/3/23
1182  8DF7              ;
1183  8DF7              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1184  8DF7
1185  8DF7              Movimiento_Amadeus
1186  8DF7
1187  8DF7              ; Disparo.
1188  8DF7
1189  8DF7 3A 0F 8A     	ld a,(Habilita_disparo_Amadeus)
1190  8DFA A7           	and a
1191  8DFB 20 02        	jr nz,1F
1192  8DFD 18 15        	jr 2F
1193  8DFF
1194  8DFF 3E F7        1 ld a,$f7													; "5" para disparar.
1195  8E01 DB FE        	in a,($fe)
1196  8E03 E6 10        	and $10
1197  8E05
1198  8E05 F5           	push af
1199  8E06 CC 3E 8E     	call z,Genera_disparo
1200  8E09 F1           	pop af
1201  8E0A 20 08        	jr nz,2F
1202  8E0C
1203  8E0C 3A 0F 8A     	ld a,(Habilita_disparo_Amadeus)
1204  8E0F EE 01        	xor 1
1205  8E11 32 0F 8A     	ld (Habilita_disparo_Amadeus),a
1206  8E14
1207  8E14 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1208  8E16 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1209  8E18 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1210  8E1A CC 94 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1211  8E1D 3E F7        	ld a,$f7
1212  8E1F DB FE        	in a,($fe)
1213  8E21 E6 01        	and $01
1214  8E23 C8           	ret z
1215  8E24
1216  8E24 3E F7        	ld a,$f7
1217  8E26 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1218  8E28 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1219  8E2A CC 76 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1220  8E2D C9           	ret
1221  8E2E
1222  8E2E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1223  8E2E              ;
1224  8E2E              ;	Rutina provisional para que los malotes cagen balas.
1225  8E2E
1226  8E2E              Detecta_disparo_entidad
1227  8E2E
1228  8E2E 3A 12 8A     	ld a,(Habilita_disparo_entidad)
1229  8E31 A7           	and a
1230  8E32 C8           	ret z
1231  8E33 3E 7F        	ld a,$7f
1232  8E35 DB FE        	in a,($fe)
1233  8E37 E6 01        	and 1
1234  8E39 C0           	ret nz
1235  8E3A CD 3E 8E     	call Genera_disparo
1236  8E3D C9           	ret
1237  8E3E
1238  8E3E              ; ---------------------------------------------------------------
1239  8E3E
1240  8E3E              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E3E              ; ******************************************************************************************************************************************************************************************
   2+ 8E3E              ;
   3+ 8E3E              ;   17/04/23
   4+ 8E3E              ;
   5+ 8E3E              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E3E              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E3E              ;
   8+ 8E3E              ;
   9+ 8E3E              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E3E              ;
  11+ 8E3E              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E3E              ;               _ hacen las entidades hacia abajo.
  13+ 8E3E              ;
  14+ 8E3E              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E3E              ;
  16+ 8E3E              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E3E              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E3E              ;
  19+ 8E3E              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E3E              ;           _ la bala.
  21+ 8E3E              ;
  22+ 8E3E              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E3E              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E3E              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E3E              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E3E              ;           _ en el momento de generarse la bala)).
  27+ 8E3E
  28+ 8E3E              Genera_disparo
  29+ 8E3E
  30+ 8E3E              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E3E              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E3E              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E3E              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E3E              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E3E              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E3E              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E3E
  38+ 8E3E              ; Exclusiones:
  39+ 8E3E
  40+ 8E3E 3A DB 89         ld a,(Columnas)
  41+ 8E41 47               ld b,a
  42+ 8E42 3A A4 89         ld a,(Columns)
  43+ 8E45 B8               cp b
  44+ 8E46 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E47
  46+ 8E47              ; ----- ----- -----
  47+ 8E47
  48+ 8E47 3A D1 89         ld a,(Ctrl_0)
  49+ 8E4A CB 77            bit 6,a
  50+ 8E4C 20 06            jr nz,14F
  51+ 8E4E
  52+ 8E4E 3A AA 89         ld a,(Coordenada_y)
  53+ 8E51 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E53 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E54
  56+ 8E54 21 00 80     14 ld hl,Indice_disparo
  57+ 8E57 3A AB 89         ld a,(CTRL_DESPLZ)
  58+ 8E5A 4F               ld c,a
  59+ 8E5B 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E5D              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E5D              ;                                            ""        ""       "f9", B="1"
  62+ 8E5D              ;                                            ""        ""       "fb", B="2"
  63+ 8E5D              ;                                            ""        ""       "fb", B="3"
  64+ 8E5D A7               and a
  65+ 8E5E 28 10            jr z,1F
  66+ 8E60 E6 01            and 1
  67+ 8E62 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E63
  69+ 8E63 79               ld a,c
  70+ 8E64 16 F9            ld d,$f9
  71+ 8E66 23           2 inc hl
  72+ 8E67 23               inc hl
  73+ 8E68 04               inc b
  74+ 8E69 BA               cp d
  75+ 8E6A 28 04            jr z,1F
  76+ 8E6C 14               inc d
  77+ 8E6D 14               inc d
  78+ 8E6E 18 F6            jr 2B
  79+ 8E70
  80+ 8E70 CD 0A 8D     1 call Extrae_address
  81+ 8E73 E5               push hl
  82+ 8E74 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E76 DD 21 8F 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E7A
  85+ 8E7A              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E7A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E7A
  88+ 8E7A 3A D1 89         ld a,(Ctrl_0)
  89+ 8E7D CB 77            bit 6,a
  90+ 8E7F 20 04            jr nz,19F
  91+ 8E81
  92+ 8E81 AF               xor a
  93+ 8E82 32 12 8A         ld (Habilita_disparo_entidad),a
  94+ 8E85
  95+ 8E85 3A B7 89     19 ld a,(Cuad_objeto)
  96+ 8E88 FE 02            cp 2
  97+ 8E8A 38 66            jr c,3F
  98+ 8E8C 28 64            jr z,3F
  99+ 8E8E
 100+ 8E8E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8E8E
 102+ 8E8E E6 01            and 1
 103+ 8E90 28 30            jr z,4F
 104+ 8E92
 105+ 8E92              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8E92              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8E92              ;
 108+ 8E92              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8E92              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8E92              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8E92
 112+ 8E92 2A A5 89     	ld hl,(Posicion_actual)
 113+ 8E95
 114+ 8E95              ;   Amadeus o entidad ???.
 115+ 8E95
 116+ 8E95 3A D1 89         ld a,(Ctrl_0)
 117+ 8E98 CB 77            bit 6,a
 118+ 8E9A 28 0A            jr z,8F
 119+ 8E9C
 120+ 8E9C              ; 	Dispara Amadeus.
 121+ 8E9C
 122+ 8E9C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8E9E CD 0B 96         call PreviousScan
 124+ 8EA1 CD 0B 96         call PreviousScan
 125+ 8EA4
 126+ 8EA4              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EA4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EA4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EA4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EA4
 131+ 8EA4 18 11            jr 10F
 132+ 8EA6
 133+ 8EA6              ; 	Dispara Entidad.
 134+ 8EA6
 135+ 8EA6 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EA9              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EA9
 138+ 8EA9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EA9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EA9
 141+ 8EA9 C5               push bc
 142+ 8EAA 06 10            ld b,16
 143+ 8EAC CD FC 95     9 call NextScan
 144+ 8EAF 10 FB            djnz 9B
 145+ 8EB1 C1               pop bc
 146+ 8EB2 CD 1C 8F         call Ajusta_disparo_parte_izquierda
 147+ 8EB5 18 06            jr 17F
 148+ 8EB7
 149+ 8EB7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EB7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EB7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EB7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EB7
 154+ 8EB7 CD 1C 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EBA CD 91 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EBD              ;                                                      ; _al generar el disparo.
 157+ 8EBD
 158+ 8EBD              ; 	LLegados a este punto tendremos:
 159+ 8EBD              ;
 160+ 8EBD              ;       Puntero_objeto_disparo en IY.
 161+ 8EBD              ;       Rutinas_de_impresion en IX.
 162+ 8EBD              ;       Puntero_de_impresion en HL.
 163+ 8EBD              ;       Impacto/Dirección en BC.
 164+ 8EBD
 165+ 8EBD CD 24 8F     17 call Almacena_disparo
 166+ 8EC0 18 52            jr 6F                                             ; RET.
 167+ 8EC2
 168+ 8EC2              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EC2              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EC2              ;
 171+ 8EC2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EC2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EC2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EC2
 175+ 8EC2 2A A5 89     4 ld hl,(Posicion_actual)
 176+ 8EC5
 177+ 8EC5              ;   Amadeus o entidad ???.
 178+ 8EC5
 179+ 8EC5 3A D1 89         ld a,(Ctrl_0)
 180+ 8EC8 CB 77            bit 6,a
 181+ 8ECA 28 0A            jr z,11F
 182+ 8ECC
 183+ 8ECC              ; 	Dispara Amadeus.
 184+ 8ECC
 185+ 8ECC 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8ECE CD 0B 96         call PreviousScan
 187+ 8ED1 CD 0B 96         call PreviousScan
 188+ 8ED4
 189+ 8ED4              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8ED4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8ED4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8ED4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8ED4
 194+ 8ED4 18 11            jr 13F
 195+ 8ED6
 196+ 8ED6              ; 	Dispara Entidad.
 197+ 8ED6
 198+ 8ED6 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8ED9              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8ED9
 201+ 8ED9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8ED9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8ED9
 204+ 8ED9 C5               push bc
 205+ 8EDA 06 10            ld b,16
 206+ 8EDC CD FC 95     12 call NextScan
 207+ 8EDF 10 FB            djnz 12B
 208+ 8EE1 C1               pop bc
 209+ 8EE2
 210+ 8EE2 CD 15 8F         call Ajusta_disparo_parte_derecha
 211+ 8EE5 18 06            jr 18F
 212+ 8EE7
 213+ 8EE7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8EE7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8EE7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8EE7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8EE7
 218+ 8EE7 CD 15 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8EEA CD 91 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8EED              ;                                                       ; _al generar el disparo.
 221+ 8EED
 222+ 8EED              ; LLegados a este punto tendremos:
 223+ 8EED              ;
 224+ 8EED              ;       Puntero_objeto_disparo en IY.
 225+ 8EED              ;       Rutinas_de_impresion en IX.
 226+ 8EED              ;       Puntero_de_impresion en HL.
 227+ 8EED              ;       Impacto/Dirección en BC.
 228+ 8EED
 229+ 8EED CD 24 8F     18 call Almacena_disparo
 230+ 8EF0 18 22            jr 6F                                               ; RET.
 231+ 8EF2
 232+ 8EF2              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8EF2
 234+ 8EF2 28 11        3 jr z,5F
 235+ 8EF4
 236+ 8EF4              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8EF4              ;
 238+ 8EF4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8EF4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8EF4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8EF4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8EF4
 243+ 8EF4              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8EF4              ;	   ""        ""       "f9", B="1"
 245+ 8EF4              ;	   ""        ""       "fb", B="2"
 246+ 8EF4              ; 	   ""        ""       "fb", B="3"
 247+ 8EF4
 248+ 8EF4 2A A5 89     	ld hl,(Posicion_actual)
 249+ 8EF7 CD FC 95     	call NextScan
 250+ 8EFA
 251+ 8EFA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8EFA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8EFA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8EFA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8EFA
 256+ 8EFA CD 1C 8F         call Ajusta_disparo_parte_izquierda
 257+ 8EFD
 258+ 8EFD              ; 	No se produce impacto. B="$80"
 259+ 8EFD              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8EFD
 261+ 8EFD 01 80 80         ld bc,$8080
 262+ 8F00
 263+ 8F00              ; 	LLegados a este punto tendremos:
 264+ 8F00              ;
 265+ 8F00              ;       Puntero_objeto_disparo en IY.
 266+ 8F00              ;       Rutinas_de_impresion en IX.
 267+ 8F00              ;       Puntero_de_impresion en HL.
 268+ 8F00              ;       Impacto/Dirección en BC.
 269+ 8F00
 270+ 8F00 CD 24 8F         call Almacena_disparo
 271+ 8F03 18 0F            jr 6F                                           ; RET.
 272+ 8F05
 273+ 8F05              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F05              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F05              ;
 276+ 8F05              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F05              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F05              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F05              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F05
 281+ 8F05 2A A5 89     5 ld hl,(Posicion_actual)
 282+ 8F08 CD FC 95     	call NextScan
 283+ 8F0B
 284+ 8F0B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F0B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F0B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F0B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F0B
 289+ 8F0B CD 15 8F         call Ajusta_disparo_parte_derecha
 290+ 8F0E
 291+ 8F0E              ; 	No se produce impacto. B="$80"
 292+ 8F0E              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F0E
 294+ 8F0E 01 80 80     15 ld bc,$8080
 295+ 8F11
 296+ 8F11              ; 	LLegados a este punto tendremos:
 297+ 8F11              ;
 298+ 8F11              ;       Puntero_objeto_disparo en IY.
 299+ 8F11              ;       Rutinas_de_impresion en IX.
 300+ 8F11              ;       Puntero_de_impresion en HL.
 301+ 8F11              ;       Impacto/Dirección en BC.
 302+ 8F11
 303+ 8F11 CD 24 8F         call Almacena_disparo
 304+ 8F14
 305+ 8F14 C9           6 ret
 306+ 8F15
 307+ 8F15              ; ----------------------------------------------------------------
 308+ 8F15              ;
 309+ 8F15              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F15              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F15              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F15
 313+ 8F15 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F16 FE 02            cp 2
 315+ 8F18 38 01            jr c,1F
 316+ 8F1A 23               inc hl
 317+ 8F1B C9           1 ret
 318+ 8F1C
 319+ 8F1C 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F1D FE 01        	cp 1
 321+ 8F1F 20 01        	jr nz,1F
 322+ 8F21 2B           	dec hl
 323+ 8F22 2B           1 dec hl
 324+ 8F23 C9               ret
 325+ 8F24
 326+ 8F24              ; ----------------------------------------------------------------
 327+ 8F24              ;
 328+ 8F24              ;   25/02/23
 329+ 8F24              ;
 330+ 8F24              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F24              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F24              ;
 333+ 8F24              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F24              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F24
 336+ 8F24              Almacena_disparo
 337+ 8F24
 338+ 8F24 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F25 F1               pop af
 340+ 8F26 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F27
 342+ 8F27 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F28 E6 01            and 1
 344+ 8F2A 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F2C              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F2C              ; 	Dispara AMADEUS.
 347+ 8F2C
 348+ 8F2C              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F2C              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F2C              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F2C              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F2C
 353+ 8F2C C5               push bc
 354+ 8F2D 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F30 2A FE 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F33 A7               and a
 357+ 8F34 ED 42            sbc hl,bc
 358+ 8F36 CC D3 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F39 C1               pop bc
 360+ 8F3A 28 54            jr z,4F
 361+ 8F3C
 362+ 8F3C 2A FE 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F3F 23               inc hl
 364+ 8F40 23               inc hl
 365+ 8F41 22 FE 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F44              ;                                                   ; _ Disparo_(+1).
 367+ 8F44 18 18            jr 2F
 368+ 8F46
 369+ 8F46              ; Dispara una entidad.
 370+ 8F46
 371+ 8F46 C5           1 push bc
 372+ 8F47 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F4A 2A FC 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F4D A7               and a
 375+ 8F4E ED 42            sbc hl,bc
 376+ 8F50 CC CC 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F53 C1               pop bc
 378+ 8F54 28 3A            jr z,4F
 379+ 8F56
 380+ 8F56 2A FC 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F59 23               inc hl
 382+ 8F5A 23               inc hl
 383+ 8F5B 22 FC 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F5E              ;                                                   ; _ Disparo_(+1).
 385+ 8F5E CD 0A 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F61              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F61              ;
 388+ 8F61              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F61              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F61              ;                                                     Puntero_de_impresion en HL.
 391+ 8F61              ;                                                     Impacto/Dirección en BC.
 392+ 8F61
 393+ 8F61 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F62 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F63 23               inc hl                                          ; _ al siguiente.
 396+ 8F64 A7               and a
 397+ 8F65 20 C0            jr nz,3B
 398+ 8F67
 399+ 8F67 08               ex af,af
 400+ 8F68 ED 73 F3 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F6C F9               ld sp,hl
 402+ 8F6D
 403+ 8F6D DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F6F F5               push af                                         ; Puntero de impresión.
 405+ 8F70 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F72 C5               push bc                                         ; Control.
 407+ 8F73
 408+ 8F73 ED 7B F3 89      ld sp,(Stack)
 409+ 8F77
 410+ 8F77              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F77
 412+ 8F77 21 E1 89     	ld hl,Ctrl_1
 413+ 8F7A CB C6        	set 0,(hl)
 414+ 8F7C
 415+ 8F7C DD E5        	push ix
 416+ 8F7E E1               pop hl
 417+ 8F7F F5               push af
 418+ 8F80 DD E1            pop ix
 419+ 8F82
 420+ 8F82 CD A0 7F     	call Guarda_foto_registros
 421+ 8F85
 422+ 8F85 21 E1 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F88 CB 86        	res 0,(hl)
 424+ 8F8A
 425+ 8F8A              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8F8A              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8F8A
 428+ 8F8A CD D3 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8F8D CD CC 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8F90
 431+ 8F90 C9           4 ret
 432+ 8F91
 433+ 8F91              ; ----------------------------------------------------------------
 434+ 8F91              ;
 435+ 8F91              ;   4/3/23
 436+ 8F91              ;
 437+ 8F91              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8F91              ;   _ al generarse el disparo.
 439+ 8F91              ;
 440+ 8F91              ;       "$80" ..... No se produce colisión.
 441+ 8F91              ;       "$81" ..... Se produce colisión.
 442+ 8F91
 443+ 8F91              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8F91              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8F91
 446+ 8F91
 447+ 8F91 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8F93 E5               push hl                                        ; Puntero de impresión.
 449+ 8F94
 450+ 8F94 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8F96 CD B2 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8F99
 453+ 8F99 7B               ld a,e
 454+ 8F9A E6 01            and 1
 455+ 8F9C 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8F9E
 457+ 8F9E E1               pop hl
 458+ 8F9F E5               push hl
 459+ 8FA0 CD FC 95         call NextScan
 460+ 8FA3
 461+ 8FA3 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FA4 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FA6 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FA8              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FA8 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FAA CD B2 8F         call Bucle_2
 467+ 8FAD
 468+ 8FAD 43           2 ld b,e
 469+ 8FAE E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FAF FD E1            pop iy
 471+ 8FB1 C9               ret
 472+ 8FB2
 473+ 8FB2               ; ---------- ----------
 474+ 8FB2
 475+ 8FB2 06 02        Bucle_2 ld b,2
 476+ 8FB4 FD 7E 00     2 ld a,(iy)
 477+ 8FB7 A6               and (hl)
 478+ 8FB8 28 02            jr z,1F
 479+ 8FBA 1E 81            ld e,$81
 480+ 8FBC 23           1 inc hl
 481+ 8FBD FD 23            inc iy
 482+ 8FBF 10 F3            djnz 2B
 483+ 8FC1 C9               ret
 484+ 8FC2
 485+ 8FC2              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FC2              ;
 487+ 8FC2              ;   11/04/23
 488+ 8FC2              ;
 489+ 8FC2              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FC2              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FC2              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FC2              ;
 493+ 8FC2              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FC2
 495+ 8FC2              Compara_coordenadas_X
 496+ 8FC2
 497+ 8FC2              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FC2              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FC2
 500+ 8FC2              ; Preparamos registros:
 501+ 8FC2
 502+ 8FC2 21 A9 89         ld hl,Filas+6
 503+ 8FC5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FC6 23               inc hl
 505+ 8FC7 23               inc hl
 506+ 8FC8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FC9 43               ld b,e
 508+ 8FCA 21 B7 89         ld hl,Filas+20
 509+ 8FCD 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8FCE 21 08 8A         ld hl,Coordenadas_X_Entidad
 511+ 8FD1 CD E5 91         call Guarda_coordenadas_X
 512+ 8FD4
 513+ 8FD4              ; Preparamos registros:
 514+ 8FD4
 515+ 8FD4 21 92 85         ld hl,Amadeus_db+6
 516+ 8FD7 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8FD8 23               inc hl
 518+ 8FD9 23               inc hl
 519+ 8FDA 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8FDB 7B               ld a,e
 521+ 8FDC 08               ex af,af'
 522+ 8FDD 21 A0 85         ld hl,Amadeus_db+20
 523+ 8FE0 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8FE1 21 05 8A         ld hl,Coordenadas_X_Amadeus
 525+ 8FE4 CD E5 91         call Guarda_coordenadas_X
 526+ 8FE7
 527+ 8FE7              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8FE7              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8FE7
 530+ 8FE7 04               inc b
 531+ 8FE8 05               dec b
 532+ 8FE9 28 04            jr z,1F
 533+ 8FEB 06 03            ld b,3
 534+ 8FED 18 02            jr 2F
 535+ 8FEF 06 02        1 ld b,2
 536+ 8FF1 08           2 ex af,af'
 537+ 8FF2 3C               inc a
 538+ 8FF3 3D               dec a
 539+ 8FF4 28 04            jr z,5F
 540+ 8FF6 0E 03            ld c,3
 541+ 8FF8 18 02            jr 6F
 542+ 8FFA 0E 02        5 ld c,2
 543+ 8FFC 79           6 ld a,c
 544+ 8FFD 08               ex af,af'
 545+ 8FFE 11 08 8A         ld de,Coordenadas_X_Entidad
 546+ 9001 1A           4 ld a,(de)
 547+ 9002 21 05 8A         ld hl,Coordenadas_X_Amadeus
 548+ 9005 BE           3 cp (hl)
 549+ 9006 28 0E            jr z,7F
 550+ 9008 23               inc hl
 551+ 9009 0D               dec c
 552+ 900A 20 F9            jr nz,3B
 553+ 900C 13               inc de
 554+ 900D 08               ex af,af'
 555+ 900E 4F               ld c,a
 556+ 900F 08               ex af,af'
 557+ 9010 10 EF            djnz 4B
 558+ 9012
 559+ 9012              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 9012
 561+ 9012 CD 24 92     8 call Limpia_Coordenadas_X
 562+ 9015 C9               ret
 563+ 9016
 564+ 9016              7
 565+ 9016 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9018 32 BC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 901B 21 00 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 901E CB D6            set 2,(hl)
 569+ 9020 18 F0            jr 8B
 570+ 9022
 571+ 9022              ; -----------------------------------------------------------------------
 572+ 9022              ;
 573+ 9022              ;   17/04/23
 574+ 9022              ;
 575+ 9022
 576+ 9022              Detecta_colision_nave_entidad
 577+ 9022
 578+ 9022              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9022
 580+ 9022 2A A5 89         ld hl,(Posicion_actual)
 581+ 9025 CD 61 95         call Calcula_puntero_de_impresion
 582+ 9028
 583+ 9028              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9028              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9028
 586+ 9028 DD E5            push ix
 587+ 902A E1               pop hl
 588+ 902B E5               push hl
 589+ 902C
 590+ 902C              ; ----- ----- -----
 591+ 902C 1E 00            ld e,0                                         ; Indica impacto.
 592+ 902E 06 0A            ld b,10
 593+ 9030 CD 60 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9033 7B               ld a,e
 595+ 9034 FE 05            cp 5
 596+ 9036 38 0E            jr c,3F
 597+ 9038
 598+ 9038              ; LLegados a este punto:
 599+ 9038              ;
 600+ 9038              ;   HAY COLISIÓN !!!!!.
 601+ 9038              ;
 602+ 9038              ;   .db (Impacto) de Amadeus a "1".
 603+ 9038              ;   SET el bit3 de (Impacto2).
 604+ 9038              ;
 605+ 9038              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9038
 607+ 9038 21 A5 85         ld hl,Amadeus_db+25
 608+ 903B 36 01            ld (hl),1
 609+ 903D 21 00 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 9040 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9042 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9044 18 18            jr 1F
 613+ 9046
 614+ 9046              ; -----
 615+ 9046
 616+ 9046 E1           3 pop hl
 617+ 9047 CD FC 95         call NextScan
 618+ 904A E5               push hl
 619+ 904B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 904C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 904E 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 9050 30 0C            jr nc,1F
 623+ 9052              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9052 10 DC            djnz 2B
 625+ 9054
 626+ 9054              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9054
 628+ 9054              ; LLegados a este punto:
 629+ 9054              ;
 630+ 9054              ;   NO HAY COLISIÓN !!!!!.
 631+ 9054              ;
 632+ 9054              ;   .db (Impacto) de Amadeus a "0".
 633+ 9054              ;   RES el bit2 de (Impacto2).
 634+ 9054              ;
 635+ 9054              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9054              ;   Lo colocamos a "0".
 637+ 9054
 638+ 9054 21 00 8A         ld hl,Impacto2
 639+ 9057 CB 96            res 2,(hl)
 640+ 9059 2A 01 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 905C 36 00            ld (hl),0
 642+ 905E
 643+ 905E E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 905F C9               ret
 645+ 9060
 646+ 9060               ; ---------- ----------
 647+ 9060
 648+ 9060 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9061 3A A4 89         ld a,(Columns)
 650+ 9064 47               ld b,a
 651+ 9065 FD 7E 00     2 ld a,(iy)
 652+ 9068 BE               cp (hl)
 653+ 9069 28 01            jr z,1F
 654+ 906B
 655+ 906B 1C               inc e
 656+ 906C
 657+ 906C 23           1 inc hl
 658+ 906D FD 23            inc iy
 659+ 906F 10 F4            djnz 2B
 660+ 9071 C1               pop bc
 661+ 9072 C9               ret
 662+ 9073
 663+ 9073              ; -------------------------------------------------------------------------------------------------------------
 664+ 9073              ;
 665+ 9073              ;   13/03/23
 666+ 9073              ;
 667+ 9073              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9073              ;
 669+ 9073              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9073
 671+ 9073 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9076 7E               ld a,(hl)
 673+ 9077 A7               and a
 674+ 9078 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9079
 676+ 9079 44               ld b,h
 677+ 907A 4D               ld c,l
 678+ 907B 2A F9 89         ld hl,(Stack_snapshot_disparos)
 679+ 907E E5               push hl
 680+ 907F A7               and a
 681+ 9080 ED 42            sbc hl,bc
 682+ 9082 E5               push hl
 683+ 9083 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 9084
 685+ 9084 E1               pop hl
 686+ 9085 54               ld d,h
 687+ 9086 5D               ld e,l
 688+ 9087 1B               dec de
 689+ 9088 ED B8            lddr                                                ; Limpiamos.
 690+ 908A
 691+ 908A 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 908D 22 F9 89         ld (Stack_snapshot_disparos),hl
 693+ 9090
 694+ 9090 C9               ret
 695+ 9091
 696+ 9091              ; -------------------------------------------------------------------------------------------------------------
 697+ 9091              ;
 698+ 9091              ;   28/03/23
 699+ 9091              ;
 700+ 9091
 701+ 9091 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 9094 2A FE 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 9097
 704+ 9097 CD 0A 8D     2 call Extrae_address
 705+ 909A 7E               ld a,(hl)
 706+ 909B A7               and a
 707+ 909C 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 909E
 709+ 909E              ; ----- ----- ----- ----- ----- -----
 710+ 909E
 711+ 909E C5               push bc
 712+ 909F CD 5B 91         call foto_disparo_a_borrar
 713+ 90A2
 714+ 90A2              ; Existe colisión con este disparo???
 715+ 90A2
 716+ 90A2 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 90A3 7E               ld a,(hl)
 718+ 90A4 2B               dec hl
 719+ 90A5 E6 01            and 1
 720+ 90A7 28 1D            jr z,9F
 721+ 90A9
 722+ 90A9              ;   En este punto:
 723+ 90A9              ;
 724+ 90A9              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90A9              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90A9              ;   _con la entidad).
 727+ 90A9              ;
 728+ 90A9              ;   Disparo_2A defw 0                                ; Control.
 729+ 90A9              ;    defw 0                                          ; Puntero objeto.
 730+ 90A9              ;    defw 0                                          ; Puntero de impresión.
 731+ 90A9              ;    defw 0                                          ; Rutina de impresión.
 732+ 90A9
 733+ 90A9 E5               push hl
 734+ 90AA
 735+ 90AA 06 04            ld b,4
 736+ 90AC 23           19 inc hl
 737+ 90AD 10 FD            djnz 19B
 738+ 90AF
 739+ 90AF CD 0A 8D         call Extrae_address
 740+ 90B2 CD 53 9C         call Genera_coordenadas_disparo
 741+ 90B5
 742+ 90B5              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90B5
 744+ 90B5 21 03 8A         ld hl,Coordenadas_disparo_certero
 745+ 90B8 72               ld (hl),d
 746+ 90B9 23               inc hl
 747+ 90BA 73               ld (hl),e
 748+ 90BB
 749+ 90BB              ; Elimino el disparo de la base de datos.
 750+ 90BB
 751+ 90BB E1               pop hl
 752+ 90BC CD DA 91         call Elimina_disparo_de_base_de_datos
 753+ 90BF 21 00 8A         ld hl,Impacto2
 754+ 90C2 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90C4
 756+ 90C4 18 06            jr 11F
 757+ 90C6
 758+ 90C6 CD 84 91     9 call Mueve_disparo
 759+ 90C9 CD 5B 91         call foto_disparo_a_borrar
 760+ 90CC
 761+ 90CC C1           11 pop bc
 762+ 90CD 18 04            jr 7F
 763+ 90CF
 764+ 90CF              ; ----- ----- ----- ----- ----- -----
 765+ 90CF
 766+ 90CF ED 42        1 sbc hl,bc
 767+ 90D1 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90D3 2A FE 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90D6 23               inc hl
 770+ 90D7 23               inc hl
 771+ 90D8 22 FE 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90DB 18 BA            jr 2B
 773+ 90DD CD D3 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90E0
 775+ 90E0 01 72 85         ld bc,Disparo_11
 776+ 90E3 2A FC 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 90E6
 778+ 90E6 CD 0A 8D     5 call Extrae_address
 779+ 90E9 7E               ld a,(hl)
 780+ 90EA A7               and a
 781+ 90EB 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 90ED
 783+ 90ED              ; ----- ----- ----- ----- ----- -----
 784+ 90ED
 785+ 90ED C5               push bc
 786+ 90EE CD 5B 91         call foto_disparo_a_borrar
 787+ 90F1
 788+ 90F1              ; Existe colisión con este disparo???
 789+ 90F1
 790+ 90F1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 90F2 7E               ld a,(hl)
 792+ 90F3 2B               dec hl
 793+ 90F4 E6 01            and 1
 794+ 90F6 28 48            jr z,10F
 795+ 90F8
 796+ 90F8              ; La colisión se produce con Amadeus???
 797+ 90F8              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 90F8
 799+ 90F8 E5               push hl
 800+ 90F9
 801+ 90F9 06 04            ld b,4
 802+ 90FB 23           16 inc hl
 803+ 90FC 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 90FE CD 0A 8D         call Extrae_address
 805+ 9101 CD 53 9C         call Genera_coordenadas_disparo
 806+ 9104
 807+ 9104 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 9105 FE 16            cp $16
 809+ 9107 38 22            jr c,15F
 810+ 9109
 811+ 9109              ; (Colisiones en filas 16 y 17).
 812+ 9109
 813+ 9109 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 910A
 815+ 910A              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 910A
 817+ 910A 21 92 85         ld hl,Amadeus_db+6
 818+ 910D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 910E 23               inc hl
 820+ 910F 23               inc hl
 821+ 9110 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9111 21 A0 85         ld hl,Amadeus_db+20
 823+ 9114 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 9115 21 05 8A         ld hl,Coordenadas_X_Amadeus
 825+ 9118 CD E5 91         call Guarda_coordenadas_X
 826+ 911B
 827+ 911B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 911C
 829+ 911C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 911C
 831+ 911C 06 03            ld b,3
 832+ 911E 21 05 8A         ld hl,Coordenadas_X_Amadeus
 833+ 9121 7E           18 ld a,(hl)
 834+ 9122 BA               cp d
 835+ 9123 20 03            jr nz,17F
 836+ 9125
 837+ 9125              ; Colisión Amadeus !!!!!!!!!!
 838+ 9125
 839+ 9125 E1               pop hl
 840+ 9126 18 09            jr 14F
 841+ 9128
 842+ 9128 23           17 inc hl
 843+ 9129 10 F6            djnz 18B
 844+ 912B
 845+ 912B              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 912B              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 912B
 848+ 912B E1           15 pop hl
 849+ 912C 23               inc hl
 850+ 912D 35               dec (hl)
 851+ 912E 2B               dec hl
 852+ 912F 18 0F            jr 10F
 853+ 9131
 854+ 9131              ; -----------------------debug
 855+ 9131
 856+ 9131              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9131              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9131
 859+ 9131 E5           14 push hl
 860+ 9132 CD DA 91         call Elimina_disparo_de_base_de_datos
 861+ 9135 21 00 8A         ld hl,Impacto2
 862+ 9138 CB CE            set 1,(hl)
 863+ 913A CD 24 92         call Limpia_Coordenadas_X
 864+ 913D
 865+ 913D E1               pop hl
 866+ 913E 18 06            jr 12F
 867+ 9140
 868+ 9140 CD 84 91     10 call Mueve_disparo
 869+ 9143 CD 5B 91         call foto_disparo_a_borrar
 870+ 9146 C1           12 pop bc
 871+ 9147
 872+ 9147 18 04            jr 8F
 873+ 9149
 874+ 9149              ; ----- ----- ----- ----- ----- -----
 875+ 9149
 876+ 9149 ED 42        4 sbc hl,bc
 877+ 914B 28 0A            jr z,6F
 878+ 914D
 879+ 914D 2A FC 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9150 23               inc hl
 881+ 9151 23               inc hl
 882+ 9152 22 FC 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 9155 18 8F            jr 5B
 884+ 9157
 885+ 9157 CD CC 8C     6 call Inicia_Puntero_Disparo_Entidades
 886+ 915A C9               ret
 887+ 915B
 888+ 915B              ; ------------------------------------------------------------------
 889+ 915B
 890+ 915B              foto_disparo_a_borrar
 891+ 915B
 892+ 915B 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 915C A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 915D C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 915E
 896+ 915E E5               push hl
 897+ 915F 23               inc hl
 898+ 9160 23               inc hl
 899+ 9161 ED 73 F3 89      ld (Stack),sp
 900+ 9165 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 9166 FD E1            pop iy
 902+ 9168 DD E1            pop ix
 903+ 916A E1               pop hl
 904+ 916B ED 7B F3 89      ld sp,(Stack)
 905+ 916F 3A E1 89         ld a,(Ctrl_1)
 906+ 9172 CB C7            set 0,a
 907+ 9174 32 E1 89         ld (Ctrl_1),a
 908+ 9177 CD A0 7F         call Guarda_foto_registros
 909+ 917A 3A E1 89         ld a,(Ctrl_1)
 910+ 917D CB 87            res 0,a
 911+ 917F 32 E1 89         ld (Ctrl_1),a
 912+ 9182 E1               pop hl
 913+ 9183 C9               ret
 914+ 9184
 915+ 9184 E5           Mueve_disparo push hl
 916+ 9185 7E               ld a,(hl)
 917+ 9186 06 04            ld b,4
 918+ 9188 23           1 inc hl
 919+ 9189 10 FD            djnz 1B
 920+ 918B
 921+ 918B              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 918B
 923+ 918B CD 0A 8D         call Extrae_address
 924+ 918E
 925+ 918E E6 01            and 1
 926+ 9190 28 2E            jr z,2F
 927+ 9192
 928+ 9192              ; Disparo hacia arriba, (Amadeus).
 929+ 9192
 930+ 9192              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 9192              ; _ de la dificultad.
 932+ 9192
 933+ 9192 CD 0B 96         call PreviousScan
 934+ 9195 CD 0B 96         call PreviousScan
 935+ 9198 CD 0B 96         call PreviousScan
 936+ 919B CD 0B 96         call PreviousScan
 937+ 919E
 938+ 919E              ; Detecta si el disparo de Amadeus sale de pantalla:
 939+ 919E
 940+ 919E 7C               ld a,h
 941+ 919F FE 40            cp $40
 942+ 91A1 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 943+ 91A3
 944+ 91A3              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 945+ 91A3
 946+ 91A3 EB               ex de,hl
 947+ 91A4 06 04            ld b,4
 948+ 91A6 2B           6 dec hl
 949+ 91A7 10 FD            djnz 6B
 950+ 91A9
 951+ 91A9 CD DA 91         call Elimina_disparo_de_base_de_datos
 952+ 91AC E1               pop hl
 953+ 91AD 18 10            jr 7F
 954+ 91AF
 955+ 91AF              ; Se ha desplazado la bala, compruebo colisión.
 956+ 91AF
 957+ 91AF D5           3 push de
 958+ 91B0 C5               push bc
 959+ 91B1
 960+ 91B1 CD 91 8F         call Comprueba_Colision
 961+ 91B4
 962+ 91B4              ; B="$80", no hay colisión. B="$81", existe colisión.
 963+ 91B4
 964+ 91B4 78               ld a,b
 965+ 91B5
 966+ 91B5 C1               pop bc
 967+ 91B6 D1               pop de
 968+ 91B7
 969+ 91B7 EB               ex de,hl
 970+ 91B8
 971+ 91B8 73               ld (hl),e
 972+ 91B9 23               inc hl
 973+ 91BA 72               ld (hl),d
 974+ 91BB
 975+ 91BB E1           4 pop hl
 976+ 91BC 23               inc hl
 977+ 91BD 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 978+ 91BE 2B               dec hl
 979+ 91BF C9           7 ret
 980+ 91C0
 981+ 91C0              ; Disparo hacia abajo, (Entidad).
 982+ 91C0
 983+ 91C0              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 984+ 91C0              ;! _ de la dificultad.
 985+ 91C0
 986+ 91C0 CD FC 95     2 call NextScan
 987+ 91C3 CD FC 95         call NextScan
 988+ 91C6 CD FC 95         call NextScan
 989+ 91C9              ;    call NextScan
 990+ 91C9
 991+ 91C9              ; Detecta si el disparo de la entidad sale de la pantalla.
 992+ 91C9
 993+ 91C9 7C               ld a,h
 994+ 91CA FE 58            cp $58
 995+ 91CC 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 996+ 91CE
 997+ 91CE EB               ex de,hl
 998+ 91CF 06 04            ld b,4
 999+ 91D1 2B           5 dec hl
1000+ 91D2 10 FD            djnz 5B
1001+ 91D4
1002+ 91D4 CD DA 91         call Elimina_disparo_de_base_de_datos
1003+ 91D7 E1               pop hl
1004+ 91D8 18 E5            jr 7B
1005+ 91DA
1006+ 91DA              ; HL apunta al primer byte de la base de datos del disparo.
1007+ 91DA
1008+ 91DA 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1009+ 91DD AF               xor a
1010+ 91DE 77               ld (hl),a
1011+ 91DF 54               ld d,h
1012+ 91E0 5D               ld e,l
1013+ 91E1 13               inc de
1014+ 91E2 ED B0            ldir
1015+ 91E4 C9               ret
1016+ 91E5
1017+ 91E5              ; -----------------------------------------------------------------
1018+ 91E5              ;
1019+ 91E5              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1020+ 91E5              ;
1021+ 91E5              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1022+ 91E5              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1023+ 91E5              ;
1024+ 91E5              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1025+ 91E5              ;
1026+ 91E5              ;   INPUTS:
1027+ 91E5              ;
1028+ 91E5              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1029+ 91E5              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1030+ 91E5              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1031+ 91E5
1032+ 91E5              ;   MODIFICA: A, HL, DE y C
1033+ 91E5
1034+ 91E5 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1035+ 91E6 79               ld a,c
1036+ 91E7 E6 01            and 1
1037+ 91E9 20 03            jr nz,1F
1038+ 91EB 14               inc d
1039+ 91EC 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1040+ 91EE
1041+ 91EE              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1042+ 91EE              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1043+ 91EE
1044+ 91EE 15           1 dec d
1045+ 91EF 23           2 inc hl
1046+ 91F0 72               ld (hl),d
1047+ 91F1
1048+ 91F1 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1049+ 91F2 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1050+ 91F3 C8               ret z
1051+ 91F4
1052+ 91F4 AF               xor a
1053+ 91F5 5F               ld e,a
1054+ 91F6 18 ED            jr Guarda_coordenadas_X
1055+ 91F8
1056+ 91F8              ; -----------------------------------------------------------------
1057+ 91F8              ;
1058+ 91F8              ;   12/04/23
1059+ 91F8              ;
1060+ 91F8
1061+ 91F8 3A 00 8A     Selector_de_impactos ld a,(Impacto2)
1062+ 91FB A7               and a
1063+ 91FC C8               ret z
1064+ 91FD
1065+ 91FD FE 04            cp 4
1066+ 91FF 20 09            jr nz,1F
1067+ 9201
1068+ 9201
1069+ 9201              ; La colisión se produce por contacto entre Amadeus y una entidad.
1070+ 9201
1071+ 9201 CD 22 90         call Detecta_colision_nave_entidad
1072+ 9204
1073+ 9204 21 00 8A         ld hl,Impacto2
1074+ 9207 CB 5E            bit 3,(hl)
1075+ 9209 C0               ret nz                                               ; Existe colisión, RET.
1076+ 920A
1077+ 920A              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1078+ 920A              ; Primero analizamos si algún disparo impacta en Amadeus.
1079+ 920A
1080+ 920A 21 00 8A     1 ld hl,Impacto2
1081+ 920D CB 4E            bit 1,(hl)
1082+ 920F 28 07            jr z,2F
1083+ 9211
1084+ 9211 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1085+ 9214 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1086+ 9216 18 0B            jr 3F
1087+ 9218
1088+ 9218 21 00 8A     2 ld hl,Impacto2
1089+ 921B CB 46            bit 0,(hl)
1090+ 921D C8               ret z
1091+ 921E
1092+ 921E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1093+ 921E
1094+ 921E 21 E1 89         ld hl,Ctrl_1
1095+ 9221 CB D6            set 2,(hl)
1096+ 9223
1097+ 9223 C9           3 ret
1098+ 9224
1099+ 9224              ; -----------------------------------------------------------------
1100+ 9224              ;
1101+ 9224              ;   16/04/23
1102+ 9224              ;
1103+ 9224
1104+ 9224 AF           Limpia_Coordenadas_X xor a
1105+ 9225 06 06            ld b,6
1106+ 9227 21 05 8A         ld hl,Coordenadas_X_Amadeus
1107+ 922A 77           1 ld (hl),a
1108+ 922B 23               inc hl
1109+ 922C 10 FC            djnz 1B
1110+ 922E C9               ret
1111+ 922F
1112+ 922F              ; -----------------------------------------------------------------
1113+ 922F              ;
1114+ 922F              ;   25/04/23
1115+ 922F              ;
1116+ 922F
1117+ 922F              Determina_resultado_comparativa
1118+ 922F
1119+ 922F              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1120+ 922F              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1121+ 922F              ;
1122+ 922F              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1123+ 922F              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1124+ 922F              ;
1125+ 922F              ;   SBC HL,DE
1126+ 922F
1127+ 922F              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1128+ 922F              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1129+ 922F
1130+ 922F              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1131+ 922F              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1132+ 922F
1133+ 922F
1134+ 922F 3A B7 89         ld a,(Cuad_objeto)
1135+ 9232 FE 02            cp 2
1136+ 9234 28 26            jr z,2F
1137+ 9236 38 24            jr c,2F
1138+ 9238
1139+ 9238              ; Cuadrantes 3º y 4º
1140+ 9238
1141+ 9238 E6 01            and 1
1142+ 923A 28 10            jr z,4F
1143+ 923C
1144+ 923C              ; Cuadrante 3º
1145+ 923C
1146+ 923C 7C               ld a,h
1147+ 923D 06 00            ld b,0
1148+ 923F
1149+ 923F CD CA 92         call Compara_cositas_H3
1150+ 9242
1151+ 9242 04               inc b
1152+ 9243 05               dec b
1153+ 9244 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1154+ 9245
1155+ 9245 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1156+ 9246 06 00            ld b,0
1157+ 9248
1158+ 9248 CD DC 92         call Compara_cositas_L3
1159+ 924B C9               ret
1160+ 924C
1161+ 924C              ; Cuadrante 4º
1162+ 924C
1163+ 924C 7C           4 ld a,h
1164+ 924D 06 00            ld b,0
1165+ 924F
1166+ 924F CD EE 92         call Compara_cositas_H4
1167+ 9252
1168+ 9252 04               inc b
1169+ 9253 05               dec b
1170+ 9254 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1171+ 9255
1172+ 9255 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1173+ 9256 06 00            ld b,0
1174+ 9258
1175+ 9258 CD 04 93         call Compara_cositas_L4
1176+ 925B C9               ret
1177+ 925C
1178+ 925C              ; Cuadrantes 1º y 2º.
1179+ 925C
1180+ 925C 28 10        2 jr z,3F
1181+ 925E
1182+ 925E              ; 1er Cuadrante
1183+ 925E
1184+ 925E 7C               ld a,h
1185+ 925F 06 00            ld b,0
1186+ 9261
1187+ 9261 CD A2 92         call Compara_cositas_H1
1188+ 9264
1189+ 9264 04               inc b
1190+ 9265 05               dec b
1191+ 9266 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1192+ 9267
1193+ 9267 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1194+ 9268 06 00            ld b,0
1195+ 926A
1196+ 926A CD B8 92         call Compara_cositas_L1
1197+ 926D C9               ret
1198+ 926E
1199+ 926E
1200+ 926E              ; 2º Cuadrante
1201+ 926E
1202+ 926E 7C           3 ld a,h
1203+ 926F 06 00            ld b,0
1204+ 9271
1205+ 9271 CD 7E 92         call Compara_cositas_H2
1206+ 9274
1207+ 9274 04               inc b
1208+ 9275 05               dec b
1209+ 9276 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1210+ 9277
1211+ 9277 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1212+ 9278 06 00            ld b,0
1213+ 927A
1214+ 927A CD 90 92         call Compara_cositas_L2
1215+ 927D C9               ret
1216+ 927E
1217+ 927E A7           Compara_cositas_H2 and a
1218+ 927F 28 0D            jr z,1F
1219+ 9281              ;    cp $fd
1220+ 9281              ;    jr z,1F
1221+ 9281              ;    cp $fe
1222+ 9281              ;    jr z,1F
1223+ 9281 FE FF            cp $ff
1224+ 9283 28 09            jr z,1F
1225+ 9285 FE 01            cp $01
1226+ 9287 28 05            jr z,1F
1227+ 9289 FE 02            cp $02
1228+ 928B 28 01            jr z,1F
1229+ 928D C0               ret nz
1230+ 928E 04           1 inc b
1231+ 928F C9               ret
1232+ 9290
1233+ 9290 A7           Compara_cositas_L2 and a
1234+ 9291 28 0D            jr z,1F
1235+ 9293              ;    cp $fd
1236+ 9293              ;    jr z,1F
1237+ 9293 FE FE            cp $fe
1238+ 9295 28 09            jr z,1F
1239+ 9297 FE FF            cp $ff
1240+ 9299 28 05            jr z,1F
1241+ 929B FE 01            cp $01
1242+ 929D 28 01            jr z,1F
1243+ 929F              ;    cp $02
1244+ 929F              ;    jr z,1F
1245+ 929F C0               ret nz
1246+ 92A0 04           1 inc b
1247+ 92A1 C9               ret
1248+ 92A2
1249+ 92A2 A7           Compara_cositas_H1 and a
1250+ 92A3 28 11            jr z,1F
1251+ 92A5              ;    cp $fd
1252+ 92A5              ;    jr z,1F
1253+ 92A5              ;    cp $fe
1254+ 92A5              ;    jr z,1F
1255+ 92A5 FE FF            cp $ff
1256+ 92A7 28 0D            jr z,1F
1257+ 92A9 FE 01            cp $01
1258+ 92AB 28 09            jr z,1F
1259+ 92AD FE 02            cp $02
1260+ 92AF 28 05            jr z,1F
1261+ 92B1 FE 03            cp $03
1262+ 92B3 28 01            jr z,1F
1263+ 92B5 C0               ret nz
1264+ 92B6 04           1 inc b
1265+ 92B7 C9               ret
1266+ 92B8
1267+ 92B8 A7           Compara_cositas_L1 and a
1268+ 92B9 28 0D            jr z,1F
1269+ 92BB              ;    cp $fd
1270+ 92BB              ;    jr z,1F
1271+ 92BB              ;    cp $fe
1272+ 92BB              ;    jr z,1F
1273+ 92BB              ;    cp $ff
1274+ 92BB              ;    jr z,1F
1275+ 92BB FE 01            cp $01
1276+ 92BD 28 09            jr z,1F
1277+ 92BF FE 02            cp $02
1278+ 92C1 28 05            jr z,1F
1279+ 92C3 FE 03            cp $03
1280+ 92C5 28 01            jr z,1F
1281+ 92C7 C0               ret nz
1282+ 92C8 04           1 inc b
1283+ 92C9 C9               ret
1284+ 92CA
1285+ 92CA A7           Compara_cositas_H3 and a
1286+ 92CB 28 0D            jr z,1F
1287+ 92CD              ;    cp $fd
1288+ 92CD              ;    jr z,1F
1289+ 92CD FE FE            cp $fe
1290+ 92CF 28 09            jr z,1F
1291+ 92D1 FE FF            cp $ff
1292+ 92D3 28 05            jr z,1F
1293+ 92D5 FE 01            cp $01
1294+ 92D7 28 01            jr z,1F
1295+ 92D9              ;    cp $02
1296+ 92D9              ;    jr z,1F
1297+ 92D9              ;    cp $03
1298+ 92D9              ;    jr z,1F
1299+ 92D9 C0               ret nz
1300+ 92DA 04           1 inc b
1301+ 92DB C9               ret
1302+ 92DC
1303+ 92DC A7           Compara_cositas_L3 and a
1304+ 92DD 28 0D            jr z,1F
1305+ 92DF              ;    cp $fd
1306+ 92DF              ;    jr z,1F
1307+ 92DF              ;    cp $fe
1308+ 92DF              ;    jr z,1F
1309+ 92DF              ;    cp $ff
1310+ 92DF              ;    jr z,1F
1311+ 92DF FE 01            cp $01
1312+ 92E1 28 09            jr z,1F
1313+ 92E3 FE 02            cp $02
1314+ 92E5 28 05            jr z,1F
1315+ 92E7 FE 03            cp $03
1316+ 92E9 28 01            jr z,1F
1317+ 92EB C0               ret nz
1318+ 92EC 04           1 inc b
1319+ 92ED C9               ret
1320+ 92EE
1321+ 92EE A7           Compara_cositas_H4 and a
1322+ 92EF 28 11            jr z,1F
1323+ 92F1 FE FD            cp $fd
1324+ 92F3 28 0D            jr z,1F
1325+ 92F5 FE FE            cp $fe
1326+ 92F7 28 09            jr z,1F
1327+ 92F9 FE FF            cp $ff
1328+ 92FB 28 05            jr z,1F
1329+ 92FD FE 01            cp $01
1330+ 92FF 28 01            jr z,1F
1331+ 9301              ;    cp $02
1332+ 9301              ;    jr z,1F
1333+ 9301              ;    cp $03
1334+ 9301              ;    jr z,1F
1335+ 9301 C0               ret nz
1336+ 9302 04           1 inc b
1337+ 9303 C9               ret
1338+ 9304
1339+ 9304 A7           Compara_cositas_L4 and a
1340+ 9305 28 0D            jr z,1F
1341+ 9307              ;    cp $fd
1342+ 9307              ;    jr z,1F
1343+ 9307 FE FE            cp $fe
1344+ 9309 28 09            jr z,1F
1345+ 930B FE FF            cp $ff
1346+ 930D 28 05            jr z,1F
1347+ 930F FE 01            cp $01
1348+ 9311 28 01            jr z,1F
1349+ 9313              ;    cp $02
1350+ 9313              ;    jr z,1F
1351+ 9313              ;    cp $03
1352+ 9313              ;    jr z,1F
1353+ 9313 C0               ret nz
1354+ 9314 04           1 inc b
1355+ 9315 C9               ret
# file closed: Disparo.asm
1241  9316              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9316              ; ******************************************************************************************************************************************************************************************
   2+ 9316              ;
   3+ 9316              ; 01/23
   4+ 9316              ;
   5+ 9316              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9316
   7+ 9316 CD F0 95     Draw call Prepara_draw
   8+ 9319 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 931A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 931B 28 05        	jr z,2F
  11+ 931D
  12+ 931D 3A B7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9320 18 0C        	jr 1F
  14+ 9322 2A B5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9325 22 A5 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9328 CD B7 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 932B              ;													; _la esquina superior izquierda de la pantalla.
  18+ 932B CD 76 9D     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 932E 3A D1 89     1 ld a,(Ctrl_0)
  20+ 9331 CB 6F        	bit 5,a
  21+ 9333 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9335
  23+ 9335 CD 4D 93     	call Comprueba_limite_horizontal
  24+ 9338 CD DD 93     	call Comprueba_limite_vertical
  25+ 933B
  26+ 933B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 933B
  28+ 933B CD 2A 95     3 call calcula_CColumnass
  29+ 933E CD 61 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9341 CD B6 95     	call Define_rutina_de_impresion
  31+ 9344
  32+ 9344 3A D1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9347 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9349 32 D1 89     	ld (Ctrl_0),a
  35+ 934C
  36+ 934C C9           	ret
  37+ 934D
  38+ 934D              ; *******************************************************************************************************************************************************************************************
  39+ 934D              ;	21/01/23
  40+ 934D              ;
  41+ 934D              ; 	Comprueba_limite_horizontal.
  42+ 934D              ;
  43+ 934D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 934D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 934D              ;
  46+ 934D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 934D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 934D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 934D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 934D
  51+ 934D
  52+ 934D
  53+ 934D 3A D1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9350 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9352 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9354 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9356 32 D1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9359 18 09            jr 6F
  59+ 935B CB 5F        1 bit 3,a
  60+ 935D 28 0A            jr z,2F
  61+ 935F E6 F7            and $f7
  62+ 9361 32 D1 89         ld (Ctrl_0),a
  63+ 9364 CD B7 94     6 call Inicializacion
  64+ 9367 18 5B            jr 5F
  65+ 9369 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 936A
  67+ 936A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 936A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 936A
  70+ 936A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 936B 2A DC 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 936E CD BC 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9371 67           	ld h,a
  74+ 9372 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9373 CD BC 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9376 67           	ld h,a
  77+ 9377 A7           	and a
  78+ 9378 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 937A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 937B 3A B7 89     	ld a,(Cuad_objeto)
  81+ 937E FE 02        	cp 2
  82+ 9380 38 1E        	jr c,3F
  83+ 9382 28 1C        	jr z,3F
  84+ 9384 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 9385 28 23            jr z,7F
  86+ 9387 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 9389 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 938B E1           	pop hl
  89+ 938C
  90+ 938C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 938C              ; _para indicar con E="2" en caso necesario.
  92+ 938C
  93+ 938C E5               push hl
  94+ 938D C5               push bc
  95+ 938E CD BC 98     	call calcula_tercio
  96+ 9391 FE 01        	cp 1
  97+ 9393 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9395 CD C5 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9398 28 26            jr z,9F
 100+ 939A 38 24            jr c,9F
 101+ 939C 1E 00        11 ld e,0
 102+ 939E 18 22            jr 8F
 103+ 93A0 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93A1 28 07        	jr z, 7F
 105+ 93A3 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93A5 1E 00         	ld e,0
 107+ 93A7 E1           	pop hl
 108+ 93A8 18 04        	jr 4F
 109+ 93AA 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93AC 18 15            jr 10F
 111+ 93AE
 112+ 93AE              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93AE              ; _para indicar con E="2" en caso necesario.
 114+ 93AE
 115+ 93AE E5           4 push hl
 116+ 93AF C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93B0 CD BC 98     	call calcula_tercio
 118+ 93B3 FE 01        	cp 1
 119+ 93B5 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93B7 CD C5 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93BA 28 04            jr z,9F
 122+ 93BC 30 02            jr nc,9F
 123+ 93BE 18 02        	jr 8F
 124+ 93C0 1E 02        9 ld e,2
 125+ 93C2 C1           8 pop bc
 126+ 93C3 E1           10 pop hl
 127+ 93C4 C9           5 ret
 128+ 93C5
 129+ 93C5              ; --------------------
 130+ 93C5              ;
 131+ 93C5              ; 25/08/22
 132+ 93C5
 133+ 93C5 CD BC 98     Comprueba_centro call calcula_tercio
 134+ 93C8 67               ld h,a
 135+ 93C9 08           	ex af,af
 136+ 93CA FE 02        	cp 2
 137+ 93CC 38 07        	jr c,1F
 138+ 93CE 28 05        	jr z,1F
 139+ 93D0 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93D3 18 03        	jr 2F
 141+ 93D5 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93D8 08           2 ex af,af
 143+ 93D9 A7               and a
 144+ 93DA ED 42            sbc hl,bc
 145+ 93DC C9               ret
 146+ 93DD
 147+ 93DD              ; *********************************************************************************************************************************************************************************************
 148+ 93DD              ;
 149+ 93DD              ;   16/8/22
 150+ 93DD              ;
 151+ 93DD              ;	Comprueba_limite_vertical
 152+ 93DD              ;
 153+ 93DD              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93DD              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93DD              ;
 156+ 93DD
 157+ 93DD 2A A5 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93E0 7D           	ld a,l
 159+ 93E1 E6 1F        	and $1F
 160+ 93E3 57           	ld d,a
 161+ 93E4 3A DE 89     	ld a,(Limite_vertical)
 162+ 93E7 BA           	cp d 											; Límite - Posición.
 163+ 93E8 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 93E9 3A B7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 93EC CB 47        	bit 0,a
 166+ 93EE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 93F0
 168+ 93F0              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 93F0
 170+ 93F0 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 93F1 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 93F3
 173+ 93F3              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 93F3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 93F3
 176+ 93F3 3A A9 89         ld a,(Coordenada_X)
 177+ 93F6 16 0F            ld d,Centro_izquierda
 178+ 93F8 A7               and a
 179+ 93F9 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 93FA 28 1E            jr z,3F
 181+ 93FC 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 93FE              ;                                                    ; _salimos sin modificar nada.
 183+ 93FE 18 0E            jr 2F
 184+ 9400 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9401 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9403
 187+ 9403              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9403              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9403
 190+ 9403 3A A9 89         ld a,(Coordenada_X)
 191+ 9406 16 10            ld d,Centro_derecha
 192+ 9408 A7               and a
 193+ 9409 92               sub d
 194+ 940A 28 0E            jr z,3F
 195+ 940C 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 940E              ;                                                    ; _salimos sin modificar nada.
 197+ 940E CB 43        2 bit 0,e
 198+ 9410 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9412 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9413 CD A7 94         call Modificaccionne
 201+ 9416 C1           	pop bc
 202+ 9417 CD B7 94         call Inicializacion
 203+ 941A C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 941B
 205+ 941B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 941B
 207+ 941B C5           4 push bc
 208+ 941C 01 A4 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 941F 0A           	ld a,(bc)
 210+ 9420 3D           	dec a
 211+ 9421 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9422 7D           	ld a,l
 213+ 9423 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9424 CB 47        	bit 0,a
 215+ 9426 28 03        	jr z,5F
 216+ 9428 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9429 18 2E        	jr 7F
 218+ 942B
 219+ 942B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 942B
 221+ 942B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 942C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 942D 3A D1 89     	ld a,(Ctrl_0)
 224+ 9430 CB 4F        	bit 1,a
 225+ 9432 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9434 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9435
 228+ 9435              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9435
 230+ 9435 1C               inc e
 231+ 9436 1D               dec e
 232+ 9437 20 07            jr nz,12F
 233+ 9439 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 943A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 943B 22 A5 89     	ld (Posicion_actual),hl
 236+ 943E 18 44        13 jr 9F
 237+ 9440 CB 43        12 bit 0,e
 238+ 9442 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9444              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9444 C1           	pop bc
 241+ 9445 18 D3        	jr 3B
 242+ 9447 80           14 add b
 243+ 9448 6F               ld l,a
 244+ 9449 22 A5 89     	ld (Posicion_actual),hl
 245+ 944C CD A7 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 944F 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9451 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9453 32 D1 89         ld (Ctrl_0),a
 249+ 9456 F1           	pop af
 250+ 9457 18 2B        	jr 9F
 251+ 9459
 252+ 9459              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9459
 254+ 9459 F5           7 push af
 255+ 945A 3A D1 89     	ld a,(Ctrl_0)
 256+ 945D CB 47        	bit 0,a
 257+ 945F 20 1D        	jr nz,8F
 258+ 9461 F1           	pop af
 259+ 9462
 260+ 9462              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9462
 262+ 9462 1C           	inc e
 263+ 9463 1D               dec e
 264+ 9464 20 07            jr nz,10F
 265+ 9466 90           	sub b
 266+ 9467 6F               ld l,a
 267+ 9468 22 A5 89     	ld (Posicion_actual),hl
 268+ 946B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 946D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 946D CB 43        10 bit 0,e
 271+ 946F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9471              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9471 C1           	pop bc
 274+ 9472 18 A6        	jr 3B
 275+ 9474 90           16 sub b
 276+ 9475 6F               ld l,a
 277+ 9476 22 A5 89     	ld (Posicion_actual),hl
 278+ 9479 CD A7 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 947C 18 06            jr 9F
 280+ 947E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 9480 32 D1 89         ld (Ctrl_0),a
 282+ 9483 F1           	pop af
 283+ 9484 C1           9 pop bc
 284+ 9485 1E 00        	ld e,0
 285+ 9487 CD B7 94         call Inicializacion
 286+ 948A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 948B 08           	ex af,af
 288+ 948C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 948D 18 8B            jr 3B
 290+ 948F
 291+ 948F              ; --------------------
 292+ 948F
 293+ 948F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 9491 CD 0B 96     1 call PreviousScan
 295+ 9494 10 FB            djnz 1B
 296+ 9496 22 A5 89     	ld (Posicion_actual),hl
 297+ 9499 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 949A C9           	ret
 299+ 949B
 300+ 949B              ; --------------------
 301+ 949B
 302+ 949B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 949D CD FC 95     1 call NextScan
 304+ 94A0 10 FB            djnz 1B
 305+ 94A2 22 A5 89     	ld (Posicion_actual),hl
 306+ 94A5 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94A6 C9           	ret
 308+ 94A7
 309+ 94A7              ; --------------------
 310+ 94A7              ;
 311+ 94A7              ;	22/01/23
 312+ 94A7              ;
 313+ 94A7              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94A7              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94A7              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94A7
 317+ 94A7
 318+ 94A7              Modificaccionne
 319+ 94A7
 320+ 94A7 3A B7 89     	ld a,(Cuad_objeto)
 321+ 94AA FE 02        	cp 2
 322+ 94AC CC 8F 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94AF DC 8F 94         call c,Modifica_Pos_actual
 324+ 94B2 C8           	ret z
 325+ 94B3 CD 9B 94         call Modifica_Pos_actual2
 326+ 94B6 C9               ret
 327+ 94B7
 328+ 94B7              ; *************************************************************************************************************************************************************************************************
 329+ 94B7              ;
 330+ 94B7              ;	13/8/22
 331+ 94B7              ;
 332+ 94B7              ;	Inicializacion
 333+ 94B7              ;
 334+ 94B7              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94B7              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94B7              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94B7              ;
 338+ 94B7              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94B7              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94B7              ;	_ desaparece/aparece.
 341+ 94B7
 342+ 94B7              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94B7              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94B7              ;
 345+ 94B7              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94B7              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94B7              ; 		   [E] ="0"
 348+ 94B7
 349+ 94B7              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94B7
 351+ 94B7 CD BC 98     Inicializacion call calcula_tercio
 352+ 94BA 28 36        	jr z,primit
 353+ 94BC E6 02        	and 2
 354+ 94BE 20 07        	jr nz,segmit
 355+ 94C0 7D           	ld a,l
 356+ 94C1 FE 7F        	cp $7f
 357+ 94C3 38 2D        	jr c,primit
 358+ 94C5 28 2B        	jr z,primit
 359+ 94C7 CD 24 95     segmit call column
 360+ 94CA 38 13        	jr c,tercuad
 361+ 94CC 3E 04        cuarcuad ld a,4
 362+ 94CE 32 B7 89     	ld (Cuad_objeto),a
 363+ 94D1 21 20 48     	ld hl,$4820
 364+ 94D4 22 DC 89     	ld (Limite_horizontal),hl
 365+ 94D7 21 DE 89     	ld hl,Limite_vertical
 366+ 94DA 36 0D        	ld (hl),$0d
 367+ 94DC 08           	ex af,af
 368+ 94DD 18 3C        	jr 1F
 369+ 94DF              tercuad
 370+ 94DF 3E 03        	ld a,3
 371+ 94E1 32 B7 89     	ld (Cuad_objeto),a
 372+ 94E4 21 20 48     	ld hl,$4820
 373+ 94E7 22 DC 89     	ld (Limite_horizontal),hl
 374+ 94EA 21 DE 89     	ld hl,Limite_vertical
 375+ 94ED 36 12        	ld (hl),$12
 376+ 94EF 08           	ex af,af
 377+ 94F0 18 29        	jr 1F
 378+ 94F2 CD 24 95     primit call column
 379+ 94F5 38 13        	jr c, primcuad
 380+ 94F7              segcuad
 381+ 94F7 3E 02        	ld a,2
 382+ 94F9 32 B7 89     	ld (Cuad_objeto),a
 383+ 94FC 21 C0 4F     	ld hl,$4fc0
 384+ 94FF 22 DC 89     	ld (Limite_horizontal),hl
 385+ 9502 21 DE 89     	ld hl,Limite_vertical
 386+ 9505 36 0D        	ld (hl),$0d
 387+ 9507 08           	ex af,af
 388+ 9508 18 11        	jr 1F
 389+ 950A              primcuad
 390+ 950A 3E 01        	ld a,1
 391+ 950C 32 B7 89     	ld (Cuad_objeto),a
 392+ 950F 21 C0 4F     	ld hl,$4fc0
 393+ 9512 22 DC 89     	ld (Limite_horizontal),hl
 394+ 9515 21 DE 89     	ld hl,Limite_vertical
 395+ 9518 36 12        	ld (hl),$12
 396+ 951A 08           	ex af,af
 397+ 951B CD 28 9C     1 call Genera_coordenadas
 398+ 951E 21 D1 89     	ld hl,Ctrl_0
 399+ 9521 CB EE        	set 5,(hl)
 400+ 9523 C9           	ret
 401+ 9524
 402+ 9524              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9524
 404+ 9524              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9524              ;
 406+ 9524              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9524
 408+ 9524 7D           column ld a,l
 409+ 9525 E6 1F        	and $1f
 410+ 9527 FE 10         	cp $10
 411+ 9529 C9            	ret
 412+ 952A
 413+ 952A              ; --------------------------------------------------------------------------------------------------------------------
 414+ 952A              ;
 415+ 952A              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 952A              ;
 417+ 952A              ; 14/12/22
 418+ 952A              ;
 419+ 952A              ;	Modifica: A y BC.
 420+ 952A
 421+ 952A 3A B7 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 952D E6 01        	and 1
 423+ 952F 28 17        	jr z,1F
 424+ 9531
 425+ 9531              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9531
 427+ 9531 3A A9 89     	ld a,(Coordenada_X)
 428+ 9534 47           	ld b,a
 429+ 9535 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9536 79           	ld a,c
 431+ 9537 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9538 38 08        	jr c,2F
 433+ 953A 47           	ld b,a
 434+ 953B 79           	ld a,c
 435+ 953C 90           	sub b
 436+ 953D 32 DB 89     	ld (Columnas),a
 437+ 9540 18 1B        	jr 4F
 438+ 9542 79           2 ld a,c
 439+ 9543 32 DB 89     	ld (Columnas),a
 440+ 9546 18 15        	jr 4F
 441+ 9548
 442+ 9548              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9548
 444+ 9548 3A A9 89     1 ld a,(Coordenada_X)
 445+ 954B 81           	add c
 446+ 954C 3D           	dec a
 447+ 954D D6 1F        	sub $1f
 448+ 954F 38 08        	jr c,3F
 449+ 9551 47           	ld b,a
 450+ 9552 79           	ld a,c
 451+ 9553 90           	sub b
 452+ 9554 32 DB 89     	ld (Columnas),a
 453+ 9557 18 04        	jr 4F
 454+ 9559 79           3 ld a,c
 455+ 955A 32 DB 89     	ld (Columnas),a
 456+ 955D D9           4 exx
 457+ 955E 4F           	ld c,a
 458+ 955F D9           	exx
 459+ 9560 C9            ret
 460+ 9561
 461+ 9561              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9561              ;
 463+ 9561              ; 7/1/23
 464+ 9561              ;
 465+ 9561              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9561              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9561              ;
 468+ 9561              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9561              ;	DESTRUYE: HL,B Y A.
 470+ 9561
 471+ 9561 3A B7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9564 FE 02        	cp 2
 473+ 9566 38 18        	jr c,1F
 474+ 9568 28 16        	jr z,1F
 475+ 956A E6 01        	and 1
 476+ 956C 28 0D        	jr z,3F
 477+ 956E
 478+ 956E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 956E
 480+ 956E CD AA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9571
 482+ 9571 7D           9 ld a,l
 483+ 9572 E6 1F        	and $1f
 484+ 9574 28 2A        	jr z,7F
 485+ 9576 2B           	dec hl
 486+ 9577 10 F8        	djnz 9B
 487+ 9579 18 25        	jr 7F
 488+ 957B
 489+ 957B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 957B
 491+ 957B 2A A5 89     3 ld hl,(Posicion_actual)
 492+ 957E 18 20        	jr 7F
 493+ 9580
 494+ 9580 28 14        1 jr z,2F
 495+ 9582
 496+ 9582              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9582
 498+ 9582 CD AA 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9585
 500+ 9585 7D           4 ld a,l
 501+ 9586 E6 1F        	and $1f
 502+ 9588 28 03        	jr z,6F
 503+ 958A 2B           	dec hl
 504+ 958B 10 F8        	djnz 4B
 505+ 958D 06 0F        6 ld b,15
 506+ 958F CD 0B 96     5 call PreviousScan
 507+ 9592 10 FB        	djnz 5B
 508+ 9594 18 0A        	jr 7F
 509+ 9596
 510+ 9596              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 9596
 512+ 9596 CD AA 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 9599 06 0F        	ld b,15
 514+ 959B CD 0B 96     8 call PreviousScan
 515+ 959E 10 FB        	djnz 8B
 516+ 95A0
 517+ 95A0 E5           7 push hl
 518+ 95A1 DD E1        	pop ix
 519+ 95A3
 520+ 95A3 2A A7 89     	ld hl,(Puntero_objeto)
 521+ 95A6 E5           	push hl
 522+ 95A7 FD E1        	pop iy
 523+ 95A9
 524+ 95A9 C9           	ret
 525+ 95AA
 526+ 95AA              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95AA              ;
 528+ 95AA              ;	2/1/23
 529+ 95AA              ;
 530+ 95AA              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95AA              ;
 532+ 95AA              ;	Tras esta rutina tenemos:
 533+ 95AA              ;
 534+ 95AA              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95AA              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95AA              ;
 537+ 95AA              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95AA
 539+ 95AA 2A A5 89     Operandos ld hl,(Posicion_actual)
 540+ 95AD 3A DB 89     	ld a,(Columnas)
 541+ 95B0 3D           	dec a
 542+ 95B1 20 01        	jr nz,1F
 543+ 95B3 3C           	inc a
 544+ 95B4 47           1 ld b,a
 545+ 95B5 C9           	ret
 546+ 95B6
 547+ 95B6              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95B6              ;
 549+ 95B6              ;	3/1/23
 550+ 95B6              ;
 551+ 95B6              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95B6              ;
 553+ 95B6              ;	Destruye: A,B,HL y DE.
 554+ 95B6
 555+ 95B6              Define_rutina_de_impresion
 556+ 95B6
 557+ 95B6 3A A4 89     	ld a,(Columns)
 558+ 95B9 47           	ld b,a
 559+ 95BA 3A DB 89     	ld a,(Columnas)
 560+ 95BD B8           	cp b
 561+ 95BE 20 0D        	jr nz,2f
 562+ 95C0
 563+ 95C0              ;	La entidad se imprime entera.
 564+ 95C0
 565+ 95C0 21 8C 96     	ld hl, Indice_entidades_completas
 566+ 95C3 E6 01        	and 1
 567+ 95C5 28 02        	jr z,1F
 568+ 95C7
 569+ 95C7 23           	inc hl
 570+ 95C8 23           	inc hl
 571+ 95C9
 572+ 95C9 CD 0A 8D     1 call Extrae_address
 573+ 95CC C9           	ret		;	ret
 574+ 95CD
 575+ 95CD              ;	La entidad no se imprime entera en pantalla.
 576+ 95CD
 577+ 95CD 3A B7 89     2 ld a,(Cuad_objeto)
 578+ 95D0 E6 01        	and 1
 579+ 95D2 28 17        	jr z,3F
 580+ 95D4
 581+ 95D4              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95D4
 583+ 95D4 21 90 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95D7 3A A4 89     4 ld a,(Columns)
 585+ 95DA E6 01        	and 1
 586+ 95DC 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95DE
 588+ 95DE 23           	inc hl
 589+ 95DF 23           	inc hl
 590+ 95E0
 591+ 95E0 3A DB 89     	ld a,(Columnas)
 592+ 95E3 E6 01        	and 1
 593+ 95E5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 95E7
 595+ 95E7 23           	inc hl
 596+ 95E8 23           	inc hl
 597+ 95E9
 598+ 95E9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 95EB
 600+ 95EB 21 96 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 95EE 18 E7        	jr 4B
 602+ 95F0
 603+ 95F0              ; --------------------------------------------------------------------------------------------------------------------
 604+ 95F0              ;
 605+ 95F0              ;	Prepara_draw
 606+ 95F0              ;
 607+ 95F0              ;	Es una rutina de carga.
 608+ 95F0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 95F0              ;
 610+ 95F0              ;	FUNCIONAMIENTO:
 611+ 95F0              ;
 612+ 95F0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 95F0              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 95F0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 95F0              ;
 616+ 95F0              ;	DESTRUYE:
 617+ 95F0              ;
 618+ 95F0              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 95F0
 620+ 95F0 21 A3 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 95F3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 95F4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 95F5 4E           	ld c,(hl)
 624+ 95F6 2A A5 89     	ld hl,(Posicion_actual)
 625+ 95F9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 95FB C9           	ret
 627+ 95FC
 628+ 95FC              ;----------------------------------------------------------------------------------------------------------------
 629+ 95FC              ;
 630+ 95FC              ;	5/08/22
 631+ 95FC              ;
 632+ 95FC              ;   NextScan.
 633+ 95FC              ;
 634+ 95FC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 95FC              ;
 636+ 95FC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 95FC              ;
 638+ 95FC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 95FC              ;
 640+ 95FC              ;       DESTRUIDOS: AF y HL !!!
 641+ 95FC              ;
 642+ 95FC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 95FC              ;
 644+ 95FC
 645+ 95FC 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 95FD 7C               ld a,h
 647+ 95FE E6 07            and 7
 648+ 9600 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 9601
 650+ 9601 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 9602 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 9604 6F               ld l,a
 653+ 9605 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9606
 655+ 9606 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9607 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9609 67               ld h,a
 658+ 960A C9               ret
 659+ 960B
 660+ 960B              ;----------------------------------------------------------------------------------------------------------------
 661+ 960B              ;
 662+ 960B              ;	5/08/22
 663+ 960B              ;
 664+ 960B              ;   PreviousScan.
 665+ 960B              ;
 666+ 960B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 960B              ;
 668+ 960B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 960B              ;
 670+ 960B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 960B              ;
 672+ 960B              ;       DESTRUIDOS: AF y HL !!!
 673+ 960B              ;
 674+ 960B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 960B              ;
 676+ 960B
 677+ 960B 7C           PreviousScan ld a,h
 678+ 960C 25               dec h               ; Dec H.
 679+ 960D E6 07            and 7
 680+ 960F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9610
 682+ 9610 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 9611 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9613 6F               ld l,a
 685+ 9614 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9615
 687+ 9615 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9616 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9618 67               ld h,a
 690+ 9619 C9               ret
 691+ 961A
 692+ 961A              ; -----------------------------------------------------------------------------------
 693+ 961A              ;
 694+ 961A              ;	28/2/23
 695+ 961A              ;
 696+ 961A              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 961A              ;	Extrae fotos de Album_de_fotos.
 698+ 961A
 699+ 961A 3A EE 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 961D A7           	and a
 701+ 961E C8           	ret z
 702+ 961F ED 73 F3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9623 31 00 70     	ld sp,Album_de_fotos
 704+ 9626
 705+ 9626 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9628 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9629 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 962A
 709+ 962A ED 73 F5 89  	ld (Stack_2),sp
 710+ 962E ED 7B F3 89  	ld sp,(Stack)
 711+ 9632
 712+ 9632              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9632
 714+ 9632 3E CD        	ld a,$cd
 715+ 9634 32 3C 96     	ld (Imprime),a
 716+ 9637 EB           	ex de,hl
 717+ 9638 22 3D 96     	ld (Imprime+1),hl
 718+ 963B EB           	ex de,hl
 719+ 963C
 720+ 963C              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 963C
 722+ 963C 00 00 00     Imprime db 0,0,0
 723+ 963F
 724+ 963F 3A EE 89     	ld a,(Numero_de_malotes)
 725+ 9642 3D           	dec a
 726+ 9643 28 09        	jr z,1F
 727+ 9645 32 EE 89      	ld (Numero_de_malotes),a
 728+ 9648
 729+ 9648 ED 7B F5 89   	ld sp,(Stack_2)
 730+ 964C 18 D8        	jr 2B
 731+ 964E
 732+ 964E AF           1 xor a
 733+ 964F 32 F5 89     	ld (Stack_2),a
 734+ 9652 C9           	ret
 735+ 9653
 736+ 9653              ; -----------------------------------------------------------------------------------
 737+ 9653              ;
 738+ 9653              ;	28/2/23
 739+ 9653              ;
 740+ 9653              ;	Pinta los disparos generados.
 741+ 9653
 742+ 9653              Extrae_foto_disparos
 743+ 9653
 744+ 9653 3A FB 89     	ld a,(Numero_de_disparotes)
 745+ 9656 A7           	and a
 746+ 9657 C8           	ret z
 747+ 9658 ED 73 F3 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 965C 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 965F
 750+ 965F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9661 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9662 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9663
 754+ 9663 ED 73 F5 89  	ld (Stack_2),sp
 755+ 9667 ED 7B F3 89  	ld sp,(Stack)
 756+ 966B
 757+ 966B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 966B
 759+ 966B 3E CD        	ld a,$cd
 760+ 966D 32 75 96     	ld (Imprime2),a
 761+ 9670 EB           	ex de,hl
 762+ 9671 22 76 96     	ld (Imprime2+1),hl
 763+ 9674 EB           	ex de,hl
 764+ 9675
 765+ 9675              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 9675
 767+ 9675 00 00 00     Imprime2 db 0,0,0
 768+ 9678
 769+ 9678 3A FB 89     	ld a,(Numero_de_disparotes)
 770+ 967B 3D           	dec a
 771+ 967C 28 09        	jr z,1F
 772+ 967E 32 FB 89      	ld (Numero_de_disparotes),a
 773+ 9681
 774+ 9681 ED 7B F5 89  	ld sp,(Stack_2)
 775+ 9685 18 D8        	jr 2B
 776+ 9687
 777+ 9687 AF           1 xor a
 778+ 9688 32 F5 89     	ld (Stack_2),a
 779+ 968B C9           	ret
 780+ 968C
# file closed: Draw_XOR.asm
1242  968C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 968C              ;   índices de Rutinas de impresión.
   2+ 968C
   3+ 968C 9C 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 968E C9 96            defw Pinta_Amadeus_3x2
   5+ 9690
   6+ 9690 1F 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9692 BF 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9694 73 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9696
  10+ 9696 49 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9698 4D 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 969A 01 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 969C
  14+ 969C
  15+ 969C              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 969C              ;
  17+ 969C              ;   12/12/22
  18+ 969C              ;
  19+ 969C              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 969C              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 969C              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 969C              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 969C              ;
  24+ 969C              ;   Modifica: DE y HL.
  25+ 969C
  26+ 969C ED 73 F3 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96A0 FD F9        	ld sp,iy
  28+ 96A2 06 10            ld b,16
  29+ 96A4 D1           1 pop de
  30+ 96A5 7B               ld a,e
  31+ 96A6 AE               xor (hl)
  32+ 96A7 77           	ld (hl),a
  33+ 96A8 23           	inc hl
  34+ 96A9 7A               ld a,d
  35+ 96AA AE               xor (hl)
  36+ 96AB 77           	ld (hl),a
  37+ 96AC 2B           	dec hl
  38+ 96AD 24           	inc h
  39+ 96AE 7C               ld a,h
  40+ 96AF E6 07            and 7
  41+ 96B1 20 0A            jr nz,2F
  42+ 96B3 7D               ld a,l
  43+ 96B4 C6 20            add a,$20
  44+ 96B6 6F               ld l,a
  45+ 96B7 38 04            jr c,2F
  46+ 96B9 7C               ld a,h
  47+ 96BA D6 08            sub 8
  48+ 96BC 67               ld h,a
  49+ 96BD 7C           2 ld a,h
  50+ 96BE FE 58            cp $58
  51+ 96C0 28 02            jr z,3F
  52+ 96C2 10 E0            djnz 1B
  53+ 96C4 ED 7B F3 89  3 ld sp,(Stack)
  54+ 96C8 C9           	ret
  55+ 96C9
  56+ 96C9 ED 73 F3 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96CD FD F9        	ld sp,iy
  58+ 96CF 06 08            ld b,8
  59+ 96D1 D1           1 pop de
  60+ 96D2 7B               ld a,e
  61+ 96D3 AE               xor (hl)
  62+ 96D4 77           	ld (hl),a
  63+ 96D5 23           	inc hl
  64+ 96D6 7A               ld a,d
  65+ 96D7 AE               xor (hl)
  66+ 96D8 77           	ld (hl),a
  67+ 96D9 23           	inc hl
  68+ 96DA D1           	pop de
  69+ 96DB 7B               ld a,e
  70+ 96DC AE               xor (hl)
  71+ 96DD 77           	ld (hl),a
  72+ 96DE 2B           	dec hl
  73+ 96DF 2B           	dec hl
  74+ 96E0 24           	inc h
  75+ 96E1 7C               ld a,h
  76+ 96E2 E6 07            and 7
  77+ 96E4 20 0A            jr nz,2F
  78+ 96E6 7D               ld a,l
  79+ 96E7 C6 20            add a,$20
  80+ 96E9 6F               ld l,a
  81+ 96EA 38 04            jr c,2F
  82+ 96EC 7C               ld a,h
  83+ 96ED D6 08            sub 8
  84+ 96EF 67               ld h,a
  85+ 96F0 7C           2 ld a,h
  86+ 96F1 FE 58            cp $58
  87+ 96F3 28 25            jr z,4F
  88+ 96F5 7A               ld a,d
  89+ 96F6 AE               xor (hl)
  90+ 96F7 77               ld (hl),a
  91+ 96F8 D1           	pop de
  92+ 96F9 23           	inc hl
  93+ 96FA 7B               ld a,e
  94+ 96FB AE               xor (hl)
  95+ 96FC 77           	ld (hl),a
  96+ 96FD 23           	inc hl
  97+ 96FE 7A               ld a,d
  98+ 96FF AE               xor (hl)
  99+ 9700 77           	ld (hl),a
 100+ 9701 2B           	dec hl
 101+ 9702 2B           	dec hl
 102+ 9703 24           	inc h
 103+ 9704 7C               ld a,h
 104+ 9705 E6 07            and 7
 105+ 9707 20 0A            jr nz,3F
 106+ 9709 7D               ld a,l
 107+ 970A C6 20            add a,$20
 108+ 970C 6F               ld l,a
 109+ 970D 38 04            jr c,3F
 110+ 970F 7C               ld a,h
 111+ 9710 D6 08            sub 8
 112+ 9712 67               ld h,a
 113+ 9713 7C           3 ld a,h
 114+ 9714 FE 58            cp $58
 115+ 9716 28 02            jr z,4F
 116+ 9718 10 B7            djnz 1B
 117+ 971A ED 7B F3 89  4 ld sp,(Stack)
 118+ 971E C9           	ret
 119+ 971F
 120+ 971F              ; ---------------------------------------------------
 121+ 971F
 122+ 971F ED 73 F3 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9723 FD F9        	ld sp,iy
 124+ 9725
 125+ 9725              ; >>>
 126+ 9725
 127+ 9725 06 10            ld b,16
 128+ 9727 D1           1 pop de
 129+ 9728 7A           	ld a,d
 130+ 9729 AE           	xor (hl)
 131+ 972A 77           	ld (hl),a
 132+ 972B 24           	inc h
 133+ 972C 7C               ld a,h
 134+ 972D E6 07            and 7
 135+ 972F 20 0C            jr nz,2F
 136+ 9731 7D               ld a,l
 137+ 9732 C6 20            add a,$20
 138+ 9734 6F               ld l,a
 139+ 9735 38 06            jr c,2F
 140+ 9737 7C               ld a,h
 141+ 9738 D6 08            sub 8
 142+ 973A 67               ld h,a
 143+ 973B 18 00            jr 2F
 144+ 973D 7C           2 ld a,h
 145+ 973E FE 58            cp $58
 146+ 9740 28 02            jr z,3F
 147+ 9742 10 E3            djnz 1B
 148+ 9744 ED 7B F3 89  3 ld sp,(Stack)
 149+ 9748 C9           	ret
 150+ 9749
 151+ 9749 ED 73 F3 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 974D FD F9        	ld sp,iy
 153+ 974F
 154+ 974F              ; >>>
 155+ 974F
 156+ 974F 06 10            ld b,16
 157+ 9751 D1           1 pop de
 158+ 9752 7B           	ld a,e
 159+ 9753 AE           	xor (hl)
 160+ 9754 77           	ld (hl),a
 161+ 9755 24           	inc h
 162+ 9756 7C               ld a,h
 163+ 9757 E6 07            and 7
 164+ 9759 20 0C            jr nz,2F
 165+ 975B 7D               ld a,l
 166+ 975C C6 20            add a,$20
 167+ 975E 6F               ld l,a
 168+ 975F 38 06            jr c,2F
 169+ 9761 7C               ld a,h
 170+ 9762 D6 08            sub 8
 171+ 9764 67               ld h,a
 172+ 9765 18 00            jr 2F
 173+ 9767 7C           2 ld a,h
 174+ 9768 FE 58            cp $58
 175+ 976A 28 02            jr z,3F
 176+ 976C 10 E3            djnz 1B
 177+ 976E ED 7B F3 89  3 ld sp,(Stack)
 178+ 9772 C9           	ret
 179+ 9773
 180+ 9773              ; ---------------------------------------------------
 181+ 9773
 182+ 9773 ED 73 F3 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9777 FD F9        	ld sp,iy
 184+ 9779 06 08            ld b,8
 185+ 977B D1           1 pop de
 186+ 977C 7A           	ld a,d
 187+ 977D AE           	xor (hl)
 188+ 977E 77           	ld (hl),a
 189+ 977F 23           	inc hl
 190+ 9780 D1           	pop de
 191+ 9781 7B           	ld a,e
 192+ 9782 AE           	xor (hl)
 193+ 9783 77           	ld (hl),a
 194+ 9784 2B           	dec hl
 195+ 9785 24            	inc h
 196+ 9786 7C               ld a,h
 197+ 9787 E6 07            and 7
 198+ 9789 20 0A            jr nz,2F
 199+ 978B 7D               ld a,l
 200+ 978C C6 20            add a,$20
 201+ 978E 6F               ld l,a
 202+ 978F 38 04            jr c,2F
 203+ 9791 7C               ld a,h
 204+ 9792 D6 08            sub 8
 205+ 9794 67               ld h,a
 206+ 9795 7C           2 ld a,h
 207+ 9796 FE 58            cp $58
 208+ 9798 28 20            jr z,4F
 209+ 979A D1               pop de
 210+ 979B 7B           	ld a,e
 211+ 979C AE           	xor (hl)
 212+ 979D 77           	ld (hl),a
 213+ 979E 23           	inc hl
 214+ 979F 7A           	ld a,d
 215+ 97A0 AE           	xor (hl)
 216+ 97A1 77           	ld (hl),a
 217+ 97A2 2B           	dec hl
 218+ 97A3 24           	inc h
 219+ 97A4 7C               ld a,h
 220+ 97A5 E6 07            and 7
 221+ 97A7 20 0A            jr nz,3F
 222+ 97A9 7D               ld a,l
 223+ 97AA C6 20            add a,$20
 224+ 97AC 6F               ld l,a
 225+ 97AD 38 04            jr c,3F
 226+ 97AF 7C               ld a,h
 227+ 97B0 D6 08            sub 8
 228+ 97B2 67               ld h,a
 229+ 97B3 7C           3 ld a,h
 230+ 97B4 FE 58            cp $58
 231+ 97B6 28 02            jr z,4F
 232+ 97B8 10 C1            djnz 1B
 233+ 97BA ED 7B F3 89  4 ld sp,(Stack)
 234+ 97BE C9           	ret
 235+ 97BF
 236+ 97BF ED 73 F3 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97C3 FD F9        	ld sp,iy
 238+ 97C5 06 08            ld b,8
 239+ 97C7 D1           1 pop de
 240+ 97C8 D1           	pop de
 241+ 97C9 7B           	ld a,e
 242+ 97CA AE           	xor (hl)
 243+ 97CB 77           	ld (hl),a
 244+ 97CC 24            	inc h
 245+ 97CD 7C               ld a,h
 246+ 97CE E6 07            and 7
 247+ 97D0 20 0A            jr nz,2F
 248+ 97D2 7D               ld a,l
 249+ 97D3 C6 20            add a,$20
 250+ 97D5 6F               ld l,a
 251+ 97D6 38 04            jr c,2F
 252+ 97D8 7C               ld a,h
 253+ 97D9 D6 08            sub 8
 254+ 97DB 67               ld h,a
 255+ 97DC 7C           2 ld a,h
 256+ 97DD FE 58            cp $58
 257+ 97DF 28 1B            jr z,4F
 258+ 97E1 D1               pop de
 259+ 97E2 7A           	ld a,d
 260+ 97E3 AE           	xor (hl)
 261+ 97E4 77           	ld (hl),a
 262+ 97E5 24           	inc h
 263+ 97E6 7C               ld a,h
 264+ 97E7 E6 07            and 7
 265+ 97E9 20 0A            jr nz,3F
 266+ 97EB 7D               ld a,l
 267+ 97EC C6 20            add a,$20
 268+ 97EE 6F               ld l,a
 269+ 97EF 38 04            jr c,3F
 270+ 97F1 7C               ld a,h
 271+ 97F2 D6 08            sub 8
 272+ 97F4 67               ld h,a
 273+ 97F5 7C           3 ld a,h
 274+ 97F6 FE 58            cp $58
 275+ 97F8 28 02            jr z,4F
 276+ 97FA 10 CB            djnz 1B
 277+ 97FC ED 7B F3 89  4 ld sp,(Stack)
 278+ 9800 C9           	ret
 279+ 9801
 280+ 9801 ED 73 F3 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9805 FD F9        	ld sp,iy
 282+ 9807 06 08            ld b,8
 283+ 9809 D1           1 pop de
 284+ 980A 7B           	ld a,e
 285+ 980B AE           	xor (hl)
 286+ 980C 77           	ld (hl),a
 287+ 980D 23           	inc hl
 288+ 980E 7A           	ld a,d
 289+ 980F AE           	xor (hl)
 290+ 9810 77           	ld (hl),a
 291+ 9811 2B           	dec hl
 292+ 9812 24             	inc h
 293+ 9813 7C               ld a,h
 294+ 9814 E6 07            and 7
 295+ 9816 20 0A            jr nz,2F
 296+ 9818 7D               ld a,l
 297+ 9819 C6 20            add a,$20
 298+ 981B 6F               ld l,a
 299+ 981C 38 04            jr c,2F
 300+ 981E 7C               ld a,h
 301+ 981F D6 08            sub 8
 302+ 9821 67               ld h,a
 303+ 9822 7C           2 ld a,h
 304+ 9823 FE 58            cp $58
 305+ 9825 28 21            jr z,4F
 306+ 9827 D1               pop de
 307+ 9828 7A           	ld a,d
 308+ 9829 AE           	xor (hl)
 309+ 982A 77           	ld (hl),a
 310+ 982B 23           	inc hl
 311+ 982C D1               pop de
 312+ 982D 7B           	ld a,e
 313+ 982E AE           	xor (hl)
 314+ 982F 77           	ld (hl),a
 315+ 9830 2B           	dec hl
 316+ 9831 24           	inc h
 317+ 9832 7C               ld a,h
 318+ 9833 E6 07            and 7
 319+ 9835 20 0A            jr nz,3F
 320+ 9837 7D               ld a,l
 321+ 9838 C6 20            add a,$20
 322+ 983A 6F               ld l,a
 323+ 983B 38 04            jr c,3F
 324+ 983D 7C               ld a,h
 325+ 983E D6 08            sub 8
 326+ 9840 67               ld h,a
 327+ 9841 7C           3 ld a,h
 328+ 9842 FE 58            cp $58
 329+ 9844 28 02            jr z,4F
 330+ 9846 10 C1            djnz 1B
 331+ 9848 ED 7B F3 89  4 ld sp,(Stack)
 332+ 984C C9           	ret
 333+ 984D
 334+ 984D ED 73 F3 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9851 FD F9        	ld sp,iy
 336+ 9853 06 08            ld b,8
 337+ 9855 D1           1 pop de
 338+ 9856 7B           	ld a,e
 339+ 9857 AE           	xor (hl)
 340+ 9858 77           	ld (hl),a
 341+ 9859 24            	inc h
 342+ 985A 7C               ld a,h
 343+ 985B E6 07            and 7
 344+ 985D 20 0A            jr nz,2F
 345+ 985F 7D               ld a,l
 346+ 9860 C6 20            add a,$20
 347+ 9862 6F               ld l,a
 348+ 9863 38 04            jr c,2F
 349+ 9865 7C               ld a,h
 350+ 9866 D6 08            sub 8
 351+ 9868 67               ld h,a
 352+ 9869 7C           2 ld a,h
 353+ 986A FE 58            cp $58
 354+ 986C 28 1C            jr z,4F
 355+ 986E D1               pop de
 356+ 986F 7A           	ld a,d
 357+ 9870 AE           	xor (hl)
 358+ 9871 77           	ld (hl),a
 359+ 9872 24           	inc h
 360+ 9873 7C               ld a,h
 361+ 9874 E6 07            and 7
 362+ 9876 20 0A            jr nz,3F
 363+ 9878 7D               ld a,l
 364+ 9879 C6 20            add a,$20
 365+ 987B 6F               ld l,a
 366+ 987C 38 04            jr c,3F
 367+ 987E 7C               ld a,h
 368+ 987F D6 08            sub 8
 369+ 9881 67               ld h,a
 370+ 9882 7C           3 ld a,h
 371+ 9883 FE 58            cp $58
 372+ 9885 28 03            jr z,4F
 373+ 9887 D1               pop de
 374+ 9888 10 CB            djnz 1B
 375+ 988A ED 7B F3 89  4 ld sp,(Stack)
 376+ 988E C9           	ret
 377+ 988F
 378+ 988F              ; ---------------------------------------------------
 379+ 988F              ;
 380+ 988F              ;   27/02/23
 381+ 988F              ;
 382+ 988F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 988F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 988F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 988F
 386+ 988F ED 73 F3 89  Pinta_Disparo ld (Stack),sp
 387+ 9893 FD F9            ld sp,iy
 388+ 9895 06 04            ld b,4
 389+ 9897 D1           1 pop de
 390+ 9898 7B               ld a,e
 391+ 9899 AE               xor (hl)
 392+ 989A 77               ld (hl),a
 393+ 989B 23               inc hl
 394+ 989C 7A               ld a,d
 395+ 989D AE               xor (hl)
 396+ 989E 77               ld (hl),a
 397+ 989F 2B               dec hl
 398+ 98A0
 399+ 98A0 24               inc h
 400+ 98A1 7C               ld a,h
 401+ 98A2 E6 07            and 7
 402+ 98A4 20 0A            jr nz,2F
 403+ 98A6 7D               ld a,l
 404+ 98A7 C6 20            add a,$20
 405+ 98A9 6F               ld l,a
 406+ 98AA 38 04            jr c,2F
 407+ 98AC 7C               ld a,h
 408+ 98AD D6 08            sub 8
 409+ 98AF 67               ld h,a
 410+ 98B0 7C           2 ld a,h
 411+ 98B1 FE 58            cp $58
 412+ 98B3 28 02            jr z,3F
 413+ 98B5
 414+ 98B5 10 E0            djnz 1B
 415+ 98B7 ED 7B F3 89  3 ld sp,(Stack)
 416+ 98BB C9               ret
 417+ 98BC
# file closed: Rutinas_de_impresion_sprites.asm
1243  98BC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98BC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98BC              ;
   3+ 98BC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98BC              ;
   5+ 98BC              ; *****************************************************************************************************************************************************************************************
   6+ 98BC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98BC
   8+ 98BC 7C           calcula_tercio ld a,h
   9+ 98BD E6 18        	and $18
  10+ 98BF CB 2F        	sra a
  11+ 98C1 CB 2F        	sra a
  12+ 98C3 CB 2F        	sra a
  13+ 98C5 C9           	ret
  14+ 98C6
# file closed: calcula_tercio.asm
1244  98C6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98C6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98C6              ;
   3+ 98C6              ;
   4+ 98C6              ;	CLS.
   5+ 98C6              ;
   6+ 98C6              ;	Limpia la pantalla y define sus atributos.
   7+ 98C6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98C6              ;
   9+ 98C6              ;	COLORES: 0 ..... NEGRO
  10+ 98C6              ;    		 1 ..... AZUL
  11+ 98C6              ; 			 2 ..... ROJO
  12+ 98C6              ;			 3 ..... MAGENTA
  13+ 98C6              ; 			 4 ..... VERDE
  14+ 98C6              ; 			 5 ..... CIAN
  15+ 98C6              ;			 6 ..... AMARILLO
  16+ 98C6              ; 			 7 ..... BLANCO
  17+ 98C6              ;
  18+ 98C6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98C6              ;
  20+ 98C6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98C6
  22+ 98C6
  23+ 98C6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98C9 11 01 40     	LD DE,$4001
  25+ 98CC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98CF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98D1 ED B0        	LDIR
  28+ 98D3 01 FF 02     	LD BC,767
  29+ 98D6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98D7 ED B0        	LDIR
  31+ 98D9 C9           	ret
  32+ 98DA
# file closed: Cls.asm
1245  98DA              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98DA              ; ******************************************************************************************************************************************************************************************
   2+ 98DA              ;
   3+ 98DA              ;   20/05/23
   4+ 98DA              ;
   5+ 98DA              ;	Recompone_posicion_inicio
   6+ 98DA              ;
   7+ 98DA              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98DA              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98DA              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98DA              ;	_ a una u otra rutina.
  11+ 98DA
  12+ 98DA              Recompone_posicion_inicio
  13+ 98DA
  14+ 98DA 2A B5 89     	ld hl,(Posicion_inicio)
  15+ 98DD 7D           	ld a,l
  16+ 98DE E6 1F        	and $1f
  17+ 98E0 28 16        	jr z,1F
  18+ 98E2
  19+ 98E2 FE 1F        	cp $1f
  20+ 98E4 28 0D        	jr z,3F
  21+ 98E6
  22+ 98E6 21 DF 89     	ld hl,Ctrl_2
  23+ 98E9 CB C6        	set 0,(hl)
  24+ 98EB 2A A7 89     	ld hl,(Puntero_objeto)
  25+ 98EE 22 E2 89     	ld (Repone_puntero_objeto),hl
  26+ 98F1 18 08        	jr 2F
  27+ 98F3
  28+ 98F3 CD 94 9A     3 call Mov_left
  29+ 98F6 18 03        	jr 2F
  30+ 98F8
  31+ 98F8 CD 76 99     1 call Mov_right
  32+ 98FB 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98FE 22 A7 89     	ld (Puntero_objeto),hl
  34+ 9901 C9           	ret
  35+ 9902
  36+ 9902              ; ******************************************************************************************************************************************************************************************
  37+ 9902              ;
  38+ 9902              ;   27/05/23
  39+ 9902              ;
  40+ 9902              ;	Mov_down
  41+ 9902              ;
  42+ 9902              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9902              ;
  44+ 9902              ;
  45+ 9902              Mov_down
  46+ 9902
  47+ 9902 CD 64 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9905              ;																	; _ repone (Puntero_objeto).
  49+ 9905 21 D1 89     	ld hl,Ctrl_0
  50+ 9908 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 990A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 990A              ; 																	; _ en el caso de que no lo haya.
  53+ 990A 3A BB 89     	ld a,(Vel_down)
  54+ 990D 47           	ld b,a
  55+ 990E 2A A5 89         ld hl,(Posicion_actual)
  56+ 9911 CD BC 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9914 E6 02        	and 2
  58+ 9916 28 0F        	jr z,1F
  59+ 9918
  60+ 9918              ; Nos encontramos en el último tercio de pantalla.
  61+ 9918              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9918
  63+ 9918 7C           	ld a,h
  64+ 9919 FE 57        	cp $57
  65+ 991B 20 0A        	jr nz,1F
  66+ 991D 7D           	ld a,l
  67+ 991E C6 20        	add $20
  68+ 9920 30 05        	jr nc,1F
  69+ 9922
  70+ 9922              ; ------------------------------
  71+ 9922 CD 12 9C     	call Reaparece_arriba
  72+ 9925              ;	call Reinicio
  73+ 9925              ; ------------------------------
  74+ 9925
  75+ 9925 18 08        	jr 3F
  76+ 9927 CD FC 95     1 call NextScan
  77+ 992A 22 A5 89     	ld (Posicion_actual),hl
  78+ 992D 10 E2            djnz 2B
  79+ 992F CD 28 9C     3 call Genera_coordenadas
  80+ 9932 C9           	ret
  81+ 9933
  82+ 9933              ; ******************************************************************************************************************************************************************************************
  83+ 9933              ;
  84+ 9933              ;   27/05/23
  85+ 9933              ;
  86+ 9933              ;	Mov_up
  87+ 9933              ;
  88+ 9933              ; 	Mueve el Sprite hacia arriba.
  89+ 9933              ;
  90+ 9933              ;
  91+ 9933              Mov_up
  92+ 9933
  93+ 9933 CD 64 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9936              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9936 21 D1 89     	ld hl,Ctrl_0
  96+ 9939 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 993B              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 993B              ; 																		; _ en el caso de que no lo haya.
  99+ 993B 3A BA 89     	ld a,(Vel_up)
 100+ 993E 47           	ld b,a
 101+ 993F 2A A5 89     	ld hl,(Posicion_actual)
 102+ 9942 CD BC 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9945 A7           	and a
 104+ 9946 20 10        	jr nz,1F
 105+ 9948
 106+ 9948              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9948              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9948
 109+ 9948 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9949 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 994B 20 0B            jr nz,1F
 112+ 994D 7D               ld a,l
 113+ 994E D6 20            sub $20
 114+ 9950 30 06            jr nc,1F
 115+ 9952 25               dec h
 116+ 9953
 117+ 9953              ; -----------------------------
 118+ 9953 CD 02 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9956              ;	call Reinicio
 120+ 9956              ; -----------------------------
 121+ 9956
 122+ 9956 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9958 CD 0B 96     1 call PreviousScan
 124+ 995B 22 A5 89     	ld (Posicion_actual),hl
 125+ 995E 10 E2            djnz 3B
 126+ 9960 CD 28 9C     2 call Genera_coordenadas
 127+ 9963 C9           	ret
 128+ 9964
 129+ 9964              ; -----------------------------
 130+ 9964              ;
 131+ 9964              ;	27/5/23
 132+ 9964              ;
 133+ 9964              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9964              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9964              ;
 136+ 9964              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9964              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9964              ;
 139+ 9964              ;	Modifica: A y (Puntero_objeto).
 140+ 9964
 141+ 9964 3A DF 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9967 CB 47        	bit 0,a
 143+ 9969 C8           	ret z
 144+ 996A CB 87        	res 0,a
 145+ 996C 32 DF 89     	ld (Ctrl_2),a
 146+ 996F 2A E2 89     	ld hl,(Repone_puntero_objeto)
 147+ 9972 22 A7 89     	ld (Puntero_objeto),hl
 148+ 9975 C9           	ret
 149+ 9976
 150+ 9976              ; ******************************************************************************************************************************************************************************************
 151+ 9976              ;
 152+ 9976              ;	19/10/22
 153+ 9976              ;
 154+ 9976              ;	Mov_right.
 155+ 9976              ;
 156+ 9976              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9976              ;
 158+ 9976
 159+ 9976 21 D1 89     Mov_right ld hl,Ctrl_0
 160+ 9979 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 997B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 997B              ; 																	; _ en el caso de que no lo haya.
 163+ 997B 3A D1 89     	ld a,(Ctrl_0)
 164+ 997E CB 77        	bit 6,a
 165+ 9980 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 9982
 167+ 9982 CD B0 9B     	call Stop_Amadeus_right
 168+ 9985 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 9986 18 4D        	jr 8F
 170+ 9988
 171+ 9988 3A A9 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 998B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 998D 20 46        	jr nz,8F
 174+ 998F
 175+ 998F 3A AB 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 9992 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 9993 28 40        	jr z,8F
 178+ 9995
 179+ 9995              ; ---------- ---------- ----------
 180+ 9995              ;
 181+ 9995              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 9995
 183+ 9995 3A B9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 9998 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 999A 28 11        	jr z,1F
 186+ 999C 38 06        	jr c,6F
 187+ 999E FE 04        	cp 4
 188+ 99A0 28 14        	jr z,7F
 189+ 99A2 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99A4
 191+ 99A4              ; ---------- ---------- ----------
 192+ 99A4              ;
 193+ 99A4              ; Perfiles de velocidad
 194+ 99A4              ;
 195+ 99A4
 196+ 99A4 3A AB 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99A7 FE FE        	cp $fe
 198+ 99A9 20 2A        	jr nz,8F
 199+ 99AB 18 10        	jr 3F
 200+ 99AD 3A AB 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99B0 FE FD        	cp $fd
 202+ 99B2 20 21        	jr nz,8F
 203+ 99B4 18 07        	jr 3F
 204+ 99B6 3A AB 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99B9 FE FB        	cp $fb
 206+ 99BB 20 18        	jr nz,8F
 207+ 99BD
 208+ 99BD              ; ---------- ---------- ----------
 209+ 99BD
 210+ 99BD              3
 211+ 99BD CD F0 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99C0              ;	call Reinicio
 213+ 99C0
 214+ 99C0              ; ---------- ---------- ----------
 215+ 99C0              ;
 216+ 99C0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99C0
 218+ 99C0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99C2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99C3 CD DC 99     	call DESPLZ_DER
 221+ 99C6 C1           	pop bc
 222+ 99C7 10 F9        	djnz 5B
 223+ 99C9 2A A5 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99CC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99CD 22 A5 89     	ld (Posicion_actual),hl
 226+ 99D0 CD 28 9C     	call Genera_coordenadas
 227+ 99D3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99D5
 229+ 99D5              ; ---------- ---------- ----------
 230+ 99D5
 231+ 99D5 2A A5 89     8 ld hl,(Posicion_actual)
 232+ 99D8 CD DC 99     	call DESPLZ_DER
 233+ 99DB C9           2 ret
 234+ 99DC
 235+ 99DC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99DC              ;
 237+ 99DC              ;	22/9/22
 238+ 99DC              ;
 239+ 99DC
 240+ 99DC CD EB 99     DESPLZ_DER call Desplaza_derecha
 241+ 99DF CD 37 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99E2 CD 60 9A         call Ciclo_completo
 243+ 99E5 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 99E8 CB FE        	set 7,(hl)
 245+ 99EA C9           	ret
 246+ 99EB
 247+ 99EB              ; ******************************************************************************************************************************************************************************************
 248+ 99EB              ;	15/02/23
 249+ 99EB              ;
 250+ 99EB
 251+ 99EB 3A B9 89     Desplaza_derecha ld a,(Vel_right)
 252+ 99EE 47           	ld b,a
 253+ 99EF 2A B1 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 99F2 23           1 inc hl
 255+ 99F3 23           	inc hl
 256+ 99F4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 99F6 22 B1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 99F9 CD 0A 8D     	call Extrae_address
 259+ 99FC 22 A7 89     	ld (Puntero_objeto),hl
 260+ 99FF
 261+ 99FF              ; Modifica (Puntero_DESPLZ_izq).
 262+ 99FF
 263+ 99FF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 99FF              ; Cuántos movimientos hemos hecho ??
 265+ 99FF              ; DE contiene (Puntero_DESPLZ_der).
 266+ 99FF
 267+ 99FF 2A AD 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A02 EB           	ex de,hl
 269+ 9A03 A7           	and a
 270+ 9A04 ED 52        	sbc hl,de
 271+ 9A06 CB 3D        	srl l
 272+ 9A08 3E 08        6 ld a,8
 273+ 9A0A 95           	sub l
 274+ 9A0B 30 1E        	jr nc,3F
 275+ 9A0D
 276+ 9A0D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A0D              ; B="0".
 278+ 9A0D
 279+ 9A0D 04           4 inc b
 280+ 9A0E 3C           	inc a
 281+ 9A0F 20 FC        	jr nz,4B
 282+ 9A11 78           	ld a,b
 283+ 9A12 08           	ex af,af
 284+ 9A13 2A AD 89     	ld hl,(Indice_Sprite_der)
 285+ 9A16 23           5 inc hl
 286+ 9A17 23           	inc hl
 287+ 9A18 10 FC        	djnz 5B
 288+ 9A1A 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A1D CD 0A 8D     	call Extrae_address
 290+ 9A20 22 A7 89     	ld (Puntero_objeto),hl
 291+ 9A23
 292+ 9A23              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A23              ; _(Posicion_actual).
 294+ 9A23
 295+ 9A23 21 A5 89     	ld hl,Posicion_actual
 296+ 9A26 34           	inc (hl)
 297+ 9A27 08               ex af,af
 298+ 9A28 6F           	ld l,a
 299+ 9A29 18 DD        	jr 6B
 300+ 9A2B
 301+ 9A2B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A2B
 303+ 9A2B 47           3 ld b,a
 304+ 9A2C 2A AF 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A2F 23           2 inc hl
 306+ 9A30 23           	inc hl
 307+ 9A31 10 FC        	djnz 2B
 308+ 9A33 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A36 C9           8 ret
 310+ 9A37
 311+ 9A37              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A37              ;
 313+ 9A37              ;	24/7/22
 314+ 9A37              ;
 315+ 9A37              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A37              ;
 317+ 9A37              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A37              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A37              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A37
 321+ 9A37 3A AB 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A3A A7           	and a
 323+ 9A3B 20 1F        	jr nz,1F
 324+ 9A3D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A3F 32 AB 89         ld (CTRL_DESPLZ),a
 326+ 9A42
 327+ 9A42 21 A4 89     	ld hl,Columns
 328+ 9A45 34           	inc (hl)
 329+ 9A46 3A B7 89     	ld a,(Cuad_objeto)
 330+ 9A49 E6 01        	and 1
 331+ 9A4B 28 0F        	jr z,1F
 332+ 9A4D 2A A5 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A50 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A51 22 A5 89     	ld (Posicion_actual),hl
 335+ 9A54 CD 28 9C     	call Genera_coordenadas
 336+ 9A57 CD BC 9B     	call Inc_CTRL_DESPLZ
 337+ 9A5A 18 03        	jr 2F
 338+ 9A5C CD BC 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A5F C9           2 ret
 340+ 9A60
 341+ 9A60              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A60              ;
 343+ 9A60              ;	24/7/22
 344+ 9A60              ;
 345+ 9A60              ;	Ciclo_completo.
 346+ 9A60              ;
 347+ 9A60              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A60              ;
 349+ 9A60              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A60              ; 	Decrementamos (Columns).
 351+ 9A60              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A60              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A60
 354+ 9A60
 355+ 9A60 3A AB 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A63 FE FF        	cp $ff
 357+ 9A65 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A67 E6 F0        	and $f0
 359+ 9A69 20 28        	jr nz,3F
 360+ 9A6B
 361+ 9A6B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A6B
 363+ 9A6B 3A AB 89     	ld a,(CTRL_DESPLZ)
 364+ 9A6E 47           	ld b,a
 365+ 9A6F 3E F8        	ld a,$f8
 366+ 9A71 80           	add b
 367+ 9A72 32 AB 89     	ld (CTRL_DESPLZ),a
 368+ 9A75 18 1C        	jr 3F
 369+ 9A77 21 A4 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A7A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A7B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A7C 32 AB 89     	ld (CTRL_DESPLZ),a
 373+ 9A7F 3A B7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A82 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9A84 20 0A        	jr nz,2F
 376+ 9A86 2A A5 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9A89 23           	inc hl
 378+ 9A8A 22 A5 89     	ld (Posicion_actual),hl
 379+ 9A8D CD 28 9C     	call Genera_coordenadas
 380+ 9A90
 381+ 9A90              ; Inicia el puntero de Sprite.
 382+ 9A90
 383+ 9A90 CD 21 8D     2 call Inicia_puntero_objeto_der
 384+ 9A93 C9           3 ret
 385+ 9A94
 386+ 9A94              ; ******************************************************************************************************************************************************************************************
 387+ 9A94              ;
 388+ 9A94              ;	15/02/23
 389+ 9A94              ;
 390+ 9A94              ;	Mov_left.
 391+ 9A94              ;
 392+ 9A94              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9A94              ;
 394+ 9A94 21 D1 89     Mov_left ld hl,Ctrl_0
 395+ 9A97 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9A99              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9A99              ; 																	; _ en el caso de que no lo haya.
 398+ 9A99 3A D1 89     	ld a,(Ctrl_0)
 399+ 9A9C CB 77        	bit 6,a
 400+ 9A9E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9AA0
 402+ 9AA0 CD B6 9B     	call Stop_Amadeus_left
 403+ 9AA3 C8           	ret z
 404+ 9AA4 20 4A        	jr nz,8F
 405+ 9AA6
 406+ 9AA6 3A A9 89     11 ld a,(Coordenada_X)
 407+ 9AA9 A7           	and a
 408+ 9AAA 20 44        	jr nz,8F
 409+ 9AAC
 410+ 9AAC 3A AB 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9AAF A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9AB0 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9AB2
 414+ 9AB2              ; ---------- ---------- ----------
 415+ 9AB2
 416+ 9AB2 3A B8 89     	ld a,(Vel_left)
 417+ 9AB5 FE 02        	cp 2
 418+ 9AB7 28 0F        	jr z,1F
 419+ 9AB9 38 04        	jr c,6F
 420+ 9ABB FE 04        	cp 4
 421+ 9ABD 28 12        	jr z,7F
 422+ 9ABF
 423+ 9ABF              ; ---------- ---------- ----------
 424+ 9ABF
 425+ 9ABF 3A AB 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AC2 FE F8        	cp $f8
 427+ 9AC4 20 2A        	jr nz,8F
 428+ 9AC6 18 10        	jr 4F
 429+ 9AC8 3A AB 89     1 ld a,(CTRL_DESPLZ)
 430+ 9ACB FE F9        	cp $f9
 431+ 9ACD 20 21        	jr nz,8F
 432+ 9ACF 18 07        	jr 4F
 433+ 9AD1 3A AB 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AD4 FE FB        	cp $fb
 435+ 9AD6 20 18        	jr nz,8F
 436+ 9AD8
 437+ 9AD8              ; ---------- ---------- ----------
 438+ 9AD8
 439+ 9AD8              4
 440+ 9AD8 CD DE 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9ADB              ;	call Reinicio
 442+ 9ADB
 443+ 9ADB              ; ---------- ---------- ----------
 444+ 9ADB
 445+ 9ADB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9ADD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9ADE
 448+ 9ADE              ;	ld hl,(Indice_Sprite_izq)
 449+ 9ADE              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9ADE
 451+ 9ADE CD F7 9A     	call DESPLZ_IZQ
 452+ 9AE1 C1           	pop bc
 453+ 9AE2 10 F9        	djnz 5B
 454+ 9AE4 2A A5 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9AE7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9AE8 22 A5 89     	ld (Posicion_actual),hl
 457+ 9AEB CD 28 9C     	call Genera_coordenadas
 458+ 9AEE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9AF0
 460+ 9AF0              ; ---------- ---------- ----------
 461+ 9AF0
 462+ 9AF0              ; Movemos, no hay recolocación.
 463+ 9AF0
 464+ 9AF0 2A A5 89     8 ld hl,(Posicion_actual)
 465+ 9AF3 CD F7 9A     	call DESPLZ_IZQ
 466+ 9AF6 C9           2 ret
 467+ 9AF7
 468+ 9AF7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9AF7              ;
 470+ 9AF7              ;	22/9/22
 471+ 9AF7
 472+ 9AF7              DESPLZ_IZQ
 473+ 9AF7
 474+ 9AF7 CD 06 9B     	call Desplaza_izquierda
 475+ 9AFA CD 52 9B         call modifica_parametros_1er_DESPLZ
 476+ 9AFD CD 7A 9B     	call Ciclo_completo_2
 477+ 9B00 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B03 CB BE        	res 7,(hl)
 479+ 9B05 C9           	ret
 480+ 9B06
 481+ 9B06              Desplaza_izquierda
 482+ 9B06
 483+ 9B06 3A B8 89     	ld a,(Vel_left)
 484+ 9B09 47           	ld b,a
 485+ 9B0A 2A B3 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B0D 23           1 inc hl
 487+ 9B0E 23           	inc hl
 488+ 9B0F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B11 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B14 CD 0A 8D     	call Extrae_address
 491+ 9B17 22 A7 89     	ld (Puntero_objeto),hl
 492+ 9B1A
 493+ 9B1A              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B1A
 495+ 9B1A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B1A              ; Cuántos movimientos hemos hecho ??
 497+ 9B1A              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B1A
 499+ 9B1A 2A AF 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B1D EB           	ex de,hl
 501+ 9B1E A7           	and a
 502+ 9B1F ED 52        	sbc hl,de
 503+ 9B21 CB 3D        	srl l
 504+ 9B23 3E 08        6 ld a,8
 505+ 9B25 95           	sub l
 506+ 9B26 30 1E        	jr nc,3F
 507+ 9B28
 508+ 9B28              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B28              ; B="0".
 510+ 9B28
 511+ 9B28 04           4 inc b
 512+ 9B29 3C           	inc a
 513+ 9B2A 20 FC        	jr nz,4B
 514+ 9B2C 78           	ld a,b
 515+ 9B2D 08           	ex af,af
 516+ 9B2E 2A AF 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B31 23           5 inc hl
 518+ 9B32 23           	inc hl
 519+ 9B33 10 FC        	djnz 5B
 520+ 9B35 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B38 CD 0A 8D     	call Extrae_address
 522+ 9B3B 22 A7 89     	ld (Puntero_objeto),hl
 523+ 9B3E
 524+ 9B3E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B3E              ; _(Posicion_actual).
 526+ 9B3E
 527+ 9B3E 21 A5 89     	ld hl,Posicion_actual
 528+ 9B41 35           	dec (hl)
 529+ 9B42 08           	ex af,af
 530+ 9B43 6F           	ld l,a
 531+ 9B44 18 DD        	jr 6B
 532+ 9B46
 533+ 9B46              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B46
 535+ 9B46 47           3 ld b,a
 536+ 9B47 2A AD 89     	ld hl,(Indice_Sprite_der)
 537+ 9B4A 23           2 inc hl
 538+ 9B4B 23           	inc hl
 539+ 9B4C 10 FC        	djnz 2B
 540+ 9B4E 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B51 C9           8 ret
 542+ 9B52
 543+ 9B52              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B52              ;
 545+ 9B52              ;	modifica_parametros_1er_DESPLZ
 546+ 9B52              ;
 547+ 9B52              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B52              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B52              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B52
 551+ 9B52 3A AB 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B55 A7           	and a
 553+ 9B56 20 1E        	jr nz,1F
 554+ 9B58 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B59 32 AB 89         ld (CTRL_DESPLZ),a
 556+ 9B5C 21 A4 89     	ld hl,Columns
 557+ 9B5F 34           	inc (hl)
 558+ 9B60 3A B7 89     	ld a,(Cuad_objeto)
 559+ 9B63 E6 01        	and 1
 560+ 9B65 20 0F        	jr nz,1F
 561+ 9B67 2A A5 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B6A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B6B 22 A5 89     	ld (Posicion_actual),hl
 564+ 9B6E CD 28 9C     	call Genera_coordenadas
 565+ 9B71 CD CD 9B     	call Dec_CTRL_DESPLZ
 566+ 9B74 18 03        	jr 2F
 567+ 9B76 CD CD 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B79 C9           2 ret
 569+ 9B7A
 570+ 9B7A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B7A
 572+ 9B7A 3A AB 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B7D FE F7        	cp $f7
 574+ 9B7F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B81 30 2C        	jr nc,3F
 576+ 9B83
 577+ 9B83              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9B83
 579+ 9B83 06 00        	ld b,0
 580+ 9B85 04           4 inc b
 581+ 9B86 3C           	inc a
 582+ 9B87 FE F7        	cp $f7
 583+ 9B89 20 FA        	jr nz,4B
 584+ 9B8B 3E FF        	ld a,$ff
 585+ 9B8D 90           	sub b
 586+ 9B8E 32 AB 89     	ld (CTRL_DESPLZ),a
 587+ 9B91 18 1C        	jr 3F
 588+ 9B93
 589+ 9B93              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9B93
 591+ 9B93 21 A4 89     1 ld hl,Columns
 592+ 9B96 35           	dec (hl)
 593+ 9B97 AF           	xor a
 594+ 9B98 32 AB 89     	ld (CTRL_DESPLZ),a
 595+ 9B9B 3A B7 89     	ld a,(Cuad_objeto)
 596+ 9B9E E6 01        	and 1
 597+ 9BA0 28 0A        	jr z,2F
 598+ 9BA2 2A A5 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BA5 2B           	dec hl
 600+ 9BA6 22 A5 89     	ld (Posicion_actual),hl
 601+ 9BA9 CD 28 9C     	call Genera_coordenadas
 602+ 9BAC
 603+ 9BAC              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BAC
 605+ 9BAC CD 34 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BAF C9           3 ret
 607+ 9BB0
 608+ 9BB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BB0              ;
 610+ 9BB0              ;	19/10/22
 611+ 9BB0              ;
 612+ 9BB0              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BB0              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BB0
 615+ 9BB0 3A A9 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BB3 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BB5 C9           	ret
 618+ 9BB6
 619+ 9BB6              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BB6              ;
 621+ 9BB6              ;	19/10/22
 622+ 9BB6              ;
 623+ 9BB6              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BB6              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BB6
 626+ 9BB6 3A A9 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BB9 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BBB C9           	ret
 629+ 9BBC
 630+ 9BBC              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BBC              ;
 632+ 9BBC              ;	24/7/22
 633+ 9BBC              ;
 634+ 9BBC              ;	Inc_CTRL_DESPLZ
 635+ 9BBC              ;
 636+ 9BBC              ;
 637+ 9BBC              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BBC
 639+ 9BBC 21 AB 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BBF 3A B9 89     	ld a,(Vel_right)
 641+ 9BC2 A7           	and a
 642+ 9BC3 28 06        	jr z,1F
 643+ 9BC5 47           	ld b,a
 644+ 9BC6 34           3 inc (hl)
 645+ 9BC7 10 FD        	djnz 3B
 646+ 9BC9 18 01        	jr 2F
 647+ 9BCB 34           1 inc (hl)
 648+ 9BCC C9           2 ret
 649+ 9BCD
 650+ 9BCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BCD              ;
 652+ 9BCD              ;	5/2/23
 653+ 9BCD              ;
 654+ 9BCD              ;	Dec_CTRL_DESPLZ
 655+ 9BCD              ;
 656+ 9BCD              ;
 657+ 9BCD              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BCD
 659+ 9BCD 21 AB 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BD0 3A B8 89     	ld a,(Vel_left)
 661+ 9BD3 A7           	and a
 662+ 9BD4 28 06        	jr z,1F
 663+ 9BD6 47           	ld b,a
 664+ 9BD7 35           3 dec (hl)
 665+ 9BD8 10 FD        	djnz 3B
 666+ 9BDA 18 01        	jr 2F
 667+ 9BDC 35           1 dec (hl)
 668+ 9BDD C9           2 ret
 669+ 9BDE
 670+ 9BDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BDE
 672+ 9BDE 2A A5 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BE1 01 1F 00     	ld bc,31
 674+ 9BE4 A7           	and a
 675+ 9BE5 ED 4A        	adc hl,bc
 676+ 9BE7 22 A5 89     	ld (Posicion_actual),hl
 677+ 9BEA 21 D1 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9BED CB C6        	set 0,(hl)
 679+ 9BEF C9           	ret
 680+ 9BF0
 681+ 9BF0              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9BF0
 683+ 9BF0 2A A5 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9BF3 01 1F 00     	ld bc,31
 685+ 9BF6 A7           	and a
 686+ 9BF7 ED 42        	sbc hl,bc
 687+ 9BF9 22 A5 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9BFC 21 D1 89     	ld hl,Ctrl_0
 689+ 9BFF CB CE        	set 1,(hl)
 690+ 9C01 C9           	ret
 691+ 9C02
 692+ 9C02              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C02
 694+ 9C02 24           Reaparece_abajo inc h
 695+ 9C03 01 E0 17     	ld bc,$17e0
 696+ 9C06 A7           	and a
 697+ 9C07 ED 4A        	adc hl,bc
 698+ 9C09 22 A5 89     	ld (Posicion_actual),hl
 699+ 9C0C 21 D1 89     	ld hl,Ctrl_0
 700+ 9C0F CB D6        	set 2,(hl)
 701+ 9C11 C9           	ret
 702+ 9C12
 703+ 9C12              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C12
 705+ 9C12 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C15 A7           	and a
 707+ 9C16 ED 42        	sbc hl,bc
 708+ 9C18 22 A5 89     	ld (Posicion_actual),hl
 709+ 9C1B 21 D1 89     	ld hl,Ctrl_0
 710+ 9C1E CB DE        	set 3,(hl)
 711+ 9C20 C9           	ret
 712+ 9C21
 713+ 9C21              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C21
 715+ 9C21 2A B5 89     Reinicio ld hl,(Posicion_inicio)
 716+ 9C24 22 A5 89     	ld (Posicion_actual),hl
 717+ 9C27 C9           	ret
# file closed: Direcciones.asm
1246  9C28              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C28              ; ------------------------------------------------------------------------
   2+ 9C28              ;
   3+ 9C28              ;	02/04/23
   4+ 9C28              ;
   5+ 9C28              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C28              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C28              ;
   8+ 9C28              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C28              ;
  10+ 9C28              ;	Modifica: A,BC y DE.
  11+ 9C28
  12+ 9C28 C5           Genera_coordenadas push bc
  13+ 9C29 E5           	push hl
  14+ 9C2A D5           	push de
  15+ 9C2B
  16+ 9C2B 2A A5 89     	ld hl,(Posicion_actual)
  17+ 9C2E
  18+ 9C2E 7D           	ld a,l
  19+ 9C2F E6 1F        	and $1f
  20+ 9C31 32 A9 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C34
  22+ 9C34 CD BC 98     	call calcula_tercio
  23+ 9C37 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C38
  25+ 9C38 1E 00        	ld e,0
  26+ 9C3A 7D           	ld a,l
  27+ 9C3B E6 E0        	and $e0
  28+ 9C3D 28 01        	jr z,1F
  29+ 9C3F 04           	inc b
  30+ 9C40
  31+ 9C40 04           1 inc b
  32+ 9C41 05           	dec b
  33+ 9C42 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C44              ;														; _ , salimos.
  35+ 9C44 1C           3 inc e
  36+ 9C45 D6 20        	sub 32
  37+ 9C47 20 FB        	jr nz,3B
  38+ 9C49 10 F5        	djnz 1B
  39+ 9C4B
  40+ 9C4B 7B           2 ld a,e
  41+ 9C4C 32 AA 89     	ld (Coordenada_y),a
  42+ 9C4F
  43+ 9C4F D1           	pop de
  44+ 9C50 E1           	pop hl
  45+ 9C51 C1           	pop bc
  46+ 9C52
  47+ 9C52 C9           	ret
  48+ 9C53
  49+ 9C53              ; ------------------------------------------------------------------------
  50+ 9C53              ;	28/05/23
  51+ 9C53              ;
  52+ 9C53              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C53              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C53              ;
  55+ 9C53              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C53              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C53              ;
  58+ 9C53              ;		DE="$120d"
  59+ 9C53              ;
  60+ 9C53              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C53              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C53              ;
  63+ 9C53              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C53
  65+ 9C53              ;	Modifica: A,BC y DE.
  66+ 9C53
  67+ 9C53
  68+ 9C53              Genera_coordenadas_disparo
  69+ 9C53
  70+ 9C53              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C53
  72+ 9C53 7D           	ld a,l
  73+ 9C54 E6 1F        	and $1f
  74+ 9C56 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C57 CD BC 98     	call calcula_tercio
  76+ 9C5A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C5B 1E 00        	ld e,0
  78+ 9C5D 7D           	ld a,l
  79+ 9C5E E6 E0        	and $e0
  80+ 9C60 28 01        	jr z,1F
  81+ 9C62 04           	inc b
  82+ 9C63 1C           1 inc e
  83+ 9C64 D6 20        	sub 32
  84+ 9C66 20 FB        	jr nz,1B
  85+ 9C68 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C6A C9           	ret
  87+ 9C6B
# file closed: Genera_coordenadas.asm
1247  9C6B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C6B
   2+ 9C6B
   3+ 9C6B              ;   11/8/22
   4+ 9C6B              ;
   5+ 9C6B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C6B              ;
   7+ 9C6B              ;   Mov_obj.asm
   8+ 9C6B              ;
   9+ 9C6B              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9C6B              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9C6B              ;
  12+ 9C6B              ;   Codificación:
  13+ 9C6B              ;
  14+ 9C6B              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9C6B
  16+ 9C6B              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9C6B
  18+ 9C6B 02 40 00     Arriba db 2,%01000000,0
  19+ 9C6E 02 80 00     Abajo db 2,%10000000,0
  20+ 9C71 02 20 00     Derecha db 2,%00100000,0
  21+ 9C74 02 10 00     Izquierda db 2,%00010000,0
  22+ 9C77 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9C7B 60 42 60 40
  22+ 9C7F 63
  23+ 9C80 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9C84 22 A3 80 A0
  24+ 9C88 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9C8C 84 A0 83 A0
  25+ 9C90 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9C94 80 A3 22 A0
  26+ 9C98 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9C9C 40 60 42 60
  27+ 9CA0 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9CA4
  29+ 9CA4 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9CA8 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9CAC 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9CB0 84 00
  32+ 9CB2 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9CB6 84 00
  33+ 9CB8 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9CBC 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9CC0 1F 1F 1F 1F
  35+ 9CC4 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9CC8 1F 1F 1F 1F
  35+ 9CCC 1F
  36+ 9CCD 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9CD1 2F 2F 2F 2F
  36+ 9CD5 2F 2F
  37+ 9CD7 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9CDB 2F 2F 00
  38+ 9CDE
  39+ 9CDE              ; ----- ----- ----- ----- -----
  40+ 9CDE
  41+ 9CDE BC 9C        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9CE0 B8 9C        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9CE2 74 9C        Indice_mov_Izquierda defw Izquierda
  44+ 9CE4 71 9C        Indice_mov_Derecha defw Derecha
  45+ 9CE6 6E 9C        Indice_mov_Abajo defw Abajo
  46+ 9CE8 6B 9C        Indice_mov_Arriba defw Arriba
  47+ 9CEA A8 9C        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9CEC AC 9C        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9CEE A4 9C        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9CF0 B2 9C        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9CF2 77 9C        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9CF4              ; ----- ----- ----- ----- -----
  53+ 9CF4
  54+ 9CF4 3A D8 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9CF7 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9CF8 28 02            jr z,1F
  57+ 9CFA 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9CFC 3A D9 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9CFF C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9D01 32 D9 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9D04              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9D04 2A D6 89         ld hl,(Puntero_mov)
  63+ 9D07 7E               ld a,(hl)
  64+ 9D08 32 D8 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9D0B 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9D0C 22 D6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9D0F
  68+ 9D0F 3A DA 89     Decoder ld a,(Repetimos_db)
  69+ 9D12 A7               and a
  70+ 9D13 20 0C            jr nz,12F
  71+ 9D15 2A D6 89         ld hl,(Puntero_mov)
  72+ 9D18 7E               ld a,(hl)
  73+ 9D19 A7               and a
  74+ 9D1A 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9D1C E6 0F            and $0f
  76+ 9D1E 32 DA 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9D21              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9D21 2A D6 89     12 ld hl,(Puntero_mov)
  79+ 9D24 CB 7E            bit 7,(hl)
  80+ 9D26 28 03            jr z,2F
  81+ 9D28 CD 02 99         call Mov_down
  82+ 9D2B 2A D6 89     2 ld hl, (Puntero_mov)
  83+ 9D2E CB 76            bit 6,(hl)
  84+ 9D30 28 03            jr z,3F
  85+ 9D32 CD 33 99         call Mov_up
  86+ 9D35 2A D6 89     3 ld hl, (Puntero_mov)
  87+ 9D38 CB 6E            bit 5,(hl)
  88+ 9D3A 28 03            jr z,4F
  89+ 9D3C CD 76 99         call Mov_right
  90+ 9D3F 2A D6 89     4 ld hl, (Puntero_mov)
  91+ 9D42 CB 66            bit 4,(hl)
  92+ 9D44 28 03            jr z,5F
  93+ 9D46 CD 94 9A         call Mov_left
  94+ 9D49
  95+ 9D49              ; ---------- --------- --------- ---------- ----------
  96+ 9D49
  97+ 9D49 3A DA 89     5 ld a,(Repetimos_db)
  98+ 9D4C A7               and a
  99+ 9D4D 28 07            jr z,6F
 100+ 9D4F 3D               dec a
 101+ 9D50 32 DA 89         ld (Repetimos_db),a
 102+ 9D53 28 01            jr z,6f
 103+ 9D55 C9           11 ret
 104+ 9D56 21 D8 89     6 ld hl,Contador_db_mov
 105+ 9D59 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9D5A 2A D6 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9D5D 23               inc hl
 108+ 9D5E 22 D6 89         ld (Puntero_mov),hl
 109+ 9D61 18 F2            jr 11B
 110+ 9D63 2A D4 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9D66 3A D9 89         ld a,(Incrementa_puntero)
 112+ 9D69 47               ld b,a
 113+ 9D6A 23           8 inc hl
 114+ 9D6B 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9D6D 5E               ld e,(hl)
 116+ 9D6E 23               inc hl
 117+ 9D6F 56               ld d,(hl)
 118+ 9D70 EB               ex de,hl
 119+ 9D71 22 D6 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9D74 18 DF            jr 11B
 121+ 9D76
 122+ 9D76              ; ---------- --------- --------- ---------- ----------
 123+ 9D76              ;
 124+ 9D76              ;   11/8/22
 125+ 9D76              ;
 126+ 9D76              ;   Prepara_Puntero_mov
 127+ 9D76
 128+ 9D76 E5           Prepara_Puntero_mov push hl
 129+ 9D77 D5               push de
 130+ 9D78 2A D4 89         ld hl,(Puntero_indice_mov)
 131+ 9D7B 5E               ld e,(hl)
 132+ 9D7C 23               inc hl
 133+ 9D7D 56               ld d,(hl)
 134+ 9D7E EB               ex de,hl
 135+ 9D7F 22 D6 89         ld (Puntero_mov),hl
 136+ 9D82 D1               pop de
 137+ 9D83 E1               pop hl
 138+ 9D84 C9               ret
 139+ 9D85
 140+ 9D85              ; ---------- --------- --------- ---------- ----------
 141+ 9D85              ;
 142+ 9D85              ;   11/8/22
 143+ 9D85              ;
 144+ 9D85              ;   Reinicia_el_movimiento
 145+ 9D85
 146+ 9D85 CD 76 9D     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9D88 AF               xor a
 148+ 9D89 32 D8 89         ld (Contador_db_mov),a
 149+ 9D8C 32 D9 89         ld (Incrementa_puntero),a
 150+ 9D8F C3 F4 9C         jp Movimiento
 151+ 9D92 C9               ret
 152+ 9D93              ; ---------- --------- --------- ---------- ----------
 153+ 9D93
 154+ 9D93
 155+ 9D93
 156+ 9D93
 157+ 9D93
 158+ 9D93
 159+ 9D93
 160+ 9D93
 161+ 9D93
 162+ 9D93
 163+ 9D93
 164+ 9D93
 165+ 9D93
 166+ 9D93
 167+ 9D93
 168+ 9D93
 169+ 9D93
 170+ 9D93
# file closed: Patrones_de_mov.asm
1248  9D93              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D93              ; Relojes y temporizaciones.
   2+ 9D93
   3+ 9D93              ; ------------------------------------------------------
   4+ 9D93              ;
   5+ 9D93              ;	27/04/23
   6+ 9D93              ;
   7+ 9D93              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 9D93              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D93              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D93              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D93              ;
  12+ 9D93              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D93              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D93
  15+ 9D93              Habilita_disparos
  16+ 9D93
  17+ 9D93 7E           	ld a,(hl)
  18+ 9D94 A7           	and a
  19+ 9D95 C0           	ret nz
  20+ 9D96
  21+ 9D96 EB           	ex de,hl
  22+ 9D97
  23+ 9D97 35           	dec (hl)
  24+ 9D98 34           	inc (hl)
  25+ 9D99 35           	dec (hl)
  26+ 9D9A C0           	ret nz
  27+ 9D9B
  28+ 9D9B 2B           	dec hl
  29+ 9D9C 7E           	ld a,(hl)
  30+ 9D9D 23           	inc hl
  31+ 9D9E 77           	ld (hl),a
  32+ 9D9F
  33+ 9D9F EB           	ex de,hl
  34+ 9DA0 3E 01        	ld a,1
  35+ 9DA2 77           	ld (hl),a
  36+ 9DA3 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1249  9DA4              ;	include "Autorizacion.asm"
1250  9DA4
1251  9DA4              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9DA4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9DA4              ;
   3+ 9DA4              ;	3/1/23
   4+ 9DA4              ;
   5+ 9DA4              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9DA4
   7+ 9DA4              ;	ADC HL,SP	LD (addr),SP
   8+ 9DA4              ;	ADD HL,SP	LD SP,(addr)
   9+ 9DA4              ;	ADD IX,SP	LD SP,nn
  10+ 9DA4              ; 	ADD IY,SP	LD SP,HL
  11+ 9DA4              ;				LD SP,IX
  12+ 9DA4              ;	DEC SP		LD SP,IY
  13+ 9DA4
  14+ 9DA4              ;	EX (SP),HL
  15+ 9DA4              ;	EX (SP),IX
  16+ 9DA4              ;	EX (SP),IY
  17+ 9DA4
  18+ 9DA4              ;	INC SP
  19+ 9DA4
  20+ 9DA4
  21+ 9DA4                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 F3 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A E1 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A F9 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A F7 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 F9 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 F7 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B F3 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1252  7FD5
1253  7FD5              	SAVESNA "Pruebas.sna", START
1254  7FD5
1255  7FD5
1256  7FD5
1257  7FD5
# file closed: Banco_de_pruebas.asm
