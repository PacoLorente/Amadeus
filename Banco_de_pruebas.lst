# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 FC 88  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15              ;	ld a,(Contador_de_frames)
  43  AA15              ;	cp $70	; 	$51 ok.
  44  AA15              ;	jr z,$
  45  AA15              ;	jr nc,$
  46  AA15
  47  AA15 3E 01        	ld a,1
  48  AA17 D3 FE        	out ($fe),a
  49  AA19 CD 2F 8D     	call Pinta_entidades
  50  AA1C
  51  AA1C              ;	call Pinta_Amadeus
  52  AA1C 3E 02        	ld a,2
  53  AA1E D3 FE        	out ($fe),a
  54  AA20
  55  AA20              ;	ld a,2
  56  AA20              ;	out ($fe),a
  57  AA20              ;	call Guarda_parametros_DRAW
  58  AA20              ;	call Restore_Amadeus
  59  AA20              ;	call Gestiona_Amadeus
  60  AA20              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA20              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA20
  63  AA20              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA20
  65  AA20              ;	call Recupera_parametros_DRAW
  66  AA20 CD 3F 8D     	call Actualiza_relojes
  67  AA23              ;	ld a,0
  68  AA23              ;	out ($fe),a
  69  AA23
  70  AA23 21 06 89     	ld hl,Ctrl_3
  71  AA26 CB 86        	res 0,(hl)
  72  AA28
  73  AA28 FD E1        	pop iy
  74  AA2A DD E1        	pop ix
  75  AA2C F1           	pop af
  76  AA2D C1           	pop bc
  77  AA2E D1           	pop de
  78  AA2F E1           	pop hl
  79  AA30 D9           	exx
  80  AA31 C1           	pop bc
  81  AA32 D1           	pop de
  82  AA33 E1           	pop hl
  83  AA34 08           	ex af,af'
  84  AA35 F1           	pop af
  85  AA36 08           	ex af,af'
  86  AA37 D9           	exx
  87  AA38
  88  AA38 ED 7B FC 88  	ld sp,(Stack_3)
  89  AA3C
  90  AA3C FB           	ei
  91  AA3D C9           	ret
  92  AA3E
  93  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA3E
  95  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BD 85        	defw Caja_1
 100+ 856E FC 85        	defw Caja_2
 101+ 8570 3B 86        	defw Caja_3
 102+ 8572 7A 86        	defw Caja_4
 103+ 8574 B9 86        	defw Caja_5
 104+ 8576 F8 86        	defw Caja_6
 105+ 8578 37 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 8587
 117+ 8587 05           	db %00000101									; (Attr).
 118+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 119+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 120+ 858C
 121+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8590
 124+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 125+ 8592 04           	db 4 											; (Cuad_objeto).
 126+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 127+ 8597
 128+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 129+ 8598
 130+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 131+ 859E
 132+ 859E 00 00        	db 0,0											; Variables_de_pintado
 133+ 85A0 00 00        	defw 0											;	" " " " " " "
 134+ 85A2 00 00        	defw 0											;	" " " " " " "
 135+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 136+ 85A8
 137+ 85A8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 138+ 85AA
 139+ 85AA 00           	db 0											; (Autoriza_movimiento).
 140+ 85AB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 140+ 85AF 00 00
 141+ 85B1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 142+ 85B4
 143+ 85B4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 144+ 85B6 00           	db 0											; (Cola_de_desplazamiento).
 145+ 85B7
 146+ 85B7 00           	db 0 											; (Columnas).
 147+ 85B8 00 00        	defw 0											; (Limite_horizontal).
 148+ 85BA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85BD
 150+ 85BD              ; ---------- ---------- ---------- ---------- ----------
 151+ 85BD
 152+ 85BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 153+ 85BF 00 00        	defw 0											; (Posicion_actual).
 154+ 85C1 00 00        	defw 0 											; (Puntero_objeto).
 155+ 85C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 85C6
 157+ 85C6 00           	db %00000000 									; (Attr).
 158+ 85C7
 159+ 85C7 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 85C9 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 85CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 85CF
 164+ 85CF 00 00        	defw 0											; (Posicion_inicio).
 165+ 85D1 00           	db 0											; (Cuad_objeto).
 166+ 85D2
 167+ 85D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 85D6
 169+ 85D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 85D7
 171+ 85D7 00 00 00...  	ds 6											; Variables_de_borrado
 172+ 85DD
 173+ 85DD 00 00        	db 0,0											; Variables_de_pintado
 174+ 85DF 00 00        	defw 0											;	" " " " " " "
 175+ 85E1 00 00        	defw 0											;	" " " " " " "
 176+ 85E3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 85E7
 178+ 85E7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 179+ 85E9
 180+ 85E9 00           	db 0											; (Autoriza_movimiento).
 181+ 85EA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 181+ 85EE 00 00
 182+ 85F0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 183+ 85F3
 184+ 85F3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 185+ 85F5 00           	db 0											; (Cola_de_desplazamiento).
 186+ 85F6
 187+ 85F6 00           	db 0 											; (Columnas).
 188+ 85F7 00 00        	defw 0											; (Limite_horizontal).
 189+ 85F9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 190+ 85FC
 191+ 85FC              ; ---------- ---------- ---------- ---------- ----------
 192+ 85FC
 193+ 85FC 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 194+ 85FE 00 00        	defw 0											; (Posicion_actual).
 195+ 8600 00 00        	defw 0 											; (Puntero_objeto).
 196+ 8602 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 197+ 8605
 198+ 8605 00           	db %00000000 									; (Attr).
 199+ 8606
 200+ 8606 00 00        	defw 0											; (Indice_Sprite_der).
 201+ 8608 00 00        	defw 0											; (Indice_Sprite_izq).
 202+ 860A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 203+ 860C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 204+ 860E
 205+ 860E 00 00        	defw 0											; (Posicion_inicio).
 206+ 8610 00           	db 0											; (Cuad_objeto).
 207+ 8611
 208+ 8611 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 209+ 8615
 210+ 8615 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 211+ 8616
 212+ 8616 00 00 00...  	ds 6											; Variables_de_borrado
 213+ 861C
 214+ 861C 00 00        	db 0,0											; Variables_de_pintado
 215+ 861E 00 00        	defw 0											;	" " " " " " "
 216+ 8620 00 00        	defw 0											;	" " " " " " "
 217+ 8622 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8626
 219+ 8626 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 220+ 8628
 221+ 8628 00           	db 0											; (Autoriza_movimiento).
 222+ 8629 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 222+ 862D 00 00
 223+ 862F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 224+ 8632
 225+ 8632 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 226+ 8634 00           	db 0											; (Cola_de_desplazamiento).
 227+ 8635
 228+ 8635 00           	db 0 											; (Columnas).
 229+ 8636 00 00        	defw 0											; (Limite_horizontal).
 230+ 8638 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 231+ 863B
 232+ 863B              ; ---------- ---------- ---------- ---------- ----------
 233+ 863B
 234+ 863B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 863D 00 00        	defw 0											; (Posicion_actual).
 236+ 863F 00 00        	defw 0 											; (Puntero_objeto).
 237+ 8641 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8644
 239+ 8644 00           	db %00000000 									; (Attr).
 240+ 8645
 241+ 8645 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8647 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8649 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 864B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 864D
 246+ 864D 00 00        	defw 0											; (Posicion_inicio).
 247+ 864F 00           	db 0											; (Cuad_objeto).
 248+ 8650
 249+ 8650 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8654
 251+ 8654 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8655
 253+ 8655 00 00 00...  	ds 6											; Variables_de_borrado
 254+ 865B
 255+ 865B 00 00        	db 0,0											; Variables_de_pintado
 256+ 865D 00 00        	defw 0											;	" " " " " " "
 257+ 865F 00 00        	defw 0											;	" " " " " " "
 258+ 8661 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 259+ 8665
 260+ 8665 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 261+ 8667
 262+ 8667 00           	db 0											; (Autoriza_movimiento).
 263+ 8668 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 263+ 866C 00 00
 264+ 866E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 265+ 8671
 266+ 8671 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 267+ 8673 00           	db 0											; (Cola_de_desplazamiento).
 268+ 8674
 269+ 8674 00           	db 0 											; (Columnas).
 270+ 8675 00 00        	defw 0											; (Limite_horizontal).
 271+ 8677 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 272+ 867A
 273+ 867A              ; ---------- ---------- ---------- ---------- ----------
 274+ 867A
 275+ 867A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 276+ 867C 00 00        	defw 0											; (Posicion_actual).
 277+ 867E 00 00        	defw 0 											; (Puntero_objeto).
 278+ 8680 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 279+ 8683
 280+ 8683 00           	db %00000000 									; (Attr).
 281+ 8684
 282+ 8684 00 00        	defw 0											; (Indice_Sprite_der).
 283+ 8686 00 00        	defw 0											; (Indice_Sprite_izq).
 284+ 8688 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 868A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 868C
 287+ 868C 00 00        	defw 0											; (Posicion_inicio).
 288+ 868E 00           	db 0											; (Cuad_objeto).
 289+ 868F
 290+ 868F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 8693
 292+ 8693 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 8694
 294+ 8694 00 00 00...  	ds 6											; Variables_de_borrado
 295+ 869A
 296+ 869A 00 00        	db 0,0											; Variables_de_pintado
 297+ 869C 00 00        	defw 0											;	" " " " " " "
 298+ 869E 00 00        	defw 0											;	" " " " " " "
 299+ 86A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 300+ 86A4
 301+ 86A4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 302+ 86A6
 303+ 86A6 00           	db 0											; (Autoriza_movimiento).
 304+ 86A7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 304+ 86AB 00 00
 305+ 86AD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 306+ 86B0
 307+ 86B0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 308+ 86B2 00           	db 0											; (Cola_de_desplazamiento).
 309+ 86B3
 310+ 86B3 00           	db 0 											; (Columnas).
 311+ 86B4 00 00        	defw 0											; (Limite_horizontal).
 312+ 86B6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 313+ 86B9
 314+ 86B9              ; ---------- ---------- ---------- ---------- ----------
 315+ 86B9
 316+ 86B9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 317+ 86BB 00 00        	defw 0											; (Posicion_actual).
 318+ 86BD 00 00        	defw 0 											; (Puntero_objeto).
 319+ 86BF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 320+ 86C2
 321+ 86C2 00           	db %00000000 									; (Attr).
 322+ 86C3
 323+ 86C3 00 00        	defw 0											; (Indice_Sprite_der).
 324+ 86C5 00 00        	defw 0											; (Indice_Sprite_izq).
 325+ 86C7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 86C9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 86CB
 328+ 86CB 00 00        	defw 0											; (Posicion_inicio).
 329+ 86CD 00           	db 0											; (Cuad_objeto).
 330+ 86CE
 331+ 86CE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 86D2
 333+ 86D2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 86D3
 335+ 86D3 00 00 00...  	ds 6											; Variables_de_borrado
 336+ 86D9
 337+ 86D9 00 00        	db 0,0											; Variables_de_pintado
 338+ 86DB 00 00        	defw 0											;	" " " " " " "
 339+ 86DD 00 00        	defw 0											;	" " " " " " "
 340+ 86DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 341+ 86E3
 342+ 86E3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 343+ 86E5
 344+ 86E5 00           	db 0											; (Autoriza_movimiento).
 345+ 86E6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 345+ 86EA 00 00
 346+ 86EC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 347+ 86EF
 348+ 86EF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 349+ 86F1 00           	db 0											; (Cola_de_desplazamiento).
 350+ 86F2
 351+ 86F2 00           	db 0 											; (Columnas).
 352+ 86F3 00 00        	defw 0											; (Limite_horizontal).
 353+ 86F5 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 354+ 86F8
 355+ 86F8              ; ---------- ---------- ---------- ---------- ----------
 356+ 86F8
 357+ 86F8 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 358+ 86FA 00 00        	defw 0											; (Posicion_actual).
 359+ 86FC 00 00        	defw 0 											; (Puntero_objeto).
 360+ 86FE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 361+ 8701
 362+ 8701 00           	db %00000000 									; (Attr).
 363+ 8702
 364+ 8702 00 00        	defw 0											; (Indice_Sprite_der).
 365+ 8704 00 00        	defw 0											; (Indice_Sprite_izq).
 366+ 8706 00 00        	defw 0											; (Puntero_DESPLZ_der).
 367+ 8708 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 368+ 870A
 369+ 870A 00 00        	defw 0											; (Posicion_inicio).
 370+ 870C 00           	db 0											; (Cuad_objeto).
 371+ 870D
 372+ 870D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 373+ 8711
 374+ 8711 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 375+ 8712
 376+ 8712 00 00 00...  	ds 6											; Variables_de_borrado
 377+ 8718
 378+ 8718 00 00        	db 0,0											; Variables_de_pintado
 379+ 871A 00 00        	defw 0											;	" " " " " " "
 380+ 871C 00 00        	defw 0											;	" " " " " " "
 381+ 871E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 8722
 383+ 8722 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 384+ 8724
 385+ 8724 00           	db 0											; (Autoriza_movimiento).
 386+ 8725 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 386+ 8729 00 00
 387+ 872B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 388+ 872E
 389+ 872E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 390+ 8730 00           	db 0											; (Cola_de_desplazamiento).
 391+ 8731
 392+ 8731 00           	db 0 											; (Columnas).
 393+ 8732 00 00        	defw 0											; (Limite_horizontal).
 394+ 8734 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 395+ 8737
 396+ 8737              ; ---------- ---------- ---------- ---------- ----------
 397+ 8737
 398+ 8737 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 399+ 8739 00 00        	defw 0											; (Posicion_actual).
 400+ 873B 00 00        	defw 0 											; (Puntero_objeto).
 401+ 873D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 402+ 8740
 403+ 8740 00           	db %00000000 									; (Attr).
 404+ 8741
 405+ 8741 00 00        	defw 0											; (Indice_Sprite_der).
 406+ 8743 00 00        	defw 0											; (Indice_Sprite_izq).
 407+ 8745 00 00        	defw 0											; (Puntero_DESPLZ_der).
 408+ 8747 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 409+ 8749
 410+ 8749 00 00        	defw 0											; (Posicion_inicio).
 411+ 874B 00           	db 0											; (Cuad_objeto).
 412+ 874C
 413+ 874C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 414+ 8750
 415+ 8750 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 416+ 8751
 417+ 8751 00 00 00...  	ds 6											; Variables_de_borrado
 418+ 8757
 419+ 8757 00 00        	db 0,0											; Variables_de_pintado
 420+ 8759 00 00        	defw 0											;	" " " " " " "
 421+ 875B 00 00        	defw 0											;	" " " " " " "
 422+ 875D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 423+ 8761
 424+ 8761 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 425+ 8763
 426+ 8763 00           	db 0											; (Autoriza_movimiento).
 427+ 8764 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 427+ 8768 00 00
 428+ 876A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 429+ 876D
 430+ 876D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 431+ 876F 00           	db 0											; (Cola_de_desplazamiento).
 432+ 8770
 433+ 8770 00           	db 0 											; (Columnas).
 434+ 8771 00 00        	defw 0											; (Limite_horizontal).
 435+ 8773 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 436+ 8776
 437+ 8776              ; -------------------------------------------------------------------------------------
 438+ 8776              ;
 439+ 8776              ;	20/05/23
 440+ 8776              ;
 441+ 8776              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 442+ 8776              ;
 443+ 8776              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 444+ 8776              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 445+ 8776              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 446+ 8776              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 447+ 8776
 448+ 8776              Indice_de_entidades
 449+ 8776
 450+ 8776 7A 87        	defw Entidad_1
 451+ 8778 8A 87        	defw Entidad_2
 452+ 877A
 453+ 877A              ;	BADSAT, (Satélite malvado).
 454+ 877A
 455+ 877A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 456+ 877C 04           	db %00000100									; (Attr).
 457+ 877D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 458+ 877F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 459+ 8781 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 460+ 8783 01           	db 1											; (Cuad_objeto).
 461+ 8784 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 462+ 8788 39 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 463+ 878A
 464+ 878A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 465+ 878C 02           	db %00000010									; (Attr).
 466+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 467+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 468+ 8791 40 50        	defw $5040                                      ; (Posicion_inicio).
 469+ 8793 01           	db 1											; (Cuad_objeto).
 470+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 471+ 8798 39 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 472+ 879A
# file closed: Cajas_y_disparos.asm
  97  879A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 879A              ; 13/05/23
   2+ 879A
   3+ 879A              Indice_de_niveles
   4+ 879A
   5+ 879A A8 87        	defw Nivel_1
   6+ 879C B0 87        	defw Nivel_2
   7+ 879E BD 87        	defw Nivel_3
   8+ 87A0 CD 87        	defw Nivel_4
   9+ 87A2 DF 87        	defw Nivel_5
  10+ 87A4              ;	...
  11+ 87A4              ;	...
  12+ 87A4              ;	+ Niveles ...
  13+ 87A4
  14+ 87A4 00 00        	defw 0
  15+ 87A6 00 00        	defw 0
  16+ 87A8
  17+ 87A8 07           Nivel_1 db 7	                                ; Nº de entidades.
  18+ 87A9 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 87AD 01 01 01
  19+ 87B0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87B1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87B5 01 02
  21+ 87B7 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87BB 01 02
  22+ 87BD 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87BE 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87C2 01
  24+ 87C3 03 01 01 01  	db 3,1,1,1,1
  24+ 87C7 01
  25+ 87C8 03 01 01 01  	db 3,1,1,1,1
  25+ 87CC 01
  26+ 87CD 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87CE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87D2 01
  28+ 87D3 04 01 01 01  	db 4,1,1,1,1
  28+ 87D7 01
  29+ 87D8 04 01 01 01  	db 4,1,1,1,1
  29+ 87DC 01
  30+ 87DD 02 03        	db 2,3
  31+ 87DF 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87E0 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87E4 01
  33+ 87E5 05 01 01 01  	db 5,1,1,1,1
  33+ 87E9 01
  34+ 87EA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87EE 01
  35+ 87EF 05 01 01 01  	db 5,1,1,1,1
  35+ 87F3 01
  36+ 87F4
  37+ 87F4              ;---------------------------------------------------------------------------------------------------------------
  38+ 87F4              ;
  39+ 87F4              ;   3/9/23
  40+ 87F4              ;
  41+ 87F4              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87F4              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87F4              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87F4              ;	_en la caja DRAW correspondiente.
  45+ 87F4              ;
  46+ 87F4              ;	MODIFICA: HL,DE y A.
  47+ 87F4              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87F4
  49+ 87F4              Inicializa_Punteros_de_nivel
  50+ 87F4
  51+ 87F4 21 9A 87     	ld hl,Indice_de_niveles
  52+ 87F7 22 26 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 87FA CD E1 8B     	call Extrae_address
  54+ 87FD 7E           	ld a,(hl)
  55+ 87FE 32 F0 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8801 23           	inc hl
  57+ 8802 22 28 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8805 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8806
  60+ 8806              ;---------------------------------------------------------------------------------------------------------------
  61+ 8806              ;
  62+ 8806              ;   13/5/23
  63+ 8806              ;
  64+ 8806              ;	Destruye A,BC,HL,DE
  65+ 8806
  66+ 8806              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8806              ;	_del juego.
  68+ 8806
  69+ 8806              Prepara_cajas
  70+ 8806
  71+ 8806              ; Preparamos los punteros de las cajas.
  72+ 8806
  73+ 8806 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8809 CD E1 8B     	call Extrae_address
  75+ 880C CD 49 88     	call Avanza_caja
  76+ 880F
  77+ 880F CD 8D 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8812
  79+ 8812 2A 28 89     	ld hl,(Datos_de_nivel)
  80+ 8815
  81+ 8815              ; HL está en los datos del nivel correspondiente.
  82+ 8815              ; B actuará como contador de cajas.
  83+ 8815
  84+ 8815 C5           1 push bc
  85+ 8816
  86+ 8816 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8817 CD 3A 88     	call PreparaBC
  88+ 881A
  89+ 881A 21 76 87     	ld hl,Indice_de_entidades
  90+ 881D CD 42 88     	call SBC_HL_con_BC_y_Extrae
  91+ 8820 22 F6 88         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8823
  93+ 8823 CD 53 88     	call Datos_de_entidad_a_caja
  94+ 8826
  95+ 8826 2A EE 88     	ld hl,(Indice_restore_caja)
  96+ 8829 CD E1 8B     	call Extrae_address
  97+ 882C CD 49 88     	call Avanza_caja
  98+ 882F
  99+ 882F 2A 28 89     	ld hl,(Datos_de_nivel)
 100+ 8832 23           	inc hl
 101+ 8833 22 28 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8836
 103+ 8836 C1           	pop bc
 104+ 8837 10 DC        	djnz 1B
 105+ 8839 C9           	ret
 106+ 883A
 107+ 883A CB 27        PreparaBC sla a
 108+ 883C D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 883E 4F           	ld c,a
 110+ 883F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 8841 C9           	ret
 112+ 8842
 113+ 8842 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8843 ED 4A        	adc hl,bc
 115+ 8845 CD E1 8B     	call Extrae_address
 116+ 8848 C9           	ret
 117+ 8849
 118+ 8849 22 EA 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 884C 13           	inc de
 120+ 884D 13           	inc de
 121+ 884E EB           	ex de,hl
 122+ 884F 22 EE 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8852 C9           	ret
 124+ 8853
 125+ 8853              Datos_de_entidad_a_caja
 126+ 8853
 127+ 8853              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8853
 129+ 8853
 130+ 8853 ED 5B EA 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8857
 132+ 8857 01 02 00     	ld bc,2
 133+ 885A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 885C
 135+ 885C 01 07 00     	ld bc,7
 136+ 885F CD 87 88     	call Situa_DE
 137+ 8862
 138+ 8862 01 05 00     	ld bc,5
 139+ 8865 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8867
 141+ 8867 01 04 00     	ld bc,4
 142+ 886A CD 87 88     	call Situa_DE
 143+ 886D
 144+ 886D 01 07 00     	ld bc,7
 145+ 8870 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8872
 147+ 8872 01 12 00     	ld bc,18
 148+ 8875 CD 87 88     	call Situa_DE
 149+ 8878
 150+ 8878 01 02 00     	ld bc,2
 151+ 887B ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 887D
 153+ 887D              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 887D              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 887D
 156+ 887D 01 0F 00     	ld bc,15									; *****
 157+ 8880 CD 87 88     	call Situa_DE
 158+ 8883
 159+ 8883 3E 03        	ld a,3
 160+ 8885 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8886
 162+ 8886 C9           	ret
 163+ 8887
 164+ 8887 EB           Situa_DE ex de,hl
 165+ 8888 A7           	and a
 166+ 8889 ED 4A        	adc hl,bc
 167+ 888B EB           	ex de,hl
 168+ 888C C9           	ret
 169+ 888D
 170+ 888D              ;---------------------------------------------------------------------------------------------------------------
 171+ 888D              ;
 172+ 888D              ;	21/5/23
 173+ 888D              ;
 174+ 888D              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 888D              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 888D              ;
 177+ 888D              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 888D              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 888D              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 888D              ;
 181+ 888D              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 888D              ;	MODIFICA: A y B.
 183+ 888D              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 888D
 185+ 888D              Admin_num_entidades
 186+ 888D
 187+ 888D              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 888D
 189+ 888D 3A F0 88     	ld a,(Numero_de_entidades)
 190+ 8890 A7           	and a
 191+ 8891              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 8891              ;	jr z,$
 193+ 8891              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 8891
 195+ 8891 20 03        	jr nz,3F
 196+ 8893
 197+ 8893              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 8893
 199+ 8893 CD F4 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 8896
 201+ 8896 3A F0 88     3 ld a,(Numero_de_entidades)
 202+ 8899 FE 0A        	cp 10
 203+ 889B 38 08        	jr c,1F
 204+ 889D
 205+ 889D              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 889D              ; Actualizamos variables.
 207+ 889D
 208+ 889D 3E 0A        	ld a,10
 209+ 889F 32 F1 88     	ld (Numero_parcial_de_entidades),a
 210+ 88A2 47           	ld b,a
 211+ 88A3 18 04        	jr 2F
 212+ 88A5
 213+ 88A5              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88A5              ; (Numero_de_entidades)="0".
 215+ 88A5
 216+ 88A5 32 F1 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88A8 47           	ld b,a
 218+ 88A9 C9           2 ret
# file closed: Niveles.asm
  98  88AA
  99  88AA              ; ******************************************************************************************************************************************************************************************
 100  88AA              ; Constantes.
 101  88AA              ; ******************************************************************************************************************************************************************************************
 102  88AA              ;
 103  88AA              ; 10/11/23
 104  88AA
 105  88AA              ;
 106  88AA              ; Constantes generales.
 107  88AA              ;
 108  88AA
 109  88AA              Sprite_vacio equ $f000
 110  88AA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88AA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88AA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88AA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88AA
 115  88AA              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 116  88AA              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 117  88AA              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 118  88AA              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 119  88AA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 120  88AA
 121  88AA              ;														; 55 Bytes.
 122  88AA
 123  88AA              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 124  88AA              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 125  88AA
 126  88AA              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88AA
 128  88AA              ; ******************************************************************************************************************************************************************************************
 129  88AA              ; Variables.
 130  88AA              ; ******************************************************************************************************************************************************************************************
 131  88AA              ;
 132  88AA              ; 10/11//23
 133  88AA              ;
 134  88AA              ; Variables de DRAW. (Motor principal).
 135  88AA              ;
 136  88AA              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88AA
 138  88AA 00           Filas db 0												; Filas. [DRAW]
 139  88AB 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88AC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88AE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88B0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88B1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88B2
 145  88B2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88B2
 147  88B2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88B3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88B3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88B3 00           Attr db 0												; Atributos de la entidad:
 151  88B4
 152  88B4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88B4              ;
 154  88B4              ;	COLORES: 0 ..... NEGRO
 155  88B4              ;    		 1 ..... AZUL
 156  88B4              ; 			 2 ..... ROJO
 157  88B4              ;			 3 ..... MAGENTA
 158  88B4              ; 			 4 ..... VERDE
 159  88B4              ; 			 5 ..... CIAN
 160  88B4              ;			 6 ..... AMARILLO
 161  88B4              ; 			 7 ..... BLANCO
 162  88B4
 163  88B4 00 00        Indice_Sprite_der defw 0
 164  88B6 00 00        Indice_Sprite_izq defw 0
 165  88B8 00 00        Puntero_DESPLZ_der defw 0
 166  88BA 00 00        Puntero_DESPLZ_izq defw 0
 167  88BC
 168  88BC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88BE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88BF
 171  88BF              ; Variables de objeto. (Características).
 172  88BF
 173  88BF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88C0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88C1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88C2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88C3
 178  88C3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88C4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88C4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88C4 00 00 00...  Variables_de_borrado ds 6
 182  88CA
 183  88CA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88CC 00 00        	defw 0
 185  88CE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88D0 00 00 00 00  	db 0,0,0,0
 187  88D4
 188  88D4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  88D4
 190  88D4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 191  88D5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 192  88D5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 193  88D5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 194  88D5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 195  88D5              ;
 196  88D5              ; 														DESCRIPCIÖN:
 197  88D5              ;
 198  88D5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 199  88D5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 200  88D5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 201  88D5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 202  88D5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 203  88D5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 204  88D5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 205  88D5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 206  88D5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 207  88D5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 208  88D5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 209  88D5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 210  88D5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 211  88D5              ;
 212  88D5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 213  88D5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 214  88D5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 215  88D5
 216  88D5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 217  88D5
 218  88D5 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 219  88D7 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 220  88D9 00 00        Puntero_indice_mov_bucle defw 0							;
 221  88DB              ;
 222  88DB              ;
 223  88DB 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 224  88DC              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 225  88DC              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 226  88DC 00           Incrementa_puntero_backup db 0
 227  88DD 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 228  88DE              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 229  88DE 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 230  88DF 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 231  88E0 00           Cola_de_desplazamiento db 0								; Este byte indica:
 232  88E1              ;
 233  88E1              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 234  88E1              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 235  88E1              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 236  88E1              ;
 237  88E1              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 238  88E1              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 239  88E1              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 240  88E1              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 241  88E1              ;
 242  88E1              ;														;	"$ff" ..... Bucle infinito de repetición.
 243  88E1              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 244  88E1              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 245  88E1
 246  88E1
 247  88E1              ; Variables de funcionamiento. [DRAW].
 248  88E1
 249  88E1 00           Columnas db 0
 250  88E2 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 251  88E4              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 252  88E4 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  88E5
 254  88E5              ; variables de control general.
 255  88E5
 256  88E5 00           Ctrl_2 db 0
 257  88E6              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 258  88E6              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 259  88E6              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 260  88E6              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 261  88E6              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 262  88E6              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 263  88E6              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 264  88E6              ;
 265  88E6              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 266  88E6              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 267  88E6              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 268  88E6              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 269  88E6              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 270  88E6
 271  88E6 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 272  88E7
 273  88E7              ;! 61 Bytes por entidad.
 274  88E7
 275  88E7              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 276  88E7              ;					         		---------;      ;---------
 277  88E7
 278  88E7
 279  88E7              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 280  88E7
 281  88E7 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 282  88E8
 283  88E8              ;														DESCRIPCIÓN:
 284  88E8              ;
 285  88E8              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 286  88E8              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 287  88E8              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 288  88E8              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 289  88E8              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 290  88E8              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 291  88E8
 292  88E8              ;														BIT 3, Recarga de nueva oleada.
 293  88E8              ;														BIT 4, Recarga de nueva oleada.
 294  88E8              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 295  88E8              ;														BIT 6, **** Frame completo.
 296  88E8              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 297  88E8
 298  88E8 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 299  88EA              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 300  88EA              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 301  88EA              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 302  88EA
 303  88EA              ; Gestión de ENTIDADES y CAJAS.
 304  88EA
 305  88EA 00 00        Puntero_store_caja defw 0
 306  88EC 00 00        Puntero_restore_caja defw 0
 307  88EE 00 00        Indice_restore_caja defw 0
 308  88F0 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 309  88F1 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 310  88F2 00           Entidades_en_curso db 0									; ..... ..... .....
 311  88F3 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 312  88F4              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 313  88F4              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 314  88F4              ;														; _ (Numero_de_malotes)="0".
 315  88F4 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 316  88F6 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 317  88F8              ;														; _ puntero (Indice_entidades).
 318  88F8
 319  88F8
 320  88F8              ;---------------------------------------------------------------------------------------------------------------
 321  88F8              ;
 322  88F8              ;	18/11/23
 323  88F8              ;
 324  88F8              ;	Álbumes.
 325  88F8
 326  88F8 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 327  88FA              ;														; _variable para almacenar lo posición del puntero_
 328  88FA              ; 														; _de pila, SP.
 329  88FA 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 330  88FC              ;														; La utiliza la rutina [Extrae_foto_registros].
 331  88FC 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 332  88FE 00 70        Stack_snapshot defw Album_de_fotos
 333  8900 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 334  8902
 335  8902              ;End_Snapshot defw Album_de_fotos
 336  8902              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 337  8902 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 338  8904              ;														; _el snapshot de los registros del siguiente disparo.
 339  8904              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 340  8904 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 341  8906
 342  8906 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 343  8907              ;
 344  8907              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 345  8907              ; Gestión de Disparos.
 346  8907
 347  8907 00           Numero_de_disparotes db 0
 348  8908 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 349  890A 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 350  890C 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 351  890D              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 352  890D              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 353  890D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 354  890F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 355  890F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 356  890F              ;														; _produzca colisión.
 357  890F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 358  8911              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 359  8911 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 360  8914              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 361  8914 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 362  8917              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 363  8917 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 364  8919 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 365  891A
 366  891A              ;---------------------------------------------------------------------------------------------------------------
 367  891A
 368  891A              ; Relojes y temporizaciones.
 369  891A
 370  891A 00           Contador_de_frames db 0
 371  891B 00           Contador_de_frames_2 db 0
 372  891C
 373  891C 04           Clock_explosion db 4
 374  891D 1E           Clock_Entidades_en_curso db 30
 375  891E 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 376  891F              ;														; Repite la oleada de entidades.
 377  891F 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 378  8920 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 379  8921 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 380  8922
 381  8922 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 382  8923 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 383  8924 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 384  8925
 385  8925              ;---------------------------------------------------------------------------------------------------------------
 386  8925
 387  8925              ; Gestión de NIVELES.
 388  8925
 389  8925 00           Nivel db 0												; Nivel actual del juego.
 390  8926 00 00        Puntero_indice_NIVELES defw 0
 391  8928 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 392  892A              ; 														; _ que definen el NIVEL.
 393  892A              ; Y todo comienza aquí .....
 394  892A              ;
 395  892A              ; Rutina principal *************************************************************************************************************************************************************************
 396  892A              ;
 397  892A              ;	16/11/22
 398  892A
 399  892A              START
 400  892A
 401  892A 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 402  892D 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 403  892F ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 404  8931 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 405  8933 F3           	DI
 406  8934
 407  8934 3E 07        	ld a,%00000111
 408  8936 CD 66 98     	call Cls
 409  8939
 410  8939 CD BA 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 411  893C
 412  893C              ; INICIALIZACIÓN.
 413  893C
 414  893C CD F4 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 415  893F CD 06 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 416  8942 CD 49 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 417  8945              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 418  8945 CD 6A 8C     	call Restore_entidad
 419  8948
 420  8948 21 F1 88     	ld hl,Numero_parcial_de_entidades
 421  894B 46           	ld b,(hl)
 422  894C 04           	inc b
 423  894D 05           	dec b
 424  894E 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 425  8950
 426  8950              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 427  8950              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 428  8950              ;	Pintamos el resto de entidades:
 429  8950
 430  8950              ;	INICIA ENTIDADES !!!!!
 431  8950
 432  8950 C5           1 push bc  												; Guardo el contador de entidades.
 433  8951 CD 19 8B     	call Inicia_entidad
 434  8954 C1           	pop bc
 435  8955 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 436  8957
 437  8957              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 438  8957              ; (Esto se dá cuando se inicia una nueva oleada).
 439  8957
 440  8957 3A E7 88     	ld a,(Ctrl_1)
 441  895A CB 5F        	bit 3,a
 442  895C 20 00        	jr nz,5F											; Loop
 443  895E
 444  895E              ; 	INICIA AMADEUS !!!!!
 445  895E
 446  895E              3
 447  895E              ;	call Restore_Amadeus
 448  895E              ;	call Inicia_Puntero_objeto
 449  895E              ;	call Draw
 450  895E              ;	call Guarda_foto_registros
 451  895E              ;	call Guarda_datos_de_borrado_Amadeus
 452  895E
 453  895E              ;	ld de,Amadeus_db
 454  895E              ;	call Store_Amadeus
 455  895E
 456  895E              ; 	INICIA DISPAROS !!!!!
 457  895E
 458  895E              ;	call Inicia_Puntero_Disparo_Entidades
 459  895E              ;	call Inicia_Puntero_Disparo_Amadeus
 460  895E
 461  895E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 462  895E
 463  895E CD 49 8B     5 call Inicia_punteros_de_cajas
 464  8961 CD 6A 8C     	call Restore_entidad
 465  8964
 466  8964 3A E7 88     	ld a,(Ctrl_1)
 467  8967 CB 5F        	bit 3,a
 468  8969 28 07        	jr z,6F
 469  896B
 470  896B              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 471  896B
 472  896B 21 E7 88     	ld hl,Ctrl_1
 473  896E CB 9E        	res 3,(hl)
 474  8970 18 07        	jr Main
 475  8972
 476  8972              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 477  8972
 478  8972 21 06 89     6 ld hl,Ctrl_3
 479  8975 CB C6        	set 0,(hl)											; Frame completo.
 480  8977 FB           	ei
 481  8978 76           	halt
 482  8979
 483  8979              ; ------------------------------------
 484  8979
 485  8979              Main
 486  8979              ;
 487  8979              ;	12/11/23
 488  8979
 489  8979              ; Aparece nueva entidad ???
 490  8979
 491  8979              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 492  8979              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 493  8979              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 494  8979              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 495  8979              ;														; _un 2º bloque.
 496  8979
 497  8979 3A 1D 89     	ld a,(Clock_Entidades_en_curso)
 498  897C 47           	ld b,a
 499  897D 3A 1A 89     	ld a,(Contador_de_frames)
 500  8980 B8           	cp b
 501  8981 28 07        	jr z,21F
 502  8983
 503  8983              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 504  8983              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 505  8983              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 506  8983              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 507  8983
 508  8983 3C           	inc a
 509  8984 B8           	cp b
 510  8985 20 1B        	jr nz,13F
 511  8987
 512  8987 32 1A 89     	ld (Contador_de_frames),a
 513  898A
 514  898A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 515  898A              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 516  898A
 517  898A 3A F1 88     21 ld a,(Numero_parcial_de_entidades)
 518  898D 47           	ld b,a
 519  898E 3A F2 88     	ld a,(Entidades_en_curso)
 520  8991 B8           	cp b
 521  8992 28 0E        	jr z,13F
 522  8994 30 0C        	jr nc,13F
 523  8996
 524  8996              ; --- --- --- --- ---
 525  8996
 526  8996 3C           	inc a
 527  8997 32 F2 88     	ld (Entidades_en_curso),a
 528  899A
 529  899A              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 530  899A
 531  899A 3A 1D 89     	ld a,(Clock_Entidades_en_curso)
 532  899D              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 533  899D              ;! _ IMPREDECIBLE !!!!
 534  899D C6 32        	add 50
 535  899F 32 1D 89     	ld (Clock_Entidades_en_curso),a
 536  89A2
 537  89A2              ; -------------------------------------------------------------------------------------------------------------
 538  89A2
 539  89A2              ; Habilita disparos.
 540  89A2
 541  89A2 21 1F 89     13 ld hl,Disparo_Amadeus
 542  89A5 11 21 89     	ld de,CLOCK_repone_disparo_Amadeus
 543  89A8 CD 2A 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 544  89AB
 545  89AB 21 22 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 546  89AE 11 24 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 547  89B1 CD 2A 9C     	call Habilita_disparos
 548  89B4
 549  89B4              ; COLISIONES.
 550  89B4
 551  89B4 CD 3B 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 552  89B7
 553  89B7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 554  89B7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 555  89B7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 556  89B7
 557  89B7 AF           	xor a
 558  89B8 32 0C 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 559  89BB
 560  89BB CD 49 8B     	call Inicia_punteros_de_cajas
 561  89BE CD 6A 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 562  89C1              ; 														; _ en DRAW.
 563  89C1 3A AA 88     	ld a,(Filas)
 564  89C4 A7           	and a
 565  89C5 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 566  89C7 CD 7C 8C     	call Incrementa_punteros_de_cajas
 567  89CA 18 F2        	jr 12B
 568  89CC
 569  89CC              ; ---------------------------------------------------------------------------------------
 570  89CC
 571  89CC 3A F1 88     10 ld a,(Numero_parcial_de_entidades)
 572  89CF 47               ld b,a
 573  89D0 A7           	and a
 574  89D1 20 14        	jr nz,11F
 575  89D3
 576  89D3 21 E7 88     	ld hl,Ctrl_1
 577  89D6 CB 66        	bit 4,(hl)
 578  89D8 C2 64 8A     	jp nz,16F
 579  89DB
 580  89DB              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 581  89DB
 582  89DB 21 E7 88     	ld hl,Ctrl_1
 583  89DE CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 584  89E0
 585  89E0 3A 1A 89     	ld a,(Contador_de_frames)
 586  89E3 3C           	inc a
 587  89E4 32 1E 89     	ld (Activa_recarga_cajas),a
 588  89E7
 589  89E7              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 590  89E7
 591  89E7 3A F2 88     11 ld a,(Entidades_en_curso)
 592  89EA A7           	and a
 593  89EB CA 64 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 594  89EE 47           	ld b,a												; No hay entidades que gestionar.
 595  89EF
 596  89EF              ; Código que ejecutamos con cada entidad:
 597  89EF              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 598  89EF
 599  89EF C5           15 push bc 												; Nº de entidades en curso.
 600  89F0
 601  89F0              ; Impacto ???
 602  89F0
 603  89F0 3A C3 88     22 ld a,(Impacto)
 604  89F3 A7           	and a
 605  89F4 28 31        	jr z,8F
 606  89F6
 607  89F6              ; Hay Impacto en esta entidad.
 608  89F6
 609  89F6 21 1C 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 610  89F9 35           	dec (hl)
 611  89FA C2 5E 8A     	jp nz,17F
 612  89FD
 613  89FD              ;! Velocidad de la animación de la explosión.
 614  89FD
 615  89FD 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 616  89FF              ;														; _,(velocidad de la explosión).
 617  89FF
 618  89FF              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 619  89FF
 620  89FF CD 0E 8D     	call Repone_datos_de_borrado
 621  8A02 CD 87 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 622  8A05
 623  8A05              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 624  8A05
 625  8A05 3A E5 88     	ld a,(Ctrl_2)
 626  8A08 CB 4F        	bit 1,a
 627  8A0A 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 628  8A0C
 629  8A0C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 630  8A0C
 631  8A0C 3A B2 88     	ld a,(CTRL_DESPLZ)
 632  8A0F A7           	and a
 633  8A10 20 08        	jr nz,18F
 634  8A12
 635  8A12 21 84 84     	ld hl,Indice_Explosion_2x2-2
 636  8A15 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 637  8A18 18 06        	jr 19F
 638  8A1A
 639  8A1A 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 640  8A1D 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 641  8A20
 642  8A20 21 E5 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 643  8A23 CB CE        	set 1,(hl)
 644  8A25 18 22        	jr 7F
 645  8A27
 646  8A27              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 647  8A27              ; _con las coordenadas de la entidad almacenada en DRAW.
 648  8A27
 649  8A27 3A E7 88     8 ld a,(Ctrl_1)
 650  8A2A CB 57        	bit 2,a
 651  8A2C 28 1B        	jr z,7F
 652  8A2E
 653  8A2E 2A 0F 89     	ld hl,(Coordenadas_disparo_certero)
 654  8A31 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 655  8A32              ;														; E contiene la coordenada_X del disparo.
 656  8A32 2A B0 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 657  8A35              ;														; H FILA, (Coordenada_y de la entidad).
 658  8A35 A7           	and a
 659  8A36 ED 52        	sbc hl,de
 660  8A38
 661  8A38 CD 72 91     	call Determina_resultado_comparativa
 662  8A3B
 663  8A3B 78           	ld a,b
 664  8A3C A7           	and a
 665  8A3D 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 666  8A3F
 667  8A3F              ; ----- ----- -----
 668  8A3F
 669  8A3F 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 670  8A41 32 C3 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 671  8A44
 672  8A44 21 E7 88     	ld hl,Ctrl_1
 673  8A47 CB 96        	res 2,(hl)
 674  8A49
 675  8A49 CD B5 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 676  8A4C
 677  8A4C 3A D4 88     	ld a,(Ctrl_0)
 678  8A4F CB 67        	bit 4,a
 679  8A51 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 680  8A53
 681  8A53              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 682  8A53              ; [[[
 683  8A53 CD E8 8C     	call Detecta_disparo_entidad
 684  8A56              ; ]]]
 685  8A56 CD 2A 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 686  8A59
 687  8A59 21 D4 88     	ld hl,Ctrl_0
 688  8A5C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 689  8A5E
 690  8A5E CD 2F 8C     17 call Store_Restore_cajas
 691  8A61
 692  8A61 C1           	pop bc
 693  8A62 10 8B        	djnz 15B
 694  8A64
 695  8A64              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 696  8A64              ; Hemos gestionado todas las unidades.
 697  8A64              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 698  8A64
 699  8A64              ;	ld hl,Ctrl_1
 700  8A64              ;	res 2,(hl)
 701  8A64
 702  8A64 21 06 89     16 ld hl,Ctrl_3
 703  8A67 CB C6        	set 0,(hl)											; Frame completo.
 704  8A69 AF           	xor a
 705  8A6A D3 FE        	out ($fe),a
 706  8A6C FB           	ei
 707  8A6D 76           	halt
 708  8A6E
 709  8A6E              ; ----------------------------------------
 710  8A6E
 711  8A6E 3A E7 88     	ld a,(Ctrl_1) 										; Existe Loop?
 712  8A71 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 713  8A73 CA 79 89     	jp z,Main
 714  8A76
 715  8A76              ; RECARGA DE NUEVA OLEADA.
 716  8A76
 717  8A76 3A 1A 89     	ld a,(Contador_de_frames)
 718  8A79 47           	ld b,a
 719  8A7A 3A 1E 89     	ld a,(Activa_recarga_cajas)
 720  8A7D B8           	cp b
 721  8A7E 28 08        	jr z,20F
 722  8A80
 723  8A80 21 E7 88     	ld hl,Ctrl_1
 724  8A83 CB E6        	set 4,(hl)
 725  8A85 C3 79 89     	jp Main
 726  8A88
 727  8A88 21 E7 88     20 ld hl,Ctrl_1
 728  8A8B CB A6        	res 4,(hl)
 729  8A8D
 730  8A8D 3A 1A 89     	ld a,(Contador_de_frames)
 731  8A90
 732  8A90              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 733  8A90              ;! _ IMPREDECIBLE !!!!
 734  8A90
 735  8A90 C6 0A        	add 10
 736  8A92 32 1D 89     	ld (Clock_Entidades_en_curso),a
 737  8A95
 738  8A95 C3 3F 89     	jp 4B
 739  8A98
 740  8A98 C9           	ret
 741  8A99
 742  8A99              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 743  8A99              ;
 744  8A99              ;	16/11/23
 745  8A99
 746  8A99              Gestiona_Amadeus
 747  8A99
 748  8A99              ;! Activa/desactiva impacto con Amadeus.
 749  8A99
 750  8A99 3A C3 88     	ld a,(Impacto)
 751  8A9C A7           	and a
 752  8A9D 20 FE        	jr nz,$
 753  8A9F
 754  8A9F CD 06 8B     	call Mov_Amadeus
 755  8AA2
 756  8AA2 3A D4 88     	ld a,(Ctrl_0)
 757  8AA5 CB 67        	bit 4,a
 758  8AA7 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 759  8AA9
 760  8AA9 CD 2A 8B     	call Guarda_foto_entidad_a_pintar
 761  8AAC CD EE 8C     	call Guarda_datos_de_borrado_Amadeus
 762  8AAF
 763  8AAF 21 D4 88     14 ld hl,Ctrl_0
 764  8AB2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 765  8AB4
 766  8AB4              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 767  8AB4
 768  8AB4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 769  8AB4
 770  8AB4              ;	call Calcula_numero_de_disparotes
 771  8AB4
 772  8AB4 C9           	ret
 773  8AB5
 774  8AB5              ; --------------------------------------------------------------------------------------------------------------
 775  8AB5              ;
 776  8AB5              ;	27/05/23
 777  8AB5
 778  8AB5              Mov_obj
 779  8AB5
 780  8AB5 3A E5 88     	ld a,(Ctrl_2)
 781  8AB8 CB 4F        	bit 1,a
 782  8ABA 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 783  8ABC
 784  8ABC              ; Explosión:
 785  8ABC
 786  8ABC 3A E6 88     	ld a,(Frames_explosion)
 787  8ABF A7           	and a
 788  8AC0 20 11        	jr nz,4F
 789  8AC2
 790  8AC2              ; Una alimaña menos!!!!!!!!!1
 791  8AC2
 792  8AC2 CD AC 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 793  8AC5 21 F1 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 794  8AC8 35           	dec (hl)
 795  8AC9 21 F2 88     	ld hl,Entidades_en_curso
 796  8ACC 35           	dec (hl)
 797  8ACD 21 F0 88     	ld hl,Numero_de_entidades
 798  8AD0 35           	dec (hl)
 799  8AD1 18 32        	jr 3F
 800  8AD3
 801  8AD3              ; -----
 802  8AD3
 803  8AD3              ;	`Movemos´ la explosión.
 804  8AD3
 805  8AD3 2A B8 88     4 ld hl,(Puntero_DESPLZ_der)
 806  8AD6 23           	inc hl
 807  8AD7 23           	inc hl
 808  8AD8 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 809  8ADB CD E1 8B     	call Extrae_address
 810  8ADE 22 AE 88     	ld (Puntero_objeto),hl
 811  8AE1
 812  8AE1 21 E6 88     	ld hl,Frames_explosion
 813  8AE4 35           	dec (hl)
 814  8AE5 18 1E        	jr 3F
 815  8AE7
 816  8AE7 AF           2 xor a
 817  8AE8 32 D4 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 818  8AEB
 819  8AEB              ; Movemos Entidades malignas.
 820  8AEB
 821  8AEB CD D5 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 822  8AEE
 823  8AEE 3A D4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 824  8AF1 CB 67        	bit 4,a
 825  8AF3 C8           	ret z
 826  8AF4
 827  8AF4              ; Ha habido desplazamiento de la entidad maligna.
 828  8AF4              ; Ha llegado a zona de AMADEUS ???
 829  8AF4
 830  8AF4 3A B1 88     	ld a,(Coordenada_y)
 831  8AF7 FE 14        	cp $14
 832  8AF9 D4 00 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 833  8AFC              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 834  8AFC              ; ---------
 835  8AFC
 836  8AFC CD 31 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 837  8AFF CD 0E 8D     	call Repone_datos_de_borrado
 838  8B02 CD 87 8B     	call Limpia_Variables_de_borrado
 839  8B05
 840  8B05 C9           3 ret													; _de la misma.
 841  8B06
 842  8B06              ; --------------------------------------------------------------------------------------------------------------
 843  8B06              ;
 844  8B06              ;	29/1/23
 845  8B06
 846  8B06              Mov_Amadeus
 847  8B06
 848  8B06 CD CE 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 849  8B09
 850  8B09 3A D4 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 851  8B0C CB 67        	bit 4,a
 852  8B0E C8           	ret z
 853  8B0F
 854  8B0F              ; ---------
 855  8B0F
 856  8B0F CD 31 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 857  8B12 CD FE 8C     	call Repone_datos_de_borrado_Amadeus
 858  8B15 CD 87 8B     	call Limpia_Variables_de_borrado
 859  8B18
 860  8B18 C9           	ret
 861  8B19
 862  8B19              ; -----------------------------------------------------------------------------------
 863  8B19              ;
 864  8B19              ;	16/11/23
 865  8B19
 866  8B19 CD E7 8B     Inicia_entidad	call Inicia_Puntero_objeto
 867  8B1C CD 7A 98     	call Recompone_posicion_inicio
 868  8B1F CD 59 92     	call Draw
 869  8B22 CD A0 7F     	call Guarda_foto_registros
 870  8B25 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 871  8B26              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 872  8B26 CD 2F 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 873  8B29 C9           	ret
 874  8B2A
 875  8B2A              ; --------------------------------------------------------------------------------------------------------------
 876  8B2A              ;
 877  8B2A              ;	31/08/23
 878  8B2A              ;
 879  8B2A              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 880  8B2A              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 881  8B2A
 882  8B2A              Guarda_foto_entidad_a_pintar
 883  8B2A
 884  8B2A              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 885  8B2A
 886  8B2A CD 59 92     	call Draw
 887  8B2D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 888  8B30 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 889  8B31
 890  8B31              ; --------------------------------------------------------------------------------------------------------------
 891  8B31              ;
 892  8B31              ;	19/9/23
 893  8B31
 894  8B31 21 AA 88     Prepara_var_pintado ld hl,Filas
 895  8B34 11 CA 88     	ld de,Variables_de_pintado
 896  8B37 01 08 00     	ld bc,8
 897  8B3A ED B0        	ldir
 898  8B3C C9           	ret
 899  8B3D
 900  8B3D              ; --------------------------------------------------------------------------------------------------------------
 901  8B3D
 902  8B3D 21 CA 88     Repone_pintar ld hl,Variables_de_pintado
 903  8B40 11 AA 88     	ld de,Filas
 904  8B43 01 08 00     	ld bc,8
 905  8B46 ED B0        	ldir
 906  8B48 C9           	ret
 907  8B49
 908  8B49              ; *************************************************************************************************************************************************************
 909  8B49              ;
 910  8B49              ; 8/1/23
 911  8B49              ;
 912  8B49              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 913  8B49              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 914  8B49              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 915  8B49
 916  8B49              ; Destruye HL y DE !!!!!
 917  8B49
 918  8B49              Inicia_punteros_de_cajas
 919  8B49
 920  8B49 21 6C 85     	ld hl,Indice_de_cajas
 921  8B4C CD E1 8B         call Extrae_address
 922  8B4F 22 EA 88         ld (Puntero_store_caja),hl
 923  8B52 21 6E 85     	ld hl,Indice_de_cajas+2
 924  8B55 22 EE 88     	ld (Indice_restore_caja),hl
 925  8B58 CD E1 8B     	call Extrae_address
 926  8B5B 22 EC 88     	ld (Puntero_restore_caja),hl
 927  8B5E C9               ret
 928  8B5F
 929  8B5F              ; *************************************************************************************************************************************************************
 930  8B5F              ;
 931  8B5F              ; 8/1/23
 932  8B5F              ;
 933  8B5F              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 934  8B5F
 935  8B5F 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 936  8B62 22 08 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 937  8B65 C9           	ret
 938  8B66 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 939  8B69 22 0A 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 940  8B6C C9           	ret
 941  8B6D
 942  8B6D              ; -------------------------------------------------------------------------------------------------------------
 943  8B6D              ;
 944  8B6D              ; 21/9/23
 945  8B6D              ;
 946  8B6D
 947  8B6D              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 948  8B6D
 949  8B6D              Limpia_album_Amadeus
 950  8B6D
 951  8B6D 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 952  8B70 7E           	ld a,(hl)
 953  8B71 A7           	and a
 954  8B72 C8           	ret z
 955  8B73
 956  8B73 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 957  8B76 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 958  8B79 01 0B 00     	ld bc,11
 959  8B7C AF           	xor a
 960  8B7D 77           	ld (hl),a
 961  8B7E ED B0        	ldir
 962  8B80
 963  8B80 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 964  8B83 22 04 89     	ld (End_Snapshot_Amadeus),hl
 965  8B86
 966  8B86 C9           	ret
 967  8B87
 968  8B87 21 C4 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 969  8B8A 11 C5 88     	ld de,Variables_de_borrado+1
 970  8B8D 01 05 00     	ld bc,5
 971  8B90 AF           	xor a
 972  8B91 77           	ld (hl),a
 973  8B92 ED B0        	ldir
 974  8B94 C9           	ret
 975  8B95
 976  8B95              ; -------------------------------------------------------------------------------------------------------------
 977  8B95              ;
 978  8B95              ; 8/9/23
 979  8B95              ;
 980  8B95
 981  8B95              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
 982  8B95              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
 983  8B95
 984  8B95              Calcula_numero_de_malotes
 985  8B95
 986  8B95 21 00 70     	ld hl,Album_de_fotos
 987  8B98 EB           	ex de,hl
 988  8B99 2A FE 88     	ld hl,(Stack_snapshot)
 989  8B9C
 990  8B9C              ;	ld a,h
 991  8B9C              ;	and a
 992  8B9C              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
 993  8B9C
 994  8B9C 06 00        4 ld b,0
 995  8B9E 7D           	ld a,l
 996  8B9F 93           	sub e
 997  8BA0 28 07        	jr z,1F
 998  8BA2
 999  8BA2              ; Nº de malotes no es "0".
1000  8BA2
1001  8BA2 D6 06        2 sub 6
1002  8BA4 04           	inc b
1003  8BA5 A7           	and a
1004  8BA6 20 FA        	jr nz,2B
1005  8BA8 78           	ld a,b
1006  8BA9
1007  8BA9 32 F3 88     1 ld (Numero_de_malotes),a
1008  8BAC C9           	ret
1009  8BAD
1010  8BAD              ; -------------------------------------------------------------------------------------------------------------
1011  8BAD              ;
1012  8BAD              ; 8/9/23
1013  8BAD              ;
1014  8BAD
1015  8BAD              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1016  8BAD              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1017  8BAD
1018  8BAD              Calcula_malotes_Amadeus
1019  8BAD
1020  8BAD 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1021  8BB0 EB           	ex de,hl
1022  8BB1 2A 04 89     	ld hl,(End_Snapshot_Amadeus)
1023  8BB4
1024  8BB4 7C           	ld a,h
1025  8BB5 A7           	and a
1026  8BB6 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1027  8BB8
1028  8BB8 06 00        	ld b,0
1029  8BBA 7D           	ld a,l
1030  8BBB 93           	sub e
1031  8BBC 28 07        	jr z,1F
1032  8BBE
1033  8BBE              ; Nº de malotes no es "0".
1034  8BBE
1035  8BBE D6 06        2 sub 6
1036  8BC0 04           	inc b
1037  8BC1 A7           	and a
1038  8BC2 20 FA        	jr nz,2B
1039  8BC4 78           	ld a,b
1040  8BC5
1041  8BC5 32 F3 88     1 ld (Numero_de_malotes),a
1042  8BC8 C9           	ret
1043  8BC9
1044  8BC9              ; -------------------------------------------------------------------------------------------------------------
1045  8BC9              ;
1046  8BC9              ; 28/2/23
1047  8BC9              ;
1048  8BC9
1049  8BC9              Calcula_numero_de_disparotes
1050  8BC9
1051  8BC9 21 56 70     	ld hl,Album_de_fotos_disparos
1052  8BCC EB           	ex de,hl
1053  8BCD 2A 02 89     	ld hl,(End_Snapshot_disparos)
1054  8BD0
1055  8BD0 06 00        	ld b,0
1056  8BD2 7D           	ld a,l
1057  8BD3 93           	sub e
1058  8BD4 28 07        	jr z,1F
1059  8BD6
1060  8BD6              ; Nº de malotes no es "0".
1061  8BD6
1062  8BD6 D6 06        2 sub 6
1063  8BD8 04           	inc b
1064  8BD9 A7           	and a
1065  8BDA 20 FA        	jr nz,2B
1066  8BDC 78           	ld a,b
1067  8BDD
1068  8BDD 32 07 89     1 ld (Numero_de_disparotes),a
1069  8BE0 C9           	ret
1070  8BE1
1071  8BE1              ; *************************************************************************************************************************************************************
1072  8BE1              ;
1073  8BE1              ; 20/10/22
1074  8BE1              ;
1075  8BE1              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1076  8BE1              ;
1077  8BE1              ; Destruye el puntero y DE !!!!!
1078  8BE1
1079  8BE1 5E           Extrae_address ld e,(hl)
1080  8BE2 23           	inc hl
1081  8BE3 56           	ld d,(hl)
1082  8BE4 2B           	dec hl
1083  8BE5 EB           	ex de,hl
1084  8BE6 C9           	ret
1085  8BE7
1086  8BE7              ; *************************************************************************************************************************************************************
1087  8BE7              ;
1088  8BE7              ;	7/2/23
1089  8BE7              ;
1090  8BE7              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1091  8BE7              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1092  8BE7              ;
1093  8BE7              ;   Destruye HL y BC !!!!!,
1094  8BE7              ;
1095  8BE7              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1096  8BE7              ;					"0" ..... Izquierda.
1097  8BE7
1098  8BE7              Inicia_Puntero_objeto
1099  8BE7
1100  8BE7 3A BE 88     	ld a,(Cuad_objeto)
1101  8BEA E6 01        	and 1
1102  8BEC F5           	push af
1103  8BED CC 0B 8C     	call z,Inicia_puntero_objeto_izq
1104  8BF0 F1           	pop af
1105  8BF1 28 2B        	jr z,1F
1106  8BF3 CD F8 8B     	call Inicia_puntero_objeto_der
1107  8BF6 18 26        	jr 1F
1108  8BF8
1109  8BF8              ; Arrancamos desde la parte izquierda de la pantalla.
1110  8BF8              ; Iniciamos (Indice_Sprite_der).
1111  8BF8
1112  8BF8 2A B4 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1113  8BFB 22 B8 88     	ld (Puntero_DESPLZ_der),hl
1114  8BFE CD E1 8B     	call Extrae_address
1115  8C01 22 AE 88     	ld (Puntero_objeto),hl
1116  8C04
1117  8C04 2A B6 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1118  8C07 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
1119  8C0A C9           	ret
1120  8C0B
1121  8C0B              ; Arrancamos desde la parte derecha de la pantalla.
1122  8C0B              ; Iniciamos (Indice_Sprite_izq).
1123  8C0B
1124  8C0B 2A B6 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1125  8C0E 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
1126  8C11 CD E1 8B     	call Extrae_address
1127  8C14 22 AE 88     	ld (Puntero_objeto),hl
1128  8C17
1129  8C17 2A B4 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1130  8C1A 22 B8 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1131  8C1D C9           	ret
1132  8C1E
1133  8C1E              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1134  8C1E
1135  8C1E 21 40 83     1 ld hl,Amadeus
1136  8C21 ED 4B AE 88  	ld bc,(Puntero_objeto)
1137  8C25 B7 ED 42     	sub hl,bc
1138  8C28 C0           	ret nz
1139  8C29 21 D4 88     	ld hl,Ctrl_0
1140  8C2C CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1141  8C2E C9           	ret 												; _de nuestra nave en los extremos.
1142  8C2F
1143  8C2F              ; *************************************************************************************************************************************************************
1144  8C2F              ;
1145  8C2F              ;	14/5/23
1146  8C2F              ;
1147  8C2F              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1148  8C2F              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1149  8C2F
1150  8C2F              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1151  8C2F              ;	_de la 2ª y 3ª entidad respectivamente.
1152  8C2F
1153  8C2F              Store_Restore_cajas
1154  8C2F
1155  8C2F E5           	push hl
1156  8C30 D5           	push de
1157  8C31 C5            	push bc
1158  8C32
1159  8C32              ;	STORE !!!!!
1160  8C32              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1161  8C32
1162  8C32 21 AA 88     	ld hl,Filas
1163  8C35 ED 5B EA 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1164  8C39 01 3D 00     	ld bc,61
1165  8C3C ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1166  8C3E
1167  8C3E              ; 	Entidad_sospechosa. 20/4/23
1168  8C3E
1169  8C3E 3A C3 88     	ld a,(Impacto)
1170  8C41 A7           	and a
1171  8C42 28 0C        	jr z,1F
1172  8C44
1173  8C44 2A EA 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1174  8C47 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1175  8C4A A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1176  8C4B ED 4A        	adc hl,bc 											; _ "0" más adelante.
1177  8C4D 22 0D 89     	ld (Entidad_sospechosa_de_colision),hl
1178  8C50
1179  8C50              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1180  8C50
1181  8C50 2A EC 88     1 ld hl,(Puntero_restore_caja)
1182  8C53 7E           	ld a,(hl)
1183  8C54 A7           	and a
1184  8C55 F5           	push af
1185  8C56 28 08        	jr z,2F
1186  8C58
1187  8C58 11 AA 88     	ld de,Filas
1188  8C5B 01 3D 00     	ld bc,61
1189  8C5E ED B0        	ldir
1190  8C60
1191  8C60 CD 7C 8C     2 call Incrementa_punteros_de_cajas
1192  8C63
1193  8C63 F1           	pop af
1194  8C64 28 EA        	jr z,1B
1195  8C66
1196  8C66 C1           	pop bc
1197  8C67 D1           	pop de
1198  8C68 E1           	pop hl
1199  8C69
1200  8C69 C9           	ret
1201  8C6A
1202  8C6A              ; **************************************************************************************************
1203  8C6A              ;
1204  8C6A              ;	12/05/23
1205  8C6A              ;
1206  8C6A              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1207  8C6A
1208  8C6A E5           Restore_entidad push hl
1209  8C6B D5           	push de
1210  8C6C C5            	push bc
1211  8C6D
1212  8C6D 2A EA 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1213  8C70 11 AA 88     	ld de,Filas
1214  8C73 01 3D 00     	ld bc,61
1215  8C76 ED B0        	ldir
1216  8C78
1217  8C78 C1           	pop bc
1218  8C79 D1           	pop de
1219  8C7A E1           	pop hl
1220  8C7B C9           	ret
1221  8C7C
1222  8C7C              ; **************************************************************************************************
1223  8C7C              ;
1224  8C7C              ;	08/05/23
1225  8C7C              ;
1226  8C7C              ;	Incrementamos los dos punteros de entidades. (+1).
1227  8C7C
1228  8C7C              Incrementa_punteros_de_cajas
1229  8C7C
1230  8C7C 2A EC 88     	ld hl,(Puntero_restore_caja)
1231  8C7F 22 EA 88     	ld (Puntero_store_caja),hl
1232  8C82 2A EE 88     	ld hl,(Indice_restore_caja)
1233  8C85 23           	inc hl
1234  8C86 23           	inc hl
1235  8C87 22 EE 88     	ld (Indice_restore_caja),hl
1236  8C8A CD E1 8B         call Extrae_address
1237  8C8D 22 EC 88         ld (Puntero_restore_caja),hl
1238  8C90 C9               ret
1239  8C91
1240  8C91              ; **************************************************************************************************
1241  8C91              ;
1242  8C91              ;	25/01/23
1243  8C91              ;
1244  8C91              ;	Restore_Amadeus
1245  8C91              ;
1246  8C91              ;	Cargamos en DRAW los parámetros de Amadeus.
1247  8C91              ;
1248  8C91
1249  8C91 E5           Restore_Amadeus	push hl
1250  8C92 D5           	push de
1251  8C93 C5            	push bc
1252  8C94 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1253  8C97 11 AA 88     	ld de,Filas
1254  8C9A 01 3D 00     	ld bc,61
1255  8C9D ED B0        	ldir
1256  8C9F C1           	pop bc
1257  8CA0 D1           	pop de
1258  8CA1 E1           	pop hl
1259  8CA2 C9           	ret
1260  8CA3
1261  8CA3              ; *************************************************************************************************************************************************************
1262  8CA3              ;
1263  8CA3              ;	29/04/23
1264  8CA3              ;
1265  8CA3              ;	Store_Amadeus
1266  8CA3              ;
1267  8CA3              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1268  8CA3              ;
1269  8CA3              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1270  8CA3              ;
1271  8CA3              ;	DESTRUYE: HL y BC y DE.
1272  8CA3
1273  8CA3 21 AA 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1274  8CA6 01 3D 00     	ld bc,61
1275  8CA9 ED B0        	ldir
1276  8CAB C9           	ret
1277  8CAC
1278  8CAC              ; -----------------------------------------------------------
1279  8CAC              ;
1280  8CAC              ;	27/04/23
1281  8CAC              ;
1282  8CAC              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1283  8CAC              ;
1284  8CAC              ;	Destruye: HL,BC,DE,A
1285  8CAC
1286  8CAC 21 AA 88     Borra_datos_entidad ld hl,Filas
1287  8CAF 01 3C 00     	ld bc,60
1288  8CB2 AF           	xor a
1289  8CB3 77           	ld (hl),a
1290  8CB4 11 AB 88     	ld de,Filas+1
1291  8CB7 ED B0        	ldir
1292  8CB9 C9           	ret
1293  8CBA
1294  8CBA              ; -----------------------------------------------------------
1295  8CBA
1296  8CBA              ; Teclado.
1297  8CBA
1298  8CBA 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1299  8CBC DB FE        	in a,($fe)
1300  8CBE E6 01        	and $01
1301  8CC0 28 02        	jr z,1f
1302  8CC2 18 F6        	jr Pulsa_ENTER
1303  8CC4 C9           1 ret
1304  8CC5
1305  8CC5              ; **************************************************************************************************
1306  8CC5              ;
1307  8CC5              ; Temporización.
1308  8CC5
1309  8CC5              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1310  8CC5              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1311  8CC5              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1312  8CC5              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1313  8CC5
1314  8CC5              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1315  8CC5              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1316  8CC5              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1317  8CC5
1318  8CC5              ; A partir de $4f61 no hace falta DELAY.
1319  8CC5
1320  8CC5              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1321  8CC5
1322  8CC5 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1323  8CC8 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1324  8CC9 78           	LD A,B
1325  8CCA A7           	AND A
1326  8CCB 20 FB        	JR NZ,wait
1327  8CCD C9           	RET
1328  8CCE
1329  8CCE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1330  8CCE              ;
1331  8CCE              ;	5/3/23
1332  8CCE              ;
1333  8CCE              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1334  8CCE
1335  8CCE              Movimiento_Amadeus
1336  8CCE
1337  8CCE              ; Disparo.
1338  8CCE
1339  8CCE              ;	ld a,(Disparo_Amadeus)
1340  8CCE              ;	and a
1341  8CCE              ;	jr nz,1F
1342  8CCE              ;	jr 2F
1343  8CCE
1344  8CCE              ;1 ld a,$f7													; "5" para disparar.
1345  8CCE              ;	in a,($fe)
1346  8CCE              ;	and $10
1347  8CCE
1348  8CCE              ;	push af
1349  8CCE              ;	call z,Genera_disparo
1350  8CCE              ;	pop af
1351  8CCE              ;	jr nz,2F
1352  8CCE
1353  8CCE              ;	ld a,(Disparo_Amadeus)
1354  8CCE              ;	xor 1
1355  8CCE              ;	ld (Disparo_Amadeus),a
1356  8CCE
1357  8CCE 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1358  8CD0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1359  8CD2 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1360  8CD4 CC 34 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1361  8CD7
1362  8CD7 3E F7        	ld a,$f7
1363  8CD9 DB FE        	in a,($fe)
1364  8CDB E6 01        	and $01
1365  8CDD C8           	ret z
1366  8CDE
1367  8CDE 3E F7        	ld a,$f7
1368  8CE0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1369  8CE2 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1370  8CE4 CC 16 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1371  8CE7 C9           	ret
1372  8CE8
1373  8CE8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1374  8CE8              ;
1375  8CE8              ;	Rutina provisional para que los malotes cagen balas.
1376  8CE8
1377  8CE8              Detecta_disparo_entidad
1378  8CE8
1379  8CE8 3A 22 89     	ld a,(Disparo_entidad)
1380  8CEB A7           	and a
1381  8CEC C8           	ret z
1382  8CED
1383  8CED              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1384  8CED
1385  8CED              ;	ld a,$7f				; Detecta SPACE.
1386  8CED              ;	in a,($fe)
1387  8CED              ;	and 1
1388  8CED              ;	ret nz
1389  8CED
1390  8CED              ;	call Genera_disparo
1391  8CED C9           	ret
1392  8CEE
1393  8CEE              ; ----------------------------------------------------------------------
1394  8CEE              ;
1395  8CEE              ;	8/9/23
1396  8CEE
1397  8CEE 2A 04 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1398  8CF1 2B            	dec hl
1399  8CF2 7E           	ld a,(hl)
1400  8CF3 A7           	and a
1401  8CF4 C8           	ret z										; Salimos si es álbum está vacío.
1402  8CF5
1403  8CF5 11 C9 88     	ld de,Variables_de_borrado+5
1404  8CF8 01 06 00     	ld bc,6
1405  8CFB ED B8        	lddr
1406  8CFD C9           	ret
1407  8CFE
1408  8CFE              ; ----------------------------------------------------------------------
1409  8CFE              ;
1410  8CFE              ;	9/9/23
1411  8CFE
1412  8CFE              Repone_datos_de_borrado_Amadeus
1413  8CFE
1414  8CFE 21 C4 88     	ld hl,Variables_de_borrado
1415  8D01 11 AC 70     	ld de,Album_de_fotos_Amadeus
1416  8D04 01 06 00     	ld bc,6
1417  8D07 ED B0        	ldir
1418  8D09
1419  8D09 EB           	ex de,hl
1420  8D0A 22 04 89     	ld (End_Snapshot_Amadeus),hl
1421  8D0D
1422  8D0D C9           	ret
1423  8D0E
1424  8D0E              ; ----------------------------------------------------------------------
1425  8D0E              ;
1426  8D0E              ;	27/10/23
1427  8D0E              ;
1428  8D0E
1429  8D0E              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1430  8D0E              ;	_ Album_de_fotos correspondiente.
1431  8D0E
1432  8D0E              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1433  8D0E              ;	_ durante el proceso de escritura.
1434  8D0E
1435  8D0E              Repone_datos_de_borrado
1436  8D0E
1437  8D0E F3           	di
1438  8D0F
1439  8D0F ED 5B FE 88  	ld de,(Stack_snapshot)
1440  8D13 21 C4 88     	ld hl,Variables_de_borrado
1441  8D16 01 06 00     	ld bc,6
1442  8D19 ED B0        	ldir
1443  8D1B FB           	ei
1444  8D1C
1445  8D1C EB           	ex de,hl
1446  8D1D 22 FE 88     	ld (Stack_snapshot),hl
1447  8D20
1448  8D20 C9           	ret
1449  8D21
1450  8D21              ; -----------------------------------------------------------------------------------
1451  8D21
1452  8D21              Pinta_Amadeus
1453  8D21
1454  8D21 3E 06        	ld a,6
1455  8D23 D3 FE            out ($fe),a										; Amarillo
1456  8D25
1457  8D25 CD AD 8B        	call Calcula_malotes_Amadeus
1458  8D28 CD E9 95     	call Extrae_foto_Amadeus
1459  8D2B CD 6D 8B     	call Limpia_album_Amadeus
1460  8D2E
1461  8D2E C9           	ret
1462  8D2F
1463  8D2F              Pinta_entidades
1464  8D2F
1465  8D2F              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1466  8D2F
1467  8D2F 3A 06 89     	ld a,(Ctrl_3)
1468  8D32 CB 47        	bit 0,a
1469  8D34 C8           	ret z
1470  8D35
1471  8D35 CD 95 8B     	call Calcula_numero_de_malotes
1472  8D38 CD 67 95     	call Extrae_foto_entidades
1473  8D3B CD FE 7F     	call Limpia_y_reinicia_Stack_Snapshot
1474  8D3E
1475  8D3E C9           	ret
1476  8D3F
1477  8D3F              ; -----------------------------------------------------------------------------------
1478  8D3F              ;
1479  8D3F              ;	12/11/23
1480  8D3F              ;
1481  8D3F              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1482  8D3F
1483  8D3F              Actualiza_relojes
1484  8D3F
1485  8D3F 21 1A 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1486  8D42 34           	inc (hl)
1487  8D43
1488  8D43 34           	inc (hl)
1489  8D44 35           	dec (hl)
1490  8D45 C0           	ret nz
1491  8D46
1492  8D46 21 1B 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1493  8D49 34           	inc (hl)
1494  8D4A C9           	ret
1495  8D4B
1496  8D4B              ; ---------------------------------------------------------------
1497  8D4B              ;
1498  8D4B              ;	27/9/23
1499  8D4B
1500  8D4B              Guarda_parametros_DRAW
1501  8D4B
1502  8D4B 21 AA 88     	ld hl,Filas
1503  8D4E 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1504  8D51 01 3D 00     	ld bc,61
1505  8D54 ED B0        	ldir
1506  8D56 C9           	ret
1507  8D57
1508  8D57              Recupera_parametros_DRAW
1509  8D57
1510  8D57 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1511  8D5A 11 AA 88     	ld de,Filas
1512  8D5D 01 3D 00     	ld bc,61
1513  8D60 ED B0        	ldir
1514  8D62 C9           	ret
1515  8D63
1516  8D63              ; ---------------------------------------------------------------
1517  8D63
1518  8D63              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D63              ; ******************************************************************************************************************************************************************************************
   2+ 8D63              ;
   3+ 8D63              ;   21/07/23
   4+ 8D63              ;
   5+ 8D63              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D63              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D63              ;
   8+ 8D63              ;
   9+ 8D63              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D63              ;
  11+ 8D63              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D63              ;               _ hacen las entidades hacia abajo.
  13+ 8D63              ;
  14+ 8D63              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D63              ;
  16+ 8D63              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D63              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D63              ;
  19+ 8D63              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D63              ;           _ la bala.
  21+ 8D63              ;
  22+ 8D63              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D63              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D63              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D63              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D63              ;           _ en el momento de generarse la bala)).
  27+ 8D63
  28+ 8D63              Genera_disparo
  29+ 8D63
  30+ 8D63              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D63              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D63              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D63              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D63              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D63              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D63              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D63
  38+ 8D63              ; Exclusiones:
  39+ 8D63
  40+ 8D63 3A C2 88         ld a,(Vel_down)
  41+ 8D66 47               ld b,a
  42+ 8D67 3A 19 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D6A B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D6B D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D6C 3A E1 88         ld a,(Columnas)
  46+ 8D6F 47               ld b,a
  47+ 8D70 3A AB 88         ld a,(Columns)
  48+ 8D73 B8               cp b
  49+ 8D74 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D75
  51+ 8D75              ; ----- ----- -----
  52+ 8D75
  53+ 8D75 3A D4 88         ld a,(Ctrl_0)
  54+ 8D78 CB 77            bit 6,a
  55+ 8D7A 20 06            jr nz,14F
  56+ 8D7C
  57+ 8D7C 3A B1 88         ld a,(Coordenada_y)
  58+ 8D7F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D81 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D82
  61+ 8D82 21 00 80     14 ld hl,Indice_disparo
  62+ 8D85 3A B2 88         ld a,(CTRL_DESPLZ)
  63+ 8D88 4F               ld c,a
  64+ 8D89 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D8B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D8B              ;                                            ""        ""       "f9", B="1"
  67+ 8D8B              ;                                            ""        ""       "fb", B="2"
  68+ 8D8B              ;                                            ""        ""       "fb", B="3"
  69+ 8D8B A7               and a
  70+ 8D8C 28 10            jr z,1F
  71+ 8D8E E6 01            and 1
  72+ 8D90 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D91
  74+ 8D91 79               ld a,c
  75+ 8D92 16 F9            ld d,$f9
  76+ 8D94 23           2 inc hl
  77+ 8D95 23               inc hl
  78+ 8D96 04               inc b
  79+ 8D97 BA               cp d
  80+ 8D98 28 04            jr z,1F
  81+ 8D9A 14               inc d
  82+ 8D9B 14               inc d
  83+ 8D9C 18 F6            jr 2B
  84+ 8D9E
  85+ 8D9E CD E1 8B     1 call Extrae_address
  86+ 8DA1 E5               push hl
  87+ 8DA2 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8DA4 DD 21 2F 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8DA8
  90+ 8DA8              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8DA8              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8DA8
  93+ 8DA8 3A D4 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8DAB CB 77            bit 6,a
  95+ 8DAD 20 04            jr nz,19F
  96+ 8DAF
  97+ 8DAF AF               xor a
  98+ 8DB0 32 22 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8DB3
 100+ 8DB3 3A BE 88     19 ld a,(Cuad_objeto)
 101+ 8DB6 FE 02            cp 2
 102+ 8DB8 38 66            jr c,3F
 103+ 8DBA 28 64            jr z,3F
 104+ 8DBC
 105+ 8DBC              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8DBC
 107+ 8DBC E6 01            and 1
 108+ 8DBE 28 30            jr z,4F
 109+ 8DC0
 110+ 8DC0              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8DC0              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8DC0              ;
 113+ 8DC0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8DC0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8DC0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8DC0
 117+ 8DC0 2A AC 88     	ld hl,(Posicion_actual)
 118+ 8DC3
 119+ 8DC3              ;   Amadeus o entidad ???.
 120+ 8DC3
 121+ 8DC3 3A D4 88         ld a,(Ctrl_0)
 122+ 8DC6 CB 77            bit 6,a
 123+ 8DC8 28 0A            jr z,8F
 124+ 8DCA
 125+ 8DCA              ; 	Dispara Amadeus.
 126+ 8DCA
 127+ 8DCA 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8DCC CD 58 95         call PreviousScan
 129+ 8DCF CD 58 95         call PreviousScan
 130+ 8DD2
 131+ 8DD2              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8DD2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8DD2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8DD2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8DD2
 136+ 8DD2 18 11            jr 10F
 137+ 8DD4
 138+ 8DD4              ; 	Dispara Entidad.
 139+ 8DD4
 140+ 8DD4 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8DD7              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8DD7
 143+ 8DD7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8DD7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8DD7
 146+ 8DD7 C5               push bc
 147+ 8DD8 06 10            ld b,16
 148+ 8DDA CD 49 95     9 call NextScan
 149+ 8DDD 10 FB            djnz 9B
 150+ 8DDF C1               pop bc
 151+ 8DE0 CD 4A 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DE3 18 06            jr 17F
 153+ 8DE5
 154+ 8DE5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DE5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DE5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DE5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DE5
 159+ 8DE5 CD 4A 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DE8 CD BF 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DEB              ;                                                      ; _al generar el disparo.
 162+ 8DEB
 163+ 8DEB              ; 	LLegados a este punto tendremos:
 164+ 8DEB              ;
 165+ 8DEB              ;       Puntero_objeto_disparo en IY.
 166+ 8DEB              ;       Rutinas_de_impresion en IX.
 167+ 8DEB              ;       Puntero_de_impresion en HL.
 168+ 8DEB              ;       Impacto/Dirección en BC.
 169+ 8DEB
 170+ 8DEB CD 52 8E     17 call Almacena_disparo
 171+ 8DEE 18 52            jr 6F                                             ; RET.
 172+ 8DF0
 173+ 8DF0              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DF0              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DF0              ;
 176+ 8DF0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DF0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DF0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DF0
 180+ 8DF0 2A AC 88     4 ld hl,(Posicion_actual)
 181+ 8DF3
 182+ 8DF3              ;   Amadeus o entidad ???.
 183+ 8DF3
 184+ 8DF3 3A D4 88         ld a,(Ctrl_0)
 185+ 8DF6 CB 77            bit 6,a
 186+ 8DF8 28 0A            jr z,11F
 187+ 8DFA
 188+ 8DFA              ; 	Dispara Amadeus.
 189+ 8DFA
 190+ 8DFA 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DFC CD 58 95         call PreviousScan
 192+ 8DFF CD 58 95         call PreviousScan
 193+ 8E02
 194+ 8E02              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E02              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E02              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E02              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E02
 199+ 8E02 18 11            jr 13F
 200+ 8E04
 201+ 8E04              ; 	Dispara Entidad.
 202+ 8E04
 203+ 8E04 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E07              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E07
 206+ 8E07              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E07              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E07
 209+ 8E07 C5               push bc
 210+ 8E08 06 10            ld b,16
 211+ 8E0A CD 49 95     12 call NextScan
 212+ 8E0D 10 FB            djnz 12B
 213+ 8E0F C1               pop bc
 214+ 8E10
 215+ 8E10 CD 43 8E         call Ajusta_disparo_parte_derecha
 216+ 8E13 18 06            jr 18F
 217+ 8E15
 218+ 8E15              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E15              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E15              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E15              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E15
 223+ 8E15 CD 43 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E18 CD BF 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E1B              ;                                                       ; _al generar el disparo.
 226+ 8E1B
 227+ 8E1B              ; LLegados a este punto tendremos:
 228+ 8E1B              ;
 229+ 8E1B              ;       Puntero_objeto_disparo en IY.
 230+ 8E1B              ;       Rutinas_de_impresion en IX.
 231+ 8E1B              ;       Puntero_de_impresion en HL.
 232+ 8E1B              ;       Impacto/Dirección en BC.
 233+ 8E1B
 234+ 8E1B CD 52 8E     18 call Almacena_disparo
 235+ 8E1E 18 22            jr 6F                                               ; RET.
 236+ 8E20
 237+ 8E20              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E20
 239+ 8E20 28 11        3 jr z,5F
 240+ 8E22
 241+ 8E22              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E22              ;
 243+ 8E22              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E22              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E22              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E22              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E22
 248+ 8E22              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E22              ;	   ""        ""       "f9", B="1"
 250+ 8E22              ;	   ""        ""       "fb", B="2"
 251+ 8E22              ; 	   ""        ""       "fb", B="3"
 252+ 8E22
 253+ 8E22 2A AC 88     	ld hl,(Posicion_actual)
 254+ 8E25 CD 49 95     	call NextScan
 255+ 8E28
 256+ 8E28              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E28              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E28              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E28              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E28
 261+ 8E28 CD 4A 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E2B
 263+ 8E2B              ; 	No se produce impacto. B="$80"
 264+ 8E2B              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E2B
 266+ 8E2B 01 80 80         ld bc,$8080
 267+ 8E2E
 268+ 8E2E              ; 	LLegados a este punto tendremos:
 269+ 8E2E              ;
 270+ 8E2E              ;       Puntero_objeto_disparo en IY.
 271+ 8E2E              ;       Rutinas_de_impresion en IX.
 272+ 8E2E              ;       Puntero_de_impresion en HL.
 273+ 8E2E              ;       Impacto/Dirección en BC.
 274+ 8E2E
 275+ 8E2E CD 52 8E         call Almacena_disparo
 276+ 8E31 18 0F            jr 6F                                           ; RET.
 277+ 8E33
 278+ 8E33              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E33              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E33              ;
 281+ 8E33              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E33              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E33              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E33              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E33
 286+ 8E33 2A AC 88     5 ld hl,(Posicion_actual)
 287+ 8E36 CD 49 95     	call NextScan
 288+ 8E39
 289+ 8E39              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E39              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E39              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E39              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E39
 294+ 8E39 CD 43 8E         call Ajusta_disparo_parte_derecha
 295+ 8E3C
 296+ 8E3C              ; 	No se produce impacto. B="$80"
 297+ 8E3C              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E3C
 299+ 8E3C 01 80 80     15 ld bc,$8080
 300+ 8E3F
 301+ 8E3F              ; 	LLegados a este punto tendremos:
 302+ 8E3F              ;
 303+ 8E3F              ;       Puntero_objeto_disparo en IY.
 304+ 8E3F              ;       Rutinas_de_impresion en IX.
 305+ 8E3F              ;       Puntero_de_impresion en HL.
 306+ 8E3F              ;       Impacto/Dirección en BC.
 307+ 8E3F
 308+ 8E3F CD 52 8E         call Almacena_disparo
 309+ 8E42
 310+ 8E42 C9           6 ret
 311+ 8E43
 312+ 8E43              ; ----------------------------------------------------------------
 313+ 8E43              ;
 314+ 8E43              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E43              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E43              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E43
 318+ 8E43 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E44 FE 02            cp 2
 320+ 8E46 38 01            jr c,1F
 321+ 8E48 23               inc hl
 322+ 8E49 C9           1 ret
 323+ 8E4A
 324+ 8E4A 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E4B FE 01        	cp 1
 326+ 8E4D 20 01        	jr nz,1F
 327+ 8E4F 2B           	dec hl
 328+ 8E50 2B           1 dec hl
 329+ 8E51 C9               ret
 330+ 8E52
 331+ 8E52              ; ----------------------------------------------------------------
 332+ 8E52              ;
 333+ 8E52              ;   25/02/23
 334+ 8E52              ;
 335+ 8E52              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E52              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E52              ;
 338+ 8E52              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E52              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E52
 341+ 8E52              Almacena_disparo
 342+ 8E52
 343+ 8E52 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E53 F1               pop af
 345+ 8E54 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E55
 347+ 8E55 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E56 E6 01            and 1
 349+ 8E58 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E5A              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E5A              ; 	Dispara AMADEUS.
 352+ 8E5A
 353+ 8E5A              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E5A              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E5A              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E5A              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E5A
 358+ 8E5A C5               push bc
 359+ 8E5B 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E5E 2A 0A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E61 A7               and a
 362+ 8E62 ED 42            sbc hl,bc
 363+ 8E64 CC 66 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E67 C1               pop bc
 365+ 8E68 28 54            jr z,4F
 366+ 8E6A
 367+ 8E6A 2A 0A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E6D 23               inc hl
 369+ 8E6E 23               inc hl
 370+ 8E6F 22 0A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E72              ;                                                   ; _ Disparo_(+1).
 372+ 8E72 18 18            jr 2F
 373+ 8E74
 374+ 8E74              ; Dispara una entidad.
 375+ 8E74
 376+ 8E74 C5           1 push bc
 377+ 8E75 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E78 2A 08 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E7B A7               and a
 380+ 8E7C ED 42            sbc hl,bc
 381+ 8E7E CC 5F 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E81 C1               pop bc
 383+ 8E82 28 3A            jr z,4F
 384+ 8E84
 385+ 8E84 2A 08 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E87 23               inc hl
 387+ 8E88 23               inc hl
 388+ 8E89 22 08 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E8C              ;                                                   ; _ Disparo_(+1).
 390+ 8E8C CD E1 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E8F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E8F              ;
 393+ 8E8F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E8F              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E8F              ;                                                     Puntero_de_impresion en HL.
 396+ 8E8F              ;                                                     Impacto/Dirección en BC.
 397+ 8E8F
 398+ 8E8F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E90 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E91 23               inc hl                                          ; _ al siguiente.
 401+ 8E92 A7               and a
 402+ 8E93 20 C0            jr nz,3B
 403+ 8E95
 404+ 8E95 08               ex af,af
 405+ 8E96 ED 73 F8 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E9A F9               ld sp,hl
 407+ 8E9B
 408+ 8E9B DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E9D F5               push af                                         ; Puntero de impresión.
 410+ 8E9E FD E5            push iy                                         ; Puntero objeto.
 411+ 8EA0 C5               push bc                                         ; Control.
 412+ 8EA1
 413+ 8EA1 ED 7B F8 88      ld sp,(Stack)
 414+ 8EA5
 415+ 8EA5              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8EA5
 417+ 8EA5 21 E7 88     	ld hl,Ctrl_1
 418+ 8EA8 CB C6        	set 0,(hl)
 419+ 8EAA
 420+ 8EAA DD E5        	push ix
 421+ 8EAC E1               pop hl
 422+ 8EAD F5               push af
 423+ 8EAE DD E1            pop ix
 424+ 8EB0
 425+ 8EB0 CD A0 7F     	call Guarda_foto_registros
 426+ 8EB3
 427+ 8EB3 21 E7 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8EB6 CB 86        	res 0,(hl)
 429+ 8EB8
 430+ 8EB8              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8EB8              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8EB8
 433+ 8EB8 CD 66 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8EBB CD 5F 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8EBE
 436+ 8EBE C9           4 ret
 437+ 8EBF
 438+ 8EBF              ; ----------------------------------------------------------------
 439+ 8EBF              ;
 440+ 8EBF              ;   4/3/23
 441+ 8EBF              ;
 442+ 8EBF              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8EBF              ;   _ al generarse el disparo.
 444+ 8EBF              ;
 445+ 8EBF              ;       "$80" ..... No se produce colisión.
 446+ 8EBF              ;       "$81" ..... Se produce colisión.
 447+ 8EBF              ;
 448+ 8EBF              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8EBF              ;         _ que forman el disparo.
 450+ 8EBF
 451+ 8EBF
 452+ 8EBF              Comprueba_Colision
 453+ 8EBF
 454+ 8EBF              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8EBF
 456+ 8EBF FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8EC1 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8EC2
 459+ 8EC2 CD F8 8E         call Modifica_H_Velocidad_disparo
 460+ 8EC5
 461+ 8EC5 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8EC6 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8EC8 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8ECA
 465+ 8ECA 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8ECC CD E8 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8ECF
 468+ 8ECF 7B               ld a,e
 469+ 8ED0 E6 01            and 1
 470+ 8ED2 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8ED4              ;                                                  ; _ para activar IMPACTO.
 472+ 8ED4 E1               pop hl
 473+ 8ED5 E5               push hl
 474+ 8ED6 CD 49 95         call NextScan
 475+ 8ED9
 476+ 8ED9 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8EDA FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8EDC 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8EDE              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8EDE 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8EE0 CD E8 8E         call Bucle_2
 482+ 8EE3
 483+ 8EE3 43           1 ld b,e
 484+ 8EE4 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8EE5 FD E1            pop iy
 486+ 8EE7 C9               ret
 487+ 8EE8
 488+ 8EE8              ; ---------- ----------
 489+ 8EE8
 490+ 8EE8 06 02        Bucle_2 ld b,2
 491+ 8EEA FD 7E 00     2 ld a,(iy)
 492+ 8EED A6               and (hl)
 493+ 8EEE 28 02            jr z,1F
 494+ 8EF0 1E 81            ld e,$81
 495+ 8EF2 23           1 inc hl
 496+ 8EF3 FD 23            inc iy
 497+ 8EF5 10 F3            djnz 2B
 498+ 8EF7 C9               ret
 499+ 8EF8
 500+ 8EF8              ; ---------- ----------
 501+ 8EF8              ;
 502+ 8EF8              ;   21/7/23
 503+ 8EF8
 504+ 8EF8              Modifica_H_Velocidad_disparo
 505+ 8EF8
 506+ 8EF8 3A 19 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EFB FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EFD D0               ret nc                                         ; _ incrementamos H.
 509+ 8EFE 24               inc h
 510+ 8EFF
 511+ 8EFF C9               ret
 512+ 8F00
 513+ 8F00              ; -------------------------------------------------------------------------------------------------------------
 514+ 8F00              ;
 515+ 8F00              ;   11/04/23
 516+ 8F00              ;
 517+ 8F00              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8F00              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8F00              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8F00              ;
 521+ 8F00              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8F00
 523+ 8F00              Compara_coordenadas_X
 524+ 8F00
 525+ 8F00              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8F00              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8F00
 528+ 8F00              ; Preparamos registros:
 529+ 8F00
 530+ 8F00 21 B0 88         ld hl,Filas+6
 531+ 8F03 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8F04 23               inc hl
 533+ 8F05 23               inc hl
 534+ 8F06 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8F07 43               ld b,e
 536+ 8F08
 537+ 8F08 21 BE 88         ld hl,Filas+20
 538+ 8F0B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8F0C 21 14 89         ld hl,Coordenadas_X_Entidad
 540+ 8F0F CD 2B 91         call Guarda_coordenadas_X
 541+ 8F12
 542+ 8F12              ; Preparamos registros:
 543+ 8F12
 544+ 8F12 21 84 85         ld hl,Amadeus_db+6
 545+ 8F15 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8F16 23               inc hl
 547+ 8F17 23               inc hl
 548+ 8F18 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8F19 7B               ld a,e
 550+ 8F1A 08               ex af,af'
 551+ 8F1B 21 92 85         ld hl,Amadeus_db+20
 552+ 8F1E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8F1F 21 11 89         ld hl,Coordenadas_X_Amadeus
 554+ 8F22 CD 2B 91         call Guarda_coordenadas_X
 555+ 8F25
 556+ 8F25              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 8F25              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 8F25
 559+ 8F25 04               inc b
 560+ 8F26 05               dec b
 561+ 8F27 28 04            jr z,1F
 562+ 8F29 06 03            ld b,3
 563+ 8F2B 18 02            jr 2F
 564+ 8F2D 06 02        1 ld b,2
 565+ 8F2F 08           2 ex af,af'
 566+ 8F30 3C               inc a
 567+ 8F31 3D               dec a
 568+ 8F32 28 04            jr z,5F
 569+ 8F34 0E 03            ld c,3
 570+ 8F36 18 02            jr 6F
 571+ 8F38 0E 02        5 ld c,2
 572+ 8F3A 79           6 ld a,c
 573+ 8F3B 08               ex af,af'
 574+ 8F3C 11 14 89         ld de,Coordenadas_X_Entidad
 575+ 8F3F 1A           4 ld a,(de)
 576+ 8F40 21 11 89         ld hl,Coordenadas_X_Amadeus
 577+ 8F43 BE           3 cp (hl)
 578+ 8F44 28 0E            jr z,7F
 579+ 8F46 23               inc hl
 580+ 8F47 0D               dec c
 581+ 8F48 20 F9            jr nz,3B
 582+ 8F4A 13               inc de
 583+ 8F4B 08               ex af,af'
 584+ 8F4C 4F               ld c,a
 585+ 8F4D 08               ex af,af'
 586+ 8F4E 10 EF            djnz 4B
 587+ 8F50
 588+ 8F50              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 8F50
 590+ 8F50 CD 67 91     8 call Limpia_Coordenadas_X
 591+ 8F53 C9               ret
 592+ 8F54
 593+ 8F54 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 8F56 32 C3 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 8F59 21 0C 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 8F5C CB D6            set 2,(hl)
 597+ 8F5E 18 F0            jr 8B
 598+ 8F60
 599+ 8F60              ; -----------------------------------------------------------------------
 600+ 8F60              ;
 601+ 8F60              ;   17/04/23
 602+ 8F60              ;
 603+ 8F60
 604+ 8F60              Detecta_colision_nave_entidad
 605+ 8F60
 606+ 8F60              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 8F60
 608+ 8F60 2A AC 88         ld hl,(Posicion_actual)
 609+ 8F63 CD A4 94         call Calcula_puntero_de_impresion
 610+ 8F66
 611+ 8F66              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 8F66              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 8F66
 614+ 8F66 DD E5            push ix
 615+ 8F68 E1               pop hl
 616+ 8F69 E5               push hl
 617+ 8F6A
 618+ 8F6A              ; ----- ----- -----
 619+ 8F6A 1E 00            ld e,0                                         ; Indica impacto.
 620+ 8F6C 06 0A            ld b,10
 621+ 8F6E CD 9E 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 8F71 7B               ld a,e
 623+ 8F72 FE 05            cp 5
 624+ 8F74 38 0E            jr c,3F
 625+ 8F76
 626+ 8F76              ; LLegados a este punto:
 627+ 8F76              ;
 628+ 8F76              ;   HAY COLISIÓN !!!!!.
 629+ 8F76              ;
 630+ 8F76              ;   .db (Impacto) de Amadeus a "1".
 631+ 8F76              ;   SET el bit3 de (Impacto2).
 632+ 8F76              ;
 633+ 8F76              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 8F76
 635+ 8F76 21 97 85         ld hl,Amadeus_db+25
 636+ 8F79 36 01            ld (hl),1
 637+ 8F7B 21 0C 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 8F7E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 8F80 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 8F82 18 18            jr 1F
 641+ 8F84
 642+ 8F84              ; -----
 643+ 8F84
 644+ 8F84 E1           3 pop hl
 645+ 8F85 CD 49 95         call NextScan
 646+ 8F88 E5               push hl
 647+ 8F89 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 8F8A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 8F8C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 8F8E 30 0C            jr nc,1F
 651+ 8F90              ;                                                  ; _ 2º scanline si esto es así.
 652+ 8F90 10 DC            djnz 2B
 653+ 8F92
 654+ 8F92              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 8F92
 656+ 8F92              ; LLegados a este punto:
 657+ 8F92              ;
 658+ 8F92              ;   NO HAY COLISIÓN !!!!!.
 659+ 8F92              ;
 660+ 8F92              ;   .db (Impacto) de Amadeus a "0".
 661+ 8F92              ;   RES el bit2 de (Impacto2).
 662+ 8F92              ;
 663+ 8F92              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F92              ;   Lo colocamos a "0".
 665+ 8F92
 666+ 8F92 21 0C 89         ld hl,Impacto2
 667+ 8F95 CB 96            res 2,(hl)
 668+ 8F97 2A 0D 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 8F9A 36 00            ld (hl),0
 670+ 8F9C
 671+ 8F9C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 8F9D C9               ret
 673+ 8F9E
 674+ 8F9E               ; ---------- ----------
 675+ 8F9E
 676+ 8F9E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 8F9F 3A AB 88         ld a,(Columns)
 678+ 8FA2 47               ld b,a
 679+ 8FA3 FD 7E 00     2 ld a,(iy)
 680+ 8FA6 BE               cp (hl)
 681+ 8FA7 28 01            jr z,1F
 682+ 8FA9
 683+ 8FA9 1C               inc e
 684+ 8FAA
 685+ 8FAA 23           1 inc hl
 686+ 8FAB FD 23            inc iy
 687+ 8FAD 10 F4            djnz 2B
 688+ 8FAF C1               pop bc
 689+ 8FB0 C9               ret
 690+ 8FB1
 691+ 8FB1              ; -------------------------------------------------------------------------------------------------------------
 692+ 8FB1              ;
 693+ 8FB1              ;   13/03/23
 694+ 8FB1              ;
 695+ 8FB1              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 8FB1              ;
 697+ 8FB1              ;   DESTRUYE: HL,BC,DE y A.
 698+ 8FB1
 699+ 8FB1 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 8FB4 7E               ld a,(hl)
 701+ 8FB5 A7               and a
 702+ 8FB6 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 8FB7
 704+ 8FB7 44               ld b,h
 705+ 8FB8 4D               ld c,l
 706+ 8FB9 2A 00 89         ld hl,(Stack_snapshot_disparos)
 707+ 8FBC E5               push hl
 708+ 8FBD A7               and a
 709+ 8FBE ED 42            sbc hl,bc
 710+ 8FC0 E5               push hl
 711+ 8FC1 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 8FC2
 713+ 8FC2 E1               pop hl
 714+ 8FC3 54               ld d,h
 715+ 8FC4 5D               ld e,l
 716+ 8FC5 1B               dec de
 717+ 8FC6 ED B8            lddr                                                ; Limpiamos.
 718+ 8FC8
 719+ 8FC8 21 56 70         ld hl,Album_de_fotos_disparos
 720+ 8FCB 22 00 89         ld (Stack_snapshot_disparos),hl
 721+ 8FCE
 722+ 8FCE C9               ret
 723+ 8FCF
 724+ 8FCF              ; -------------------------------------------------------------------------------------------------------------
 725+ 8FCF              ;
 726+ 8FCF              ;   18/07/23
 727+ 8FCF              ;
 728+ 8FCF
 729+ 8FCF              Motor_de_disparos
 730+ 8FCF
 731+ 8FCF              ; Gestiona DISPAROS DE AMADEUS.
 732+ 8FCF
 733+ 8FCF 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 8FD2 2A 0A 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 8FD5
 736+ 8FD5 CD E1 8B     2 call Extrae_address
 737+ 8FD8 7E               ld a,(hl)
 738+ 8FD9 A7               and a
 739+ 8FDA 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 8FDC
 741+ 8FDC              ; ----- ----- ----- ----- ----- -----
 742+ 8FDC
 743+ 8FDC C5               push bc
 744+ 8FDD CD A1 90         call foto_disparo_a_borrar
 745+ 8FE0
 746+ 8FE0              ; Existe colisión con este disparo???
 747+ 8FE0
 748+ 8FE0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 8FE1 7E               ld a,(hl)
 750+ 8FE2 2B               dec hl
 751+ 8FE3 E6 01            and 1
 752+ 8FE5 28 1D            jr z,9F
 753+ 8FE7
 754+ 8FE7              ;   En este punto:
 755+ 8FE7              ;
 756+ 8FE7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 8FE7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 8FE7              ;   _con la entidad).
 759+ 8FE7              ;
 760+ 8FE7              ;   Disparo_2A defw 0                                ; Control.
 761+ 8FE7              ;    defw 0                                          ; Puntero objeto.
 762+ 8FE7              ;    defw 0                                          ; Puntero de impresión.
 763+ 8FE7              ;    defw 0                                          ; Rutina de impresión.
 764+ 8FE7
 765+ 8FE7 E5               push hl
 766+ 8FE8
 767+ 8FE8 06 04            ld b,4
 768+ 8FEA 23           19 inc hl
 769+ 8FEB 10 FD            djnz 19B
 770+ 8FED
 771+ 8FED CD E1 8B         call Extrae_address
 772+ 8FF0 CD 12 9C         call Genera_coordenadas_disparo
 773+ 8FF3
 774+ 8FF3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 8FF3
 776+ 8FF3 21 0F 89         ld hl,Coordenadas_disparo_certero
 777+ 8FF6 72               ld (hl),d
 778+ 8FF7 23               inc hl
 779+ 8FF8 73               ld (hl),e
 780+ 8FF9
 781+ 8FF9              ; Elimino el disparo de la base de datos.
 782+ 8FF9
 783+ 8FF9 E1               pop hl
 784+ 8FFA CD 20 91         call Elimina_disparo_de_base_de_datos
 785+ 8FFD 21 0C 89         ld hl,Impacto2
 786+ 9000 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9002
 788+ 9002 18 06            jr 11F
 789+ 9004
 790+ 9004 CD CA 90     9 call Mueve_disparo
 791+ 9007 CD A1 90         call foto_disparo_a_borrar
 792+ 900A
 793+ 900A C1           11 pop bc
 794+ 900B 18 04            jr 7F
 795+ 900D
 796+ 900D              ; ----- ----- ----- ----- ----- -----
 797+ 900D
 798+ 900D ED 42        1 sbc hl,bc
 799+ 900F 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9011
 801+ 9011 2A 0A 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9014 23               inc hl
 803+ 9015 23               inc hl
 804+ 9016 22 0A 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9019 18 BA            jr 2B
 806+ 901B
 807+ 901B CD 66 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 901E              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 901E
 810+ 901E              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 901E
 812+ 901E 01 6A 85         ld bc,Disparo_11
 813+ 9021 2A 08 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9024
 815+ 9024 CD E1 8B     5 call Extrae_address
 816+ 9027 7E               ld a,(hl)
 817+ 9028 A7               and a
 818+ 9029 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 902B
 820+ 902B              ; ----- ----- ----- ----- ----- -----
 821+ 902B
 822+ 902B C5               push bc
 823+ 902C CD A1 90         call foto_disparo_a_borrar
 824+ 902F
 825+ 902F              ; Existe colisión con este disparo???
 826+ 902F
 827+ 902F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9030 7E               ld a,(hl)
 829+ 9031 2B               dec hl
 830+ 9032 E6 01            and 1
 831+ 9034 28 4D            jr z,10F
 832+ 9036
 833+ 9036              ;! La colisión se produce con Amadeus???
 834+ 9036              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9036
 836+ 9036 E5               push hl
 837+ 9037
 838+ 9037 06 04            ld b,4
 839+ 9039 23           16 inc hl
 840+ 903A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 903C
 842+ 903C CD E1 8B         call Extrae_address
 843+ 903F CD 12 9C         call Genera_coordenadas_disparo
 844+ 9042
 845+ 9042 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9043 FE 16            cp $16
 847+ 9045 38 2A            jr c,15F
 848+ 9047
 849+ 9047
 850+ 9047              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9047
 852+ 9047 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9048
 854+ 9048              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9048
 856+ 9048
 857+ 9048 2A 17 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 904B
 859+ 904B              ; Coordenada X de Amadeus en D.
 860+ 904B
 861+ 904B 7D               ld a,l
 862+ 904C E6 1F            and $1F
 863+ 904E 57               ld d,a
 864+ 904F
 865+ 904F 21 86 85         ld hl,Amadeus_db+8
 866+ 9052 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9053
 868+ 9053 21 11 89         ld hl,Coordenadas_X_Amadeus
 869+ 9056 CD 2B 91         call Guarda_coordenadas_X
 870+ 9059
 871+ 9059 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 905A
 873+ 905A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 905A
 875+ 905A 06 02            ld b,2
 876+ 905C C5           20 push bc
 877+ 905D
 878+ 905D 06 03            ld b,3
 879+ 905F 21 11 89         ld hl,Coordenadas_X_Amadeus
 880+ 9062 7E           18 ld a,(hl)
 881+ 9063 BA               cp d
 882+ 9064 20 04            jr nz,17F
 883+ 9066
 884+ 9066              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9066
 886+ 9066 C1               pop bc
 887+ 9067 E1               pop hl
 888+ 9068 18 0D            jr 14F
 889+ 906A
 890+ 906A 23           17 inc hl
 891+ 906B 10 F5            djnz 18B
 892+ 906D
 893+ 906D 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 906E
 895+ 906E C1               pop bc
 896+ 906F 10 EB            djnz 20B
 897+ 9071
 898+ 9071
 899+ 9071              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9071              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9071
 902+ 9071 E1           15 pop hl
 903+ 9072 23               inc hl
 904+ 9073 35               dec (hl)
 905+ 9074 2B               dec hl
 906+ 9075 18 0C            jr 10F
 907+ 9077
 908+ 9077              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9077              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9077
 911+ 9077 E5           14 push hl
 912+ 9078 CD 20 91         call Elimina_disparo_de_base_de_datos
 913+ 907B 21 0C 89         ld hl,Impacto2
 914+ 907E CB CE            set 1,(hl)
 915+ 9080 E1               pop hl
 916+ 9081 18 06            jr 12F
 917+ 9083
 918+ 9083              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9083
 920+ 9083 CD CA 90     10 call Mueve_disparo
 921+ 9086 CD A1 90         call foto_disparo_a_borrar
 922+ 9089 C1           12 pop bc
 923+ 908A
 924+ 908A 18 04            jr 8F
 925+ 908C
 926+ 908C              ; ----- ----- ----- ----- ----- -----
 927+ 908C
 928+ 908C ED 42        4 sbc hl,bc
 929+ 908E 28 0A            jr z,6F
 930+ 9090
 931+ 9090 2A 08 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9093 23               inc hl
 933+ 9094 23               inc hl
 934+ 9095 22 08 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9098 18 8A            jr 5B
 936+ 909A
 937+ 909A CD 5F 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 909D CD 67 91         call Limpia_Coordenadas_X
 939+ 90A0 C9               ret
 940+ 90A1
 941+ 90A1              ; ------------------------------------------------------------------
 942+ 90A1
 943+ 90A1              foto_disparo_a_borrar
 944+ 90A1
 945+ 90A1 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 90A2 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 90A3 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 90A4
 949+ 90A4 E5               push hl
 950+ 90A5 23               inc hl
 951+ 90A6 23               inc hl
 952+ 90A7 ED 73 F8 88      ld (Stack),sp
 953+ 90AB F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 90AC FD E1            pop iy
 955+ 90AE DD E1            pop ix
 956+ 90B0 E1               pop hl
 957+ 90B1 ED 7B F8 88      ld sp,(Stack)
 958+ 90B5 3A E7 88         ld a,(Ctrl_1)
 959+ 90B8 CB C7            set 0,a
 960+ 90BA 32 E7 88         ld (Ctrl_1),a
 961+ 90BD CD A0 7F         call Guarda_foto_registros
 962+ 90C0 3A E7 88         ld a,(Ctrl_1)
 963+ 90C3 CB 87            res 0,a
 964+ 90C5 32 E7 88         ld (Ctrl_1),a
 965+ 90C8 E1               pop hl
 966+ 90C9 C9               ret
 967+ 90CA
 968+ 90CA              ;---------------------------------------------------
 969+ 90CA              ;
 970+ 90CA              ;   18/07/23
 971+ 90CA              ;
 972+ 90CA
 973+ 90CA              Mueve_disparo
 974+ 90CA
 975+ 90CA              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 90CA              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 90CA              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 90CA
 979+ 90CA E5               push hl
 980+ 90CB
 981+ 90CB 7E               ld a,(hl)
 982+ 90CC
 983+ 90CC 06 04            ld b,4
 984+ 90CE 23           1 inc hl
 985+ 90CF 10 FD            djnz 1B
 986+ 90D1
 987+ 90D1              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 90D1
 989+ 90D1 CD E1 8B         call Extrae_address
 990+ 90D4
 991+ 90D4 E6 01            and 1
 992+ 90D6 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 90D8
 994+ 90D8              ; Disparo hacia arriba, (Amadeus).
 995+ 90D8
 996+ 90D8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 90D8              ; _ de la dificultad.
 998+ 90D8
 999+ 90D8 CD 58 95         call PreviousScan
1000+ 90DB CD 58 95         call PreviousScan
1001+ 90DE CD 58 95         call PreviousScan
1002+ 90E1 CD 58 95         call PreviousScan
1003+ 90E4
1004+ 90E4              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 90E4
1006+ 90E4 7C               ld a,h
1007+ 90E5 FE 40            cp $40
1008+ 90E7 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 90E9
1010+ 90E9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 90E9
1012+ 90E9 EB               ex de,hl
1013+ 90EA 06 04            ld b,4
1014+ 90EC 2B           6 dec hl
1015+ 90ED 10 FD            djnz 6B
1016+ 90EF
1017+ 90EF CD 20 91         call Elimina_disparo_de_base_de_datos
1018+ 90F2 E1               pop hl
1019+ 90F3 18 10            jr 7F
1020+ 90F5
1021+ 90F5              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 90F5              ; HL contiene el puntero de impresión del disparo.
1023+ 90F5              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 90F5
1025+ 90F5 D5           3 push de
1026+ 90F6 C5               push bc
1027+ 90F7
1028+ 90F7 CD BF 8E         call Comprueba_Colision
1029+ 90FA
1030+ 90FA              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 90FA
1032+ 90FA 78               ld a,b
1033+ 90FB
1034+ 90FB C1               pop bc
1035+ 90FC D1               pop de
1036+ 90FD
1037+ 90FD EB               ex de,hl
1038+ 90FE
1039+ 90FE 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 90FF 23               inc hl                                      ; _ movimiento.
1041+ 9100 72               ld (hl),d
1042+ 9101
1043+ 9101 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9102
1045+ 9102 23               inc hl                                      ; _ en curso.
1046+ 9103 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9104 2B               dec hl
1048+ 9105
1049+ 9105 C9           7 ret
1050+ 9106
1051+ 9106              ; Disparo hacia abajo, (Entidad).
1052+ 9106
1053+ 9106 3A 19 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9109 47               ld b,a
1055+ 910A
1056+ 910A CD 49 95     4 call NextScan
1057+ 910D 10 FB            djnz 4B
1058+ 910F
1059+ 910F              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 910F
1061+ 910F 7C               ld a,h
1062+ 9110 FE 58            cp $58
1063+ 9112 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9114
1065+ 9114 EB               ex de,hl
1066+ 9115 06 04            ld b,4
1067+ 9117 2B           5 dec hl
1068+ 9118 10 FD            djnz 5B
1069+ 911A
1070+ 911A CD 20 91         call Elimina_disparo_de_base_de_datos
1071+ 911D E1               pop hl
1072+ 911E 18 E5            jr 7B
1073+ 9120
1074+ 9120              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9120
1076+ 9120 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9123 AF               xor a
1078+ 9124 77               ld (hl),a
1079+ 9125 54               ld d,h
1080+ 9126 5D               ld e,l
1081+ 9127 13               inc de
1082+ 9128 ED B0            ldir
1083+ 912A C9               ret
1084+ 912B
1085+ 912B              ; -----------------------------------------------------------------
1086+ 912B              ;
1087+ 912B              ;   19/7/23
1088+ 912B              ;
1089+ 912B              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 912B              ;
1091+ 912B              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 912B              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 912B              ;
1094+ 912B              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 912B              ;
1096+ 912B              ;   INPUTS:
1097+ 912B              ;
1098+ 912B              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 912B              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 912B
1101+ 912B              ;   MODIFICA: A, HL, BC y DE.
1102+ 912B
1103+ 912B              Guarda_coordenadas_X
1104+ 912B
1105+ 912B 7B               ld a,e
1106+ 912C A7               and a
1107+ 912D 20 04            jr nz,1F
1108+ 912F
1109+ 912F 06 02            ld b,2
1110+ 9131 18 02            jr 2F
1111+ 9133
1112+ 9133 06 03        1 ld b,3
1113+ 9135 72           2 ld (hl),d
1114+ 9136 23               inc hl
1115+ 9137 14               inc d
1116+ 9138 10 FB            djnz 2B
1117+ 913A
1118+ 913A C9               ret
1119+ 913B
1120+ 913B              ; -----------------------------------------------------------------
1121+ 913B              ;
1122+ 913B              ;   12/04/23
1123+ 913B              ;
1124+ 913B
1125+ 913B 3A 0C 89     Selector_de_impactos ld a,(Impacto2)
1126+ 913E A7               and a
1127+ 913F C8               ret z
1128+ 9140
1129+ 9140 FE 04            cp 4
1130+ 9142 20 09            jr nz,1F
1131+ 9144
1132+ 9144
1133+ 9144              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9144
1135+ 9144 CD 60 8F         call Detecta_colision_nave_entidad
1136+ 9147
1137+ 9147 21 0C 89         ld hl,Impacto2
1138+ 914A CB 5E            bit 3,(hl)
1139+ 914C C0               ret nz                                               ; Existe colisión, RET.
1140+ 914D
1141+ 914D              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 914D              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 914D
1144+ 914D 21 0C 89     1 ld hl,Impacto2
1145+ 9150 CB 4E            bit 1,(hl)
1146+ 9152 28 07            jr z,2F
1147+ 9154
1148+ 9154 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9157 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9159 18 0B            jr 3F
1151+ 915B
1152+ 915B 21 0C 89     2 ld hl,Impacto2
1153+ 915E CB 46            bit 0,(hl)
1154+ 9160 C8               ret z
1155+ 9161
1156+ 9161              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9161
1158+ 9161 21 E7 88         ld hl,Ctrl_1
1159+ 9164 CB D6            set 2,(hl)
1160+ 9166
1161+ 9166 C9           3 ret
1162+ 9167
1163+ 9167              ; -----------------------------------------------------------------
1164+ 9167              ;
1165+ 9167              ;   19/7/23
1166+ 9167              ;
1167+ 9167              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9167
1169+ 9167 AF           Limpia_Coordenadas_X xor a
1170+ 9168 06 06            ld b,6
1171+ 916A 21 11 89         ld hl,Coordenadas_X_Amadeus
1172+ 916D 77           1 ld (hl),a
1173+ 916E 23               inc hl
1174+ 916F 10 FC            djnz 1B
1175+ 9171 C9               ret
1176+ 9172
1177+ 9172              ; -----------------------------------------------------------------
1178+ 9172              ;
1179+ 9172              ;   25/04/23
1180+ 9172              ;
1181+ 9172
1182+ 9172              Determina_resultado_comparativa
1183+ 9172
1184+ 9172              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9172              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9172              ;
1187+ 9172              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9172              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9172              ;
1190+ 9172              ;   SBC HL,DE
1191+ 9172
1192+ 9172              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9172              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9172
1195+ 9172              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9172              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9172
1198+ 9172
1199+ 9172 3A BE 88         ld a,(Cuad_objeto)
1200+ 9175 FE 02            cp 2
1201+ 9177 28 26            jr z,2F
1202+ 9179 38 24            jr c,2F
1203+ 917B
1204+ 917B              ; Cuadrantes 3º y 4º
1205+ 917B
1206+ 917B E6 01            and 1
1207+ 917D 28 10            jr z,4F
1208+ 917F
1209+ 917F              ; Cuadrante 3º
1210+ 917F
1211+ 917F 7C               ld a,h
1212+ 9180 06 00            ld b,0
1213+ 9182
1214+ 9182 CD 0D 92         call Compara_cositas_H3
1215+ 9185
1216+ 9185 04               inc b
1217+ 9186 05               dec b
1218+ 9187 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9188
1220+ 9188 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9189 06 00            ld b,0
1222+ 918B
1223+ 918B CD 1F 92         call Compara_cositas_L3
1224+ 918E C9               ret
1225+ 918F
1226+ 918F              ; Cuadrante 4º
1227+ 918F
1228+ 918F 7C           4 ld a,h
1229+ 9190 06 00            ld b,0
1230+ 9192
1231+ 9192 CD 31 92         call Compara_cositas_H4
1232+ 9195
1233+ 9195 04               inc b
1234+ 9196 05               dec b
1235+ 9197 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9198
1237+ 9198 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9199 06 00            ld b,0
1239+ 919B
1240+ 919B CD 47 92         call Compara_cositas_L4
1241+ 919E C9               ret
1242+ 919F
1243+ 919F              ; Cuadrantes 1º y 2º.
1244+ 919F
1245+ 919F 28 10        2 jr z,3F
1246+ 91A1
1247+ 91A1              ; 1er Cuadrante
1248+ 91A1
1249+ 91A1 7C               ld a,h
1250+ 91A2 06 00            ld b,0
1251+ 91A4
1252+ 91A4 CD E5 91         call Compara_cositas_H1
1253+ 91A7
1254+ 91A7 04               inc b
1255+ 91A8 05               dec b
1256+ 91A9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 91AA
1258+ 91AA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 91AB 06 00            ld b,0
1260+ 91AD
1261+ 91AD CD FB 91         call Compara_cositas_L1
1262+ 91B0 C9               ret
1263+ 91B1
1264+ 91B1
1265+ 91B1              ; 2º Cuadrante
1266+ 91B1
1267+ 91B1 7C           3 ld a,h
1268+ 91B2 06 00            ld b,0
1269+ 91B4
1270+ 91B4 CD C1 91         call Compara_cositas_H2
1271+ 91B7
1272+ 91B7 04               inc b
1273+ 91B8 05               dec b
1274+ 91B9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 91BA
1276+ 91BA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 91BB 06 00            ld b,0
1278+ 91BD
1279+ 91BD CD D3 91         call Compara_cositas_L2
1280+ 91C0 C9               ret
1281+ 91C1
1282+ 91C1 A7           Compara_cositas_H2 and a
1283+ 91C2 28 0D            jr z,1F
1284+ 91C4              ;    cp $fd
1285+ 91C4              ;    jr z,1F
1286+ 91C4              ;    cp $fe
1287+ 91C4              ;    jr z,1F
1288+ 91C4 FE FF            cp $ff
1289+ 91C6 28 09            jr z,1F
1290+ 91C8 FE 01            cp $01
1291+ 91CA 28 05            jr z,1F
1292+ 91CC FE 02            cp $02
1293+ 91CE 28 01            jr z,1F
1294+ 91D0 C0               ret nz
1295+ 91D1 04           1 inc b
1296+ 91D2 C9               ret
1297+ 91D3
1298+ 91D3 A7           Compara_cositas_L2 and a
1299+ 91D4 28 0D            jr z,1F
1300+ 91D6              ;    cp $fd
1301+ 91D6              ;    jr z,1F
1302+ 91D6 FE FE            cp $fe
1303+ 91D8 28 09            jr z,1F
1304+ 91DA FE FF            cp $ff
1305+ 91DC 28 05            jr z,1F
1306+ 91DE FE 01            cp $01
1307+ 91E0 28 01            jr z,1F
1308+ 91E2              ;    cp $02
1309+ 91E2              ;    jr z,1F
1310+ 91E2 C0               ret nz
1311+ 91E3 04           1 inc b
1312+ 91E4 C9               ret
1313+ 91E5
1314+ 91E5 A7           Compara_cositas_H1 and a
1315+ 91E6 28 11            jr z,1F
1316+ 91E8              ;    cp $fd
1317+ 91E8              ;    jr z,1F
1318+ 91E8              ;    cp $fe
1319+ 91E8              ;    jr z,1F
1320+ 91E8 FE FF            cp $ff
1321+ 91EA 28 0D            jr z,1F
1322+ 91EC FE 01            cp $01
1323+ 91EE 28 09            jr z,1F
1324+ 91F0 FE 02            cp $02
1325+ 91F2 28 05            jr z,1F
1326+ 91F4 FE 03            cp $03
1327+ 91F6 28 01            jr z,1F
1328+ 91F8 C0               ret nz
1329+ 91F9 04           1 inc b
1330+ 91FA C9               ret
1331+ 91FB
1332+ 91FB A7           Compara_cositas_L1 and a
1333+ 91FC 28 0D            jr z,1F
1334+ 91FE              ;    cp $fd
1335+ 91FE              ;    jr z,1F
1336+ 91FE              ;    cp $fe
1337+ 91FE              ;    jr z,1F
1338+ 91FE              ;    cp $ff
1339+ 91FE              ;    jr z,1F
1340+ 91FE FE 01            cp $01
1341+ 9200 28 09            jr z,1F
1342+ 9202 FE 02            cp $02
1343+ 9204 28 05            jr z,1F
1344+ 9206 FE 03            cp $03
1345+ 9208 28 01            jr z,1F
1346+ 920A C0               ret nz
1347+ 920B 04           1 inc b
1348+ 920C C9               ret
1349+ 920D
1350+ 920D A7           Compara_cositas_H3 and a
1351+ 920E 28 0D            jr z,1F
1352+ 9210              ;    cp $fd
1353+ 9210              ;    jr z,1F
1354+ 9210 FE FE            cp $fe
1355+ 9212 28 09            jr z,1F
1356+ 9214 FE FF            cp $ff
1357+ 9216 28 05            jr z,1F
1358+ 9218 FE 01            cp $01
1359+ 921A 28 01            jr z,1F
1360+ 921C              ;    cp $02
1361+ 921C              ;    jr z,1F
1362+ 921C              ;    cp $03
1363+ 921C              ;    jr z,1F
1364+ 921C C0               ret nz
1365+ 921D 04           1 inc b
1366+ 921E C9               ret
1367+ 921F
1368+ 921F A7           Compara_cositas_L3 and a
1369+ 9220 28 0D            jr z,1F
1370+ 9222              ;    cp $fd
1371+ 9222              ;    jr z,1F
1372+ 9222              ;    cp $fe
1373+ 9222              ;    jr z,1F
1374+ 9222              ;    cp $ff
1375+ 9222              ;    jr z,1F
1376+ 9222 FE 01            cp $01
1377+ 9224 28 09            jr z,1F
1378+ 9226 FE 02            cp $02
1379+ 9228 28 05            jr z,1F
1380+ 922A FE 03            cp $03
1381+ 922C 28 01            jr z,1F
1382+ 922E C0               ret nz
1383+ 922F 04           1 inc b
1384+ 9230 C9               ret
1385+ 9231
1386+ 9231 A7           Compara_cositas_H4 and a
1387+ 9232 28 11            jr z,1F
1388+ 9234 FE FD            cp $fd
1389+ 9236 28 0D            jr z,1F
1390+ 9238 FE FE            cp $fe
1391+ 923A 28 09            jr z,1F
1392+ 923C FE FF            cp $ff
1393+ 923E 28 05            jr z,1F
1394+ 9240 FE 01            cp $01
1395+ 9242 28 01            jr z,1F
1396+ 9244              ;    cp $02
1397+ 9244              ;    jr z,1F
1398+ 9244              ;    cp $03
1399+ 9244              ;    jr z,1F
1400+ 9244 C0               ret nz
1401+ 9245 04           1 inc b
1402+ 9246 C9               ret
1403+ 9247
1404+ 9247 A7           Compara_cositas_L4 and a
1405+ 9248 28 0D            jr z,1F
1406+ 924A              ;    cp $fd
1407+ 924A              ;    jr z,1F
1408+ 924A FE FE            cp $fe
1409+ 924C 28 09            jr z,1F
1410+ 924E FE FF            cp $ff
1411+ 9250 28 05            jr z,1F
1412+ 9252 FE 01            cp $01
1413+ 9254 28 01            jr z,1F
1414+ 9256              ;    cp $02
1415+ 9256              ;    jr z,1F
1416+ 9256              ;    cp $03
1417+ 9256              ;    jr z,1F
1418+ 9256 C0               ret nz
1419+ 9257 04           1 inc b
1420+ 9258 C9               ret
# file closed: Disparo.asm
1519  9259              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9259              ; ******************************************************************************************************************************************************************************************
   2+ 9259              ;
   3+ 9259              ; 26/06/23
   4+ 9259              ;
   5+ 9259              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9259
   7+ 9259 CD 3D 95     Draw call Prepara_draw
   8+ 925C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 925D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 925E 28 05        	jr z,2F
  11+ 9260
  12+ 9260 3A BE 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9263 18 0C        	jr 1F
  14+ 9265
  15+ 9265 2A BC 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9268 22 AC 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 926B CD FA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 926E              ;													; _la esquina superior izquierda de la pantalla.
  19+ 926E CD 9D 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9271
  21+ 9271 3A D4 88     1 ld a,(Ctrl_0)
  22+ 9274 CB 6F        	bit 5,a
  23+ 9276 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9278
  25+ 9278 CD 90 92     	call Comprueba_limite_horizontal
  26+ 927B CD 20 93     	call Comprueba_limite_vertical
  27+ 927E
  28+ 927E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 927E              ; -----------------------
  30+ 927E              ; -----------------------
  31+ 927E              ; -----------------------
  32+ 927E
  33+ 927E CD 6D 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9281 CD A4 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9284 CD 03 95     	call Define_rutina_de_impresion
  36+ 9287
  37+ 9287 3A D4 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 928A CB AF        	res 5,a											; _a ser de utilidad.
  39+ 928C 32 D4 88     	ld (Ctrl_0),a
  40+ 928F
  41+ 928F C9           	ret
  42+ 9290
  43+ 9290              ; *******************************************************************************************************************************************************************************************
  44+ 9290              ;	21/01/23
  45+ 9290              ;
  46+ 9290              ; 	Comprueba_limite_horizontal.
  47+ 9290              ;
  48+ 9290              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9290              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9290              ;
  51+ 9290              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9290              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9290              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9290              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9290
  56+ 9290
  57+ 9290
  58+ 9290 3A D4 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9293 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9295 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9297 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9299 32 D4 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 929C 18 09            jr 6F
  64+ 929E CB 5F        1 bit 3,a
  65+ 92A0 28 0A            jr z,2F
  66+ 92A2 E6 F7            and $f7
  67+ 92A4 32 D4 88         ld (Ctrl_0),a
  68+ 92A7 CD FA 93     6 call Inicializacion
  69+ 92AA 18 5B            jr 5F
  70+ 92AC E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92AD
  72+ 92AD              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92AD              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92AD
  75+ 92AD EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92AE 2A E2 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92B1 CD 5C 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 92B4 67           	ld h,a
  79+ 92B5 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 92B6 CD 5C 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 92B9 67           	ld h,a
  82+ 92BA A7           	and a
  83+ 92BB ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 92BD 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 92BE 3A BE 88     	ld a,(Cuad_objeto)
  86+ 92C1 FE 02        	cp 2
  87+ 92C3 38 1E        	jr c,3F
  88+ 92C5 28 1C        	jr z,3F
  89+ 92C7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 92C8 28 23            jr z,7F
  91+ 92CA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 92CC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 92CE E1           	pop hl
  94+ 92CF
  95+ 92CF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 92CF              ; _para indicar con E="2" en caso necesario.
  97+ 92CF
  98+ 92CF E5               push hl
  99+ 92D0 C5               push bc
 100+ 92D1 CD 5C 98     	call calcula_tercio
 101+ 92D4 FE 01        	cp 1
 102+ 92D6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 92D8 CD 08 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 92DB 28 26            jr z,9F
 105+ 92DD 38 24            jr c,9F
 106+ 92DF 1E 00        11 ld e,0
 107+ 92E1 18 22            jr 8F
 108+ 92E3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 92E4 28 07        	jr z, 7F
 110+ 92E6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 92E8 1E 00         	ld e,0
 112+ 92EA E1           	pop hl
 113+ 92EB 18 04        	jr 4F
 114+ 92ED 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 92EF 18 15            jr 10F
 116+ 92F1
 117+ 92F1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 92F1              ; _para indicar con E="2" en caso necesario.
 119+ 92F1
 120+ 92F1 E5           4 push hl
 121+ 92F2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 92F3 CD 5C 98     	call calcula_tercio
 123+ 92F6 FE 01        	cp 1
 124+ 92F8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 92FA CD 08 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 92FD 28 04            jr z,9F
 127+ 92FF 30 02            jr nc,9F
 128+ 9301 18 02        	jr 8F
 129+ 9303 1E 02        9 ld e,2
 130+ 9305 C1           8 pop bc
 131+ 9306 E1           10 pop hl
 132+ 9307 C9           5 ret
 133+ 9308
 134+ 9308              ; --------------------
 135+ 9308              ;
 136+ 9308              ; 25/08/22
 137+ 9308
 138+ 9308 CD 5C 98     Comprueba_centro call calcula_tercio
 139+ 930B 67               ld h,a
 140+ 930C 08           	ex af,af
 141+ 930D FE 02        	cp 2
 142+ 930F 38 07        	jr c,1F
 143+ 9311 28 05        	jr z,1F
 144+ 9313 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9316 18 03        	jr 2F
 146+ 9318 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 931B 08           2 ex af,af
 148+ 931C A7               and a
 149+ 931D ED 42            sbc hl,bc
 150+ 931F C9               ret
 151+ 9320
 152+ 9320              ; *********************************************************************************************************************************************************************************************
 153+ 9320              ;
 154+ 9320              ;   16/8/22
 155+ 9320              ;
 156+ 9320              ;	Comprueba_limite_vertical
 157+ 9320              ;
 158+ 9320              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9320              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9320              ;
 161+ 9320
 162+ 9320 2A AC 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9323 7D           	ld a,l
 164+ 9324 E6 1F        	and $1F
 165+ 9326 57           	ld d,a
 166+ 9327 3A E4 88     	ld a,(Limite_vertical)
 167+ 932A BA           	cp d 											; Límite - Posición.
 168+ 932B 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 932C 3A BE 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 932F CB 47        	bit 0,a
 171+ 9331 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9333
 173+ 9333              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9333
 175+ 9333 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9334 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9336
 178+ 9336              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9336              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9336
 181+ 9336 3A B0 88         ld a,(Coordenada_X)
 182+ 9339 16 0F            ld d,Centro_izquierda
 183+ 933B A7               and a
 184+ 933C 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 933D 28 1E            jr z,3F
 186+ 933F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9341              ;                                                    ; _salimos sin modificar nada.
 188+ 9341 18 0E            jr 2F
 189+ 9343 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9344 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9346
 192+ 9346              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9346              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9346
 195+ 9346 3A B0 88         ld a,(Coordenada_X)
 196+ 9349 16 10            ld d,Centro_derecha
 197+ 934B A7               and a
 198+ 934C 92               sub d
 199+ 934D 28 0E            jr z,3F
 200+ 934F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9351              ;                                                    ; _salimos sin modificar nada.
 202+ 9351 CB 43        2 bit 0,e
 203+ 9353 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9355 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9356 CD EA 93         call Modificaccionne
 206+ 9359 C1           	pop bc
 207+ 935A CD FA 93         call Inicializacion
 208+ 935D C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 935E
 210+ 935E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 935E
 212+ 935E C5           4 push bc
 213+ 935F 01 AB 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9362 0A           	ld a,(bc)
 215+ 9363 3D           	dec a
 216+ 9364 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9365 7D           	ld a,l
 218+ 9366 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9367 CB 47        	bit 0,a
 220+ 9369 28 03        	jr z,5F
 221+ 936B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 936C 18 2E        	jr 7F
 223+ 936E
 224+ 936E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 936E
 226+ 936E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 936F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9370 3A D4 88     	ld a,(Ctrl_0)
 229+ 9373 CB 4F        	bit 1,a
 230+ 9375 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9377 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9378
 233+ 9378              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9378
 235+ 9378 1C               inc e
 236+ 9379 1D               dec e
 237+ 937A 20 07            jr nz,12F
 238+ 937C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 937D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 937E 22 AC 88     	ld (Posicion_actual),hl
 241+ 9381 18 44        13 jr 9F
 242+ 9383 CB 43        12 bit 0,e
 243+ 9385 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9387              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9387 C1           	pop bc
 246+ 9388 18 D3        	jr 3B
 247+ 938A 80           14 add b
 248+ 938B 6F               ld l,a
 249+ 938C 22 AC 88     	ld (Posicion_actual),hl
 250+ 938F CD EA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9392 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9394 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9396 32 D4 88         ld (Ctrl_0),a
 254+ 9399 F1           	pop af
 255+ 939A 18 2B        	jr 9F
 256+ 939C
 257+ 939C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 939C
 259+ 939C F5           7 push af
 260+ 939D 3A D4 88     	ld a,(Ctrl_0)
 261+ 93A0 CB 47        	bit 0,a
 262+ 93A2 20 1D        	jr nz,8F
 263+ 93A4 F1           	pop af
 264+ 93A5
 265+ 93A5              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93A5
 267+ 93A5 1C           	inc e
 268+ 93A6 1D               dec e
 269+ 93A7 20 07            jr nz,10F
 270+ 93A9 90           	sub b
 271+ 93AA 6F               ld l,a
 272+ 93AB 22 AC 88     	ld (Posicion_actual),hl
 273+ 93AE 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93B0              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93B0 CB 43        10 bit 0,e
 276+ 93B2 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 93B4              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 93B4 C1           	pop bc
 279+ 93B5 18 A6        	jr 3B
 280+ 93B7 90           16 sub b
 281+ 93B8 6F               ld l,a
 282+ 93B9 22 AC 88     	ld (Posicion_actual),hl
 283+ 93BC CD EA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 93BF 18 06            jr 9F
 285+ 93C1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 93C3 32 D4 88         ld (Ctrl_0),a
 287+ 93C6 F1           	pop af
 288+ 93C7 C1           9 pop bc
 289+ 93C8 1E 00        	ld e,0
 290+ 93CA CD FA 93         call Inicializacion
 291+ 93CD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 93CE 08           	ex af,af
 293+ 93CF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 93D0 18 8B            jr 3B
 295+ 93D2
 296+ 93D2              ; --------------------
 297+ 93D2
 298+ 93D2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 93D4 CD 58 95     1 call PreviousScan
 300+ 93D7 10 FB            djnz 1B
 301+ 93D9 22 AC 88     	ld (Posicion_actual),hl
 302+ 93DC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 93DD C9           	ret
 304+ 93DE
 305+ 93DE              ; --------------------
 306+ 93DE
 307+ 93DE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 93E0 CD 49 95     1 call NextScan
 309+ 93E3 10 FB            djnz 1B
 310+ 93E5 22 AC 88     	ld (Posicion_actual),hl
 311+ 93E8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 93E9 C9           	ret
 313+ 93EA
 314+ 93EA              ; --------------------
 315+ 93EA              ;
 316+ 93EA              ;	22/01/23
 317+ 93EA              ;
 318+ 93EA              ;	E="1". Hemos cambiado de cuadrante.
 319+ 93EA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 93EA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 93EA
 322+ 93EA
 323+ 93EA              Modificaccionne
 324+ 93EA
 325+ 93EA 3A BE 88     	ld a,(Cuad_objeto)
 326+ 93ED FE 02        	cp 2
 327+ 93EF CC D2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 93F2 DC D2 93         call c,Modifica_Pos_actual
 329+ 93F5 C8           	ret z
 330+ 93F6 CD DE 93         call Modifica_Pos_actual2
 331+ 93F9 C9               ret
 332+ 93FA
 333+ 93FA              ; *************************************************************************************************************************************************************************************************
 334+ 93FA              ;
 335+ 93FA              ;	13/8/22
 336+ 93FA              ;
 337+ 93FA              ;	Inicializacion
 338+ 93FA              ;
 339+ 93FA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 93FA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 93FA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 93FA              ;
 343+ 93FA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 93FA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 93FA              ;	_ desaparece/aparece.
 346+ 93FA
 347+ 93FA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 93FA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 93FA              ;
 350+ 93FA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 93FA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 93FA              ; 		   [E] ="0"
 353+ 93FA
 354+ 93FA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 93FA
 356+ 93FA CD 5C 98     Inicializacion call calcula_tercio
 357+ 93FD 28 36        	jr z,primit
 358+ 93FF E6 02        	and 2
 359+ 9401 20 07        	jr nz,segmit
 360+ 9403 7D           	ld a,l
 361+ 9404 FE 7F        	cp $7f
 362+ 9406 38 2D        	jr c,primit
 363+ 9408 28 2B        	jr z,primit
 364+ 940A CD 67 94     segmit call column
 365+ 940D 38 13        	jr c,tercuad
 366+ 940F 3E 04        cuarcuad ld a,4
 367+ 9411 32 BE 88     	ld (Cuad_objeto),a
 368+ 9414 21 20 48     	ld hl,$4820
 369+ 9417 22 E2 88     	ld (Limite_horizontal),hl
 370+ 941A 21 E4 88     	ld hl,Limite_vertical
 371+ 941D 36 0D        	ld (hl),$0d
 372+ 941F 08           	ex af,af
 373+ 9420 18 3C        	jr 1F
 374+ 9422              tercuad
 375+ 9422 3E 03        	ld a,3
 376+ 9424 32 BE 88     	ld (Cuad_objeto),a
 377+ 9427 21 20 48     	ld hl,$4820
 378+ 942A 22 E2 88     	ld (Limite_horizontal),hl
 379+ 942D 21 E4 88     	ld hl,Limite_vertical
 380+ 9430 36 12        	ld (hl),$12
 381+ 9432 08           	ex af,af
 382+ 9433 18 29        	jr 1F
 383+ 9435 CD 67 94     primit call column
 384+ 9438 38 13        	jr c, primcuad
 385+ 943A              segcuad
 386+ 943A 3E 02        	ld a,2
 387+ 943C 32 BE 88     	ld (Cuad_objeto),a
 388+ 943F 21 C0 4F     	ld hl,$4fc0
 389+ 9442 22 E2 88     	ld (Limite_horizontal),hl
 390+ 9445 21 E4 88     	ld hl,Limite_vertical
 391+ 9448 36 0D        	ld (hl),$0d
 392+ 944A 08           	ex af,af
 393+ 944B 18 11        	jr 1F
 394+ 944D              primcuad
 395+ 944D 3E 01        	ld a,1
 396+ 944F 32 BE 88     	ld (Cuad_objeto),a
 397+ 9452 21 C0 4F     	ld hl,$4fc0
 398+ 9455 22 E2 88     	ld (Limite_horizontal),hl
 399+ 9458 21 E4 88     	ld hl,Limite_vertical
 400+ 945B 36 12        	ld (hl),$12
 401+ 945D 08           	ex af,af
 402+ 945E CD E7 9B     1 call Genera_coordenadas
 403+ 9461 21 D4 88     	ld hl,Ctrl_0
 404+ 9464 CB EE        	set 5,(hl)
 405+ 9466 C9           	ret
 406+ 9467
 407+ 9467              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9467
 409+ 9467              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9467              ;
 411+ 9467              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9467
 413+ 9467 7D           column ld a,l
 414+ 9468 E6 1F        	and $1f
 415+ 946A FE 10         	cp $10
 416+ 946C C9            	ret
 417+ 946D
 418+ 946D              ; --------------------------------------------------------------------------------------------------------------------
 419+ 946D              ;
 420+ 946D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 946D              ;
 422+ 946D              ; 14/12/22
 423+ 946D              ;
 424+ 946D              ;	Modifica: A y BC.
 425+ 946D
 426+ 946D 3A BE 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9470 E6 01        	and 1
 428+ 9472 28 17        	jr z,1F
 429+ 9474
 430+ 9474              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9474
 432+ 9474 3A B0 88     	ld a,(Coordenada_X)
 433+ 9477 47           	ld b,a
 434+ 9478 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9479 79           	ld a,c
 436+ 947A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 947B 38 08        	jr c,2F
 438+ 947D 47           	ld b,a
 439+ 947E 79           	ld a,c
 440+ 947F 90           	sub b
 441+ 9480 32 E1 88     	ld (Columnas),a
 442+ 9483 18 1B        	jr 4F
 443+ 9485 79           2 ld a,c
 444+ 9486 32 E1 88     	ld (Columnas),a
 445+ 9489 18 15        	jr 4F
 446+ 948B
 447+ 948B              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 948B
 449+ 948B 3A B0 88     1 ld a,(Coordenada_X)
 450+ 948E 81           	add c
 451+ 948F 3D           	dec a
 452+ 9490 D6 1F        	sub $1f
 453+ 9492 38 08        	jr c,3F
 454+ 9494 47           	ld b,a
 455+ 9495 79           	ld a,c
 456+ 9496 90           	sub b
 457+ 9497 32 E1 88     	ld (Columnas),a
 458+ 949A 18 04        	jr 4F
 459+ 949C 79           3 ld a,c
 460+ 949D 32 E1 88     	ld (Columnas),a
 461+ 94A0 D9           4 exx
 462+ 94A1 4F           	ld c,a
 463+ 94A2 D9           	exx
 464+ 94A3 C9            ret
 465+ 94A4
 466+ 94A4              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94A4              ;
 468+ 94A4              ;   19/7/23
 469+ 94A4              ;
 470+ 94A4              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94A4              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94A4              ;
 473+ 94A4              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94A4              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94A4              ;
 476+ 94A4              ;	DESTRUYE: HL,B Y A.
 477+ 94A4
 478+ 94A4 3A BE 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 94A7 FE 02        	cp 2
 480+ 94A9 38 18        	jr c,1F
 481+ 94AB 28 16        	jr z,1F
 482+ 94AD E6 01        	and 1
 483+ 94AF 28 0D        	jr z,3F
 484+ 94B1
 485+ 94B1              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94B1
 487+ 94B1 CD F7 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 94B4
 489+ 94B4 7D           9 ld a,l
 490+ 94B5 E6 1F        	and $1f
 491+ 94B7 28 2A        	jr z,7F
 492+ 94B9 2B           	dec hl
 493+ 94BA 10 F8        	djnz 9B
 494+ 94BC 18 25        	jr 7F
 495+ 94BE
 496+ 94BE              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 94BE
 498+ 94BE 2A AC 88     3 ld hl,(Posicion_actual)
 499+ 94C1 18 20        	jr 7F
 500+ 94C3
 501+ 94C3 28 14        1 jr z,2F
 502+ 94C5
 503+ 94C5              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 94C5
 505+ 94C5 CD F7 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 94C8
 507+ 94C8 7D           4 ld a,l
 508+ 94C9 E6 1F        	and $1f
 509+ 94CB 28 03        	jr z,6F
 510+ 94CD 2B           	dec hl
 511+ 94CE 10 F8        	djnz 4B
 512+ 94D0 06 0F        6 ld b,15
 513+ 94D2 CD 58 95     5 call PreviousScan
 514+ 94D5 10 FB        	djnz 5B
 515+ 94D7 18 0A        	jr 7F
 516+ 94D9
 517+ 94D9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 94D9
 519+ 94D9 CD F7 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 94DC 06 0F        	ld b,15
 521+ 94DE CD 58 95     8 call PreviousScan
 522+ 94E1 10 FB        	djnz 8B
 523+ 94E3
 524+ 94E3 E5           7 push hl
 525+ 94E4 DD E1        	pop ix
 526+ 94E6
 527+ 94E6 2A AE 88     	ld hl,(Puntero_objeto)
 528+ 94E9 E5           	push hl
 529+ 94EA FD E1        	pop iy
 530+ 94EC
 531+ 94EC              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 94EC
 533+ 94EC 3A D4 88     	ld a,(Ctrl_0)
 534+ 94EF CB 77        	bit 6,a
 535+ 94F1 C8           	ret z
 536+ 94F2
 537+ 94F2              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 94F2              ; _ entidad / Amadeus´.
 539+ 94F2
 540+ 94F2 DD 22 17 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 94F6
 542+ 94F6 C9           	ret
 543+ 94F7
 544+ 94F7              ; --------------------------------------------------------------------------------------------------------------------
 545+ 94F7              ;
 546+ 94F7              ;	2/1/23
 547+ 94F7              ;
 548+ 94F7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 94F7              ;
 550+ 94F7              ;	Tras esta rutina tenemos:
 551+ 94F7              ;
 552+ 94F7              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 94F7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 94F7              ;
 555+ 94F7              ;	DESTRUYE!!!!! HL,B y A.
 556+ 94F7
 557+ 94F7 2A AC 88     Operandos ld hl,(Posicion_actual)
 558+ 94FA 3A E1 88     	ld a,(Columnas)
 559+ 94FD 3D           	dec a
 560+ 94FE 20 01        	jr nz,1F
 561+ 9500 3C           	inc a
 562+ 9501 47           1 ld b,a
 563+ 9502 C9           	ret
 564+ 9503
 565+ 9503              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9503              ;
 567+ 9503              ;	3/1/23
 568+ 9503              ;
 569+ 9503              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9503              ;
 571+ 9503              ;	Destruye: A,B,HL y DE.
 572+ 9503
 573+ 9503              Define_rutina_de_impresion
 574+ 9503
 575+ 9503 3A AB 88     	ld a,(Columns)
 576+ 9506 47           	ld b,a
 577+ 9507 3A E1 88     	ld a,(Columnas)
 578+ 950A B8           	cp b
 579+ 950B 20 0D        	jr nz,2f
 580+ 950D
 581+ 950D              ;	La entidad se imprime entera.
 582+ 950D
 583+ 950D 21 2C 96     	ld hl, Indice_entidades_completas
 584+ 9510 E6 01        	and 1
 585+ 9512 28 02        	jr z,1F
 586+ 9514
 587+ 9514 23           	inc hl
 588+ 9515 23           	inc hl
 589+ 9516
 590+ 9516 CD E1 8B     1 call Extrae_address
 591+ 9519 C9           	ret		;	ret
 592+ 951A
 593+ 951A              ;	La entidad no se imprime entera en pantalla.
 594+ 951A
 595+ 951A 3A BE 88     2 ld a,(Cuad_objeto)
 596+ 951D E6 01        	and 1
 597+ 951F 28 17        	jr z,3F
 598+ 9521
 599+ 9521              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9521
 601+ 9521 21 30 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9524 3A AB 88     4 ld a,(Columns)
 603+ 9527 E6 01        	and 1
 604+ 9529 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 952B
 606+ 952B 23           	inc hl
 607+ 952C 23           	inc hl
 608+ 952D
 609+ 952D 3A E1 88     	ld a,(Columnas)
 610+ 9530 E6 01        	and 1
 611+ 9532 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9534
 613+ 9534 23           	inc hl
 614+ 9535 23           	inc hl
 615+ 9536
 616+ 9536 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9538
 618+ 9538 21 36 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 953B 18 E7        	jr 4B
 620+ 953D
 621+ 953D              ; --------------------------------------------------------------------------------------------------------------------
 622+ 953D              ;
 623+ 953D              ;	Prepara_draw
 624+ 953D              ;
 625+ 953D              ;	Es una rutina de carga.
 626+ 953D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 953D              ;
 628+ 953D              ;	FUNCIONAMIENTO:
 629+ 953D              ;
 630+ 953D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 953D              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 953D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 953D              ;
 634+ 953D              ;	DESTRUYE:
 635+ 953D              ;
 636+ 953D              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 953D
 638+ 953D 21 AA 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9540 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9541 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9542 4E           	ld c,(hl)
 642+ 9543 2A AC 88     	ld hl,(Posicion_actual)
 643+ 9546 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9548 C9           	ret
 645+ 9549
 646+ 9549              ;----------------------------------------------------------------------------------------------------------------
 647+ 9549              ;
 648+ 9549              ;	5/08/22
 649+ 9549              ;
 650+ 9549              ;   NextScan.
 651+ 9549              ;
 652+ 9549              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9549              ;
 654+ 9549              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9549              ;
 656+ 9549              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9549              ;
 658+ 9549              ;       DESTRUIDOS: AF y HL !!!
 659+ 9549              ;
 660+ 9549              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9549              ;
 662+ 9549
 663+ 9549 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 954A 7C               ld a,h
 665+ 954B E6 07            and 7
 666+ 954D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 954E
 668+ 954E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 954F C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9551 6F               ld l,a
 671+ 9552 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9553
 673+ 9553 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9554 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9556 67               ld h,a
 676+ 9557 C9               ret
 677+ 9558
 678+ 9558              ;----------------------------------------------------------------------------------------------------------------
 679+ 9558              ;
 680+ 9558              ;	5/08/22
 681+ 9558              ;
 682+ 9558              ;   PreviousScan.
 683+ 9558              ;
 684+ 9558              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9558              ;
 686+ 9558              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9558              ;
 688+ 9558              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9558              ;
 690+ 9558              ;       DESTRUIDOS: AF y HL !!!
 691+ 9558              ;
 692+ 9558              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9558              ;
 694+ 9558
 695+ 9558 7C           PreviousScan ld a,h
 696+ 9559 25               dec h               ; Dec H.
 697+ 955A E6 07            and 7
 698+ 955C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 955D
 700+ 955D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 955E D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9560 6F               ld l,a
 703+ 9561 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9562
 705+ 9562 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9563 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9565 67               ld h,a
 708+ 9566 C9               ret
 709+ 9567
 710+ 9567              ; -----------------------------------------------------------------------------------
 711+ 9567              ;
 712+ 9567              ;	31/7/23
 713+ 9567              ;
 714+ 9567              ;	Rutina principal de pintado de entidades.
 715+ 9567              ;	Extrae la foto del frame, (entidades).
 716+ 9567
 717+ 9567              Extrae_foto_entidades
 718+ 9567
 719+ 9567 21 01 70     	ld hl,Album_de_fotos+1
 720+ 956A 7E           	ld a,(hl)
 721+ 956B A7           	and a
 722+ 956C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 956D
 724+ 956D              ;	No hay datos, (entidades para pintar en este frame).
 725+ 956D
 726+ 956D 3A F3 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 9570 A7           	and a
 728+ 9571 C8           	ret z
 729+ 9572
 730+ 9572              ; -----------------------------------
 731+ 9572
 732+ 9572 ED 73 F8 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9576 31 00 70     	ld sp,Album_de_fotos
 734+ 9579
 735+ 9579 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 957B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 957C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 957D
 739+ 957D ED 73 FA 88  	ld (Stack_2),sp
 740+ 9581 ED 7B F8 88  	ld sp,(Stack)
 741+ 9585
 742+ 9585              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9585
 744+ 9585 3E CD        	ld a,$cd
 745+ 9587 32 8F 95     	ld (Imprime),a
 746+ 958A EB           	ex de,hl
 747+ 958B 22 90 95     	ld (Imprime+1),hl
 748+ 958E EB           	ex de,hl
 749+ 958F
 750+ 958F              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 958F
 752+ 958F 00 00 00     Imprime db 0,0,0
 753+ 9592
 754+ 9592 ED 73 F8 88  	ld (Stack),sp
 755+ 9596
 756+ 9596 3A F3 88     	ld a,(Numero_de_malotes)
 757+ 9599 3D           	dec a
 758+ 959A 28 09        	jr z,1F
 759+ 959C 32 F3 88      	ld (Numero_de_malotes),a
 760+ 959F
 761+ 959F ED 7B FA 88  	ld sp,(Stack_2)
 762+ 95A3 18 D4        	jr 2B
 763+ 95A5
 764+ 95A5 AF           1 xor a
 765+ 95A6 32 FA 88     	ld (Stack_2),a
 766+ 95A9
 767+ 95A9 C9           	ret
 768+ 95AA
 769+ 95AA              ; -----------------------------------------------------------------------------------
 770+ 95AA              ;
 771+ 95AA              ;	28/2/23
 772+ 95AA              ;
 773+ 95AA              ;	Pinta los disparos generados.
 774+ 95AA
 775+ 95AA              Extrae_foto_disparos
 776+ 95AA
 777+ 95AA 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 95AD 7E               ld a,(hl)
 779+ 95AE A7               and a
 780+ 95AF C8               ret z
 781+ 95B0
 782+ 95B0 3A 07 89     	ld a,(Numero_de_disparotes)
 783+ 95B3 A7           	and a
 784+ 95B4 C8           	ret z
 785+ 95B5 ED 73 F8 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 95B9 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 95BC
 788+ 95BC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 95BE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 95BF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 95C0
 792+ 95C0 ED 73 FA 88  	ld (Stack_2),sp
 793+ 95C4 ED 7B F8 88  	ld sp,(Stack)
 794+ 95C8
 795+ 95C8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 95C8
 797+ 95C8 3E CD        	ld a,$cd
 798+ 95CA 32 D2 95     	ld (Imprime2),a
 799+ 95CD EB           	ex de,hl
 800+ 95CE 22 D3 95     	ld (Imprime2+1),hl
 801+ 95D1 EB           	ex de,hl
 802+ 95D2
 803+ 95D2              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 95D2
 805+ 95D2 00 00 00     Imprime2 db 0,0,0
 806+ 95D5
 807+ 95D5 3A 07 89     	ld a,(Numero_de_disparotes)
 808+ 95D8 3D           	dec a
 809+ 95D9 28 09        	jr z,1F
 810+ 95DB 32 07 89      	ld (Numero_de_disparotes),a
 811+ 95DE
 812+ 95DE ED 7B FA 88  	ld sp,(Stack_2)
 813+ 95E2 18 D8        	jr 2B
 814+ 95E4
 815+ 95E4 AF           1 xor a
 816+ 95E5 32 FA 88     	ld (Stack_2),a
 817+ 95E8 C9           	ret
 818+ 95E9
 819+ 95E9              ; -----------------------------------------------------------------------------------
 820+ 95E9              ;
 821+ 95E9              ;	4/9/23
 822+ 95E9              ;
 823+ 95E9              ;	Rutina principal de pintado de Amadeus.
 824+ 95E9              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 95E9
 826+ 95E9 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 95EC 7E           	ld a,(hl)
 828+ 95ED A7           	and a
 829+ 95EE C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 95EF
 831+ 95EF 3A F3 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 95F2 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 95F3 C8           	ret z
 834+ 95F4
 835+ 95F4              ; -----------------------------------
 836+ 95F4
 837+ 95F4 ED 73 F8 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 95F8 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 95FB
 840+ 95FB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 95FD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 95FE D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 95FF
 844+ 95FF ED 73 FA 88  	ld (Stack_2),sp
 845+ 9603 ED 7B F8 88  	ld sp,(Stack)
 846+ 9607
 847+ 9607              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9607
 849+ 9607 3E CD        	ld a,$cd
 850+ 9609 32 11 96     	ld (Imprime_Amadeus),a
 851+ 960C EB           	ex de,hl
 852+ 960D 22 12 96     	ld (Imprime_Amadeus+1),hl
 853+ 9610 EB           	ex de,hl
 854+ 9611
 855+ 9611              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 9611
 857+ 9611 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9614
 859+ 9614 ED 73 F8 88  	ld (Stack),sp
 860+ 9618
 861+ 9618 3A F3 88     	ld a,(Numero_de_malotes)
 862+ 961B 3D           	dec a
 863+ 961C 28 09        	jr z,1F
 864+ 961E 32 F3 88      	ld (Numero_de_malotes),a
 865+ 9621
 866+ 9621 ED 7B FA 88  	ld sp,(Stack_2)
 867+ 9625 18 D4        	jr 2B
 868+ 9627
 869+ 9627 AF           1 xor a
 870+ 9628 32 FA 88     	ld (Stack_2),a
 871+ 962B
 872+ 962B C9           	ret
# file closed: Draw_XOR.asm
1520  962C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 962C              ;   índices de Rutinas de impresión.
   2+ 962C
   3+ 962C 3C 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 962E 69 96            defw Pinta_Amadeus_3x2
   5+ 9630
   6+ 9630 BF 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9632 5F 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9634 13 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9636
  10+ 9636 E9 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9638 ED 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 963A A1 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 963C
  14+ 963C
  15+ 963C              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 963C              ;
  17+ 963C              ;   12/12/22
  18+ 963C              ;
  19+ 963C              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 963C              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 963C              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 963C              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 963C              ;
  24+ 963C              ;   Modifica: DE y HL.
  25+ 963C
  26+ 963C ED 73 F8 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9640 FD F9        	ld sp,iy
  28+ 9642 06 10            ld b,16
  29+ 9644 D1           1 pop de
  30+ 9645 7B               ld a,e
  31+ 9646 AE               xor (hl)
  32+ 9647 77           	ld (hl),a
  33+ 9648 23           	inc hl
  34+ 9649 7A               ld a,d
  35+ 964A AE               xor (hl)
  36+ 964B 77           	ld (hl),a
  37+ 964C 2B           	dec hl
  38+ 964D 24           	inc h
  39+ 964E 7C               ld a,h
  40+ 964F E6 07            and 7
  41+ 9651 20 0A            jr nz,2F
  42+ 9653 7D               ld a,l
  43+ 9654 C6 20            add a,$20
  44+ 9656 6F               ld l,a
  45+ 9657 38 04            jr c,2F
  46+ 9659 7C               ld a,h
  47+ 965A D6 08            sub 8
  48+ 965C 67               ld h,a
  49+ 965D 7C           2 ld a,h
  50+ 965E FE 58            cp $58
  51+ 9660 28 02            jr z,3F
  52+ 9662 10 E0            djnz 1B
  53+ 9664 ED 7B F8 88  3 ld sp,(Stack)
  54+ 9668 C9           	ret
  55+ 9669
  56+ 9669 ED 73 F8 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 966D FD F9        	ld sp,iy
  58+ 966F 06 08            ld b,8
  59+ 9671 D1           1 pop de
  60+ 9672 7B               ld a,e
  61+ 9673 AE               xor (hl)
  62+ 9674 77           	ld (hl),a
  63+ 9675 23           	inc hl
  64+ 9676 7A               ld a,d
  65+ 9677 AE               xor (hl)
  66+ 9678 77           	ld (hl),a
  67+ 9679 23           	inc hl
  68+ 967A D1           	pop de
  69+ 967B 7B               ld a,e
  70+ 967C AE               xor (hl)
  71+ 967D 77           	ld (hl),a
  72+ 967E 2B           	dec hl
  73+ 967F 2B           	dec hl
  74+ 9680 24           	inc h
  75+ 9681 7C               ld a,h
  76+ 9682 E6 07            and 7
  77+ 9684 20 0A            jr nz,2F
  78+ 9686 7D               ld a,l
  79+ 9687 C6 20            add a,$20
  80+ 9689 6F               ld l,a
  81+ 968A 38 04            jr c,2F
  82+ 968C 7C               ld a,h
  83+ 968D D6 08            sub 8
  84+ 968F 67               ld h,a
  85+ 9690 7C           2 ld a,h
  86+ 9691 FE 58            cp $58
  87+ 9693 28 25            jr z,4F
  88+ 9695 7A               ld a,d
  89+ 9696 AE               xor (hl)
  90+ 9697 77               ld (hl),a
  91+ 9698 D1           	pop de
  92+ 9699 23           	inc hl
  93+ 969A 7B               ld a,e
  94+ 969B AE               xor (hl)
  95+ 969C 77           	ld (hl),a
  96+ 969D 23           	inc hl
  97+ 969E 7A               ld a,d
  98+ 969F AE               xor (hl)
  99+ 96A0 77           	ld (hl),a
 100+ 96A1 2B           	dec hl
 101+ 96A2 2B           	dec hl
 102+ 96A3 24           	inc h
 103+ 96A4 7C               ld a,h
 104+ 96A5 E6 07            and 7
 105+ 96A7 20 0A            jr nz,3F
 106+ 96A9 7D               ld a,l
 107+ 96AA C6 20            add a,$20
 108+ 96AC 6F               ld l,a
 109+ 96AD 38 04            jr c,3F
 110+ 96AF 7C               ld a,h
 111+ 96B0 D6 08            sub 8
 112+ 96B2 67               ld h,a
 113+ 96B3 7C           3 ld a,h
 114+ 96B4 FE 58            cp $58
 115+ 96B6 28 02            jr z,4F
 116+ 96B8 10 B7            djnz 1B
 117+ 96BA ED 7B F8 88  4 ld sp,(Stack)
 118+ 96BE C9           	ret
 119+ 96BF
 120+ 96BF              ; ---------------------------------------------------
 121+ 96BF
 122+ 96BF ED 73 F8 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 96C3 FD F9        	ld sp,iy
 124+ 96C5
 125+ 96C5              ; >>>
 126+ 96C5
 127+ 96C5 06 10            ld b,16
 128+ 96C7 D1           1 pop de
 129+ 96C8 7A           	ld a,d
 130+ 96C9 AE           	xor (hl)
 131+ 96CA 77           	ld (hl),a
 132+ 96CB 24           	inc h
 133+ 96CC 7C               ld a,h
 134+ 96CD E6 07            and 7
 135+ 96CF 20 0C            jr nz,2F
 136+ 96D1 7D               ld a,l
 137+ 96D2 C6 20            add a,$20
 138+ 96D4 6F               ld l,a
 139+ 96D5 38 06            jr c,2F
 140+ 96D7 7C               ld a,h
 141+ 96D8 D6 08            sub 8
 142+ 96DA 67               ld h,a
 143+ 96DB 18 00            jr 2F
 144+ 96DD 7C           2 ld a,h
 145+ 96DE FE 58            cp $58
 146+ 96E0 28 02            jr z,3F
 147+ 96E2 10 E3            djnz 1B
 148+ 96E4 ED 7B F8 88  3 ld sp,(Stack)
 149+ 96E8 C9           	ret
 150+ 96E9
 151+ 96E9 ED 73 F8 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 96ED FD F9        	ld sp,iy
 153+ 96EF
 154+ 96EF              ; >>>
 155+ 96EF
 156+ 96EF 06 10            ld b,16
 157+ 96F1 D1           1 pop de
 158+ 96F2 7B           	ld a,e
 159+ 96F3 AE           	xor (hl)
 160+ 96F4 77           	ld (hl),a
 161+ 96F5 24           	inc h
 162+ 96F6 7C               ld a,h
 163+ 96F7 E6 07            and 7
 164+ 96F9 20 0C            jr nz,2F
 165+ 96FB 7D               ld a,l
 166+ 96FC C6 20            add a,$20
 167+ 96FE 6F               ld l,a
 168+ 96FF 38 06            jr c,2F
 169+ 9701 7C               ld a,h
 170+ 9702 D6 08            sub 8
 171+ 9704 67               ld h,a
 172+ 9705 18 00            jr 2F
 173+ 9707 7C           2 ld a,h
 174+ 9708 FE 58            cp $58
 175+ 970A 28 02            jr z,3F
 176+ 970C 10 E3            djnz 1B
 177+ 970E ED 7B F8 88  3 ld sp,(Stack)
 178+ 9712 C9           	ret
 179+ 9713
 180+ 9713              ; ---------------------------------------------------
 181+ 9713
 182+ 9713 ED 73 F8 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9717 FD F9        	ld sp,iy
 184+ 9719 06 08            ld b,8
 185+ 971B D1           1 pop de
 186+ 971C 7A           	ld a,d
 187+ 971D AE           	xor (hl)
 188+ 971E 77           	ld (hl),a
 189+ 971F 23           	inc hl
 190+ 9720 D1           	pop de
 191+ 9721 7B           	ld a,e
 192+ 9722 AE           	xor (hl)
 193+ 9723 77           	ld (hl),a
 194+ 9724 2B           	dec hl
 195+ 9725 24            	inc h
 196+ 9726 7C               ld a,h
 197+ 9727 E6 07            and 7
 198+ 9729 20 0A            jr nz,2F
 199+ 972B 7D               ld a,l
 200+ 972C C6 20            add a,$20
 201+ 972E 6F               ld l,a
 202+ 972F 38 04            jr c,2F
 203+ 9731 7C               ld a,h
 204+ 9732 D6 08            sub 8
 205+ 9734 67               ld h,a
 206+ 9735 7C           2 ld a,h
 207+ 9736 FE 58            cp $58
 208+ 9738 28 20            jr z,4F
 209+ 973A D1               pop de
 210+ 973B 7B           	ld a,e
 211+ 973C AE           	xor (hl)
 212+ 973D 77           	ld (hl),a
 213+ 973E 23           	inc hl
 214+ 973F 7A           	ld a,d
 215+ 9740 AE           	xor (hl)
 216+ 9741 77           	ld (hl),a
 217+ 9742 2B           	dec hl
 218+ 9743 24           	inc h
 219+ 9744 7C               ld a,h
 220+ 9745 E6 07            and 7
 221+ 9747 20 0A            jr nz,3F
 222+ 9749 7D               ld a,l
 223+ 974A C6 20            add a,$20
 224+ 974C 6F               ld l,a
 225+ 974D 38 04            jr c,3F
 226+ 974F 7C               ld a,h
 227+ 9750 D6 08            sub 8
 228+ 9752 67               ld h,a
 229+ 9753 7C           3 ld a,h
 230+ 9754 FE 58            cp $58
 231+ 9756 28 02            jr z,4F
 232+ 9758 10 C1            djnz 1B
 233+ 975A ED 7B F8 88  4 ld sp,(Stack)
 234+ 975E C9           	ret
 235+ 975F
 236+ 975F ED 73 F8 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9763 FD F9        	ld sp,iy
 238+ 9765 06 08            ld b,8
 239+ 9767 D1           1 pop de
 240+ 9768 D1           	pop de
 241+ 9769 7B           	ld a,e
 242+ 976A AE           	xor (hl)
 243+ 976B 77           	ld (hl),a
 244+ 976C 24            	inc h
 245+ 976D 7C               ld a,h
 246+ 976E E6 07            and 7
 247+ 9770 20 0A            jr nz,2F
 248+ 9772 7D               ld a,l
 249+ 9773 C6 20            add a,$20
 250+ 9775 6F               ld l,a
 251+ 9776 38 04            jr c,2F
 252+ 9778 7C               ld a,h
 253+ 9779 D6 08            sub 8
 254+ 977B 67               ld h,a
 255+ 977C 7C           2 ld a,h
 256+ 977D FE 58            cp $58
 257+ 977F 28 1B            jr z,4F
 258+ 9781 D1               pop de
 259+ 9782 7A           	ld a,d
 260+ 9783 AE           	xor (hl)
 261+ 9784 77           	ld (hl),a
 262+ 9785 24           	inc h
 263+ 9786 7C               ld a,h
 264+ 9787 E6 07            and 7
 265+ 9789 20 0A            jr nz,3F
 266+ 978B 7D               ld a,l
 267+ 978C C6 20            add a,$20
 268+ 978E 6F               ld l,a
 269+ 978F 38 04            jr c,3F
 270+ 9791 7C               ld a,h
 271+ 9792 D6 08            sub 8
 272+ 9794 67               ld h,a
 273+ 9795 7C           3 ld a,h
 274+ 9796 FE 58            cp $58
 275+ 9798 28 02            jr z,4F
 276+ 979A 10 CB            djnz 1B
 277+ 979C ED 7B F8 88  4 ld sp,(Stack)
 278+ 97A0 C9           	ret
 279+ 97A1
 280+ 97A1 ED 73 F8 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97A5 FD F9        	ld sp,iy
 282+ 97A7 06 08            ld b,8
 283+ 97A9 D1           1 pop de
 284+ 97AA 7B           	ld a,e
 285+ 97AB AE           	xor (hl)
 286+ 97AC 77           	ld (hl),a
 287+ 97AD 23           	inc hl
 288+ 97AE 7A           	ld a,d
 289+ 97AF AE           	xor (hl)
 290+ 97B0 77           	ld (hl),a
 291+ 97B1 2B           	dec hl
 292+ 97B2 24             	inc h
 293+ 97B3 7C               ld a,h
 294+ 97B4 E6 07            and 7
 295+ 97B6 20 0A            jr nz,2F
 296+ 97B8 7D               ld a,l
 297+ 97B9 C6 20            add a,$20
 298+ 97BB 6F               ld l,a
 299+ 97BC 38 04            jr c,2F
 300+ 97BE 7C               ld a,h
 301+ 97BF D6 08            sub 8
 302+ 97C1 67               ld h,a
 303+ 97C2 7C           2 ld a,h
 304+ 97C3 FE 58            cp $58
 305+ 97C5 28 21            jr z,4F
 306+ 97C7 D1               pop de
 307+ 97C8 7A           	ld a,d
 308+ 97C9 AE           	xor (hl)
 309+ 97CA 77           	ld (hl),a
 310+ 97CB 23           	inc hl
 311+ 97CC D1               pop de
 312+ 97CD 7B           	ld a,e
 313+ 97CE AE           	xor (hl)
 314+ 97CF 77           	ld (hl),a
 315+ 97D0 2B           	dec hl
 316+ 97D1 24           	inc h
 317+ 97D2 7C               ld a,h
 318+ 97D3 E6 07            and 7
 319+ 97D5 20 0A            jr nz,3F
 320+ 97D7 7D               ld a,l
 321+ 97D8 C6 20            add a,$20
 322+ 97DA 6F               ld l,a
 323+ 97DB 38 04            jr c,3F
 324+ 97DD 7C               ld a,h
 325+ 97DE D6 08            sub 8
 326+ 97E0 67               ld h,a
 327+ 97E1 7C           3 ld a,h
 328+ 97E2 FE 58            cp $58
 329+ 97E4 28 02            jr z,4F
 330+ 97E6 10 C1            djnz 1B
 331+ 97E8 ED 7B F8 88  4 ld sp,(Stack)
 332+ 97EC C9           	ret
 333+ 97ED
 334+ 97ED ED 73 F8 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 97F1 FD F9        	ld sp,iy
 336+ 97F3 06 08            ld b,8
 337+ 97F5 D1           1 pop de
 338+ 97F6 7B           	ld a,e
 339+ 97F7 AE           	xor (hl)
 340+ 97F8 77           	ld (hl),a
 341+ 97F9 24            	inc h
 342+ 97FA 7C               ld a,h
 343+ 97FB E6 07            and 7
 344+ 97FD 20 0A            jr nz,2F
 345+ 97FF 7D               ld a,l
 346+ 9800 C6 20            add a,$20
 347+ 9802 6F               ld l,a
 348+ 9803 38 04            jr c,2F
 349+ 9805 7C               ld a,h
 350+ 9806 D6 08            sub 8
 351+ 9808 67               ld h,a
 352+ 9809 7C           2 ld a,h
 353+ 980A FE 58            cp $58
 354+ 980C 28 1C            jr z,4F
 355+ 980E D1               pop de
 356+ 980F 7A           	ld a,d
 357+ 9810 AE           	xor (hl)
 358+ 9811 77           	ld (hl),a
 359+ 9812 24           	inc h
 360+ 9813 7C               ld a,h
 361+ 9814 E6 07            and 7
 362+ 9816 20 0A            jr nz,3F
 363+ 9818 7D               ld a,l
 364+ 9819 C6 20            add a,$20
 365+ 981B 6F               ld l,a
 366+ 981C 38 04            jr c,3F
 367+ 981E 7C               ld a,h
 368+ 981F D6 08            sub 8
 369+ 9821 67               ld h,a
 370+ 9822 7C           3 ld a,h
 371+ 9823 FE 58            cp $58
 372+ 9825 28 03            jr z,4F
 373+ 9827 D1               pop de
 374+ 9828 10 CB            djnz 1B
 375+ 982A ED 7B F8 88  4 ld sp,(Stack)
 376+ 982E C9           	ret
 377+ 982F
 378+ 982F              ; ---------------------------------------------------
 379+ 982F              ;
 380+ 982F              ;   27/02/23
 381+ 982F              ;
 382+ 982F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 982F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 982F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 982F
 386+ 982F ED 73 F8 88  Pinta_Disparo ld (Stack),sp
 387+ 9833 FD F9            ld sp,iy
 388+ 9835 06 03            ld b,3
 389+ 9837 D1           1 pop de
 390+ 9838 7B               ld a,e
 391+ 9839 AE               xor (hl)
 392+ 983A 77               ld (hl),a
 393+ 983B 23               inc hl
 394+ 983C 7A               ld a,d
 395+ 983D AE               xor (hl)
 396+ 983E 77               ld (hl),a
 397+ 983F 2B               dec hl
 398+ 9840
 399+ 9840 24               inc h
 400+ 9841 7C               ld a,h
 401+ 9842 E6 07            and 7
 402+ 9844 20 0A            jr nz,2F
 403+ 9846 7D               ld a,l
 404+ 9847 C6 20            add a,$20
 405+ 9849 6F               ld l,a
 406+ 984A 38 04            jr c,2F
 407+ 984C 7C               ld a,h
 408+ 984D D6 08            sub 8
 409+ 984F 67               ld h,a
 410+ 9850 7C           2 ld a,h
 411+ 9851 FE 58            cp $58
 412+ 9853 28 02            jr z,3F
 413+ 9855
 414+ 9855 10 E0            djnz 1B
 415+ 9857 ED 7B F8 88  3 ld sp,(Stack)
 416+ 985B C9               ret
 417+ 985C
# file closed: Rutinas_de_impresion_sprites.asm
1521  985C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 985C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 985C              ;
   3+ 985C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 985C              ;
   5+ 985C              ; *****************************************************************************************************************************************************************************************
   6+ 985C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 985C
   8+ 985C 7C           calcula_tercio ld a,h
   9+ 985D E6 18        	and $18
  10+ 985F CB 2F        	sra a
  11+ 9861 CB 2F        	sra a
  12+ 9863 CB 2F        	sra a
  13+ 9865 C9           	ret
  14+ 9866
# file closed: calcula_tercio.asm
1522  9866              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9866              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9866              ;
   3+ 9866              ;
   4+ 9866              ;	CLS.
   5+ 9866              ;
   6+ 9866              ;	Limpia la pantalla y define sus atributos.
   7+ 9866              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9866              ;
   9+ 9866              ;	COLORES: 0 ..... NEGRO
  10+ 9866              ;    		 1 ..... AZUL
  11+ 9866              ; 			 2 ..... ROJO
  12+ 9866              ;			 3 ..... MAGENTA
  13+ 9866              ; 			 4 ..... VERDE
  14+ 9866              ; 			 5 ..... CIAN
  15+ 9866              ;			 6 ..... AMARILLO
  16+ 9866              ; 			 7 ..... BLANCO
  17+ 9866              ;
  18+ 9866              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9866              ;
  20+ 9866              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9866
  22+ 9866
  23+ 9866 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9869 11 01 40     	LD DE,$4001
  25+ 986C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 986F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9871 ED B0        	LDIR
  28+ 9873 01 FF 02     	LD BC,767
  29+ 9876 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9877 ED B0        	LDIR
  31+ 9879 C9           	ret
  32+ 987A
# file closed: Cls.asm
1523  987A              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 987A              ; ******************************************************************************************************************************************************************************************
   2+ 987A              ;
   3+ 987A              ;   20/05/23
   4+ 987A              ;
   5+ 987A              ;	Recompone_posicion_inicio
   6+ 987A              ;
   7+ 987A              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 987A              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 987A              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 987A              ;	_ a una u otra rutina.
  11+ 987A
  12+ 987A              Recompone_posicion_inicio
  13+ 987A
  14+ 987A 2A BC 88     	ld hl,(Posicion_inicio)
  15+ 987D 7D           	ld a,l
  16+ 987E E6 1F        	and $1f
  17+ 9880 28 16        	jr z,1F
  18+ 9882
  19+ 9882 FE 1F        	cp $1f
  20+ 9884 28 0D        	jr z,3F
  21+ 9886
  22+ 9886 21 E5 88     	ld hl,Ctrl_2
  23+ 9889 CB C6        	set 0,(hl)
  24+ 988B 2A AE 88     	ld hl,(Puntero_objeto)
  25+ 988E 22 E8 88     	ld (Repone_puntero_objeto),hl
  26+ 9891 18 08        	jr 2F
  27+ 9893
  28+ 9893 CD 34 9A     3 call Mov_left
  29+ 9896 18 03        	jr 2F
  30+ 9898
  31+ 9898 CD 16 99     1 call Mov_right
  32+ 989B 21 00 F0     2 ld hl,Sprite_vacio
  33+ 989E 22 AE 88     	ld (Puntero_objeto),hl
  34+ 98A1 C9           	ret
  35+ 98A2
  36+ 98A2              ; ******************************************************************************************************************************************************************************************
  37+ 98A2              ;
  38+ 98A2              ;   27/05/23
  39+ 98A2              ;
  40+ 98A2              ;	Mov_down
  41+ 98A2              ;
  42+ 98A2              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98A2              ;
  44+ 98A2              ;
  45+ 98A2              Mov_down
  46+ 98A2
  47+ 98A2 CD 04 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98A5              ;																	; _ repone (Puntero_objeto).
  49+ 98A5 21 D4 88     	ld hl,Ctrl_0
  50+ 98A8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98AA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98AA              ; 																	; _ en el caso de que no lo haya.
  53+ 98AA 3A C2 88     	ld a,(Vel_down)
  54+ 98AD 47           	ld b,a
  55+ 98AE 2A AC 88         ld hl,(Posicion_actual)
  56+ 98B1 CD 5C 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98B4 E6 02        	and 2
  58+ 98B6 28 0F        	jr z,1F
  59+ 98B8
  60+ 98B8              ; Nos encontramos en el último tercio de pantalla.
  61+ 98B8              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98B8
  63+ 98B8 7C           	ld a,h
  64+ 98B9 FE 57        	cp $57
  65+ 98BB 20 0A        	jr nz,1F
  66+ 98BD
  67+ 98BD 7D           	ld a,l
  68+ 98BE C6 20        	add $20
  69+ 98C0 30 05        	jr nc,1F
  70+ 98C2
  71+ 98C2              ; ------------------------------
  72+ 98C2              ;	call Reaparece_arriba
  73+ 98C2 CD C1 9B     	call Reinicio
  74+ 98C5              ; ------------------------------
  75+ 98C5
  76+ 98C5 18 08        	jr 3F
  77+ 98C7 CD 49 95     1 call NextScan
  78+ 98CA 22 AC 88     	ld (Posicion_actual),hl
  79+ 98CD 10 E2            djnz 2B
  80+ 98CF CD E7 9B     3 call Genera_coordenadas
  81+ 98D2 C9           	ret
  82+ 98D3
  83+ 98D3              ; ******************************************************************************************************************************************************************************************
  84+ 98D3              ;
  85+ 98D3              ;   27/05/23
  86+ 98D3              ;
  87+ 98D3              ;	Mov_up
  88+ 98D3              ;
  89+ 98D3              ; 	Mueve el Sprite hacia arriba.
  90+ 98D3              ;
  91+ 98D3              ;
  92+ 98D3              Mov_up
  93+ 98D3
  94+ 98D3 CD 04 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 98D6              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 98D6 21 D4 88     	ld hl,Ctrl_0
  97+ 98D9 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 98DB              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 98DB              ; 																		; _ en el caso de que no lo haya.
 100+ 98DB 3A C1 88     	ld a,(Vel_up)
 101+ 98DE 47           	ld b,a
 102+ 98DF 2A AC 88     	ld hl,(Posicion_actual)
 103+ 98E2 CD 5C 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 98E5 A7           	and a
 105+ 98E6 20 10        	jr nz,1F
 106+ 98E8
 107+ 98E8              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 98E8              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 98E8
 110+ 98E8 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 98E9 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 98EB 20 0B            jr nz,1F
 113+ 98ED 7D               ld a,l
 114+ 98EE D6 20            sub $20
 115+ 98F0 30 06            jr nc,1F
 116+ 98F2 25               dec h
 117+ 98F3
 118+ 98F3              ; -----------------------------
 119+ 98F3 CD A2 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 98F6              ;	call Reinicio
 121+ 98F6              ; -----------------------------
 122+ 98F6
 123+ 98F6 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 98F8 CD 58 95     1 call PreviousScan
 125+ 98FB 22 AC 88     	ld (Posicion_actual),hl
 126+ 98FE 10 E2            djnz 3B
 127+ 9900 CD E7 9B     2 call Genera_coordenadas
 128+ 9903 C9           	ret
 129+ 9904
 130+ 9904              ; -----------------------------
 131+ 9904              ;
 132+ 9904              ;	27/5/23
 133+ 9904              ;
 134+ 9904              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9904              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9904              ;
 137+ 9904              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9904              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9904              ;
 140+ 9904              ;	Modifica: A y (Puntero_objeto).
 141+ 9904
 142+ 9904 3A E5 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9907 CB 47        	bit 0,a
 144+ 9909 C8           	ret z
 145+ 990A CB 87        	res 0,a
 146+ 990C 32 E5 88     	ld (Ctrl_2),a
 147+ 990F 2A E8 88     	ld hl,(Repone_puntero_objeto)
 148+ 9912 22 AE 88     	ld (Puntero_objeto),hl
 149+ 9915 C9           	ret
 150+ 9916
 151+ 9916              ; ******************************************************************************************************************************************************************************************
 152+ 9916              ;
 153+ 9916              ;	19/10/22
 154+ 9916              ;
 155+ 9916              ;	Mov_right.
 156+ 9916              ;
 157+ 9916              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9916              ;
 159+ 9916
 160+ 9916 21 D4 88     Mov_right ld hl,Ctrl_0
 161+ 9919 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 991B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 991B              ; 																	; _ en el caso de que no lo haya.
 164+ 991B 3A D4 88     	ld a,(Ctrl_0)
 165+ 991E CB 77        	bit 6,a
 166+ 9920 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9922
 168+ 9922 CD 50 9B     	call Stop_Amadeus_right
 169+ 9925 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9926 18 4D        	jr 8F
 171+ 9928
 172+ 9928 3A B0 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 992B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 992D 20 46        	jr nz,8F
 175+ 992F
 176+ 992F 3A B2 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9932 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9933 28 40        	jr z,8F
 179+ 9935
 180+ 9935              ; ---------- ---------- ----------
 181+ 9935              ;
 182+ 9935              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9935
 184+ 9935 3A C0 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9938 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 993A 28 11        	jr z,1F
 187+ 993C 38 06        	jr c,6F
 188+ 993E FE 04        	cp 4
 189+ 9940 28 14        	jr z,7F
 190+ 9942 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9944
 192+ 9944              ; ---------- ---------- ----------
 193+ 9944              ;
 194+ 9944              ; Perfiles de velocidad
 195+ 9944              ;
 196+ 9944
 197+ 9944 3A B2 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9947 FE FE        	cp $fe
 199+ 9949 20 2A        	jr nz,8F
 200+ 994B 18 10        	jr 3F
 201+ 994D 3A B2 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9950 FE FD        	cp $fd
 203+ 9952 20 21        	jr nz,8F
 204+ 9954 18 07        	jr 3F
 205+ 9956 3A B2 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9959 FE FB        	cp $fb
 207+ 995B 20 18        	jr nz,8F
 208+ 995D
 209+ 995D              ; ---------- ---------- ----------
 210+ 995D
 211+ 995D              3
 212+ 995D CD 90 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9960              ;	call Reinicio
 214+ 9960
 215+ 9960              ; ---------- ---------- ----------
 216+ 9960              ;
 217+ 9960              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9960
 219+ 9960 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9962 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9963 CD 7C 99     	call DESPLZ_DER
 222+ 9966 C1           	pop bc
 223+ 9967 10 F9        	djnz 5B
 224+ 9969 2A AC 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 996C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 996D 22 AC 88     	ld (Posicion_actual),hl
 227+ 9970 CD E7 9B     	call Genera_coordenadas
 228+ 9973 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9975
 230+ 9975              ; ---------- ---------- ----------
 231+ 9975
 232+ 9975 2A AC 88     8 ld hl,(Posicion_actual)
 233+ 9978 CD 7C 99     	call DESPLZ_DER
 234+ 997B C9           2 ret
 235+ 997C
 236+ 997C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 997C              ;
 238+ 997C              ;	22/9/22
 239+ 997C              ;
 240+ 997C
 241+ 997C CD 8B 99     DESPLZ_DER call Desplaza_derecha
 242+ 997F CD D7 99         call modifica_parametros_1er_DESPLZ_2
 243+ 9982 CD 00 9A         call Ciclo_completo
 244+ 9985 21 D4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9988 CB FE        	set 7,(hl)
 246+ 998A C9           	ret
 247+ 998B
 248+ 998B              ; ******************************************************************************************************************************************************************************************
 249+ 998B              ;	15/02/23
 250+ 998B              ;
 251+ 998B
 252+ 998B 3A C0 88     Desplaza_derecha ld a,(Vel_right)
 253+ 998E 47           	ld b,a
 254+ 998F 2A B8 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9992 23           1 inc hl
 256+ 9993 23           	inc hl
 257+ 9994 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9996 22 B8 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9999 CD E1 8B     	call Extrae_address
 260+ 999C 22 AE 88     	ld (Puntero_objeto),hl
 261+ 999F
 262+ 999F              ; Modifica (Puntero_DESPLZ_izq).
 263+ 999F
 264+ 999F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 999F              ; Cuántos movimientos hemos hecho ??
 266+ 999F              ; DE contiene (Puntero_DESPLZ_der).
 267+ 999F
 268+ 999F 2A B4 88     7 ld hl,(Indice_Sprite_der)
 269+ 99A2 EB           	ex de,hl
 270+ 99A3 A7           	and a
 271+ 99A4 ED 52        	sbc hl,de
 272+ 99A6 CB 3D        	srl l
 273+ 99A8 3E 08        6 ld a,8
 274+ 99AA 95           	sub l
 275+ 99AB 30 1E        	jr nc,3F
 276+ 99AD
 277+ 99AD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 99AD              ; B="0".
 279+ 99AD
 280+ 99AD 04           4 inc b
 281+ 99AE 3C           	inc a
 282+ 99AF 20 FC        	jr nz,4B
 283+ 99B1 78           	ld a,b
 284+ 99B2 08           	ex af,af
 285+ 99B3 2A B4 88     	ld hl,(Indice_Sprite_der)
 286+ 99B6 23           5 inc hl
 287+ 99B7 23           	inc hl
 288+ 99B8 10 FC        	djnz 5B
 289+ 99BA 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 290+ 99BD CD E1 8B     	call Extrae_address
 291+ 99C0 22 AE 88     	ld (Puntero_objeto),hl
 292+ 99C3
 293+ 99C3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 99C3              ; _(Posicion_actual).
 295+ 99C3
 296+ 99C3 21 AC 88     	ld hl,Posicion_actual
 297+ 99C6 34           	inc (hl)
 298+ 99C7 08               ex af,af
 299+ 99C8 6F           	ld l,a
 300+ 99C9 18 DD        	jr 6B
 301+ 99CB
 302+ 99CB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 99CB
 304+ 99CB 47           3 ld b,a
 305+ 99CC 2A B6 88     	ld hl,(Indice_Sprite_izq)
 306+ 99CF 23           2 inc hl
 307+ 99D0 23           	inc hl
 308+ 99D1 10 FC        	djnz 2B
 309+ 99D3 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 99D6 C9           8 ret
 311+ 99D7
 312+ 99D7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 99D7              ;
 314+ 99D7              ;	24/7/22
 315+ 99D7              ;
 316+ 99D7              ;	modifica_parametros_1er_DESPLZ_2
 317+ 99D7              ;
 318+ 99D7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 99D7              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 99D7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 99D7
 322+ 99D7 3A B2 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 99DA A7           	and a
 324+ 99DB 20 1F        	jr nz,1F
 325+ 99DD D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 99DF 32 B2 88         ld (CTRL_DESPLZ),a
 327+ 99E2
 328+ 99E2 21 AB 88     	ld hl,Columns
 329+ 99E5 34           	inc (hl)
 330+ 99E6 3A BE 88     	ld a,(Cuad_objeto)
 331+ 99E9 E6 01        	and 1
 332+ 99EB 28 0F        	jr z,1F
 333+ 99ED 2A AC 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 99F0 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 99F1 22 AC 88     	ld (Posicion_actual),hl
 336+ 99F4 CD E7 9B     	call Genera_coordenadas
 337+ 99F7 CD 5C 9B     	call Inc_CTRL_DESPLZ
 338+ 99FA 18 03        	jr 2F
 339+ 99FC CD 5C 9B     1 call Inc_CTRL_DESPLZ
 340+ 99FF C9           2 ret
 341+ 9A00
 342+ 9A00              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A00              ;
 344+ 9A00              ;	24/7/22
 345+ 9A00              ;
 346+ 9A00              ;	Ciclo_completo.
 347+ 9A00              ;
 348+ 9A00              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A00              ;
 350+ 9A00              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A00              ; 	Decrementamos (Columns).
 352+ 9A00              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A00              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A00
 355+ 9A00
 356+ 9A00 3A B2 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A03 FE FF        	cp $ff
 358+ 9A05 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A07 E6 F0        	and $f0
 360+ 9A09 20 28        	jr nz,3F
 361+ 9A0B
 362+ 9A0B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A0B
 364+ 9A0B 3A B2 88     	ld a,(CTRL_DESPLZ)
 365+ 9A0E 47           	ld b,a
 366+ 9A0F 3E F8        	ld a,$f8
 367+ 9A11 80           	add b
 368+ 9A12 32 B2 88     	ld (CTRL_DESPLZ),a
 369+ 9A15 18 1C        	jr 3F
 370+ 9A17 21 AB 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A1A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A1B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A1C 32 B2 88     	ld (CTRL_DESPLZ),a
 374+ 9A1F 3A BE 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A22 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A24 20 0A        	jr nz,2F
 377+ 9A26 2A AC 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A29 23           	inc hl
 379+ 9A2A 22 AC 88     	ld (Posicion_actual),hl
 380+ 9A2D CD E7 9B     	call Genera_coordenadas
 381+ 9A30
 382+ 9A30              ; Inicia el puntero de Sprite.
 383+ 9A30
 384+ 9A30 CD F8 8B     2 call Inicia_puntero_objeto_der
 385+ 9A33 C9           3 ret
 386+ 9A34
 387+ 9A34              ; ******************************************************************************************************************************************************************************************
 388+ 9A34              ;
 389+ 9A34              ;	15/02/23
 390+ 9A34              ;
 391+ 9A34              ;	Mov_left.
 392+ 9A34              ;
 393+ 9A34              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A34              ;
 395+ 9A34              Mov_left
 396+ 9A34
 397+ 9A34 21 D4 88     	ld hl,Ctrl_0
 398+ 9A37 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A39              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A39              ; 																	; _ en el caso de que no lo haya.
 401+ 9A39 3A D4 88     	ld a,(Ctrl_0)
 402+ 9A3C CB 77        	bit 6,a
 403+ 9A3E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A40
 405+ 9A40 CD 56 9B     	call Stop_Amadeus_left
 406+ 9A43 C8           	ret z
 407+ 9A44 20 4A        	jr nz,8F
 408+ 9A46
 409+ 9A46 3A B0 88     11 ld a,(Coordenada_X)
 410+ 9A49 A7           	and a
 411+ 9A4A 20 44        	jr nz,8F
 412+ 9A4C
 413+ 9A4C 3A B2 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9A4F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9A50 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9A52
 417+ 9A52              ; ---------- ---------- ----------
 418+ 9A52
 419+ 9A52 3A BF 88     	ld a,(Vel_left)
 420+ 9A55 FE 02        	cp 2
 421+ 9A57 28 0F        	jr z,1F
 422+ 9A59 38 04        	jr c,6F
 423+ 9A5B FE 04        	cp 4
 424+ 9A5D 28 12        	jr z,7F
 425+ 9A5F
 426+ 9A5F              ; ---------- ---------- ----------
 427+ 9A5F
 428+ 9A5F 3A B2 88     6 ld a,(CTRL_DESPLZ)
 429+ 9A62 FE F8        	cp $f8
 430+ 9A64 20 2A        	jr nz,8F
 431+ 9A66 18 10        	jr 4F
 432+ 9A68 3A B2 88     1 ld a,(CTRL_DESPLZ)
 433+ 9A6B FE F9        	cp $f9
 434+ 9A6D 20 21        	jr nz,8F
 435+ 9A6F 18 07        	jr 4F
 436+ 9A71 3A B2 88     7 ld a,(CTRL_DESPLZ)
 437+ 9A74 FE FB        	cp $fb
 438+ 9A76 20 18        	jr nz,8F
 439+ 9A78
 440+ 9A78              ; ---------- ---------- ----------
 441+ 9A78
 442+ 9A78              4
 443+ 9A78 CD 7E 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9A7B              ;	call Reinicio
 445+ 9A7B
 446+ 9A7B              ; ---------- ---------- ----------
 447+ 9A7B
 448+ 9A7B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9A7D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9A7E
 451+ 9A7E              ;	ld hl,(Indice_Sprite_izq)
 452+ 9A7E              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9A7E
 454+ 9A7E CD 97 9A     	call DESPLZ_IZQ
 455+ 9A81 C1           	pop bc
 456+ 9A82 10 F9        	djnz 5B
 457+ 9A84 2A AC 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9A87 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9A88 22 AC 88     	ld (Posicion_actual),hl
 460+ 9A8B CD E7 9B     	call Genera_coordenadas
 461+ 9A8E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9A90
 463+ 9A90              ; ---------- ---------- ----------
 464+ 9A90
 465+ 9A90              ; Movemos, no hay recolocación.
 466+ 9A90
 467+ 9A90 2A AC 88     8 ld hl,(Posicion_actual)
 468+ 9A93 CD 97 9A     	call DESPLZ_IZQ
 469+ 9A96 C9           2 ret
 470+ 9A97
 471+ 9A97              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9A97              ;
 473+ 9A97              ;	22/9/22
 474+ 9A97
 475+ 9A97              DESPLZ_IZQ
 476+ 9A97
 477+ 9A97 CD A6 9A     	call Desplaza_izquierda
 478+ 9A9A CD F2 9A         call modifica_parametros_1er_DESPLZ
 479+ 9A9D CD 1A 9B     	call Ciclo_completo_2
 480+ 9AA0 21 D4 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9AA3 CB BE        	res 7,(hl)
 482+ 9AA5 C9           	ret
 483+ 9AA6
 484+ 9AA6              Desplaza_izquierda
 485+ 9AA6
 486+ 9AA6 3A BF 88     	ld a,(Vel_left)
 487+ 9AA9 47           	ld b,a
 488+ 9AAA 2A BA 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9AAD 23           1 inc hl
 490+ 9AAE 23           	inc hl
 491+ 9AAF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9AB1 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9AB4 CD E1 8B     	call Extrae_address
 494+ 9AB7 22 AE 88     	ld (Puntero_objeto),hl
 495+ 9ABA
 496+ 9ABA              ; Modifica (Puntero_DESPLZ_der).
 497+ 9ABA
 498+ 9ABA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9ABA              ; Cuántos movimientos hemos hecho ??
 500+ 9ABA              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9ABA
 502+ 9ABA 2A B6 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9ABD EB           	ex de,hl
 504+ 9ABE A7           	and a
 505+ 9ABF ED 52        	sbc hl,de
 506+ 9AC1 CB 3D        	srl l
 507+ 9AC3 3E 08        6 ld a,8
 508+ 9AC5 95           	sub l
 509+ 9AC6 30 1E        	jr nc,3F
 510+ 9AC8
 511+ 9AC8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9AC8              ; B="0".
 513+ 9AC8
 514+ 9AC8 04           4 inc b
 515+ 9AC9 3C           	inc a
 516+ 9ACA 20 FC        	jr nz,4B
 517+ 9ACC 78           	ld a,b
 518+ 9ACD 08           	ex af,af
 519+ 9ACE 2A B6 88     	ld hl,(Indice_Sprite_izq)
 520+ 9AD1 23           5 inc hl
 521+ 9AD2 23           	inc hl
 522+ 9AD3 10 FC        	djnz 5B
 523+ 9AD5 22 BA 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9AD8 CD E1 8B     	call Extrae_address
 525+ 9ADB 22 AE 88     	ld (Puntero_objeto),hl
 526+ 9ADE
 527+ 9ADE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9ADE              ; _(Posicion_actual).
 529+ 9ADE
 530+ 9ADE 21 AC 88     	ld hl,Posicion_actual
 531+ 9AE1 35           	dec (hl)
 532+ 9AE2 08           	ex af,af
 533+ 9AE3 6F           	ld l,a
 534+ 9AE4 18 DD        	jr 6B
 535+ 9AE6
 536+ 9AE6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9AE6
 538+ 9AE6 47           3 ld b,a
 539+ 9AE7 2A B4 88     	ld hl,(Indice_Sprite_der)
 540+ 9AEA 23           2 inc hl
 541+ 9AEB 23           	inc hl
 542+ 9AEC 10 FC        	djnz 2B
 543+ 9AEE 22 B8 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9AF1 C9           8 ret
 545+ 9AF2
 546+ 9AF2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9AF2              ;
 548+ 9AF2              ;	modifica_parametros_1er_DESPLZ
 549+ 9AF2              ;
 550+ 9AF2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9AF2              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9AF2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9AF2
 554+ 9AF2 3A B2 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9AF5 A7           	and a
 556+ 9AF6 20 1E        	jr nz,1F
 557+ 9AF8 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9AF9 32 B2 88         ld (CTRL_DESPLZ),a
 559+ 9AFC 21 AB 88     	ld hl,Columns
 560+ 9AFF 34           	inc (hl)
 561+ 9B00 3A BE 88     	ld a,(Cuad_objeto)
 562+ 9B03 E6 01        	and 1
 563+ 9B05 20 0F        	jr nz,1F
 564+ 9B07 2A AC 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B0A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B0B 22 AC 88     	ld (Posicion_actual),hl
 567+ 9B0E CD E7 9B     	call Genera_coordenadas
 568+ 9B11 CD 6D 9B     	call Dec_CTRL_DESPLZ
 569+ 9B14 18 03        	jr 2F
 570+ 9B16 CD 6D 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B19 C9           2 ret
 572+ 9B1A
 573+ 9B1A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B1A
 575+ 9B1A 3A B2 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B1D FE F7        	cp $f7
 577+ 9B1F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B21 30 2C        	jr nc,3F
 579+ 9B23
 580+ 9B23              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B23
 582+ 9B23 06 00        	ld b,0
 583+ 9B25 04           4 inc b
 584+ 9B26 3C           	inc a
 585+ 9B27 FE F7        	cp $f7
 586+ 9B29 20 FA        	jr nz,4B
 587+ 9B2B 3E FF        	ld a,$ff
 588+ 9B2D 90           	sub b
 589+ 9B2E 32 B2 88     	ld (CTRL_DESPLZ),a
 590+ 9B31 18 1C        	jr 3F
 591+ 9B33
 592+ 9B33              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B33
 594+ 9B33 21 AB 88     1 ld hl,Columns
 595+ 9B36 35           	dec (hl)
 596+ 9B37 AF           	xor a
 597+ 9B38 32 B2 88     	ld (CTRL_DESPLZ),a
 598+ 9B3B 3A BE 88     	ld a,(Cuad_objeto)
 599+ 9B3E E6 01        	and 1
 600+ 9B40 28 0A        	jr z,2F
 601+ 9B42 2A AC 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B45 2B           	dec hl
 603+ 9B46 22 AC 88     	ld (Posicion_actual),hl
 604+ 9B49 CD E7 9B     	call Genera_coordenadas
 605+ 9B4C
 606+ 9B4C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9B4C
 608+ 9B4C CD 0B 8C     2 call Inicia_puntero_objeto_izq
 609+ 9B4F C9           3 ret
 610+ 9B50
 611+ 9B50              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9B50              ;
 613+ 9B50              ;	19/10/22
 614+ 9B50              ;
 615+ 9B50              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9B50              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9B50
 618+ 9B50 3A B0 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9B53 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9B55 C9           	ret
 621+ 9B56
 622+ 9B56              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9B56              ;
 624+ 9B56              ;	19/10/22
 625+ 9B56              ;
 626+ 9B56              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9B56              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9B56
 629+ 9B56 3A B0 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9B59 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9B5B C9           	ret
 632+ 9B5C
 633+ 9B5C              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9B5C              ;
 635+ 9B5C              ;	24/7/22
 636+ 9B5C              ;
 637+ 9B5C              ;	Inc_CTRL_DESPLZ
 638+ 9B5C              ;
 639+ 9B5C              ;
 640+ 9B5C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9B5C
 642+ 9B5C 21 B2 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9B5F 3A C0 88     	ld a,(Vel_right)
 644+ 9B62 A7           	and a
 645+ 9B63 28 06        	jr z,1F
 646+ 9B65 47           	ld b,a
 647+ 9B66 34           3 inc (hl)
 648+ 9B67 10 FD        	djnz 3B
 649+ 9B69 18 01        	jr 2F
 650+ 9B6B 34           1 inc (hl)
 651+ 9B6C C9           2 ret
 652+ 9B6D
 653+ 9B6D              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9B6D              ;
 655+ 9B6D              ;	5/2/23
 656+ 9B6D              ;
 657+ 9B6D              ;	Dec_CTRL_DESPLZ
 658+ 9B6D              ;
 659+ 9B6D              ;
 660+ 9B6D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9B6D
 662+ 9B6D 21 B2 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9B70 3A BF 88     	ld a,(Vel_left)
 664+ 9B73 A7           	and a
 665+ 9B74 28 06        	jr z,1F
 666+ 9B76 47           	ld b,a
 667+ 9B77 35           3 dec (hl)
 668+ 9B78 10 FD        	djnz 3B
 669+ 9B7A 18 01        	jr 2F
 670+ 9B7C 35           1 dec (hl)
 671+ 9B7D C9           2 ret
 672+ 9B7E
 673+ 9B7E              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9B7E
 675+ 9B7E 2A AC 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9B81 01 1F 00     	ld bc,31
 677+ 9B84 A7           	and a
 678+ 9B85 ED 4A        	adc hl,bc
 679+ 9B87 22 AC 88     	ld (Posicion_actual),hl
 680+ 9B8A 21 D4 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9B8D CB C6        	set 0,(hl)
 682+ 9B8F C9           	ret
 683+ 9B90
 684+ 9B90              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9B90
 686+ 9B90 2A AC 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9B93 01 1F 00     	ld bc,31
 688+ 9B96 A7           	and a
 689+ 9B97 ED 42        	sbc hl,bc
 690+ 9B99 22 AC 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9B9C 21 D4 88     	ld hl,Ctrl_0
 692+ 9B9F CB CE        	set 1,(hl)
 693+ 9BA1 C9           	ret
 694+ 9BA2
 695+ 9BA2              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9BA2
 697+ 9BA2 24           Reaparece_abajo inc h
 698+ 9BA3 01 E0 17     	ld bc,$17e0
 699+ 9BA6 A7           	and a
 700+ 9BA7 ED 4A        	adc hl,bc
 701+ 9BA9 22 AC 88     	ld (Posicion_actual),hl
 702+ 9BAC 21 D4 88     	ld hl,Ctrl_0
 703+ 9BAF CB D6        	set 2,(hl)
 704+ 9BB1 C9           	ret
 705+ 9BB2
 706+ 9BB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9BB2
 708+ 9BB2 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9BB5 A7           	and a
 710+ 9BB6 ED 42        	sbc hl,bc
 711+ 9BB8 22 AC 88     	ld (Posicion_actual),hl
 712+ 9BBB 21 D4 88     	ld hl,Ctrl_0
 713+ 9BBE CB DE        	set 3,(hl)
 714+ 9BC0 C9           	ret
 715+ 9BC1
 716+ 9BC1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9BC1              ;
 718+ 9BC1              ;	15/07/23
 719+ 9BC1
 720+ 9BC1              Reinicio
 721+ 9BC1
 722+ 9BC1              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9BC1
 724+ 9BC1 AF           	xor a
 725+ 9BC2 21 D9 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9BC5 CD E3 9B     	call Limpia_contenido_hl
 727+ 9BC8
 728+ 9BC8 21 AC 88     	ld hl,Posicion_actual
 729+ 9BCB CD E3 9B     	call Limpia_contenido_hl
 730+ 9BCE
 731+ 9BCE CD 13 9F     	call Inicializa_Puntero_indice_mov
 732+ 9BD1 CD 9D 9E     	call Inicia_Puntero_mov
 733+ 9BD4
 734+ 9BD4 21 DB 88     	ld hl,Incrementa_puntero
 735+ 9BD7 06 05        	ld b,5
 736+ 9BD9 77           1 ld (hl),a
 737+ 9BDA 23           	inc hl
 738+ 9BDB 10 FC        	djnz 1B
 739+ 9BDD
 740+ 9BDD 21 E5 88     	ld hl,Ctrl_2
 741+ 9BE0 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9BE2
 743+ 9BE2 C9           	ret
 744+ 9BE3
 745+ 9BE3 77           Limpia_contenido_hl	ld (hl),a
 746+ 9BE4 23           	inc hl
 747+ 9BE5 77           	ld (hl),a
 748+ 9BE6 C9           	ret
 749+ 9BE7
 750+ 9BE7
# file closed: Direcciones.asm
1524  9BE7              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BE7              ; ------------------------------------------------------------------------
   2+ 9BE7              ;
   3+ 9BE7              ;	02/04/23
   4+ 9BE7              ;
   5+ 9BE7              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BE7              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BE7              ;
   8+ 9BE7              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BE7              ;
  10+ 9BE7              ;	Modifica: A,BC y DE.
  11+ 9BE7
  12+ 9BE7 C5           Genera_coordenadas push bc
  13+ 9BE8 E5           	push hl
  14+ 9BE9 D5           	push de
  15+ 9BEA
  16+ 9BEA 2A AC 88     	ld hl,(Posicion_actual)
  17+ 9BED
  18+ 9BED 7D           	ld a,l
  19+ 9BEE E6 1F        	and $1f
  20+ 9BF0 32 B0 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9BF3
  22+ 9BF3 CD 5C 98     	call calcula_tercio
  23+ 9BF6 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9BF7
  25+ 9BF7 1E 00        	ld e,0
  26+ 9BF9 7D           	ld a,l
  27+ 9BFA E6 E0        	and $e0
  28+ 9BFC 28 01        	jr z,1F
  29+ 9BFE 04           	inc b
  30+ 9BFF
  31+ 9BFF 04           1 inc b
  32+ 9C00 05           	dec b
  33+ 9C01 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C03              ;														; _ , salimos.
  35+ 9C03 1C           3 inc e
  36+ 9C04 D6 20        	sub 32
  37+ 9C06 20 FB        	jr nz,3B
  38+ 9C08 10 F5        	djnz 1B
  39+ 9C0A
  40+ 9C0A 7B           2 ld a,e
  41+ 9C0B 32 B1 88     	ld (Coordenada_y),a
  42+ 9C0E
  43+ 9C0E D1           	pop de
  44+ 9C0F E1           	pop hl
  45+ 9C10 C1           	pop bc
  46+ 9C11
  47+ 9C11 C9           	ret
  48+ 9C12
  49+ 9C12              ; ------------------------------------------------------------------------
  50+ 9C12              ;	28/05/23
  51+ 9C12              ;
  52+ 9C12              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C12              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C12              ;
  55+ 9C12              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C12              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C12              ;
  58+ 9C12              ;		DE="$120d"
  59+ 9C12              ;
  60+ 9C12              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C12              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C12              ;
  63+ 9C12              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C12
  65+ 9C12              ;	Modifica: A,BC y DE.
  66+ 9C12
  67+ 9C12
  68+ 9C12              Genera_coordenadas_disparo
  69+ 9C12
  70+ 9C12              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C12
  72+ 9C12 7D           	ld a,l
  73+ 9C13 E6 1F        	and $1f
  74+ 9C15 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C16 CD 5C 98     	call calcula_tercio
  76+ 9C19 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C1A 1E 00        	ld e,0
  78+ 9C1C 7D           	ld a,l
  79+ 9C1D E6 E0        	and $e0
  80+ 9C1F 28 01        	jr z,1F
  81+ 9C21 04           	inc b
  82+ 9C22 1C           1 inc e
  83+ 9C23 D6 20        	sub 32
  84+ 9C25 20 FB        	jr nz,1B
  85+ 9C27 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C29 C9           	ret
  87+ 9C2A
# file closed: Genera_coordenadas.asm
1525  9C2A              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C2A              ; Relojes y temporizaciones.
   2+ 9C2A
   3+ 9C2A              ; ------------------------------------------------------
   4+ 9C2A              ;
   5+ 9C2A              ;	16/7/23
   6+ 9C2A              ;
   7+ 9C2A              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C2A              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C2A              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C2A              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C2A              ;
  12+ 9C2A              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C2A              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C2A
  15+ 9C2A              ; Disparo_entidad db 1
  16+ 9C2A              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C2A              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C2A
  19+ 9C2A              Habilita_disparos
  20+ 9C2A
  21+ 9C2A 7E           	ld a,(hl)
  22+ 9C2B A7           	and a
  23+ 9C2C C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C2D
  25+ 9C2D EB           	ex de,hl
  26+ 9C2E
  27+ 9C2E 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C2F C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C30
  30+ 9C30              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C30
  32+ 9C30 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C31 7E           	ld a,(hl)
  34+ 9C32 23           	inc hl
  35+ 9C33 77           	ld (hl),a
  36+ 9C34
  37+ 9C34 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C35 3E 01        	ld a,1
  39+ 9C37 77           	ld (hl),a
  40+ 9C38 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1526  9C39              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C39
   2+ 9C39
   3+ 9C39              ;   07/07/23
   4+ 9C39              ;
   5+ 9C39              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C39              ;
   7+ 9C39              ;   Codificación:
   8+ 9C39              ;
   9+ 9C39              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C39              ;
  11+ 9C39              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C39              ;
  13+ 9C39              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C39              ;
  15+ 9C39              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C39              ;
  17+ 9C39              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C39              ;                               ..... %01000010 Vel_up 4
  19+ 9C39              ;                                               Vel_down 2
  20+ 9C39              ;                               ..... $42
  21+ 9C39              ;
  22+ 9C39              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C39              ;
  24+ 9C39              ;                               ..... %01000010 Vel_left 4
  25+ 9C39              ;                                               Vel_right 2
  26+ 9C39              ;                               ..... $42
  27+ 9C39              ;
  28+ 9C39              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C39              ;
  30+ 9C39              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C39              ;
  32+ 9C39              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C39              ;
  34+ 9C39              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C39              ;                                     $53
  36+ 9C39              ;
  37+ 9C39              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C39              ;
  39+ 9C39              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C39              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C39              ;
  42+ 9C39              ;                       Arriba ..... $81
  43+ 9C39              ;                       Arriba - izquierda ..... $a1
  44+ 9C39              ;                       Arriba - derecha ..... $91
  45+ 9C39              ;
  46+ 9C39              ;                       Abajo ..... $41
  47+ 9C39              ;                       Abajo - izquierda ..... $61
  48+ 9C39              ;                       Abajo - derecha ..... $51
  49+ 9C39              ;
  50+ 9C39              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C39              ;
  52+ 9C39              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C39              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C39              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C39              ;
  56+ 9C39              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C39              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C39              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C39              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C39              ;
  61+ 9C39              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C39              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C39              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C39              ;
  65+ 9C39              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C39              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C39              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C39              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C39
  70+ 9C39              ; ----- ----- ----- ----- -----
  71+ 9C39
  72+ 9C39 65 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C3B 6D 9C            defw F_1
  74+ 9C3D 77 9C            defw F_2
  75+ 9C3F 81 9C            defw Codo_abajo_derecha
  76+ 9C41 B5 9C            defw Derecha_y_subiendo
  77+ 9C43 BF 9C            defw Derecha_y_subiendo_1
  78+ 9C45 C9 9C            defw F_3
  79+ 9C47 D3 9C            defw F_4
  80+ 9C49 DD 9C            defw Derecha_y_bajando
  81+ 9C4B E7 9C            defw Derecha_y_bajando_1
  82+ 9C4D F1 9C            defw Derecha_y_bajando_2
  83+ 9C4F FB 9C            defw Codo_derecha_abajo
  84+ 9C51 2B 9D            defw Codo_abajo_izq.
  85+ 9C53 5F 9D            defw Izquierda_y_subiendo
  86+ 9C55 69 9D            defw Izquierda_y_subiendo_1
  87+ 9C57 73 9D            defw F_5
  88+ 9C59 7D 9D            defw F_6
  89+ 9C5B 87 9D            defw Izquierda_y_bajando
  90+ 9C5D 91 9D            defw Izquierda_y_bajando_1
  91+ 9C5F 9B 9D            defw Izquierda_y_bajando_2
  92+ 9C61 A5 9D            defw Codo_izquierda_abajo
  93+ 9C63 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C65
  95+ 9C65 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C69 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C6D
  98+ 9C6D 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C71 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C75 08 00
 100+ 9C77 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C7B 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C7F 0F FE
 102+ 9C81
 103+ 9C81 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C85 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C89 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C8D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C91 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C95 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C99 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C9D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CA1 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CA5 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CA9 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CAD 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CB1 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9CB5
 117+ 9CB5 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9CB9 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9CBD 06 00
 119+ 9CBF
 120+ 9CBF 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9CC3 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9CC7 02 00
 122+ 9CC9
 123+ 9CC9 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9CCD 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9CD1 04 00
 125+ 9CD3 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9CD7 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9CDB 08 00
 127+ 9CDD
 128+ 9CDD 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9CE1 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9CE5 02 00
 130+ 9CE7
 131+ 9CE7 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CEB 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CEF 06 00
 133+ 9CF1
 134+ 9CF1 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CF5 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CF9 06 00
 136+ 9CFB
 137+ 9CFB              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CFB
 139+ 9CFB 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CFF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D03 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D07 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D0B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D0F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D13 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D17 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D1B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D1F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D23 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D27 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D2B
 152+ 9D2B 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D2F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D33 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D37 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D3B 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D3F 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D43 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D47 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D4B 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D4F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D53 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D57 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D5B 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D5F
 166+ 9D5F 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D63 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D67 06 00
 168+ 9D69
 169+ 9D69 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D6D 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D71 02 00
 171+ 9D73
 172+ 9D73 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D77 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D7B 04 00
 174+ 9D7D 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D81 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D85 08 00
 176+ 9D87
 177+ 9D87 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D8B 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D8F 02 00
 179+ 9D91
 180+ 9D91 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D95 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D99 06 00
 182+ 9D9B
 183+ 9D9B 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D9F 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DA3 06 00
 185+ 9DA5
 186+ 9DA5 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DA9 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DAD 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DB1 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9DB5 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9DB9 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9DBD 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9DC1 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9DC5 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9DC9 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9DCD 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9DD1 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9DD5
 199+ 9DD5              ; ----- ----- ----- ----- -----
 200+ 9DD5              ;
 201+ 9DD5              ;   27/06/23
 202+ 9DD5
 203+ 9DD5              Movimiento
 204+ 9DD5
 205+ 9DD5              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9DD5
 207+ 9DD5              ;    ld hl,(Posicion_actual)
 208+ 9DD5
 209+ 9DD5 3A E5 88         ld a,(Ctrl_2)
 210+ 9DD8 CB 57            bit 2,a
 211+ 9DDA 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9DDC
 213+ 9DDC 2A D7 88         ld hl,(Puntero_mov)
 214+ 9DDF 7E               ld a,(hl)
 215+ 9DE0
 216+ 9DE0              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9DE0
 218+ 9DE0              Inicia_desplazamiento.
 219+ 9DE0
 220+ 9DE0              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9DE0
 222+ 9DE0 CD D4 9E         call Ajusta_velocidad_desplazamiento
 223+ 9DE3
 224+ 9DE3              ; Iniciamos (Repetimos_mov).
 225+ 9DE3
 226+ 9DE3 7E               ld a,(hl)
 227+ 9DE4 E6 0F            and $0f
 228+ 9DE6 32 DD 88         ld (Repetimos_desplazamiento),a
 229+ 9DE9 32 DE 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9DEC
 231+ 9DEC              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9DEC
 233+ 9DEC 23               inc hl
 234+ 9DED 7E               ld a,(hl)
 235+ 9DEE 32 E0 88         ld (Cola_de_desplazamiento),a
 236+ 9DF1 2B               dec hl
 237+ 9DF2
 238+ 9DF2 21 E5 88         ld hl,Ctrl_2
 239+ 9DF5 CB D6            set 2,(hl)
 240+ 9DF7
 241+ 9DF7              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9DF7              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9DF7
 244+ 9DF7              Desplazamiento_iniciado
 245+ 9DF7
 246+ 9DF7 CD A8 9E         call Aplica_desplazamiento
 247+ 9DFA
 248+ 9DFA 3A E5 88         ld a,(Ctrl_2)
 249+ 9DFD CB 67            bit 4,a
 250+ 9DFF C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E00
 252+ 9E00 21 DD 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E03 35               dec (hl)
 254+ 9E04 C0               ret nz
 255+ 9E05
 256+ 9E05              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E05              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E05              ; Analiza (Cola_de_desplazamiento).
 259+ 9E05
 260+ 9E05 3A E0 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E08 A7               and a
 262+ 9E09 CC FD 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E0C 28 30            jr z,Reinicia_el_movimiento
 264+ 9E0E
 265+ 9E0E FE FF            cp $ff
 266+ 9E10 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E12
 268+ 9E12 FE FE            cp $fe
 269+ 9E14 CC 81 9E         call z,Fijamos_bucle
 270+ 9E17 28 25            jr z,Reinicia_el_movimiento
 271+ 9E19
 272+ 9E19 FE FD            cp $fd
 273+ 9E1B 20 11            jr nz,1F
 274+ 9E1D
 275+ 9E1D              ; ---
 276+ 9E1D              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E1D
 278+ 9E1D 3A E5 88         ld a,(Ctrl_2)
 279+ 9E20 CB 5F            bit 3,a
 280+ 9E22 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E24
 282+ 9E24              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E24
 284+ 9E24 21 E5 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E27 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E29
 287+ 9E29 CD 92 9E         call Inicia_Repetimos_movimiento
 288+ 9E2C 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E2E              ; ---
 290+ 9E2E
 291+ 9E2E FE 01        1 cp 1
 292+ 9E30 CA 6B 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E33
 294+ 9E33 3D               dec a
 295+ 9E34 32 E0 88         ld (Cola_de_desplazamiento),a
 296+ 9E37
 297+ 9E37 3A DE 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E3A 32 DD 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E3D              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E3D C9               ret
 301+ 9E3E
 302+ 9E3E              Reinicia_el_movimiento
 303+ 9E3E
 304+ 9E3E 3A E5 88         ld a,(Ctrl_2)
 305+ 9E41 CB 5F            bit 3,a
 306+ 9E43 28 1B            jr z,2F
 307+ 9E45
 308+ 9E45              ; (Cola_de_desplazamiento)="254".
 309+ 9E45
 310+ 9E45 21 DF 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E48 35               dec (hl)
 312+ 9E49 20 15            jr nz,2F
 313+ 9E4B
 314+ 9E4B              ; Fin de las repeticiones del último movimiento.
 315+ 9E4B
 316+ 9E4B 21 E5 88         ld hl,Ctrl_2
 317+ 9E4E CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E50
 319+ 9E50 2A D7 88         ld hl,(Puntero_mov)
 320+ 9E53 23               inc hl
 321+ 9E54 23               inc hl
 322+ 9E55 23               inc hl
 323+ 9E56 22 D7 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9E59              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9E59 7E               ld a,(hl)
 326+ 9E5A 32 E0 88         ld (Cola_de_desplazamiento),a
 327+ 9E5D
 328+ 9E5D C3 05 9E         jp Cola
 329+ 9E60
 330+ 9E60 CD 9D 9E     2 call Inicia_Puntero_mov
 331+ 9E63
 332+ 9E63 21 E5 88         ld hl,Ctrl_2
 333+ 9E66 CB 96            res 2,(hl)
 334+ 9E68
 335+ 9E68 C3 D5 9D         jp Movimiento
 336+ 9E6B
 337+ 9E6B              Siguiente_desplazamiento
 338+ 9E6B
 339+ 9E6B              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9E6B              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9E6B
 342+ 9E6B 21 E5 88         ld hl,Ctrl_2
 343+ 9E6E CB 96            res 2,(hl)
 344+ 9E70
 345+ 9E70 2A D7 88         ld hl,(Puntero_mov)
 346+ 9E73 23               inc hl
 347+ 9E74 23               inc hl
 348+ 9E75 22 D7 88         ld (Puntero_mov),hl
 349+ 9E78
 350+ 9E78 7E               ld a,(hl)
 351+ 9E79 A7               and a
 352+ 9E7A CC FD 9E         call z,Incrementa_Puntero_indice_mov
 353+ 9E7D CA 3E 9E         jp z,Reinicia_el_movimiento
 354+ 9E80
 355+ 9E80 C9               ret
 356+ 9E81
 357+ 9E81              ; Subrutinas -----------------------------------------
 358+ 9E81              ; ---------- --------- --------- ---------- ----------
 359+ 9E81              ;
 360+ 9E81              ;   24/07/23
 361+ 9E81              ;
 362+ 9E81              ;   Fijamos_bucle
 363+ 9E81              ;
 364+ 9E81              ;
 365+ 9E81
 366+ 9E81              Fijamos_bucle
 367+ 9E81
 368+ 9E81 3A DB 88         ld a,(Incrementa_puntero)
 369+ 9E84 3C               inc a
 370+ 9E85 32 DC 88         ld (Incrementa_puntero_backup),a
 371+ 9E88
 372+ 9E88 CD FD 9E         call Incrementa_Puntero_indice_mov
 373+ 9E8B 2A D5 88         ld hl,(Puntero_indice_mov)
 374+ 9E8E 22 D9 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9E91 C9               ret
 376+ 9E92
 377+ 9E92              ; ---------- --------- --------- ---------- ----------
 378+ 9E92              ;
 379+ 9E92              ;   07/7/23
 380+ 9E92              ;
 381+ 9E92              ;   Inicia_Repetimos_movimiento
 382+ 9E92              ;
 383+ 9E92              ;
 384+ 9E92
 385+ 9E92              Inicia_Repetimos_movimiento
 386+ 9E92
 387+ 9E92              ; Iniciamos (Repetimos_movimiento).
 388+ 9E92
 389+ 9E92 DD 2A D7 88      ld ix,(Puntero_mov)
 390+ 9E96 DD 7E 02         ld a,(ix+2)
 391+ 9E99 32 DF 88         ld (Repetimos_movimiento),a
 392+ 9E9C
 393+ 9E9C C9               ret
 394+ 9E9D
 395+ 9E9D              ; ---------- --------- --------- ---------- ----------
 396+ 9E9D              ;
 397+ 9E9D              ;   26/6/23
 398+ 9E9D              ;
 399+ 9E9D              ;   Inicia_Puntero_mov
 400+ 9E9D              ;
 401+ 9E9D              ;
 402+ 9E9D
 403+ 9E9D 2A D5 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9EA0 5E               ld e,(hl)
 405+ 9EA1 23               inc hl
 406+ 9EA2 56               ld d,(hl)
 407+ 9EA3 EB               ex de,hl
 408+ 9EA4 22 D7 88         ld (Puntero_mov),hl
 409+ 9EA7 C9               ret
 410+ 9EA8
 411+ 9EA8              ; ---------- --------- --------- ---------- ----------
 412+ 9EA8              ;
 413+ 9EA8              ;   27/06/23
 414+ 9EA8              ;
 415+ 9EA8              ;   Aplica_movimiento.
 416+ 9EA8
 417+ 9EA8              Aplica_desplazamiento
 418+ 9EA8
 419+ 9EA8              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EA8
 421+ 9EA8 2A D7 88         ld hl, (Puntero_mov)
 422+ 9EAB
 423+ 9EAB 7E               ld a,(hl)
 424+ 9EAC E6 F0            and $f0
 425+ 9EAE C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EAF
 427+ 9EAF CB 7E            bit 7,(hl)
 428+ 9EB1 28 03            jr z,1F
 429+ 9EB3 CD D3 98         call Mov_up
 430+ 9EB6 2A D7 88     1 ld hl, (Puntero_mov)
 431+ 9EB9 CB 76            bit 6,(hl)
 432+ 9EBB 28 03            jr z,2F
 433+ 9EBD CD A2 98         call Mov_down
 434+ 9EC0 2A D7 88     2 ld hl, (Puntero_mov)
 435+ 9EC3 CB 6E            bit 5,(hl)
 436+ 9EC5 28 03            jr z,3F
 437+ 9EC7 CD 34 9A         call Mov_left
 438+ 9ECA 2A D7 88     3 ld hl, (Puntero_mov)
 439+ 9ECD CB 66            bit 4,(hl)
 440+ 9ECF C8               ret z
 441+ 9ED0 CD 16 99         call Mov_right
 442+ 9ED3 C9               ret
 443+ 9ED4
 444+ 9ED4              ; ---------- --------- --------- ---------- ----------
 445+ 9ED4              ;
 446+ 9ED4              ;   26/06/23
 447+ 9ED4              ;
 448+ 9ED4              ;   Ajusta_velocidad_desplazamiento.
 449+ 9ED4
 450+ 9ED4              Ajusta_velocidad_desplazamiento
 451+ 9ED4
 452+ 9ED4              ; 1er byte de la cadena de movimiento.
 453+ 9ED4              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9ED4
 455+ 9ED4 CD F2 9E         call Extrae_nibble_alto
 456+ 9ED7
 457+ 9ED7 32 C1 88         ld (Vel_up),a
 458+ 9EDA 79               ld a,c
 459+ 9EDB E6 0F            and $0f
 460+ 9EDD 32 C2 88         ld (Vel_down),a
 461+ 9EE0
 462+ 9EE0              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9EE0              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9EE0
 465+ 9EE0 23               inc hl
 466+ 9EE1 CD F2 9E         call Extrae_nibble_alto
 467+ 9EE4
 468+ 9EE4 32 BF 88         ld (Vel_left),a
 469+ 9EE7 79               ld a,c
 470+ 9EE8 E6 0F            and $0f
 471+ 9EEA 32 C0 88         ld (Vel_right),a
 472+ 9EED
 473+ 9EED              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9EED
 475+ 9EED 23               inc hl
 476+ 9EEE 22 D7 88         ld (Puntero_mov),hl
 477+ 9EF1 C9               ret
 478+ 9EF2
 479+ 9EF2 06 04        Extrae_nibble_alto ld b,4
 480+ 9EF4 7E               ld a,(hl)
 481+ 9EF5 4F               ld c,a
 482+ 9EF6 E6 F0            and $f0
 483+ 9EF8 CB 3F        1 srl a
 484+ 9EFA 10 FC            djnz 1B
 485+ 9EFC C9               ret
 486+ 9EFD
 487+ 9EFD              ; ---------- --------- --------- ---------- ----------
 488+ 9EFD              ;
 489+ 9EFD              ;   5/7/23
 490+ 9EFD              ;
 491+ 9EFD              ;   Incrementa_Puntero_indice_mov
 492+ 9EFD
 493+ 9EFD              Incrementa_Puntero_indice_mov
 494+ 9EFD
 495+ 9EFD 21 DB 88         ld hl,Incrementa_puntero
 496+ 9F00 34               inc (hl)
 497+ 9F01
 498+ 9F01 2A D5 88         ld hl,(Puntero_indice_mov)
 499+ 9F04 01 02 00         ld bc,2
 500+ 9F07 A7               and a
 501+ 9F08 09               add hl,bc
 502+ 9F09 22 D5 88         ld (Puntero_indice_mov),hl
 503+ 9F0C
 504+ 9F0C 7E               ld a,(hl)
 505+ 9F0D A7               and a
 506+ 9F0E
 507+ 9F0E              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F0E
 509+ 9F0E              ;    jr z,$
 510+ 9F0E
 511+ 9F0E              ;! Reinicia el Patrón de movimiento.
 512+ 9F0E
 513+ 9F0E CC 13 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F11
 515+ 9F11 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F12
 517+ 9F12 C9               ret
 518+ 9F13
 519+ 9F13
 520+ 9F13              ; ---------- --------- --------- ---------- ----------
 521+ 9F13              ;
 522+ 9F13              ;   24/07/23
 523+ 9F13              ;
 524+ 9F13              ;   Inicializa_Puntero_indice_mov
 525+ 9F13
 526+ 9F13              Inicializa_Puntero_indice_mov
 527+ 9F13
 528+ 9F13              ; Existe etiqueta de bucle principal???
 529+ 9F13
 530+ 9F13 2A D9 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F16 24               inc h
 532+ 9F17 25               dec h
 533+ 9F18 28 05            jr z,2F
 534+ 9F1A
 535+ 9F1A 22 D5 88         ld (Puntero_indice_mov),hl
 536+ 9F1D 18 14            jr 3F
 537+ 9F1F
 538+ 9F1F              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F1F
 540+ 9F1F 3A DB 88     2 ld a,(Incrementa_puntero)
 541+ 9F22 47               ld b,a
 542+ 9F23
 543+ 9F23 2A D5 88         ld hl,(Puntero_indice_mov)
 544+ 9F26 2B           1 dec hl
 545+ 9F27 2B               dec hl
 546+ 9F28 10 FC            djnz 1B
 547+ 9F2A 22 D5 88         ld (Puntero_indice_mov),hl
 548+ 9F2D
 549+ 9F2D AF               xor a
 550+ 9F2E 32 DB 88         ld (Incrementa_puntero),a
 551+ 9F31 18 06            jr 4F
 552+ 9F33
 553+ 9F33 3A DC 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F36 32 DB 88         ld (Incrementa_puntero),a
 555+ 9F39 C9           4 ret
 556+ 9F3A
 557+ 9F3A
 558+ 9F3A
# file closed: Patrones_de_mov.asm
1527  9F3A              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F3A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F3A              ;
   3+ 9F3A              ;	27/10/23
   4+ 9F3A              ;
   5+ 9F3A              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F3A
   7+ 9F3A              ;	ADC HL,SP	LD (addr),SP
   8+ 9F3A              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F3A              ;	ADD IX,SP	LD SP,nn
  10+ 9F3A              ; 	ADD IY,SP	LD SP,HL
  11+ 9F3A              ;				LD SP,IX
  12+ 9F3A              ;	DEC SP		LD SP,IY
  13+ 9F3A
  14+ 9F3A              ;	EX (SP),HL
  15+ 9F3A              ;	EX (SP),IX
  16+ 9F3A              ;	EX (SP),IY
  17+ 9F3A
  18+ 9F3A              ;	INC SP
  19+ 9F3A
  20+ 9F3A                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 F8 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 CA 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A E7 88         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 00 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A D4 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 04 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A FE 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A E7 88         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 00 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A D4 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 04 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B F8 88      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 FE 88     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B F8 88  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC FB               ei
 107+ 7FFD C9               ret
 108+ 7FFE
 109+ 7FFE              ; -----------------------------------------------------------------------------
 110+ 7FFE              ;
 111+ 7FFE              ;   21/11/23
 112+ 7FFE
 113+ 7FFE              Limpia_y_reinicia_Stack_Snapshot
 114+ 7FFE
 115+ 7FFE              ;   Limpia Album_de_fotos.
 116+ 7FFE
 117+ 7FFE 2A FE 88         ld hl,(Stack_snapshot)
 118+ 8001 7D               ld a,l
 119+ 8002 A7               and a
 120+ 8003 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8004
 122+ 8004 47               ld b,a
 123+ 8005 04               inc b
 124+ 8006
 125+ 8006 36 00        1 ld (hl),0
 126+ 8008 2D               dec l
 127+ 8009 10 FB            djnz 1B
 128+ 800B
 129+ 800B              ;   Reinicializa (Stack_snapshot).
 130+ 800B
 131+ 800B AF               xor a
 132+ 800C 32 FE 88         ld (Stack_snapshot),a
 133+ 800F
 134+ 800F C9               ret
# file closed: Guarda_foto_registros.asm
1528  8010
1529  8010              	SAVESNA "Pruebas.sna", START
1530  8010
1531  8010
1532  8010
1533  8010
# file closed: Banco_de_pruebas.asm
