# file opened: Banco_de_Pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 93 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD F8 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD 08 8D     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 9D 88     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B 93 88  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 105  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC FD 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 CA 85        	defw Caja_2
 110+ 8574 DC 85        	defw Caja_3
 111+ 8576 EE 85        	defw Caja_4
 112+ 8578 00 86        	defw Caja_5
 113+ 857A 12 86        	defw Caja_6
 114+ 857C 24 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 18 bytes !!!
 155+ 85B8
 156+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 157+ 85BA 00           	db %00000000										; (Attr).
 158+ 85BB              ;	db 0												; (Cuad_objeto).
 159+ 85BB 00           	db 0												; (Impacto).
 160+ 85BC 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 85C2 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 85C4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 85C6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 85C8 00           	db 0												; (Ctrl_0).
 165+ 85C9 00           	db 0												; (Ctrl_2).
 166+ 85CA
 167+ 85CA              ; ---------- ---------- ---------- ---------- ----------
 168+ 85CA
 169+ 85CA 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 170+ 85CC 00           	db %00000000										; (Attr).
 171+ 85CD              ;	db 0												; (Cuad_objeto).
 172+ 85CD 00           	db 0												; (Impacto).
 173+ 85CE 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 85D4 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 85D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 85D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 85DA 00           	db 0												; (Ctrl_0).
 178+ 85DB 00           	db 0												; (Ctrl_2).
 179+ 85DC
 180+ 85DC              ; ---------- ---------- ---------- ---------- ----------
 181+ 85DC
 182+ 85DC 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 183+ 85DE 00           	db %00000000										; (Attr).
 184+ 85DF              ;	db 0												; (Cuad_objeto).
 185+ 85DF 00           	db 0												; (Impacto).
 186+ 85E0 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 85E6 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 85E8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 85EA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 85EC 00           	db 0												; (Ctrl_0).
 191+ 85ED 00           	db 0												; (Ctrl_2).
 192+ 85EE
 193+ 85EE              ; ---------- ---------- ---------- ---------- ----------
 194+ 85EE
 195+ 85EE 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 196+ 85F0 00           	db %00000000										; (Attr).
 197+ 85F1              ;	db 0												; (Cuad_objeto).
 198+ 85F1 00           	db 0												; (Impacto).
 199+ 85F2 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 85F8 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 85FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 85FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 85FE 00           	db 0												; (Ctrl_0).
 204+ 85FF 00           	db 0												; (Ctrl_2).
 205+ 8600
 206+ 8600              ; ---------- ---------- ---------- ---------- ----------
 207+ 8600
 208+ 8600 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 209+ 8602 00           	db %00000000										; (Attr).
 210+ 8603              ;	db 0												; (Cuad_objeto).
 211+ 8603 00           	db 0												; (Impacto).
 212+ 8604 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 860A 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 860C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 860E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8610 00           	db 0												; (Ctrl_0).
 217+ 8611 00           	db 0												; (Ctrl_2).
 218+ 8612
 219+ 8612              ; ---------- ---------- ---------- ---------- ----------
 220+ 8612
 221+ 8612 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 222+ 8614 00           	db %00000000										; (Attr).
 223+ 8615              ;	db 0												; (Cuad_objeto).
 224+ 8615 00           	db 0												; (Impacto).
 225+ 8616 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 861C 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 861E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8620 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8622 00           	db 0												; (Ctrl_0).
 230+ 8623 00           	db 0												; (Ctrl_2).
 231+ 8624
 232+ 8624              ; ---------- ---------- ---------- ---------- ----------
 233+ 8624
 234+ 8624 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 235+ 8626 00           	db %00000000										; (Attr).
 236+ 8627              ;	db 0												; (Cuad_objeto).
 237+ 8627 00           	db 0												; (Impacto).
 238+ 8628 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 862E 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8630 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 8632 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 8634 00           	db 0												; (Ctrl_0).
 243+ 8635 00           	db 0												; (Ctrl_2).
 244+ 8636
 245+ 8636              ; -------------------------------------------------------------------------------------
 246+ 8636              ;
 247+ 8636              ;	11/1/24
 248+ 8636              ;
 249+ 8636              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 8636              ;
 251+ 8636              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 8636              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 8636              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 8636              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 8636
 256+ 8636              Indice_de_definiciones_de_entidades
 257+ 8636
 258+ 8636 3A 86        	defw Entidad_1
 259+ 8638 47 86        	defw Entidad_2
 260+ 863A
 261+ 863A              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 863A
 263+ 863A              ;	BADSAT, (Satélite malvado).
 264+ 863A
 265+ 863A 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 863D 04           	db %00000100										; (Attr).
 267+ 863E A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8640 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 8642 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 8644 01           	db 1												; (Cuad_objeto).
 271+ 8645 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 8647
 273+ 8647 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 864A 02           	db %00000010										; (Attr).
 275+ 864B A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 864D 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 864F 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8651 01           	db 1												; (Cuad_objeto).
 279+ 8652 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 8654
# file closed: Cajas_y_disparos.asm
 106  8654              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8654              ; 19/1/24
   2+ 8654
   3+ 8654              Indice_de_niveles
   4+ 8654
   5+ 8654 5C 86        	defw Nivel_1
   6+ 8656 64 86        	defw Nivel_2
   7+ 8658
   8+ 8658              ;	...
   9+ 8658              ;	...
  10+ 8658              ;	+ Niveles ...
  11+ 8658
  12+ 8658 00 00        	defw 0
  13+ 865A 00 00        	defw 0
  14+ 865C
  15+ 865C 03           Nivel_1 db 3									; Nº de entidades.
  16+ 865D 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8661 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8664
  19+ 8664 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8665 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8669 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 866D 01 02
  22+ 866F 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8673 01 02
  23+ 8675
  24+ 8675              ;---------------------------------------------------------------------------------------------------------------
  25+ 8675              ;
  26+ 8675              ;   19/1/24
  27+ 8675              ;
  28+ 8675              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 8675              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 8675              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 8675              ;	_ de la 1ª entidad del Nivel.
  32+ 8675              ;
  33+ 8675              ;	MODIFICA: HL,DE y A.
  34+ 8675              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 8675
  36+ 8675              Inicializa_Nivel
  37+ 8675
  38+ 8675 2A BC 88     	ld hl,(Puntero_indice_NIVELES)
  39+ 8678 CD C2 8B     	call Extrae_address
  40+ 867B 7E           	ld a,(hl)
  41+ 867C 32 87 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 867F 23           	inc hl
  43+ 8680 CD 8A 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 8683 22 BE 88     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 8686 CD 93 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 8689 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 868A
  48+ 868A              ; ----------------------
  49+ 868A
  50+ 868A 11 66 88     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 868D 01 04 00     	ld bc,4
  52+ 8690 ED B0        	ldir
  53+ 8692 C9           	ret
  54+ 8693
  55+ 8693 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 8694 CD A2 87         call Calcula_salto_en_BC
  57+ 8697 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 869A A7               and a
  59+ 869B ED 4A            adc hl,bc
  60+ 869D CD C2 8B         call Extrae_address
  61+ 86A0 22 72 88         ld (Puntero_indice_mov),hl
  62+ 86A3 C9               ret
  63+ 86A4
  64+ 86A4              ;---------------------------------------------------------------------------------------------------------------
  65+ 86A4              ;
  66+ 86A4              ;   5/1/24
  67+ 86A4              ;
  68+ 86A4              ;	Destruye A,BC,HL,DE
  69+ 86A4
  70+ 86A4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 86A4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 86A4
  73+ 86A4              Inicia_Entidades
  74+ 86A4
  75+ 86A4              ; Preparamos los punteros de las cajas de entidades:
  76+ 86A4
  77+ 86A4 CD 2A 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 86A7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 86A7 CD 1F 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 86AA
  81+ 86AA 2A BE 88     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 86AD
  83+ 86AD 22 BE 88     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 86B0
  85+ 86B0 CD 50 87     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 86B3
  87+ 86B3 2A BE 88     	ld hl,(Datos_de_nivel)
  88+ 86B6
  89+ 86B6              ; En este punto:
  90+ 86B6              ;
  91+ 86B6              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 86B6              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 86B6
  94+ 86B6 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 86B7
  96+ 86B7 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 86B8 CD A2 87     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 86BB
  99+ 86BB 21 36 86     	ld hl,Indice_de_definiciones_de_entidades
 100+ 86BE CD AA 87     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 86C1
 102+ 86C1 CD B4 87     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 86C4
 104+ 86C4              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 86C4
 106+ 86C4 CD 72 87     	call Busca_mov_masticados_segun_tipo
 107+ 86C7
 108+ 86C7 A7           	and a
 109+ 86C8 28 10        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 86CA
 111+ 86CA              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 86CA
 113+ 86CA              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 86CA              ;	_ de este tipo de entidad.
 115+ 86CA
 116+ 86CA CD 0A 9F     	call Situa_en_Contador_general_de_mov_masticados
 117+ 86CD
 118+ 86CD              	; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
 119+ 86CD
 120+ 86CD              	; HL apunta al bye bajo del (Contador_general_de_mov_masticados) de esta entidad.
 121+ 86CD
 122+ 86CD              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
 123+ 86CD
 124+ 86CD CD 0A 9F     	call Situa_en_Contador_general_de_mov_masticados
 125+ 86D0
 126+ 86D0              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
 127+ 86D0              ; Cargamos (Contador_de_mov_masticados) con el (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 128+ 86D0
 129+ 86D0 4E           	ld c,(hl)
 130+ 86D1 23           	inc hl
 131+ 86D2 46           	ld b,(hl) 													; BC contiene los mov_masticados totales de esta entidad.
 132+ 86D3
 133+ 86D3 69           	ld l,c
 134+ 86D4 60           	ld h,b
 135+ 86D5
 136+ 86D5 22 5D 88     	ld (Contador_de_mov_masticados),hl
 137+ 86D8
 138+ 86D8 18 06        	jr 4F
 139+ 86DA
 140+ 86DA
 141+ 86DA CD 84 8A     3 call Construye_movimientos_masticados_entidad
 142+ 86DD
 143+ 86DD              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 144+ 86DD              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 145+ 86DD              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 146+ 86DD              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 147+ 86DD              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 148+ 86DD
 149+ 86DD CD 30 87     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 150+ 86E0              ;																; _ Mov_masticados ya generados.
 151+ 86E0 CD 12 87     4 call Guarda_foto_de_mov_masticado
 152+ 86E3
 153+ 86E3              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 154+ 86E3
 155+ 86E3 2A 59 88     	ld hl,(Puntero_de_impresion)
 156+ 86E6 CD AA 9B     	call Genera_coordenadas
 157+ 86E9 CD E7 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 158+ 86EC CD 1D 87     	call Limpiamos_bandeja_DRAW
 159+ 86EF CD 29 8C     	call Incrementa_punteros_de_cajas
 160+ 86F2
 161+ 86F2              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 162+ 86F2              ; _ entidad del Nivel.
 163+ 86F2
 164+ 86F2 3A 9E 88     	ld a,(Ctrl_4)
 165+ 86F5 E6 F0        	and $f0
 166+ 86F7 32 9E 88     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 167+ 86FA
 168+ 86FA              ; Siguiente entidad del Nivel.
 169+ 86FA
 170+ 86FA 2A BE 88     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 171+ 86FD 23           	inc hl 														; _ entidad del Nivel.
 172+ 86FE
 173+ 86FE C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 174+ 86FF 10 AC        	djnz 2B
 175+ 8701
 176+ 8701 C9           	ret
 177+ 8702
 178+ 8702              ; ---------------------------------------------------------------------
 179+ 8702              ;
 180+ 8702              ;	30/01/24
 181+ 8702
 182+ 8702
 183+ 8702              Store_Restore_cajas
 184+ 8702
 185+ 8702              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 186+ 8702
 187+ 8702 2A 59 88     	ld hl,(Puntero_de_impresion)
 188+ 8705 CD AA 9B     	call Genera_coordenadas
 189+ 8708 CD E7 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 190+ 870B CD 1D 87     	call Limpiamos_bandeja_DRAW
 191+ 870E
 192+ 870E              ; 	Entidad_sospechosa. 20/4/23
 193+ 870E
 194+ 870E              ;	ld a,(Impacto)
 195+ 870E              ;	and a
 196+ 870E              ;	jr z,1F
 197+ 870E
 198+ 870E              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 199+ 870E              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 200+ 870E              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 201+ 870E              ;	adc hl,bc 											; _ "0" más adelante.
 202+ 870E              ;	ld (Entidad_sospechosa_de_colision),hl
 203+ 870E
 204+ 870E
 205+ 870E              ;1 ld hl,(Puntero_restore_caja)
 206+ 870E              ;	ld a,(hl)
 207+ 870E              ;	and a
 208+ 870E              ;	push af
 209+ 870E              ;	jr z,2F
 210+ 870E
 211+ 870E              ;	di
 212+ 870E              ;	ld de,Bandeja_DRAW
 213+ 870E              ;	ld bc,42
 214+ 870E              ;	ldir
 215+ 870E              ;	ei
 216+ 870E
 217+ 870E CD 29 8C     2 call Incrementa_punteros_de_cajas
 218+ 8711 C9           	ret
 219+ 8712
 220+ 8712
 221+ 8712              ; ---------------------------------------------------------------------
 222+ 8712              ;
 223+ 8712              ;	29/01/24
 224+ 8712
 225+ 8712 CD D9 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 226+ 8715 CD 16 71     	call Guarda_foto_registros
 227+ 8718 F3           	di
 228+ 8719              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 229+ 8719              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 230+ 8719              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 231+ 8719              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 232+ 8719
 233+ 8719 CD 28 87     	call Decrementa_Contador_de_mov_masticados
 234+ 871C C9           	ret
 235+ 871D
 236+ 871D              ; ---------------------------------------------------------------------
 237+ 871D              ;
 238+ 871D              ;	25/01/24
 239+ 871D
 240+ 871D 21 3C 88     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 241+ 8720 06 2A        	ld b,42
 242+ 8722 AF           	xor a
 243+ 8723
 244+ 8723 77           1 ld (hl),a
 245+ 8724 23           	inc hl
 246+ 8725 10 FC        	djnz 1B
 247+ 8727
 248+ 8727 C9           	ret
 249+ 8728
 250+ 8728              ; ---------------------------------------------------------------------
 251+ 8728              ;
 252+ 8728              ;	22/01/24
 253+ 8728
 254+ 8728 2A 5D 88     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 255+ 872B 2B           	dec hl
 256+ 872C 22 5D 88     	ld (Contador_de_mov_masticados),hl
 257+ 872F C9           	ret
 258+ 8730
 259+ 8730              ; ---------------------------------------------------------------------
 260+ 8730              ;
 261+ 8730              ;	22/01/24
 262+ 8730
 263+ 8730 21 9E 88     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 264+ 8733 CB 46        	bit 0,(hl)
 265+ 8735 20 0D        	jr nz,1F
 266+ 8737 CB 4E        	bit 1,(hl)
 267+ 8739 20 0C        	jr nz,2F
 268+ 873B CB 56        	bit 2,(hl)
 269+ 873D 20 0B        	jr nz,3F
 270+ 873F CB 5E        	bit 3,(hl)
 271+ 8741 20 0A        	jr nz,4F
 272+ 8743 C9           	ret
 273+ 8744
 274+ 8744 CB E6        1 set 4,(hl)
 275+ 8746 C9           	ret
 276+ 8747 CB EE        2 set 5,(hl)
 277+ 8749 C9           	ret
 278+ 874A CB F6        3 set 6,(hl)
 279+ 874C C9           	ret
 280+ 874D CB FE        4 set 7,(hl)
 281+ 874F C9           	ret
 282+ 8750
 283+ 8750              ; ---------------------------------------------------------------------
 284+ 8750              ;
 285+ 8750              ;	23/01/24
 286+ 8750              ;
 287+ 8750              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 288+ 8750              ;
 289+ 8750              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 290+ 8750              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 291+ 8750              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 292+ 8750              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 293+ 8750
 294+ 8750              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 295+ 8750
 296+ 8750 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 297+ 8751 3D           	dec a
 298+ 8752 20 06        	jr nz,1F
 299+ 8754
 300+ 8754              ; --- Tipo_1
 301+ 8754
 302+ 8754 21 9E 88     	ld hl,Ctrl_4
 303+ 8757 CB C6        	set 0,(hl)
 304+ 8759 C9           	ret
 305+ 875A
 306+ 875A 3D           1 dec a
 307+ 875B 20 06        	jr nz,2F
 308+ 875D
 309+ 875D              ; --- Tipo_2
 310+ 875D
 311+ 875D 21 9E 88     	ld hl,Ctrl_4
 312+ 8760 CB CE        	set 1,(hl)
 313+ 8762 C9           	ret
 314+ 8763
 315+ 8763 3D           2 dec a
 316+ 8764 20 06        	jr nz,3F
 317+ 8766
 318+ 8766              ; --- Tipo_3
 319+ 8766
 320+ 8766 21 9E 88     	ld hl,Ctrl_4
 321+ 8769 CB D6        	set 2,(hl)
 322+ 876B C9           	ret
 323+ 876C
 324+ 876C              ; --- Tipo_3
 325+ 876C
 326+ 876C 21 9E 88     3 ld hl,Ctrl_4
 327+ 876F CB D6        	set 2,(hl)
 328+ 8771 C9           	ret
 329+ 8772
 330+ 8772              ; ---------------------------------------------------------------------
 331+ 8772              ;
 332+ 8772              ;	22/01/24
 333+ 8772
 334+ 8772 21 9E 88     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 335+ 8775 CB 46        	bit 0,(hl)
 336+ 8777 20 0E        	jr nz,1F
 337+ 8779
 338+ 8779 CB 4E        	bit 1,(hl)
 339+ 877B 20 10        	jr nz,2F
 340+ 877D
 341+ 877D CB 56        	bit 2,(hl)
 342+ 877F 20 12        	jr nz,3F
 343+ 8781
 344+ 8781 CB 5E        	bit 3,(hl)
 345+ 8783 20 14        	jr nz,4F
 346+ 8785 18 19        	jr 6F
 347+ 8787
 348+ 8787              ; Entidad_de_Tipo_1.
 349+ 8787
 350+ 8787 CB 66        1 bit 4,(hl)
 351+ 8789 28 15        	jr z,6F
 352+ 878B 18 10        	jr 5F
 353+ 878D
 354+ 878D              ; Entidad_de_Tipo_2.
 355+ 878D
 356+ 878D CB 6E        2 bit 5,(hl)
 357+ 878F 28 0F        	jr z,6F
 358+ 8791 18 0A        	jr 5F
 359+ 8793
 360+ 8793              ; Entidad_de_Tipo_3.
 361+ 8793
 362+ 8793 CB 76        3 bit 6,(hl)
 363+ 8795 28 09        	jr z,6F
 364+ 8797 18 04        	jr 5F
 365+ 8799
 366+ 8799              ; Entidad_de_Tipo_4.
 367+ 8799
 368+ 8799 CB 7E        4 bit 7,(hl)
 369+ 879B 28 03        	jr z,6F
 370+ 879D
 371+ 879D              ; Esta entidad TIENE MOV_MASTICADOS.
 372+ 879D
 373+ 879D AF           5 xor a
 374+ 879E 3C           	inc a
 375+ 879F C9           	ret
 376+ 87A0
 377+ 87A0              ; Esta entidad NO TIENE MOV_MASTICADOS.
 378+ 87A0
 379+ 87A0 AF           6 xor a
 380+ 87A1 C9           	ret
 381+ 87A2
 382+ 87A2              ;	------------------------------------------------------------------------------------
 383+ 87A2              ;
 384+ 87A2              ;	12/01/24
 385+ 87A2              ;
 386+ 87A2              ;	INPUTS:	A contiene el (Tipo) de entidad.
 387+ 87A2              ;
 388+ 87A2              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 389+ 87A2              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 390+ 87A2
 391+ 87A2 CB 27        Calcula_salto_en_BC sla a
 392+ 87A4 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 393+ 87A6 4F           	ld c,a
 394+ 87A7 06 00        	ld b,0
 395+ 87A9 C9           	ret
 396+ 87AA
 397+ 87AA              ; ------------------------------------------------------------------
 398+ 87AA              ;
 399+ 87AA              ;	19/1/24
 400+ 87AA              ;
 401+ 87AA              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 402+ 87AA              ;	Actualiza (Datos_de_entidad) con esa dirección.
 403+ 87AA
 404+ 87AA A7           Situa_en_datos_de_definicion and a
 405+ 87AB ED 4A        	adc hl,bc
 406+ 87AD CD C2 8B     	call Extrae_address
 407+ 87B0 22 8D 88         ld (Datos_de_entidad),hl
 408+ 87B3 C9           	ret
 409+ 87B4
 410+ 87B4              ; ------------------------------------------------------------------
 411+ 87B4
 412+ 87B4              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 413+ 87B4              ; 	inc de
 414+ 87B4              ; 	inc de
 415+ 87B4              ; 	ex de,hl
 416+ 87B4              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 417+ 87B4              ; 	ret
 418+ 87B4
 419+ 87B4              ; ----------------------------------------------------------------------------------------------------------
 420+ 87B4              ;
 421+ 87B4              ;	19/1/24
 422+ 87B4              ;
 423+ 87B4              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 424+ 87B4              ;	_ de entidad.
 425+ 87B4              ;
 426+ 87B4              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 427+ 87B4              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 428+ 87B4              ;
 429+ 87B4              ;	MODIFICA: HL,DE y BC
 430+ 87B4
 431+ 87B4
 432+ 87B4              Definicion_de_entidad_a_bandeja_DRAW
 433+ 87B4
 434+ 87B4 11 3C 88     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW
 435+ 87B7
 436+ 87B7 01 03 00     	ld bc,3
 437+ 87BA ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 438+ 87BC              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 439+ 87BC 01 07 00     	ld bc,7
 440+ 87BF CD 15 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 441+ 87C2
 442+ 87C2 01 05 00     	ld bc,5
 443+ 87C5 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 444+ 87C7              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 445+ 87C7 01 04 00     	ld bc,4
 446+ 87CA CD 15 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 447+ 87CD
 448+ 87CD 01 03 00     	ld bc,3
 449+ 87D0 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 450+ 87D2              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 451+ 87D2
 452+ 87D2 01 09 00     	ld bc,9
 453+ 87D5 CD 15 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 454+ 87D8
 455+ 87D8 01 02 00     	ld bc,2
 456+ 87DB ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 457+ 87DD
 458+ 87DD 01 08 00     	ld bc,8
 459+ 87E0 CD 15 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 460+ 87E3
 461+ 87E3 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 462+ 87E5 12           	ld (de),a 									; Vuelco (Frames_explosion).
 463+ 87E6
 464+ 87E6 C9           	ret
 465+ 87E7
 466+ 87E7              ; ----------------------------------------------------------------------------------------------------------
 467+ 87E7              ;
 468+ 87E7              ;	22/01/24
 469+ 87E7              ;
 470+ 87E7              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 471+ 87E7              ;
 472+ 87E7              ;	Las cajas contienen entidades iniciadas:
 473+ 87E7              ;
 474+ 87E7              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 475+ 87E7              ;
 476+ 87E7              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 477+ 87E7              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 478+ 87E7              ;
 479+ 87E7              ;	MODIFICA: HL,DE y BC
 480+ 87E7
 481+ 87E7 21 43 88     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW+7		; HL situado en (Coordenada_X) de la bandeja DRAW.
 482+ 87EA ED 5B 81 88  	ld de,(Puntero_store_caja) 								; DE situado en el 1er .db de la correspondiente caja de entidades.
 483+ 87EE 01 02 00     	ld bc,2
 484+ 87F1 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 485+ 87F3              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 486+ 87F3 23           	inc hl
 487+ 87F4 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 488+ 87F5 12           	ld (de),a
 489+ 87F6 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 490+ 87F7
 491+ 87F7 01 0C 00     	ld bc,12
 492+ 87FA CD 1B 88     	call Situa_HL
 493+ 87FD 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 494+ 87FE 12           	ld (de),a
 495+ 87FF 13           	inc de 													; (Impacto), volcado a la caja.
 496+ 8800              ;															; DE situado ahora en (Variables_de_borrado).
 497+ 8800 23           	inc hl
 498+ 8801 01 06 00     	ld bc,6
 499+ 8804 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 500+ 8806              ; 															; DE situado ahora en (Puntero_de_impresión).
 501+ 8806 01 07 00     	ld bc,7
 502+ 8809 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 503+ 880B              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 504+ 880B              ;															; HL apunta ahora a (Columnas).
 505+ 880B 01 04 00     	ld bc,4
 506+ 880E CD 1B 88     	call Situa_HL
 507+ 8811 7E           	ld a,(hl)
 508+ 8812 12           	ld (de),a 												; Volcamos (Ctrl_2).
 509+ 8813 13           	inc de
 510+ 8814
 511+ 8814 C9           	ret
 512+ 8815
 513+ 8815              ; -------------------------------------------------------------
 514+ 8815
 515+ 8815 EB           Situa_DE ex de,hl
 516+ 8816 A7           	and a
 517+ 8817 ED 4A        	adc hl,bc
 518+ 8819 EB           	ex de,hl
 519+ 881A C9           	ret
 520+ 881B
 521+ 881B A7           Situa_HL and a
 522+ 881C ED 4A        	adc hl,bc
 523+ 881E C9           	ret
 524+ 881F
 525+ 881F              ;---------------------------------------------------------------------------------------------------------------
 526+ 881F              ;
 527+ 881F              ;	5/1/24
 528+ 881F              ;
 529+ 881F              ;	INICIALIZA (Numero_parcial_de_entidades).
 530+ 881F              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 531+ 881F              ;
 532+ 881F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 533+ 881F              ;
 534+ 881F              ;	(Numero_parcial_de_entidades)="7".
 535+ 881F              ;
 536+ 881F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 537+ 881F              ;
 538+ 881F              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 539+ 881F              ;
 540+ 881F              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 541+ 881F              ;	MODIFICA: A y B.
 542+ 881F              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 543+ 881F
 544+ 881F              Inicializa_Numero_parcial_de_entidades
 545+ 881F
 546+ 881F              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 547+ 881F
 548+ 881F 3A 87 88     	ld a,(Numero_de_entidades)
 549+ 8822 A7           	and a
 550+ 8823
 551+ 8823              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 552+ 8823              ;	jr z,$
 553+ 8823              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 554+ 8823
 555+ 8823 20 03        	jr nz,3F
 556+ 8825
 557+ 8825              ; ---------- ---------- ----------
 558+ 8825
 559+ 8825              ;! RESET para pruebas. Omitir esta línea en modo normal.
 560+ 8825              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 561+ 8825
 562+ 8825 CD 75 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 563+ 8828
 564+ 8828              ; ---------- ---------- ----------
 565+ 8828
 566+ 8828 3A 87 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 567+ 882B FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 568+ 882D 38 08        	jr c,1F
 569+ 882F
 570+ 882F              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 571+ 882F              ; Actualizamos variables.
 572+ 882F
 573+ 882F 3E 07        	ld a,7
 574+ 8831 32 88 88     	ld (Numero_parcial_de_entidades),a
 575+ 8834 47           	ld b,a
 576+ 8835 18 04        	jr 2F
 577+ 8837
 578+ 8837              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 579+ 8837              ; (Numero_de_entidades)="0".
 580+ 8837
 581+ 8837 32 88 88     1 ld (Numero_parcial_de_entidades),a
 582+ 883A 47           	ld b,a
 583+ 883B C9           2 ret
# file closed: Niveles.asm
 107  883C
 108  883C              ; ******************************************************************************************************************************************************************************************
 109  883C              ; Constantes.
 110  883C              ; ******************************************************************************************************************************************************************************************
 111  883C              ;
 112  883C              ; 25/12/23
 113  883C
 114  883C              ;
 115  883C              ; Constantes.
 116  883C              ;
 117  883C
 118  883C              Sprite_vacio equ $eae0
 119  883C              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  883C              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  883C              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  883C              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  883C
 124  883C              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  883C              ;														;
 126  883C              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  883C
 128  883C              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  883C              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  883C              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  883C              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  883C              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  883C
 134  883C              ;														; 55 Bytes.
 135  883C              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 136  883C              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 137  883C
 138  883C              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  883C
 140  883C              ; ******************************************************************************************************************************************************************************************
 141  883C              ; Variables.
 142  883C              ; ******************************************************************************************************************************************************************************************
 143  883C              ;
 144  883C              ; 18/01/24
 145  883C              ;
 146  883C              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  883C              ;
 148  883C
 149  883C              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  883C
 151  883C 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  883D              ;															- Patrón de movimiento.
 153  883D              ;															- Aspecto
 154  883D 00           Filas db 0												; Filas. [DRAW]
 155  883E 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  883F 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8841 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8843 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8844 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8845
 161  8845              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8845
 163  8845 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8846              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8846              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8846 00           Attr db 0												; Atributos de la entidad:
 167  8847
 168  8847              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8847              ;
 170  8847              ;	COLORES: 0 ..... NEGRO
 171  8847              ;    		 1 ..... AZUL
 172  8847              ; 			 2 ..... ROJO
 173  8847              ;			 3 ..... MAGENTA
 174  8847              ; 			 4 ..... VERDE
 175  8847              ; 			 5 ..... CIAN
 176  8847              ;			 6 ..... AMARILLO
 177  8847              ; 			 7 ..... BLANCO
 178  8847
 179  8847 00 00        Indice_Sprite_der defw 0
 180  8849 00 00        Indice_Sprite_izq defw 0
 181  884B 00 00        Puntero_DESPLZ_der defw 0
 182  884D 00 00        Puntero_DESPLZ_izq defw 0
 183  884F
 184  884F 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8851 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8852
 187  8852              ; Variables de objeto. (Características).
 188  8852
 189  8852 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8853              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8853              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8853 00 00 00...  Variables_de_borrado ds 6
 193  8859
 194  8859 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  885B              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  885B
 197  885B 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  885D
 199  885D              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  885D              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  885D
 202  885D 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  885F              ;														; _palabras que componen el "movimiento_masticado".
 204  885F
 205  885F              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  885F
 207  885F 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8860              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8860              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8860              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8860              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8860              ;
 213  8860              ; 														DESCRIPCIÖN:
 214  8860              ;
 215  8860              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8860              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8860              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8860              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8860              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8860              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8860              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8860              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8860              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8860              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8860              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8860              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8860              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8860              ;
 229  8860              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8860              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8860              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8860
 233  8860              ; Variables de funcionamiento. [DRAW].
 234  8860
 235  8860 00           Columnas db 0
 236  8861 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8863              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8863 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8864
 240  8864              ; variables de control general.
 241  8864
 242  8864 00           Ctrl_2 db 0
 243  8865              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8865              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8865              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8865              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8865              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8865              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8865              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8865              ;
 251  8865              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8865              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8865              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8865              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8865              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8865              ;														BIT 4, ???
 257  8865              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8865
 259  8865 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  8866
 261  8866              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  8866
 263  8866              ;					         		---------;      ;---------
 264  8866
 265  8866              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  8866
 267  8866              Perfiles_de_velocidad
 268  8866
 269  8866 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  8867 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  8868 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  8869 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  886A
 274  886A              ; Contadores de 16 bits.
 275  886A
 276  886A 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  886C 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  886E 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8870 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8872
 281  8872              ; Movimiento. ------------------------------------------------------------------------------------------------------
 282  8872
 283  8872 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 284  8874 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 285  8876 00 00        Puntero_indice_mov_bucle defw 0							;
 286  8878              ;
 287  8878              ;
 288  8878 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 289  8879              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 290  8879              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 291  8879 00           Incrementa_puntero_backup db 0
 292  887A 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 293  887B              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 294  887B 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 295  887C 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 296  887D 00           Cola_de_desplazamiento db 0								; Este byte indica:
 297  887E              ;
 298  887E              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 299  887E              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 300  887E              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 301  887E              ;
 302  887E              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 303  887E              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 304  887E              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 305  887E              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 306  887E              ;
 307  887E              ;														;	"$ff" ..... Bucle infinito de repetición.
 308  887E              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 309  887E              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 310  887E              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 311  887E
 312  887E 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 313  887F
 314  887F              ;														DESCRIPCIÓN:
 315  887F              ;
 316  887F              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 317  887F              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 318  887F              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 319  887F              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 320  887F              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 321  887F              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 322  887F
 323  887F              ;														BIT 3, Recarga de nueva oleada.
 324  887F              ;														BIT 4, Recarga de nueva oleada.
 325  887F              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 326  887F              ;														BIT 6, **** Frame completo.
 327  887F              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 328  887F
 329  887F 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 330  8881              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 331  8881              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 332  8881              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 333  8881
 334  8881              ; Gestión de ENTIDADES y CAJAS.
 335  8881
 336  8881 00 00        Puntero_store_caja defw 0
 337  8883 00 00        Puntero_restore_caja defw 0
 338  8885 00 00        Indice_restore_caja defw 0
 339  8887 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 340  8888 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 341  8889 00           Entidades_en_curso db 0									; ..... ..... .....
 342  888A 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 343  888B              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 344  888B              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 345  888B              ;														; _ (Numero_de_malotes)="0".
 346  888B 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 347  888D 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 348  888F              ;														; _ puntero (Indice_entidades).
 349  888F
 350  888F              ;---------------------------------------------------------------------------------------------------------------
 351  888F              ;
 352  888F              ;	11/01/24
 353  888F              ;
 354  888F              ;	Álbumes.
 355  888F
 356  888F 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 357  8891              ;														; _variable para almacenar lo posición del puntero_
 358  8891              ; 														; _de pila, SP.
 359  8891 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 360  8893              ;														; La utiliza la rutina [Extrae_foto_registros].
 361  8893 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 362  8895 00 70        Stack_snapshot defw Album_de_fotos
 363  8897 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 364  8899
 365  8899              ;End_Snapshot defw Album_de_fotos
 366  8899              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 367  8899 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 368  889B              ;														; _el snapshot de los registros del siguiente disparo.
 369  889B              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 370  889B AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 371  889D
 372  889D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 373  889E              ;
 374  889E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 375  889E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 376  889E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 377  889E
 378  889E 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 379  889F              ;
 380  889F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 381  889F              ;
 382  889F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383  889F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384  889F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385  889F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386  889F              ;
 387  889F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 388  889F              ;															_ masticados ya generados.
 389  889F              ;
 390  889F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 391  889F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 392  889F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 393  889F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 394  889F
 395  889F
 396  889F              ; Gestión de Disparos.
 397  889F
 398  889F 00           Numero_de_disparotes db 0
 399  88A0 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 400  88A2 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 401  88A4 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 402  88A5              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 403  88A5              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 404  88A5 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 405  88A7              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 406  88A7              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 407  88A7              ;														; _produzca colisión.
 408  88A7 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 409  88A9              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 410  88A9 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  88AC              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 412  88AC 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 413  88AF              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 414  88AF 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 415  88B0
 416  88B0              ;---------------------------------------------------------------------------------------------------------------
 417  88B0
 418  88B0              ; Relojes y temporizaciones.
 419  88B0
 420  88B0 00           Contador_de_frames db 0
 421  88B1 00           Contador_de_frames_2 db 0
 422  88B2
 423  88B2 04           Clock_explosion db 4
 424  88B3 14           Clock_Entidades_en_curso db 20
 425  88B4 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 426  88B5              ;														; Repite la oleada de entidades.
 427  88B5 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 428  88B6 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 429  88B7 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 430  88B8
 431  88B8 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 432  88B9 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 433  88BA 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 434  88BB
 435  88BB              ;---------------------------------------------------------------------------------------------------------------
 436  88BB
 437  88BB              ; Gestión de NIVELES.
 438  88BB
 439  88BB 00           Nivel db 0												; Nivel actual del juego.
 440  88BC 00 00        Puntero_indice_NIVELES defw 0
 441  88BE 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 442  88C0              ; 														; _ que definen el NIVEL.
 443  88C0              ; Y todo comienza aquí .....
 444  88C0              ;
 445  88C0              ; 	INICIO  *************************************************************************************************************************************************************************
 446  88C0              ;
 447  88C0              ;	5/1/24
 448  88C0
 449  88C0              START
 450  88C0
 451  88C0 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 452  88C3 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 453  88C5 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 454  88C7 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 455  88C9 F3           	DI
 456  88CA
 457  88CA 3E 07        	ld a,%00000111
 458  88CC CD 1C 98     	call Cls
 459  88CF CD 67 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  88D2
 461  88D2              ; INICIALIZACIÓN.
 462  88D2
 463  88D2              ;	Inicializa 1er Nivel.
 464  88D2
 465  88D2 21 54 86     	ld hl,Indice_de_niveles
 466  88D5 22 BC 88     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 467  88D8 CD 75 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 468  88DB              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 469  88DB              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 470  88DB              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 471  88DB
 472  88DB              ;	Provisional, (para desarrollo).
 473  88DB
 474  88DB              	;-
 475  88DB              ;	ld hl,Numero_parcial_de_entidades
 476  88DB              ;	ld b,(hl)
 477  88DB              ;	inc b
 478  88DB              ;	dec b
 479  88DB              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 480  88DB
 481  88DB CD A4 86     4 call Inicia_Entidades
 482  88DE
 483  88DE CD 2A 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 484  88E1              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 485  88E1
 486  88E1              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 487  88E1              ; (Esto se dá cuando se inicia una nueva oleada).
 488  88E1
 489  88E1              ;	ld a,(Ctrl_1)
 490  88E1              ;	bit 3,a
 491  88E1              ;	jr nz,5F											; Loop
 492  88E1
 493  88E1              ; 	INICIA AMADEUS !!!!!
 494  88E1
 495  88E1              ;3 call Restore_Amadeus
 496  88E1              ;	call Inicia_Puntero_objeto
 497  88E1              ;	call Draw
 498  88E1
 499  88E1              ;	call Guarda_movimiento_masticado	;! Provisional
 500  88E1
 501  88E1              ;	call Guarda_foto_registros
 502  88E1              ;	call Guarda_datos_de_borrado_Amadeus
 503  88E1
 504  88E1              ;	ld de,Amadeus_db
 505  88E1              ;	call Store_Amadeus
 506  88E1
 507  88E1              ; 	INICIA DISPAROS !!!!!
 508  88E1
 509  88E1              ;	call Inicia_Puntero_Disparo_Entidades
 510  88E1              ;	call Inicia_Puntero_Disparo_Amadeus
 511  88E1
 512  88E1              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 513  88E1
 514  88E1              ;5 call Inicia_punteros_de_cajas
 515  88E1              ;	call Restore_entidad
 516  88E1
 517  88E1 3A 7E 88     	ld a,(Ctrl_1)
 518  88E4 CB 5F        	bit 3,a
 519  88E6 28 07        	jr z,6F
 520  88E8
 521  88E8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 522  88E8
 523  88E8 21 7E 88     	ld hl,Ctrl_1
 524  88EB CB 9E        	res 3,(hl)
 525  88ED 18 07        	jr Main
 526  88EF
 527  88EF              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 528  88EF
 529  88EF 21 9D 88     6 ld hl,Ctrl_3
 530  88F2 CB C6        	set 0,(hl)											; Frame completo.
 531  88F4 FB           	ei
 532  88F5 76           	halt
 533  88F6
 534  88F6              ; ------------------------------------
 535  88F6
 536  88F6              Main
 537  88F6              ;
 538  88F6              ;	11/12/23
 539  88F6
 540  88F6              ; Aparece nueva entidad ???
 541  88F6
 542  88F6              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 543  88F6              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 544  88F6              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 545  88F6              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 546  88F6              ;														; _un 2º bloque.
 547  88F6
 548  88F6              ;	ld a,1
 549  88F6              ;	out ($fe),a
 550  88F6
 551  88F6 3A B3 88     	ld a,(Clock_Entidades_en_curso)
 552  88F9 47           	ld b,a
 553  88FA 3A B0 88     	ld a,(Contador_de_frames)
 554  88FD B8           	cp b
 555  88FE 20 18        	jr nz,13F
 556  8900
 557  8900              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 558  8900              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 559  8900
 560  8900 3A 88 88     21 ld a,(Numero_parcial_de_entidades)
 561  8903 47           	ld b,a
 562  8904 3A 89 88     	ld a,(Entidades_en_curso)
 563  8907 B8           	cp b
 564  8908 28 0E        	jr z,13F
 565  890A 30 0C        	jr nc,13F
 566  890C
 567  890C 3C           	inc a
 568  890D 32 89 88     	ld (Entidades_en_curso),a
 569  8910
 570  8910              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 571  8910
 572  8910 3A B3 88     	ld a,(Clock_Entidades_en_curso)
 573  8913              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 574  8913              ;! _ IMPREDECIBLE !!!!
 575  8913 C6 64        	add 100
 576  8915 32 B3 88     	ld (Clock_Entidades_en_curso),a
 577  8918
 578  8918              ; -------------------------------------------------------------------------------------------------------------
 579  8918
 580  8918              ; Habilita disparos.
 581  8918
 582  8918              13
 583  8918
 584  8918              ;	ld hl,Disparo_Amadeus
 585  8918              ;	ld de,CLOCK_repone_disparo_Amadeus
 586  8918              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 587  8918
 588  8918              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 589  8918              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 590  8918              ;	call Habilita_disparos
 591  8918
 592  8918              ; COLISIONES.
 593  8918
 594  8918              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 595  8918
 596  8918              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 597  8918              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 598  8918              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 599  8918
 600  8918              ;	xor a
 601  8918              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 602  8918
 603  8918              ;	call Inicia_punteros_de_cajas
 604  8918              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 605  8918              ; 														; _ en DRAW.
 606  8918
 607  8918              ;	ld a,(Filas)
 608  8918              ;	and a
 609  8918              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 610  8918              ;	call Incrementa_punteros_de_cajas
 611  8918              ;	jr 12B
 612  8918
 613  8918              ; ---------------------------------------------------------------------------------------
 614  8918
 615  8918 3A 88 88     10 ld a,(Numero_parcial_de_entidades)
 616  891B 47               ld b,a
 617  891C A7           	and a
 618  891D 20 14        	jr nz,11F
 619  891F
 620  891F 21 7E 88     	ld hl,Ctrl_1
 621  8922 CB 66        	bit 4,(hl)
 622  8924 C2 C6 89     	jp nz,16F
 623  8927
 624  8927              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 625  8927
 626  8927 21 7E 88     	ld hl,Ctrl_1
 627  892A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 628  892C
 629  892C 3A B0 88     	ld a,(Contador_de_frames)
 630  892F 3C           	inc a
 631  8930 32 B4 88     	ld (Activa_recarga_cajas),a
 632  8933
 633  8933              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 634  8933
 635  8933 3A 89 88     11 ld a,(Entidades_en_curso)
 636  8936 A7           	and a
 637  8937 CA C6 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 638  893A 47           	ld b,a												; No hay entidades que gestionar.
 639  893B
 640  893B              ; ( Código que ejecutamos con cada entidad: ).
 641  893B
 642  893B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 643  893B
 644  893B C5           15 push bc 												; Nº de entidades en curso.
 645  893C
 646  893C CD FD 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 647  893F
 648  893F              ; Existe "Entidad_guía" ???.
 649  893F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 650  893F
 651  893F 3A 9D 88     	ld a,(Ctrl_3)
 652  8942 CB 4F        	bit 1,a
 653  8944 20 11        	jr nz,22F
 654  8946
 655  8946              ; Almacén de "Movimientos_masticados" lleno ???
 656  8946              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 657  8946              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 658  8946
 659  8946 3A 9D 88     	ld a,(Ctrl_3)
 660  8949 CB 5F        	bit 3,a
 661  894B 20 0A        	jr nz,22F
 662  894D
 663  894D              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 664  894D
 665  894D 21 64 88     	ld hl,Ctrl_2
 666  8950 CB EE        	set 5,(hl)
 667  8952 21 9D 88     	ld hl,Ctrl_3
 668  8955 CB CE        	set 1,(hl)
 669  8957
 670  8957              ; Impacto ???
 671  8957
 672  8957 3A 52 88     22 ld a,(Impacto)
 673  895A A7           	and a
 674  895B 28 31        	jr z,8F
 675  895D
 676  895D              ; Hay Impacto en esta entidad.
 677  895D
 678  895D 21 B2 88     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 679  8960 35           	dec (hl)
 680  8961 C2 B6 89     	jp nz,17F
 681  8964
 682  8964              ;! Velocidad de la animación de la explosión.
 683  8964
 684  8964 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 685  8966              ;														; _,(velocidad de la explosión).
 686  8966              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 687  8966
 688  8966 CD DB 8C     	call Repone_datos_de_borrado
 689  8969 CD 68 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 690  896C
 691  896C              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 692  896C
 693  896C 3A 64 88     	ld a,(Ctrl_2)
 694  896F CB 4F        	bit 1,a
 695  8971 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 696  8973
 697  8973              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 698  8973
 699  8973 3A 45 88     	ld a,(CTRL_DESPLZ)
 700  8976 A7           	and a
 701  8977 20 08        	jr nz,18F
 702  8979
 703  8979 21 84 84     	ld hl,Indice_Explosion_2x2-2
 704  897C 22 4B 88     	ld (Puntero_DESPLZ_der),hl
 705  897F 18 06        	jr 19F
 706  8981
 707  8981 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 708  8984 22 4B 88     	ld (Puntero_DESPLZ_der),hl
 709  8987
 710  8987 21 64 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 711  898A CB CE        	set 1,(hl)
 712  898C 18 22        	jr 7F
 713  898E
 714  898E              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 715  898E              ; _con las coordenadas de la entidad almacenada en DRAW.
 716  898E
 717  898E 3A 7E 88     8 ld a,(Ctrl_1)
 718  8991 CB 57        	bit 2,a
 719  8993 28 1B        	jr z,7F
 720  8995
 721  8995 2A A7 88     	ld hl,(Coordenadas_disparo_certero)
 722  8998 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 723  8999              ;														; E contiene la coordenada_X del disparo.
 724  8999 2A 43 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 725  899C              ;														; H FILA, (Coordenada_y de la entidad).
 726  899C A7           	and a
 727  899D ED 52        	sbc hl,de
 728  899F
 729  899F CD 1F 91     	call Determina_resultado_comparativa
 730  89A2
 731  89A2 78           	ld a,b
 732  89A3 A7           	and a
 733  89A4 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 734  89A6
 735  89A6              ; ----- ----- -----
 736  89A6
 737  89A6 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 738  89A8 32 52 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 739  89AB
 740  89AB 21 7E 88     	ld hl,Ctrl_1
 741  89AE CB 96        	res 2,(hl)
 742  89B0
 743  89B0 CD 17 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 744  89B3
 745  89B3              ;	ld a,(Ctrl_0)
 746  89B3              ;	bit 4,a
 747  89B3              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 748  89B3
 749  89B3              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 750  89B3              ; [[[
 751  89B3              ;	call Detecta_disparo_entidad
 752  89B3              ; ]]]
 753  89B3
 754  89B3 CD 12 87     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 755  89B6
 756  89B6              ;	ld hl,Ctrl_0
 757  89B6              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 758  89B6
 759  89B6 CD 02 87     17 call Store_Restore_cajas
 760  89B9
 761  89B9 C1           	pop bc
 762  89BA
 763  89BA 05           	dec b
 764  89BB C2 3B 89     	jp nz,15B
 765  89BE
 766  89BE CD 2A 8B     	call Inicia_punteros_de_cajas
 767  89C1
 768  89C1              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 769  89C1              ; Hemos gestionado todas las unidades.
 770  89C1              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 771  89C1
 772  89C1 21 7E 88     	ld hl,Ctrl_1
 773  89C4 CB 96        	res 2,(hl)
 774  89C6
 775  89C6 21 9D 88     16 ld hl,Ctrl_3
 776  89C9 CB C6        	set 0,(hl)											; Frame completo.
 777  89CB
 778  89CB AF           	xor a
 779  89CC D3 FE        	out ($fe),a
 780  89CE
 781  89CE FB           	ei
 782  89CF 76           	halt
 783  89D0
 784  89D0              ; ----------------------------------------
 785  89D0
 786  89D0 3A 7E 88     	ld a,(Ctrl_1) 										; Existe Loop?
 787  89D3 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 788  89D5 CA F6 88     	jp z,Main
 789  89D8
 790  89D8              ; RECARGA DE NUEVA OLEADA.
 791  89D8
 792  89D8 3A B0 88     	ld a,(Contador_de_frames)
 793  89DB 47           	ld b,a
 794  89DC 3A B4 88     	ld a,(Activa_recarga_cajas)
 795  89DF B8           	cp b
 796  89E0 28 08        	jr z,20F
 797  89E2
 798  89E2 21 7E 88     	ld hl,Ctrl_1
 799  89E5 CB E6        	set 4,(hl)
 800  89E7 C3 F6 88     	jp Main
 801  89EA
 802  89EA 21 7E 88     20 ld hl,Ctrl_1
 803  89ED CB A6        	res 4,(hl)
 804  89EF
 805  89EF 3A B0 88     	ld a,(Contador_de_frames)
 806  89F2
 807  89F2              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 808  89F2              ;! _ IMPREDECIBLE !!!!
 809  89F2
 810  89F2 C6 0A        	add 10
 811  89F4 32 B3 88     	ld (Clock_Entidades_en_curso),a
 812  89F7
 813  89F7 C3 DB 88     	jp 4B
 814  89FA
 815  89FA C9           	ret
 816  89FB
 817  89FB              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 818  89FB              ;
 819  89FB              ;	16/11/23
 820  89FB
 821  89FB              Gestiona_Amadeus
 822  89FB
 823  89FB              ;! Activa/desactiva impacto con Amadeus.
 824  89FB
 825  89FB              ;	ld a,(Impacto)
 826  89FB              ;	and a
 827  89FB              ;	jr nz,2F
 828  89FB
 829  89FB CD 74 8A     	call Mov_Amadeus
 830  89FE
 831  89FE 3A 5F 88     2 ld a,(Ctrl_0)
 832  8A01 CB 67        	bit 4,a
 833  8A03 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 834  8A05
 835  8A05 CD EF 8A     	call Guarda_foto_entidad_a_pintar
 836  8A08 CD BB 8C     	call Guarda_datos_de_borrado_Amadeus
 837  8A0B
 838  8A0B 21 5F 88     1 ld hl,Ctrl_0
 839  8A0E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 840  8A10
 841  8A10 CD AA 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 842  8A13
 843  8A13              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 844  8A13
 845  8A13 CD AA 8B     	call Calcula_numero_de_disparotes
 846  8A16
 847  8A16 C9           	ret
 848  8A17
 849  8A17              ; --------------------------------------------------------------------------------------------------------------
 850  8A17              ;
 851  8A17              ;	15/12/23
 852  8A17
 853  8A17              Mov_obj
 854  8A17
 855  8A17 3A 64 88     	ld a,(Ctrl_2)
 856  8A1A CB 4F        	bit 1,a
 857  8A1C 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 858  8A1E
 859  8A1E              ; Explosión:
 860  8A1E
 861  8A1E 3A 65 88     	ld a,(Frames_explosion)
 862  8A21 A7           	and a
 863  8A22 20 1D        	jr nz,4F
 864  8A24
 865  8A24              ;!  Una alimaña menos!!!!!!!!!1
 866  8A24
 867  8A24              ; Se trataba de una Entidad_guía ???
 868  8A24
 869  8A24 3A 64 88     	ld a,(Ctrl_2)
 870  8A27 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 871  8A29 28 05        	jr z,5F
 872  8A2B
 873  8A2B 21 9D 88     	ld hl,Ctrl_3
 874  8A2E CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 875  8A30
 876  8A30              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 877  8A30              ;!! _generado puede ser distinto, (aletoriedad).
 878  8A30
 879  8A30 CD 59 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 880  8A33 21 88 88     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 881  8A36 35           	dec (hl)
 882  8A37 21 89 88     	ld hl,Entidades_en_curso
 883  8A3A 35           	dec (hl)
 884  8A3B 21 87 88     	ld hl,Numero_de_entidades
 885  8A3E 35           	dec (hl)
 886  8A3F 18 32        	jr 3F
 887  8A41
 888  8A41              ; -----
 889  8A41
 890  8A41              ;	`Movemos´ la explosión.
 891  8A41
 892  8A41 2A 4B 88     4 ld hl,(Puntero_DESPLZ_der)
 893  8A44 23           	inc hl
 894  8A45 23           	inc hl
 895  8A46 22 4B 88     	ld (Puntero_DESPLZ_der),hl
 896  8A49 CD C2 8B     	call Extrae_address
 897  8A4C 22 41 88     	ld (Puntero_objeto),hl
 898  8A4F
 899  8A4F 21 65 88     	ld hl,Frames_explosion
 900  8A52 35           	dec (hl)
 901  8A53
 902  8A53 21 5F 88     	ld hl,Ctrl_0
 903  8A56 CB E6        	set 4,(hl)
 904  8A58
 905  8A58 18 19        	jr 3F
 906  8A5A
 907  8A5A              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 908  8A5A
 909  8A5A AF           2 xor a
 910  8A5B 32 5F 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 911  8A5E
 912  8A5E              ; Movemos Entidades malignas.
 913  8A5E              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 914  8A5E
 915  8A5E              ;	ld a,(Ctrl_2)
 916  8A5E              ;	bit 5,a
 917  8A5E              ;	jr nz,8F
 918  8A5E
 919  8A5E              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 920  8A5E              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 921  8A5E              ;	jr 7F
 922  8A5E
 923  8A5E              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 924  8A5E
 925  8A5E              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 926  8A5E              ;	bit 4,a
 927  8A5E              ;	ret z
 928  8A5E
 929  8A5E              ; Ha habido desplazamiento de la entidad maligna.
 930  8A5E              ; Ha llegado a zona de AMADEUS ???
 931  8A5E
 932  8A5E 3A 44 88     7 ld a,(Coordenada_y)
 933  8A61 FE 14        	cp $14
 934  8A63 38 08        	jr c,1F
 935  8A65
 936  8A65              ; ---------
 937  8A65
 938  8A65              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 939  8A65              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 940  8A65
 941  8A65 F3           	di
 942  8A66 CD CF 8E     	call Genera_coordenadas_X
 943  8A69 CD 0B 8F     	call Compara_coordenadas_X
 944  8A6C FB           	ei
 945  8A6D
 946  8A6D              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 947  8A6D
 948  8A6D              ; ---------
 949  8A6D
 950  8A6D              1
 951  8A6D              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 952  8A6D CD DB 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 953  8A70 CD 68 8B     	call Limpia_Variables_de_borrado
 954  8A73
 955  8A73 C9           3 ret
 956  8A74
 957  8A74              ; --------------------------------------------------------------------------------------------------------------
 958  8A74              ;
 959  8A74              ;	29/1/23
 960  8A74
 961  8A74              Mov_Amadeus
 962  8A74
 963  8A74              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 964  8A74
 965  8A74 CD D4 98     	call Mov_right
 966  8A77
 967  8A77 3A 5F 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 968  8A7A CB 67        	bit 4,a
 969  8A7C C8           	ret z
 970  8A7D
 971  8A7D              ; ---------
 972  8A7D
 973  8A7D              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 974  8A7D CD CB 8C     	call Repone_datos_de_borrado_Amadeus
 975  8A80 CD 68 8B     	call Limpia_Variables_de_borrado
 976  8A83
 977  8A83 C9           	ret
 978  8A84
 979  8A84              ; -----------------------------------------------------------------------------------
 980  8A84              ;
 981  8A84              ;	20/01/24
 982  8A84              ;
 983  8A84              ;
 984  8A84
 985  8A84              Construye_movimientos_masticados_entidad
 986  8A84
 987  8A84 2A 5B 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 988  8A87 E5           	push hl
 989  8A88
 990  8A88 CD CC 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 991  8A8B              ;															; _ el (Contador_de_mov_masticados).
 992  8A8B CD C8 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 993  8A8E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 994  8A8E CD 30 98     	call Recompone_posicion_inicio
 995  8A91
 996  8A91 CD 06 92     1 call Draw
 997  8A94 CD B0 8A     	call Guarda_movimiento_masticado
 998  8A97 CD 99 9D     	call Movimiento
 999  8A9A
1000  8A9A 3A 9D 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1001  8A9D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1002  8A9F 28 F0        	jr z,1B
1003  8AA1
1004  8AA1              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1005  8AA1              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1006  8AA1
1007  8AA1 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1008  8AA2 22 5B 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1009  8AA5
1010  8AA5
1011  8AA5              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1012  8AA5
1013  8AA5 CD 0A 9F     	call Situa_en_Contador_general_de_mov_masticados
1014  8AA8
1015  8AA8              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1016  8AA8              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1017  8AA8
1018  8AA8 ED 4B 5D 88  	ld bc,(Contador_de_mov_masticados)
1019  8AAC 71           	ld (hl),c
1020  8AAD 23           	inc hl
1021  8AAE 70           	ld (hl),b
1022  8AAF
1023  8AAF C9           	ret
1024  8AB0
1025  8AB0              ; -----------------------------------------------------------------------------------
1026  8AB0              ;
1027  8AB0              ;	28/12/23
1028  8AB0              ;
1029  8AB0              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1030  8AB0              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1031  8AB0
1032  8AB0              Guarda_movimiento_masticado
1033  8AB0
1034  8AB0 ED 73 8F 88  	ld (Stack),sp
1035  8AB4 ED 7B 5B 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1036  8AB8
1037  8AB8 E5           	push hl
1038  8AB9 DD E5            push ix
1039  8ABB FD E5            push iy
1040  8ABD
1041  8ABD ED 7B 8F 88      ld sp,(Stack)
1042  8AC1
1043  8AC1              ;    push hl
1044  8AC1
1045  8AC1 2A 5D 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1046  8AC4 23           	inc hl
1047  8AC5 22 5D 88     	ld (Contador_de_mov_masticados),hl
1048  8AC8
1049  8AC8              ;	pop hl
1050  8AC8
1051  8AC8 CD CC 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1052  8ACB              ;															; _ el (Contador_de_mov_masticados).
1053  8ACB C9               ret
1054  8ACC
1055  8ACC              ; --------------------------------------------------------------------------------------------------------------
1056  8ACC              ;
1057  8ACC              ;	12/1/24
1058  8ACC              ;
1059  8ACC              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1060  8ACC
1061  8ACC              Actualiza_Puntero_de_almacen_de_mov_masticados
1062  8ACC
1063  8ACC              ;	push hl
1064  8ACC              ;	push bc
1065  8ACC
1066  8ACC 2A 5B 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1067  8ACF 01 06 00     	ld bc,6
1068  8AD2 A7           	and a
1069  8AD3 ED 4A        	adc hl,bc
1070  8AD5 22 5B 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1071  8AD8
1072  8AD8              ;	pop bc
1073  8AD8              ;	pop hl
1074  8AD8
1075  8AD8 C9           	ret
1076  8AD9
1077  8AD9              ; --------------------------------------------------------------------------------------------------------------
1078  8AD9              ;
1079  8AD9              ;	15/01/24
1080  8AD9              ;
1081  8AD9              ;	Cargamos los registros_
1082  8AD9              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1083  8AD9              ;
1084  8AD9              ;	HL contiene la dirección de la rutina de impresión.
1085  8AD9              ;	IX contiene el puntero de impresión.
1086  8AD9              ;	IY contiene (Puntero_objeto).
1087  8AD9
1088  8AD9
1089  8AD9 ED 73 8F 88  Cargamos_registros_con_mov_masticado ld (Stack),sp
1090  8ADD ED 7B 5B 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1091  8AE1
1092  8AE1 FD E1        	pop iy
1093  8AE3 DD E1        	pop ix
1094  8AE5 E1           	pop hl
1095  8AE6
1096  8AE6 ED 73 5B 88  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1097  8AEA
1098  8AEA ED 7B 8F 88  	ld sp,(Stack)
1099  8AEE
1100  8AEE C9           	ret
1101  8AEF
1102  8AEF              ; --------------------------------------------------------------------------------------------------------------
1103  8AEF              ;
1104  8AEF              ;	28/12/23
1105  8AEF              ;
1106  8AEF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1107  8AEF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1108  8AEF
1109  8AEF              Guarda_foto_entidad_a_pintar
1110  8AEF
1111  8AEF 3A 5F 88     	ld a,(Ctrl_0)
1112  8AF2 CB 77        	bit 6,a
1113  8AF4 28 04        	jr z,5F
1114  8AF6
1115  8AF6              ;	Guarda la foto de Amadeus.
1116  8AF6
1117  8AF6              ;	call Draw
1118  8AF6              ;	call Guarda_movimiento_masticado	;! Provisional
1119  8AF6 CD 16 71     	call Guarda_foto_registros
1120  8AF9 C9           	ret
1121  8AFA
1122  8AFA              ; ENTIDADES!
1123  8AFA              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1124  8AFA
1125  8AFA 3A 9D 88     5 ld a,(Ctrl_3)
1126  8AFD CB 5F        	bit 3,a
1127  8AFF 28 01        	jr z,1F
1128  8B01
1129  8B01              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1130  8B01
1131  8B01              4
1132  8B01              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1133  8B01 C9           	ret
1134  8B02
1135  8B02              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1136  8B02
1137  8B02 3A 9D 88     1 ld a,(Ctrl_3)
1138  8B05 CB 57        	bit 2,a
1139  8B07 20 10        	jr nz,6F
1140  8B09
1141  8B09              ; Entidad guía o fantasma ???
1142  8B09
1143  8B09 3A 64 88     	ld a,(Ctrl_2)
1144  8B0C CB 6F        	bit 5,a
1145  8B0E 20 10        	jr nz,3F
1146  8B10
1147  8B10              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1148  8B10
1149  8B10 18 EF        	jr 4B
1150  8B12
1151  8B12              ; ENTIDAD_GUÍA:
1152  8B12              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1153  8B12              ; _guardando "movimientos_masticados".
1154  8B12
1155  8B12 3A 9D 88     2 ld a,(Ctrl_3)
1156  8B15 CB 57        	bit 2,a
1157  8B17 28 07        	jr z,3F
1158  8B19
1159  8B19              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1160  8B19              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1161  8B19
1162  8B19 CB 97        6 res 2,a
1163  8B1B CB DF        	set 3,a
1164  8B1D 32 9D 88     	ld (Ctrl_3),a
1165  8B20
1166  8B20
1167  8B20              ;	Esto sólo lo ejecuta una entidad guía.
1168  8B20
1169  8B20 CD 06 92     3 	call Draw
1170  8B23 CD B0 8A     	call Guarda_movimiento_masticado
1171  8B26 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1172  8B29
1173  8B29              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1174  8B29              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1175  8B29
1176  8B29              ;	call Convierte_guia_en_fantasma
1177  8B29 C9           	ret
1178  8B2A
1179  8B2A              ; --------------------------------------------------------------------------------------------------------------
1180  8B2A              ;
1181  8B2A              ;	19/9/23
1182  8B2A
1183  8B2A              ;Prepara_var_pintado
1184  8B2A
1185  8B2A              ;	ld hl,Filas
1186  8B2A              ;	ld de,Variables_de_pintado
1187  8B2A              ;	ld bc,8
1188  8B2A              ;	ldir
1189  8B2A              ;	ret
1190  8B2A
1191  8B2A              ; --------------------------------------------------------------------------------------------------------------
1192  8B2A
1193  8B2A              ;Repone_pintar
1194  8B2A
1195  8B2A              ;	ld hl,Variables_de_pintado
1196  8B2A              ;	ld de,Filas
1197  8B2A              ;	ld bc,8
1198  8B2A              ;	ldir
1199  8B2A              ;	ret
1200  8B2A
1201  8B2A              ; *************************************************************************************************************************************************************
1202  8B2A              ;
1203  8B2A              ; 8/1/23
1204  8B2A              ;
1205  8B2A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1206  8B2A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1207  8B2A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1208  8B2A
1209  8B2A              ; Destruye HL y DE !!!!!
1210  8B2A
1211  8B2A              Inicia_punteros_de_cajas
1212  8B2A
1213  8B2A 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1214  8B2D CD C2 8B         call Extrae_address
1215  8B30 22 81 88         ld (Puntero_store_caja),hl
1216  8B33 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1217  8B36 22 85 88     	ld (Indice_restore_caja),hl
1218  8B39 CD C2 8B     	call Extrae_address
1219  8B3C 22 83 88     	ld (Puntero_restore_caja),hl
1220  8B3F C9               ret
1221  8B40
1222  8B40              ; *************************************************************************************************************************************************************
1223  8B40              ;
1224  8B40              ; 8/1/23
1225  8B40              ;
1226  8B40              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1227  8B40
1228  8B40 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1229  8B43 22 A0 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1230  8B46 C9           	ret
1231  8B47 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1232  8B4A 22 A2 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1233  8B4D C9           	ret
1234  8B4E
1235  8B4E              ; -------------------------------------------------------------------------------------------------------------
1236  8B4E              ;
1237  8B4E              ; 21/9/23
1238  8B4E              ;
1239  8B4E
1240  8B4E              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1241  8B4E
1242  8B4E              Limpia_album_Amadeus
1243  8B4E
1244  8B4E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1245  8B51 7E           	ld a,(hl)
1246  8B52 A7           	and a
1247  8B53 C8           	ret z
1248  8B54
1249  8B54 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1250  8B57 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1251  8B5A 01 0B 00     	ld bc,11
1252  8B5D AF           	xor a
1253  8B5E 77           	ld (hl),a
1254  8B5F ED B0        	ldir
1255  8B61
1256  8B61 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1257  8B64 22 9B 88     	ld (End_Snapshot_Amadeus),hl
1258  8B67
1259  8B67 C9           	ret
1260  8B68
1261  8B68 21 53 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1262  8B6B 11 54 88     	ld de,Variables_de_borrado+1
1263  8B6E 01 05 00     	ld bc,5
1264  8B71 AF           	xor a
1265  8B72 77           	ld (hl),a
1266  8B73 ED B0        	ldir
1267  8B75 C9           	ret
1268  8B76
1269  8B76              ; -------------------------------------------------------------------------------------------------------------
1270  8B76              ;
1271  8B76              ; 8/9/23
1272  8B76              ;
1273  8B76
1274  8B76              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1275  8B76              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1276  8B76
1277  8B76              Calcula_numero_de_malotes
1278  8B76
1279  8B76 21 00 70     	ld hl,Album_de_fotos
1280  8B79 EB           	ex de,hl
1281  8B7A 2A 95 88     	ld hl,(Stack_snapshot)
1282  8B7D
1283  8B7D 06 00        	ld b,0
1284  8B7F 7D           	ld a,l
1285  8B80 93           	sub e
1286  8B81 28 07        	jr z,1F
1287  8B83
1288  8B83              ; Nº de malotes no es "0".
1289  8B83
1290  8B83 D6 06        2 sub 6
1291  8B85 04           	inc b
1292  8B86 A7           	and a
1293  8B87 20 FA        	jr nz,2B
1294  8B89 78           	ld a,b
1295  8B8A
1296  8B8A 32 8A 88     1 ld (Numero_de_malotes),a
1297  8B8D C9           	ret
1298  8B8E
1299  8B8E              ; -------------------------------------------------------------------------------------------------------------
1300  8B8E              ;
1301  8B8E              ; 8/9/23
1302  8B8E              ;
1303  8B8E
1304  8B8E              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1305  8B8E              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1306  8B8E
1307  8B8E              Calcula_malotes_Amadeus
1308  8B8E
1309  8B8E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1310  8B91 EB           	ex de,hl
1311  8B92 2A 9B 88     	ld hl,(End_Snapshot_Amadeus)
1312  8B95
1313  8B95 7C           	ld a,h
1314  8B96 A7           	and a
1315  8B97 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1316  8B99
1317  8B99 06 00        	ld b,0
1318  8B9B 7D           	ld a,l
1319  8B9C 93           	sub e
1320  8B9D 28 07        	jr z,1F
1321  8B9F
1322  8B9F              ; Nº de malotes no es "0".
1323  8B9F
1324  8B9F D6 06        2 sub 6
1325  8BA1 04           	inc b
1326  8BA2 A7           	and a
1327  8BA3 20 FA        	jr nz,2B
1328  8BA5 78           	ld a,b
1329  8BA6
1330  8BA6 32 8A 88     1 ld (Numero_de_malotes),a
1331  8BA9 C9           	ret
1332  8BAA
1333  8BAA              ; -------------------------------------------------------------------------------------------------------------
1334  8BAA              ;
1335  8BAA              ; 28/2/23
1336  8BAA              ;
1337  8BAA
1338  8BAA              Calcula_numero_de_disparotes
1339  8BAA
1340  8BAA 21 56 70     	ld hl,Album_de_fotos_disparos
1341  8BAD EB           	ex de,hl
1342  8BAE 2A 99 88     	ld hl,(End_Snapshot_disparos)
1343  8BB1
1344  8BB1 06 00        	ld b,0
1345  8BB3 7D           	ld a,l
1346  8BB4 93           	sub e
1347  8BB5 28 07        	jr z,1F
1348  8BB7
1349  8BB7              ; Nº de malotes no es "0".
1350  8BB7
1351  8BB7 D6 06        2 sub 6
1352  8BB9 04           	inc b
1353  8BBA A7           	and a
1354  8BBB 20 FA        	jr nz,2B
1355  8BBD 78           	ld a,b
1356  8BBE
1357  8BBE 32 9F 88     1 ld (Numero_de_disparotes),a
1358  8BC1 C9           	ret
1359  8BC2
1360  8BC2              ; *************************************************************************************************************************************************************
1361  8BC2              ;
1362  8BC2              ; 20/10/22
1363  8BC2              ;
1364  8BC2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1365  8BC2              ;
1366  8BC2              ; Destruye el puntero y DE !!!!!
1367  8BC2
1368  8BC2 5E           Extrae_address ld e,(hl)
1369  8BC3 23           	inc hl
1370  8BC4 56           	ld d,(hl)
1371  8BC5 2B           	dec hl
1372  8BC6 EB           	ex de,hl
1373  8BC7 C9           	ret
1374  8BC8
1375  8BC8              ; *************************************************************************************************************************************************************
1376  8BC8              ;
1377  8BC8              ;	20/1/24
1378  8BC8              ;
1379  8BC8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1380  8BC8              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1381  8BC8              ;
1382  8BC8              ;   Destruye HL y BC !!!!!,
1383  8BC8              ;
1384  8BC8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1385  8BC8              ;					"0" ..... Izquierda.
1386  8BC8
1387  8BC8              Inicia_Puntero_objeto
1388  8BC8
1389  8BC8 3A 51 88     	ld a,(Cuad_objeto)
1390  8BCB E6 01        	and 1
1391  8BCD F5           	push af
1392  8BCE CC EA 8B     	call z,Inicia_puntero_objeto_izq
1393  8BD1 F1           	pop af
1394  8BD2 C8           	ret z
1395  8BD3 CD D7 8B     	call Inicia_puntero_objeto_der
1396  8BD6 C9           	ret
1397  8BD7
1398  8BD7              ; Arrancamos desde la parte izquierda de la pantalla.
1399  8BD7              ; Iniciamos (Indice_Sprite_der).
1400  8BD7
1401  8BD7 2A 47 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1402  8BDA 22 4B 88     	ld (Puntero_DESPLZ_der),hl
1403  8BDD CD C2 8B     	call Extrae_address
1404  8BE0 22 41 88     	ld (Puntero_objeto),hl
1405  8BE3
1406  8BE3 2A 49 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1407  8BE6 22 4D 88     	ld (Puntero_DESPLZ_izq),hl
1408  8BE9 C9           	ret
1409  8BEA
1410  8BEA              ; Arrancamos desde la parte derecha de la pantalla.
1411  8BEA              ; Iniciamos (Indice_Sprite_izq).
1412  8BEA
1413  8BEA 2A 49 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1414  8BED 22 4D 88     	ld (Puntero_DESPLZ_izq),hl
1415  8BF0 CD C2 8B     	call Extrae_address
1416  8BF3 22 41 88     	ld (Puntero_objeto),hl
1417  8BF6
1418  8BF6 2A 47 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1419  8BF9 22 4B 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1420  8BFC C9           	ret
1421  8BFD
1422  8BFD              ; **************************************************************************************************
1423  8BFD              ;
1424  8BFD              ;	26/01/24
1425  8BFD              ;
1426  8BFD              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1427  8BFD
1428  8BFD              Restore_entidad
1429  8BFD
1430  8BFD
1431  8BFD 2A 81 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1432  8C00 11 43 88     	ld de,Bandeja_DRAW+7							; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1433  8C03 01 02 00     	ld bc,2
1434  8C06 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1435  8C08
1436  8C08 13           	inc de
1437  8C09 7E           	ld a,(hl)
1438  8C0A 12           	ld (de),a 										; Transferimos (Attr).
1439  8C0B 23           	inc hl
1440  8C0C
1441  8C0C 01 0C 00     	ld bc,12
1442  8C0F CD 15 88     	call Situa_DE
1443  8C12
1444  8C12 7E           	ld a,(hl)
1445  8C13 12           	ld (de),a 										; Transferimos (Impacto).
1446  8C14 23           	inc hl
1447  8C15
1448  8C15 13           	inc de
1449  8C16
1450  8C16 01 06 00     	ld bc,6
1451  8C19 ED B0        	ldir
1452  8C1B
1453  8C1B 01 07 00     	ld bc,7
1454  8C1E ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1455  8C20              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1456  8C20
1457  8C20 01 04 00     	ld bc,4
1458  8C23 CD 15 88     	call Situa_DE
1459  8C26
1460  8C26 7E           	ld a,(hl)
1461  8C27 12           	ld (de),a 										; Transferimos (Ctrl_2).
1462  8C28
1463  8C28 C9           	ret
1464  8C29
1465  8C29              ; **************************************************************************************************
1466  8C29              ;
1467  8C29              ;	08/05/23
1468  8C29              ;
1469  8C29              ;	Incrementamos los dos punteros de entidades. (+1).
1470  8C29
1471  8C29              Incrementa_punteros_de_cajas
1472  8C29
1473  8C29 2A 83 88     	ld hl,(Puntero_restore_caja)
1474  8C2C 22 81 88     	ld (Puntero_store_caja),hl
1475  8C2F 2A 85 88     	ld hl,(Indice_restore_caja)
1476  8C32 23           	inc hl
1477  8C33 23           	inc hl
1478  8C34 22 85 88     	ld (Indice_restore_caja),hl
1479  8C37 CD C2 8B         call Extrae_address
1480  8C3A 22 83 88         ld (Puntero_restore_caja),hl
1481  8C3D C9               ret
1482  8C3E
1483  8C3E              ; **************************************************************************************************
1484  8C3E              ;
1485  8C3E              ;	21/12/23
1486  8C3E              ;
1487  8C3E              ;	Restore_Amadeus
1488  8C3E              ;
1489  8C3E              ;	Cargamos en DRAW los parámetros de Amadeus.
1490  8C3E              ;
1491  8C3E
1492  8C3E E5           Restore_Amadeus	push hl
1493  8C3F D5           	push de
1494  8C40 C5            	push bc
1495  8C41 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1496  8C44 11 3C 88     	ld de,Bandeja_DRAW
1497  8C47 01 2A 00     	ld bc,42
1498  8C4A ED B0        	ldir
1499  8C4C C1           	pop bc
1500  8C4D D1           	pop de
1501  8C4E E1           	pop hl
1502  8C4F C9           	ret
1503  8C50
1504  8C50              ; *************************************************************************************************************************************************************
1505  8C50              ;
1506  8C50              ;	21/12/23
1507  8C50              ;
1508  8C50              ;	Store_Amadeus
1509  8C50              ;
1510  8C50              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1511  8C50              ;
1512  8C50              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1513  8C50              ;
1514  8C50              ;	DESTRUYE: HL y BC y DE.
1515  8C50
1516  8C50 21 3C 88     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1517  8C53 01 2A 00     	ld bc,42
1518  8C56 ED B0        	ldir
1519  8C58 C9           	ret
1520  8C59
1521  8C59              ; -----------------------------------------------------------
1522  8C59              ;
1523  8C59              ;	21/12/23
1524  8C59              ;
1525  8C59              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1526  8C59              ;
1527  8C59              ;	Destruye: HL,BC,DE,A
1528  8C59
1529  8C59 21 3C 88     Borra_datos_entidad ld hl,Bandeja_DRAW
1530  8C5C 01 29 00     	ld bc,41
1531  8C5F AF           	xor a
1532  8C60 77           	ld (hl),a
1533  8C61 11 3D 88     	ld de,Bandeja_DRAW+1
1534  8C64 ED B0        	ldir
1535  8C66 C9           	ret
1536  8C67
1537  8C67              ; -----------------------------------------------------------
1538  8C67
1539  8C67              ; Teclado.
1540  8C67
1541  8C67 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1542  8C69 DB FE        	in a,($fe)
1543  8C6B E6 01        	and $01
1544  8C6D 28 02        	jr z,1f
1545  8C6F 18 F6        	jr Pulsa_ENTER
1546  8C71 C9           1 ret
1547  8C72
1548  8C72              ; **************************************************************************************************
1549  8C72              ;
1550  8C72              ; Temporización.
1551  8C72
1552  8C72              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1553  8C72              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1554  8C72              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1555  8C72              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1556  8C72
1557  8C72              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1558  8C72              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1559  8C72              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1560  8C72
1561  8C72              ; A partir de $4f61 no hace falta DELAY.
1562  8C72
1563  8C72              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1564  8C72
1565  8C72 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1566  8C75 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1567  8C76 78           	LD A,B
1568  8C77 A7           	AND A
1569  8C78 20 FB        	JR NZ,wait
1570  8C7A C9           	RET
1571  8C7B
1572  8C7B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1573  8C7B              ;
1574  8C7B              ;	5/3/23
1575  8C7B              ;
1576  8C7B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1577  8C7B
1578  8C7B              Movimiento_Amadeus
1579  8C7B
1580  8C7B              ; Disparo.
1581  8C7B
1582  8C7B 3A B5 88     	ld a,(Disparo_Amadeus)
1583  8C7E A7           	and a
1584  8C7F 20 02        	jr nz,1F
1585  8C81 18 15        	jr 2F
1586  8C83
1587  8C83 3E F7        1 ld a,$f7													; "5" para disparar.
1588  8C85 DB FE        	in a,($fe)
1589  8C87 E6 10        	and $10
1590  8C89
1591  8C89 F5           	push af
1592  8C8A CC 32 8D     	call z,Genera_disparo
1593  8C8D F1           	pop af
1594  8C8E 20 08        	jr nz,2F
1595  8C90
1596  8C90 3A B5 88     	ld a,(Disparo_Amadeus)
1597  8C93 EE 01        	xor 1
1598  8C95 32 B5 88     	ld (Disparo_Amadeus),a
1599  8C98 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1600  8C9A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1601  8C9C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1602  8C9E CC F7 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1603  8CA1
1604  8CA1 3E F7        	ld a,$f7
1605  8CA3 DB FE        	in a,($fe)
1606  8CA5 E6 01        	and $01
1607  8CA7 C8           	ret z
1608  8CA8
1609  8CA8 3E F7        	ld a,$f7
1610  8CAA DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1611  8CAC E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1612  8CAE CC D4 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1613  8CB1 C9           	ret
1614  8CB2
1615  8CB2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1616  8CB2              ;
1617  8CB2              ;	Rutina provisional para que los malotes cagen balas.
1618  8CB2
1619  8CB2              Detecta_disparo_entidad
1620  8CB2
1621  8CB2 3A B8 88     	ld a,(Disparo_entidad)
1622  8CB5 A7           	and a
1623  8CB6 C8           	ret z
1624  8CB7
1625  8CB7              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1626  8CB7
1627  8CB7              ;	ld a,$7f				; Detecta SPACE.
1628  8CB7              ;	in a,($fe)
1629  8CB7              ;	and 1
1630  8CB7              ;	ret nz
1631  8CB7
1632  8CB7 CD 32 8D     	call Genera_disparo
1633  8CBA C9           	ret
1634  8CBB
1635  8CBB              ; ----------------------------------------------------------------------
1636  8CBB              ;
1637  8CBB              ;	8/9/23
1638  8CBB
1639  8CBB 2A 9B 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1640  8CBE 2B            	dec hl
1641  8CBF 7E           	ld a,(hl)
1642  8CC0 A7           	and a
1643  8CC1 C8           	ret z										; Salimos si es álbum está vacío.
1644  8CC2
1645  8CC2 11 58 88     	ld de,Variables_de_borrado+5
1646  8CC5 01 06 00     	ld bc,6
1647  8CC8 ED B8        	lddr
1648  8CCA C9           	ret
1649  8CCB
1650  8CCB              ; ----------------------------------------------------------------------
1651  8CCB              ;
1652  8CCB              ;	9/9/23
1653  8CCB
1654  8CCB              Repone_datos_de_borrado_Amadeus
1655  8CCB
1656  8CCB 21 53 88     	ld hl,Variables_de_borrado
1657  8CCE 11 AC 70     	ld de,Album_de_fotos_Amadeus
1658  8CD1 01 06 00     	ld bc,6
1659  8CD4 ED B0        	ldir
1660  8CD6
1661  8CD6 EB           	ex de,hl
1662  8CD7 22 9B 88     	ld (End_Snapshot_Amadeus),hl
1663  8CDA
1664  8CDA C9           	ret
1665  8CDB
1666  8CDB              ; ----------------------------------------------------------------------
1667  8CDB              ;
1668  8CDB              ;	27/10/23
1669  8CDB              ;
1670  8CDB
1671  8CDB              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1672  8CDB              ;	_ Album_de_fotos correspondiente.
1673  8CDB
1674  8CDB              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1675  8CDB              ;	_ durante el proceso de escritura.
1676  8CDB
1677  8CDB              Repone_datos_de_borrado
1678  8CDB
1679  8CDB F3           	di
1680  8CDC ED 5B 95 88  	ld de,(Stack_snapshot)
1681  8CE0 21 53 88     	ld hl,Variables_de_borrado
1682  8CE3 01 06 00     	ld bc,6
1683  8CE6 ED B0        	ldir
1684  8CE8 FB           	ei
1685  8CE9
1686  8CE9 EB           	ex de,hl
1687  8CEA 22 95 88     	ld (Stack_snapshot),hl
1688  8CED
1689  8CED C9           	ret
1690  8CEE
1691  8CEE              ; --------------------------------------------------------------------------------------
1692  8CEE
1693  8CEE              Pinta_Amadeus
1694  8CEE
1695  8CEE CD 8E 8B        	call Calcula_malotes_Amadeus
1696  8CF1 CD 9F 95     	call Extrae_foto_Amadeus
1697  8CF4 CD 4E 8B     	call Limpia_album_Amadeus
1698  8CF7
1699  8CF7 C9           	ret
1700  8CF8
1701  8CF8              Pinta_entidades
1702  8CF8
1703  8CF8              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1704  8CF8
1705  8CF8 3A 9D 88     	ld a,(Ctrl_3)
1706  8CFB CB 47        	bit 0,a
1707  8CFD C8           	ret z
1708  8CFE
1709  8CFE CD 76 8B     	call Calcula_numero_de_malotes
1710  8D01 CD 1D 95     	call Extrae_foto_entidades
1711  8D04 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1712  8D07
1713  8D07 C9           	ret
1714  8D08
1715  8D08              ; -----------------------------------------------------------------------------------
1716  8D08              ;
1717  8D08              ;	10/12/23
1718  8D08              ;
1719  8D08              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1720  8D08
1721  8D08              Actualiza_relojes
1722  8D08
1723  8D08 3A 9D 88     	ld a,(Ctrl_3)
1724  8D0B CB 47        	bit 0,a
1725  8D0D C8           	ret z 						;	Salimos si no hemos pintado unidades.
1726  8D0E
1727  8D0E 21 B0 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1728  8D11 34           	inc (hl)
1729  8D12
1730  8D12 34           	inc (hl)
1731  8D13 35           	dec (hl)
1732  8D14 C0           	ret nz
1733  8D15
1734  8D15 21 B1 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1735  8D18 34           	inc (hl)
1736  8D19 C9           	ret
1737  8D1A
1738  8D1A              ; ---------------------------------------------------------------
1739  8D1A              ;
1740  8D1A              ;	21/12/23
1741  8D1A
1742  8D1A              Guarda_parametros_DRAW
1743  8D1A
1744  8D1A 21 3C 88     	ld hl,Bandeja_DRAW
1745  8D1D 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1746  8D20 01 2A 00     	ld bc,42
1747  8D23 ED B0        	ldir
1748  8D25 C9           	ret
1749  8D26
1750  8D26              Recupera_parametros_DRAW
1751  8D26
1752  8D26 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1753  8D29 11 3C 88     	ld de,Bandeja_DRAW
1754  8D2C 01 2A 00     	ld bc,42
1755  8D2F ED B0        	ldir
1756  8D31 C9           	ret
1757  8D32
1758  8D32              ; ---------------------------------------------------------------
1759  8D32
1760  8D32              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D32              ; ******************************************************************************************************************************************************************************************
   2+ 8D32              ;
   3+ 8D32              ;   21/07/23
   4+ 8D32              ;
   5+ 8D32              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D32              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D32              ;
   8+ 8D32              ;
   9+ 8D32              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D32              ;
  11+ 8D32              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D32              ;               _ hacen las entidades hacia abajo.
  13+ 8D32              ;
  14+ 8D32              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D32              ;
  16+ 8D32              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D32              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D32              ;
  19+ 8D32              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D32              ;           _ la bala.
  21+ 8D32              ;
  22+ 8D32              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D32              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D32              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D32              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D32              ;           _ en el momento de generarse la bala)).
  27+ 8D32
  28+ 8D32              Genera_disparo
  29+ 8D32
  30+ 8D32              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D32              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D32              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D32              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D32              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D32              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D32              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D32
  38+ 8D32              ; Exclusiones:
  39+ 8D32
  40+ 8D32 3A 69 88         ld a,(Vel_down)
  41+ 8D35 47               ld b,a
  42+ 8D36 3A AF 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D39 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D3A D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D3B 3A 60 88         ld a,(Columnas)
  46+ 8D3E 47               ld b,a
  47+ 8D3F 3A 3E 88         ld a,(Columns)
  48+ 8D42 B8               cp b
  49+ 8D43 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D44
  51+ 8D44              ; ----- ----- -----
  52+ 8D44
  53+ 8D44 3A 5F 88         ld a,(Ctrl_0)
  54+ 8D47 CB 77            bit 6,a
  55+ 8D49 20 06            jr nz,14F
  56+ 8D4B
  57+ 8D4B 3A 44 88         ld a,(Coordenada_y)
  58+ 8D4E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D50 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D51
  61+ 8D51 21 00 80     14 ld hl,Indice_disparo
  62+ 8D54 3A 45 88         ld a,(CTRL_DESPLZ)
  63+ 8D57 4F               ld c,a
  64+ 8D58 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D5A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D5A              ;                                            ""        ""       "f9", B="1"
  67+ 8D5A              ;                                            ""        ""       "fb", B="2"
  68+ 8D5A              ;                                            ""        ""       "fb", B="3"
  69+ 8D5A A7               and a
  70+ 8D5B 28 10            jr z,1F
  71+ 8D5D E6 01            and 1
  72+ 8D5F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D60
  74+ 8D60 79               ld a,c
  75+ 8D61 16 F9            ld d,$f9
  76+ 8D63 23           2 inc hl
  77+ 8D64 23               inc hl
  78+ 8D65 04               inc b
  79+ 8D66 BA               cp d
  80+ 8D67 28 04            jr z,1F
  81+ 8D69 14               inc d
  82+ 8D6A 14               inc d
  83+ 8D6B 18 F6            jr 2B
  84+ 8D6D
  85+ 8D6D CD C2 8B     1 call Extrae_address
  86+ 8D70 E5               push hl
  87+ 8D71 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D73 DD 21 E5 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D77
  90+ 8D77              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D77              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D77
  93+ 8D77 3A 5F 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D7A CB 77            bit 6,a
  95+ 8D7C 20 04            jr nz,19F
  96+ 8D7E
  97+ 8D7E AF               xor a
  98+ 8D7F 32 B8 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D82
 100+ 8D82 3A 51 88     19 ld a,(Cuad_objeto)
 101+ 8D85 FE 02            cp 2
 102+ 8D87 38 66            jr c,3F
 103+ 8D89 28 64            jr z,3F
 104+ 8D8B
 105+ 8D8B              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D8B
 107+ 8D8B E6 01            and 1
 108+ 8D8D 28 30            jr z,4F
 109+ 8D8F
 110+ 8D8F              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D8F              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D8F              ;
 113+ 8D8F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D8F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D8F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D8F
 117+ 8D8F 2A 3F 88     	ld hl,(Posicion_actual)
 118+ 8D92
 119+ 8D92              ;   Amadeus o entidad ???.
 120+ 8D92
 121+ 8D92 3A 5F 88         ld a,(Ctrl_0)
 122+ 8D95 CB 77            bit 6,a
 123+ 8D97 28 0A            jr z,8F
 124+ 8D99
 125+ 8D99              ; 	Dispara Amadeus.
 126+ 8D99
 127+ 8D99 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D9B CD 0E 95         call PreviousScan
 129+ 8D9E CD 0E 95         call PreviousScan
 130+ 8DA1
 131+ 8DA1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8DA1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8DA1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8DA1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8DA1
 136+ 8DA1 18 11            jr 10F
 137+ 8DA3
 138+ 8DA3              ; 	Dispara Entidad.
 139+ 8DA3
 140+ 8DA3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8DA6              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8DA6
 143+ 8DA6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8DA6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8DA6
 146+ 8DA6 C5               push bc
 147+ 8DA7 06 10            ld b,16
 148+ 8DA9 CD FF 94     9 call NextScan
 149+ 8DAC 10 FB            djnz 9B
 150+ 8DAE C1               pop bc
 151+ 8DAF CD 19 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DB2 18 06            jr 17F
 153+ 8DB4
 154+ 8DB4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DB4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DB4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DB4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DB4
 159+ 8DB4 CD 19 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DB7 CD 8E 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DBA              ;                                                      ; _al generar el disparo.
 162+ 8DBA
 163+ 8DBA              ; 	LLegados a este punto tendremos:
 164+ 8DBA              ;
 165+ 8DBA              ;       Puntero_objeto_disparo en IY.
 166+ 8DBA              ;       Rutinas_de_impresion en IX.
 167+ 8DBA              ;       Puntero_de_impresion en HL.
 168+ 8DBA              ;       Impacto/Dirección en BC.
 169+ 8DBA
 170+ 8DBA CD 21 8E     17 call Almacena_disparo
 171+ 8DBD 18 52            jr 6F                                             ; RET.
 172+ 8DBF
 173+ 8DBF              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DBF              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DBF              ;
 176+ 8DBF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DBF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DBF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DBF
 180+ 8DBF 2A 3F 88     4 ld hl,(Posicion_actual)
 181+ 8DC2
 182+ 8DC2              ;   Amadeus o entidad ???.
 183+ 8DC2
 184+ 8DC2 3A 5F 88         ld a,(Ctrl_0)
 185+ 8DC5 CB 77            bit 6,a
 186+ 8DC7 28 0A            jr z,11F
 187+ 8DC9
 188+ 8DC9              ; 	Dispara Amadeus.
 189+ 8DC9
 190+ 8DC9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DCB CD 0E 95         call PreviousScan
 192+ 8DCE CD 0E 95         call PreviousScan
 193+ 8DD1
 194+ 8DD1              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DD1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DD1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DD1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DD1
 199+ 8DD1 18 11            jr 13F
 200+ 8DD3
 201+ 8DD3              ; 	Dispara Entidad.
 202+ 8DD3
 203+ 8DD3 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DD6              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DD6
 206+ 8DD6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DD6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DD6
 209+ 8DD6 C5               push bc
 210+ 8DD7 06 10            ld b,16
 211+ 8DD9 CD FF 94     12 call NextScan
 212+ 8DDC 10 FB            djnz 12B
 213+ 8DDE C1               pop bc
 214+ 8DDF
 215+ 8DDF CD 12 8E         call Ajusta_disparo_parte_derecha
 216+ 8DE2 18 06            jr 18F
 217+ 8DE4
 218+ 8DE4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DE4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DE4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DE4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DE4
 223+ 8DE4 CD 12 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8DE7 CD 8E 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DEA              ;                                                       ; _al generar el disparo.
 226+ 8DEA
 227+ 8DEA              ; LLegados a este punto tendremos:
 228+ 8DEA              ;
 229+ 8DEA              ;       Puntero_objeto_disparo en IY.
 230+ 8DEA              ;       Rutinas_de_impresion en IX.
 231+ 8DEA              ;       Puntero_de_impresion en HL.
 232+ 8DEA              ;       Impacto/Dirección en BC.
 233+ 8DEA
 234+ 8DEA CD 21 8E     18 call Almacena_disparo
 235+ 8DED 18 22            jr 6F                                               ; RET.
 236+ 8DEF
 237+ 8DEF              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DEF
 239+ 8DEF 28 11        3 jr z,5F
 240+ 8DF1
 241+ 8DF1              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DF1              ;
 243+ 8DF1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DF1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DF1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DF1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DF1
 248+ 8DF1              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DF1              ;	   ""        ""       "f9", B="1"
 250+ 8DF1              ;	   ""        ""       "fb", B="2"
 251+ 8DF1              ; 	   ""        ""       "fb", B="3"
 252+ 8DF1
 253+ 8DF1 2A 3F 88     	ld hl,(Posicion_actual)
 254+ 8DF4 CD FF 94     	call NextScan
 255+ 8DF7
 256+ 8DF7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DF7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DF7              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DF7              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DF7
 261+ 8DF7 CD 19 8E         call Ajusta_disparo_parte_izquierda
 262+ 8DFA
 263+ 8DFA              ; 	No se produce impacto. B="$80"
 264+ 8DFA              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DFA
 266+ 8DFA 01 80 80         ld bc,$8080
 267+ 8DFD
 268+ 8DFD              ; 	LLegados a este punto tendremos:
 269+ 8DFD              ;
 270+ 8DFD              ;       Puntero_objeto_disparo en IY.
 271+ 8DFD              ;       Rutinas_de_impresion en IX.
 272+ 8DFD              ;       Puntero_de_impresion en HL.
 273+ 8DFD              ;       Impacto/Dirección en BC.
 274+ 8DFD
 275+ 8DFD CD 21 8E         call Almacena_disparo
 276+ 8E00 18 0F            jr 6F                                           ; RET.
 277+ 8E02
 278+ 8E02              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E02              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E02              ;
 281+ 8E02              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E02              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E02              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E02              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E02
 286+ 8E02 2A 3F 88     5 ld hl,(Posicion_actual)
 287+ 8E05 CD FF 94     	call NextScan
 288+ 8E08
 289+ 8E08              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E08              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E08              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E08              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E08
 294+ 8E08 CD 12 8E         call Ajusta_disparo_parte_derecha
 295+ 8E0B
 296+ 8E0B              ; 	No se produce impacto. B="$80"
 297+ 8E0B              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E0B
 299+ 8E0B 01 80 80     15 ld bc,$8080
 300+ 8E0E
 301+ 8E0E              ; 	LLegados a este punto tendremos:
 302+ 8E0E              ;
 303+ 8E0E              ;       Puntero_objeto_disparo en IY.
 304+ 8E0E              ;       Rutinas_de_impresion en IX.
 305+ 8E0E              ;       Puntero_de_impresion en HL.
 306+ 8E0E              ;       Impacto/Dirección en BC.
 307+ 8E0E
 308+ 8E0E CD 21 8E         call Almacena_disparo
 309+ 8E11
 310+ 8E11 C9           6 ret
 311+ 8E12
 312+ 8E12              ; ----------------------------------------------------------------
 313+ 8E12              ;
 314+ 8E12              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E12              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E12              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E12
 318+ 8E12 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E13 FE 02            cp 2
 320+ 8E15 38 01            jr c,1F
 321+ 8E17 23               inc hl
 322+ 8E18 C9           1 ret
 323+ 8E19
 324+ 8E19 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E1A FE 01        	cp 1
 326+ 8E1C 20 01        	jr nz,1F
 327+ 8E1E 2B           	dec hl
 328+ 8E1F 2B           1 dec hl
 329+ 8E20 C9               ret
 330+ 8E21
 331+ 8E21              ; ----------------------------------------------------------------
 332+ 8E21              ;
 333+ 8E21              ;   25/02/23
 334+ 8E21              ;
 335+ 8E21              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E21              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E21              ;
 338+ 8E21              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E21              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E21
 341+ 8E21              Almacena_disparo
 342+ 8E21
 343+ 8E21 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E22 F1               pop af
 345+ 8E23 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E24
 347+ 8E24 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E25 E6 01            and 1
 349+ 8E27 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E29              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E29              ; 	Dispara AMADEUS.
 352+ 8E29
 353+ 8E29              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E29              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E29              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E29              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E29
 358+ 8E29 C5               push bc
 359+ 8E2A 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E2D 2A A2 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E30 A7               and a
 362+ 8E31 ED 42            sbc hl,bc
 363+ 8E33 CC 47 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E36 C1               pop bc
 365+ 8E37 28 54            jr z,4F
 366+ 8E39
 367+ 8E39 2A A2 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E3C 23               inc hl
 369+ 8E3D 23               inc hl
 370+ 8E3E 22 A2 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E41              ;                                                   ; _ Disparo_(+1).
 372+ 8E41 18 18            jr 2F
 373+ 8E43
 374+ 8E43              ; Dispara una entidad.
 375+ 8E43
 376+ 8E43 C5           1 push bc
 377+ 8E44 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E47 2A A0 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E4A A7               and a
 380+ 8E4B ED 42            sbc hl,bc
 381+ 8E4D CC 40 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E50 C1               pop bc
 383+ 8E51 28 3A            jr z,4F
 384+ 8E53
 385+ 8E53 2A A0 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E56 23               inc hl
 387+ 8E57 23               inc hl
 388+ 8E58 22 A0 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E5B              ;                                                   ; _ Disparo_(+1).
 390+ 8E5B CD C2 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E5E              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E5E              ;
 393+ 8E5E              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E5E              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E5E              ;                                                     Puntero_de_impresion en HL.
 396+ 8E5E              ;                                                     Impacto/Dirección en BC.
 397+ 8E5E
 398+ 8E5E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E5F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E60 23               inc hl                                          ; _ al siguiente.
 401+ 8E61 A7               and a
 402+ 8E62 20 C0            jr nz,3B
 403+ 8E64
 404+ 8E64 08               ex af,af
 405+ 8E65 ED 73 8F 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E69 F9               ld sp,hl
 407+ 8E6A
 408+ 8E6A DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E6C F5               push af                                         ; Puntero de impresión.
 410+ 8E6D FD E5            push iy                                         ; Puntero objeto.
 411+ 8E6F C5               push bc                                         ; Control.
 412+ 8E70
 413+ 8E70 ED 7B 8F 88      ld sp,(Stack)
 414+ 8E74
 415+ 8E74              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E74
 417+ 8E74 21 7E 88     	ld hl,Ctrl_1
 418+ 8E77 CB C6        	set 0,(hl)
 419+ 8E79
 420+ 8E79 DD E5        	push ix
 421+ 8E7B E1               pop hl
 422+ 8E7C F5               push af
 423+ 8E7D DD E1            pop ix
 424+ 8E7F
 425+ 8E7F CD 16 71     	call Guarda_foto_registros
 426+ 8E82
 427+ 8E82 21 7E 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E85 CB 86        	res 0,(hl)
 429+ 8E87
 430+ 8E87              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E87              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E87
 433+ 8E87 CD 47 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E8A CD 40 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8E8D
 436+ 8E8D C9           4 ret
 437+ 8E8E
 438+ 8E8E              ; ----------------------------------------------------------------
 439+ 8E8E              ;
 440+ 8E8E              ;   4/3/23
 441+ 8E8E              ;
 442+ 8E8E              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E8E              ;   _ al generarse el disparo.
 444+ 8E8E              ;
 445+ 8E8E              ;       "$80" ..... No se produce colisión.
 446+ 8E8E              ;       "$81" ..... Se produce colisión.
 447+ 8E8E              ;
 448+ 8E8E              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E8E              ;         _ que forman el disparo.
 450+ 8E8E
 451+ 8E8E
 452+ 8E8E              Comprueba_Colision
 453+ 8E8E
 454+ 8E8E              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E8E
 456+ 8E8E FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E90 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E91
 459+ 8E91 CD C7 8E         call Modifica_H_Velocidad_disparo
 460+ 8E94
 461+ 8E94 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E95 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E97 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E99
 465+ 8E99 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E9B CD B7 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E9E
 468+ 8E9E 7B               ld a,e
 469+ 8E9F E6 01            and 1
 470+ 8EA1 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8EA3              ;                                                  ; _ para activar IMPACTO.
 472+ 8EA3 E1               pop hl
 473+ 8EA4 E5               push hl
 474+ 8EA5 CD FF 94         call NextScan
 475+ 8EA8
 476+ 8EA8 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8EA9 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8EAB 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8EAD              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8EAD 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8EAF CD B7 8E         call Bucle_2
 482+ 8EB2
 483+ 8EB2 43           1 ld b,e
 484+ 8EB3 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8EB4 FD E1            pop iy
 486+ 8EB6 C9               ret
 487+ 8EB7
 488+ 8EB7              ; ---------- ----------
 489+ 8EB7
 490+ 8EB7 06 02        Bucle_2 ld b,2
 491+ 8EB9 FD 7E 00     2 ld a,(iy)
 492+ 8EBC A6               and (hl)
 493+ 8EBD 28 02            jr z,1F
 494+ 8EBF 1E 81            ld e,$81
 495+ 8EC1 23           1 inc hl
 496+ 8EC2 FD 23            inc iy
 497+ 8EC4 10 F3            djnz 2B
 498+ 8EC6 C9               ret
 499+ 8EC7
 500+ 8EC7              ; ---------- ----------
 501+ 8EC7              ;
 502+ 8EC7              ;   21/7/23
 503+ 8EC7
 504+ 8EC7              Modifica_H_Velocidad_disparo
 505+ 8EC7
 506+ 8EC7 3A AF 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8ECA FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8ECC D0               ret nc                                         ; _ incrementamos H.
 509+ 8ECD 24               inc h
 510+ 8ECE
 511+ 8ECE C9               ret
 512+ 8ECF
 513+ 8ECF              ; -------------------------------------------------------------------------------------------------------------
 514+ 8ECF              ;
 515+ 8ECF              ;   04/12/23
 516+ 8ECF              ;
 517+ 8ECF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8ECF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8ECF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8ECF              ;
 521+ 8ECF              ;   MODIFICA: HL,DE,B y A.
 522+ 8ECF
 523+ 8ECF              Genera_coordenadas_X
 524+ 8ECF
 525+ 8ECF              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8ECF              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8ECF
 528+ 8ECF              ;   Limpiamos almacenes.
 529+ 8ECF
 530+ 8ECF CD 00 8F         call Limpia_Coordenadas_X
 531+ 8ED2
 532+ 8ED2              ;   Almacenamos coordenadas X.
 533+ 8ED2
 534+ 8ED2              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8ED2
 536+ 8ED2 2A 59 88         ld hl,(Puntero_de_impresion)
 537+ 8ED5 11 AC 88         ld de,Coordenadas_X_Entidad
 538+ 8ED8 06 02            ld b,2
 539+ 8EDA
 540+ 8EDA 3A 45 88         ld a,(CTRL_DESPLZ)
 541+ 8EDD A7               and a
 542+ 8EDE 28 01            jr z,1F
 543+ 8EE0 04               inc b
 544+ 8EE1
 545+ 8EE1 CD F7 8E     1 call Guarda_coordenadas_X
 546+ 8EE4
 547+ 8EE4              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8EE4
 549+ 8EE4 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8EE7 11 A9 88         ld de,Coordenadas_X_Amadeus
 551+ 8EEA 06 02            ld b,2
 552+ 8EEC
 553+ 8EEC 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8EEF A7               and a
 555+ 8EF0 28 01            jr z,2F
 556+ 8EF2 04               inc b
 557+ 8EF3
 558+ 8EF3 CD F7 8E     2 call Guarda_coordenadas_X
 559+ 8EF6
 560+ 8EF6              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8EF6
 562+ 8EF6 C9               ret
 563+ 8EF7
 564+ 8EF7              ; ----- ----- ----- ----- -----
 565+ 8EF7
 566+ 8EF7 7D           Guarda_coordenadas_X  ld a,l
 567+ 8EF8 E6 1F            and $1f
 568+ 8EFA 12           1 ld (de),a
 569+ 8EFB 3C               inc a
 570+ 8EFC 13               inc de
 571+ 8EFD 10 FB            djnz 1B
 572+ 8EFF C9               ret
 573+ 8F00
 574+ 8F00 AF           Limpia_Coordenadas_X xor a
 575+ 8F01 06 06            ld b,6
 576+ 8F03 21 A9 88         ld hl,Coordenadas_X_Amadeus
 577+ 8F06 77           1 ld (hl),a
 578+ 8F07 23               inc hl
 579+ 8F08 10 FC            djnz 1B
 580+ 8F0A C9               ret
 581+ 8F0B
 582+ 8F0B              ; ----- ----- ----- ----- -----
 583+ 8F0B
 584+ 8F0B              Compara_coordenadas_X
 585+ 8F0B
 586+ 8F0B 06 03            ld b,3
 587+ 8F0D 11 AE 88         ld de,Coordenadas_X_Entidad+2
 588+ 8F10
 589+ 8F10 1A               ld a,(de)
 590+ 8F11 A7               and a
 591+ 8F12 20 01            jr nz,2F
 592+ 8F14 05               dec b
 593+ 8F15
 594+ 8F15 1B           2 dec de
 595+ 8F16 1B               dec de
 596+ 8F17 21 A9 88         ld hl,Coordenadas_X_Amadeus
 597+ 8F1A
 598+ 8F1A D5           1 push de
 599+ 8F1B E5               push hl
 600+ 8F1C C5               push bc
 601+ 8F1D
 602+ 8F1D CD 27 8F         call Comparando
 603+ 8F20
 604+ 8F20 C1               pop bc
 605+ 8F21 E1               pop hl
 606+ 8F22 D1               pop de
 607+ 8F23
 608+ 8F23 13               inc de
 609+ 8F24 10 F4            djnz 1B
 610+ 8F26
 611+ 8F26 C9               ret
 612+ 8F27
 613+ 8F27              ; ----- ----- ----- ----- -----
 614+ 8F27              ;
 615+ 8F27              ;   4/12/23
 616+ 8F27              ;
 617+ 8F27              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8F27
 619+ 8F27 06 03        Comparando ld b,3
 620+ 8F29 1A               ld a,(de)
 621+ 8F2A 4E           2 ld c,(hl)
 622+ 8F2B B9               cp c
 623+ 8F2C 28 04            jr z,1F
 624+ 8F2E 23               inc hl
 625+ 8F2F 10 F9            djnz 2B
 626+ 8F31 C9               ret
 627+ 8F32
 628+ 8F32 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F34 32 52 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F37 21 A4 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F3A CB D6            set 2,(hl)
 632+ 8F3C C9               ret
 633+ 8F3D
 634+ 8F3D              ; -----------------------------------------------------------------------
 635+ 8F3D              ;
 636+ 8F3D              ;   7/12/23
 637+ 8F3D              ;
 638+ 8F3D
 639+ 8F3D              Detecta_colision_nave_entidad
 640+ 8F3D
 641+ 8F3D              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F3D
 643+ 8F3D FD 2A 41 88      ld iy,(Puntero_objeto)
 644+ 8F41 2A 59 88         ld hl,(Puntero_de_impresion)
 645+ 8F44
 646+ 8F44 E5               push hl
 647+ 8F45
 648+ 8F45              ; ----- ----- -----
 649+ 8F45 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F47 06 0A            ld b,10
 651+ 8F49 CD 79 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F4C 7B               ld a,e
 653+ 8F4D FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F4F 38 0E            jr c,3F
 655+ 8F51
 656+ 8F51              ; LLegados a este punto:
 657+ 8F51              ;
 658+ 8F51              ;   HAY COLISIÓN !!!!!.
 659+ 8F51              ;
 660+ 8F51              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F51              ;   SET el bit3 de (Impacto2).
 662+ 8F51              ;
 663+ 8F51              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F51
 665+ 8F51 21 52 88         ld hl,Impacto
 666+ 8F54 36 01            ld (hl),1
 667+ 8F56 21 A4 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F59 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F5B CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F5D
 671+ 8F5D 18 18            jr 1F
 672+ 8F5F
 673+ 8F5F              ; -----
 674+ 8F5F
 675+ 8F5F E1           3 pop hl
 676+ 8F60 CD FF 94         call NextScan
 677+ 8F63 E5               push hl
 678+ 8F64 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F65 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F67 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F69 30 0C            jr nc,1F
 682+ 8F6B              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F6B 10 DC            djnz 2B
 684+ 8F6D
 685+ 8F6D              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F6D
 687+ 8F6D              ; LLegados a este punto:
 688+ 8F6D              ;
 689+ 8F6D              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F6D              ;
 691+ 8F6D              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F6D              ;   RES el bit2 de (Impacto2).
 693+ 8F6D              ;
 694+ 8F6D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F6D              ;   Lo colocamos a "0".
 696+ 8F6D
 697+ 8F6D 21 A4 88         ld hl,Impacto2
 698+ 8F70 CB 96            res 2,(hl)
 699+ 8F72 2A A5 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F75 36 00            ld (hl),0
 701+ 8F77
 702+ 8F77 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F78 C9               ret
 704+ 8F79
 705+ 8F79               ; ---------- ----------
 706+ 8F79
 707+ 8F79 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F7A 3A 3E 88         ld a,(Columns)
 709+ 8F7D 47               ld b,a
 710+ 8F7E FD 7E 00     2 ld a,(iy)
 711+ 8F81 BE               cp (hl)
 712+ 8F82 28 01            jr z,1F
 713+ 8F84
 714+ 8F84 1C               inc e
 715+ 8F85
 716+ 8F85 23           1 inc hl
 717+ 8F86 FD 23            inc iy
 718+ 8F88 10 F4            djnz 2B
 719+ 8F8A C1               pop bc
 720+ 8F8B C9               ret
 721+ 8F8C
 722+ 8F8C              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F8C              ;
 724+ 8F8C              ;   13/03/23
 725+ 8F8C              ;
 726+ 8F8C              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F8C              ;
 728+ 8F8C              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F8C
 730+ 8F8C 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F8F 7E               ld a,(hl)
 732+ 8F90 A7               and a
 733+ 8F91 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F92
 735+ 8F92 44               ld b,h
 736+ 8F93 4D               ld c,l
 737+ 8F94 2A 97 88         ld hl,(Stack_snapshot_disparos)
 738+ 8F97 E5               push hl
 739+ 8F98 A7               and a
 740+ 8F99 ED 42            sbc hl,bc
 741+ 8F9B E5               push hl
 742+ 8F9C C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F9D
 744+ 8F9D E1               pop hl
 745+ 8F9E 54               ld d,h
 746+ 8F9F 5D               ld e,l
 747+ 8FA0 1B               dec de
 748+ 8FA1 ED B8            lddr                                                ; Limpiamos.
 749+ 8FA3
 750+ 8FA3 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8FA6 22 97 88         ld (Stack_snapshot_disparos),hl
 752+ 8FA9
 753+ 8FA9 C9               ret
 754+ 8FAA
 755+ 8FAA              ; -------------------------------------------------------------------------------------------------------------
 756+ 8FAA              ;
 757+ 8FAA              ;   18/07/23
 758+ 8FAA              ;
 759+ 8FAA
 760+ 8FAA              Motor_de_disparos
 761+ 8FAA
 762+ 8FAA              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8FAA
 764+ 8FAA 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8FAD 2A A2 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8FB0
 767+ 8FB0 CD C2 8B     2 call Extrae_address
 768+ 8FB3 7E               ld a,(hl)
 769+ 8FB4 A7               and a
 770+ 8FB5 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8FB7
 772+ 8FB7              ; ----- ----- ----- ----- ----- -----
 773+ 8FB7
 774+ 8FB7 C5               push bc
 775+ 8FB8 CD 7C 90         call foto_disparo_a_borrar
 776+ 8FBB
 777+ 8FBB              ; Existe colisión con este disparo???
 778+ 8FBB
 779+ 8FBB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8FBC 7E               ld a,(hl)
 781+ 8FBD 2B               dec hl
 782+ 8FBE E6 01            and 1
 783+ 8FC0 28 1D            jr z,9F
 784+ 8FC2
 785+ 8FC2              ;   En este punto:
 786+ 8FC2              ;
 787+ 8FC2              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8FC2              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8FC2              ;   _con la entidad).
 790+ 8FC2              ;
 791+ 8FC2              ;   Disparo_2A defw 0                                ; Control.
 792+ 8FC2              ;    defw 0                                          ; Puntero objeto.
 793+ 8FC2              ;    defw 0                                          ; Puntero de impresión.
 794+ 8FC2              ;    defw 0                                          ; Rutina de impresión.
 795+ 8FC2
 796+ 8FC2 E5               push hl
 797+ 8FC3
 798+ 8FC3 06 04            ld b,4
 799+ 8FC5 23           19 inc hl
 800+ 8FC6 10 FD            djnz 19B
 801+ 8FC8
 802+ 8FC8 CD C2 8B         call Extrae_address
 803+ 8FCB CD D6 9B         call Genera_coordenadas_disparo
 804+ 8FCE
 805+ 8FCE              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FCE
 807+ 8FCE 21 A7 88         ld hl,Coordenadas_disparo_certero
 808+ 8FD1 72               ld (hl),d
 809+ 8FD2 23               inc hl
 810+ 8FD3 73               ld (hl),e
 811+ 8FD4
 812+ 8FD4              ; Elimino el disparo de la base de datos.
 813+ 8FD4
 814+ 8FD4 E1               pop hl
 815+ 8FD5 CD FB 90         call Elimina_disparo_de_base_de_datos
 816+ 8FD8 21 A4 88         ld hl,Impacto2
 817+ 8FDB CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FDD
 819+ 8FDD 18 06            jr 11F
 820+ 8FDF
 821+ 8FDF CD A5 90     9 call Mueve_disparo
 822+ 8FE2 CD 7C 90         call foto_disparo_a_borrar
 823+ 8FE5
 824+ 8FE5 C1           11 pop bc
 825+ 8FE6 18 04            jr 7F
 826+ 8FE8
 827+ 8FE8              ; ----- ----- ----- ----- ----- -----
 828+ 8FE8
 829+ 8FE8 ED 42        1 sbc hl,bc
 830+ 8FEA 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FEC
 832+ 8FEC 2A A2 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FEF 23               inc hl
 834+ 8FF0 23               inc hl
 835+ 8FF1 22 A2 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FF4 18 BA            jr 2B
 837+ 8FF6
 838+ 8FF6 CD 47 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FF9              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FF9
 841+ 8FF9              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FF9
 843+ 8FF9 01 6E 85         ld bc,Disparo_11
 844+ 8FFC 2A A0 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FFF
 846+ 8FFF CD C2 8B     5 call Extrae_address
 847+ 9002 7E               ld a,(hl)
 848+ 9003 A7               and a
 849+ 9004 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9006
 851+ 9006              ; ----- ----- ----- ----- ----- -----
 852+ 9006
 853+ 9006 C5               push bc
 854+ 9007 CD 7C 90         call foto_disparo_a_borrar
 855+ 900A
 856+ 900A              ; Existe colisión con este disparo???
 857+ 900A
 858+ 900A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 900B 7E               ld a,(hl)
 860+ 900C 2B               dec hl
 861+ 900D E6 01            and 1
 862+ 900F 28 4D            jr z,10F
 863+ 9011
 864+ 9011              ;! La colisión se produce con Amadeus???
 865+ 9011              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9011
 867+ 9011 E5               push hl
 868+ 9012
 869+ 9012 06 04            ld b,4
 870+ 9014 23           16 inc hl
 871+ 9015 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9017
 873+ 9017 CD C2 8B         call Extrae_address
 874+ 901A CD D6 9B         call Genera_coordenadas_disparo
 875+ 901D
 876+ 901D 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 901E FE 16            cp $16
 878+ 9020 38 2A            jr c,15F
 879+ 9022
 880+ 9022
 881+ 9022              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9022
 883+ 9022 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9023
 885+ 9023              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9023
 887+ 9023 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 9026
 889+ 9026              ; Coordenada X de Amadeus en D.
 890+ 9026
 891+ 9026 7D               ld a,l
 892+ 9027 E6 1F            and $1F
 893+ 9029 57               ld d,a
 894+ 902A
 895+ 902A 21 8A 85         ld hl,Amadeus_db+8
 896+ 902D 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 902E
 898+ 902E 21 A9 88         ld hl,Coordenadas_X_Amadeus
 899+ 9031 CD F7 8E         call Guarda_coordenadas_X
 900+ 9034
 901+ 9034 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9035
 903+ 9035              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9035
 905+ 9035 06 02            ld b,2
 906+ 9037 C5           20 push bc
 907+ 9038
 908+ 9038 06 03            ld b,3
 909+ 903A 21 A9 88         ld hl,Coordenadas_X_Amadeus
 910+ 903D 7E           18 ld a,(hl)
 911+ 903E BA               cp d
 912+ 903F 20 04            jr nz,17F
 913+ 9041
 914+ 9041              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9041
 916+ 9041 C1               pop bc
 917+ 9042 E1               pop hl
 918+ 9043 18 0D            jr 14F
 919+ 9045
 920+ 9045 23           17 inc hl
 921+ 9046 10 F5            djnz 18B
 922+ 9048
 923+ 9048 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9049
 925+ 9049 C1               pop bc
 926+ 904A 10 EB            djnz 20B
 927+ 904C
 928+ 904C
 929+ 904C              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 904C              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 904C
 932+ 904C E1           15 pop hl
 933+ 904D 23               inc hl
 934+ 904E 35               dec (hl)
 935+ 904F 2B               dec hl
 936+ 9050 18 0C            jr 10F
 937+ 9052
 938+ 9052              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9052              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9052
 941+ 9052 E5           14 push hl
 942+ 9053 CD FB 90         call Elimina_disparo_de_base_de_datos
 943+ 9056 21 A4 88         ld hl,Impacto2
 944+ 9059 CB CE            set 1,(hl)
 945+ 905B E1               pop hl
 946+ 905C 18 06            jr 12F
 947+ 905E
 948+ 905E              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 905E
 950+ 905E CD A5 90     10 call Mueve_disparo
 951+ 9061 CD 7C 90         call foto_disparo_a_borrar
 952+ 9064 C1           12 pop bc
 953+ 9065
 954+ 9065 18 04            jr 8F
 955+ 9067
 956+ 9067              ; ----- ----- ----- ----- ----- -----
 957+ 9067
 958+ 9067 ED 42        4 sbc hl,bc
 959+ 9069 28 0A            jr z,6F
 960+ 906B
 961+ 906B 2A A0 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 906E 23               inc hl
 963+ 906F 23               inc hl
 964+ 9070 22 A0 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9073 18 8A            jr 5B
 966+ 9075
 967+ 9075 CD 40 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9078 CD 00 8F         call Limpia_Coordenadas_X
 969+ 907B C9               ret
 970+ 907C
 971+ 907C              ; ------------------------------------------------------------------
 972+ 907C
 973+ 907C              foto_disparo_a_borrar
 974+ 907C
 975+ 907C 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 907D A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 907E C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 907F
 979+ 907F E5               push hl
 980+ 9080 23               inc hl
 981+ 9081 23               inc hl
 982+ 9082 ED 73 8F 88      ld (Stack),sp
 983+ 9086 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9087 FD E1            pop iy
 985+ 9089 DD E1            pop ix
 986+ 908B E1               pop hl
 987+ 908C ED 7B 8F 88      ld sp,(Stack)
 988+ 9090 3A 7E 88         ld a,(Ctrl_1)
 989+ 9093 CB C7            set 0,a
 990+ 9095 32 7E 88         ld (Ctrl_1),a
 991+ 9098 CD 16 71         call Guarda_foto_registros
 992+ 909B 3A 7E 88         ld a,(Ctrl_1)
 993+ 909E CB 87            res 0,a
 994+ 90A0 32 7E 88         ld (Ctrl_1),a
 995+ 90A3 E1               pop hl
 996+ 90A4 C9               ret
 997+ 90A5
 998+ 90A5              ;---------------------------------------------------
 999+ 90A5              ;
1000+ 90A5              ;   18/07/23
1001+ 90A5              ;
1002+ 90A5
1003+ 90A5              Mueve_disparo
1004+ 90A5
1005+ 90A5              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 90A5              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 90A5              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 90A5
1009+ 90A5 E5               push hl
1010+ 90A6
1011+ 90A6 7E               ld a,(hl)
1012+ 90A7
1013+ 90A7 06 04            ld b,4
1014+ 90A9 23           1 inc hl
1015+ 90AA 10 FD            djnz 1B
1016+ 90AC
1017+ 90AC              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 90AC
1019+ 90AC CD C2 8B         call Extrae_address
1020+ 90AF
1021+ 90AF E6 01            and 1
1022+ 90B1 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 90B3
1024+ 90B3              ; Disparo hacia arriba, (Amadeus).
1025+ 90B3
1026+ 90B3              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 90B3              ; _ de la dificultad.
1028+ 90B3
1029+ 90B3 CD 0E 95         call PreviousScan
1030+ 90B6 CD 0E 95         call PreviousScan
1031+ 90B9 CD 0E 95         call PreviousScan
1032+ 90BC CD 0E 95         call PreviousScan
1033+ 90BF
1034+ 90BF              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 90BF
1036+ 90BF 7C               ld a,h
1037+ 90C0 FE 40            cp $40
1038+ 90C2 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 90C4
1040+ 90C4              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 90C4
1042+ 90C4 EB               ex de,hl
1043+ 90C5 06 04            ld b,4
1044+ 90C7 2B           6 dec hl
1045+ 90C8 10 FD            djnz 6B
1046+ 90CA
1047+ 90CA CD FB 90         call Elimina_disparo_de_base_de_datos
1048+ 90CD E1               pop hl
1049+ 90CE 18 10            jr 7F
1050+ 90D0
1051+ 90D0              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90D0              ; HL contiene el puntero de impresión del disparo.
1053+ 90D0              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90D0
1055+ 90D0 D5           3 push de
1056+ 90D1 C5               push bc
1057+ 90D2
1058+ 90D2 CD 8E 8E         call Comprueba_Colision
1059+ 90D5
1060+ 90D5              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90D5
1062+ 90D5 78               ld a,b
1063+ 90D6
1064+ 90D6 C1               pop bc
1065+ 90D7 D1               pop de
1066+ 90D8
1067+ 90D8 EB               ex de,hl
1068+ 90D9
1069+ 90D9 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90DA 23               inc hl                                      ; _ movimiento.
1071+ 90DB 72               ld (hl),d
1072+ 90DC
1073+ 90DC E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90DD
1075+ 90DD 23               inc hl                                      ; _ en curso.
1076+ 90DE 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90DF 2B               dec hl
1078+ 90E0
1079+ 90E0 C9           7 ret
1080+ 90E1
1081+ 90E1              ; Disparo hacia abajo, (Entidad).
1082+ 90E1
1083+ 90E1 3A AF 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 90E4 47               ld b,a
1085+ 90E5
1086+ 90E5 CD FF 94     4 call NextScan
1087+ 90E8 10 FB            djnz 4B
1088+ 90EA
1089+ 90EA              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90EA
1091+ 90EA 7C               ld a,h
1092+ 90EB FE 58            cp $58
1093+ 90ED 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90EF
1095+ 90EF EB               ex de,hl
1096+ 90F0 06 04            ld b,4
1097+ 90F2 2B           5 dec hl
1098+ 90F3 10 FD            djnz 5B
1099+ 90F5
1100+ 90F5 CD FB 90         call Elimina_disparo_de_base_de_datos
1101+ 90F8 E1               pop hl
1102+ 90F9 18 E5            jr 7B
1103+ 90FB
1104+ 90FB              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90FB
1106+ 90FB 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90FE AF               xor a
1108+ 90FF 77               ld (hl),a
1109+ 9100 54               ld d,h
1110+ 9101 5D               ld e,l
1111+ 9102 13               inc de
1112+ 9103 ED B0            ldir
1113+ 9105 C9               ret
1114+ 9106
1115+ 9106              ; -----------------------------------------------------------------
1116+ 9106              ;
1117+ 9106              ;   7/12/23
1118+ 9106              ;
1119+ 9106
1120+ 9106 3A A4 88     Selector_de_impactos ld a,(Impacto2)
1121+ 9109 A7               and a
1122+ 910A C8               ret z
1123+ 910B
1124+ 910B              ; Analizamos si hay impacto por disparos.
1125+ 910B
1126+ 910B              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 910B
1128+ 910B CB 4F            bit 1,a
1129+ 910D 28 07            jr z,1F
1130+ 910F
1131+ 910F 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9112 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9114 18 08            jr 2F
1134+ 9116
1135+ 9116 CB 47        1 bit 0,a
1136+ 9118 C8               ret z
1137+ 9119
1138+ 9119              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9119
1140+ 9119 21 7E 88         ld hl,Ctrl_1
1141+ 911C CB D6            set 2,(hl)
1142+ 911E
1143+ 911E C9           2 ret
1144+ 911F
1145+ 911F              ; -----------------------------------------------------------------
1146+ 911F              ;
1147+ 911F              ;   25/04/23
1148+ 911F              ;
1149+ 911F
1150+ 911F              Determina_resultado_comparativa
1151+ 911F
1152+ 911F              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 911F              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 911F              ;
1155+ 911F              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 911F              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 911F              ;
1158+ 911F              ;   SBC HL,DE
1159+ 911F
1160+ 911F              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 911F              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 911F
1163+ 911F              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 911F              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 911F
1166+ 911F
1167+ 911F 3A 51 88         ld a,(Cuad_objeto)
1168+ 9122 FE 02            cp 2
1169+ 9124 28 26            jr z,2F
1170+ 9126 38 24            jr c,2F
1171+ 9128
1172+ 9128              ; Cuadrantes 3º y 4º
1173+ 9128
1174+ 9128 E6 01            and 1
1175+ 912A 28 10            jr z,4F
1176+ 912C
1177+ 912C              ; Cuadrante 3º
1178+ 912C
1179+ 912C 7C               ld a,h
1180+ 912D 06 00            ld b,0
1181+ 912F
1182+ 912F CD BA 91         call Compara_cositas_H3
1183+ 9132
1184+ 9132 04               inc b
1185+ 9133 05               dec b
1186+ 9134 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9135
1188+ 9135 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9136 06 00            ld b,0
1190+ 9138
1191+ 9138 CD CC 91         call Compara_cositas_L3
1192+ 913B C9               ret
1193+ 913C
1194+ 913C              ; Cuadrante 4º
1195+ 913C
1196+ 913C 7C           4 ld a,h
1197+ 913D 06 00            ld b,0
1198+ 913F
1199+ 913F CD DE 91         call Compara_cositas_H4
1200+ 9142
1201+ 9142 04               inc b
1202+ 9143 05               dec b
1203+ 9144 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9145
1205+ 9145 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9146 06 00            ld b,0
1207+ 9148
1208+ 9148 CD F4 91         call Compara_cositas_L4
1209+ 914B C9               ret
1210+ 914C
1211+ 914C              ; Cuadrantes 1º y 2º.
1212+ 914C
1213+ 914C 28 10        2 jr z,3F
1214+ 914E
1215+ 914E              ; 1er Cuadrante
1216+ 914E
1217+ 914E 7C               ld a,h
1218+ 914F 06 00            ld b,0
1219+ 9151
1220+ 9151 CD 92 91         call Compara_cositas_H1
1221+ 9154
1222+ 9154 04               inc b
1223+ 9155 05               dec b
1224+ 9156 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9157
1226+ 9157 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9158 06 00            ld b,0
1228+ 915A
1229+ 915A CD A8 91         call Compara_cositas_L1
1230+ 915D C9               ret
1231+ 915E
1232+ 915E
1233+ 915E              ; 2º Cuadrante
1234+ 915E
1235+ 915E 7C           3 ld a,h
1236+ 915F 06 00            ld b,0
1237+ 9161
1238+ 9161 CD 6E 91         call Compara_cositas_H2
1239+ 9164
1240+ 9164 04               inc b
1241+ 9165 05               dec b
1242+ 9166 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9167
1244+ 9167 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9168 06 00            ld b,0
1246+ 916A
1247+ 916A CD 80 91         call Compara_cositas_L2
1248+ 916D C9               ret
1249+ 916E
1250+ 916E A7           Compara_cositas_H2 and a
1251+ 916F 28 0D            jr z,1F
1252+ 9171              ;    cp $fd
1253+ 9171              ;    jr z,1F
1254+ 9171              ;    cp $fe
1255+ 9171              ;    jr z,1F
1256+ 9171 FE FF            cp $ff
1257+ 9173 28 09            jr z,1F
1258+ 9175 FE 01            cp $01
1259+ 9177 28 05            jr z,1F
1260+ 9179 FE 02            cp $02
1261+ 917B 28 01            jr z,1F
1262+ 917D C0               ret nz
1263+ 917E 04           1 inc b
1264+ 917F C9               ret
1265+ 9180
1266+ 9180 A7           Compara_cositas_L2 and a
1267+ 9181 28 0D            jr z,1F
1268+ 9183              ;    cp $fd
1269+ 9183              ;    jr z,1F
1270+ 9183 FE FE            cp $fe
1271+ 9185 28 09            jr z,1F
1272+ 9187 FE FF            cp $ff
1273+ 9189 28 05            jr z,1F
1274+ 918B FE 01            cp $01
1275+ 918D 28 01            jr z,1F
1276+ 918F              ;    cp $02
1277+ 918F              ;    jr z,1F
1278+ 918F C0               ret nz
1279+ 9190 04           1 inc b
1280+ 9191 C9               ret
1281+ 9192
1282+ 9192 A7           Compara_cositas_H1 and a
1283+ 9193 28 11            jr z,1F
1284+ 9195              ;    cp $fd
1285+ 9195              ;    jr z,1F
1286+ 9195              ;    cp $fe
1287+ 9195              ;    jr z,1F
1288+ 9195 FE FF            cp $ff
1289+ 9197 28 0D            jr z,1F
1290+ 9199 FE 01            cp $01
1291+ 919B 28 09            jr z,1F
1292+ 919D FE 02            cp $02
1293+ 919F 28 05            jr z,1F
1294+ 91A1 FE 03            cp $03
1295+ 91A3 28 01            jr z,1F
1296+ 91A5 C0               ret nz
1297+ 91A6 04           1 inc b
1298+ 91A7 C9               ret
1299+ 91A8
1300+ 91A8 A7           Compara_cositas_L1 and a
1301+ 91A9 28 0D            jr z,1F
1302+ 91AB              ;    cp $fd
1303+ 91AB              ;    jr z,1F
1304+ 91AB              ;    cp $fe
1305+ 91AB              ;    jr z,1F
1306+ 91AB              ;    cp $ff
1307+ 91AB              ;    jr z,1F
1308+ 91AB FE 01            cp $01
1309+ 91AD 28 09            jr z,1F
1310+ 91AF FE 02            cp $02
1311+ 91B1 28 05            jr z,1F
1312+ 91B3 FE 03            cp $03
1313+ 91B5 28 01            jr z,1F
1314+ 91B7 C0               ret nz
1315+ 91B8 04           1 inc b
1316+ 91B9 C9               ret
1317+ 91BA
1318+ 91BA A7           Compara_cositas_H3 and a
1319+ 91BB 28 0D            jr z,1F
1320+ 91BD              ;    cp $fd
1321+ 91BD              ;    jr z,1F
1322+ 91BD FE FE            cp $fe
1323+ 91BF 28 09            jr z,1F
1324+ 91C1 FE FF            cp $ff
1325+ 91C3 28 05            jr z,1F
1326+ 91C5 FE 01            cp $01
1327+ 91C7 28 01            jr z,1F
1328+ 91C9              ;    cp $02
1329+ 91C9              ;    jr z,1F
1330+ 91C9              ;    cp $03
1331+ 91C9              ;    jr z,1F
1332+ 91C9 C0               ret nz
1333+ 91CA 04           1 inc b
1334+ 91CB C9               ret
1335+ 91CC
1336+ 91CC A7           Compara_cositas_L3 and a
1337+ 91CD 28 0D            jr z,1F
1338+ 91CF              ;    cp $fd
1339+ 91CF              ;    jr z,1F
1340+ 91CF              ;    cp $fe
1341+ 91CF              ;    jr z,1F
1342+ 91CF              ;    cp $ff
1343+ 91CF              ;    jr z,1F
1344+ 91CF FE 01            cp $01
1345+ 91D1 28 09            jr z,1F
1346+ 91D3 FE 02            cp $02
1347+ 91D5 28 05            jr z,1F
1348+ 91D7 FE 03            cp $03
1349+ 91D9 28 01            jr z,1F
1350+ 91DB C0               ret nz
1351+ 91DC 04           1 inc b
1352+ 91DD C9               ret
1353+ 91DE
1354+ 91DE A7           Compara_cositas_H4 and a
1355+ 91DF 28 11            jr z,1F
1356+ 91E1 FE FD            cp $fd
1357+ 91E3 28 0D            jr z,1F
1358+ 91E5 FE FE            cp $fe
1359+ 91E7 28 09            jr z,1F
1360+ 91E9 FE FF            cp $ff
1361+ 91EB 28 05            jr z,1F
1362+ 91ED FE 01            cp $01
1363+ 91EF 28 01            jr z,1F
1364+ 91F1              ;    cp $02
1365+ 91F1              ;    jr z,1F
1366+ 91F1              ;    cp $03
1367+ 91F1              ;    jr z,1F
1368+ 91F1 C0               ret nz
1369+ 91F2 04           1 inc b
1370+ 91F3 C9               ret
1371+ 91F4
1372+ 91F4 A7           Compara_cositas_L4 and a
1373+ 91F5 28 0D            jr z,1F
1374+ 91F7              ;    cp $fd
1375+ 91F7              ;    jr z,1F
1376+ 91F7 FE FE            cp $fe
1377+ 91F9 28 09            jr z,1F
1378+ 91FB FE FF            cp $ff
1379+ 91FD 28 05            jr z,1F
1380+ 91FF FE 01            cp $01
1381+ 9201 28 01            jr z,1F
1382+ 9203              ;    cp $02
1383+ 9203              ;    jr z,1F
1384+ 9203              ;    cp $03
1385+ 9203              ;    jr z,1F
1386+ 9203 C0               ret nz
1387+ 9204 04           1 inc b
1388+ 9205 C9               ret
# file closed: Disparo.asm
1761  9206              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9206              ; ******************************************************************************************************************************************************************************************
   2+ 9206              ;
   3+ 9206              ; 26/06/23
   4+ 9206              ;
   5+ 9206              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9206
   7+ 9206              Draw
   8+ 9206
   9+ 9206 CD F3 94     	call Prepara_draw
  10+ 9209 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 920A A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 920B 28 05        	jr z,2F
  13+ 920D
  14+ 920D 3A 51 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9210 18 0C        	jr 1F
  16+ 9212
  17+ 9212 2A 4F 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9215 22 3F 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9218 CD A7 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 921B              ;													; _la esquina superior izquierda de la pantalla.
  21+ 921B
  22+ 921B CD 67 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 921E
  24+ 921E 3A 5F 88     1 ld a,(Ctrl_0)
  25+ 9221 CB 6F        	bit 5,a
  26+ 9223 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9225
  28+ 9225 CD 3D 92     	call Comprueba_limite_horizontal
  29+ 9228 CD CD 92     	call Comprueba_limite_vertical
  30+ 922B
  31+ 922B              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 922B              ; -----------------------
  33+ 922B              ; -----------------------
  34+ 922B              ; -----------------------
  35+ 922B
  36+ 922B CD 23 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 922E CD 5A 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9231 CD B9 94     	call Define_rutina_de_impresion
  39+ 9234
  40+ 9234 3A 5F 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 9237 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 9239 32 5F 88     	ld (Ctrl_0),a
  43+ 923C
  44+ 923C C9           	ret
  45+ 923D
  46+ 923D              ; *******************************************************************************************************************************************************************************************
  47+ 923D              ;	21/01/23
  48+ 923D              ;
  49+ 923D              ; 	Comprueba_limite_horizontal.
  50+ 923D              ;
  51+ 923D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 923D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 923D              ;
  54+ 923D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 923D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 923D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 923D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 923D
  59+ 923D
  60+ 923D
  61+ 923D 3A 5F 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9240 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9242 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9244 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 9246 32 5F 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 9249 18 09            jr 6F
  67+ 924B CB 5F        1 bit 3,a
  68+ 924D 28 0A            jr z,2F
  69+ 924F E6 F7            and $f7
  70+ 9251 32 5F 88         ld (Ctrl_0),a
  71+ 9254 CD A7 93     6 call Inicializacion
  72+ 9257 18 5B            jr 5F
  73+ 9259 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 925A
  75+ 925A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 925A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 925A
  78+ 925A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 925B 2A 61 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 925E CD 12 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9261 67           	ld h,a
  82+ 9262 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9263 CD 12 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9266 67           	ld h,a
  85+ 9267 A7           	and a
  86+ 9268 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 926A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 926B 3A 51 88     	ld a,(Cuad_objeto)
  89+ 926E FE 02        	cp 2
  90+ 9270 38 1E        	jr c,3F
  91+ 9272 28 1C        	jr z,3F
  92+ 9274 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9275 28 23            jr z,7F
  94+ 9277 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9279 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 927B E1           	pop hl
  97+ 927C
  98+ 927C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 927C              ; _para indicar con E="2" en caso necesario.
 100+ 927C
 101+ 927C E5               push hl
 102+ 927D C5               push bc
 103+ 927E CD 12 98     	call calcula_tercio
 104+ 9281 FE 01        	cp 1
 105+ 9283 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9285 CD B5 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9288 28 26            jr z,9F
 108+ 928A 38 24            jr c,9F
 109+ 928C 1E 00        11 ld e,0
 110+ 928E 18 22            jr 8F
 111+ 9290 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9291 28 07        	jr z, 7F
 113+ 9293 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9295 1E 00         	ld e,0
 115+ 9297 E1           	pop hl
 116+ 9298 18 04        	jr 4F
 117+ 929A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 929C 18 15            jr 10F
 119+ 929E
 120+ 929E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 929E              ; _para indicar con E="2" en caso necesario.
 122+ 929E
 123+ 929E E5           4 push hl
 124+ 929F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 92A0 CD 12 98     	call calcula_tercio
 126+ 92A3 FE 01        	cp 1
 127+ 92A5 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 92A7 CD B5 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 92AA 28 04            jr z,9F
 130+ 92AC 30 02            jr nc,9F
 131+ 92AE 18 02        	jr 8F
 132+ 92B0 1E 02        9 ld e,2
 133+ 92B2 C1           8 pop bc
 134+ 92B3 E1           10 pop hl
 135+ 92B4 C9           5 ret
 136+ 92B5
 137+ 92B5              ; --------------------
 138+ 92B5              ;
 139+ 92B5              ; 25/08/22
 140+ 92B5
 141+ 92B5 CD 12 98     Comprueba_centro call calcula_tercio
 142+ 92B8 67               ld h,a
 143+ 92B9 08           	ex af,af
 144+ 92BA FE 02        	cp 2
 145+ 92BC 38 07        	jr c,1F
 146+ 92BE 28 05        	jr z,1F
 147+ 92C0 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 92C3 18 03        	jr 2F
 149+ 92C5 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 92C8 08           2 ex af,af
 151+ 92C9 A7               and a
 152+ 92CA ED 42            sbc hl,bc
 153+ 92CC C9               ret
 154+ 92CD
 155+ 92CD              ; *********************************************************************************************************************************************************************************************
 156+ 92CD              ;
 157+ 92CD              ;   16/8/22
 158+ 92CD              ;
 159+ 92CD              ;	Comprueba_limite_vertical
 160+ 92CD              ;
 161+ 92CD              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 92CD              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 92CD              ;
 164+ 92CD
 165+ 92CD 2A 3F 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 92D0 7D           	ld a,l
 167+ 92D1 E6 1F        	and $1F
 168+ 92D3 57           	ld d,a
 169+ 92D4 3A 63 88     	ld a,(Limite_vertical)
 170+ 92D7 BA           	cp d 											; Límite - Posición.
 171+ 92D8 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 92D9 3A 51 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 92DC CB 47        	bit 0,a
 174+ 92DE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 92E0
 176+ 92E0              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 92E0
 178+ 92E0 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 92E1 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 92E3
 181+ 92E3              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 92E3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 92E3
 184+ 92E3 3A 43 88         ld a,(Coordenada_X)
 185+ 92E6 16 0F            ld d,Centro_izquierda
 186+ 92E8 A7               and a
 187+ 92E9 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 92EA 28 1E            jr z,3F
 189+ 92EC 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 92EE              ;                                                    ; _salimos sin modificar nada.
 191+ 92EE 18 0E            jr 2F
 192+ 92F0 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 92F1 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 92F3
 195+ 92F3              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 92F3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 92F3
 198+ 92F3 3A 43 88         ld a,(Coordenada_X)
 199+ 92F6 16 10            ld d,Centro_derecha
 200+ 92F8 A7               and a
 201+ 92F9 92               sub d
 202+ 92FA 28 0E            jr z,3F
 203+ 92FC 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 92FE              ;                                                    ; _salimos sin modificar nada.
 205+ 92FE CB 43        2 bit 0,e
 206+ 9300 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9302 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9303 CD 97 93         call Modificaccionne
 209+ 9306 C1           	pop bc
 210+ 9307 CD A7 93         call Inicializacion
 211+ 930A C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 930B
 213+ 930B              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 930B
 215+ 930B C5           4 push bc
 216+ 930C 01 3E 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 930F 0A           	ld a,(bc)
 218+ 9310 3D           	dec a
 219+ 9311 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9312 7D           	ld a,l
 221+ 9313 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9314 CB 47        	bit 0,a
 223+ 9316 28 03        	jr z,5F
 224+ 9318 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9319 18 2E        	jr 7F
 226+ 931B
 227+ 931B              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 931B
 229+ 931B 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 931C F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 931D 3A 5F 88     	ld a,(Ctrl_0)
 232+ 9320 CB 4F        	bit 1,a
 233+ 9322 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9324 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9325
 236+ 9325              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9325
 238+ 9325 1C               inc e
 239+ 9326 1D               dec e
 240+ 9327 20 07            jr nz,12F
 241+ 9329 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 932A 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 932B 22 3F 88     	ld (Posicion_actual),hl
 244+ 932E 18 44        13 jr 9F
 245+ 9330 CB 43        12 bit 0,e
 246+ 9332 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9334              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9334 C1           	pop bc
 249+ 9335 18 D3        	jr 3B
 250+ 9337 80           14 add b
 251+ 9338 6F               ld l,a
 252+ 9339 22 3F 88     	ld (Posicion_actual),hl
 253+ 933C CD 97 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 933F 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9341 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9343 32 5F 88         ld (Ctrl_0),a
 257+ 9346 F1           	pop af
 258+ 9347 18 2B        	jr 9F
 259+ 9349
 260+ 9349              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9349
 262+ 9349 F5           7 push af
 263+ 934A 3A 5F 88     	ld a,(Ctrl_0)
 264+ 934D CB 47        	bit 0,a
 265+ 934F 20 1D        	jr nz,8F
 266+ 9351 F1           	pop af
 267+ 9352
 268+ 9352              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9352
 270+ 9352 1C           	inc e
 271+ 9353 1D               dec e
 272+ 9354 20 07            jr nz,10F
 273+ 9356 90           	sub b
 274+ 9357 6F               ld l,a
 275+ 9358 22 3F 88     	ld (Posicion_actual),hl
 276+ 935B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 935D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 935D CB 43        10 bit 0,e
 279+ 935F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9361              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9361 C1           	pop bc
 282+ 9362 18 A6        	jr 3B
 283+ 9364 90           16 sub b
 284+ 9365 6F               ld l,a
 285+ 9366 22 3F 88     	ld (Posicion_actual),hl
 286+ 9369 CD 97 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 936C 18 06            jr 9F
 288+ 936E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9370 32 5F 88         ld (Ctrl_0),a
 290+ 9373 F1           	pop af
 291+ 9374 C1           9 pop bc
 292+ 9375 1E 00        	ld e,0
 293+ 9377 CD A7 93         call Inicializacion
 294+ 937A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 937B 08           	ex af,af
 296+ 937C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 937D 18 8B            jr 3B
 298+ 937F
 299+ 937F              ; --------------------
 300+ 937F
 301+ 937F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9381 CD 0E 95     1 call PreviousScan
 303+ 9384 10 FB            djnz 1B
 304+ 9386 22 3F 88     	ld (Posicion_actual),hl
 305+ 9389 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 938A C9           	ret
 307+ 938B
 308+ 938B              ; --------------------
 309+ 938B
 310+ 938B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 938D CD FF 94     1 call NextScan
 312+ 9390 10 FB            djnz 1B
 313+ 9392 22 3F 88     	ld (Posicion_actual),hl
 314+ 9395 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9396 C9           	ret
 316+ 9397
 317+ 9397              ; --------------------
 318+ 9397              ;
 319+ 9397              ;	22/01/23
 320+ 9397              ;
 321+ 9397              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9397              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9397              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9397
 325+ 9397
 326+ 9397              Modificaccionne
 327+ 9397
 328+ 9397 3A 51 88     	ld a,(Cuad_objeto)
 329+ 939A FE 02        	cp 2
 330+ 939C CC 7F 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 939F DC 7F 93         call c,Modifica_Pos_actual
 332+ 93A2 C8           	ret z
 333+ 93A3 CD 8B 93         call Modifica_Pos_actual2
 334+ 93A6 C9               ret
 335+ 93A7
 336+ 93A7              ; *************************************************************************************************************************************************************************************************
 337+ 93A7              ;
 338+ 93A7              ;	13/8/22
 339+ 93A7              ;
 340+ 93A7              ;	Inicializacion
 341+ 93A7              ;
 342+ 93A7              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 93A7              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 93A7              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 93A7              ;
 346+ 93A7              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 93A7              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 93A7              ;	_ desaparece/aparece.
 349+ 93A7
 350+ 93A7              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 93A7              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 93A7              ;
 353+ 93A7              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 93A7              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 93A7              ; 		   [E] ="0"
 356+ 93A7
 357+ 93A7              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 93A7
 359+ 93A7 CD 12 98     Inicializacion call calcula_tercio
 360+ 93AA 28 36        	jr z,primit
 361+ 93AC E6 02        	and 2
 362+ 93AE 20 07        	jr nz,segmit
 363+ 93B0 7D           	ld a,l
 364+ 93B1 FE 7F        	cp $7f
 365+ 93B3 38 2D        	jr c,primit
 366+ 93B5 28 2B        	jr z,primit
 367+ 93B7 CD 1D 94     segmit call column
 368+ 93BA 38 13        	jr c,tercuad
 369+ 93BC 3E 04        cuarcuad ld a,4
 370+ 93BE 32 51 88     	ld (Cuad_objeto),a
 371+ 93C1 21 20 48     	ld hl,$4820
 372+ 93C4 22 61 88     	ld (Limite_horizontal),hl
 373+ 93C7 21 63 88     	ld hl,Limite_vertical
 374+ 93CA 36 0D        	ld (hl),$0d
 375+ 93CC 08           	ex af,af
 376+ 93CD 18 3C        	jr 1F
 377+ 93CF              tercuad
 378+ 93CF 3E 03        	ld a,3
 379+ 93D1 32 51 88     	ld (Cuad_objeto),a
 380+ 93D4 21 20 48     	ld hl,$4820
 381+ 93D7 22 61 88     	ld (Limite_horizontal),hl
 382+ 93DA 21 63 88     	ld hl,Limite_vertical
 383+ 93DD 36 12        	ld (hl),$12
 384+ 93DF 08           	ex af,af
 385+ 93E0 18 29        	jr 1F
 386+ 93E2 CD 1D 94     primit call column
 387+ 93E5 38 13        	jr c, primcuad
 388+ 93E7              segcuad
 389+ 93E7 3E 02        	ld a,2
 390+ 93E9 32 51 88     	ld (Cuad_objeto),a
 391+ 93EC 21 C0 4F     	ld hl,$4fc0
 392+ 93EF 22 61 88     	ld (Limite_horizontal),hl
 393+ 93F2 21 63 88     	ld hl,Limite_vertical
 394+ 93F5 36 0D        	ld (hl),$0d
 395+ 93F7 08           	ex af,af
 396+ 93F8 18 11        	jr 1F
 397+ 93FA              primcuad
 398+ 93FA 3E 01        	ld a,1
 399+ 93FC 32 51 88     	ld (Cuad_objeto),a
 400+ 93FF 21 C0 4F     	ld hl,$4fc0
 401+ 9402 22 61 88     	ld (Limite_horizontal),hl
 402+ 9405 21 63 88     	ld hl,Limite_vertical
 403+ 9408 36 12        	ld (hl),$12
 404+ 940A 08           	ex af,af
 405+ 940B
 406+ 940B C5           1 push bc
 407+ 940C E5           	push hl
 408+ 940D D5           	push de
 409+ 940E
 410+ 940E 2A 3F 88     	ld hl,(Posicion_actual)
 411+ 9411 CD AA 9B     	call Genera_coordenadas
 412+ 9414
 413+ 9414 D1           	pop de
 414+ 9415 E1           	pop hl
 415+ 9416 C1           	pop bc
 416+ 9417
 417+ 9417 21 5F 88     	ld hl,Ctrl_0
 418+ 941A CB EE        	set 5,(hl)
 419+ 941C C9           	ret
 420+ 941D
 421+ 941D              ; ------------------------------------------------------------------------------------------------------------------
 422+ 941D
 423+ 941D              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 941D              ;
 425+ 941D              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 941D
 427+ 941D 7D           column ld a,l
 428+ 941E E6 1F        	and $1f
 429+ 9420 FE 10         	cp $10
 430+ 9422 C9            	ret
 431+ 9423
 432+ 9423              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9423              ;
 434+ 9423              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9423              ;
 436+ 9423              ; 14/12/22
 437+ 9423              ;
 438+ 9423              ;	Modifica: A y BC.
 439+ 9423
 440+ 9423 3A 51 88     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9426 E6 01        	and 1
 442+ 9428 28 17        	jr z,1F
 443+ 942A
 444+ 942A              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 942A
 446+ 942A 3A 43 88     	ld a,(Coordenada_X)
 447+ 942D 47           	ld b,a
 448+ 942E 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 942F 79           	ld a,c
 450+ 9430 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9431 38 08        	jr c,2F
 452+ 9433 47           	ld b,a
 453+ 9434 79           	ld a,c
 454+ 9435 90           	sub b
 455+ 9436 32 60 88     	ld (Columnas),a
 456+ 9439 18 1B        	jr 4F
 457+ 943B 79           2 ld a,c
 458+ 943C 32 60 88     	ld (Columnas),a
 459+ 943F 18 15        	jr 4F
 460+ 9441
 461+ 9441              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9441
 463+ 9441 3A 43 88     1 ld a,(Coordenada_X)
 464+ 9444 81           	add c
 465+ 9445 3D           	dec a
 466+ 9446 D6 1F        	sub $1f
 467+ 9448 38 08        	jr c,3F
 468+ 944A 47           	ld b,a
 469+ 944B 79           	ld a,c
 470+ 944C 90           	sub b
 471+ 944D 32 60 88     	ld (Columnas),a
 472+ 9450 18 04        	jr 4F
 473+ 9452 79           3 ld a,c
 474+ 9453 32 60 88     	ld (Columnas),a
 475+ 9456 D9           4 exx
 476+ 9457 4F           	ld c,a
 477+ 9458 D9           	exx
 478+ 9459 C9            ret
 479+ 945A
 480+ 945A              ; --------------------------------------------------------------------------------------------------------------------
 481+ 945A              ;
 482+ 945A              ;   19/7/23
 483+ 945A              ;
 484+ 945A              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 945A              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 945A              ;
 487+ 945A              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 945A              ;			HL e IY Contienen (Puntero_objeto).
 489+ 945A              ;
 490+ 945A              ;	DESTRUYE: HL,B Y A.
 491+ 945A
 492+ 945A 3A 51 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 945D FE 02        	cp 2
 494+ 945F 38 18        	jr c,1F
 495+ 9461 28 16        	jr z,1F
 496+ 9463 E6 01        	and 1
 497+ 9465 28 0D        	jr z,3F
 498+ 9467
 499+ 9467              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9467
 501+ 9467 CD AD 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 946A
 503+ 946A 7D           9 ld a,l
 504+ 946B E6 1F        	and $1f
 505+ 946D 28 2A        	jr z,7F
 506+ 946F 2B           	dec hl
 507+ 9470 10 F8        	djnz 9B
 508+ 9472 18 25        	jr 7F
 509+ 9474
 510+ 9474              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9474
 512+ 9474 2A 3F 88     3 ld hl,(Posicion_actual)
 513+ 9477 18 20        	jr 7F
 514+ 9479
 515+ 9479 28 14        1 jr z,2F
 516+ 947B
 517+ 947B              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 947B
 519+ 947B CD AD 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 947E
 521+ 947E 7D           4 ld a,l
 522+ 947F E6 1F        	and $1f
 523+ 9481 28 03        	jr z,6F
 524+ 9483 2B           	dec hl
 525+ 9484 10 F8        	djnz 4B
 526+ 9486 06 0F        6 ld b,15
 527+ 9488 CD 0E 95     5 call PreviousScan
 528+ 948B 10 FB        	djnz 5B
 529+ 948D 18 0A        	jr 7F
 530+ 948F
 531+ 948F              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 948F
 533+ 948F CD AD 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9492 06 0F        	ld b,15
 535+ 9494 CD 0E 95     8 call PreviousScan
 536+ 9497 10 FB        	djnz 8B
 537+ 9499
 538+ 9499 E5           7 push hl
 539+ 949A DD E1        	pop ix
 540+ 949C
 541+ 949C 2A 41 88     	ld hl,(Puntero_objeto)
 542+ 949F E5           	push hl
 543+ 94A0 FD E1        	pop iy
 544+ 94A2
 545+ 94A2              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 94A2
 547+ 94A2 3A 5F 88     	ld a,(Ctrl_0)
 548+ 94A5 CB 77        	bit 6,a
 549+ 94A7 C8           	ret z
 550+ 94A8
 551+ 94A8              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 94A8              ; _ entidad / Amadeus´.
 553+ 94A8
 554+ 94A8 DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 94AC
 556+ 94AC C9           	ret
 557+ 94AD
 558+ 94AD              ; --------------------------------------------------------------------------------------------------------------------
 559+ 94AD              ;
 560+ 94AD              ;	2/1/23
 561+ 94AD              ;
 562+ 94AD              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 94AD              ;
 564+ 94AD              ;	Tras esta rutina tenemos:
 565+ 94AD              ;
 566+ 94AD              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 94AD              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 94AD              ;
 569+ 94AD              ;	DESTRUYE!!!!! HL,B y A.
 570+ 94AD
 571+ 94AD 2A 3F 88     Operandos ld hl,(Posicion_actual)
 572+ 94B0 3A 60 88     	ld a,(Columnas)
 573+ 94B3 3D           	dec a
 574+ 94B4 20 01        	jr nz,1F
 575+ 94B6 3C           	inc a
 576+ 94B7 47           1 ld b,a
 577+ 94B8 C9           	ret
 578+ 94B9
 579+ 94B9              ; --------------------------------------------------------------------------------------------------------------------
 580+ 94B9              ;
 581+ 94B9              ;	3/1/23
 582+ 94B9              ;
 583+ 94B9              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 94B9              ;
 585+ 94B9              ;	Destruye: A,B,HL y DE.
 586+ 94B9
 587+ 94B9              Define_rutina_de_impresion
 588+ 94B9
 589+ 94B9 3A 3E 88     	ld a,(Columns)
 590+ 94BC 47           	ld b,a
 591+ 94BD 3A 60 88     	ld a,(Columnas)
 592+ 94C0 B8           	cp b
 593+ 94C1 20 0D        	jr nz,2f
 594+ 94C3
 595+ 94C3              ;	La entidad se imprime entera.
 596+ 94C3
 597+ 94C3 21 E2 95     	ld hl, Indice_entidades_completas
 598+ 94C6 E6 01        	and 1
 599+ 94C8 28 02        	jr z,1F
 600+ 94CA
 601+ 94CA 23           	inc hl
 602+ 94CB 23           	inc hl
 603+ 94CC
 604+ 94CC CD C2 8B     1 call Extrae_address
 605+ 94CF C9           	ret		;	ret
 606+ 94D0
 607+ 94D0              ;	La entidad no se imprime entera en pantalla.
 608+ 94D0
 609+ 94D0 3A 51 88     2 ld a,(Cuad_objeto)
 610+ 94D3 E6 01        	and 1
 611+ 94D5 28 17        	jr z,3F
 612+ 94D7
 613+ 94D7              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 94D7
 615+ 94D7 21 E6 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 94DA 3A 3E 88     4 ld a,(Columns)
 617+ 94DD E6 01        	and 1
 618+ 94DF 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 94E1
 620+ 94E1 23           	inc hl
 621+ 94E2 23           	inc hl
 622+ 94E3
 623+ 94E3 3A 60 88     	ld a,(Columnas)
 624+ 94E6 E6 01        	and 1
 625+ 94E8 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 94EA
 627+ 94EA 23           	inc hl
 628+ 94EB 23           	inc hl
 629+ 94EC
 630+ 94EC 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 94EE
 632+ 94EE 21 EC 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 94F1 18 E7        	jr 4B
 634+ 94F3
 635+ 94F3              ; --------------------------------------------------------------------------------------------------------------------
 636+ 94F3              ;
 637+ 94F3              ;	Prepara_draw
 638+ 94F3              ;
 639+ 94F3              ;	Es una rutina de carga.
 640+ 94F3              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 94F3              ;
 642+ 94F3              ;	FUNCIONAMIENTO:
 643+ 94F3              ;
 644+ 94F3              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 94F3              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 94F3              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 94F3              ;
 648+ 94F3              ;	DESTRUYE:
 649+ 94F3              ;
 650+ 94F3              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 94F3
 652+ 94F3 21 3D 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 94F6 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 94F7 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 94F8 4E           	ld c,(hl)
 656+ 94F9 2A 3F 88     	ld hl,(Posicion_actual)
 657+ 94FC 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 94FE C9           	ret
 659+ 94FF
 660+ 94FF              ;----------------------------------------------------------------------------------------------------------------
 661+ 94FF              ;
 662+ 94FF              ;	5/08/22
 663+ 94FF              ;
 664+ 94FF              ;   NextScan.
 665+ 94FF              ;
 666+ 94FF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 94FF              ;
 668+ 94FF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 94FF              ;
 670+ 94FF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 94FF              ;
 672+ 94FF              ;       DESTRUIDOS: AF y HL !!!
 673+ 94FF              ;
 674+ 94FF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 94FF              ;
 676+ 94FF
 677+ 94FF 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 9500 7C               ld a,h
 679+ 9501 E6 07            and 7
 680+ 9503 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9504
 682+ 9504 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9505 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9507 6F               ld l,a
 685+ 9508 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9509
 687+ 9509 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 950A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 950C 67               ld h,a
 690+ 950D C9               ret
 691+ 950E
 692+ 950E              ;----------------------------------------------------------------------------------------------------------------
 693+ 950E              ;
 694+ 950E              ;	5/08/22
 695+ 950E              ;
 696+ 950E              ;   PreviousScan.
 697+ 950E              ;
 698+ 950E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 950E              ;
 700+ 950E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 950E              ;
 702+ 950E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 950E              ;
 704+ 950E              ;       DESTRUIDOS: AF y HL !!!
 705+ 950E              ;
 706+ 950E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 950E              ;
 708+ 950E
 709+ 950E 7C           PreviousScan ld a,h
 710+ 950F 25               dec h               ; Dec H.
 711+ 9510 E6 07            and 7
 712+ 9512 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9513
 714+ 9513 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9514 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9516 6F               ld l,a
 717+ 9517 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9518
 719+ 9518 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9519 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 951B 67               ld h,a
 722+ 951C C9               ret
 723+ 951D
 724+ 951D              ; -----------------------------------------------------------------------------------
 725+ 951D              ;
 726+ 951D              ;	31/7/23
 727+ 951D              ;
 728+ 951D              ;	Rutina principal de pintado de entidades.
 729+ 951D              ;	Extrae la foto del frame, (entidades).
 730+ 951D
 731+ 951D              Extrae_foto_entidades
 732+ 951D
 733+ 951D 21 01 70     	ld hl,Album_de_fotos+1
 734+ 9520 7E           	ld a,(hl)
 735+ 9521 A7           	and a
 736+ 9522 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9523
 738+ 9523              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9523
 740+ 9523 3A 8A 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9526 A7           	and a
 742+ 9527 C8           	ret z
 743+ 9528
 744+ 9528              ; -----------------------------------
 745+ 9528
 746+ 9528 ED 73 8F 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 952C 31 00 70     	ld sp,Album_de_fotos
 748+ 952F
 749+ 952F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9531 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9532 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9533
 753+ 9533 ED 73 91 88  	ld (Stack_2),sp
 754+ 9537 ED 7B 8F 88  	ld sp,(Stack)
 755+ 953B
 756+ 953B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 953B
 758+ 953B 3E CD        	ld a,$cd
 759+ 953D 32 45 95     	ld (Imprime),a
 760+ 9540 EB           	ex de,hl
 761+ 9541 22 46 95     	ld (Imprime+1),hl
 762+ 9544 EB           	ex de,hl
 763+ 9545
 764+ 9545              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9545
 766+ 9545 00 00 00     Imprime db 0,0,0
 767+ 9548
 768+ 9548 ED 73 8F 88  	ld (Stack),sp
 769+ 954C
 770+ 954C 3A 8A 88     	ld a,(Numero_de_malotes)
 771+ 954F 3D           	dec a
 772+ 9550 28 09        	jr z,1F
 773+ 9552 32 8A 88      	ld (Numero_de_malotes),a
 774+ 9555
 775+ 9555 ED 7B 91 88  	ld sp,(Stack_2)
 776+ 9559 18 D4        	jr 2B
 777+ 955B
 778+ 955B AF           1 xor a
 779+ 955C 32 91 88     	ld (Stack_2),a
 780+ 955F
 781+ 955F C9           	ret
 782+ 9560
 783+ 9560              ; -----------------------------------------------------------------------------------
 784+ 9560              ;
 785+ 9560              ;	28/2/23
 786+ 9560              ;
 787+ 9560              ;	Pinta los disparos generados.
 788+ 9560
 789+ 9560              Extrae_foto_disparos
 790+ 9560
 791+ 9560 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 9563 7E               ld a,(hl)
 793+ 9564 A7               and a
 794+ 9565 C8               ret z
 795+ 9566
 796+ 9566 3A 9F 88     	ld a,(Numero_de_disparotes)
 797+ 9569 A7           	and a
 798+ 956A C8           	ret z
 799+ 956B ED 73 8F 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 956F 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 9572
 802+ 9572 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9574 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9575 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9576
 806+ 9576 ED 73 91 88  	ld (Stack_2),sp
 807+ 957A ED 7B 8F 88  	ld sp,(Stack)
 808+ 957E
 809+ 957E              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 957E
 811+ 957E 3E CD        	ld a,$cd
 812+ 9580 32 88 95     	ld (Imprime2),a
 813+ 9583 EB           	ex de,hl
 814+ 9584 22 89 95     	ld (Imprime2+1),hl
 815+ 9587 EB           	ex de,hl
 816+ 9588
 817+ 9588              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9588
 819+ 9588 00 00 00     Imprime2 db 0,0,0
 820+ 958B
 821+ 958B 3A 9F 88     	ld a,(Numero_de_disparotes)
 822+ 958E 3D           	dec a
 823+ 958F 28 09        	jr z,1F
 824+ 9591 32 9F 88      	ld (Numero_de_disparotes),a
 825+ 9594
 826+ 9594 ED 7B 91 88  	ld sp,(Stack_2)
 827+ 9598 18 D8        	jr 2B
 828+ 959A
 829+ 959A AF           1 xor a
 830+ 959B 32 91 88     	ld (Stack_2),a
 831+ 959E C9           	ret
 832+ 959F
 833+ 959F              ; -----------------------------------------------------------------------------------
 834+ 959F              ;
 835+ 959F              ;	4/9/23
 836+ 959F              ;
 837+ 959F              ;	Rutina principal de pintado de Amadeus.
 838+ 959F              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 959F
 840+ 959F 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 95A2 7E           	ld a,(hl)
 842+ 95A3 A7           	and a
 843+ 95A4 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 95A5
 845+ 95A5 3A 8A 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 95A8 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 95A9 C8           	ret z
 848+ 95AA
 849+ 95AA              ; -----------------------------------
 850+ 95AA
 851+ 95AA ED 73 8F 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 95AE 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 95B1
 854+ 95B1 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 95B3 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 95B4 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 95B5
 858+ 95B5 ED 73 91 88  	ld (Stack_2),sp
 859+ 95B9 ED 7B 8F 88  	ld sp,(Stack)
 860+ 95BD
 861+ 95BD              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 95BD
 863+ 95BD 3E CD        	ld a,$cd
 864+ 95BF 32 C7 95     	ld (Imprime_Amadeus),a
 865+ 95C2 EB           	ex de,hl
 866+ 95C3 22 C8 95     	ld (Imprime_Amadeus+1),hl
 867+ 95C6 EB           	ex de,hl
 868+ 95C7
 869+ 95C7              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 95C7
 871+ 95C7 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 95CA
 873+ 95CA ED 73 8F 88  	ld (Stack),sp
 874+ 95CE
 875+ 95CE 3A 8A 88     	ld a,(Numero_de_malotes)
 876+ 95D1 3D           	dec a
 877+ 95D2 28 09        	jr z,1F
 878+ 95D4 32 8A 88      	ld (Numero_de_malotes),a
 879+ 95D7
 880+ 95D7 ED 7B 91 88  	ld sp,(Stack_2)
 881+ 95DB 18 D4        	jr 2B
 882+ 95DD
 883+ 95DD AF           1 xor a
 884+ 95DE 32 91 88     	ld (Stack_2),a
 885+ 95E1
 886+ 95E1 C9           	ret
# file closed: Draw_XOR.asm
1762  95E2              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95E2              ;   índices de Rutinas de impresión.
   2+ 95E2
   3+ 95E2 F2 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95E4 1F 96            defw Pinta_Amadeus_3x2
   5+ 95E6
   6+ 95E6 75 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95E8 15 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95EA C9 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95EC
  10+ 95EC 9F 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95EE A3 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95F0 57 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95F2
  14+ 95F2
  15+ 95F2              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95F2              ;
  17+ 95F2              ;   12/12/22
  18+ 95F2              ;
  19+ 95F2              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95F2              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95F2              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95F2              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95F2              ;
  24+ 95F2              ;   Modifica: DE y HL.
  25+ 95F2
  26+ 95F2 ED 73 8F 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95F6 FD F9        	ld sp,iy
  28+ 95F8 06 10            ld b,16
  29+ 95FA D1           1 pop de
  30+ 95FB 7B               ld a,e
  31+ 95FC AE               xor (hl)
  32+ 95FD 77           	ld (hl),a
  33+ 95FE 23           	inc hl
  34+ 95FF 7A               ld a,d
  35+ 9600 AE               xor (hl)
  36+ 9601 77           	ld (hl),a
  37+ 9602 2B           	dec hl
  38+ 9603 24           	inc h
  39+ 9604 7C               ld a,h
  40+ 9605 E6 07            and 7
  41+ 9607 20 0A            jr nz,2F
  42+ 9609 7D               ld a,l
  43+ 960A C6 20            add a,$20
  44+ 960C 6F               ld l,a
  45+ 960D 38 04            jr c,2F
  46+ 960F 7C               ld a,h
  47+ 9610 D6 08            sub 8
  48+ 9612 67               ld h,a
  49+ 9613 7C           2 ld a,h
  50+ 9614 FE 58            cp $58
  51+ 9616 28 02            jr z,3F
  52+ 9618 10 E0            djnz 1B
  53+ 961A ED 7B 8F 88  3 ld sp,(Stack)
  54+ 961E C9           	ret
  55+ 961F
  56+ 961F ED 73 8F 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9623 FD F9        	ld sp,iy
  58+ 9625 06 08            ld b,8
  59+ 9627 D1           1 pop de
  60+ 9628 7B               ld a,e
  61+ 9629 AE               xor (hl)
  62+ 962A 77           	ld (hl),a
  63+ 962B 23           	inc hl
  64+ 962C 7A               ld a,d
  65+ 962D AE               xor (hl)
  66+ 962E 77           	ld (hl),a
  67+ 962F 23           	inc hl
  68+ 9630 D1           	pop de
  69+ 9631 7B               ld a,e
  70+ 9632 AE               xor (hl)
  71+ 9633 77           	ld (hl),a
  72+ 9634 2B           	dec hl
  73+ 9635 2B           	dec hl
  74+ 9636 24           	inc h
  75+ 9637 7C               ld a,h
  76+ 9638 E6 07            and 7
  77+ 963A 20 0A            jr nz,2F
  78+ 963C 7D               ld a,l
  79+ 963D C6 20            add a,$20
  80+ 963F 6F               ld l,a
  81+ 9640 38 04            jr c,2F
  82+ 9642 7C               ld a,h
  83+ 9643 D6 08            sub 8
  84+ 9645 67               ld h,a
  85+ 9646 7C           2 ld a,h
  86+ 9647 FE 58            cp $58
  87+ 9649 28 25            jr z,4F
  88+ 964B 7A               ld a,d
  89+ 964C AE               xor (hl)
  90+ 964D 77               ld (hl),a
  91+ 964E D1           	pop de
  92+ 964F 23           	inc hl
  93+ 9650 7B               ld a,e
  94+ 9651 AE               xor (hl)
  95+ 9652 77           	ld (hl),a
  96+ 9653 23           	inc hl
  97+ 9654 7A               ld a,d
  98+ 9655 AE               xor (hl)
  99+ 9656 77           	ld (hl),a
 100+ 9657 2B           	dec hl
 101+ 9658 2B           	dec hl
 102+ 9659 24           	inc h
 103+ 965A 7C               ld a,h
 104+ 965B E6 07            and 7
 105+ 965D 20 0A            jr nz,3F
 106+ 965F 7D               ld a,l
 107+ 9660 C6 20            add a,$20
 108+ 9662 6F               ld l,a
 109+ 9663 38 04            jr c,3F
 110+ 9665 7C               ld a,h
 111+ 9666 D6 08            sub 8
 112+ 9668 67               ld h,a
 113+ 9669 7C           3 ld a,h
 114+ 966A FE 58            cp $58
 115+ 966C 28 02            jr z,4F
 116+ 966E 10 B7            djnz 1B
 117+ 9670 ED 7B 8F 88  4 ld sp,(Stack)
 118+ 9674 C9           	ret
 119+ 9675
 120+ 9675              ; ---------------------------------------------------
 121+ 9675
 122+ 9675 ED 73 8F 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9679 FD F9        	ld sp,iy
 124+ 967B
 125+ 967B              ; >>>
 126+ 967B
 127+ 967B 06 10            ld b,16
 128+ 967D D1           1 pop de
 129+ 967E 7A           	ld a,d
 130+ 967F AE           	xor (hl)
 131+ 9680 77           	ld (hl),a
 132+ 9681 24           	inc h
 133+ 9682 7C               ld a,h
 134+ 9683 E6 07            and 7
 135+ 9685 20 0C            jr nz,2F
 136+ 9687 7D               ld a,l
 137+ 9688 C6 20            add a,$20
 138+ 968A 6F               ld l,a
 139+ 968B 38 06            jr c,2F
 140+ 968D 7C               ld a,h
 141+ 968E D6 08            sub 8
 142+ 9690 67               ld h,a
 143+ 9691 18 00            jr 2F
 144+ 9693 7C           2 ld a,h
 145+ 9694 FE 58            cp $58
 146+ 9696 28 02            jr z,3F
 147+ 9698 10 E3            djnz 1B
 148+ 969A ED 7B 8F 88  3 ld sp,(Stack)
 149+ 969E C9           	ret
 150+ 969F
 151+ 969F ED 73 8F 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 96A3 FD F9        	ld sp,iy
 153+ 96A5
 154+ 96A5              ; >>>
 155+ 96A5
 156+ 96A5 06 10            ld b,16
 157+ 96A7 D1           1 pop de
 158+ 96A8 7B           	ld a,e
 159+ 96A9 AE           	xor (hl)
 160+ 96AA 77           	ld (hl),a
 161+ 96AB 24           	inc h
 162+ 96AC 7C               ld a,h
 163+ 96AD E6 07            and 7
 164+ 96AF 20 0C            jr nz,2F
 165+ 96B1 7D               ld a,l
 166+ 96B2 C6 20            add a,$20
 167+ 96B4 6F               ld l,a
 168+ 96B5 38 06            jr c,2F
 169+ 96B7 7C               ld a,h
 170+ 96B8 D6 08            sub 8
 171+ 96BA 67               ld h,a
 172+ 96BB 18 00            jr 2F
 173+ 96BD 7C           2 ld a,h
 174+ 96BE FE 58            cp $58
 175+ 96C0 28 02            jr z,3F
 176+ 96C2 10 E3            djnz 1B
 177+ 96C4 ED 7B 8F 88  3 ld sp,(Stack)
 178+ 96C8 C9           	ret
 179+ 96C9
 180+ 96C9              ; ---------------------------------------------------
 181+ 96C9
 182+ 96C9 ED 73 8F 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96CD FD F9        	ld sp,iy
 184+ 96CF 06 08            ld b,8
 185+ 96D1 D1           1 pop de
 186+ 96D2 7A           	ld a,d
 187+ 96D3 AE           	xor (hl)
 188+ 96D4 77           	ld (hl),a
 189+ 96D5 23           	inc hl
 190+ 96D6 D1           	pop de
 191+ 96D7 7B           	ld a,e
 192+ 96D8 AE           	xor (hl)
 193+ 96D9 77           	ld (hl),a
 194+ 96DA 2B           	dec hl
 195+ 96DB 24            	inc h
 196+ 96DC 7C               ld a,h
 197+ 96DD E6 07            and 7
 198+ 96DF 20 0A            jr nz,2F
 199+ 96E1 7D               ld a,l
 200+ 96E2 C6 20            add a,$20
 201+ 96E4 6F               ld l,a
 202+ 96E5 38 04            jr c,2F
 203+ 96E7 7C               ld a,h
 204+ 96E8 D6 08            sub 8
 205+ 96EA 67               ld h,a
 206+ 96EB 7C           2 ld a,h
 207+ 96EC FE 58            cp $58
 208+ 96EE 28 20            jr z,4F
 209+ 96F0 D1               pop de
 210+ 96F1 7B           	ld a,e
 211+ 96F2 AE           	xor (hl)
 212+ 96F3 77           	ld (hl),a
 213+ 96F4 23           	inc hl
 214+ 96F5 7A           	ld a,d
 215+ 96F6 AE           	xor (hl)
 216+ 96F7 77           	ld (hl),a
 217+ 96F8 2B           	dec hl
 218+ 96F9 24           	inc h
 219+ 96FA 7C               ld a,h
 220+ 96FB E6 07            and 7
 221+ 96FD 20 0A            jr nz,3F
 222+ 96FF 7D               ld a,l
 223+ 9700 C6 20            add a,$20
 224+ 9702 6F               ld l,a
 225+ 9703 38 04            jr c,3F
 226+ 9705 7C               ld a,h
 227+ 9706 D6 08            sub 8
 228+ 9708 67               ld h,a
 229+ 9709 7C           3 ld a,h
 230+ 970A FE 58            cp $58
 231+ 970C 28 02            jr z,4F
 232+ 970E 10 C1            djnz 1B
 233+ 9710 ED 7B 8F 88  4 ld sp,(Stack)
 234+ 9714 C9           	ret
 235+ 9715
 236+ 9715 ED 73 8F 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9719 FD F9        	ld sp,iy
 238+ 971B 06 08            ld b,8
 239+ 971D D1           1 pop de
 240+ 971E D1           	pop de
 241+ 971F 7B           	ld a,e
 242+ 9720 AE           	xor (hl)
 243+ 9721 77           	ld (hl),a
 244+ 9722 24            	inc h
 245+ 9723 7C               ld a,h
 246+ 9724 E6 07            and 7
 247+ 9726 20 0A            jr nz,2F
 248+ 9728 7D               ld a,l
 249+ 9729 C6 20            add a,$20
 250+ 972B 6F               ld l,a
 251+ 972C 38 04            jr c,2F
 252+ 972E 7C               ld a,h
 253+ 972F D6 08            sub 8
 254+ 9731 67               ld h,a
 255+ 9732 7C           2 ld a,h
 256+ 9733 FE 58            cp $58
 257+ 9735 28 1B            jr z,4F
 258+ 9737 D1               pop de
 259+ 9738 7A           	ld a,d
 260+ 9739 AE           	xor (hl)
 261+ 973A 77           	ld (hl),a
 262+ 973B 24           	inc h
 263+ 973C 7C               ld a,h
 264+ 973D E6 07            and 7
 265+ 973F 20 0A            jr nz,3F
 266+ 9741 7D               ld a,l
 267+ 9742 C6 20            add a,$20
 268+ 9744 6F               ld l,a
 269+ 9745 38 04            jr c,3F
 270+ 9747 7C               ld a,h
 271+ 9748 D6 08            sub 8
 272+ 974A 67               ld h,a
 273+ 974B 7C           3 ld a,h
 274+ 974C FE 58            cp $58
 275+ 974E 28 02            jr z,4F
 276+ 9750 10 CB            djnz 1B
 277+ 9752 ED 7B 8F 88  4 ld sp,(Stack)
 278+ 9756 C9           	ret
 279+ 9757
 280+ 9757 ED 73 8F 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 975B FD F9        	ld sp,iy
 282+ 975D 06 08            ld b,8
 283+ 975F D1           1 pop de
 284+ 9760 7B           	ld a,e
 285+ 9761 AE           	xor (hl)
 286+ 9762 77           	ld (hl),a
 287+ 9763 23           	inc hl
 288+ 9764 7A           	ld a,d
 289+ 9765 AE           	xor (hl)
 290+ 9766 77           	ld (hl),a
 291+ 9767 2B           	dec hl
 292+ 9768 24             	inc h
 293+ 9769 7C               ld a,h
 294+ 976A E6 07            and 7
 295+ 976C 20 0A            jr nz,2F
 296+ 976E 7D               ld a,l
 297+ 976F C6 20            add a,$20
 298+ 9771 6F               ld l,a
 299+ 9772 38 04            jr c,2F
 300+ 9774 7C               ld a,h
 301+ 9775 D6 08            sub 8
 302+ 9777 67               ld h,a
 303+ 9778 7C           2 ld a,h
 304+ 9779 FE 58            cp $58
 305+ 977B 28 21            jr z,4F
 306+ 977D D1               pop de
 307+ 977E 7A           	ld a,d
 308+ 977F AE           	xor (hl)
 309+ 9780 77           	ld (hl),a
 310+ 9781 23           	inc hl
 311+ 9782 D1               pop de
 312+ 9783 7B           	ld a,e
 313+ 9784 AE           	xor (hl)
 314+ 9785 77           	ld (hl),a
 315+ 9786 2B           	dec hl
 316+ 9787 24           	inc h
 317+ 9788 7C               ld a,h
 318+ 9789 E6 07            and 7
 319+ 978B 20 0A            jr nz,3F
 320+ 978D 7D               ld a,l
 321+ 978E C6 20            add a,$20
 322+ 9790 6F               ld l,a
 323+ 9791 38 04            jr c,3F
 324+ 9793 7C               ld a,h
 325+ 9794 D6 08            sub 8
 326+ 9796 67               ld h,a
 327+ 9797 7C           3 ld a,h
 328+ 9798 FE 58            cp $58
 329+ 979A 28 02            jr z,4F
 330+ 979C 10 C1            djnz 1B
 331+ 979E ED 7B 8F 88  4 ld sp,(Stack)
 332+ 97A2 C9           	ret
 333+ 97A3
 334+ 97A3 ED 73 8F 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 97A7 FD F9        	ld sp,iy
 336+ 97A9 06 08            ld b,8
 337+ 97AB D1           1 pop de
 338+ 97AC 7B           	ld a,e
 339+ 97AD AE           	xor (hl)
 340+ 97AE 77           	ld (hl),a
 341+ 97AF 24            	inc h
 342+ 97B0 7C               ld a,h
 343+ 97B1 E6 07            and 7
 344+ 97B3 20 0A            jr nz,2F
 345+ 97B5 7D               ld a,l
 346+ 97B6 C6 20            add a,$20
 347+ 97B8 6F               ld l,a
 348+ 97B9 38 04            jr c,2F
 349+ 97BB 7C               ld a,h
 350+ 97BC D6 08            sub 8
 351+ 97BE 67               ld h,a
 352+ 97BF 7C           2 ld a,h
 353+ 97C0 FE 58            cp $58
 354+ 97C2 28 1C            jr z,4F
 355+ 97C4 D1               pop de
 356+ 97C5 7A           	ld a,d
 357+ 97C6 AE           	xor (hl)
 358+ 97C7 77           	ld (hl),a
 359+ 97C8 24           	inc h
 360+ 97C9 7C               ld a,h
 361+ 97CA E6 07            and 7
 362+ 97CC 20 0A            jr nz,3F
 363+ 97CE 7D               ld a,l
 364+ 97CF C6 20            add a,$20
 365+ 97D1 6F               ld l,a
 366+ 97D2 38 04            jr c,3F
 367+ 97D4 7C               ld a,h
 368+ 97D5 D6 08            sub 8
 369+ 97D7 67               ld h,a
 370+ 97D8 7C           3 ld a,h
 371+ 97D9 FE 58            cp $58
 372+ 97DB 28 03            jr z,4F
 373+ 97DD D1               pop de
 374+ 97DE 10 CB            djnz 1B
 375+ 97E0 ED 7B 8F 88  4 ld sp,(Stack)
 376+ 97E4 C9           	ret
 377+ 97E5
 378+ 97E5              ; ---------------------------------------------------
 379+ 97E5              ;
 380+ 97E5              ;   27/02/23
 381+ 97E5              ;
 382+ 97E5              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97E5              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97E5              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97E5
 386+ 97E5 ED 73 8F 88  Pinta_Disparo ld (Stack),sp
 387+ 97E9 FD F9            ld sp,iy
 388+ 97EB 06 03            ld b,3
 389+ 97ED D1           1 pop de
 390+ 97EE 7B               ld a,e
 391+ 97EF AE               xor (hl)
 392+ 97F0 77               ld (hl),a
 393+ 97F1 23               inc hl
 394+ 97F2 7A               ld a,d
 395+ 97F3 AE               xor (hl)
 396+ 97F4 77               ld (hl),a
 397+ 97F5 2B               dec hl
 398+ 97F6
 399+ 97F6 24               inc h
 400+ 97F7 7C               ld a,h
 401+ 97F8 E6 07            and 7
 402+ 97FA 20 0A            jr nz,2F
 403+ 97FC 7D               ld a,l
 404+ 97FD C6 20            add a,$20
 405+ 97FF 6F               ld l,a
 406+ 9800 38 04            jr c,2F
 407+ 9802 7C               ld a,h
 408+ 9803 D6 08            sub 8
 409+ 9805 67               ld h,a
 410+ 9806 7C           2 ld a,h
 411+ 9807 FE 58            cp $58
 412+ 9809 28 02            jr z,3F
 413+ 980B
 414+ 980B 10 E0            djnz 1B
 415+ 980D ED 7B 8F 88  3 ld sp,(Stack)
 416+ 9811 C9               ret
 417+ 9812
# file closed: Rutinas_de_impresion_sprites.asm
1763  9812              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9812              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9812              ;
   3+ 9812              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9812              ;
   5+ 9812              ; *****************************************************************************************************************************************************************************************
   6+ 9812              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9812
   8+ 9812 7C           calcula_tercio ld a,h
   9+ 9813 E6 18        	and $18
  10+ 9815 CB 2F        	sra a
  11+ 9817 CB 2F        	sra a
  12+ 9819 CB 2F        	sra a
  13+ 981B C9           	ret
  14+ 981C
# file closed: calcula_tercio.asm
1764  981C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 981C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 981C              ;
   3+ 981C              ;
   4+ 981C              ;	CLS.
   5+ 981C              ;
   6+ 981C              ;	Limpia la pantalla y define sus atributos.
   7+ 981C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 981C              ;
   9+ 981C              ;	COLORES: 0 ..... NEGRO
  10+ 981C              ;    		 1 ..... AZUL
  11+ 981C              ; 			 2 ..... ROJO
  12+ 981C              ;			 3 ..... MAGENTA
  13+ 981C              ; 			 4 ..... VERDE
  14+ 981C              ; 			 5 ..... CIAN
  15+ 981C              ;			 6 ..... AMARILLO
  16+ 981C              ; 			 7 ..... BLANCO
  17+ 981C              ;
  18+ 981C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 981C              ;
  20+ 981C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 981C
  22+ 981C
  23+ 981C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 981F 11 01 40     	LD DE,$4001
  25+ 9822 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9825 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9827 ED B0        	LDIR
  28+ 9829 01 FF 02     	LD BC,767
  29+ 982C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 982D ED B0        	LDIR
  31+ 982F C9           	ret
  32+ 9830
# file closed: Cls.asm
1765  9830              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9830
   2+ 9830              ; ******************************************************************************************************************************************************************************************
   3+ 9830              ;
   4+ 9830              ;   20/05/23
   5+ 9830              ;
   6+ 9830              ;	Recompone_posicion_inicio
   7+ 9830              ;
   8+ 9830              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9830              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9830              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9830              ;	_ a una u otra rutina.
  12+ 9830
  13+ 9830              Recompone_posicion_inicio
  14+ 9830
  15+ 9830 2A 4F 88     	ld hl,(Posicion_inicio)
  16+ 9833 7D           	ld a,l
  17+ 9834 E6 1F        	and $1f
  18+ 9836 28 16        	jr z,1F
  19+ 9838
  20+ 9838 FE 1F        	cp $1f
  21+ 983A 28 0D        	jr z,3F
  22+ 983C
  23+ 983C 21 64 88     	ld hl,Ctrl_2
  24+ 983F CB C6        	set 0,(hl)
  25+ 9841 2A 41 88     	ld hl,(Puntero_objeto)
  26+ 9844 22 7F 88     	ld (Repone_puntero_objeto),hl
  27+ 9847 18 08        	jr 2F
  28+ 9849
  29+ 9849 CD F7 99     3 call Mov_left
  30+ 984C 18 03        	jr 2F
  31+ 984E
  32+ 984E CD D4 98     1 call Mov_right
  33+ 9851 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9854 22 41 88     	ld (Puntero_objeto),hl
  35+ 9857 C9           	ret
  36+ 9858
  37+ 9858              ; ******************************************************************************************************************************************************************************************
  38+ 9858              ;
  39+ 9858              ;   27/05/23
  40+ 9858              ;
  41+ 9858              ;	Mov_down
  42+ 9858              ;
  43+ 9858              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9858              ;
  45+ 9858              ;
  46+ 9858              Mov_down
  47+ 9858
  48+ 9858 CD C2 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 985B              ;																	; _ repone (Puntero_objeto).
  50+ 985B 21 5F 88     	ld hl,Ctrl_0
  51+ 985E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9860              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9860              ; 																	; _ en el caso de que no lo haya.
  54+ 9860 3A 69 88     	ld a,(Vel_down)
  55+ 9863 47           	ld b,a
  56+ 9864 2A 3F 88         ld hl,(Posicion_actual)
  57+ 9867 CD 12 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 986A E6 02        	and 2
  59+ 986C 28 17        	jr z,1F
  60+ 986E
  61+ 986E              ; Nos encontramos en el último tercio de pantalla.
  62+ 986E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 986E
  64+ 986E 7C           	ld a,h
  65+ 986F FE 57        	cp $57
  66+ 9871 20 12        	jr nz,1F
  67+ 9873
  68+ 9873 7D           	ld a,l
  69+ 9874 C6 20        	add $20
  70+ 9876 30 0D        	jr nc,1F
  71+ 9878
  72+ 9878              ; ------------------------------
  73+ 9878              ;
  74+ 9878              ;	12/01/24
  75+ 9878
  76+ 9878              ;	call Reaparece_arriba
  77+ 9878 CD 84 9B     	call Reinicio
  78+ 987B
  79+ 987B              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 987B
  81+ 987B 3A 9D 88     	ld a,(Ctrl_3)
  82+ 987E CB CF        	set 1,a
  83+ 9880 32 9D 88     	ld (Ctrl_3),a
  84+ 9883
  85+ 9883 18 08        	jr 3F
  86+ 9885              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9885              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9885              ; ------------------------------
  89+ 9885
  90+ 9885 CD FF 94     1 call NextScan
  91+ 9888 22 3F 88     	ld (Posicion_actual),hl
  92+ 988B 10 DA            djnz 2B
  93+ 988D CD AA 9B     3 call Genera_coordenadas
  94+ 9890 C9           	ret
  95+ 9891
  96+ 9891              ; ******************************************************************************************************************************************************************************************
  97+ 9891              ;
  98+ 9891              ;   27/05/23
  99+ 9891              ;
 100+ 9891              ;	Mov_up
 101+ 9891              ;
 102+ 9891              ; 	Mueve el Sprite hacia arriba.
 103+ 9891              ;
 104+ 9891              ;
 105+ 9891              Mov_up
 106+ 9891
 107+ 9891 CD C2 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9894              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9894 21 5F 88     	ld hl,Ctrl_0
 110+ 9897 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9899              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9899              ; 																		; _ en el caso de que no lo haya.
 113+ 9899 3A 68 88     	ld a,(Vel_up)
 114+ 989C 47           	ld b,a
 115+ 989D 2A 3F 88     	ld hl,(Posicion_actual)
 116+ 98A0 CD 12 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 98A3 A7           	and a
 118+ 98A4 20 10        	jr nz,1F
 119+ 98A6
 120+ 98A6              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 98A6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 98A6
 123+ 98A6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 98A7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 98A9 20 0B            jr nz,1F
 126+ 98AB 7D               ld a,l
 127+ 98AC D6 20            sub $20
 128+ 98AE 30 06            jr nc,1F
 129+ 98B0 25               dec h
 130+ 98B1
 131+ 98B1              ; -----------------------------
 132+ 98B1 CD 65 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 98B4              ;	call Reinicio
 134+ 98B4              ; -----------------------------
 135+ 98B4
 136+ 98B4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 98B6 CD 0E 95     1 call PreviousScan
 138+ 98B9 22 3F 88     	ld (Posicion_actual),hl
 139+ 98BC 10 E2            djnz 3B
 140+ 98BE CD AA 9B     2 call Genera_coordenadas
 141+ 98C1 C9           	ret
 142+ 98C2
 143+ 98C2              ; -----------------------------
 144+ 98C2              ;
 145+ 98C2              ;	27/5/23
 146+ 98C2              ;
 147+ 98C2              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 98C2              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 98C2              ;
 150+ 98C2              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 98C2              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 98C2              ;
 153+ 98C2              ;	Modifica: A y (Puntero_objeto).
 154+ 98C2
 155+ 98C2 3A 64 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 98C5 CB 47        	bit 0,a
 157+ 98C7 C8           	ret z
 158+ 98C8 CB 87        	res 0,a
 159+ 98CA 32 64 88     	ld (Ctrl_2),a
 160+ 98CD 2A 7F 88     	ld hl,(Repone_puntero_objeto)
 161+ 98D0 22 41 88     	ld (Puntero_objeto),hl
 162+ 98D3 C9           	ret
 163+ 98D4
 164+ 98D4              ; ******************************************************************************************************************************************************************************************
 165+ 98D4              ;
 166+ 98D4              ;	19/10/22
 167+ 98D4              ;
 168+ 98D4              ;	Mov_right.
 169+ 98D4              ;
 170+ 98D4              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 98D4              ;
 172+ 98D4
 173+ 98D4 3A 5F 88     Mov_right ld a,(Ctrl_0)
 174+ 98D7 CB 77        	bit 6,a
 175+ 98D9 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 98DB
 177+ 98DB CD 13 9B     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 98DE C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 98DF
 180+ 98DF 21 5F 88     	ld hl,Ctrl_0
 181+ 98E2 CB E6        	set 4,(hl)
 182+ 98E4 18 52        	jr 8F
 183+ 98E6
 184+ 98E6 21 5F 88     10 ld hl,Ctrl_0
 185+ 98E9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 98EB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 98EB              ; 																	; _ en el caso de que no lo haya.
 188+ 98EB 3A 43 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 98EE FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 98F0 20 46        	jr nz,8F
 191+ 98F2
 192+ 98F2 3A 45 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 98F5 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 98F6 28 40        	jr z,8F
 195+ 98F8
 196+ 98F8              ; ---------- ---------- ----------
 197+ 98F8              ;
 198+ 98F8              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98F8
 200+ 98F8 3A 67 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 98FB FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98FD 28 11        	jr z,1F
 203+ 98FF 38 06        	jr c,6F
 204+ 9901 FE 04        	cp 4
 205+ 9903 28 14        	jr z,7F
 206+ 9905 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9907
 208+ 9907              ; ---------- ---------- ----------
 209+ 9907              ;
 210+ 9907              ; Perfiles de velocidad
 211+ 9907              ;
 212+ 9907
 213+ 9907 3A 45 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 990A FE FE        	cp $fe
 215+ 990C 20 2A        	jr nz,8F
 216+ 990E 18 10        	jr 3F
 217+ 9910 3A 45 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9913 FE FD        	cp $fd
 219+ 9915 20 21        	jr nz,8F
 220+ 9917 18 07        	jr 3F
 221+ 9919 3A 45 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 991C FE FB        	cp $fb
 223+ 991E 20 18        	jr nz,8F
 224+ 9920
 225+ 9920              ; ---------- ---------- ----------
 226+ 9920
 227+ 9920              3
 228+ 9920 CD 53 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9923              ;	call Reinicio
 230+ 9923
 231+ 9923              ; ---------- ---------- ----------
 232+ 9923              ;
 233+ 9923              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9923
 235+ 9923 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9925 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9926 CD 3F 99     	call DESPLZ_DER
 238+ 9929 C1           	pop bc
 239+ 992A 10 F9        	djnz 5B
 240+ 992C 2A 3F 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 992F 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9930 22 3F 88     	ld (Posicion_actual),hl
 243+ 9933 CD AA 9B     	call Genera_coordenadas
 244+ 9936 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9938
 246+ 9938              ; ---------- ---------- ----------
 247+ 9938
 248+ 9938 2A 3F 88     8 ld hl,(Posicion_actual)
 249+ 993B CD 3F 99     	call DESPLZ_DER
 250+ 993E C9           2 ret
 251+ 993F
 252+ 993F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 993F              ;
 254+ 993F              ;	22/9/22
 255+ 993F              ;
 256+ 993F
 257+ 993F CD 4E 99     DESPLZ_DER call Desplaza_derecha
 258+ 9942 CD 9A 99         call modifica_parametros_1er_DESPLZ_2
 259+ 9945 CD C3 99         call Ciclo_completo
 260+ 9948 21 5F 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 994B CB FE        	set 7,(hl)
 262+ 994D C9           	ret
 263+ 994E
 264+ 994E              ; ******************************************************************************************************************************************************************************************
 265+ 994E              ;	15/02/23
 266+ 994E              ;
 267+ 994E
 268+ 994E 3A 67 88     Desplaza_derecha ld a,(Vel_right)
 269+ 9951 47           	ld b,a
 270+ 9952 2A 4B 88     	ld hl,(Puntero_DESPLZ_der)
 271+ 9955 23           1 inc hl
 272+ 9956 23           	inc hl
 273+ 9957 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9959 22 4B 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 995C CD C2 8B     	call Extrae_address
 276+ 995F 22 41 88     	ld (Puntero_objeto),hl
 277+ 9962
 278+ 9962              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9962
 280+ 9962              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9962              ; Cuántos movimientos hemos hecho ??
 282+ 9962              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9962
 284+ 9962 2A 47 88     7 ld hl,(Indice_Sprite_der)
 285+ 9965 EB           	ex de,hl
 286+ 9966 A7           	and a
 287+ 9967 ED 52        	sbc hl,de
 288+ 9969 CB 3D        	srl l
 289+ 996B 3E 08        6 ld a,8
 290+ 996D 95           	sub l
 291+ 996E 30 1E        	jr nc,3F
 292+ 9970
 293+ 9970              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9970              ; B="0".
 295+ 9970
 296+ 9970 04           4 inc b
 297+ 9971 3C           	inc a
 298+ 9972 20 FC        	jr nz,4B
 299+ 9974 78           	ld a,b
 300+ 9975 08           	ex af,af
 301+ 9976 2A 47 88     	ld hl,(Indice_Sprite_der)
 302+ 9979 23           5 inc hl
 303+ 997A 23           	inc hl
 304+ 997B 10 FC        	djnz 5B
 305+ 997D 22 4B 88     	ld (Puntero_DESPLZ_der),hl
 306+ 9980 CD C2 8B     	call Extrae_address
 307+ 9983 22 41 88     	ld (Puntero_objeto),hl
 308+ 9986
 309+ 9986              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9986              ; _(Posicion_actual).
 311+ 9986
 312+ 9986 21 3F 88     	ld hl,Posicion_actual
 313+ 9989 34           	inc (hl)
 314+ 998A 08               ex af,af
 315+ 998B 6F           	ld l,a
 316+ 998C 18 DD        	jr 6B
 317+ 998E
 318+ 998E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 998E
 320+ 998E 47           3 ld b,a
 321+ 998F 2A 49 88     	ld hl,(Indice_Sprite_izq)
 322+ 9992 23           2 inc hl
 323+ 9993 23           	inc hl
 324+ 9994 10 FC        	djnz 2B
 325+ 9996 22 4D 88     	ld (Puntero_DESPLZ_izq),hl
 326+ 9999 C9           8 ret
 327+ 999A
 328+ 999A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 999A              ;
 330+ 999A              ;	24/7/22
 331+ 999A              ;
 332+ 999A              ;	modifica_parametros_1er_DESPLZ_2
 333+ 999A              ;
 334+ 999A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 999A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 999A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 999A
 338+ 999A 3A 45 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 999D A7           	and a
 340+ 999E 20 1F        	jr nz,1F
 341+ 99A0 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 99A2 32 45 88         ld (CTRL_DESPLZ),a
 343+ 99A5
 344+ 99A5 21 3E 88     	ld hl,Columns
 345+ 99A8 34           	inc (hl)
 346+ 99A9 3A 51 88     	ld a,(Cuad_objeto)
 347+ 99AC E6 01        	and 1
 348+ 99AE 28 0F        	jr z,1F
 349+ 99B0 2A 3F 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 99B3 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 99B4 22 3F 88     	ld (Posicion_actual),hl
 352+ 99B7 CD AA 9B     	call Genera_coordenadas
 353+ 99BA CD 1F 9B     	call Inc_CTRL_DESPLZ
 354+ 99BD 18 03        	jr 2F
 355+ 99BF CD 1F 9B     1 call Inc_CTRL_DESPLZ
 356+ 99C2 C9           2 ret
 357+ 99C3
 358+ 99C3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 99C3              ;
 360+ 99C3              ;	24/7/22
 361+ 99C3              ;
 362+ 99C3              ;	Ciclo_completo.
 363+ 99C3              ;
 364+ 99C3              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 99C3              ;
 366+ 99C3              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 99C3              ; 	Decrementamos (Columns).
 368+ 99C3              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 99C3              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 99C3
 371+ 99C3
 372+ 99C3 3A 45 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 99C6 FE FF        	cp $ff
 374+ 99C8 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 99CA E6 F0        	and $f0
 376+ 99CC 20 28        	jr nz,3F
 377+ 99CE
 378+ 99CE              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 99CE
 380+ 99CE 3A 45 88     	ld a,(CTRL_DESPLZ)
 381+ 99D1 47           	ld b,a
 382+ 99D2 3E F8        	ld a,$f8
 383+ 99D4 80           	add b
 384+ 99D5 32 45 88     	ld (CTRL_DESPLZ),a
 385+ 99D8 18 1C        	jr 3F
 386+ 99DA 21 3E 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 99DD 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 99DE AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 99DF 32 45 88     	ld (CTRL_DESPLZ),a
 390+ 99E2 3A 51 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 99E5 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 99E7 20 0A        	jr nz,2F
 393+ 99E9 2A 3F 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 99EC 23           	inc hl
 395+ 99ED 22 3F 88     	ld (Posicion_actual),hl
 396+ 99F0 CD AA 9B     	call Genera_coordenadas
 397+ 99F3
 398+ 99F3              ; Inicia el puntero de Sprite.
 399+ 99F3
 400+ 99F3 CD D7 8B     2 call Inicia_puntero_objeto_der
 401+ 99F6 C9           3 ret
 402+ 99F7
 403+ 99F7              ; ******************************************************************************************************************************************************************************************
 404+ 99F7              ;
 405+ 99F7              ;	15/02/23
 406+ 99F7              ;
 407+ 99F7              ;	Mov_left.
 408+ 99F7              ;
 409+ 99F7              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 99F7              ;
 411+ 99F7              Mov_left
 412+ 99F7
 413+ 99F7 21 5F 88     	ld hl,Ctrl_0
 414+ 99FA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99FC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99FC              ; 																	; _ en el caso de que no lo haya.
 417+ 99FC 3A 5F 88     	ld a,(Ctrl_0)
 418+ 99FF CB 77        	bit 6,a
 419+ 9A01 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9A03
 421+ 9A03 CD 19 9B     	call Stop_Amadeus_left
 422+ 9A06 C8           	ret z
 423+ 9A07 20 4A        	jr nz,8F
 424+ 9A09
 425+ 9A09 3A 43 88     11 ld a,(Coordenada_X)
 426+ 9A0C A7           	and a
 427+ 9A0D 20 44        	jr nz,8F
 428+ 9A0F
 429+ 9A0F 3A 45 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9A12 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9A13 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9A15
 433+ 9A15              ; ---------- ---------- ----------
 434+ 9A15
 435+ 9A15 3A 66 88     	ld a,(Vel_left)
 436+ 9A18 FE 02        	cp 2
 437+ 9A1A 28 0F        	jr z,1F
 438+ 9A1C 38 04        	jr c,6F
 439+ 9A1E FE 04        	cp 4
 440+ 9A20 28 12        	jr z,7F
 441+ 9A22
 442+ 9A22              ; ---------- ---------- ----------
 443+ 9A22
 444+ 9A22 3A 45 88     6 ld a,(CTRL_DESPLZ)
 445+ 9A25 FE F8        	cp $f8
 446+ 9A27 20 2A        	jr nz,8F
 447+ 9A29 18 10        	jr 4F
 448+ 9A2B 3A 45 88     1 ld a,(CTRL_DESPLZ)
 449+ 9A2E FE F9        	cp $f9
 450+ 9A30 20 21        	jr nz,8F
 451+ 9A32 18 07        	jr 4F
 452+ 9A34 3A 45 88     7 ld a,(CTRL_DESPLZ)
 453+ 9A37 FE FB        	cp $fb
 454+ 9A39 20 18        	jr nz,8F
 455+ 9A3B
 456+ 9A3B              ; ---------- ---------- ----------
 457+ 9A3B
 458+ 9A3B              4
 459+ 9A3B CD 41 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9A3E              ;	call Reinicio
 461+ 9A3E
 462+ 9A3E              ; ---------- ---------- ----------
 463+ 9A3E
 464+ 9A3E 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9A40 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9A41
 467+ 9A41              ;	ld hl,(Indice_Sprite_izq)
 468+ 9A41              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9A41
 470+ 9A41 CD 5A 9A     	call DESPLZ_IZQ
 471+ 9A44 C1           	pop bc
 472+ 9A45 10 F9        	djnz 5B
 473+ 9A47 2A 3F 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9A4A 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9A4B 22 3F 88     	ld (Posicion_actual),hl
 476+ 9A4E CD AA 9B     	call Genera_coordenadas
 477+ 9A51 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9A53
 479+ 9A53              ; ---------- ---------- ----------
 480+ 9A53
 481+ 9A53              ; Movemos, no hay recolocación.
 482+ 9A53
 483+ 9A53 2A 3F 88     8 ld hl,(Posicion_actual)
 484+ 9A56 CD 5A 9A     	call DESPLZ_IZQ
 485+ 9A59 C9           2 ret
 486+ 9A5A
 487+ 9A5A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A5A              ;
 489+ 9A5A              ;	22/9/22
 490+ 9A5A
 491+ 9A5A              DESPLZ_IZQ
 492+ 9A5A
 493+ 9A5A CD 69 9A     	call Desplaza_izquierda
 494+ 9A5D CD B5 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A60 CD DD 9A     	call Ciclo_completo_2
 496+ 9A63 21 5F 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A66 CB BE        	res 7,(hl)
 498+ 9A68 C9           	ret
 499+ 9A69
 500+ 9A69              Desplaza_izquierda
 501+ 9A69
 502+ 9A69 3A 66 88     	ld a,(Vel_left)
 503+ 9A6C 47           	ld b,a
 504+ 9A6D 2A 4D 88     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A70 23           1 inc hl
 506+ 9A71 23           	inc hl
 507+ 9A72 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A74 22 4D 88     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A77 CD C2 8B     	call Extrae_address
 510+ 9A7A 22 41 88     	ld (Puntero_objeto),hl
 511+ 9A7D
 512+ 9A7D              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A7D
 514+ 9A7D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A7D              ; Cuántos movimientos hemos hecho ??
 516+ 9A7D              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A7D
 518+ 9A7D 2A 49 88     7 ld hl,(Indice_Sprite_izq)
 519+ 9A80 EB           	ex de,hl
 520+ 9A81 A7           	and a
 521+ 9A82 ED 52        	sbc hl,de
 522+ 9A84 CB 3D        	srl l
 523+ 9A86 3E 08        6 ld a,8
 524+ 9A88 95           	sub l
 525+ 9A89 30 1E        	jr nc,3F
 526+ 9A8B
 527+ 9A8B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A8B              ; B="0".
 529+ 9A8B
 530+ 9A8B 04           4 inc b
 531+ 9A8C 3C           	inc a
 532+ 9A8D 20 FC        	jr nz,4B
 533+ 9A8F 78           	ld a,b
 534+ 9A90 08           	ex af,af
 535+ 9A91 2A 49 88     	ld hl,(Indice_Sprite_izq)
 536+ 9A94 23           5 inc hl
 537+ 9A95 23           	inc hl
 538+ 9A96 10 FC        	djnz 5B
 539+ 9A98 22 4D 88     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A9B CD C2 8B     	call Extrae_address
 541+ 9A9E 22 41 88     	ld (Puntero_objeto),hl
 542+ 9AA1
 543+ 9AA1              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9AA1              ; _(Posicion_actual).
 545+ 9AA1
 546+ 9AA1 21 3F 88     	ld hl,Posicion_actual
 547+ 9AA4 35           	dec (hl)
 548+ 9AA5 08           	ex af,af
 549+ 9AA6 6F           	ld l,a
 550+ 9AA7 18 DD        	jr 6B
 551+ 9AA9
 552+ 9AA9              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9AA9
 554+ 9AA9 47           3 ld b,a
 555+ 9AAA 2A 47 88     	ld hl,(Indice_Sprite_der)
 556+ 9AAD 23           2 inc hl
 557+ 9AAE 23           	inc hl
 558+ 9AAF 10 FC        	djnz 2B
 559+ 9AB1 22 4B 88     	ld (Puntero_DESPLZ_der),hl
 560+ 9AB4 C9           8 ret
 561+ 9AB5
 562+ 9AB5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9AB5              ;
 564+ 9AB5              ;	modifica_parametros_1er_DESPLZ
 565+ 9AB5              ;
 566+ 9AB5              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9AB5              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9AB5              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9AB5
 570+ 9AB5 3A 45 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9AB8 A7           	and a
 572+ 9AB9 20 1E        	jr nz,1F
 573+ 9ABB 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9ABC 32 45 88         ld (CTRL_DESPLZ),a
 575+ 9ABF 21 3E 88     	ld hl,Columns
 576+ 9AC2 34           	inc (hl)
 577+ 9AC3 3A 51 88     	ld a,(Cuad_objeto)
 578+ 9AC6 E6 01        	and 1
 579+ 9AC8 20 0F        	jr nz,1F
 580+ 9ACA 2A 3F 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9ACD 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9ACE 22 3F 88     	ld (Posicion_actual),hl
 583+ 9AD1 CD AA 9B     	call Genera_coordenadas
 584+ 9AD4 CD 30 9B     	call Dec_CTRL_DESPLZ
 585+ 9AD7 18 03        	jr 2F
 586+ 9AD9 CD 30 9B     1 call Dec_CTRL_DESPLZ
 587+ 9ADC C9           2 ret
 588+ 9ADD
 589+ 9ADD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9ADD
 591+ 9ADD 3A 45 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9AE0 FE F7        	cp $f7
 593+ 9AE2 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9AE4 30 2C        	jr nc,3F
 595+ 9AE6
 596+ 9AE6              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9AE6
 598+ 9AE6 06 00        	ld b,0
 599+ 9AE8 04           4 inc b
 600+ 9AE9 3C           	inc a
 601+ 9AEA FE F7        	cp $f7
 602+ 9AEC 20 FA        	jr nz,4B
 603+ 9AEE 3E FF        	ld a,$ff
 604+ 9AF0 90           	sub b
 605+ 9AF1 32 45 88     	ld (CTRL_DESPLZ),a
 606+ 9AF4 18 1C        	jr 3F
 607+ 9AF6
 608+ 9AF6              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9AF6
 610+ 9AF6 21 3E 88     1 ld hl,Columns
 611+ 9AF9 35           	dec (hl)
 612+ 9AFA AF           	xor a
 613+ 9AFB 32 45 88     	ld (CTRL_DESPLZ),a
 614+ 9AFE 3A 51 88     	ld a,(Cuad_objeto)
 615+ 9B01 E6 01        	and 1
 616+ 9B03 28 0A        	jr z,2F
 617+ 9B05 2A 3F 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9B08 2B           	dec hl
 619+ 9B09 22 3F 88     	ld (Posicion_actual),hl
 620+ 9B0C CD AA 9B     	call Genera_coordenadas
 621+ 9B0F
 622+ 9B0F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9B0F
 624+ 9B0F CD EA 8B     2 call Inicia_puntero_objeto_izq
 625+ 9B12 C9           3 ret
 626+ 9B13
 627+ 9B13              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9B13              ;
 629+ 9B13              ;	19/10/22
 630+ 9B13              ;
 631+ 9B13              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9B13              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9B13
 634+ 9B13 3A 43 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9B16 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9B18 C9           	ret
 637+ 9B19
 638+ 9B19              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9B19              ;
 640+ 9B19              ;	19/10/22
 641+ 9B19              ;
 642+ 9B19              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9B19              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9B19
 645+ 9B19 3A 43 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9B1C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9B1E C9           	ret
 648+ 9B1F
 649+ 9B1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9B1F              ;
 651+ 9B1F              ;	24/7/22
 652+ 9B1F              ;
 653+ 9B1F              ;	Inc_CTRL_DESPLZ
 654+ 9B1F              ;
 655+ 9B1F              ;
 656+ 9B1F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9B1F
 658+ 9B1F 21 45 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9B22 3A 67 88     	ld a,(Vel_right)
 660+ 9B25 A7           	and a
 661+ 9B26 28 06        	jr z,1F
 662+ 9B28 47           	ld b,a
 663+ 9B29 34           3 inc (hl)
 664+ 9B2A 10 FD        	djnz 3B
 665+ 9B2C 18 01        	jr 2F
 666+ 9B2E 34           1 inc (hl)
 667+ 9B2F C9           2 ret
 668+ 9B30
 669+ 9B30              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9B30              ;
 671+ 9B30              ;	5/2/23
 672+ 9B30              ;
 673+ 9B30              ;	Dec_CTRL_DESPLZ
 674+ 9B30              ;
 675+ 9B30              ;
 676+ 9B30              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9B30
 678+ 9B30 21 45 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9B33 3A 66 88     	ld a,(Vel_left)
 680+ 9B36 A7           	and a
 681+ 9B37 28 06        	jr z,1F
 682+ 9B39 47           	ld b,a
 683+ 9B3A 35           3 dec (hl)
 684+ 9B3B 10 FD        	djnz 3B
 685+ 9B3D 18 01        	jr 2F
 686+ 9B3F 35           1 dec (hl)
 687+ 9B40 C9           2 ret
 688+ 9B41
 689+ 9B41              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9B41
 691+ 9B41 2A 3F 88     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9B44 01 1F 00     	ld bc,31
 693+ 9B47 A7           	and a
 694+ 9B48 ED 4A        	adc hl,bc
 695+ 9B4A 22 3F 88     	ld (Posicion_actual),hl
 696+ 9B4D 21 5F 88     	ld hl,Ctrl_0														; $xxx1
 697+ 9B50 CB C6        	set 0,(hl)
 698+ 9B52 C9           	ret
 699+ 9B53
 700+ 9B53              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9B53
 702+ 9B53 2A 3F 88     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9B56 01 1F 00     	ld bc,31
 704+ 9B59 A7           	and a
 705+ 9B5A ED 42        	sbc hl,bc
 706+ 9B5C 22 3F 88     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B5F 21 5F 88     	ld hl,Ctrl_0
 708+ 9B62 CB CE        	set 1,(hl)
 709+ 9B64 C9           	ret
 710+ 9B65
 711+ 9B65              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B65
 713+ 9B65 24           Reaparece_abajo inc h
 714+ 9B66 01 E0 17     	ld bc,$17e0
 715+ 9B69 A7           	and a
 716+ 9B6A ED 4A        	adc hl,bc
 717+ 9B6C 22 3F 88     	ld (Posicion_actual),hl
 718+ 9B6F 21 5F 88     	ld hl,Ctrl_0
 719+ 9B72 CB D6        	set 2,(hl)
 720+ 9B74 C9           	ret
 721+ 9B75
 722+ 9B75              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B75
 724+ 9B75 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B78 A7           	and a
 726+ 9B79 ED 42        	sbc hl,bc
 727+ 9B7B 22 3F 88     	ld (Posicion_actual),hl
 728+ 9B7E 21 5F 88     	ld hl,Ctrl_0
 729+ 9B81 CB DE        	set 3,(hl)
 730+ 9B83 C9           	ret
 731+ 9B84
 732+ 9B84              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B84              ;
 734+ 9B84              ;	15/07/23
 735+ 9B84
 736+ 9B84              Reinicio
 737+ 9B84
 738+ 9B84              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B84
 740+ 9B84 AF           	xor a
 741+ 9B85 21 76 88     	ld hl,Puntero_indice_mov_bucle
 742+ 9B88 CD A6 9B     	call Limpia_contenido_hl
 743+ 9B8B
 744+ 9B8B 21 3F 88     	ld hl,Posicion_actual
 745+ 9B8E CD A6 9B     	call Limpia_contenido_hl
 746+ 9B91
 747+ 9B91 CD 93 86     	call Inicializa_Puntero_indice_mov
 748+ 9B94 CD 67 9E     	call Inicia_Puntero_mov
 749+ 9B97
 750+ 9B97 21 78 88     	ld hl,Incrementa_puntero
 751+ 9B9A 06 05        	ld b,5
 752+ 9B9C 77           1 ld (hl),a
 753+ 9B9D 23           	inc hl
 754+ 9B9E 10 FC        	djnz 1B
 755+ 9BA0
 756+ 9BA0 21 64 88     	ld hl,Ctrl_2
 757+ 9BA3 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9BA5
 759+ 9BA5 C9           	ret
 760+ 9BA6
 761+ 9BA6 77           Limpia_contenido_hl	ld (hl),a
 762+ 9BA7 23           	inc hl
 763+ 9BA8 77           	ld (hl),a
 764+ 9BA9 C9           	ret
 765+ 9BAA
 766+ 9BAA
# file closed: Direcciones.asm
1766  9BAA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9BAA              ; ------------------------------------------------------------------------
   2+ 9BAA              ;
   3+ 9BAA              ;	30/1/24
   4+ 9BAA              ;
   5+ 9BAA              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9BAA              ;	Fila superior "0", Columna izquierda "0".
   7+ 9BAA              ;
   8+ 9BAA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9BAA              ;
  10+ 9BAA              ;	Modifica: A,BC y DE.
  11+ 9BAA
  12+ 9BAA 7D           Genera_coordenadas ld a,l
  13+ 9BAB E6 1F        	and $1f
  14+ 9BAD 32 43 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9BB0
  16+ 9BB0 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9BB1 FE 40        	cp $40
  18+ 9BB3 38 1C        	jr c,4F
  19+ 9BB5
  20+ 9BB5 CD 12 98     	call calcula_tercio
  21+ 9BB8 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9BB9
  23+ 9BB9 1E 00        	ld e,0
  24+ 9BBB 7D           	ld a,l
  25+ 9BBC E6 E0        	and $e0
  26+ 9BBE 28 01        	jr z,1F
  27+ 9BC0 04           	inc b
  28+ 9BC1
  29+ 9BC1 04           1 inc b
  30+ 9BC2 05           	dec b
  31+ 9BC3 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9BC5              ;														; _ , salimos.
  33+ 9BC5 1C           3 inc e
  34+ 9BC6 D6 20        	sub 32
  35+ 9BC8 20 FB        	jr nz,3B
  36+ 9BCA 10 F5        	djnz 1B
  37+ 9BCC
  38+ 9BCC 7B           2 ld a,e
  39+ 9BCD 32 44 88     	ld (Coordenada_y),a
  40+ 9BD0 C9           	ret
  41+ 9BD1
  42+ 9BD1 AF           4 xor a
  43+ 9BD2 32 44 88     	ld (Coordenada_y),a
  44+ 9BD5 C9           	ret
  45+ 9BD6
  46+ 9BD6              ; ------------------------------------------------------------------------
  47+ 9BD6              ;	28/05/23
  48+ 9BD6              ;
  49+ 9BD6              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9BD6              ;	Fila superior "0", Columna izquierda "0".
  51+ 9BD6              ;
  52+ 9BD6              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9BD6              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9BD6              ;
  55+ 9BD6              ;		DE="$120d"
  56+ 9BD6              ;
  57+ 9BD6              ;		D, (Coordenada_X), Columnas, $12
  58+ 9BD6              ;		E, (Coordenada_y), Filas, $0d
  59+ 9BD6              ;
  60+ 9BD6              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9BD6
  62+ 9BD6              ;	Modifica: A,BC y DE.
  63+ 9BD6
  64+ 9BD6
  65+ 9BD6              Genera_coordenadas_disparo
  66+ 9BD6
  67+ 9BD6              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9BD6
  69+ 9BD6 7D           	ld a,l
  70+ 9BD7 E6 1F        	and $1f
  71+ 9BD9 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9BDA CD 12 98     	call calcula_tercio
  73+ 9BDD 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9BDE 1E 00        	ld e,0
  75+ 9BE0 7D           	ld a,l
  76+ 9BE1 E6 E0        	and $e0
  77+ 9BE3 28 01        	jr z,1F
  78+ 9BE5 04           	inc b
  79+ 9BE6 1C           1 inc e
  80+ 9BE7 D6 20        	sub 32
  81+ 9BE9 20 FB        	jr nz,1B
  82+ 9BEB 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9BED C9           	ret
  84+ 9BEE
# file closed: Genera_coordenadas.asm
1767  9BEE              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BEE              ; Relojes y temporizaciones.
   2+ 9BEE
   3+ 9BEE              ; ------------------------------------------------------
   4+ 9BEE              ;
   5+ 9BEE              ;	16/7/23
   6+ 9BEE              ;
   7+ 9BEE              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BEE              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BEE              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BEE              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BEE              ;
  12+ 9BEE              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BEE              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BEE
  15+ 9BEE              ; Disparo_entidad db 1
  16+ 9BEE              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BEE              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BEE
  19+ 9BEE              Habilita_disparos
  20+ 9BEE
  21+ 9BEE 7E           	ld a,(hl)
  22+ 9BEF A7           	and a
  23+ 9BF0 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BF1
  25+ 9BF1 EB           	ex de,hl
  26+ 9BF2
  27+ 9BF2 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BF3 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BF4
  30+ 9BF4              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BF4
  32+ 9BF4 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BF5 7E           	ld a,(hl)
  34+ 9BF6 23           	inc hl
  35+ 9BF7 77           	ld (hl),a
  36+ 9BF8
  37+ 9BF8 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BF9 3E 01        	ld a,1
  39+ 9BFB 77           	ld (hl),a
  40+ 9BFC C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1768  9BFD              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BFD
   2+ 9BFD
   3+ 9BFD              ;   07/07/23
   4+ 9BFD              ;
   5+ 9BFD              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BFD              ;
   7+ 9BFD              ;   Codificación:
   8+ 9BFD              ;
   9+ 9BFD              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BFD              ;
  11+ 9BFD              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BFD              ;
  13+ 9BFD              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BFD              ;
  15+ 9BFD              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BFD              ;
  17+ 9BFD              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BFD              ;                               ..... %01000010 Vel_up 4
  19+ 9BFD              ;                                               Vel_down 2
  20+ 9BFD              ;                               ..... $42
  21+ 9BFD              ;
  22+ 9BFD              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BFD              ;
  24+ 9BFD              ;                               ..... %01000010 Vel_left 4
  25+ 9BFD              ;                                               Vel_right 2
  26+ 9BFD              ;                               ..... $42
  27+ 9BFD              ;
  28+ 9BFD              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BFD              ;
  30+ 9BFD              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BFD              ;
  32+ 9BFD              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BFD              ;
  34+ 9BFD              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BFD              ;                                     $53
  36+ 9BFD              ;
  37+ 9BFD              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BFD              ;
  39+ 9BFD              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BFD              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BFD              ;
  42+ 9BFD              ;                       Arriba ..... $81
  43+ 9BFD              ;                       Arriba - izquierda ..... $a1
  44+ 9BFD              ;                       Arriba - derecha ..... $91
  45+ 9BFD              ;
  46+ 9BFD              ;                       Abajo ..... $41
  47+ 9BFD              ;                       Abajo - izquierda ..... $61
  48+ 9BFD              ;                       Abajo - derecha ..... $51
  49+ 9BFD              ;
  50+ 9BFD              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BFD              ;
  52+ 9BFD              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BFD              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BFD              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BFD              ;
  56+ 9BFD              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BFD              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BFD              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BFD              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BFD              ;
  61+ 9BFD              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BFD              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BFD              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BFD              ;
  65+ 9BFD              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BFD              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BFD              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BFD              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BFD
  70+ 9BFD              ; ----- ----- ----- ----- -----
  71+ 9BFD
  72+ 9BFD 29 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BFF 31 9C            defw F_1
  74+ 9C01 3B 9C            defw F_2
  75+ 9C03 45 9C            defw Codo_abajo_derecha
  76+ 9C05 79 9C            defw Derecha_y_subiendo
  77+ 9C07 83 9C            defw Derecha_y_subiendo_1
  78+ 9C09 8D 9C            defw F_3
  79+ 9C0B 97 9C            defw F_4
  80+ 9C0D A1 9C            defw Derecha_y_bajando
  81+ 9C0F AB 9C            defw Derecha_y_bajando_1
  82+ 9C11 B5 9C            defw Derecha_y_bajando_2
  83+ 9C13 BF 9C            defw Codo_derecha_abajo
  84+ 9C15 EF 9C            defw Codo_abajo_izq.
  85+ 9C17 23 9D            defw Izquierda_y_subiendo
  86+ 9C19 2D 9D            defw Izquierda_y_subiendo_1
  87+ 9C1B 37 9D            defw F_5
  88+ 9C1D 41 9D            defw F_6
  89+ 9C1F 4B 9D            defw Izquierda_y_bajando
  90+ 9C21 55 9D            defw Izquierda_y_bajando_1
  91+ 9C23 5F 9D            defw Izquierda_y_bajando_2
  92+ 9C25 69 9D            defw Codo_izquierda_abajo
  93+ 9C27 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C29
  95+ 9C29 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C2D 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C31
  98+ 9C31 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C35 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C39 08 00
 100+ 9C3B 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C3F 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C43 0F FE
 102+ 9C45
 103+ 9C45 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C49 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C4D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C51 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C55 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C59 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C5D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C61 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C65 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C69 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C6D 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C71 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C75 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C79
 117+ 9C79 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C7D 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C81 06 00
 119+ 9C83
 120+ 9C83 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C87 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C8B 02 00
 122+ 9C8D
 123+ 9C8D 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C91 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C95 04 00
 125+ 9C97 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C9B 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C9F 08 00
 127+ 9CA1
 128+ 9CA1 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9CA5 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9CA9 02 00
 130+ 9CAB
 131+ 9CAB 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CAF 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CB3 06 00
 133+ 9CB5
 134+ 9CB5 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CB9 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CBD 06 00
 136+ 9CBF
 137+ 9CBF              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CBF
 139+ 9CBF 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CC3 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9CC7 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9CCB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CCF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CD3 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CD7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CDB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CDF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CE3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CE7 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9CEB 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9CEF
 152+ 9CEF 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9CF3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9CF7 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9CFB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9CFF 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D03 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D07 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D0B 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D0F 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D13 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D17 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D1B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D1F 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D23
 166+ 9D23 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D27 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D2B 06 00
 168+ 9D2D
 169+ 9D2D 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D31 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D35 02 00
 171+ 9D37
 172+ 9D37 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D3B 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D3F 04 00
 174+ 9D41 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D45 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D49 08 00
 176+ 9D4B
 177+ 9D4B 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D4F 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D53 02 00
 179+ 9D55
 180+ 9D55 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D59 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D5D 06 00
 182+ 9D5F
 183+ 9D5F 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D63 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D67 06 00
 185+ 9D69
 186+ 9D69 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D6D 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D71 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D75 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D79 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D7D 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D81 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D85 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D89 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D8D 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D91 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D95 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D99
 199+ 9D99              ; ----- ----- ----- ----- -----
 200+ 9D99              ;
 201+ 9D99              ;   28/12/23
 202+ 9D99
 203+ 9D99              Movimiento
 204+ 9D99
 205+ 9D99              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D99
 207+ 9D99 3A 64 88         ld a,(Ctrl_2)
 208+ 9D9C CB 57            bit 2,a
 209+ 9D9E 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9DA0
 211+ 9DA0 2A 74 88         ld hl,(Puntero_mov)
 212+ 9DA3 7E               ld a,(hl)
 213+ 9DA4
 214+ 9DA4              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9DA4
 216+ 9DA4              Inicia_desplazamiento.
 217+ 9DA4
 218+ 9DA4              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9DA4
 220+ 9DA4 CD A4 9E         call Ajusta_velocidad_desplazamiento
 221+ 9DA7
 222+ 9DA7              ; Iniciamos (Repetimos_mov).
 223+ 9DA7
 224+ 9DA7 7E               ld a,(hl)
 225+ 9DA8 E6 0F            and $0f
 226+ 9DAA 32 7A 88         ld (Repetimos_desplazamiento),a
 227+ 9DAD 32 7B 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9DB0
 229+ 9DB0              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9DB0
 231+ 9DB0 23               inc hl
 232+ 9DB1 7E               ld a,(hl)
 233+ 9DB2 32 7D 88         ld (Cola_de_desplazamiento),a
 234+ 9DB5 2B               dec hl
 235+ 9DB6
 236+ 9DB6 21 64 88         ld hl,Ctrl_2
 237+ 9DB9 CB D6            set 2,(hl)
 238+ 9DBB
 239+ 9DBB              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9DBB              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9DBB
 242+ 9DBB              Desplazamiento_iniciado
 243+ 9DBB
 244+ 9DBB CD 72 9E         call Aplica_desplazamiento
 245+ 9DBE
 246+ 9DBE              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9DBE
 248+ 9DBE 3A 9D 88         ld a,(Ctrl_3)
 249+ 9DC1 CB 57            bit 2,a
 250+ 9DC3 C0               ret nz
 251+ 9DC4
 252+ 9DC4 3A 64 88         ld a,(Ctrl_2)
 253+ 9DC7 CB 67            bit 4,a
 254+ 9DC9 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9DCA
 256+ 9DCA 21 7A 88     3 ld hl,Repetimos_desplazamiento
 257+ 9DCD 35               dec (hl)
 258+ 9DCE C0               ret nz
 259+ 9DCF
 260+ 9DCF              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DCF              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DCF              ; Analiza (Cola_de_desplazamiento).
 263+ 9DCF
 264+ 9DCF 3A 7D 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DD2 A7               and a
 266+ 9DD3 CC CD 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DD6 28 30            jr z,Reinicia_el_movimiento
 268+ 9DD8
 269+ 9DD8 FE FF            cp $ff
 270+ 9DDA 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DDC
 272+ 9DDC FE FE            cp $fe
 273+ 9DDE CC 4B 9E         call z,Fijamos_bucle
 274+ 9DE1 28 25            jr z,Reinicia_el_movimiento
 275+ 9DE3
 276+ 9DE3 FE FD            cp $fd
 277+ 9DE5 20 11            jr nz,1F
 278+ 9DE7
 279+ 9DE7              ; ---
 280+ 9DE7              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DE7
 282+ 9DE7 3A 64 88         ld a,(Ctrl_2)
 283+ 9DEA CB 5F            bit 3,a
 284+ 9DEC 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9DEE
 286+ 9DEE              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9DEE
 288+ 9DEE 21 64 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9DF1 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9DF3
 291+ 9DF3 CD 5C 9E         call Inicia_Repetimos_movimiento
 292+ 9DF6 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9DF8              ; ---
 294+ 9DF8
 295+ 9DF8 FE 01        1 cp 1
 296+ 9DFA CA 35 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9DFD
 298+ 9DFD 3D               dec a
 299+ 9DFE 32 7D 88         ld (Cola_de_desplazamiento),a
 300+ 9E01
 301+ 9E01 3A 7B 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9E04 32 7A 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9E07              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9E07 C9               ret
 305+ 9E08
 306+ 9E08              Reinicia_el_movimiento
 307+ 9E08
 308+ 9E08 3A 64 88         ld a,(Ctrl_2)
 309+ 9E0B CB 5F            bit 3,a
 310+ 9E0D 28 1B            jr z,2F
 311+ 9E0F
 312+ 9E0F              ; (Cola_de_desplazamiento)="254".
 313+ 9E0F
 314+ 9E0F 21 7C 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9E12 35               dec (hl)
 316+ 9E13 20 15            jr nz,2F
 317+ 9E15
 318+ 9E15              ; Fin de las repeticiones del último movimiento.
 319+ 9E15
 320+ 9E15 21 64 88         ld hl,Ctrl_2
 321+ 9E18 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9E1A
 323+ 9E1A 2A 74 88         ld hl,(Puntero_mov)
 324+ 9E1D 23               inc hl
 325+ 9E1E 23               inc hl
 326+ 9E1F 23               inc hl
 327+ 9E20 22 74 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9E23              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9E23 7E               ld a,(hl)
 330+ 9E24 32 7D 88         ld (Cola_de_desplazamiento),a
 331+ 9E27
 332+ 9E27 C3 CF 9D         jp Cola
 333+ 9E2A
 334+ 9E2A CD 67 9E     2 call Inicia_Puntero_mov
 335+ 9E2D
 336+ 9E2D 21 64 88         ld hl,Ctrl_2
 337+ 9E30 CB 96            res 2,(hl)
 338+ 9E32
 339+ 9E32 C3 99 9D         jp Movimiento
 340+ 9E35
 341+ 9E35              Siguiente_desplazamiento
 342+ 9E35
 343+ 9E35              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E35              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E35
 346+ 9E35 21 64 88         ld hl,Ctrl_2
 347+ 9E38 CB 96            res 2,(hl)
 348+ 9E3A
 349+ 9E3A 2A 74 88         ld hl,(Puntero_mov)
 350+ 9E3D 23               inc hl
 351+ 9E3E 23               inc hl
 352+ 9E3F 22 74 88         ld (Puntero_mov),hl
 353+ 9E42
 354+ 9E42 7E               ld a,(hl)
 355+ 9E43 A7               and a
 356+ 9E44 CC CD 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E47 CA 08 9E         jp z,Reinicia_el_movimiento
 358+ 9E4A
 359+ 9E4A C9               ret
 360+ 9E4B
 361+ 9E4B              ; Subrutinas -----------------------------------------
 362+ 9E4B              ; ---------- --------- --------- ---------- ----------
 363+ 9E4B              ;
 364+ 9E4B              ;   24/07/23
 365+ 9E4B              ;
 366+ 9E4B              ;   Fijamos_bucle
 367+ 9E4B              ;
 368+ 9E4B              ;
 369+ 9E4B
 370+ 9E4B              Fijamos_bucle
 371+ 9E4B
 372+ 9E4B 3A 78 88         ld a,(Incrementa_puntero)
 373+ 9E4E 3C               inc a
 374+ 9E4F 32 79 88         ld (Incrementa_puntero_backup),a
 375+ 9E52
 376+ 9E52 CD CD 9E         call Incrementa_Puntero_indice_mov
 377+ 9E55 2A 72 88         ld hl,(Puntero_indice_mov)
 378+ 9E58 22 76 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9E5B C9               ret
 380+ 9E5C
 381+ 9E5C              ; ---------- --------- --------- ---------- ----------
 382+ 9E5C              ;
 383+ 9E5C              ;   07/7/23
 384+ 9E5C              ;
 385+ 9E5C              ;   Inicia_Repetimos_movimiento
 386+ 9E5C              ;
 387+ 9E5C              ;
 388+ 9E5C
 389+ 9E5C              Inicia_Repetimos_movimiento
 390+ 9E5C
 391+ 9E5C              ; Iniciamos (Repetimos_movimiento).
 392+ 9E5C
 393+ 9E5C DD 2A 74 88      ld ix,(Puntero_mov)
 394+ 9E60 DD 7E 02         ld a,(ix+2)
 395+ 9E63 32 7C 88         ld (Repetimos_movimiento),a
 396+ 9E66
 397+ 9E66 C9               ret
 398+ 9E67
 399+ 9E67              ; ---------- --------- --------- ---------- ----------
 400+ 9E67              ;
 401+ 9E67              ;   26/6/23
 402+ 9E67              ;
 403+ 9E67              ;   Inicia_Puntero_mov
 404+ 9E67              ;
 405+ 9E67              ;
 406+ 9E67
 407+ 9E67 2A 72 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E6A 5E               ld e,(hl)
 409+ 9E6B 23               inc hl
 410+ 9E6C 56               ld d,(hl)
 411+ 9E6D EB               ex de,hl
 412+ 9E6E 22 74 88         ld (Puntero_mov),hl
 413+ 9E71 C9               ret
 414+ 9E72
 415+ 9E72              ; ---------- --------- --------- ---------- ----------
 416+ 9E72              ;
 417+ 9E72              ;   27/06/23
 418+ 9E72              ;
 419+ 9E72              ;   Aplica_movimiento.
 420+ 9E72
 421+ 9E72              Aplica_desplazamiento
 422+ 9E72
 423+ 9E72              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E72
 425+ 9E72 2A 74 88         ld hl, (Puntero_mov)
 426+ 9E75
 427+ 9E75 7E               ld a,(hl)
 428+ 9E76 E6 F0            and $f0
 429+ 9E78 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E79
 431+ 9E79 CB 7E            bit 7,(hl)
 432+ 9E7B 28 03            jr z,1F
 433+ 9E7D CD 91 98         call Mov_up
 434+ 9E80 2A 74 88     1 ld hl, (Puntero_mov)
 435+ 9E83 CB 76            bit 6,(hl)
 436+ 9E85 28 09            jr z,2F
 437+ 9E87 CD 58 98         call Mov_down
 438+ 9E8A
 439+ 9E8A              ; Se ha aplicado reinicio ???
 440+ 9E8A              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E8A
 442+ 9E8A 3A 9D 88         ld a,(Ctrl_3)
 443+ 9E8D CB 57            bit 2,a
 444+ 9E8F C0               ret nz
 445+ 9E90
 446+ 9E90 2A 74 88     2 ld hl, (Puntero_mov)
 447+ 9E93 CB 6E            bit 5,(hl)
 448+ 9E95 28 03            jr z,3F
 449+ 9E97 CD F7 99         call Mov_left
 450+ 9E9A 2A 74 88     3 ld hl, (Puntero_mov)
 451+ 9E9D CB 66            bit 4,(hl)
 452+ 9E9F C8               ret z
 453+ 9EA0 CD D4 98         call Mov_right
 454+ 9EA3 C9               ret
 455+ 9EA4
 456+ 9EA4              ; ---------- --------- --------- ---------- ----------
 457+ 9EA4              ;
 458+ 9EA4              ;   26/06/23
 459+ 9EA4              ;
 460+ 9EA4              ;   Ajusta_velocidad_desplazamiento.
 461+ 9EA4
 462+ 9EA4              Ajusta_velocidad_desplazamiento
 463+ 9EA4
 464+ 9EA4              ; 1er byte de la cadena de movimiento.
 465+ 9EA4              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9EA4
 467+ 9EA4 CD C2 9E         call Extrae_nibble_alto
 468+ 9EA7
 469+ 9EA7 32 68 88         ld (Vel_up),a
 470+ 9EAA 79               ld a,c
 471+ 9EAB E6 0F            and $0f
 472+ 9EAD 32 69 88         ld (Vel_down),a
 473+ 9EB0
 474+ 9EB0              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9EB0              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9EB0
 477+ 9EB0 23               inc hl
 478+ 9EB1 CD C2 9E         call Extrae_nibble_alto
 479+ 9EB4
 480+ 9EB4 32 66 88         ld (Vel_left),a
 481+ 9EB7 79               ld a,c
 482+ 9EB8 E6 0F            and $0f
 483+ 9EBA 32 67 88         ld (Vel_right),a
 484+ 9EBD
 485+ 9EBD              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9EBD
 487+ 9EBD 23               inc hl
 488+ 9EBE 22 74 88         ld (Puntero_mov),hl
 489+ 9EC1 C9               ret
 490+ 9EC2
 491+ 9EC2 06 04        Extrae_nibble_alto ld b,4
 492+ 9EC4 7E               ld a,(hl)
 493+ 9EC5 4F               ld c,a
 494+ 9EC6 E6 F0            and $f0
 495+ 9EC8 CB 3F        1 srl a
 496+ 9ECA 10 FC            djnz 1B
 497+ 9ECC C9               ret
 498+ 9ECD
 499+ 9ECD              ; ---------- --------- --------- ---------- ----------
 500+ 9ECD              ;
 501+ 9ECD              ;   5/7/23
 502+ 9ECD              ;
 503+ 9ECD              ;   Incrementa_Puntero_indice_mov
 504+ 9ECD
 505+ 9ECD              Incrementa_Puntero_indice_mov
 506+ 9ECD
 507+ 9ECD 21 78 88         ld hl,Incrementa_puntero
 508+ 9ED0 34               inc (hl)
 509+ 9ED1
 510+ 9ED1 2A 72 88         ld hl,(Puntero_indice_mov)
 511+ 9ED4 01 02 00         ld bc,2
 512+ 9ED7 A7               and a
 513+ 9ED8 09               add hl,bc
 514+ 9ED9 22 72 88         ld (Puntero_indice_mov),hl
 515+ 9EDC
 516+ 9EDC 7E               ld a,(hl)
 517+ 9EDD A7               and a
 518+ 9EDE
 519+ 9EDE              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9EDE
 521+ 9EDE              ;    jr z,$
 522+ 9EDE
 523+ 9EDE              ;! Reinicia el Patrón de movimiento.
 524+ 9EDE
 525+ 9EDE CC E3 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9EE1
 527+ 9EE1 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9EE2
 529+ 9EE2 C9               ret
 530+ 9EE3
 531+ 9EE3              ; ---------- --------- --------- ---------- ----------
 532+ 9EE3              ;
 533+ 9EE3              ;   15/01/24
 534+ 9EE3              ;
 535+ 9EE3              ;   Inicializa_Puntero_indice_mov
 536+ 9EE3
 537+ 9EE3              Inicializa_Puntero_indice_mov_2
 538+ 9EE3
 539+ 9EE3              ; Existe etiqueta de bucle principal???
 540+ 9EE3
 541+ 9EE3 2A 76 88         ld hl,(Puntero_indice_mov_bucle)
 542+ 9EE6 24               inc h
 543+ 9EE7 25               dec h
 544+ 9EE8 28 05            jr z,2F
 545+ 9EEA
 546+ 9EEA 22 72 88         ld (Puntero_indice_mov),hl
 547+ 9EED 18 14            jr 3F
 548+ 9EEF
 549+ 9EEF              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9EEF
 551+ 9EEF 3A 78 88     2 ld a,(Incrementa_puntero)
 552+ 9EF2 47               ld b,a
 553+ 9EF3
 554+ 9EF3 2A 72 88         ld hl,(Puntero_indice_mov)
 555+ 9EF6 2B           1 dec hl
 556+ 9EF7 2B               dec hl
 557+ 9EF8 10 FC            djnz 1B
 558+ 9EFA 22 72 88         ld (Puntero_indice_mov),hl
 559+ 9EFD
 560+ 9EFD AF               xor a
 561+ 9EFE 32 78 88         ld (Incrementa_puntero),a
 562+ 9F01 18 06            jr 4F
 563+ 9F03
 564+ 9F03 3A 79 88     3 ld a,(Incrementa_puntero_backup)
 565+ 9F06 32 78 88         ld (Incrementa_puntero),a
 566+ 9F09 C9           4 ret
 567+ 9F0A
 568+ 9F0A              ; ----------------------------------------------------------------------
 569+ 9F0A              ;
 570+ 9F0A              ;   25/01/24
 571+ 9F0A              ;
 572+ 9F0A              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 573+ 9F0A
 574+ 9F0A 3A 3C 88     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 575+ 9F0D CD A2 87         call Calcula_salto_en_BC
 576+ 9F10 21 6A 88         ld hl,Contador_general_de_mov_masticados_Entidad_1
 577+ 9F13 A7               and a
 578+ 9F14 ED 4A            adc hl,bc
 579+ 9F16 C9               ret
 580+ 9F17
 581+ 9F17
# file closed: Patrones_de_mov.asm
1769  9F17              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F17              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F17              ;
   3+ 9F17              ;	12/12/23
   4+ 9F17              ;
   5+ 9F17              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F17
   7+ 9F17              ;	ADC HL,SP	LD (addr),SP
   8+ 9F17              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F17              ;	ADD IX,SP	LD SP,nn
  10+ 9F17              ; 	ADD IY,SP	LD SP,HL
  11+ 9F17              ;				LD SP,IX
  12+ 9F17              ;	DEC SP		LD SP,IY
  13+ 9F17
  14+ 9F17              ;	EX (SP),HL
  15+ 9F17              ;	EX (SP),IX
  16+ 9F17              ;	EX (SP),IY
  17+ 9F17
  18+ 9F17              ;	INC SP
  19+ 9F17
  20+ 9F17                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 8F 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 59 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 5B 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 7E 88         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 97 88         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 5F 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 9B 88         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 95 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 7E 88         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 97 88         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 5F 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 9B 88         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 8F 88      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 95 88     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 8F 88  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 95 88         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 95 88         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1770  718B
1771  718B              	SAVESNA "Pruebas.sna", START
1772  718B
1773  718B
1774  718B
1775  718B
# file closed: Banco_de_Pruebas.asm
