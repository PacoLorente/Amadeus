# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A3 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD D1 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD E1 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 AD 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B A3 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 80 89        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 107  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 39 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 04           Nivel_1 db 4									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8939
  19+ 8939 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 893E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8942 01 02
  22+ 8944 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8948 01 02
  23+ 894A
# file closed: Niveles.asm
 108  894A
 109  894A              ; ******************************************************************************************************************************************************************************************
 110  894A              ; Constantes.
 111  894A              ; ******************************************************************************************************************************************************************************************
 112  894A              ;
 113  894A              ; 25/12/23
 114  894A
 115  894A              ;
 116  894A              ; Constantes.
 117  894A              ;
 118  894A
 119  894A              Sprite_vacio equ $eae0
 120  894A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  894A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  894A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  894A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  894A
 125  894A
 126  894A              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  894A              ;
 128  894A              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  894A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  894A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  894A              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  894A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  894A              ;														; 55 Bytes.
 134  894A
 135  894A              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 136  894A              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 137  894A
 138  894A              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  894A
 140  894A              ; ******************************************************************************************************************************************************************************************
 141  894A              ; Variables.
 142  894A              ; ******************************************************************************************************************************************************************************************
 143  894A              ;
 144  894A              ; 18/01/24
 145  894A              ;
 146  894A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  894A              ;
 148  894A
 149  894A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  894A
 151  894A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  894B              ;															- Patrón de movimiento.
 153  894B              ;															- Aspecto
 154  894B 00           Filas db 0												; Filas. [DRAW]
 155  894C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 156  894D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  894F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8951 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8952 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8953
 161  8953              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8953
 163  8953 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8954              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8954              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8954 00           Attr db 0												; Atributos de la entidad:
 167  8955
 168  8955              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8955              ;
 170  8955              ;	COLORES: 0 ..... NEGRO
 171  8955              ;    		 1 ..... AZUL
 172  8955              ; 			 2 ..... ROJO
 173  8955              ;			 3 ..... MAGENTA
 174  8955              ; 			 4 ..... VERDE
 175  8955              ; 			 5 ..... CIAN
 176  8955              ;			 6 ..... AMARILLO
 177  8955              ; 			 7 ..... BLANCO
 178  8955
 179  8955 00 00        Indice_Sprite_der defw 0
 180  8957 00 00        Indice_Sprite_izq defw 0
 181  8959 00 00        Puntero_DESPLZ_der defw 0
 182  895B 00 00        Puntero_DESPLZ_izq defw 0
 183  895D
 184  895D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  895F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8960
 187  8960              ; Variables de objeto. (Características).
 188  8960
 189  8960 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8961              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8961              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8961 00 00 00...  Variables_de_borrado ds 6
 193  8967
 194  8967 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  8969              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  8969
 197  8969 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  896B
 199  896B              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  896B              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  896B
 202  896B 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  896D              ;														; _palabras que componen el "movimiento_masticado".
 204  896D
 205  896D              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  896D
 207  896D 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  896E              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  896E              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  896E              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  896E              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  896E              ;
 213  896E              ; 														DESCRIPCIÖN:
 214  896E              ;
 215  896E              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  896E              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  896E              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  896E              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  896E              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  896E              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  896E              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  896E              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  896E              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  896E              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  896E              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  896E              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  896E              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  896E              ;
 229  896E              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  896E              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  896E              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  896E
 233  896E              ; Variables de funcionamiento. [DRAW].
 234  896E
 235  896E 00           Columnas db 0
 236  896F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8971              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8971 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8972
 240  8972              ; variables de control general.
 241  8972
 242  8972 00           Ctrl_2 db 0
 243  8973              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8973              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8973              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8973              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8973              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8973              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8973              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8973              ;
 251  8973              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8973              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8973              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8973              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8973              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8973              ;														BIT 4, ???
 257  8973              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8973
 259  8973 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  8974
 261  8974              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  8974
 263  8974              ;					         		---------;      ;---------
 264  8974
 265  8974              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  8974
 267  8974              Perfiles_de_velocidad
 268  8974
 269  8974 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  8975 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  8976 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  8977 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  8978
 274  8978              ; Contadores de 16 bits.
 275  8978
 276  8978 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  897A 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  897C 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  897E 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8980
 281  8980              ; Almacenes de mov_masticados.
 282  8980
 283  8980 00 EB        Almacen_de_movimientos_masticados_Entidad_1 defw $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 284  8982              ; .....
 285  8982              ; .....
 286  8982              ; .....
 287  8982              ; .....
 288  8982
 289  8982              ; Movimiento. ------------------------------------------------------------------------------------------------------
 290  8982
 291  8982 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 292  8984 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 293  8986 00 00        Puntero_indice_mov_bucle defw 0							;
 294  8988              ;
 295  8988              ;
 296  8988 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 297  8989              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 298  8989              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 299  8989 00           Incrementa_puntero_backup db 0
 300  898A 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 301  898B              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 302  898B 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 303  898C 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 304  898D 00           Cola_de_desplazamiento db 0								; Este byte indica:
 305  898E              ;
 306  898E              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 307  898E              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 308  898E              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 309  898E              ;
 310  898E              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 311  898E              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 312  898E              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 313  898E              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 314  898E              ;
 315  898E              ;														;	"$ff" ..... Bucle infinito de repetición.
 316  898E              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 317  898E              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 318  898E              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 319  898E
 320  898E 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 321  898F
 322  898F              ;														DESCRIPCIÓN:
 323  898F              ;
 324  898F              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 325  898F              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 326  898F              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 327  898F              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 328  898F              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 329  898F              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 330  898F
 331  898F              ;														BIT 3, Recarga de nueva oleada.
 332  898F              ;														BIT 4, Recarga de nueva oleada.
 333  898F              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 334  898F              ;														BIT 6, **** Frame completo.
 335  898F              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 336  898F
 337  898F 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 338  8991              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 339  8991              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 340  8991              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 341  8991
 342  8991              ; Gestión de ENTIDADES y CAJAS.
 343  8991
 344  8991 00 00        Puntero_store_caja defw 0
 345  8993 00 00        Puntero_restore_caja defw 0
 346  8995 00 00        Indice_restore_caja defw 0
 347  8997 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 348  8998 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 349  8999 00           Entidades_en_curso db 0									; ..... ..... .....
 350  899A 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 351  899B              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 352  899B              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 353  899B              ;														; _ (Numero_de_malotes)="0".
 354  899B 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 355  899D 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 356  899F              ;														; _ puntero (Indice_entidades).
 357  899F
 358  899F              ;---------------------------------------------------------------------------------------------------------------
 359  899F              ;
 360  899F              ;	11/01/24
 361  899F              ;
 362  899F              ;	Álbumes.
 363  899F
 364  899F 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 365  89A1              ;														; _variable para almacenar lo posición del puntero_
 366  89A1              ; 														; _de pila, SP.
 367  89A1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 368  89A3              ;														; La utiliza la rutina [Extrae_foto_registros].
 369  89A3 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 370  89A5 00 80        Stack_snapshot defw Album_de_fotos
 371  89A7 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 372  89A9
 373  89A9              ;End_Snapshot defw Album_de_fotos
 374  89A9              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 375  89A9 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 376  89AB              ;														; _el snapshot de los registros del siguiente disparo.
 377  89AB              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 378  89AB AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 379  89AD
 380  89AD 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 381  89AE              ;
 382  89AE              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 383  89AE              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 384  89AE              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 385  89AE
 386  89AE 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 387  89AF              ;
 388  89AF              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 389  89AF              ;
 390  89AF              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 391  89AF              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 392  89AF              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 393  89AF              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 394  89AF              ;
 395  89AF              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 396  89AF              ;															_ masticados ya generados.
 397  89AF              ;
 398  89AF              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 399  89AF              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 400  89AF              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 401  89AF              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 402  89AF
 403  89AF
 404  89AF              ; Gestión de Disparos.
 405  89AF
 406  89AF 00           Numero_de_disparotes db 0
 407  89B0 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 408  89B2 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 409  89B4 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 410  89B5              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 411  89B5              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 412  89B5 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 413  89B7              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 414  89B7              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 415  89B7              ;														; _produzca colisión.
 416  89B7 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 417  89B9              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 418  89B9 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 419  89BC              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 420  89BC 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 421  89BF              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 422  89BF 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 423  89C0
 424  89C0              ;---------------------------------------------------------------------------------------------------------------
 425  89C0
 426  89C0              ; Relojes y temporizaciones.
 427  89C0
 428  89C0 00           Contador_de_frames db 0
 429  89C1 00           Contador_de_frames_2 db 0
 430  89C2
 431  89C2 04           Clock_explosion db 4
 432  89C3 14           Clock_Entidades_en_curso db 20
 433  89C4 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 434  89C5              ;														; Repite la oleada de entidades.
 435  89C5 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 436  89C6 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 437  89C7 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 438  89C8
 439  89C8 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 440  89C9 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 441  89CA 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 442  89CB
 443  89CB              ;---------------------------------------------------------------------------------------------------------------
 444  89CB
 445  89CB              ; Gestión de NIVELES.
 446  89CB
 447  89CB 00           Nivel db 0												; Nivel actual del juego.
 448  89CC 00 00        Puntero_indice_NIVELES defw 0
 449  89CE 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 450  89D0              ; 														; _ que definen el NIVEL.
 451  89D0              ; Y todo comienza aquí .....
 452  89D0              ;
 453  89D0              ; 	INICIO  *************************************************************************************************************************************************************************
 454  89D0              ;
 455  89D0              ;	5/1/24
 456  89D0
 457  89D0              START
 458  89D0
 459  89D0 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 460  89D3 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 461  89D5 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 462  89D7 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 463  89D9 F3           	DI
 464  89DA
 465  89DA 3E 07        	ld a,%00000111
 466  89DC CD AF 9E     	call Cls
 467  89DF CD 42 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 468  89E2
 469  89E2              ; INICIALIZACIÓN.
 470  89E2
 471  89E2              ;	Inicializa 1er Nivel.
 472  89E2
 473  89E2 21 28 89     	ld hl,Indice_de_niveles
 474  89E5 22 CC 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 475  89E8 CD F3 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 476  89EB
 477  89EB              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 478  89EB              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 479  89EB              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 480  89EB
 481  89EB              ;	Provisional, (para desarrollo).
 482  89EB
 483  89EB              	;-
 484  89EB              ;	ld hl,Numero_parcial_de_entidades
 485  89EB              ;	ld b,(hl)
 486  89EB              ;	inc b
 487  89EB              ;	dec b
 488  89EB              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 489  89EB
 490  89EB CD 38 8D     4 call Inicia_Entidades
 491  89EE
 492  89EE CD 05 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 493  89F1
 494  89F1              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 495  89F1              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 496  89F1              ; (Esto se dá cuando se inicia una nueva oleada).
 497  89F1
 498  89F1              ;	ld a,(Ctrl_1)
 499  89F1              ;	bit 3,a
 500  89F1              ;	jr nz,5F											; Loop
 501  89F1
 502  89F1              ; 	INICIA AMADEUS !!!!!
 503  89F1
 504  89F1              ;3 call Restore_Amadeus
 505  89F1              ;	call Inicia_Puntero_objeto
 506  89F1              ;	call Draw
 507  89F1
 508  89F1              ;	call Guarda_movimiento_masticado	;! Provisional
 509  89F1
 510  89F1              ;	call Guarda_foto_registros
 511  89F1              ;	call Guarda_datos_de_borrado_Amadeus
 512  89F1
 513  89F1              ;	ld de,Amadeus_db
 514  89F1              ;	call Store_Amadeus
 515  89F1
 516  89F1              ; 	INICIA DISPAROS !!!!!
 517  89F1
 518  89F1              ;	call Inicia_Puntero_Disparo_Entidades
 519  89F1              ;	call Inicia_Puntero_Disparo_Amadeus
 520  89F1
 521  89F1              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 522  89F1
 523  89F1              ;5 call Inicia_punteros_de_cajas
 524  89F1              ;	call Restore_entidad
 525  89F1
 526  89F1              ;	ld a,(Ctrl_1)
 527  89F1              ;	bit 3,a
 528  89F1              ;	jr z,6F
 529  89F1
 530  89F1              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 531  89F1
 532  89F1              ;	ld hl,Ctrl_1
 533  89F1              ;	res 3,(hl)
 534  89F1              ;	jr Main
 535  89F1
 536  89F1              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 537  89F1
 538  89F1 21 AD 89     6 ld hl,Ctrl_3
 539  89F4 CB C6        	set 0,(hl)											; Frame completo.
 540  89F6 FB           	ei
 541  89F7 76           	halt
 542  89F8
 543  89F8              ; ------------------------------------
 544  89F8
 545  89F8              Main
 546  89F8              ;
 547  89F8              ;	11/12/23
 548  89F8
 549  89F8              ; Aparece nueva entidad ???
 550  89F8
 551  89F8              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 552  89F8              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 553  89F8              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 554  89F8              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 555  89F8              ;														; _un 2º bloque.
 556  89F8
 557  89F8              ;	ld a,1
 558  89F8              ;	out ($fe),a
 559  89F8
 560  89F8 3A C3 89     	ld a,(Clock_Entidades_en_curso)
 561  89FB 47           	ld b,a
 562  89FC 3A C0 89     	ld a,(Contador_de_frames)
 563  89FF B8           	cp b
 564  8A00 20 18        	jr nz,13F
 565  8A02
 566  8A02              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 567  8A02              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 568  8A02
 569  8A02 3A 98 89     21 ld a,(Numero_parcial_de_entidades)
 570  8A05 47           	ld b,a
 571  8A06 3A 99 89     	ld a,(Entidades_en_curso)
 572  8A09 B8           	cp b
 573  8A0A 28 0E        	jr z,13F
 574  8A0C 30 0C        	jr nc,13F
 575  8A0E
 576  8A0E 3C           	inc a
 577  8A0F 32 99 89     	ld (Entidades_en_curso),a
 578  8A12
 579  8A12              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 580  8A12
 581  8A12 3A C3 89     	ld a,(Clock_Entidades_en_curso)
 582  8A15              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 583  8A15              ;! _ IMPREDECIBLE !!!!
 584  8A15 C6 64        	add 100
 585  8A17 32 C3 89     	ld (Clock_Entidades_en_curso),a
 586  8A1A
 587  8A1A              ; -------------------------------------------------------------------------------------------------------------
 588  8A1A
 589  8A1A              ; Habilita disparos.
 590  8A1A
 591  8A1A              13
 592  8A1A
 593  8A1A              ;	ld hl,Disparo_Amadeus
 594  8A1A              ;	ld de,CLOCK_repone_disparo_Amadeus
 595  8A1A              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 596  8A1A
 597  8A1A              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 598  8A1A              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 599  8A1A              ;	call Habilita_disparos
 600  8A1A
 601  8A1A              ; COLISIONES.
 602  8A1A
 603  8A1A              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 604  8A1A
 605  8A1A              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 606  8A1A              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 607  8A1A              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 608  8A1A
 609  8A1A              ;	xor a
 610  8A1A              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 611  8A1A
 612  8A1A              ;	call Inicia_punteros_de_cajas
 613  8A1A              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 614  8A1A              ; 														; _ en DRAW.
 615  8A1A
 616  8A1A              ;	ld a,(Filas)
 617  8A1A              ;	and a
 618  8A1A              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 619  8A1A              ;	call Incrementa_punteros_de_cajas
 620  8A1A              ;	jr 12B
 621  8A1A
 622  8A1A              ; ---------------------------------------------------------------------------------------
 623  8A1A
 624  8A1A 3A 98 89     10 ld a,(Numero_parcial_de_entidades)
 625  8A1D 47               ld b,a
 626  8A1E A7           	and a
 627  8A1F 20 00        	jr nz,11F
 628  8A21
 629  8A21              ;	ld hl,Ctrl_1;
 630  8A21              ;	bit 4,(hl)
 631  8A21              ;	jp nz,16F
 632  8A21
 633  8A21              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 634  8A21
 635  8A21              ;	ld hl,Ctrl_1
 636  8A21              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 637  8A21
 638  8A21              ;	ld a,(Contador_de_frames)
 639  8A21              ;	inc a
 640  8A21              ;	ld (Activa_recarga_cajas),a
 641  8A21
 642  8A21              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 643  8A21
 644  8A21 3A 99 89     11 ld a,(Entidades_en_curso)
 645  8A24 A7           	and a
 646  8A25 28 14        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 647  8A27 47           	ld b,a												; No hay entidades que gestionar.
 648  8A28
 649  8A28              ; ( Código que ejecutamos con cada entidad: ).
 650  8A28
 651  8A28              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 652  8A28
 653  8A28 C5           15 push bc 												; Nº de entidades en curso.
 654  8A29
 655  8A29 CD D8 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 656  8A2C
 657  8A2C              ; Existe "Entidad_guía" ???.
 658  8A2C              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 659  8A2C
 660  8A2C              ;	ld a,(Ctrl_3)
 661  8A2C              ;	bit 1,a
 662  8A2C              ;	jr nz,22F
 663  8A2C
 664  8A2C              ; Almacén de "Movimientos_masticados" lleno ???
 665  8A2C              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 666  8A2C              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 667  8A2C
 668  8A2C              ;;	ld a,(Ctrl_3)
 669  8A2C              ;;	bit 3,a
 670  8A2C              ;;	jr nz,22F
 671  8A2C
 672  8A2C              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 673  8A2C
 674  8A2C              ;	ld hl,Ctrl_2
 675  8A2C              ;	set 5,(hl)
 676  8A2C              ;	ld hl,Ctrl_3
 677  8A2C              ;	set 1,(hl)
 678  8A2C
 679  8A2C              ; Impacto ???
 680  8A2C
 681  8A2C              ;22 ld a,(Impacto)
 682  8A2C              ;	and a
 683  8A2C              ;	jr z,8F
 684  8A2C
 685  8A2C              ; Hay Impacto en esta entidad.
 686  8A2C
 687  8A2C              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 688  8A2C              ;	dec (hl)
 689  8A2C              ;	jp nz,17F
 690  8A2C
 691  8A2C              ;! Velocidad de la animación de la explosión.
 692  8A2C
 693  8A2C              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 694  8A2C              ;														; _,(velocidad de la explosión).
 695  8A2C              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 696  8A2C
 697  8A2C              ;	call Repone_datos_de_borrado
 698  8A2C              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 699  8A2C
 700  8A2C              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 701  8A2C
 702  8A2C              ;	ld a,(Ctrl_2)
 703  8A2C              ;	bit 1,a
 704  8A2C              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 705  8A2C
 706  8A2C              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 707  8A2C
 708  8A2C              ;	ld a,(CTRL_DESPLZ)
 709  8A2C              ;	and a
 710  8A2C              ;	jr nz,18F
 711  8A2C
 712  8A2C              ;	ld hl,Indice_Explosion_2x2-2
 713  8A2C              ;	ld (Puntero_DESPLZ_der),hl
 714  8A2C              ;	jr 19F
 715  8A2C
 716  8A2C              ;18 ld hl,Indice_Explosion_2x3-2
 717  8A2C              ;	ld (Puntero_DESPLZ_der),hl
 718  8A2C
 719  8A2C              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 720  8A2C              ;	set 1,(hl)
 721  8A2C              ;	jr 7F
 722  8A2C
 723  8A2C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 724  8A2C              ; _con las coordenadas de la entidad almacenada en DRAW.
 725  8A2C
 726  8A2C              ;8 ld a,(Ctrl_1)
 727  8A2C              ;	bit 2,a
 728  8A2C              ;	jr z,7F
 729  8A2C
 730  8A2C              ;	ld hl,(Coordenadas_disparo_certero)
 731  8A2C              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 732  8A2C              ;														; E contiene la coordenada_X del disparo.
 733  8A2C              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 734  8A2C              ;														; H FILA, (Coordenada_y de la entidad).
 735  8A2C              ;	and a
 736  8A2C              ;	sbc hl,de
 737  8A2C
 738  8A2C              ;	call Determina_resultado_comparativa
 739  8A2C
 740  8A2C              ;	ld a,b
 741  8A2C              ;	and a
 742  8A2C              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 743  8A2C
 744  8A2C              ; ----- ----- -----
 745  8A2C
 746  8A2C              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 747  8A2C              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 748  8A2C
 749  8A2C              ;	ld hl,Ctrl_1
 750  8A2C              ;	res 2,(hl)
 751  8A2C
 752  8A2C CD 48 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 753  8A2F
 754  8A2F              ;	ld a,(Ctrl_0)
 755  8A2F              ;	bit 4,a
 756  8A2F              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 757  8A2F
 758  8A2F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 759  8A2F              ; [[[
 760  8A2F              ;	call Detecta_disparo_entidad
 761  8A2F              ; ]]]
 762  8A2F
 763  8A2F CD 9E 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 764  8A32
 765  8A32              ;	ld hl,Ctrl_0
 766  8A32              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 767  8A32
 768  8A32 CD 8E 8D     17 call Store_Restore_cajas
 769  8A35
 770  8A35 C1           	pop bc
 771  8A36
 772  8A36 10 F0        	djnz 15B
 773  8A38
 774  8A38 CD 05 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 775  8A3B
 776  8A3B              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 777  8A3B              ; Hemos gestionado todas las unidades.
 778  8A3B              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 779  8A3B
 780  8A3B              ;	ld hl,Ctrl_1
 781  8A3B              ;	res 2,(hl)
 782  8A3B
 783  8A3B 21 AD 89     16 ld hl,Ctrl_3
 784  8A3E CB C6        	set 0,(hl)											; Frame completo.
 785  8A40
 786  8A40 AF           	xor a
 787  8A41 D3 FE        	out ($fe),a
 788  8A43
 789  8A43 76           	halt
 790  8A44
 791  8A44              ; ----------------------------------------
 792  8A44
 793  8A44              ;	ld a,(Ctrl_1) 										; Existe Loop?
 794  8A44              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 795  8A44 CA F8 89     	jp z,Main
 796  8A47
 797  8A47              ; RECARGA DE NUEVA OLEADA.
 798  8A47
 799  8A47              ;	ld a,(Contador_de_frames)
 800  8A47              ;	ld b,a
 801  8A47              ;	ld a,(Activa_recarga_cajas)
 802  8A47              ;	cp b
 803  8A47              ;	jr z,20F
 804  8A47
 805  8A47              ;	ld hl,Ctrl_1
 806  8A47              ;	set 4,(hl)
 807  8A47              ;	jp Main
 808  8A47
 809  8A47              ;20 ld hl,Ctrl_1
 810  8A47              ;	res 4,(hl)
 811  8A47
 812  8A47              ;	ld a,(Contador_de_frames)
 813  8A47
 814  8A47              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 815  8A47              ;! _ IMPREDECIBLE !!!!
 816  8A47
 817  8A47              ;	add 10
 818  8A47              ;	ld (Clock_Entidades_en_curso),a
 819  8A47
 820  8A47              ;	jp 4B
 821  8A47
 822  8A47 C9           	ret
 823  8A48
 824  8A48              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 825  8A48              ;
 826  8A48              ;	16/11/23
 827  8A48
 828  8A48              ;;Gestiona_Amadeus
 829  8A48
 830  8A48              ;! Activa/desactiva impacto con Amadeus.
 831  8A48
 832  8A48              ;	ld a,(Impacto)
 833  8A48              ;	and a
 834  8A48              ;	jr nz,2F
 835  8A48
 836  8A48              ;;	call Mov_Amadeus
 837  8A48
 838  8A48              ;;2 ld a,(Ctrl_0)
 839  8A48              ;;	bit 4,a
 840  8A48              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 841  8A48
 842  8A48              ;;	call Guarda_foto_entidad_a_pintar
 843  8A48              ;;	call Guarda_datos_de_borrado_Amadeus
 844  8A48
 845  8A48              ;;1 ld hl,Ctrl_0
 846  8A48              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 847  8A48
 848  8A48              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 849  8A48
 850  8A48              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 851  8A48
 852  8A48              ;	call Calcula_numero_de_disparotes
 853  8A48
 854  8A48              ;;	ret
 855  8A48
 856  8A48              ; --------------------------------------------------------------------------------------------------------------
 857  8A48              ;
 858  8A48              ;	15/12/23
 859  8A48
 860  8A48              Mov_obj
 861  8A48
 862  8A48              ;	ld a,(Ctrl_2)
 863  8A48              ;	bit 1,a
 864  8A48              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 865  8A48
 866  8A48              ; Explosión:
 867  8A48
 868  8A48              ;	ld a,(Frames_explosion)
 869  8A48              ;	and a
 870  8A48              ;	jr nz,4F
 871  8A48
 872  8A48              ;!  Una alimaña menos!!!!!!!!!1
 873  8A48
 874  8A48              ; Se trataba de una Entidad_guía ???
 875  8A48
 876  8A48              ;	ld a,(Ctrl_2)
 877  8A48              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 878  8A48              ;	jr z,5F
 879  8A48
 880  8A48              ;	ld hl,Ctrl_3
 881  8A48              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 882  8A48
 883  8A48              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 884  8A48              ;!! _generado puede ser distinto, (aletoriedad).
 885  8A48
 886  8A48              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 887  8A48              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 888  8A48              ;	dec (hl)
 889  8A48              ;	ld hl,Entidades_en_curso
 890  8A48              ;	dec (hl)
 891  8A48              ;	ld hl,Numero_de_entidades
 892  8A48              ;	dec (hl)
 893  8A48              ;	jr 3F
 894  8A48
 895  8A48              ; -----
 896  8A48
 897  8A48              ;	`Movemos´ la explosión.
 898  8A48
 899  8A48              ;4 ld hl,(Puntero_DESPLZ_der)
 900  8A48              ;	inc hl
 901  8A48              ;	inc hl
 902  8A48              ;	call Extrae_address
 903  8A48              ;;	ld (Puntero_objeto),hl
 904  8A48
 905  8A48              ;;	ld hl,Frames_explosion
 906  8A48              ;;	dec (hl)
 907  8A48
 908  8A48              ;;	ld hl,Ctrl_0
 909  8A48              ;;	set 4,(hl);;
 910  8A48
 911  8A48              ;;	jr 3F
 912  8A48
 913  8A48              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 914  8A48
 915  8A48              ;2 xor a
 916  8A48              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 917  8A48
 918  8A48              ; Movemos Entidades malignas.
 919  8A48              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 920  8A48
 921  8A48              ;	ld a,(Ctrl_2)
 922  8A48              ;	bit 5,a
 923  8A48              ;	jr nz,8F
 924  8A48
 925  8A48              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 926  8A48              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 927  8A48              ;	jr 7F
 928  8A48
 929  8A48              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 930  8A48
 931  8A48              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 932  8A48              ;	bit 4,a
 933  8A48              ;	ret z
 934  8A48
 935  8A48              ; Ha habido desplazamiento de la entidad maligna.
 936  8A48              ; Ha llegado a zona de AMADEUS ???
 937  8A48
 938  8A48              ;7 ld a,(Coordenada_y)
 939  8A48              ;	cp $14
 940  8A48              ;	jr c,1F
 941  8A48
 942  8A48              ; ---------
 943  8A48
 944  8A48              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 945  8A48              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 946  8A48
 947  8A48              ;	di
 948  8A48              ;	call Genera_coordenadas_X
 949  8A48              ;	call Compara_coordenadas_X
 950  8A48              ;	ei
 951  8A48
 952  8A48              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 953  8A48
 954  8A48              ; ---------
 955  8A48
 956  8A48              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 957  8A48 CD B6 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 958  8A4B CD 43 8B     	call Limpia_Variables_de_borrado
 959  8A4E
 960  8A4E C9           3 ret
 961  8A4F
 962  8A4F              ; --------------------------------------------------------------------------------------------------------------
 963  8A4F              ;
 964  8A4F              ;	29/1/23
 965  8A4F
 966  8A4F              Mov_Amadeus
 967  8A4F
 968  8A4F              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 969  8A4F
 970  8A4F CD 72 95     	call Mov_right
 971  8A52
 972  8A52 3A 6D 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 973  8A55 CB 67        	bit 4,a
 974  8A57 C8           	ret z
 975  8A58
 976  8A58              ; ---------
 977  8A58
 978  8A58              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 979  8A58 CD A6 8C     	call Repone_datos_de_borrado_Amadeus
 980  8A5B CD 43 8B     	call Limpia_Variables_de_borrado
 981  8A5E
 982  8A5E C9           	ret
 983  8A5F
 984  8A5F              ; -----------------------------------------------------------------------------------
 985  8A5F              ;
 986  8A5F              ;	20/01/24
 987  8A5F              ;
 988  8A5F              ;
 989  8A5F
 990  8A5F              Construye_movimientos_masticados_entidad
 991  8A5F
 992  8A5F 2A 69 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 993  8A62 E5           	push hl
 994  8A63 CD A7 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 995  8A66              ;															; _ el (Contador_de_mov_masticados).
 996  8A66 CD A3 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 997  8A69              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 998  8A69 CD CE 94     	call Recompone_posicion_inicio
 999  8A6C
1000  8A6C CD C2 8E     1 call Draw
1001  8A6F CD 8B 8A     	call Guarda_movimiento_masticado
1002  8A72
1003  8A72 CD 48 98     	call Movimiento
1004  8A75
1005  8A75 3A AD 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1006  8A78 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1007  8A7A 28 F0        	jr z,1B
1008  8A7C
1009  8A7C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1010  8A7C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1011  8A7C
1012  8A7C E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1013  8A7D 22 69 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1014  8A80
1015  8A80              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1016  8A80
1017  8A80 CD AC 99     	call Situa_en_contador_general_de_mov_masticados
1018  8A83
1019  8A83              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1020  8A83              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1021  8A83
1022  8A83 ED 4B 6B 89  	ld bc,(Contador_de_mov_masticados)
1023  8A87 71           	ld (hl),c
1024  8A88 23           	inc hl
1025  8A89 70           	ld (hl),b
1026  8A8A
1027  8A8A C9           	ret
1028  8A8B
1029  8A8B              ; -----------------------------------------------------------------------------------
1030  8A8B              ;
1031  8A8B              ;	28/12/23
1032  8A8B              ;
1033  8A8B              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1034  8A8B              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1035  8A8B
1036  8A8B              Guarda_movimiento_masticado
1037  8A8B
1038  8A8B ED 73 9F 89  	ld (Stack),sp
1039  8A8F ED 7B 69 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1040  8A93
1041  8A93 E5           	push hl
1042  8A94 DD E5            push ix
1043  8A96 FD E5            push iy
1044  8A98
1045  8A98 ED 7B 9F 89      ld sp,(Stack)
1046  8A9C
1047  8A9C 2A 6B 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1048  8A9F 23           	inc hl
1049  8AA0 22 6B 89     	ld (Contador_de_mov_masticados),hl
1050  8AA3
1051  8AA3 CD A7 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1052  8AA6              ;															; _ el (Contador_de_mov_masticados).
1053  8AA6 C9               ret
1054  8AA7
1055  8AA7              ; --------------------------------------------------------------------------------------------------------------
1056  8AA7              ;
1057  8AA7              ;	12/1/24
1058  8AA7              ;
1059  8AA7              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1060  8AA7
1061  8AA7              Actualiza_Puntero_de_almacen_de_mov_masticados
1062  8AA7
1063  8AA7 2A 69 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1064  8AAA 01 06 00     	ld bc,6
1065  8AAD A7           	and a
1066  8AAE ED 4A        	adc hl,bc
1067  8AB0 22 69 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1068  8AB3 C9           	ret
1069  8AB4
1070  8AB4              ; --------------------------------------------------------------------------------------------------------------
1071  8AB4              ;
1072  8AB4              ;	15/01/24
1073  8AB4              ;
1074  8AB4              ;	Cargamos los registros_
1075  8AB4              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1076  8AB4              ;
1077  8AB4              ;	HL contiene la dirección de la rutina de impresión.
1078  8AB4              ;	IX contiene el puntero de impresión.
1079  8AB4              ;	IY contiene (Puntero_objeto).
1080  8AB4
1081  8AB4
1082  8AB4 ED 73 9F 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1083  8AB8 ED 7B 69 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1084  8ABC
1085  8ABC FD E1        	pop iy
1086  8ABE DD E1        	pop ix
1087  8AC0 E1           	pop hl
1088  8AC1
1089  8AC1 ED 73 69 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1090  8AC5
1091  8AC5 ED 7B 9F 89  	ld sp,(Stack)
1092  8AC9
1093  8AC9 C9           	ret
1094  8ACA
1095  8ACA              ; --------------------------------------------------------------------------------------------------------------
1096  8ACA              ;
1097  8ACA              ;	28/12/23
1098  8ACA              ;
1099  8ACA              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1100  8ACA              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1101  8ACA
1102  8ACA              Guarda_foto_entidad_a_pintar
1103  8ACA
1104  8ACA 3A 6D 89     	ld a,(Ctrl_0)
1105  8ACD CB 77        	bit 6,a
1106  8ACF 28 04        	jr z,5F
1107  8AD1
1108  8AD1              ;	Guarda la foto de Amadeus.
1109  8AD1
1110  8AD1              ;	call Draw
1111  8AD1              ;	call Guarda_movimiento_masticado	;! Provisional
1112  8AD1 CD BF 80     	call Guarda_foto_registros
1113  8AD4 C9           	ret
1114  8AD5
1115  8AD5              ; ENTIDADES!
1116  8AD5              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1117  8AD5
1118  8AD5 3A AD 89     5 ld a,(Ctrl_3)
1119  8AD8 CB 5F        	bit 3,a
1120  8ADA 28 01        	jr z,1F
1121  8ADC
1122  8ADC              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1123  8ADC
1124  8ADC              4
1125  8ADC              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1126  8ADC C9           	ret
1127  8ADD
1128  8ADD              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1129  8ADD
1130  8ADD 3A AD 89     1 ld a,(Ctrl_3)
1131  8AE0 CB 57        	bit 2,a
1132  8AE2 20 10        	jr nz,6F
1133  8AE4
1134  8AE4              ; Entidad guía o fantasma ???
1135  8AE4
1136  8AE4 3A 72 89     	ld a,(Ctrl_2)
1137  8AE7 CB 6F        	bit 5,a
1138  8AE9 20 10        	jr nz,3F
1139  8AEB
1140  8AEB              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1141  8AEB
1142  8AEB 18 EF        	jr 4B
1143  8AED
1144  8AED              ; ENTIDAD_GUÍA:
1145  8AED              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1146  8AED              ; _guardando "movimientos_masticados".
1147  8AED
1148  8AED 3A AD 89     2 ld a,(Ctrl_3)
1149  8AF0 CB 57        	bit 2,a
1150  8AF2 28 07        	jr z,3F
1151  8AF4
1152  8AF4              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1153  8AF4              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1154  8AF4
1155  8AF4 CB 97        6 res 2,a
1156  8AF6 CB DF        	set 3,a
1157  8AF8 32 AD 89     	ld (Ctrl_3),a
1158  8AFB
1159  8AFB
1160  8AFB              ;	Esto sólo lo ejecuta una entidad guía.
1161  8AFB
1162  8AFB CD C2 8E     3 	call Draw
1163  8AFE CD 8B 8A     	call Guarda_movimiento_masticado
1164  8B01 CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1165  8B04
1166  8B04              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1167  8B04              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1168  8B04
1169  8B04              ;	call Convierte_guia_en_fantasma
1170  8B04 C9           	ret
1171  8B05
1172  8B05              ; *************************************************************************************************************************************************************
1173  8B05              ;
1174  8B05              ; 8/1/23
1175  8B05              ;
1176  8B05              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1177  8B05              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1178  8B05              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1179  8B05
1180  8B05              ; Destruye HL y DE !!!!!
1181  8B05
1182  8B05              Inicia_punteros_de_cajas
1183  8B05
1184  8B05 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1185  8B08 CD 9D 8B         call Extrae_address
1186  8B0B 22 91 89         ld (Puntero_store_caja),hl
1187  8B0E 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1188  8B11 22 95 89     	ld (Indice_restore_caja),hl
1189  8B14 CD 9D 8B     	call Extrae_address
1190  8B17 22 93 89     	ld (Puntero_restore_caja),hl
1191  8B1A C9               ret
1192  8B1B
1193  8B1B              ; *************************************************************************************************************************************************************
1194  8B1B              ;
1195  8B1B              ; 8/1/23
1196  8B1B              ;
1197  8B1B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1198  8B1B
1199  8B1B 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1200  8B1E 22 B0 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1201  8B21 C9           	ret
1202  8B22 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1203  8B25 22 B2 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1204  8B28 C9           	ret
1205  8B29
1206  8B29              ; -------------------------------------------------------------------------------------------------------------
1207  8B29              ;
1208  8B29              ; 21/9/23
1209  8B29              ;
1210  8B29
1211  8B29              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1212  8B29
1213  8B29              Limpia_album_Amadeus
1214  8B29
1215  8B29 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1216  8B2C 7E           	ld a,(hl)
1217  8B2D A7           	and a
1218  8B2E C8           	ret z
1219  8B2F
1220  8B2F 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1221  8B32 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1222  8B35 01 0B 00     	ld bc,11
1223  8B38 AF           	xor a
1224  8B39 77           	ld (hl),a
1225  8B3A ED B0        	ldir
1226  8B3C
1227  8B3C 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1228  8B3F 22 AB 89     	ld (End_Snapshot_Amadeus),hl
1229  8B42
1230  8B42 C9           	ret
1231  8B43
1232  8B43 21 61 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1233  8B46 11 62 89     	ld de,Variables_de_borrado+1
1234  8B49 01 05 00     	ld bc,5
1235  8B4C AF           	xor a
1236  8B4D 77           	ld (hl),a
1237  8B4E ED B0        	ldir
1238  8B50 C9           	ret
1239  8B51
1240  8B51              ; -------------------------------------------------------------------------------------------------------------
1241  8B51              ;
1242  8B51              ; 8/9/23
1243  8B51              ;
1244  8B51
1245  8B51              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1246  8B51              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1247  8B51
1248  8B51              Calcula_numero_de_malotes
1249  8B51
1250  8B51 21 00 80     	ld hl,Album_de_fotos
1251  8B54 EB           	ex de,hl
1252  8B55 2A A5 89     	ld hl,(Stack_snapshot)
1253  8B58
1254  8B58 06 00        	ld b,0
1255  8B5A 7D           	ld a,l
1256  8B5B 93           	sub e
1257  8B5C 28 07        	jr z,1F
1258  8B5E
1259  8B5E              ; Nº de malotes no es "0".
1260  8B5E
1261  8B5E D6 06        2 sub 6
1262  8B60 04           	inc b
1263  8B61 A7           	and a
1264  8B62 20 FA        	jr nz,2B
1265  8B64 78           	ld a,b
1266  8B65
1267  8B65 32 9A 89     1 ld (Numero_de_malotes),a
1268  8B68 C9           	ret
1269  8B69
1270  8B69              ; -------------------------------------------------------------------------------------------------------------
1271  8B69              ;
1272  8B69              ; 8/9/23
1273  8B69              ;
1274  8B69
1275  8B69              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1276  8B69              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1277  8B69
1278  8B69              Calcula_malotes_Amadeus
1279  8B69
1280  8B69 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1281  8B6C EB           	ex de,hl
1282  8B6D 2A AB 89     	ld hl,(End_Snapshot_Amadeus)
1283  8B70
1284  8B70 7C           	ld a,h
1285  8B71 A7           	and a
1286  8B72 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1287  8B74
1288  8B74 06 00        	ld b,0
1289  8B76 7D           	ld a,l
1290  8B77 93           	sub e
1291  8B78 28 07        	jr z,1F
1292  8B7A
1293  8B7A              ; Nº de malotes no es "0".
1294  8B7A
1295  8B7A D6 06        2 sub 6
1296  8B7C 04           	inc b
1297  8B7D A7           	and a
1298  8B7E 20 FA        	jr nz,2B
1299  8B80 78           	ld a,b
1300  8B81
1301  8B81 32 9A 89     1 ld (Numero_de_malotes),a
1302  8B84 C9           	ret
1303  8B85
1304  8B85              ; -------------------------------------------------------------------------------------------------------------
1305  8B85              ;
1306  8B85              ; 28/2/23
1307  8B85              ;
1308  8B85
1309  8B85              Calcula_numero_de_disparotes
1310  8B85
1311  8B85 21 56 80     	ld hl,Album_de_fotos_disparos
1312  8B88 EB           	ex de,hl
1313  8B89 2A A9 89     	ld hl,(End_Snapshot_disparos)
1314  8B8C
1315  8B8C 06 00        	ld b,0
1316  8B8E 7D           	ld a,l
1317  8B8F 93           	sub e
1318  8B90 28 07        	jr z,1F
1319  8B92
1320  8B92              ; Nº de malotes no es "0".
1321  8B92
1322  8B92 D6 06        2 sub 6
1323  8B94 04           	inc b
1324  8B95 A7           	and a
1325  8B96 20 FA        	jr nz,2B
1326  8B98 78           	ld a,b
1327  8B99
1328  8B99 32 AF 89     1 ld (Numero_de_disparotes),a
1329  8B9C C9           	ret
1330  8B9D
1331  8B9D              ; *************************************************************************************************************************************************************
1332  8B9D              ;
1333  8B9D              ; 20/10/22
1334  8B9D              ;
1335  8B9D              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1336  8B9D              ;
1337  8B9D              ; Destruye el puntero y DE !!!!!
1338  8B9D
1339  8B9D 5E           Extrae_address ld e,(hl)
1340  8B9E 23           	inc hl
1341  8B9F 56           	ld d,(hl)
1342  8BA0 2B           	dec hl
1343  8BA1 EB           	ex de,hl
1344  8BA2 C9           	ret
1345  8BA3
1346  8BA3              ; *************************************************************************************************************************************************************
1347  8BA3              ;
1348  8BA3              ;	20/1/24
1349  8BA3              ;
1350  8BA3              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1351  8BA3              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1352  8BA3              ;
1353  8BA3              ;   Destruye HL y BC !!!!!,
1354  8BA3              ;
1355  8BA3              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1356  8BA3              ;					"0" ..... Izquierda.
1357  8BA3
1358  8BA3              Inicia_Puntero_objeto
1359  8BA3
1360  8BA3 3A 5F 89     	ld a,(Cuad_objeto)
1361  8BA6 E6 01        	and 1
1362  8BA8 F5           	push af
1363  8BA9 CC C5 8B     	call z,Inicia_puntero_objeto_izq
1364  8BAC F1           	pop af
1365  8BAD C8           	ret z
1366  8BAE CD B2 8B     	call Inicia_puntero_objeto_der
1367  8BB1 C9           	ret
1368  8BB2
1369  8BB2              ; Arrancamos desde la parte izquierda de la pantalla.
1370  8BB2              ; Iniciamos (Indice_Sprite_der).
1371  8BB2
1372  8BB2 2A 55 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1373  8BB5 22 59 89     	ld (Puntero_DESPLZ_der),hl
1374  8BB8 CD 9D 8B     	call Extrae_address
1375  8BBB 22 4F 89     	ld (Puntero_objeto),hl
1376  8BBE
1377  8BBE 2A 57 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1378  8BC1 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
1379  8BC4 C9           	ret
1380  8BC5
1381  8BC5              ; Arrancamos desde la parte derecha de la pantalla.
1382  8BC5              ; Iniciamos (Indice_Sprite_izq).
1383  8BC5
1384  8BC5 2A 57 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1385  8BC8 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
1386  8BCB CD 9D 8B     	call Extrae_address
1387  8BCE 22 4F 89     	ld (Puntero_objeto),hl
1388  8BD1
1389  8BD1 2A 55 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1390  8BD4 22 59 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1391  8BD7 C9           	ret
1392  8BD8
1393  8BD8              ; **************************************************************************************************
1394  8BD8              ;
1395  8BD8              ;	31/01/24
1396  8BD8              ;
1397  8BD8              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1398  8BD8
1399  8BD8              Restore_entidad
1400  8BD8
1401  8BD8 2A 91 89     	ld hl,(Puntero_store_caja)
1402  8BDB 11 4A 89     	ld de,Bandeja_DRAW
1403  8BDE 7E           	ld a,(hl)
1404  8BDF 12           	ld (de),a
1405  8BE0 23           	inc hl 											; (Tipo).
1406  8BE1
1407  8BE1 11 51 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1408  8BE4 01 02 00     	ld bc,2
1409  8BE7 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1410  8BE9
1411  8BE9 13           	inc de
1412  8BEA 7E           	ld a,(hl)
1413  8BEB 12           	ld (de),a 										; Transferimos (Attr).
1414  8BEC 23           	inc hl
1415  8BED
1416  8BED 11 60 89     	ld de,Impacto
1417  8BF0
1418  8BF0 7E           	ld a,(hl)
1419  8BF1 12           	ld (de),a 										; Transferimos (Impacto).
1420  8BF2 23           	inc hl
1421  8BF3
1422  8BF3 13           	inc de
1423  8BF4
1424  8BF4 01 06 00     	ld bc,6
1425  8BF7 ED B0        	ldir
1426  8BF9
1427  8BF9 01 07 00     	ld bc,7
1428  8BFC ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1429  8BFE              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1430  8BFE 11 72 89     	ld de,Ctrl_2
1431  8C01
1432  8C01 7E           	ld a,(hl)
1433  8C02 12           	ld (de),a 										; Transferimos (Ctrl_2).
1434  8C03
1435  8C03 C9           	ret
1436  8C04
1437  8C04              ; **************************************************************************************************
1438  8C04              ;
1439  8C04              ;	08/05/23
1440  8C04              ;
1441  8C04              ;	Incrementamos los dos punteros de entidades. (+1).
1442  8C04
1443  8C04              Incrementa_punteros_de_cajas
1444  8C04
1445  8C04 2A 93 89     	ld hl,(Puntero_restore_caja)
1446  8C07 22 91 89     	ld (Puntero_store_caja),hl
1447  8C0A 2A 95 89     	ld hl,(Indice_restore_caja)
1448  8C0D 23           	inc hl
1449  8C0E 23           	inc hl
1450  8C0F 22 95 89     	ld (Indice_restore_caja),hl
1451  8C12 CD 9D 8B         call Extrae_address
1452  8C15 22 93 89         ld (Puntero_restore_caja),hl
1453  8C18 C9               ret
1454  8C19
1455  8C19              ; **************************************************************************************************
1456  8C19              ;
1457  8C19              ;	21/12/23
1458  8C19              ;
1459  8C19              ;	Restore_Amadeus
1460  8C19              ;
1461  8C19              ;	Cargamos en DRAW los parámetros de Amadeus.
1462  8C19              ;
1463  8C19
1464  8C19 E5           Restore_Amadeus	push hl
1465  8C1A D5           	push de
1466  8C1B C5            	push bc
1467  8C1C 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1468  8C1F 11 4A 89     	ld de,Bandeja_DRAW
1469  8C22 01 2A 00     	ld bc,42
1470  8C25 ED B0        	ldir
1471  8C27 C1           	pop bc
1472  8C28 D1           	pop de
1473  8C29 E1           	pop hl
1474  8C2A C9           	ret
1475  8C2B
1476  8C2B              ; *************************************************************************************************************************************************************
1477  8C2B              ;
1478  8C2B              ;	21/12/23
1479  8C2B              ;
1480  8C2B              ;	Store_Amadeus
1481  8C2B              ;
1482  8C2B              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1483  8C2B              ;
1484  8C2B              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1485  8C2B              ;
1486  8C2B              ;	DESTRUYE: HL y BC y DE.
1487  8C2B
1488  8C2B 21 4A 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1489  8C2E 01 2A 00     	ld bc,42
1490  8C31 ED B0        	ldir
1491  8C33 C9           	ret
1492  8C34
1493  8C34              ; -----------------------------------------------------------
1494  8C34              ;
1495  8C34              ;	21/12/23
1496  8C34              ;
1497  8C34              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1498  8C34              ;
1499  8C34              ;	Destruye: HL,BC,DE,A
1500  8C34
1501  8C34 21 4A 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1502  8C37 01 29 00     	ld bc,41
1503  8C3A AF           	xor a
1504  8C3B 77           	ld (hl),a
1505  8C3C 11 4B 89     	ld de,Bandeja_DRAW+1
1506  8C3F ED B0        	ldir
1507  8C41 C9           	ret
1508  8C42
1509  8C42              ; -----------------------------------------------------------
1510  8C42
1511  8C42              ; Teclado.
1512  8C42
1513  8C42 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1514  8C44 DB FE        	in a,($fe)
1515  8C46 E6 01        	and $01
1516  8C48 28 02        	jr z,1f
1517  8C4A 18 F6        	jr Pulsa_ENTER
1518  8C4C C9           1 ret
1519  8C4D
1520  8C4D              ; **************************************************************************************************
1521  8C4D              ;
1522  8C4D              ; Temporización.
1523  8C4D
1524  8C4D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1525  8C4D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1526  8C4D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1527  8C4D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1528  8C4D
1529  8C4D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1530  8C4D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1531  8C4D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1532  8C4D
1533  8C4D              ; A partir de $4f61 no hace falta DELAY.
1534  8C4D
1535  8C4D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1536  8C4D
1537  8C4D 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1538  8C50 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1539  8C51 78           	LD A,B
1540  8C52 A7           	AND A
1541  8C53 20 FB        	JR NZ,wait
1542  8C55 C9           	RET
1543  8C56
1544  8C56              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1545  8C56              ;
1546  8C56              ;	5/3/23
1547  8C56              ;
1548  8C56              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1549  8C56
1550  8C56              Movimiento_Amadeus
1551  8C56
1552  8C56              ; Disparo.
1553  8C56
1554  8C56 3A C5 89     	ld a,(Disparo_Amadeus)
1555  8C59 A7           	and a
1556  8C5A 20 02        	jr nz,1F
1557  8C5C 18 15        	jr 2F
1558  8C5E
1559  8C5E 3E F7        1 ld a,$f7													; "5" para disparar.
1560  8C60 DB FE        	in a,($fe)
1561  8C62 E6 10        	and $10
1562  8C64
1563  8C64 F5           	push af
1564  8C65 CC C2 99     	call z,Genera_disparo
1565  8C68 F1           	pop af
1566  8C69 20 08        	jr nz,2F
1567  8C6B
1568  8C6B 3A C5 89     	ld a,(Disparo_Amadeus)
1569  8C6E EE 01        	xor 1
1570  8C70 32 C5 89     	ld (Disparo_Amadeus),a
1571  8C73 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1572  8C75 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1573  8C77 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1574  8C79 CC 95 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1575  8C7C
1576  8C7C 3E F7        	ld a,$f7
1577  8C7E DB FE        	in a,($fe)
1578  8C80 E6 01        	and $01
1579  8C82 C8           	ret z
1580  8C83
1581  8C83 3E F7        	ld a,$f7
1582  8C85 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1583  8C87 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1584  8C89 CC 72 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1585  8C8C C9           	ret
1586  8C8D
1587  8C8D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1588  8C8D              ;
1589  8C8D              ;	Rutina provisional para que los malotes cagen balas.
1590  8C8D
1591  8C8D              Detecta_disparo_entidad
1592  8C8D
1593  8C8D 3A C8 89     	ld a,(Disparo_entidad)
1594  8C90 A7           	and a
1595  8C91 C8           	ret z
1596  8C92
1597  8C92              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1598  8C92
1599  8C92              ;	ld a,$7f				; Detecta SPACE.
1600  8C92              ;	in a,($fe)
1601  8C92              ;	and 1
1602  8C92              ;	ret nz
1603  8C92
1604  8C92 CD C2 99     	call Genera_disparo
1605  8C95 C9           	ret
1606  8C96
1607  8C96              ; ----------------------------------------------------------------------
1608  8C96              ;
1609  8C96              ;	8/9/23
1610  8C96
1611  8C96 2A AB 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1612  8C99 2B            	dec hl
1613  8C9A 7E           	ld a,(hl)
1614  8C9B A7           	and a
1615  8C9C C8           	ret z										; Salimos si es álbum está vacío.
1616  8C9D
1617  8C9D 11 66 89     	ld de,Variables_de_borrado+5
1618  8CA0 01 06 00     	ld bc,6
1619  8CA3 ED B8        	lddr
1620  8CA5 C9           	ret
1621  8CA6
1622  8CA6              ; ----------------------------------------------------------------------
1623  8CA6              ;
1624  8CA6              ;	9/9/23
1625  8CA6
1626  8CA6              Repone_datos_de_borrado_Amadeus
1627  8CA6
1628  8CA6 21 61 89     	ld hl,Variables_de_borrado
1629  8CA9 11 AC 80     	ld de,Album_de_fotos_Amadeus
1630  8CAC 01 06 00     	ld bc,6
1631  8CAF ED B0        	ldir
1632  8CB1
1633  8CB1 EB           	ex de,hl
1634  8CB2 22 AB 89     	ld (End_Snapshot_Amadeus),hl
1635  8CB5
1636  8CB5 C9           	ret
1637  8CB6
1638  8CB6              ; ----------------------------------------------------------------------
1639  8CB6              ;
1640  8CB6              ;	27/10/23
1641  8CB6              ;
1642  8CB6
1643  8CB6              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1644  8CB6              ;	_ Album_de_fotos correspondiente.
1645  8CB6
1646  8CB6              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1647  8CB6              ;	_ durante el proceso de escritura.
1648  8CB6
1649  8CB6              Repone_datos_de_borrado
1650  8CB6
1651  8CB6 ED 5B A5 89  	ld de,(Stack_snapshot)
1652  8CBA 21 61 89     	ld hl,Variables_de_borrado
1653  8CBD 01 06 00     	ld bc,6
1654  8CC0 ED B0        	ldir
1655  8CC2
1656  8CC2 EB           	ex de,hl
1657  8CC3 22 A5 89     	ld (Stack_snapshot),hl
1658  8CC6
1659  8CC6 C9           	ret
1660  8CC7
1661  8CC7              ; --------------------------------------------------------------------------------------
1662  8CC7
1663  8CC7              Pinta_Amadeus
1664  8CC7
1665  8CC7 CD 69 8B        	call Calcula_malotes_Amadeus
1666  8CCA CD 5B 92     	call Extrae_foto_Amadeus
1667  8CCD CD 29 8B     	call Limpia_album_Amadeus
1668  8CD0
1669  8CD0 C9           	ret
1670  8CD1
1671  8CD1              Pinta_entidades
1672  8CD1
1673  8CD1              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1674  8CD1
1675  8CD1 3A AD 89     	ld a,(Ctrl_3)
1676  8CD4 CB 47        	bit 0,a
1677  8CD6 C8           	ret z
1678  8CD7
1679  8CD7 CD 51 8B     	call Calcula_numero_de_malotes
1680  8CDA CD D9 91     	call Extrae_foto_entidades
1681  8CDD CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1682  8CE0
1683  8CE0 C9           	ret
1684  8CE1
1685  8CE1              ; -----------------------------------------------------------------------------------
1686  8CE1              ;
1687  8CE1              ;	10/12/23
1688  8CE1              ;
1689  8CE1              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1690  8CE1
1691  8CE1              Actualiza_relojes
1692  8CE1
1693  8CE1 3A AD 89     	ld a,(Ctrl_3)
1694  8CE4 CB 47        	bit 0,a
1695  8CE6 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1696  8CE7
1697  8CE7 21 C0 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1698  8CEA 34           	inc (hl)
1699  8CEB
1700  8CEB 34           	inc (hl)
1701  8CEC 35           	dec (hl)
1702  8CED C0           	ret nz
1703  8CEE
1704  8CEE 21 C1 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1705  8CF1 34           	inc (hl)
1706  8CF2 C9           	ret
1707  8CF3
1708  8CF3              ; ---------------------------------------------------------------
1709  8CF3
1710  8CF3              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8CF3              ;---------------------------------------------------------------------------------------------------------------
   2+ 8CF3              ;
   3+ 8CF3              ;   19/1/24
   4+ 8CF3              ;
   5+ 8CF3              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8CF3              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8CF3              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8CF3              ;	_ de la 1ª entidad del Nivel.
   9+ 8CF3              ;
  10+ 8CF3              ;	MODIFICA: HL,DE y A.
  11+ 8CF3              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8CF3
  13+ 8CF3              Inicializa_Nivel
  14+ 8CF3
  15+ 8CF3 2A CC 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8CF6 CD 9D 8B     	call Extrae_address
  17+ 8CF9 7E           	ld a,(hl)
  18+ 8CFA 32 97 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8CFD 23           	inc hl
  20+ 8CFE CD 0B 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8D01 22 CE 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8D04 CD 14 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D07              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D07 CD 25 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8D0A C9           	ret
  26+ 8D0B
  27+ 8D0B              ; ----------------------
  28+ 8D0B
  29+ 8D0B 11 74 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8D0E 01 04 00     	ld bc,4
  31+ 8D11 ED B0        	ldir
  32+ 8D13 C9           	ret
  33+ 8D14
  34+ 8D14 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8D15 CD 3E 8E         call Calcula_salto_en_BC
  36+ 8D18 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8D1B A7               and a
  38+ 8D1C ED 4A            adc hl,bc
  39+ 8D1E CD 9D 8B         call Extrae_address
  40+ 8D21 22 82 89         ld (Puntero_indice_mov),hl
  41+ 8D24 C9               ret
  42+ 8D25
  43+ 8D25 3A 4A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8D28 CD 3E 8E     	call Calcula_salto_en_BC
  45+ 8D2B 21 80 89     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8D2E A7               and a
  47+ 8D2F ED 4A            adc hl,bc
  48+ 8D31 CD 9D 8B         call Extrae_address
  49+ 8D34 22 69 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8D37 C9           	ret
  51+ 8D38
  52+ 8D38              ;---------------------------------------------------------------------------------------------------------------
  53+ 8D38              ;
  54+ 8D38              ;   5/1/24
  55+ 8D38              ;
  56+ 8D38              ;	Destruye A,BC,HL,DE
  57+ 8D38
  58+ 8D38              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8D38              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8D38
  61+ 8D38              Inicia_Entidades
  62+ 8D38
  63+ 8D38              ; Preparamos los punteros de las cajas de entidades:
  64+ 8D38
  65+ 8D38 CD 05 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8D3B              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8D3B CD A5 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8D3E
  69+ 8D3E 2A CE 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8D41
  71+ 8D41 22 CE 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8D44
  73+ 8D44 CD EC 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8D47
  75+ 8D47 2A CE 89     	ld hl,(Datos_de_nivel)
  76+ 8D4A
  77+ 8D4A              ; En este punto:
  78+ 8D4A              ;
  79+ 8D4A              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8D4A              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8D4A
  82+ 8D4A C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8D4B
  84+ 8D4B 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  85+ 8D4C CD 3E 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  86+ 8D4F
  87+ 8D4F 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
  88+ 8D52 CD 46 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
  89+ 8D55
  90+ 8D55 CD 50 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  91+ 8D58
  92+ 8D58              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  93+ 8D58
  94+ 8D58 CD 0E 8E     	call Busca_mov_masticados_segun_tipo
  95+ 8D5B
  96+ 8D5B A7           	and a
  97+ 8D5C 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  98+ 8D5E
  99+ 8D5E              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 100+ 8D5E
 101+ 8D5E              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 102+ 8D5E              ;	_ de este tipo de entidad.
 103+ 8D5E
 104+ 8D5E CD AC 99     	call Situa_en_contador_general_de_mov_masticados
 105+ 8D61 CD B9 99     	call Transfiere_datos_de_contadores
 106+ 8D64
 107+ 8D64 18 06        	jr 4F
 108+ 8D66
 109+ 8D66 CD 5F 8A     3 call Construye_movimientos_masticados_entidad
 110+ 8D69
 111+ 8D69              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 112+ 8D69              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 113+ 8D69              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 114+ 8D69              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 115+ 8D69              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 116+ 8D69
 117+ 8D69 CD CC 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 118+ 8D6C              ;																; _ Mov_masticados ya generados.
 119+ 8D6C CD 9E 8D     4 call Guarda_foto_de_mov_masticado
 120+ 8D6F
 121+ 8D6F              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 122+ 8D6F
 123+ 8D6F 2A 67 89     	ld hl,(Puntero_de_impresion)
 124+ 8D72 CD C3 9E     	call Genera_coordenadas
 125+ 8D75 CD 77 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 126+ 8D78 CD A8 8D     	call Limpiamos_bandeja_DRAW
 127+ 8D7B CD 04 8C     	call Incrementa_punteros_de_cajas
 128+ 8D7E
 129+ 8D7E              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 130+ 8D7E              ; _ entidad del Nivel.
 131+ 8D7E
 132+ 8D7E 3A AE 89     	ld a,(Ctrl_4)
 133+ 8D81 E6 F0        	and $f0
 134+ 8D83 32 AE 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 135+ 8D86
 136+ 8D86              ; Siguiente entidad del Nivel.
 137+ 8D86
 138+ 8D86 2A CE 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 139+ 8D89 23           	inc hl 														; _ entidad del Nivel.
 140+ 8D8A
 141+ 8D8A C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 142+ 8D8B
 143+ 8D8B 10 B4        	djnz 2B
 144+ 8D8D
 145+ 8D8D C9           	ret
 146+ 8D8E
 147+ 8D8E              ; ---------------------------------------------------------------------
 148+ 8D8E              ;
 149+ 8D8E              ;	30/01/24
 150+ 8D8E
 151+ 8D8E
 152+ 8D8E              Store_Restore_cajas
 153+ 8D8E
 154+ 8D8E              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 155+ 8D8E
 156+ 8D8E 2A 67 89     	ld hl,(Puntero_de_impresion)
 157+ 8D91 CD C3 9E     	call Genera_coordenadas
 158+ 8D94 CD 77 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 159+ 8D97 CD A8 8D     	call Limpiamos_bandeja_DRAW
 160+ 8D9A
 161+ 8D9A              ; 	Entidad_sospechosa. 20/4/23
 162+ 8D9A
 163+ 8D9A              ;	ld a,(Impacto)
 164+ 8D9A              ;	and a
 165+ 8D9A              ;	jr z,1F
 166+ 8D9A
 167+ 8D9A              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 168+ 8D9A              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 169+ 8D9A              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 170+ 8D9A              ;	adc hl,bc 											; _ "0" más adelante.
 171+ 8D9A              ;	ld (Entidad_sospechosa_de_colision),hl
 172+ 8D9A
 173+ 8D9A
 174+ 8D9A              ;1 ld hl,(Puntero_restore_caja)
 175+ 8D9A              ;	ld a,(hl)
 176+ 8D9A              ;	and a
 177+ 8D9A              ;	push af
 178+ 8D9A              ;	jr z,2F
 179+ 8D9A
 180+ 8D9A              ;	di
 181+ 8D9A              ;	ld de,Bandeja_DRAW
 182+ 8D9A              ;	ld bc,42
 183+ 8D9A              ;	ldir
 184+ 8D9A              ;	ei
 185+ 8D9A
 186+ 8D9A CD 04 8C     2 call Incrementa_punteros_de_cajas
 187+ 8D9D C9           	ret
 188+ 8D9E
 189+ 8D9E
 190+ 8D9E              ; ---------------------------------------------------------------------
 191+ 8D9E              ;
 192+ 8D9E              ;	29/01/24
 193+ 8D9E
 194+ 8D9E CD B4 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 195+ 8DA1 CD BF 80     	call Guarda_foto_registros
 196+ 8DA4              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 197+ 8DA4              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 198+ 8DA4              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 199+ 8DA4              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 200+ 8DA4
 201+ 8DA4 CD B3 8D     	call Decrementa_Contador_de_mov_masticados
 202+ 8DA7 C9           	ret
 203+ 8DA8
 204+ 8DA8              ; ---------------------------------------------------------------------
 205+ 8DA8              ;
 206+ 8DA8              ;	25/01/24
 207+ 8DA8
 208+ 8DA8 21 4A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 209+ 8DAB 06 2A        	ld b,42
 210+ 8DAD AF           	xor a
 211+ 8DAE
 212+ 8DAE 77           1 ld (hl),a
 213+ 8DAF 23           	inc hl
 214+ 8DB0 10 FC        	djnz 1B
 215+ 8DB2
 216+ 8DB2 C9           	ret
 217+ 8DB3
 218+ 8DB3              ; ---------------------------------------------------------------------
 219+ 8DB3              ;
 220+ 8DB3              ;	22/01/24
 221+ 8DB3
 222+ 8DB3 2A 6B 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 223+ 8DB6 2B           	dec hl
 224+ 8DB7
 225+ 8DB7 24           	inc h
 226+ 8DB8 25           	dec h
 227+ 8DB9 20 05        	jr nz,1F
 228+ 8DBB
 229+ 8DBB 7D           	ld a,l
 230+ 8DBC A7           	and a
 231+ 8DBD CC C4 8D     	call z,Reinicia_entidad_maliciosa
 232+ 8DC0
 233+ 8DC0 22 6B 89     1 ld (Contador_de_mov_masticados),hl
 234+ 8DC3 C9           	ret
 235+ 8DC4
 236+ 8DC4              ; ---------------------------------------------------------------------
 237+ 8DC4              ;
 238+ 8DC4              ;	9/2/24
 239+ 8DC4
 240+ 8DC4 18 FE        Reinicia_entidad_maliciosa jr $
 241+ 8DC6
 242+ 8DC6              ; 	En 1er lugar inicializamos el contador.
 243+ 8DC6
 244+ 8DC6 CD AC 99     	call Situa_en_contador_general_de_mov_masticados
 245+ 8DC9 CD B9 99     	call Transfiere_datos_de_contadores
 246+ 8DCC
 247+ 8DCC              ;	Inicializamos
 248+ 8DCC
 249+ 8DCC
 250+ 8DCC
 251+ 8DCC              ; ---------------------------------------------------------------------
 252+ 8DCC              ;
 253+ 8DCC              ;	22/01/24
 254+ 8DCC
 255+ 8DCC 21 AE 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 256+ 8DCF CB 46        	bit 0,(hl)
 257+ 8DD1 20 0D        	jr nz,1F
 258+ 8DD3 CB 4E        	bit 1,(hl)
 259+ 8DD5 20 0C        	jr nz,2F
 260+ 8DD7 CB 56        	bit 2,(hl)
 261+ 8DD9 20 0B        	jr nz,3F
 262+ 8DDB CB 5E        	bit 3,(hl)
 263+ 8DDD 20 0A        	jr nz,4F
 264+ 8DDF C9           	ret
 265+ 8DE0
 266+ 8DE0 CB E6        1 set 4,(hl)
 267+ 8DE2 C9           	ret
 268+ 8DE3 CB EE        2 set 5,(hl)
 269+ 8DE5 C9           	ret
 270+ 8DE6 CB F6        3 set 6,(hl)
 271+ 8DE8 C9           	ret
 272+ 8DE9 CB FE        4 set 7,(hl)
 273+ 8DEB C9           	ret
 274+ 8DEC
 275+ 8DEC              ; ---------------------------------------------------------------------
 276+ 8DEC              ;
 277+ 8DEC              ;	23/01/24
 278+ 8DEC              ;
 279+ 8DEC              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 280+ 8DEC              ;
 281+ 8DEC              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 282+ 8DEC              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 283+ 8DEC              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 284+ 8DEC              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 285+ 8DEC
 286+ 8DEC              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 287+ 8DEC
 288+ 8DEC 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 289+ 8DED 3D           	dec a
 290+ 8DEE 20 06        	jr nz,1F
 291+ 8DF0
 292+ 8DF0              ; --- Tipo_1
 293+ 8DF0
 294+ 8DF0 21 AE 89     	ld hl,Ctrl_4
 295+ 8DF3 CB C6        	set 0,(hl)
 296+ 8DF5 C9           	ret
 297+ 8DF6
 298+ 8DF6 3D           1 dec a
 299+ 8DF7 20 06        	jr nz,2F
 300+ 8DF9
 301+ 8DF9              ; --- Tipo_2
 302+ 8DF9
 303+ 8DF9 21 AE 89     	ld hl,Ctrl_4
 304+ 8DFC CB CE        	set 1,(hl)
 305+ 8DFE C9           	ret
 306+ 8DFF
 307+ 8DFF 3D           2 dec a
 308+ 8E00 20 06        	jr nz,3F
 309+ 8E02
 310+ 8E02              ; --- Tipo_3
 311+ 8E02
 312+ 8E02 21 AE 89     	ld hl,Ctrl_4
 313+ 8E05 CB D6        	set 2,(hl)
 314+ 8E07 C9           	ret
 315+ 8E08
 316+ 8E08              ; --- Tipo_3
 317+ 8E08
 318+ 8E08 21 AE 89     3 ld hl,Ctrl_4
 319+ 8E0B CB D6        	set 2,(hl)
 320+ 8E0D C9           	ret
 321+ 8E0E
 322+ 8E0E              ; ---------------------------------------------------------------------
 323+ 8E0E              ;
 324+ 8E0E              ;	22/01/24
 325+ 8E0E
 326+ 8E0E 21 AE 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 327+ 8E11 CB 46        	bit 0,(hl)
 328+ 8E13 20 0E        	jr nz,1F
 329+ 8E15
 330+ 8E15 CB 4E        	bit 1,(hl)
 331+ 8E17 20 10        	jr nz,2F
 332+ 8E19
 333+ 8E19 CB 56        	bit 2,(hl)
 334+ 8E1B 20 12        	jr nz,3F
 335+ 8E1D
 336+ 8E1D CB 5E        	bit 3,(hl)
 337+ 8E1F 20 14        	jr nz,4F
 338+ 8E21 18 19        	jr 6F
 339+ 8E23
 340+ 8E23              ; Entidad_de_Tipo_1.
 341+ 8E23
 342+ 8E23 CB 66        1 bit 4,(hl)
 343+ 8E25 28 15        	jr z,6F
 344+ 8E27 18 10        	jr 5F
 345+ 8E29
 346+ 8E29              ; Entidad_de_Tipo_2.
 347+ 8E29
 348+ 8E29 CB 6E        2 bit 5,(hl)
 349+ 8E2B 28 0F        	jr z,6F
 350+ 8E2D 18 0A        	jr 5F
 351+ 8E2F
 352+ 8E2F              ; Entidad_de_Tipo_3.
 353+ 8E2F
 354+ 8E2F CB 76        3 bit 6,(hl)
 355+ 8E31 28 09        	jr z,6F
 356+ 8E33 18 04        	jr 5F
 357+ 8E35
 358+ 8E35              ; Entidad_de_Tipo_4.
 359+ 8E35
 360+ 8E35 CB 7E        4 bit 7,(hl)
 361+ 8E37 28 03        	jr z,6F
 362+ 8E39
 363+ 8E39              ; Esta entidad TIENE MOV_MASTICADOS.
 364+ 8E39
 365+ 8E39 AF           5 xor a
 366+ 8E3A 3C           	inc a
 367+ 8E3B C9           	ret
 368+ 8E3C
 369+ 8E3C              ; Esta entidad NO TIENE MOV_MASTICADOS.
 370+ 8E3C
 371+ 8E3C AF           6 xor a
 372+ 8E3D C9           	ret
 373+ 8E3E
 374+ 8E3E              ;	------------------------------------------------------------------------------------
 375+ 8E3E              ;
 376+ 8E3E              ;	12/01/24
 377+ 8E3E              ;
 378+ 8E3E              ;	INPUTS:	A contiene el (Tipo) de entidad.
 379+ 8E3E              ;
 380+ 8E3E              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 381+ 8E3E              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 382+ 8E3E
 383+ 8E3E CB 27        Calcula_salto_en_BC sla a
 384+ 8E40 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 385+ 8E42 4F           	ld c,a
 386+ 8E43 06 00        	ld b,0
 387+ 8E45 C9           	ret
 388+ 8E46
 389+ 8E46              ; ------------------------------------------------------------------
 390+ 8E46              ;
 391+ 8E46              ;	19/1/24
 392+ 8E46              ;
 393+ 8E46              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 394+ 8E46              ;	Actualiza (Datos_de_entidad) con esa dirección.
 395+ 8E46
 396+ 8E46 A7           Situa_en_datos_de_definicion and a
 397+ 8E47 ED 4A        	adc hl,bc
 398+ 8E49 CD 9D 8B     	call Extrae_address
 399+ 8E4C 22 9D 89         ld (Datos_de_entidad),hl
 400+ 8E4F C9           	ret
 401+ 8E50
 402+ 8E50              ; ------------------------------------------------------------------
 403+ 8E50
 404+ 8E50              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 405+ 8E50              ; 	inc de
 406+ 8E50              ; 	inc de
 407+ 8E50              ; 	ex de,hl
 408+ 8E50              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 409+ 8E50              ; 	ret
 410+ 8E50
 411+ 8E50              ; ----------------------------------------------------------------------------------------------------------
 412+ 8E50              ;
 413+ 8E50              ;	31/1/24
 414+ 8E50              ;
 415+ 8E50              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 416+ 8E50              ;	_ de entidad.
 417+ 8E50              ;
 418+ 8E50              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 419+ 8E50              ;
 420+ 8E50              ;
 421+ 8E50              ;	MODIFICA: HL,DE y BC
 422+ 8E50
 423+ 8E50
 424+ 8E50              Definicion_de_entidad_a_bandeja_DRAW
 425+ 8E50
 426+ 8E50 11 4A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 427+ 8E53 01 03 00     	ld bc,3
 428+ 8E56 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 429+ 8E58              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 430+ 8E58 11 54 89     	ld de,Attr									; DE en (Attr).
 431+ 8E5B 01 05 00     	ld bc,5
 432+ 8E5E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 433+ 8E60              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 434+ 8E60 11 5D 89     	ld de,Posicion_inicio
 435+ 8E63 01 03 00     	ld bc,3
 436+ 8E66 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 437+ 8E68              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 438+ 8E68 11 69 89     	ld de,Puntero_de_almacen_de_mov_masticados
 439+ 8E6B 01 02 00     	ld bc,2
 440+ 8E6E ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 441+ 8E70
 442+ 8E70 11 73 89     	ld de,Frames_explosion
 443+ 8E73 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 444+ 8E75 12           	ld (de),a 									; Vuelco (Frames_explosion).
 445+ 8E76
 446+ 8E76 C9           	ret
 447+ 8E77
 448+ 8E77              ; ----------------------------------------------------------------------------------------------------------
 449+ 8E77              ;
 450+ 8E77              ;	22/01/24
 451+ 8E77              ;
 452+ 8E77              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 453+ 8E77              ;
 454+ 8E77              ;	Las cajas contienen entidades iniciadas:
 455+ 8E77              ;
 456+ 8E77              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 457+ 8E77              ;
 458+ 8E77              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 459+ 8E77              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 460+ 8E77              ;
 461+ 8E77              ;	MODIFICA: HL,DE y BC
 462+ 8E77
 463+ 8E77 21 4A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 464+ 8E7A ED 5B 91 89  	ld de,(Puntero_store_caja)
 465+ 8E7E 7E           	ld a,(hl)
 466+ 8E7F 12           	ld (de),a
 467+ 8E80 13           	inc de 													; (Tipo).
 468+ 8E81
 469+ 8E81 21 51 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 470+ 8E84 01 02 00     	ld bc,2
 471+ 8E87 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 472+ 8E89              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 473+ 8E89 23           	inc hl
 474+ 8E8A 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 475+ 8E8B 12           	ld (de),a
 476+ 8E8C 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 477+ 8E8D
 478+ 8E8D 21 60 89     	ld hl,Impacto
 479+ 8E90 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 480+ 8E91 12           	ld (de),a
 481+ 8E92 13           	inc de 													; (Impacto), volcado a la caja.
 482+ 8E93              ;															; DE situado ahora en (Variables_de_borrado).
 483+ 8E93 23           	inc hl
 484+ 8E94 01 06 00     	ld bc,6
 485+ 8E97 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 486+ 8E99              ; 															; DE situado ahora en (Puntero_de_impresión).
 487+ 8E99 01 07 00     	ld bc,7
 488+ 8E9C ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 489+ 8E9E              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 490+ 8E9E              ;															; HL apunta ahora a (Columnas).
 491+ 8E9E 21 72 89     	ld hl,Ctrl_2
 492+ 8EA1 7E           	ld a,(hl)
 493+ 8EA2 12           	ld (de),a 												; Volcamos (Ctrl_2).
 494+ 8EA3 13           	inc de
 495+ 8EA4
 496+ 8EA4 C9           	ret
 497+ 8EA5
 498+ 8EA5              ;---------------------------------------------------------------------------------------------------------------
 499+ 8EA5              ;
 500+ 8EA5              ;	5/1/24
 501+ 8EA5              ;
 502+ 8EA5              ;	INICIALIZA (Numero_parcial_de_entidades).
 503+ 8EA5              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 504+ 8EA5              ;
 505+ 8EA5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 506+ 8EA5              ;
 507+ 8EA5              ;	(Numero_parcial_de_entidades)="7".
 508+ 8EA5              ;
 509+ 8EA5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 510+ 8EA5              ;
 511+ 8EA5              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 512+ 8EA5              ;
 513+ 8EA5              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 514+ 8EA5              ;	MODIFICA: A y B.
 515+ 8EA5              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 516+ 8EA5
 517+ 8EA5              Inicializa_Numero_parcial_de_entidades
 518+ 8EA5
 519+ 8EA5              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 520+ 8EA5
 521+ 8EA5 3A 97 89     	ld a,(Numero_de_entidades)
 522+ 8EA8 A7           	and a
 523+ 8EA9
 524+ 8EA9              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 525+ 8EA9              ;	jr z,$
 526+ 8EA9              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 527+ 8EA9
 528+ 8EA9 20 03        	jr nz,3F
 529+ 8EAB
 530+ 8EAB              ; ---------- ---------- ----------
 531+ 8EAB
 532+ 8EAB              ;! RESET para pruebas. Omitir esta línea en modo normal.
 533+ 8EAB              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 534+ 8EAB
 535+ 8EAB CD F3 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 536+ 8EAE
 537+ 8EAE              ; ---------- ---------- ----------
 538+ 8EAE
 539+ 8EAE 3A 97 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 540+ 8EB1 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 541+ 8EB3 38 08        	jr c,1F
 542+ 8EB5
 543+ 8EB5              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 544+ 8EB5              ; Actualizamos variables.
 545+ 8EB5
 546+ 8EB5 3E 07        	ld a,7
 547+ 8EB7 32 98 89     	ld (Numero_parcial_de_entidades),a
 548+ 8EBA 47           	ld b,a
 549+ 8EBB 18 04        	jr 2F
 550+ 8EBD
 551+ 8EBD              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 552+ 8EBD              ; (Numero_de_entidades)="0".
 553+ 8EBD
 554+ 8EBD 32 98 89     1 ld (Numero_parcial_de_entidades),a
 555+ 8EC0 47           	ld b,a
 556+ 8EC1 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1711  8EC2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8EC2              ; ******************************************************************************************************************************************************************************************
   2+ 8EC2              ;
   3+ 8EC2              ; 26/06/23
   4+ 8EC2              ;
   5+ 8EC2              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8EC2
   7+ 8EC2              Draw
   8+ 8EC2
   9+ 8EC2 CD AF 91     	call Prepara_draw
  10+ 8EC5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8EC6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8EC7 28 05        	jr z,2F
  13+ 8EC9
  14+ 8EC9 3A 5F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8ECC 18 0C        	jr 1F
  16+ 8ECE
  17+ 8ECE 2A 5D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8ED1 22 4D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8ED4 CD 63 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8ED7              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8ED7
  22+ 8ED7 CD 10 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8EDA
  24+ 8EDA 3A 6D 89     1 ld a,(Ctrl_0)
  25+ 8EDD CB 6F        	bit 5,a
  26+ 8EDF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8EE1
  28+ 8EE1 CD F9 8E     	call Comprueba_limite_horizontal
  29+ 8EE4 CD 89 8F     	call Comprueba_limite_vertical
  30+ 8EE7
  31+ 8EE7              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8EE7              ; -----------------------
  33+ 8EE7              ; -----------------------
  34+ 8EE7              ; -----------------------
  35+ 8EE7
  36+ 8EE7 CD DF 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8EEA CD 16 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8EED CD 75 91     	call Define_rutina_de_impresion
  39+ 8EF0
  40+ 8EF0 3A 6D 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8EF3 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8EF5 32 6D 89     	ld (Ctrl_0),a
  43+ 8EF8
  44+ 8EF8 C9           	ret
  45+ 8EF9
  46+ 8EF9              ; *******************************************************************************************************************************************************************************************
  47+ 8EF9              ;	21/01/23
  48+ 8EF9              ;
  49+ 8EF9              ; 	Comprueba_limite_horizontal.
  50+ 8EF9              ;
  51+ 8EF9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8EF9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8EF9              ;
  54+ 8EF9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8EF9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8EF9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8EF9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8EF9
  59+ 8EF9
  60+ 8EF9
  61+ 8EF9 3A 6D 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8EFC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8EFE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8F00 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8F02 32 6D 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8F05 18 09            jr 6F
  67+ 8F07 CB 5F        1 bit 3,a
  68+ 8F09 28 0A            jr z,2F
  69+ 8F0B E6 F7            and $f7
  70+ 8F0D 32 6D 89         ld (Ctrl_0),a
  71+ 8F10 CD 63 90     6 call Inicializacion
  72+ 8F13 18 5B            jr 5F
  73+ 8F15 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8F16
  75+ 8F16              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8F16              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8F16
  78+ 8F16 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8F17 2A 6F 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8F1A CD A5 9E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8F1D 67           	ld h,a
  82+ 8F1E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F1F CD A5 9E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F22 67           	ld h,a
  85+ 8F23 A7           	and a
  86+ 8F24 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F26 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F27 3A 5F 89     	ld a,(Cuad_objeto)
  89+ 8F2A FE 02        	cp 2
  90+ 8F2C 38 1E        	jr c,3F
  91+ 8F2E 28 1C        	jr z,3F
  92+ 8F30 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8F31 28 23            jr z,7F
  94+ 8F33 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8F35 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8F37 E1           	pop hl
  97+ 8F38
  98+ 8F38              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8F38              ; _para indicar con E="2" en caso necesario.
 100+ 8F38
 101+ 8F38 E5               push hl
 102+ 8F39 C5               push bc
 103+ 8F3A CD A5 9E     	call calcula_tercio
 104+ 8F3D FE 01        	cp 1
 105+ 8F3F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8F41 CD 71 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8F44 28 26            jr z,9F
 108+ 8F46 38 24            jr c,9F
 109+ 8F48 1E 00        11 ld e,0
 110+ 8F4A 18 22            jr 8F
 111+ 8F4C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8F4D 28 07        	jr z, 7F
 113+ 8F4F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8F51 1E 00         	ld e,0
 115+ 8F53 E1           	pop hl
 116+ 8F54 18 04        	jr 4F
 117+ 8F56 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8F58 18 15            jr 10F
 119+ 8F5A
 120+ 8F5A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8F5A              ; _para indicar con E="2" en caso necesario.
 122+ 8F5A
 123+ 8F5A E5           4 push hl
 124+ 8F5B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8F5C CD A5 9E     	call calcula_tercio
 126+ 8F5F FE 01        	cp 1
 127+ 8F61 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8F63 CD 71 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8F66 28 04            jr z,9F
 130+ 8F68 30 02            jr nc,9F
 131+ 8F6A 18 02        	jr 8F
 132+ 8F6C 1E 02        9 ld e,2
 133+ 8F6E C1           8 pop bc
 134+ 8F6F E1           10 pop hl
 135+ 8F70 C9           5 ret
 136+ 8F71
 137+ 8F71              ; --------------------
 138+ 8F71              ;
 139+ 8F71              ; 25/08/22
 140+ 8F71
 141+ 8F71 CD A5 9E     Comprueba_centro call calcula_tercio
 142+ 8F74 67               ld h,a
 143+ 8F75 08           	ex af,af
 144+ 8F76 FE 02        	cp 2
 145+ 8F78 38 07        	jr c,1F
 146+ 8F7A 28 05        	jr z,1F
 147+ 8F7C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8F7F 18 03        	jr 2F
 149+ 8F81 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8F84 08           2 ex af,af
 151+ 8F85 A7               and a
 152+ 8F86 ED 42            sbc hl,bc
 153+ 8F88 C9               ret
 154+ 8F89
 155+ 8F89              ; *********************************************************************************************************************************************************************************************
 156+ 8F89              ;
 157+ 8F89              ;   16/8/22
 158+ 8F89              ;
 159+ 8F89              ;	Comprueba_limite_vertical
 160+ 8F89              ;
 161+ 8F89              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8F89              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8F89              ;
 164+ 8F89
 165+ 8F89 2A 4D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8F8C 7D           	ld a,l
 167+ 8F8D E6 1F        	and $1F
 168+ 8F8F 57           	ld d,a
 169+ 8F90 3A 71 89     	ld a,(Limite_vertical)
 170+ 8F93 BA           	cp d 											; Límite - Posición.
 171+ 8F94 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8F95 3A 5F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8F98 CB 47        	bit 0,a
 174+ 8F9A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8F9C
 176+ 8F9C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8F9C
 178+ 8F9C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8F9D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8F9F
 181+ 8F9F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8F9F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8F9F
 184+ 8F9F 3A 51 89         ld a,(Coordenada_X)
 185+ 8FA2 16 0F            ld d,Centro_izquierda
 186+ 8FA4 A7               and a
 187+ 8FA5 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8FA6 28 1E            jr z,3F
 189+ 8FA8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8FAA              ;                                                    ; _salimos sin modificar nada.
 191+ 8FAA 18 0E            jr 2F
 192+ 8FAC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8FAD 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8FAF
 195+ 8FAF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8FAF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8FAF
 198+ 8FAF 3A 51 89         ld a,(Coordenada_X)
 199+ 8FB2 16 10            ld d,Centro_derecha
 200+ 8FB4 A7               and a
 201+ 8FB5 92               sub d
 202+ 8FB6 28 0E            jr z,3F
 203+ 8FB8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8FBA              ;                                                    ; _salimos sin modificar nada.
 205+ 8FBA CB 43        2 bit 0,e
 206+ 8FBC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8FBE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8FBF CD 53 90         call Modificaccionne
 209+ 8FC2 C1           	pop bc
 210+ 8FC3 CD 63 90         call Inicializacion
 211+ 8FC6 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8FC7
 213+ 8FC7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8FC7
 215+ 8FC7 C5           4 push bc
 216+ 8FC8 01 4C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8FCB 0A           	ld a,(bc)
 218+ 8FCC 3D           	dec a
 219+ 8FCD 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8FCE 7D           	ld a,l
 221+ 8FCF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8FD0 CB 47        	bit 0,a
 223+ 8FD2 28 03        	jr z,5F
 224+ 8FD4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8FD5 18 2E        	jr 7F
 226+ 8FD7
 227+ 8FD7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8FD7
 229+ 8FD7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8FD8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8FD9 3A 6D 89     	ld a,(Ctrl_0)
 232+ 8FDC CB 4F        	bit 1,a
 233+ 8FDE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8FE0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8FE1
 236+ 8FE1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8FE1
 238+ 8FE1 1C               inc e
 239+ 8FE2 1D               dec e
 240+ 8FE3 20 07            jr nz,12F
 241+ 8FE5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8FE6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8FE7 22 4D 89     	ld (Posicion_actual),hl
 244+ 8FEA 18 44        13 jr 9F
 245+ 8FEC CB 43        12 bit 0,e
 246+ 8FEE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8FF0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8FF0 C1           	pop bc
 249+ 8FF1 18 D3        	jr 3B
 250+ 8FF3 80           14 add b
 251+ 8FF4 6F               ld l,a
 252+ 8FF5 22 4D 89     	ld (Posicion_actual),hl
 253+ 8FF8 CD 53 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8FFB 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8FFD E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8FFF 32 6D 89         ld (Ctrl_0),a
 257+ 9002 F1           	pop af
 258+ 9003 18 2B        	jr 9F
 259+ 9005
 260+ 9005              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9005
 262+ 9005 F5           7 push af
 263+ 9006 3A 6D 89     	ld a,(Ctrl_0)
 264+ 9009 CB 47        	bit 0,a
 265+ 900B 20 1D        	jr nz,8F
 266+ 900D F1           	pop af
 267+ 900E
 268+ 900E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 900E
 270+ 900E 1C           	inc e
 271+ 900F 1D               dec e
 272+ 9010 20 07            jr nz,10F
 273+ 9012 90           	sub b
 274+ 9013 6F               ld l,a
 275+ 9014 22 4D 89     	ld (Posicion_actual),hl
 276+ 9017 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9019              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9019 CB 43        10 bit 0,e
 279+ 901B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 901D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 901D C1           	pop bc
 282+ 901E 18 A6        	jr 3B
 283+ 9020 90           16 sub b
 284+ 9021 6F               ld l,a
 285+ 9022 22 4D 89     	ld (Posicion_actual),hl
 286+ 9025 CD 53 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9028 18 06            jr 9F
 288+ 902A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 902C 32 6D 89         ld (Ctrl_0),a
 290+ 902F F1           	pop af
 291+ 9030 C1           9 pop bc
 292+ 9031 1E 00        	ld e,0
 293+ 9033 CD 63 90         call Inicializacion
 294+ 9036 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9037 08           	ex af,af
 296+ 9038 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9039 18 8B            jr 3B
 298+ 903B
 299+ 903B              ; --------------------
 300+ 903B
 301+ 903B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 903D CD CA 91     1 call PreviousScan
 303+ 9040 10 FB            djnz 1B
 304+ 9042 22 4D 89     	ld (Posicion_actual),hl
 305+ 9045 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9046 C9           	ret
 307+ 9047
 308+ 9047              ; --------------------
 309+ 9047
 310+ 9047 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9049 CD BB 91     1 call NextScan
 312+ 904C 10 FB            djnz 1B
 313+ 904E 22 4D 89     	ld (Posicion_actual),hl
 314+ 9051 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9052 C9           	ret
 316+ 9053
 317+ 9053              ; --------------------
 318+ 9053              ;
 319+ 9053              ;	22/01/23
 320+ 9053              ;
 321+ 9053              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9053              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9053              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9053
 325+ 9053
 326+ 9053              Modificaccionne
 327+ 9053
 328+ 9053 3A 5F 89     	ld a,(Cuad_objeto)
 329+ 9056 FE 02        	cp 2
 330+ 9058 CC 3B 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 905B DC 3B 90         call c,Modifica_Pos_actual
 332+ 905E C8           	ret z
 333+ 905F CD 47 90         call Modifica_Pos_actual2
 334+ 9062 C9               ret
 335+ 9063
 336+ 9063              ; *************************************************************************************************************************************************************************************************
 337+ 9063              ;
 338+ 9063              ;	13/8/22
 339+ 9063              ;
 340+ 9063              ;	Inicializacion
 341+ 9063              ;
 342+ 9063              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9063              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9063              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9063              ;
 346+ 9063              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9063              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9063              ;	_ desaparece/aparece.
 349+ 9063
 350+ 9063              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9063              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9063              ;
 353+ 9063              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9063              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9063              ; 		   [E] ="0"
 356+ 9063
 357+ 9063              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9063
 359+ 9063 CD A5 9E     Inicializacion call calcula_tercio
 360+ 9066 28 36        	jr z,primit
 361+ 9068 E6 02        	and 2
 362+ 906A 20 07        	jr nz,segmit
 363+ 906C 7D           	ld a,l
 364+ 906D FE 7F        	cp $7f
 365+ 906F 38 2D        	jr c,primit
 366+ 9071 28 2B        	jr z,primit
 367+ 9073 CD D9 90     segmit call column
 368+ 9076 38 13        	jr c,tercuad
 369+ 9078 3E 04        cuarcuad ld a,4
 370+ 907A 32 5F 89     	ld (Cuad_objeto),a
 371+ 907D 21 20 48     	ld hl,$4820
 372+ 9080 22 6F 89     	ld (Limite_horizontal),hl
 373+ 9083 21 71 89     	ld hl,Limite_vertical
 374+ 9086 36 0D        	ld (hl),$0d
 375+ 9088 08           	ex af,af
 376+ 9089 18 3C        	jr 1F
 377+ 908B              tercuad
 378+ 908B 3E 03        	ld a,3
 379+ 908D 32 5F 89     	ld (Cuad_objeto),a
 380+ 9090 21 20 48     	ld hl,$4820
 381+ 9093 22 6F 89     	ld (Limite_horizontal),hl
 382+ 9096 21 71 89     	ld hl,Limite_vertical
 383+ 9099 36 12        	ld (hl),$12
 384+ 909B 08           	ex af,af
 385+ 909C 18 29        	jr 1F
 386+ 909E CD D9 90     primit call column
 387+ 90A1 38 13        	jr c, primcuad
 388+ 90A3              segcuad
 389+ 90A3 3E 02        	ld a,2
 390+ 90A5 32 5F 89     	ld (Cuad_objeto),a
 391+ 90A8 21 C0 4F     	ld hl,$4fc0
 392+ 90AB 22 6F 89     	ld (Limite_horizontal),hl
 393+ 90AE 21 71 89     	ld hl,Limite_vertical
 394+ 90B1 36 0D        	ld (hl),$0d
 395+ 90B3 08           	ex af,af
 396+ 90B4 18 11        	jr 1F
 397+ 90B6              primcuad
 398+ 90B6 3E 01        	ld a,1
 399+ 90B8 32 5F 89     	ld (Cuad_objeto),a
 400+ 90BB 21 C0 4F     	ld hl,$4fc0
 401+ 90BE 22 6F 89     	ld (Limite_horizontal),hl
 402+ 90C1 21 71 89     	ld hl,Limite_vertical
 403+ 90C4 36 12        	ld (hl),$12
 404+ 90C6 08           	ex af,af
 405+ 90C7
 406+ 90C7 C5           1 push bc
 407+ 90C8 E5           	push hl
 408+ 90C9 D5           	push de
 409+ 90CA
 410+ 90CA 2A 4D 89     	ld hl,(Posicion_actual)
 411+ 90CD CD C3 9E     	call Genera_coordenadas
 412+ 90D0
 413+ 90D0 D1           	pop de
 414+ 90D1 E1           	pop hl
 415+ 90D2 C1           	pop bc
 416+ 90D3
 417+ 90D3 21 6D 89     	ld hl,Ctrl_0
 418+ 90D6 CB EE        	set 5,(hl)
 419+ 90D8 C9           	ret
 420+ 90D9
 421+ 90D9              ; ------------------------------------------------------------------------------------------------------------------
 422+ 90D9
 423+ 90D9              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 90D9              ;
 425+ 90D9              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 90D9
 427+ 90D9 7D           column ld a,l
 428+ 90DA E6 1F        	and $1f
 429+ 90DC FE 10         	cp $10
 430+ 90DE C9            	ret
 431+ 90DF
 432+ 90DF              ; --------------------------------------------------------------------------------------------------------------------
 433+ 90DF              ;
 434+ 90DF              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 90DF              ;
 436+ 90DF              ; 14/12/22
 437+ 90DF              ;
 438+ 90DF              ;	Modifica: A y BC.
 439+ 90DF
 440+ 90DF 3A 5F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 90E2 E6 01        	and 1
 442+ 90E4 28 17        	jr z,1F
 443+ 90E6
 444+ 90E6              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 90E6
 446+ 90E6 3A 51 89     	ld a,(Coordenada_X)
 447+ 90E9 47           	ld b,a
 448+ 90EA 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 90EB 79           	ld a,c
 450+ 90EC 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 90ED 38 08        	jr c,2F
 452+ 90EF 47           	ld b,a
 453+ 90F0 79           	ld a,c
 454+ 90F1 90           	sub b
 455+ 90F2 32 6E 89     	ld (Columnas),a
 456+ 90F5 18 1B        	jr 4F
 457+ 90F7 79           2 ld a,c
 458+ 90F8 32 6E 89     	ld (Columnas),a
 459+ 90FB 18 15        	jr 4F
 460+ 90FD
 461+ 90FD              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 90FD
 463+ 90FD 3A 51 89     1 ld a,(Coordenada_X)
 464+ 9100 81           	add c
 465+ 9101 3D           	dec a
 466+ 9102 D6 1F        	sub $1f
 467+ 9104 38 08        	jr c,3F
 468+ 9106 47           	ld b,a
 469+ 9107 79           	ld a,c
 470+ 9108 90           	sub b
 471+ 9109 32 6E 89     	ld (Columnas),a
 472+ 910C 18 04        	jr 4F
 473+ 910E 79           3 ld a,c
 474+ 910F 32 6E 89     	ld (Columnas),a
 475+ 9112 D9           4 exx
 476+ 9113 4F           	ld c,a
 477+ 9114 D9           	exx
 478+ 9115 C9            ret
 479+ 9116
 480+ 9116              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9116              ;
 482+ 9116              ;   19/7/23
 483+ 9116              ;
 484+ 9116              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9116              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9116              ;
 487+ 9116              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9116              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9116              ;
 490+ 9116              ;	DESTRUYE: HL,B Y A.
 491+ 9116
 492+ 9116 3A 5F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9119 FE 02        	cp 2
 494+ 911B 38 18        	jr c,1F
 495+ 911D 28 16        	jr z,1F
 496+ 911F E6 01        	and 1
 497+ 9121 28 0D        	jr z,3F
 498+ 9123
 499+ 9123              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9123
 501+ 9123 CD 69 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9126
 503+ 9126 7D           9 ld a,l
 504+ 9127 E6 1F        	and $1f
 505+ 9129 28 2A        	jr z,7F
 506+ 912B 2B           	dec hl
 507+ 912C 10 F8        	djnz 9B
 508+ 912E 18 25        	jr 7F
 509+ 9130
 510+ 9130              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9130
 512+ 9130 2A 4D 89     3 ld hl,(Posicion_actual)
 513+ 9133 18 20        	jr 7F
 514+ 9135
 515+ 9135 28 14        1 jr z,2F
 516+ 9137
 517+ 9137              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9137
 519+ 9137 CD 69 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 913A
 521+ 913A 7D           4 ld a,l
 522+ 913B E6 1F        	and $1f
 523+ 913D 28 03        	jr z,6F
 524+ 913F 2B           	dec hl
 525+ 9140 10 F8        	djnz 4B
 526+ 9142 06 0F        6 ld b,15
 527+ 9144 CD CA 91     5 call PreviousScan
 528+ 9147 10 FB        	djnz 5B
 529+ 9149 18 0A        	jr 7F
 530+ 914B
 531+ 914B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 914B
 533+ 914B CD 69 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 914E 06 0F        	ld b,15
 535+ 9150 CD CA 91     8 call PreviousScan
 536+ 9153 10 FB        	djnz 8B
 537+ 9155
 538+ 9155 E5           7 push hl
 539+ 9156 DD E1        	pop ix
 540+ 9158
 541+ 9158 2A 4F 89     	ld hl,(Puntero_objeto)
 542+ 915B E5           	push hl
 543+ 915C FD E1        	pop iy
 544+ 915E
 545+ 915E              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 915E
 547+ 915E 3A 6D 89     	ld a,(Ctrl_0)
 548+ 9161 CB 77        	bit 6,a
 549+ 9163 C8           	ret z
 550+ 9164
 551+ 9164              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9164              ; _ entidad / Amadeus´.
 553+ 9164
 554+ 9164 DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 9168
 556+ 9168 C9           	ret
 557+ 9169
 558+ 9169              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9169              ;
 560+ 9169              ;	2/1/23
 561+ 9169              ;
 562+ 9169              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9169              ;
 564+ 9169              ;	Tras esta rutina tenemos:
 565+ 9169              ;
 566+ 9169              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9169              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9169              ;
 569+ 9169              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9169
 571+ 9169 2A 4D 89     Operandos ld hl,(Posicion_actual)
 572+ 916C 3A 6E 89     	ld a,(Columnas)
 573+ 916F 3D           	dec a
 574+ 9170 20 01        	jr nz,1F
 575+ 9172 3C           	inc a
 576+ 9173 47           1 ld b,a
 577+ 9174 C9           	ret
 578+ 9175
 579+ 9175              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9175              ;
 581+ 9175              ;	3/1/23
 582+ 9175              ;
 583+ 9175              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9175              ;
 585+ 9175              ;	Destruye: A,B,HL y DE.
 586+ 9175
 587+ 9175              Define_rutina_de_impresion
 588+ 9175
 589+ 9175 3A 4C 89     	ld a,(Columns)
 590+ 9178 47           	ld b,a
 591+ 9179 3A 6E 89     	ld a,(Columnas)
 592+ 917C B8           	cp b
 593+ 917D 20 0D        	jr nz,2f
 594+ 917F
 595+ 917F              ;	La entidad se imprime entera.
 596+ 917F
 597+ 917F 21 9E 92     	ld hl, Indice_entidades_completas
 598+ 9182 E6 01        	and 1
 599+ 9184 28 02        	jr z,1F
 600+ 9186
 601+ 9186 23           	inc hl
 602+ 9187 23           	inc hl
 603+ 9188
 604+ 9188 CD 9D 8B     1 call Extrae_address
 605+ 918B C9           	ret		;	ret
 606+ 918C
 607+ 918C              ;	La entidad no se imprime entera en pantalla.
 608+ 918C
 609+ 918C 3A 5F 89     2 ld a,(Cuad_objeto)
 610+ 918F E6 01        	and 1
 611+ 9191 28 17        	jr z,3F
 612+ 9193
 613+ 9193              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9193
 615+ 9193 21 A2 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9196 3A 4C 89     4 ld a,(Columns)
 617+ 9199 E6 01        	and 1
 618+ 919B 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 919D
 620+ 919D 23           	inc hl
 621+ 919E 23           	inc hl
 622+ 919F
 623+ 919F 3A 6E 89     	ld a,(Columnas)
 624+ 91A2 E6 01        	and 1
 625+ 91A4 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 91A6
 627+ 91A6 23           	inc hl
 628+ 91A7 23           	inc hl
 629+ 91A8
 630+ 91A8 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 91AA
 632+ 91AA 21 A8 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 91AD 18 E7        	jr 4B
 634+ 91AF
 635+ 91AF              ; --------------------------------------------------------------------------------------------------------------------
 636+ 91AF              ;
 637+ 91AF              ;	Prepara_draw
 638+ 91AF              ;
 639+ 91AF              ;	Es una rutina de carga.
 640+ 91AF              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 91AF              ;
 642+ 91AF              ;	FUNCIONAMIENTO:
 643+ 91AF              ;
 644+ 91AF              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 91AF              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 91AF              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 91AF              ;
 648+ 91AF              ;	DESTRUYE:
 649+ 91AF              ;
 650+ 91AF              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 91AF
 652+ 91AF 21 4B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 91B2 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 91B3 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 91B4 4E           	ld c,(hl)
 656+ 91B5 2A 4D 89     	ld hl,(Posicion_actual)
 657+ 91B8 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 91BA C9           	ret
 659+ 91BB
 660+ 91BB              ;----------------------------------------------------------------------------------------------------------------
 661+ 91BB              ;
 662+ 91BB              ;	5/08/22
 663+ 91BB              ;
 664+ 91BB              ;   NextScan.
 665+ 91BB              ;
 666+ 91BB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 91BB              ;
 668+ 91BB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 91BB              ;
 670+ 91BB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 91BB              ;
 672+ 91BB              ;       DESTRUIDOS: AF y HL !!!
 673+ 91BB              ;
 674+ 91BB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 91BB              ;
 676+ 91BB
 677+ 91BB 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 91BC 7C               ld a,h
 679+ 91BD E6 07            and 7
 680+ 91BF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 91C0
 682+ 91C0 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 91C1 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 91C3 6F               ld l,a
 685+ 91C4 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 91C5
 687+ 91C5 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 91C6 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 91C8 67               ld h,a
 690+ 91C9 C9               ret
 691+ 91CA
 692+ 91CA              ;----------------------------------------------------------------------------------------------------------------
 693+ 91CA              ;
 694+ 91CA              ;	5/08/22
 695+ 91CA              ;
 696+ 91CA              ;   PreviousScan.
 697+ 91CA              ;
 698+ 91CA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 91CA              ;
 700+ 91CA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 91CA              ;
 702+ 91CA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 91CA              ;
 704+ 91CA              ;       DESTRUIDOS: AF y HL !!!
 705+ 91CA              ;
 706+ 91CA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 91CA              ;
 708+ 91CA
 709+ 91CA 7C           PreviousScan ld a,h
 710+ 91CB 25               dec h               ; Dec H.
 711+ 91CC E6 07            and 7
 712+ 91CE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 91CF
 714+ 91CF 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 91D0 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 91D2 6F               ld l,a
 717+ 91D3 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 91D4
 719+ 91D4 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 91D5 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 91D7 67               ld h,a
 722+ 91D8 C9               ret
 723+ 91D9
 724+ 91D9              ; -----------------------------------------------------------------------------------
 725+ 91D9              ;
 726+ 91D9              ;	31/7/23
 727+ 91D9              ;
 728+ 91D9              ;	Rutina principal de pintado de entidades.
 729+ 91D9              ;	Extrae la foto del frame, (entidades).
 730+ 91D9
 731+ 91D9              Extrae_foto_entidades
 732+ 91D9
 733+ 91D9 21 01 80     	ld hl,Album_de_fotos+1
 734+ 91DC 7E           	ld a,(hl)
 735+ 91DD A7           	and a
 736+ 91DE C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 91DF
 738+ 91DF              ;	No hay datos, (entidades para pintar en este frame).
 739+ 91DF
 740+ 91DF 3A 9A 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 91E2 A7           	and a
 742+ 91E3 C8           	ret z
 743+ 91E4
 744+ 91E4              ; -----------------------------------
 745+ 91E4
 746+ 91E4 ED 73 9F 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 91E8 31 00 80     	ld sp,Album_de_fotos
 748+ 91EB
 749+ 91EB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 91ED E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 91EE D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 91EF
 753+ 91EF ED 73 A1 89  	ld (Stack_2),sp
 754+ 91F3 ED 7B 9F 89  	ld sp,(Stack)
 755+ 91F7
 756+ 91F7              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 91F7
 758+ 91F7 3E CD        	ld a,$cd
 759+ 91F9 32 01 92     	ld (Imprime),a
 760+ 91FC EB           	ex de,hl
 761+ 91FD 22 02 92     	ld (Imprime+1),hl
 762+ 9200 EB           	ex de,hl
 763+ 9201
 764+ 9201              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9201
 766+ 9201 00 00 00     Imprime db 0,0,0
 767+ 9204
 768+ 9204 ED 73 9F 89  	ld (Stack),sp
 769+ 9208
 770+ 9208 3A 9A 89     	ld a,(Numero_de_malotes)
 771+ 920B 3D           	dec a
 772+ 920C 28 09        	jr z,1F
 773+ 920E 32 9A 89      	ld (Numero_de_malotes),a
 774+ 9211
 775+ 9211 ED 7B A1 89  	ld sp,(Stack_2)
 776+ 9215 18 D4        	jr 2B
 777+ 9217
 778+ 9217 AF           1 xor a
 779+ 9218 32 A1 89     	ld (Stack_2),a
 780+ 921B
 781+ 921B C9           	ret
 782+ 921C
 783+ 921C              ; -----------------------------------------------------------------------------------
 784+ 921C              ;
 785+ 921C              ;	28/2/23
 786+ 921C              ;
 787+ 921C              ;	Pinta los disparos generados.
 788+ 921C
 789+ 921C              Extrae_foto_disparos
 790+ 921C
 791+ 921C 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 921F 7E               ld a,(hl)
 793+ 9220 A7               and a
 794+ 9221 C8               ret z
 795+ 9222
 796+ 9222 3A AF 89     	ld a,(Numero_de_disparotes)
 797+ 9225 A7           	and a
 798+ 9226 C8           	ret z
 799+ 9227 ED 73 9F 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 922B 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 922E
 802+ 922E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9230 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9231 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9232
 806+ 9232 ED 73 A1 89  	ld (Stack_2),sp
 807+ 9236 ED 7B 9F 89  	ld sp,(Stack)
 808+ 923A
 809+ 923A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 923A
 811+ 923A 3E CD        	ld a,$cd
 812+ 923C 32 44 92     	ld (Imprime2),a
 813+ 923F EB           	ex de,hl
 814+ 9240 22 45 92     	ld (Imprime2+1),hl
 815+ 9243 EB           	ex de,hl
 816+ 9244
 817+ 9244              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9244
 819+ 9244 00 00 00     Imprime2 db 0,0,0
 820+ 9247
 821+ 9247 3A AF 89     	ld a,(Numero_de_disparotes)
 822+ 924A 3D           	dec a
 823+ 924B 28 09        	jr z,1F
 824+ 924D 32 AF 89      	ld (Numero_de_disparotes),a
 825+ 9250
 826+ 9250 ED 7B A1 89  	ld sp,(Stack_2)
 827+ 9254 18 D8        	jr 2B
 828+ 9256
 829+ 9256 AF           1 xor a
 830+ 9257 32 A1 89     	ld (Stack_2),a
 831+ 925A C9           	ret
 832+ 925B
 833+ 925B              ; -----------------------------------------------------------------------------------
 834+ 925B              ;
 835+ 925B              ;	4/9/23
 836+ 925B              ;
 837+ 925B              ;	Rutina principal de pintado de Amadeus.
 838+ 925B              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 925B
 840+ 925B 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 925E 7E           	ld a,(hl)
 842+ 925F A7           	and a
 843+ 9260 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9261
 845+ 9261 3A 9A 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9264 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9265 C8           	ret z
 848+ 9266
 849+ 9266              ; -----------------------------------
 850+ 9266
 851+ 9266 ED 73 9F 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 926A 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 926D
 854+ 926D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 926F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9270 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9271
 858+ 9271 ED 73 A1 89  	ld (Stack_2),sp
 859+ 9275 ED 7B 9F 89  	ld sp,(Stack)
 860+ 9279
 861+ 9279              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9279
 863+ 9279 3E CD        	ld a,$cd
 864+ 927B 32 83 92     	ld (Imprime_Amadeus),a
 865+ 927E EB           	ex de,hl
 866+ 927F 22 84 92     	ld (Imprime_Amadeus+1),hl
 867+ 9282 EB           	ex de,hl
 868+ 9283
 869+ 9283              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9283
 871+ 9283 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9286
 873+ 9286 ED 73 9F 89  	ld (Stack),sp
 874+ 928A
 875+ 928A 3A 9A 89     	ld a,(Numero_de_malotes)
 876+ 928D 3D           	dec a
 877+ 928E 28 09        	jr z,1F
 878+ 9290 32 9A 89      	ld (Numero_de_malotes),a
 879+ 9293
 880+ 9293 ED 7B A1 89  	ld sp,(Stack_2)
 881+ 9297 18 D4        	jr 2B
 882+ 9299
 883+ 9299 AF           1 xor a
 884+ 929A 32 A1 89     	ld (Stack_2),a
 885+ 929D
 886+ 929D C9           	ret
# file closed: Draw_XOR.asm
1712  929E              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 929E              ;   índices de Rutinas de impresión.
   2+ 929E
   3+ 929E AE 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92A0 DB 92            defw Pinta_Amadeus_3x2
   5+ 92A2
   6+ 92A2 31 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92A4 D1 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92A6 85 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92A8
  10+ 92A8 5B 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92AA 5F 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92AC 13 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92AE
  14+ 92AE
  15+ 92AE              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92AE              ;
  17+ 92AE              ;   12/12/22
  18+ 92AE              ;
  19+ 92AE              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92AE              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92AE              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92AE              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92AE              ;
  24+ 92AE              ;   Modifica: DE y HL.
  25+ 92AE
  26+ 92AE ED 73 9F 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92B2 FD F9        	ld sp,iy
  28+ 92B4 06 10            ld b,16
  29+ 92B6 D1           1 pop de
  30+ 92B7 7B               ld a,e
  31+ 92B8 AE               xor (hl)
  32+ 92B9 77           	ld (hl),a
  33+ 92BA 23           	inc hl
  34+ 92BB 7A               ld a,d
  35+ 92BC AE               xor (hl)
  36+ 92BD 77           	ld (hl),a
  37+ 92BE 2B           	dec hl
  38+ 92BF 24           	inc h
  39+ 92C0 7C               ld a,h
  40+ 92C1 E6 07            and 7
  41+ 92C3 20 0A            jr nz,2F
  42+ 92C5 7D               ld a,l
  43+ 92C6 C6 20            add a,$20
  44+ 92C8 6F               ld l,a
  45+ 92C9 38 04            jr c,2F
  46+ 92CB 7C               ld a,h
  47+ 92CC D6 08            sub 8
  48+ 92CE 67               ld h,a
  49+ 92CF 7C           2 ld a,h
  50+ 92D0 FE 58            cp $58
  51+ 92D2 28 02            jr z,3F
  52+ 92D4 10 E0            djnz 1B
  53+ 92D6 ED 7B 9F 89  3 ld sp,(Stack)
  54+ 92DA C9           	ret
  55+ 92DB
  56+ 92DB ED 73 9F 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 92DF FD F9        	ld sp,iy
  58+ 92E1 06 08            ld b,8
  59+ 92E3 D1           1 pop de
  60+ 92E4 7B               ld a,e
  61+ 92E5 AE               xor (hl)
  62+ 92E6 77           	ld (hl),a
  63+ 92E7 23           	inc hl
  64+ 92E8 7A               ld a,d
  65+ 92E9 AE               xor (hl)
  66+ 92EA 77           	ld (hl),a
  67+ 92EB 23           	inc hl
  68+ 92EC D1           	pop de
  69+ 92ED 7B               ld a,e
  70+ 92EE AE               xor (hl)
  71+ 92EF 77           	ld (hl),a
  72+ 92F0 2B           	dec hl
  73+ 92F1 2B           	dec hl
  74+ 92F2 24           	inc h
  75+ 92F3 7C               ld a,h
  76+ 92F4 E6 07            and 7
  77+ 92F6 20 0A            jr nz,2F
  78+ 92F8 7D               ld a,l
  79+ 92F9 C6 20            add a,$20
  80+ 92FB 6F               ld l,a
  81+ 92FC 38 04            jr c,2F
  82+ 92FE 7C               ld a,h
  83+ 92FF D6 08            sub 8
  84+ 9301 67               ld h,a
  85+ 9302 7C           2 ld a,h
  86+ 9303 FE 58            cp $58
  87+ 9305 28 25            jr z,4F
  88+ 9307 7A               ld a,d
  89+ 9308 AE               xor (hl)
  90+ 9309 77               ld (hl),a
  91+ 930A D1           	pop de
  92+ 930B 23           	inc hl
  93+ 930C 7B               ld a,e
  94+ 930D AE               xor (hl)
  95+ 930E 77           	ld (hl),a
  96+ 930F 23           	inc hl
  97+ 9310 7A               ld a,d
  98+ 9311 AE               xor (hl)
  99+ 9312 77           	ld (hl),a
 100+ 9313 2B           	dec hl
 101+ 9314 2B           	dec hl
 102+ 9315 24           	inc h
 103+ 9316 7C               ld a,h
 104+ 9317 E6 07            and 7
 105+ 9319 20 0A            jr nz,3F
 106+ 931B 7D               ld a,l
 107+ 931C C6 20            add a,$20
 108+ 931E 6F               ld l,a
 109+ 931F 38 04            jr c,3F
 110+ 9321 7C               ld a,h
 111+ 9322 D6 08            sub 8
 112+ 9324 67               ld h,a
 113+ 9325 7C           3 ld a,h
 114+ 9326 FE 58            cp $58
 115+ 9328 28 02            jr z,4F
 116+ 932A 10 B7            djnz 1B
 117+ 932C ED 7B 9F 89  4 ld sp,(Stack)
 118+ 9330 C9           	ret
 119+ 9331
 120+ 9331              ; ---------------------------------------------------
 121+ 9331
 122+ 9331 ED 73 9F 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9335 FD F9        	ld sp,iy
 124+ 9337
 125+ 9337              ; >>>
 126+ 9337
 127+ 9337 06 10            ld b,16
 128+ 9339 D1           1 pop de
 129+ 933A 7A           	ld a,d
 130+ 933B AE           	xor (hl)
 131+ 933C 77           	ld (hl),a
 132+ 933D 24           	inc h
 133+ 933E 7C               ld a,h
 134+ 933F E6 07            and 7
 135+ 9341 20 0C            jr nz,2F
 136+ 9343 7D               ld a,l
 137+ 9344 C6 20            add a,$20
 138+ 9346 6F               ld l,a
 139+ 9347 38 06            jr c,2F
 140+ 9349 7C               ld a,h
 141+ 934A D6 08            sub 8
 142+ 934C 67               ld h,a
 143+ 934D 18 00            jr 2F
 144+ 934F 7C           2 ld a,h
 145+ 9350 FE 58            cp $58
 146+ 9352 28 02            jr z,3F
 147+ 9354 10 E3            djnz 1B
 148+ 9356 ED 7B 9F 89  3 ld sp,(Stack)
 149+ 935A C9           	ret
 150+ 935B
 151+ 935B ED 73 9F 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 935F FD F9        	ld sp,iy
 153+ 9361
 154+ 9361              ; >>>
 155+ 9361
 156+ 9361 06 10            ld b,16
 157+ 9363 D1           1 pop de
 158+ 9364 7B           	ld a,e
 159+ 9365 AE           	xor (hl)
 160+ 9366 77           	ld (hl),a
 161+ 9367 24           	inc h
 162+ 9368 7C               ld a,h
 163+ 9369 E6 07            and 7
 164+ 936B 20 0C            jr nz,2F
 165+ 936D 7D               ld a,l
 166+ 936E C6 20            add a,$20
 167+ 9370 6F               ld l,a
 168+ 9371 38 06            jr c,2F
 169+ 9373 7C               ld a,h
 170+ 9374 D6 08            sub 8
 171+ 9376 67               ld h,a
 172+ 9377 18 00            jr 2F
 173+ 9379 7C           2 ld a,h
 174+ 937A FE 58            cp $58
 175+ 937C 28 02            jr z,3F
 176+ 937E 10 E3            djnz 1B
 177+ 9380 ED 7B 9F 89  3 ld sp,(Stack)
 178+ 9384 C9           	ret
 179+ 9385
 180+ 9385              ; ---------------------------------------------------
 181+ 9385
 182+ 9385 ED 73 9F 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9389 FD F9        	ld sp,iy
 184+ 938B 06 08            ld b,8
 185+ 938D D1           1 pop de
 186+ 938E 7A           	ld a,d
 187+ 938F AE           	xor (hl)
 188+ 9390 77           	ld (hl),a
 189+ 9391 23           	inc hl
 190+ 9392 D1           	pop de
 191+ 9393 7B           	ld a,e
 192+ 9394 AE           	xor (hl)
 193+ 9395 77           	ld (hl),a
 194+ 9396 2B           	dec hl
 195+ 9397 24            	inc h
 196+ 9398 7C               ld a,h
 197+ 9399 E6 07            and 7
 198+ 939B 20 0A            jr nz,2F
 199+ 939D 7D               ld a,l
 200+ 939E C6 20            add a,$20
 201+ 93A0 6F               ld l,a
 202+ 93A1 38 04            jr c,2F
 203+ 93A3 7C               ld a,h
 204+ 93A4 D6 08            sub 8
 205+ 93A6 67               ld h,a
 206+ 93A7 7C           2 ld a,h
 207+ 93A8 FE 58            cp $58
 208+ 93AA 28 20            jr z,4F
 209+ 93AC D1               pop de
 210+ 93AD 7B           	ld a,e
 211+ 93AE AE           	xor (hl)
 212+ 93AF 77           	ld (hl),a
 213+ 93B0 23           	inc hl
 214+ 93B1 7A           	ld a,d
 215+ 93B2 AE           	xor (hl)
 216+ 93B3 77           	ld (hl),a
 217+ 93B4 2B           	dec hl
 218+ 93B5 24           	inc h
 219+ 93B6 7C               ld a,h
 220+ 93B7 E6 07            and 7
 221+ 93B9 20 0A            jr nz,3F
 222+ 93BB 7D               ld a,l
 223+ 93BC C6 20            add a,$20
 224+ 93BE 6F               ld l,a
 225+ 93BF 38 04            jr c,3F
 226+ 93C1 7C               ld a,h
 227+ 93C2 D6 08            sub 8
 228+ 93C4 67               ld h,a
 229+ 93C5 7C           3 ld a,h
 230+ 93C6 FE 58            cp $58
 231+ 93C8 28 02            jr z,4F
 232+ 93CA 10 C1            djnz 1B
 233+ 93CC ED 7B 9F 89  4 ld sp,(Stack)
 234+ 93D0 C9           	ret
 235+ 93D1
 236+ 93D1 ED 73 9F 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 93D5 FD F9        	ld sp,iy
 238+ 93D7 06 08            ld b,8
 239+ 93D9 D1           1 pop de
 240+ 93DA D1           	pop de
 241+ 93DB 7B           	ld a,e
 242+ 93DC AE           	xor (hl)
 243+ 93DD 77           	ld (hl),a
 244+ 93DE 24            	inc h
 245+ 93DF 7C               ld a,h
 246+ 93E0 E6 07            and 7
 247+ 93E2 20 0A            jr nz,2F
 248+ 93E4 7D               ld a,l
 249+ 93E5 C6 20            add a,$20
 250+ 93E7 6F               ld l,a
 251+ 93E8 38 04            jr c,2F
 252+ 93EA 7C               ld a,h
 253+ 93EB D6 08            sub 8
 254+ 93ED 67               ld h,a
 255+ 93EE 7C           2 ld a,h
 256+ 93EF FE 58            cp $58
 257+ 93F1 28 1B            jr z,4F
 258+ 93F3 D1               pop de
 259+ 93F4 7A           	ld a,d
 260+ 93F5 AE           	xor (hl)
 261+ 93F6 77           	ld (hl),a
 262+ 93F7 24           	inc h
 263+ 93F8 7C               ld a,h
 264+ 93F9 E6 07            and 7
 265+ 93FB 20 0A            jr nz,3F
 266+ 93FD 7D               ld a,l
 267+ 93FE C6 20            add a,$20
 268+ 9400 6F               ld l,a
 269+ 9401 38 04            jr c,3F
 270+ 9403 7C               ld a,h
 271+ 9404 D6 08            sub 8
 272+ 9406 67               ld h,a
 273+ 9407 7C           3 ld a,h
 274+ 9408 FE 58            cp $58
 275+ 940A 28 02            jr z,4F
 276+ 940C 10 CB            djnz 1B
 277+ 940E ED 7B 9F 89  4 ld sp,(Stack)
 278+ 9412 C9           	ret
 279+ 9413
 280+ 9413 ED 73 9F 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9417 FD F9        	ld sp,iy
 282+ 9419 06 08            ld b,8
 283+ 941B D1           1 pop de
 284+ 941C 7B           	ld a,e
 285+ 941D AE           	xor (hl)
 286+ 941E 77           	ld (hl),a
 287+ 941F 23           	inc hl
 288+ 9420 7A           	ld a,d
 289+ 9421 AE           	xor (hl)
 290+ 9422 77           	ld (hl),a
 291+ 9423 2B           	dec hl
 292+ 9424 24             	inc h
 293+ 9425 7C               ld a,h
 294+ 9426 E6 07            and 7
 295+ 9428 20 0A            jr nz,2F
 296+ 942A 7D               ld a,l
 297+ 942B C6 20            add a,$20
 298+ 942D 6F               ld l,a
 299+ 942E 38 04            jr c,2F
 300+ 9430 7C               ld a,h
 301+ 9431 D6 08            sub 8
 302+ 9433 67               ld h,a
 303+ 9434 7C           2 ld a,h
 304+ 9435 FE 58            cp $58
 305+ 9437 28 21            jr z,4F
 306+ 9439 D1               pop de
 307+ 943A 7A           	ld a,d
 308+ 943B AE           	xor (hl)
 309+ 943C 77           	ld (hl),a
 310+ 943D 23           	inc hl
 311+ 943E D1               pop de
 312+ 943F 7B           	ld a,e
 313+ 9440 AE           	xor (hl)
 314+ 9441 77           	ld (hl),a
 315+ 9442 2B           	dec hl
 316+ 9443 24           	inc h
 317+ 9444 7C               ld a,h
 318+ 9445 E6 07            and 7
 319+ 9447 20 0A            jr nz,3F
 320+ 9449 7D               ld a,l
 321+ 944A C6 20            add a,$20
 322+ 944C 6F               ld l,a
 323+ 944D 38 04            jr c,3F
 324+ 944F 7C               ld a,h
 325+ 9450 D6 08            sub 8
 326+ 9452 67               ld h,a
 327+ 9453 7C           3 ld a,h
 328+ 9454 FE 58            cp $58
 329+ 9456 28 02            jr z,4F
 330+ 9458 10 C1            djnz 1B
 331+ 945A ED 7B 9F 89  4 ld sp,(Stack)
 332+ 945E C9           	ret
 333+ 945F
 334+ 945F ED 73 9F 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9463 FD F9        	ld sp,iy
 336+ 9465 06 08            ld b,8
 337+ 9467 D1           1 pop de
 338+ 9468 7B           	ld a,e
 339+ 9469 AE           	xor (hl)
 340+ 946A 77           	ld (hl),a
 341+ 946B 24            	inc h
 342+ 946C 7C               ld a,h
 343+ 946D E6 07            and 7
 344+ 946F 20 0A            jr nz,2F
 345+ 9471 7D               ld a,l
 346+ 9472 C6 20            add a,$20
 347+ 9474 6F               ld l,a
 348+ 9475 38 04            jr c,2F
 349+ 9477 7C               ld a,h
 350+ 9478 D6 08            sub 8
 351+ 947A 67               ld h,a
 352+ 947B 7C           2 ld a,h
 353+ 947C FE 58            cp $58
 354+ 947E 28 1C            jr z,4F
 355+ 9480 D1               pop de
 356+ 9481 7A           	ld a,d
 357+ 9482 AE           	xor (hl)
 358+ 9483 77           	ld (hl),a
 359+ 9484 24           	inc h
 360+ 9485 7C               ld a,h
 361+ 9486 E6 07            and 7
 362+ 9488 20 0A            jr nz,3F
 363+ 948A 7D               ld a,l
 364+ 948B C6 20            add a,$20
 365+ 948D 6F               ld l,a
 366+ 948E 38 04            jr c,3F
 367+ 9490 7C               ld a,h
 368+ 9491 D6 08            sub 8
 369+ 9493 67               ld h,a
 370+ 9494 7C           3 ld a,h
 371+ 9495 FE 58            cp $58
 372+ 9497 28 03            jr z,4F
 373+ 9499 D1               pop de
 374+ 949A 10 CB            djnz 1B
 375+ 949C ED 7B 9F 89  4 ld sp,(Stack)
 376+ 94A0 C9           	ret
 377+ 94A1
 378+ 94A1              ; ---------------------------------------------------
 379+ 94A1              ;
 380+ 94A1              ;   27/02/23
 381+ 94A1              ;
 382+ 94A1              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 94A1              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 94A1              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 94A1
 386+ 94A1 ED 73 9F 89  Pinta_Disparo ld (Stack),sp
 387+ 94A5 FD F9            ld sp,iy
 388+ 94A7 06 03            ld b,3
 389+ 94A9 D1           1 pop de
 390+ 94AA 7B               ld a,e
 391+ 94AB AE               xor (hl)
 392+ 94AC 77               ld (hl),a
 393+ 94AD 23               inc hl
 394+ 94AE 7A               ld a,d
 395+ 94AF AE               xor (hl)
 396+ 94B0 77               ld (hl),a
 397+ 94B1 2B               dec hl
 398+ 94B2
 399+ 94B2 24               inc h
 400+ 94B3 7C               ld a,h
 401+ 94B4 E6 07            and 7
 402+ 94B6 20 0A            jr nz,2F
 403+ 94B8 7D               ld a,l
 404+ 94B9 C6 20            add a,$20
 405+ 94BB 6F               ld l,a
 406+ 94BC 38 04            jr c,2F
 407+ 94BE 7C               ld a,h
 408+ 94BF D6 08            sub 8
 409+ 94C1 67               ld h,a
 410+ 94C2 7C           2 ld a,h
 411+ 94C3 FE 58            cp $58
 412+ 94C5 28 02            jr z,3F
 413+ 94C7
 414+ 94C7 10 E0            djnz 1B
 415+ 94C9 ED 7B 9F 89  3 ld sp,(Stack)
 416+ 94CD C9               ret
 417+ 94CE
# file closed: Rutinas_de_impresion_sprites.asm
1713  94CE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94CE
   2+ 94CE              ; ******************************************************************************************************************************************************************************************
   3+ 94CE              ;
   4+ 94CE              ;   20/05/23
   5+ 94CE              ;
   6+ 94CE              ;	Recompone_posicion_inicio
   7+ 94CE              ;
   8+ 94CE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 94CE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 94CE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 94CE              ;	_ a una u otra rutina.
  12+ 94CE
  13+ 94CE              Recompone_posicion_inicio
  14+ 94CE
  15+ 94CE 2A 5D 89     	ld hl,(Posicion_inicio)
  16+ 94D1 7D           	ld a,l
  17+ 94D2 E6 1F        	and $1f
  18+ 94D4 28 16        	jr z,1F
  19+ 94D6
  20+ 94D6 FE 1F        	cp $1f
  21+ 94D8 28 0D        	jr z,3F
  22+ 94DA
  23+ 94DA 21 72 89     	ld hl,Ctrl_2
  24+ 94DD CB C6        	set 0,(hl)
  25+ 94DF 2A 4F 89     	ld hl,(Puntero_objeto)
  26+ 94E2 22 8F 89     	ld (Repone_puntero_objeto),hl
  27+ 94E5 18 08        	jr 2F
  28+ 94E7
  29+ 94E7 CD 95 96     3 call Mov_left
  30+ 94EA 18 03        	jr 2F
  31+ 94EC
  32+ 94EC CD 72 95     1 call Mov_right
  33+ 94EF 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 94F2 22 4F 89     	ld (Puntero_objeto),hl
  35+ 94F5 C9           	ret
  36+ 94F6
  37+ 94F6              ; ******************************************************************************************************************************************************************************************
  38+ 94F6              ;
  39+ 94F6              ;   27/05/23
  40+ 94F6              ;
  41+ 94F6              ;	Mov_down
  42+ 94F6              ;
  43+ 94F6              ; 	Mueve el Sprite X px hacia abajo.
  44+ 94F6              ;
  45+ 94F6              ;
  46+ 94F6              Mov_down
  47+ 94F6
  48+ 94F6 CD 60 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 94F9              ;																	; _ repone (Puntero_objeto).
  50+ 94F9 21 6D 89     	ld hl,Ctrl_0
  51+ 94FC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 94FE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 94FE              ; 																	; _ en el caso de que no lo haya.
  54+ 94FE 3A 77 89     	ld a,(Vel_down)
  55+ 9501 47           	ld b,a
  56+ 9502 2A 4D 89         ld hl,(Posicion_actual)
  57+ 9505 CD A5 9E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9508 E6 02        	and 2
  59+ 950A 28 17        	jr z,1F
  60+ 950C
  61+ 950C              ; Nos encontramos en el último tercio de pantalla.
  62+ 950C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 950C
  64+ 950C 7C           	ld a,h
  65+ 950D FE 57        	cp $57
  66+ 950F 20 12        	jr nz,1F
  67+ 9511
  68+ 9511 7D           	ld a,l
  69+ 9512 C6 20        	add $20
  70+ 9514 30 0D        	jr nc,1F
  71+ 9516
  72+ 9516              ; ------------------------------
  73+ 9516              ;
  74+ 9516              ;	12/01/24
  75+ 9516
  76+ 9516              ;	call Reaparece_arriba
  77+ 9516 CD 22 98     	call Reinicio
  78+ 9519
  79+ 9519              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9519
  81+ 9519 3A AD 89     	ld a,(Ctrl_3)
  82+ 951C CB CF        	set 1,a
  83+ 951E 32 AD 89     	ld (Ctrl_3),a
  84+ 9521
  85+ 9521 18 08        	jr 3F
  86+ 9523              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9523              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9523              ; ------------------------------
  89+ 9523
  90+ 9523 CD BB 91     1 call NextScan
  91+ 9526 22 4D 89     	ld (Posicion_actual),hl
  92+ 9529 10 DA            djnz 2B
  93+ 952B CD C3 9E     3 call Genera_coordenadas
  94+ 952E C9           	ret
  95+ 952F
  96+ 952F              ; ******************************************************************************************************************************************************************************************
  97+ 952F              ;
  98+ 952F              ;   27/05/23
  99+ 952F              ;
 100+ 952F              ;	Mov_up
 101+ 952F              ;
 102+ 952F              ; 	Mueve el Sprite hacia arriba.
 103+ 952F              ;
 104+ 952F              ;
 105+ 952F              Mov_up
 106+ 952F
 107+ 952F CD 60 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9532              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9532 21 6D 89     	ld hl,Ctrl_0
 110+ 9535 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9537              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9537              ; 																		; _ en el caso de que no lo haya.
 113+ 9537 3A 76 89     	ld a,(Vel_up)
 114+ 953A 47           	ld b,a
 115+ 953B 2A 4D 89     	ld hl,(Posicion_actual)
 116+ 953E CD A5 9E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9541 A7           	and a
 118+ 9542 20 10        	jr nz,1F
 119+ 9544
 120+ 9544              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9544              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9544
 123+ 9544 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9545 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9547 20 0B            jr nz,1F
 126+ 9549 7D               ld a,l
 127+ 954A D6 20            sub $20
 128+ 954C 30 06            jr nc,1F
 129+ 954E 25               dec h
 130+ 954F
 131+ 954F              ; -----------------------------
 132+ 954F CD 03 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9552              ;	call Reinicio
 134+ 9552              ; -----------------------------
 135+ 9552
 136+ 9552 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9554 CD CA 91     1 call PreviousScan
 138+ 9557 22 4D 89     	ld (Posicion_actual),hl
 139+ 955A 10 E2            djnz 3B
 140+ 955C CD C3 9E     2 call Genera_coordenadas
 141+ 955F C9           	ret
 142+ 9560
 143+ 9560              ; -----------------------------
 144+ 9560              ;
 145+ 9560              ;	27/5/23
 146+ 9560              ;
 147+ 9560              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9560              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9560              ;
 150+ 9560              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9560              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9560              ;
 153+ 9560              ;	Modifica: A y (Puntero_objeto).
 154+ 9560
 155+ 9560 3A 72 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9563 CB 47        	bit 0,a
 157+ 9565 C8           	ret z
 158+ 9566 CB 87        	res 0,a
 159+ 9568 32 72 89     	ld (Ctrl_2),a
 160+ 956B 2A 8F 89     	ld hl,(Repone_puntero_objeto)
 161+ 956E 22 4F 89     	ld (Puntero_objeto),hl
 162+ 9571 C9           	ret
 163+ 9572
 164+ 9572              ; ******************************************************************************************************************************************************************************************
 165+ 9572              ;
 166+ 9572              ;	19/10/22
 167+ 9572              ;
 168+ 9572              ;	Mov_right.
 169+ 9572              ;
 170+ 9572              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9572              ;
 172+ 9572
 173+ 9572 3A 6D 89     Mov_right ld a,(Ctrl_0)
 174+ 9575 CB 77        	bit 6,a
 175+ 9577 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9579
 177+ 9579 CD B1 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 957C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 957D
 180+ 957D 21 6D 89     	ld hl,Ctrl_0
 181+ 9580 CB E6        	set 4,(hl)
 182+ 9582 18 52        	jr 8F
 183+ 9584
 184+ 9584 21 6D 89     10 ld hl,Ctrl_0
 185+ 9587 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9589              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9589              ; 																	; _ en el caso de que no lo haya.
 188+ 9589 3A 51 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 958C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 958E 20 46        	jr nz,8F
 191+ 9590
 192+ 9590 3A 53 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9593 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9594 28 40        	jr z,8F
 195+ 9596
 196+ 9596              ; ---------- ---------- ----------
 197+ 9596              ;
 198+ 9596              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9596
 200+ 9596 3A 75 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9599 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 959B 28 11        	jr z,1F
 203+ 959D 38 06        	jr c,6F
 204+ 959F FE 04        	cp 4
 205+ 95A1 28 14        	jr z,7F
 206+ 95A3 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95A5
 208+ 95A5              ; ---------- ---------- ----------
 209+ 95A5              ;
 210+ 95A5              ; Perfiles de velocidad
 211+ 95A5              ;
 212+ 95A5
 213+ 95A5 3A 53 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95A8 FE FE        	cp $fe
 215+ 95AA 20 2A        	jr nz,8F
 216+ 95AC 18 10        	jr 3F
 217+ 95AE 3A 53 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95B1 FE FD        	cp $fd
 219+ 95B3 20 21        	jr nz,8F
 220+ 95B5 18 07        	jr 3F
 221+ 95B7 3A 53 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95BA FE FB        	cp $fb
 223+ 95BC 20 18        	jr nz,8F
 224+ 95BE
 225+ 95BE              ; ---------- ---------- ----------
 226+ 95BE
 227+ 95BE              3
 228+ 95BE CD F1 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95C1              ;	call Reinicio
 230+ 95C1
 231+ 95C1              ; ---------- ---------- ----------
 232+ 95C1              ;
 233+ 95C1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95C1
 235+ 95C1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 95C3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 95C4 CD DD 95     	call DESPLZ_DER
 238+ 95C7 C1           	pop bc
 239+ 95C8 10 F9        	djnz 5B
 240+ 95CA 2A 4D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 95CD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 95CE 22 4D 89     	ld (Posicion_actual),hl
 243+ 95D1 CD C3 9E     	call Genera_coordenadas
 244+ 95D4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 95D6
 246+ 95D6              ; ---------- ---------- ----------
 247+ 95D6
 248+ 95D6 2A 4D 89     8 ld hl,(Posicion_actual)
 249+ 95D9 CD DD 95     	call DESPLZ_DER
 250+ 95DC C9           2 ret
 251+ 95DD
 252+ 95DD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 95DD              ;
 254+ 95DD              ;	22/9/22
 255+ 95DD              ;
 256+ 95DD
 257+ 95DD CD EC 95     DESPLZ_DER call Desplaza_derecha
 258+ 95E0 CD 38 96         call modifica_parametros_1er_DESPLZ_2
 259+ 95E3 CD 61 96         call Ciclo_completo
 260+ 95E6 21 6D 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 95E9 CB FE        	set 7,(hl)
 262+ 95EB C9           	ret
 263+ 95EC
 264+ 95EC              ; ******************************************************************************************************************************************************************************************
 265+ 95EC              ;	15/02/23
 266+ 95EC              ;
 267+ 95EC
 268+ 95EC 3A 75 89     Desplaza_derecha ld a,(Vel_right)
 269+ 95EF 47           	ld b,a
 270+ 95F0 2A 59 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 95F3 23           1 inc hl
 272+ 95F4 23           	inc hl
 273+ 95F5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 95F7 22 59 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 95FA CD 9D 8B     	call Extrae_address
 276+ 95FD 22 4F 89     	ld (Puntero_objeto),hl
 277+ 9600
 278+ 9600              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9600
 280+ 9600              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9600              ; Cuántos movimientos hemos hecho ??
 282+ 9600              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9600
 284+ 9600 2A 55 89     7 ld hl,(Indice_Sprite_der)
 285+ 9603 EB           	ex de,hl
 286+ 9604 A7           	and a
 287+ 9605 ED 52        	sbc hl,de
 288+ 9607 CB 3D        	srl l
 289+ 9609 3E 08        6 ld a,8
 290+ 960B 95           	sub l
 291+ 960C 30 1E        	jr nc,3F
 292+ 960E
 293+ 960E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 960E              ; B="0".
 295+ 960E
 296+ 960E 04           4 inc b
 297+ 960F 3C           	inc a
 298+ 9610 20 FC        	jr nz,4B
 299+ 9612 78           	ld a,b
 300+ 9613 08           	ex af,af
 301+ 9614 2A 55 89     	ld hl,(Indice_Sprite_der)
 302+ 9617 23           5 inc hl
 303+ 9618 23           	inc hl
 304+ 9619 10 FC        	djnz 5B
 305+ 961B 22 59 89     	ld (Puntero_DESPLZ_der),hl
 306+ 961E CD 9D 8B     	call Extrae_address
 307+ 9621 22 4F 89     	ld (Puntero_objeto),hl
 308+ 9624
 309+ 9624              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9624              ; _(Posicion_actual).
 311+ 9624
 312+ 9624 21 4D 89     	ld hl,Posicion_actual
 313+ 9627 34           	inc (hl)
 314+ 9628 08               ex af,af
 315+ 9629 6F           	ld l,a
 316+ 962A 18 DD        	jr 6B
 317+ 962C
 318+ 962C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 962C
 320+ 962C 47           3 ld b,a
 321+ 962D 2A 57 89     	ld hl,(Indice_Sprite_izq)
 322+ 9630 23           2 inc hl
 323+ 9631 23           	inc hl
 324+ 9632 10 FC        	djnz 2B
 325+ 9634 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9637 C9           8 ret
 327+ 9638
 328+ 9638              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9638              ;
 330+ 9638              ;	24/7/22
 331+ 9638              ;
 332+ 9638              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9638              ;
 334+ 9638              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9638              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9638              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9638
 338+ 9638 3A 53 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 963B A7           	and a
 340+ 963C 20 1F        	jr nz,1F
 341+ 963E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9640 32 53 89         ld (CTRL_DESPLZ),a
 343+ 9643
 344+ 9643 21 4C 89     	ld hl,Columns
 345+ 9646 34           	inc (hl)
 346+ 9647 3A 5F 89     	ld a,(Cuad_objeto)
 347+ 964A E6 01        	and 1
 348+ 964C 28 0F        	jr z,1F
 349+ 964E 2A 4D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9651 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9652 22 4D 89     	ld (Posicion_actual),hl
 352+ 9655 CD C3 9E     	call Genera_coordenadas
 353+ 9658 CD BD 97     	call Inc_CTRL_DESPLZ
 354+ 965B 18 03        	jr 2F
 355+ 965D CD BD 97     1 call Inc_CTRL_DESPLZ
 356+ 9660 C9           2 ret
 357+ 9661
 358+ 9661              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9661              ;
 360+ 9661              ;	24/7/22
 361+ 9661              ;
 362+ 9661              ;	Ciclo_completo.
 363+ 9661              ;
 364+ 9661              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9661              ;
 366+ 9661              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9661              ; 	Decrementamos (Columns).
 368+ 9661              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9661              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9661
 371+ 9661
 372+ 9661 3A 53 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9664 FE FF        	cp $ff
 374+ 9666 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9668 E6 F0        	and $f0
 376+ 966A 20 28        	jr nz,3F
 377+ 966C
 378+ 966C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 966C
 380+ 966C 3A 53 89     	ld a,(CTRL_DESPLZ)
 381+ 966F 47           	ld b,a
 382+ 9670 3E F8        	ld a,$f8
 383+ 9672 80           	add b
 384+ 9673 32 53 89     	ld (CTRL_DESPLZ),a
 385+ 9676 18 1C        	jr 3F
 386+ 9678 21 4C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 967B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 967C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 967D 32 53 89     	ld (CTRL_DESPLZ),a
 390+ 9680 3A 5F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9683 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9685 20 0A        	jr nz,2F
 393+ 9687 2A 4D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 968A 23           	inc hl
 395+ 968B 22 4D 89     	ld (Posicion_actual),hl
 396+ 968E CD C3 9E     	call Genera_coordenadas
 397+ 9691
 398+ 9691              ; Inicia el puntero de Sprite.
 399+ 9691
 400+ 9691 CD B2 8B     2 call Inicia_puntero_objeto_der
 401+ 9694 C9           3 ret
 402+ 9695
 403+ 9695              ; ******************************************************************************************************************************************************************************************
 404+ 9695              ;
 405+ 9695              ;	15/02/23
 406+ 9695              ;
 407+ 9695              ;	Mov_left.
 408+ 9695              ;
 409+ 9695              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9695              ;
 411+ 9695              Mov_left
 412+ 9695
 413+ 9695 21 6D 89     	ld hl,Ctrl_0
 414+ 9698 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 969A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 969A              ; 																	; _ en el caso de que no lo haya.
 417+ 969A 3A 6D 89     	ld a,(Ctrl_0)
 418+ 969D CB 77        	bit 6,a
 419+ 969F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96A1
 421+ 96A1 CD B7 97     	call Stop_Amadeus_left
 422+ 96A4 C8           	ret z
 423+ 96A5 20 4A        	jr nz,8F
 424+ 96A7
 425+ 96A7 3A 51 89     11 ld a,(Coordenada_X)
 426+ 96AA A7           	and a
 427+ 96AB 20 44        	jr nz,8F
 428+ 96AD
 429+ 96AD 3A 53 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96B0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96B1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96B3
 433+ 96B3              ; ---------- ---------- ----------
 434+ 96B3
 435+ 96B3 3A 74 89     	ld a,(Vel_left)
 436+ 96B6 FE 02        	cp 2
 437+ 96B8 28 0F        	jr z,1F
 438+ 96BA 38 04        	jr c,6F
 439+ 96BC FE 04        	cp 4
 440+ 96BE 28 12        	jr z,7F
 441+ 96C0
 442+ 96C0              ; ---------- ---------- ----------
 443+ 96C0
 444+ 96C0 3A 53 89     6 ld a,(CTRL_DESPLZ)
 445+ 96C3 FE F8        	cp $f8
 446+ 96C5 20 2A        	jr nz,8F
 447+ 96C7 18 10        	jr 4F
 448+ 96C9 3A 53 89     1 ld a,(CTRL_DESPLZ)
 449+ 96CC FE F9        	cp $f9
 450+ 96CE 20 21        	jr nz,8F
 451+ 96D0 18 07        	jr 4F
 452+ 96D2 3A 53 89     7 ld a,(CTRL_DESPLZ)
 453+ 96D5 FE FB        	cp $fb
 454+ 96D7 20 18        	jr nz,8F
 455+ 96D9
 456+ 96D9              ; ---------- ---------- ----------
 457+ 96D9
 458+ 96D9              4
 459+ 96D9 CD DF 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 96DC              ;	call Reinicio
 461+ 96DC
 462+ 96DC              ; ---------- ---------- ----------
 463+ 96DC
 464+ 96DC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 96DE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 96DF
 467+ 96DF              ;	ld hl,(Indice_Sprite_izq)
 468+ 96DF              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 96DF
 470+ 96DF CD F8 96     	call DESPLZ_IZQ
 471+ 96E2 C1           	pop bc
 472+ 96E3 10 F9        	djnz 5B
 473+ 96E5 2A 4D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 96E8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 96E9 22 4D 89     	ld (Posicion_actual),hl
 476+ 96EC CD C3 9E     	call Genera_coordenadas
 477+ 96EF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 96F1
 479+ 96F1              ; ---------- ---------- ----------
 480+ 96F1
 481+ 96F1              ; Movemos, no hay recolocación.
 482+ 96F1
 483+ 96F1 2A 4D 89     8 ld hl,(Posicion_actual)
 484+ 96F4 CD F8 96     	call DESPLZ_IZQ
 485+ 96F7 C9           2 ret
 486+ 96F8
 487+ 96F8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 96F8              ;
 489+ 96F8              ;	22/9/22
 490+ 96F8
 491+ 96F8              DESPLZ_IZQ
 492+ 96F8
 493+ 96F8 CD 07 97     	call Desplaza_izquierda
 494+ 96FB CD 53 97         call modifica_parametros_1er_DESPLZ
 495+ 96FE CD 7B 97     	call Ciclo_completo_2
 496+ 9701 21 6D 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9704 CB BE        	res 7,(hl)
 498+ 9706 C9           	ret
 499+ 9707
 500+ 9707              Desplaza_izquierda
 501+ 9707
 502+ 9707 3A 74 89     	ld a,(Vel_left)
 503+ 970A 47           	ld b,a
 504+ 970B 2A 5B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 970E 23           1 inc hl
 506+ 970F 23           	inc hl
 507+ 9710 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9712 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9715 CD 9D 8B     	call Extrae_address
 510+ 9718 22 4F 89     	ld (Puntero_objeto),hl
 511+ 971B
 512+ 971B              ; Modifica (Puntero_DESPLZ_der).
 513+ 971B
 514+ 971B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 971B              ; Cuántos movimientos hemos hecho ??
 516+ 971B              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 971B
 518+ 971B 2A 57 89     7 ld hl,(Indice_Sprite_izq)
 519+ 971E EB           	ex de,hl
 520+ 971F A7           	and a
 521+ 9720 ED 52        	sbc hl,de
 522+ 9722 CB 3D        	srl l
 523+ 9724 3E 08        6 ld a,8
 524+ 9726 95           	sub l
 525+ 9727 30 1E        	jr nc,3F
 526+ 9729
 527+ 9729              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9729              ; B="0".
 529+ 9729
 530+ 9729 04           4 inc b
 531+ 972A 3C           	inc a
 532+ 972B 20 FC        	jr nz,4B
 533+ 972D 78           	ld a,b
 534+ 972E 08           	ex af,af
 535+ 972F 2A 57 89     	ld hl,(Indice_Sprite_izq)
 536+ 9732 23           5 inc hl
 537+ 9733 23           	inc hl
 538+ 9734 10 FC        	djnz 5B
 539+ 9736 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9739 CD 9D 8B     	call Extrae_address
 541+ 973C 22 4F 89     	ld (Puntero_objeto),hl
 542+ 973F
 543+ 973F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 973F              ; _(Posicion_actual).
 545+ 973F
 546+ 973F 21 4D 89     	ld hl,Posicion_actual
 547+ 9742 35           	dec (hl)
 548+ 9743 08           	ex af,af
 549+ 9744 6F           	ld l,a
 550+ 9745 18 DD        	jr 6B
 551+ 9747
 552+ 9747              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9747
 554+ 9747 47           3 ld b,a
 555+ 9748 2A 55 89     	ld hl,(Indice_Sprite_der)
 556+ 974B 23           2 inc hl
 557+ 974C 23           	inc hl
 558+ 974D 10 FC        	djnz 2B
 559+ 974F 22 59 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9752 C9           8 ret
 561+ 9753
 562+ 9753              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9753              ;
 564+ 9753              ;	modifica_parametros_1er_DESPLZ
 565+ 9753              ;
 566+ 9753              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9753              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9753              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9753
 570+ 9753 3A 53 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9756 A7           	and a
 572+ 9757 20 1E        	jr nz,1F
 573+ 9759 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 975A 32 53 89         ld (CTRL_DESPLZ),a
 575+ 975D 21 4C 89     	ld hl,Columns
 576+ 9760 34           	inc (hl)
 577+ 9761 3A 5F 89     	ld a,(Cuad_objeto)
 578+ 9764 E6 01        	and 1
 579+ 9766 20 0F        	jr nz,1F
 580+ 9768 2A 4D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 976B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 976C 22 4D 89     	ld (Posicion_actual),hl
 583+ 976F CD C3 9E     	call Genera_coordenadas
 584+ 9772 CD CE 97     	call Dec_CTRL_DESPLZ
 585+ 9775 18 03        	jr 2F
 586+ 9777 CD CE 97     1 call Dec_CTRL_DESPLZ
 587+ 977A C9           2 ret
 588+ 977B
 589+ 977B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 977B
 591+ 977B 3A 53 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 977E FE F7        	cp $f7
 593+ 9780 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9782 30 2C        	jr nc,3F
 595+ 9784
 596+ 9784              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9784
 598+ 9784 06 00        	ld b,0
 599+ 9786 04           4 inc b
 600+ 9787 3C           	inc a
 601+ 9788 FE F7        	cp $f7
 602+ 978A 20 FA        	jr nz,4B
 603+ 978C 3E FF        	ld a,$ff
 604+ 978E 90           	sub b
 605+ 978F 32 53 89     	ld (CTRL_DESPLZ),a
 606+ 9792 18 1C        	jr 3F
 607+ 9794
 608+ 9794              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9794
 610+ 9794 21 4C 89     1 ld hl,Columns
 611+ 9797 35           	dec (hl)
 612+ 9798 AF           	xor a
 613+ 9799 32 53 89     	ld (CTRL_DESPLZ),a
 614+ 979C 3A 5F 89     	ld a,(Cuad_objeto)
 615+ 979F E6 01        	and 1
 616+ 97A1 28 0A        	jr z,2F
 617+ 97A3 2A 4D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97A6 2B           	dec hl
 619+ 97A7 22 4D 89     	ld (Posicion_actual),hl
 620+ 97AA CD C3 9E     	call Genera_coordenadas
 621+ 97AD
 622+ 97AD              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97AD
 624+ 97AD CD C5 8B     2 call Inicia_puntero_objeto_izq
 625+ 97B0 C9           3 ret
 626+ 97B1
 627+ 97B1              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97B1              ;
 629+ 97B1              ;	19/10/22
 630+ 97B1              ;
 631+ 97B1              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97B1              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97B1
 634+ 97B1 3A 51 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97B4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97B6 C9           	ret
 637+ 97B7
 638+ 97B7              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97B7              ;
 640+ 97B7              ;	19/10/22
 641+ 97B7              ;
 642+ 97B7              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97B7              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97B7
 645+ 97B7 3A 51 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97BA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97BC C9           	ret
 648+ 97BD
 649+ 97BD              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 97BD              ;
 651+ 97BD              ;	24/7/22
 652+ 97BD              ;
 653+ 97BD              ;	Inc_CTRL_DESPLZ
 654+ 97BD              ;
 655+ 97BD              ;
 656+ 97BD              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 97BD
 658+ 97BD 21 53 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 97C0 3A 75 89     	ld a,(Vel_right)
 660+ 97C3 A7           	and a
 661+ 97C4 28 06        	jr z,1F
 662+ 97C6 47           	ld b,a
 663+ 97C7 34           3 inc (hl)
 664+ 97C8 10 FD        	djnz 3B
 665+ 97CA 18 01        	jr 2F
 666+ 97CC 34           1 inc (hl)
 667+ 97CD C9           2 ret
 668+ 97CE
 669+ 97CE              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 97CE              ;
 671+ 97CE              ;	5/2/23
 672+ 97CE              ;
 673+ 97CE              ;	Dec_CTRL_DESPLZ
 674+ 97CE              ;
 675+ 97CE              ;
 676+ 97CE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 97CE
 678+ 97CE 21 53 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 97D1 3A 74 89     	ld a,(Vel_left)
 680+ 97D4 A7           	and a
 681+ 97D5 28 06        	jr z,1F
 682+ 97D7 47           	ld b,a
 683+ 97D8 35           3 dec (hl)
 684+ 97D9 10 FD        	djnz 3B
 685+ 97DB 18 01        	jr 2F
 686+ 97DD 35           1 dec (hl)
 687+ 97DE C9           2 ret
 688+ 97DF
 689+ 97DF              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 97DF
 691+ 97DF 2A 4D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 97E2 01 1F 00     	ld bc,31
 693+ 97E5 A7           	and a
 694+ 97E6 ED 4A        	adc hl,bc
 695+ 97E8 22 4D 89     	ld (Posicion_actual),hl
 696+ 97EB 21 6D 89     	ld hl,Ctrl_0														; $xxx1
 697+ 97EE CB C6        	set 0,(hl)
 698+ 97F0 C9           	ret
 699+ 97F1
 700+ 97F1              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 97F1
 702+ 97F1 2A 4D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 97F4 01 1F 00     	ld bc,31
 704+ 97F7 A7           	and a
 705+ 97F8 ED 42        	sbc hl,bc
 706+ 97FA 22 4D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 97FD 21 6D 89     	ld hl,Ctrl_0
 708+ 9800 CB CE        	set 1,(hl)
 709+ 9802 C9           	ret
 710+ 9803
 711+ 9803              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9803
 713+ 9803 24           Reaparece_abajo inc h
 714+ 9804 01 E0 17     	ld bc,$17e0
 715+ 9807 A7           	and a
 716+ 9808 ED 4A        	adc hl,bc
 717+ 980A 22 4D 89     	ld (Posicion_actual),hl
 718+ 980D 21 6D 89     	ld hl,Ctrl_0
 719+ 9810 CB D6        	set 2,(hl)
 720+ 9812 C9           	ret
 721+ 9813
 722+ 9813              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9813
 724+ 9813 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9816 A7           	and a
 726+ 9817 ED 42        	sbc hl,bc
 727+ 9819 22 4D 89     	ld (Posicion_actual),hl
 728+ 981C 21 6D 89     	ld hl,Ctrl_0
 729+ 981F CB DE        	set 3,(hl)
 730+ 9821 C9           	ret
 731+ 9822
 732+ 9822              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9822              ;
 734+ 9822              ;	15/07/23
 735+ 9822
 736+ 9822              Reinicio
 737+ 9822
 738+ 9822              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9822
 740+ 9822 AF           	xor a
 741+ 9823 21 86 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9826 CD 44 98     	call Limpia_contenido_hl
 743+ 9829
 744+ 9829 21 4D 89     	ld hl,Posicion_actual
 745+ 982C CD 44 98     	call Limpia_contenido_hl
 746+ 982F
 747+ 982F CD 14 8D     	call Inicializa_Puntero_indice_mov
 748+ 9832 CD 10 99     	call Inicia_Puntero_mov
 749+ 9835
 750+ 9835 21 88 89     	ld hl,Incrementa_puntero
 751+ 9838 06 05        	ld b,5
 752+ 983A 77           1 ld (hl),a
 753+ 983B 23           	inc hl
 754+ 983C 10 FC        	djnz 1B
 755+ 983E
 756+ 983E 21 72 89     	ld hl,Ctrl_2
 757+ 9841 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9843
 759+ 9843 C9           	ret
 760+ 9844
 761+ 9844 77           Limpia_contenido_hl	ld (hl),a
 762+ 9845 23           	inc hl
 763+ 9846 77           	ld (hl),a
 764+ 9847 C9           	ret
 765+ 9848
 766+ 9848
# file closed: Direcciones.asm
1714  9848              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9848              ; ----- ----- ----- ----- -----
   2+ 9848              ;
   3+ 9848              ;   28/12/23
   4+ 9848
   5+ 9848              Movimiento
   6+ 9848
   7+ 9848              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9848
   9+ 9848 3A 72 89         ld a,(Ctrl_2)
  10+ 984B CB 57            bit 2,a
  11+ 984D 20 1B            jr nz, Desplazamiento_iniciado
  12+ 984F
  13+ 984F 2A 84 89         ld hl,(Puntero_mov)
  14+ 9852 7E               ld a,(hl)
  15+ 9853
  16+ 9853              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9853
  18+ 9853              Inicia_desplazamiento.
  19+ 9853
  20+ 9853              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9853
  22+ 9853 CD 46 99         call Ajusta_velocidad_desplazamiento
  23+ 9856
  24+ 9856              ; Iniciamos (Repetimos_mov).
  25+ 9856
  26+ 9856 7E               ld a,(hl)
  27+ 9857 E6 0F            and $0f
  28+ 9859 32 8A 89         ld (Repetimos_desplazamiento),a
  29+ 985C 32 8B 89         ld (Repetimos_desplazamiento_backup),a
  30+ 985F
  31+ 985F              ; Iniciamos (Cola_de_desplazamiento).
  32+ 985F
  33+ 985F 23               inc hl
  34+ 9860 7E               ld a,(hl)
  35+ 9861 32 8D 89         ld (Cola_de_desplazamiento),a
  36+ 9864 2B               dec hl
  37+ 9865
  38+ 9865 21 72 89         ld hl,Ctrl_2
  39+ 9868 CB D6            set 2,(hl)
  40+ 986A
  41+ 986A              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 986A              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 986A
  44+ 986A              Desplazamiento_iniciado
  45+ 986A
  46+ 986A CD 1A 99         call Aplica_desplazamiento
  47+ 986D
  48+ 986D              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 986D
  50+ 986D 3A AD 89         ld a,(Ctrl_3)
  51+ 9870 CB 4F            bit 1,a
  52+ 9872 C0               ret nz
  53+ 9873
  54+ 9873 21 8A 89     3 ld hl,Repetimos_desplazamiento
  55+ 9876 35               dec (hl)
  56+ 9877 C0               ret nz
  57+ 9878
  58+ 9878              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9878              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9878              ; Analiza (Cola_de_desplazamiento).
  61+ 9878
  62+ 9878 3A 8D 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 987B A7               and a
  64+ 987C CC 6F 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 987F 28 30            jr z,Reinicia_el_movimiento
  66+ 9881
  67+ 9881 FE FF            cp $ff
  68+ 9883 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9885
  70+ 9885 FE FE            cp $fe
  71+ 9887 CC F4 98         call z,Fijamos_bucle
  72+ 988A 28 25            jr z,Reinicia_el_movimiento
  73+ 988C
  74+ 988C FE FD            cp $fd
  75+ 988E 20 11            jr nz,1F
  76+ 9890
  77+ 9890              ; ---
  78+ 9890              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9890
  80+ 9890 3A 72 89         ld a,(Ctrl_2)
  81+ 9893 CB 5F            bit 3,a
  82+ 9895 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9897
  84+ 9897              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9897
  86+ 9897 21 72 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 989A CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 989C
  89+ 989C CD 05 99         call Inicia_Repetimos_movimiento
  90+ 989F 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98A1              ; ---
  92+ 98A1
  93+ 98A1 FE 01        1 cp 1
  94+ 98A3 CA DE 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98A6
  96+ 98A6 3D               dec a
  97+ 98A7 32 8D 89         ld (Cola_de_desplazamiento),a
  98+ 98AA
  99+ 98AA 3A 8B 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98AD 32 8A 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98B0              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98B0 C9               ret
 103+ 98B1
 104+ 98B1              Reinicia_el_movimiento
 105+ 98B1
 106+ 98B1 3A 72 89         ld a,(Ctrl_2)
 107+ 98B4 CB 5F            bit 3,a
 108+ 98B6 28 1B            jr z,2F
 109+ 98B8
 110+ 98B8              ; (Cola_de_desplazamiento)="254".
 111+ 98B8
 112+ 98B8 21 8C 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 98BB 35               dec (hl)
 114+ 98BC 20 15            jr nz,2F
 115+ 98BE
 116+ 98BE              ; Fin de las repeticiones del último movimiento.
 117+ 98BE
 118+ 98BE 21 72 89         ld hl,Ctrl_2
 119+ 98C1 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 98C3
 121+ 98C3 2A 84 89         ld hl,(Puntero_mov)
 122+ 98C6 23               inc hl
 123+ 98C7 23               inc hl
 124+ 98C8 23               inc hl
 125+ 98C9 22 84 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 98CC              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 98CC 7E               ld a,(hl)
 128+ 98CD 32 8D 89         ld (Cola_de_desplazamiento),a
 129+ 98D0
 130+ 98D0 C3 78 98         jp Cola
 131+ 98D3
 132+ 98D3 CD 10 99     2 call Inicia_Puntero_mov
 133+ 98D6
 134+ 98D6 21 72 89         ld hl,Ctrl_2
 135+ 98D9 CB 96            res 2,(hl)
 136+ 98DB
 137+ 98DB C3 48 98         jp Movimiento
 138+ 98DE
 139+ 98DE              Siguiente_desplazamiento
 140+ 98DE
 141+ 98DE              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 98DE              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 98DE
 144+ 98DE 21 72 89         ld hl,Ctrl_2
 145+ 98E1 CB 96            res 2,(hl)
 146+ 98E3
 147+ 98E3 2A 84 89         ld hl,(Puntero_mov)
 148+ 98E6 23               inc hl
 149+ 98E7 23               inc hl
 150+ 98E8 22 84 89         ld (Puntero_mov),hl
 151+ 98EB
 152+ 98EB 7E               ld a,(hl)
 153+ 98EC A7               and a
 154+ 98ED CC 6F 99         call z,Incrementa_Puntero_indice_mov
 155+ 98F0 CA B1 98         jp z,Reinicia_el_movimiento
 156+ 98F3
 157+ 98F3 C9               ret
 158+ 98F4
 159+ 98F4              ; Subrutinas -----------------------------------------
 160+ 98F4              ; ---------- --------- --------- ---------- ----------
 161+ 98F4              ;
 162+ 98F4              ;   24/07/23
 163+ 98F4              ;
 164+ 98F4              ;   Fijamos_bucle
 165+ 98F4              ;
 166+ 98F4              ;
 167+ 98F4
 168+ 98F4              Fijamos_bucle
 169+ 98F4
 170+ 98F4 3A 88 89         ld a,(Incrementa_puntero)
 171+ 98F7 3C               inc a
 172+ 98F8 32 89 89         ld (Incrementa_puntero_backup),a
 173+ 98FB
 174+ 98FB CD 6F 99         call Incrementa_Puntero_indice_mov
 175+ 98FE 2A 82 89         ld hl,(Puntero_indice_mov)
 176+ 9901 22 86 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9904 C9               ret
 178+ 9905
 179+ 9905              ; ---------- --------- --------- ---------- ----------
 180+ 9905              ;
 181+ 9905              ;   07/7/23
 182+ 9905              ;
 183+ 9905              ;   Inicia_Repetimos_movimiento
 184+ 9905              ;
 185+ 9905              ;
 186+ 9905
 187+ 9905              Inicia_Repetimos_movimiento
 188+ 9905
 189+ 9905              ; Iniciamos (Repetimos_movimiento).
 190+ 9905
 191+ 9905 DD 2A 84 89      ld ix,(Puntero_mov)
 192+ 9909 DD 7E 02         ld a,(ix+2)
 193+ 990C 32 8C 89         ld (Repetimos_movimiento),a
 194+ 990F
 195+ 990F C9               ret
 196+ 9910
 197+ 9910              ; ---------- --------- --------- ---------- ----------
 198+ 9910              ;
 199+ 9910              ;   26/6/23
 200+ 9910              ;
 201+ 9910              ;   Inicia_Puntero_mov
 202+ 9910              ;
 203+ 9910              ;
 204+ 9910
 205+ 9910 2A 82 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9913 CD 9D 8B         call Extrae_address
 207+ 9916 22 84 89         ld (Puntero_mov),hl
 208+ 9919 C9               ret
 209+ 991A
 210+ 991A              ; ---------- --------- --------- ---------- ----------
 211+ 991A              ;
 212+ 991A              ;   27/06/23
 213+ 991A              ;
 214+ 991A              ;   Aplica_movimiento.
 215+ 991A
 216+ 991A              Aplica_desplazamiento
 217+ 991A
 218+ 991A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 991A
 220+ 991A 2A 84 89         ld hl, (Puntero_mov)
 221+ 991D
 222+ 991D 7E               ld a,(hl)
 223+ 991E E6 F0            and $f0
 224+ 9920 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9921
 226+ 9921 CB 7E            bit 7,(hl)
 227+ 9923 28 03            jr z,1F
 228+ 9925 CD 2F 95         call Mov_up
 229+ 9928 2A 84 89     1 ld hl, (Puntero_mov)
 230+ 992B CB 76            bit 6,(hl)
 231+ 992D 28 03            jr z,2F
 232+ 992F CD F6 94         call Mov_down
 233+ 9932
 234+ 9932              ; Se ha aplicado reinicio ???
 235+ 9932              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9932
 237+ 9932              ;    ld a,(Ctrl_3)
 238+ 9932              ;    bit 1,a
 239+ 9932              ;    ret nz
 240+ 9932
 241+ 9932 2A 84 89     2 ld hl, (Puntero_mov)
 242+ 9935 CB 6E            bit 5,(hl)
 243+ 9937 28 03            jr z,3F
 244+ 9939 CD 95 96         call Mov_left
 245+ 993C 2A 84 89     3 ld hl, (Puntero_mov)
 246+ 993F CB 66            bit 4,(hl)
 247+ 9941 C8               ret z
 248+ 9942 CD 72 95         call Mov_right
 249+ 9945 C9               ret
 250+ 9946
 251+ 9946              ; ---------- --------- --------- ---------- ----------
 252+ 9946              ;
 253+ 9946              ;   26/06/23
 254+ 9946              ;
 255+ 9946              ;   Ajusta_velocidad_desplazamiento.
 256+ 9946
 257+ 9946              Ajusta_velocidad_desplazamiento
 258+ 9946
 259+ 9946              ; 1er byte de la cadena de movimiento.
 260+ 9946              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9946
 262+ 9946 CD 64 99         call Extrae_nibble_alto
 263+ 9949
 264+ 9949 32 76 89         ld (Vel_up),a
 265+ 994C 79               ld a,c
 266+ 994D E6 0F            and $0f
 267+ 994F 32 77 89         ld (Vel_down),a
 268+ 9952
 269+ 9952              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9952              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9952
 272+ 9952 23               inc hl
 273+ 9953 CD 64 99         call Extrae_nibble_alto
 274+ 9956
 275+ 9956 32 74 89         ld (Vel_left),a
 276+ 9959 79               ld a,c
 277+ 995A E6 0F            and $0f
 278+ 995C 32 75 89         ld (Vel_right),a
 279+ 995F
 280+ 995F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 995F
 282+ 995F 23               inc hl
 283+ 9960 22 84 89         ld (Puntero_mov),hl
 284+ 9963 C9               ret
 285+ 9964
 286+ 9964 06 04        Extrae_nibble_alto ld b,4
 287+ 9966 7E               ld a,(hl)
 288+ 9967 4F               ld c,a
 289+ 9968 E6 F0            and $f0
 290+ 996A CB 3F        1 srl a
 291+ 996C 10 FC            djnz 1B
 292+ 996E C9               ret
 293+ 996F
 294+ 996F              ; ---------- --------- --------- ---------- ----------
 295+ 996F              ;
 296+ 996F              ;   5/7/23
 297+ 996F              ;
 298+ 996F              ;   Incrementa_Puntero_indice_mov
 299+ 996F
 300+ 996F              Incrementa_Puntero_indice_mov
 301+ 996F
 302+ 996F 21 88 89         ld hl,Incrementa_puntero
 303+ 9972 34               inc (hl)
 304+ 9973
 305+ 9973 2A 82 89         ld hl,(Puntero_indice_mov)
 306+ 9976 01 02 00         ld bc,2
 307+ 9979 A7               and a
 308+ 997A 09               add hl,bc
 309+ 997B 22 82 89         ld (Puntero_indice_mov),hl
 310+ 997E
 311+ 997E 7E               ld a,(hl)
 312+ 997F A7               and a
 313+ 9980
 314+ 9980              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9980
 316+ 9980              ;    jr z,$
 317+ 9980
 318+ 9980              ;! Reinicia el Patrón de movimiento.
 319+ 9980
 320+ 9980 CC 85 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 9983
 322+ 9983 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9984
 324+ 9984 C9               ret
 325+ 9985
 326+ 9985              ; ---------- --------- --------- ---------- ----------
 327+ 9985              ;
 328+ 9985              ;   15/01/24
 329+ 9985              ;
 330+ 9985              ;   Inicializa_Puntero_indice_mov
 331+ 9985
 332+ 9985              Inicializa_Puntero_indice_mov_2
 333+ 9985
 334+ 9985              ; Existe etiqueta de bucle principal???
 335+ 9985
 336+ 9985 2A 86 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9988 24               inc h
 338+ 9989 25               dec h
 339+ 998A 28 05            jr z,2F
 340+ 998C
 341+ 998C 22 82 89         ld (Puntero_indice_mov),hl
 342+ 998F 18 14            jr 3F
 343+ 9991
 344+ 9991              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9991
 346+ 9991 3A 88 89     2 ld a,(Incrementa_puntero)
 347+ 9994 47               ld b,a
 348+ 9995
 349+ 9995 2A 82 89         ld hl,(Puntero_indice_mov)
 350+ 9998 2B           1 dec hl
 351+ 9999 2B               dec hl
 352+ 999A 10 FC            djnz 1B
 353+ 999C 22 82 89         ld (Puntero_indice_mov),hl
 354+ 999F
 355+ 999F AF               xor a
 356+ 99A0 32 88 89         ld (Incrementa_puntero),a
 357+ 99A3 18 06            jr 4F
 358+ 99A5
 359+ 99A5 3A 89 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99A8 32 88 89         ld (Incrementa_puntero),a
 361+ 99AB C9           4 ret
 362+ 99AC
 363+ 99AC              ; ----------------------------------------------------------------------
 364+ 99AC              ;
 365+ 99AC              ;   30/01/24
 366+ 99AC              ;
 367+ 99AC              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99AC
 369+ 99AC 3A 4A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99AF CD 3E 8E         call Calcula_salto_en_BC
 371+ 99B2 21 78 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99B5 A7               and a
 373+ 99B6 ED 4A            adc hl,bc
 374+ 99B8 C9               ret
 375+ 99B9
 376+ 99B9              ; ----------------------------------------------------------------------
 377+ 99B9              ;
 378+ 99B9              ;   30/01/24
 379+ 99B9              ;
 380+ 99B9              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 99B9              ;
 382+ 99B9              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 99B9
 384+ 99B9 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 99BA 23               inc hl
 386+ 99BB 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 99BC 69               ld l,c
 388+ 99BD 60               ld h,b
 389+ 99BE 22 6B 89         ld (Contador_de_mov_masticados),hl
 390+ 99C1 C9               ret
 391+ 99C2
# file closed: Movimiento.asm
1715  99C2              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 99C2              ; ******************************************************************************************************************************************************************************************
   2+ 99C2              ;
   3+ 99C2              ;   21/07/23
   4+ 99C2              ;
   5+ 99C2              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 99C2              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 99C2              ;
   8+ 99C2              ;
   9+ 99C2              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 99C2              ;
  11+ 99C2              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 99C2              ;               _ hacen las entidades hacia abajo.
  13+ 99C2              ;
  14+ 99C2              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 99C2              ;
  16+ 99C2              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 99C2              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 99C2              ;
  19+ 99C2              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 99C2              ;           _ la bala.
  21+ 99C2              ;
  22+ 99C2              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 99C2              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 99C2              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 99C2              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 99C2              ;           _ en el momento de generarse la bala)).
  27+ 99C2
  28+ 99C2              Genera_disparo
  29+ 99C2
  30+ 99C2              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 99C2              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 99C2              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 99C2              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 99C2              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 99C2              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 99C2              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 99C2
  38+ 99C2              ; Exclusiones:
  39+ 99C2
  40+ 99C2 3A 77 89         ld a,(Vel_down)
  41+ 99C5 47               ld b,a
  42+ 99C6 3A BF 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 99C9 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 99CA D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 99CB 3A 6E 89         ld a,(Columnas)
  46+ 99CE 47               ld b,a
  47+ 99CF 3A 4C 89         ld a,(Columns)
  48+ 99D2 B8               cp b
  49+ 99D3 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 99D4
  51+ 99D4              ; ----- ----- -----
  52+ 99D4
  53+ 99D4 3A 6D 89         ld a,(Ctrl_0)
  54+ 99D7 CB 77            bit 6,a
  55+ 99D9 20 06            jr nz,14F
  56+ 99DB
  57+ 99DB 3A 52 89         ld a,(Coordenada_y)
  58+ 99DE FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 99E0 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 99E1
  61+ 99E1 21 31 81     14 ld hl,Indice_disparo
  62+ 99E4 3A 53 89         ld a,(CTRL_DESPLZ)
  63+ 99E7 4F               ld c,a
  64+ 99E8 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 99EA              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 99EA              ;                                            ""        ""       "f9", B="1"
  67+ 99EA              ;                                            ""        ""       "fb", B="2"
  68+ 99EA              ;                                            ""        ""       "fb", B="3"
  69+ 99EA A7               and a
  70+ 99EB 28 10            jr z,1F
  71+ 99ED E6 01            and 1
  72+ 99EF C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 99F0
  74+ 99F0 79               ld a,c
  75+ 99F1 16 F9            ld d,$f9
  76+ 99F3 23           2 inc hl
  77+ 99F4 23               inc hl
  78+ 99F5 04               inc b
  79+ 99F6 BA               cp d
  80+ 99F7 28 04            jr z,1F
  81+ 99F9 14               inc d
  82+ 99FA 14               inc d
  83+ 99FB 18 F6            jr 2B
  84+ 99FD
  85+ 99FD CD 9D 8B     1 call Extrae_address
  86+ 9A00 E5               push hl
  87+ 9A01 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9A03 DD 21 A1 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9A07
  90+ 9A07              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9A07              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9A07
  93+ 9A07 3A 6D 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9A0A CB 77            bit 6,a
  95+ 9A0C 20 04            jr nz,19F
  96+ 9A0E
  97+ 9A0E AF               xor a
  98+ 9A0F 32 C8 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9A12
 100+ 9A12 3A 5F 89     19 ld a,(Cuad_objeto)
 101+ 9A15 FE 02            cp 2
 102+ 9A17 38 66            jr c,3F
 103+ 9A19 28 64            jr z,3F
 104+ 9A1B
 105+ 9A1B              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9A1B
 107+ 9A1B E6 01            and 1
 108+ 9A1D 28 30            jr z,4F
 109+ 9A1F
 110+ 9A1F              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A1F              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A1F              ;
 113+ 9A1F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A1F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A1F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A1F
 117+ 9A1F 2A 4D 89     	ld hl,(Posicion_actual)
 118+ 9A22
 119+ 9A22              ;   Amadeus o entidad ???.
 120+ 9A22
 121+ 9A22 3A 6D 89         ld a,(Ctrl_0)
 122+ 9A25 CB 77            bit 6,a
 123+ 9A27 28 0A            jr z,8F
 124+ 9A29
 125+ 9A29              ; 	Dispara Amadeus.
 126+ 9A29
 127+ 9A29 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A2B CD CA 91         call PreviousScan
 129+ 9A2E CD CA 91         call PreviousScan
 130+ 9A31
 131+ 9A31              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9A31              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9A31              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9A31              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9A31
 136+ 9A31 18 11            jr 10F
 137+ 9A33
 138+ 9A33              ; 	Dispara Entidad.
 139+ 9A33
 140+ 9A33 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9A36              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9A36
 143+ 9A36              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9A36              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9A36
 146+ 9A36 C5               push bc
 147+ 9A37 06 10            ld b,16
 148+ 9A39 CD BB 91     9 call NextScan
 149+ 9A3C 10 FB            djnz 9B
 150+ 9A3E C1               pop bc
 151+ 9A3F CD A9 9A         call Ajusta_disparo_parte_izquierda
 152+ 9A42 18 06            jr 17F
 153+ 9A44
 154+ 9A44              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9A44              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9A44              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9A44              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9A44
 159+ 9A44 CD A9 9A     10 call Ajusta_disparo_parte_izquierda
 160+ 9A47 CD 1E 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9A4A              ;                                                      ; _al generar el disparo.
 162+ 9A4A
 163+ 9A4A              ; 	LLegados a este punto tendremos:
 164+ 9A4A              ;
 165+ 9A4A              ;       Puntero_objeto_disparo en IY.
 166+ 9A4A              ;       Rutinas_de_impresion en IX.
 167+ 9A4A              ;       Puntero_de_impresion en HL.
 168+ 9A4A              ;       Impacto/Dirección en BC.
 169+ 9A4A
 170+ 9A4A CD B1 9A     17 call Almacena_disparo
 171+ 9A4D 18 52            jr 6F                                             ; RET.
 172+ 9A4F
 173+ 9A4F              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9A4F              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9A4F              ;
 176+ 9A4F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9A4F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9A4F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9A4F
 180+ 9A4F 2A 4D 89     4 ld hl,(Posicion_actual)
 181+ 9A52
 182+ 9A52              ;   Amadeus o entidad ???.
 183+ 9A52
 184+ 9A52 3A 6D 89         ld a,(Ctrl_0)
 185+ 9A55 CB 77            bit 6,a
 186+ 9A57 28 0A            jr z,11F
 187+ 9A59
 188+ 9A59              ; 	Dispara Amadeus.
 189+ 9A59
 190+ 9A59 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9A5B CD CA 91         call PreviousScan
 192+ 9A5E CD CA 91         call PreviousScan
 193+ 9A61
 194+ 9A61              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9A61              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9A61              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9A61              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9A61
 199+ 9A61 18 11            jr 13F
 200+ 9A63
 201+ 9A63              ; 	Dispara Entidad.
 202+ 9A63
 203+ 9A63 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9A66              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9A66
 206+ 9A66              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9A66              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9A66
 209+ 9A66 C5               push bc
 210+ 9A67 06 10            ld b,16
 211+ 9A69 CD BB 91     12 call NextScan
 212+ 9A6C 10 FB            djnz 12B
 213+ 9A6E C1               pop bc
 214+ 9A6F
 215+ 9A6F CD A2 9A         call Ajusta_disparo_parte_derecha
 216+ 9A72 18 06            jr 18F
 217+ 9A74
 218+ 9A74              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9A74              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9A74              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9A74              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9A74
 223+ 9A74 CD A2 9A     13 call Ajusta_disparo_parte_derecha
 224+ 9A77 CD 1E 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9A7A              ;                                                       ; _al generar el disparo.
 226+ 9A7A
 227+ 9A7A              ; LLegados a este punto tendremos:
 228+ 9A7A              ;
 229+ 9A7A              ;       Puntero_objeto_disparo en IY.
 230+ 9A7A              ;       Rutinas_de_impresion en IX.
 231+ 9A7A              ;       Puntero_de_impresion en HL.
 232+ 9A7A              ;       Impacto/Dirección en BC.
 233+ 9A7A
 234+ 9A7A CD B1 9A     18 call Almacena_disparo
 235+ 9A7D 18 22            jr 6F                                               ; RET.
 236+ 9A7F
 237+ 9A7F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9A7F
 239+ 9A7F 28 11        3 jr z,5F
 240+ 9A81
 241+ 9A81              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9A81              ;
 243+ 9A81              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9A81              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9A81              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9A81              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9A81
 248+ 9A81              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9A81              ;	   ""        ""       "f9", B="1"
 250+ 9A81              ;	   ""        ""       "fb", B="2"
 251+ 9A81              ; 	   ""        ""       "fb", B="3"
 252+ 9A81
 253+ 9A81 2A 4D 89     	ld hl,(Posicion_actual)
 254+ 9A84 CD BB 91     	call NextScan
 255+ 9A87
 256+ 9A87              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9A87              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9A87              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9A87              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9A87
 261+ 9A87 CD A9 9A         call Ajusta_disparo_parte_izquierda
 262+ 9A8A
 263+ 9A8A              ; 	No se produce impacto. B="$80"
 264+ 9A8A              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9A8A
 266+ 9A8A 01 80 80         ld bc,$8080
 267+ 9A8D
 268+ 9A8D              ; 	LLegados a este punto tendremos:
 269+ 9A8D              ;
 270+ 9A8D              ;       Puntero_objeto_disparo en IY.
 271+ 9A8D              ;       Rutinas_de_impresion en IX.
 272+ 9A8D              ;       Puntero_de_impresion en HL.
 273+ 9A8D              ;       Impacto/Dirección en BC.
 274+ 9A8D
 275+ 9A8D CD B1 9A         call Almacena_disparo
 276+ 9A90 18 0F            jr 6F                                           ; RET.
 277+ 9A92
 278+ 9A92              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9A92              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9A92              ;
 281+ 9A92              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9A92              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9A92              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9A92              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9A92
 286+ 9A92 2A 4D 89     5 ld hl,(Posicion_actual)
 287+ 9A95 CD BB 91     	call NextScan
 288+ 9A98
 289+ 9A98              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9A98              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9A98              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9A98              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9A98
 294+ 9A98 CD A2 9A         call Ajusta_disparo_parte_derecha
 295+ 9A9B
 296+ 9A9B              ; 	No se produce impacto. B="$80"
 297+ 9A9B              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9A9B
 299+ 9A9B 01 80 80     15 ld bc,$8080
 300+ 9A9E
 301+ 9A9E              ; 	LLegados a este punto tendremos:
 302+ 9A9E              ;
 303+ 9A9E              ;       Puntero_objeto_disparo en IY.
 304+ 9A9E              ;       Rutinas_de_impresion en IX.
 305+ 9A9E              ;       Puntero_de_impresion en HL.
 306+ 9A9E              ;       Impacto/Dirección en BC.
 307+ 9A9E
 308+ 9A9E CD B1 9A         call Almacena_disparo
 309+ 9AA1
 310+ 9AA1 C9           6 ret
 311+ 9AA2
 312+ 9AA2              ; ----------------------------------------------------------------
 313+ 9AA2              ;
 314+ 9AA2              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9AA2              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9AA2              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9AA2
 318+ 9AA2 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9AA3 FE 02            cp 2
 320+ 9AA5 38 01            jr c,1F
 321+ 9AA7 23               inc hl
 322+ 9AA8 C9           1 ret
 323+ 9AA9
 324+ 9AA9 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9AAA FE 01        	cp 1
 326+ 9AAC 20 01        	jr nz,1F
 327+ 9AAE 2B           	dec hl
 328+ 9AAF 2B           1 dec hl
 329+ 9AB0 C9               ret
 330+ 9AB1
 331+ 9AB1              ; ----------------------------------------------------------------
 332+ 9AB1              ;
 333+ 9AB1              ;   25/02/23
 334+ 9AB1              ;
 335+ 9AB1              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9AB1              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9AB1              ;
 338+ 9AB1              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9AB1              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9AB1
 341+ 9AB1              Almacena_disparo
 342+ 9AB1
 343+ 9AB1 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9AB2 F1               pop af
 345+ 9AB3 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9AB4
 347+ 9AB4 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9AB5 E6 01            and 1
 349+ 9AB7 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9AB9              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9AB9              ; 	Dispara AMADEUS.
 352+ 9AB9
 353+ 9AB9              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9AB9              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9AB9              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9AB9              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9AB9
 358+ 9AB9 C5               push bc
 359+ 9ABA 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9ABD 2A B2 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9AC0 A7               and a
 362+ 9AC1 ED 42            sbc hl,bc
 363+ 9AC3 CC 22 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9AC6 C1               pop bc
 365+ 9AC7 28 54            jr z,4F
 366+ 9AC9
 367+ 9AC9 2A B2 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9ACC 23               inc hl
 369+ 9ACD 23               inc hl
 370+ 9ACE 22 B2 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9AD1              ;                                                   ; _ Disparo_(+1).
 372+ 9AD1 18 18            jr 2F
 373+ 9AD3
 374+ 9AD3              ; Dispara una entidad.
 375+ 9AD3
 376+ 9AD3 C5           1 push bc
 377+ 9AD4 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9AD7 2A B0 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9ADA A7               and a
 380+ 9ADB ED 42            sbc hl,bc
 381+ 9ADD CC 1B 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9AE0 C1               pop bc
 383+ 9AE1 28 3A            jr z,4F
 384+ 9AE3
 385+ 9AE3 2A B0 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9AE6 23               inc hl
 387+ 9AE7 23               inc hl
 388+ 9AE8 22 B0 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9AEB              ;                                                   ; _ Disparo_(+1).
 390+ 9AEB CD 9D 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9AEE              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9AEE              ;
 393+ 9AEE              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9AEE              ;                                                     Rutinas_de_impresion en IX.
 395+ 9AEE              ;                                                     Puntero_de_impresion en HL.
 396+ 9AEE              ;                                                     Impacto/Dirección en BC.
 397+ 9AEE
 398+ 9AEE 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9AEF 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9AF0 23               inc hl                                          ; _ al siguiente.
 401+ 9AF1 A7               and a
 402+ 9AF2 20 C0            jr nz,3B
 403+ 9AF4
 404+ 9AF4 08               ex af,af
 405+ 9AF5 ED 73 9F 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9AF9 F9               ld sp,hl
 407+ 9AFA
 408+ 9AFA DD E5            push ix                                         ; Rutina de impresión.
 409+ 9AFC F5               push af                                         ; Puntero de impresión.
 410+ 9AFD FD E5            push iy                                         ; Puntero objeto.
 411+ 9AFF C5               push bc                                         ; Control.
 412+ 9B00
 413+ 9B00 ED 7B 9F 89      ld sp,(Stack)
 414+ 9B04
 415+ 9B04              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9B04
 417+ 9B04 21 8E 89     	ld hl,Ctrl_1
 418+ 9B07 CB C6        	set 0,(hl)
 419+ 9B09
 420+ 9B09 DD E5        	push ix
 421+ 9B0B E1               pop hl
 422+ 9B0C F5               push af
 423+ 9B0D DD E1            pop ix
 424+ 9B0F
 425+ 9B0F CD BF 80     	call Guarda_foto_registros
 426+ 9B12
 427+ 9B12 21 8E 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9B15 CB 86        	res 0,(hl)
 429+ 9B17
 430+ 9B17              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9B17              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9B17
 433+ 9B17 CD 22 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9B1A CD 1B 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9B1D
 436+ 9B1D C9           4 ret
 437+ 9B1E
 438+ 9B1E              ; ----------------------------------------------------------------
 439+ 9B1E              ;
 440+ 9B1E              ;   4/3/23
 441+ 9B1E              ;
 442+ 9B1E              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B1E              ;   _ al generarse el disparo.
 444+ 9B1E              ;
 445+ 9B1E              ;       "$80" ..... No se produce colisión.
 446+ 9B1E              ;       "$81" ..... Se produce colisión.
 447+ 9B1E              ;
 448+ 9B1E              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B1E              ;         _ que forman el disparo.
 450+ 9B1E
 451+ 9B1E
 452+ 9B1E              Comprueba_Colision
 453+ 9B1E
 454+ 9B1E              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B1E
 456+ 9B1E FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B20 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B21
 459+ 9B21 CD 57 9B         call Modifica_H_Velocidad_disparo
 460+ 9B24
 461+ 9B24 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B25 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B27 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B29
 465+ 9B29 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B2B CD 47 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9B2E
 468+ 9B2E 7B               ld a,e
 469+ 9B2F E6 01            and 1
 470+ 9B31 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9B33              ;                                                  ; _ para activar IMPACTO.
 472+ 9B33 E1               pop hl
 473+ 9B34 E5               push hl
 474+ 9B35 CD BB 91         call NextScan
 475+ 9B38
 476+ 9B38 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9B39 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9B3B 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9B3D              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9B3D 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9B3F CD 47 9B         call Bucle_2
 482+ 9B42
 483+ 9B42 43           1 ld b,e
 484+ 9B43 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9B44 FD E1            pop iy
 486+ 9B46 C9               ret
 487+ 9B47
 488+ 9B47              ; ---------- ----------
 489+ 9B47
 490+ 9B47 06 02        Bucle_2 ld b,2
 491+ 9B49 FD 7E 00     2 ld a,(iy)
 492+ 9B4C A6               and (hl)
 493+ 9B4D 28 02            jr z,1F
 494+ 9B4F 1E 81            ld e,$81
 495+ 9B51 23           1 inc hl
 496+ 9B52 FD 23            inc iy
 497+ 9B54 10 F3            djnz 2B
 498+ 9B56 C9               ret
 499+ 9B57
 500+ 9B57              ; ---------- ----------
 501+ 9B57              ;
 502+ 9B57              ;   21/7/23
 503+ 9B57
 504+ 9B57              Modifica_H_Velocidad_disparo
 505+ 9B57
 506+ 9B57 3A BF 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9B5A FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9B5C D0               ret nc                                         ; _ incrementamos H.
 509+ 9B5D 24               inc h
 510+ 9B5E
 511+ 9B5E C9               ret
 512+ 9B5F
 513+ 9B5F              ; -------------------------------------------------------------------------------------------------------------
 514+ 9B5F              ;
 515+ 9B5F              ;   04/12/23
 516+ 9B5F              ;
 517+ 9B5F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9B5F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9B5F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9B5F              ;
 521+ 9B5F              ;   MODIFICA: HL,DE,B y A.
 522+ 9B5F
 523+ 9B5F              Genera_coordenadas_X
 524+ 9B5F
 525+ 9B5F              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9B5F              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9B5F
 528+ 9B5F              ;   Limpiamos almacenes.
 529+ 9B5F
 530+ 9B5F CD 90 9B         call Limpia_Coordenadas_X
 531+ 9B62
 532+ 9B62              ;   Almacenamos coordenadas X.
 533+ 9B62
 534+ 9B62              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9B62
 536+ 9B62 2A 67 89         ld hl,(Puntero_de_impresion)
 537+ 9B65 11 BC 89         ld de,Coordenadas_X_Entidad
 538+ 9B68 06 02            ld b,2
 539+ 9B6A
 540+ 9B6A 3A 53 89         ld a,(CTRL_DESPLZ)
 541+ 9B6D A7               and a
 542+ 9B6E 28 01            jr z,1F
 543+ 9B70 04               inc b
 544+ 9B71
 545+ 9B71 CD 87 9B     1 call Guarda_coordenadas_X
 546+ 9B74
 547+ 9B74              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9B74
 549+ 9B74 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9B77 11 B9 89         ld de,Coordenadas_X_Amadeus
 551+ 9B7A 06 02            ld b,2
 552+ 9B7C
 553+ 9B7C 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9B7F A7               and a
 555+ 9B80 28 01            jr z,2F
 556+ 9B82 04               inc b
 557+ 9B83
 558+ 9B83 CD 87 9B     2 call Guarda_coordenadas_X
 559+ 9B86
 560+ 9B86              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9B86
 562+ 9B86 C9               ret
 563+ 9B87
 564+ 9B87              ; ----- ----- ----- ----- -----
 565+ 9B87
 566+ 9B87 7D           Guarda_coordenadas_X  ld a,l
 567+ 9B88 E6 1F            and $1f
 568+ 9B8A 12           1 ld (de),a
 569+ 9B8B 3C               inc a
 570+ 9B8C 13               inc de
 571+ 9B8D 10 FB            djnz 1B
 572+ 9B8F C9               ret
 573+ 9B90
 574+ 9B90 AF           Limpia_Coordenadas_X xor a
 575+ 9B91 06 06            ld b,6
 576+ 9B93 21 B9 89         ld hl,Coordenadas_X_Amadeus
 577+ 9B96 77           1 ld (hl),a
 578+ 9B97 23               inc hl
 579+ 9B98 10 FC            djnz 1B
 580+ 9B9A C9               ret
 581+ 9B9B
 582+ 9B9B              ; ----- ----- ----- ----- -----
 583+ 9B9B
 584+ 9B9B              Compara_coordenadas_X
 585+ 9B9B
 586+ 9B9B 06 03            ld b,3
 587+ 9B9D 11 BE 89         ld de,Coordenadas_X_Entidad+2
 588+ 9BA0
 589+ 9BA0 1A               ld a,(de)
 590+ 9BA1 A7               and a
 591+ 9BA2 20 01            jr nz,2F
 592+ 9BA4 05               dec b
 593+ 9BA5
 594+ 9BA5 1B           2 dec de
 595+ 9BA6 1B               dec de
 596+ 9BA7 21 B9 89         ld hl,Coordenadas_X_Amadeus
 597+ 9BAA
 598+ 9BAA D5           1 push de
 599+ 9BAB E5               push hl
 600+ 9BAC C5               push bc
 601+ 9BAD
 602+ 9BAD CD B7 9B         call Comparando
 603+ 9BB0
 604+ 9BB0 C1               pop bc
 605+ 9BB1 E1               pop hl
 606+ 9BB2 D1               pop de
 607+ 9BB3
 608+ 9BB3 13               inc de
 609+ 9BB4 10 F4            djnz 1B
 610+ 9BB6
 611+ 9BB6 C9               ret
 612+ 9BB7
 613+ 9BB7              ; ----- ----- ----- ----- -----
 614+ 9BB7              ;
 615+ 9BB7              ;   4/12/23
 616+ 9BB7              ;
 617+ 9BB7              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9BB7
 619+ 9BB7 06 03        Comparando ld b,3
 620+ 9BB9 1A               ld a,(de)
 621+ 9BBA 4E           2 ld c,(hl)
 622+ 9BBB B9               cp c
 623+ 9BBC 28 04            jr z,1F
 624+ 9BBE 23               inc hl
 625+ 9BBF 10 F9            djnz 2B
 626+ 9BC1 C9               ret
 627+ 9BC2
 628+ 9BC2 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9BC4 32 60 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9BC7 21 B4 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9BCA CB D6            set 2,(hl)
 632+ 9BCC C9               ret
 633+ 9BCD
 634+ 9BCD              ; -----------------------------------------------------------------------
 635+ 9BCD              ;
 636+ 9BCD              ;   7/12/23
 637+ 9BCD              ;
 638+ 9BCD
 639+ 9BCD              Detecta_colision_nave_entidad
 640+ 9BCD
 641+ 9BCD              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9BCD
 643+ 9BCD FD 2A 4F 89      ld iy,(Puntero_objeto)
 644+ 9BD1 2A 67 89         ld hl,(Puntero_de_impresion)
 645+ 9BD4
 646+ 9BD4 E5               push hl
 647+ 9BD5
 648+ 9BD5              ; ----- ----- -----
 649+ 9BD5 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9BD7 06 0A            ld b,10
 651+ 9BD9 CD 09 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9BDC 7B               ld a,e
 653+ 9BDD FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9BDF 38 0E            jr c,3F
 655+ 9BE1
 656+ 9BE1              ; LLegados a este punto:
 657+ 9BE1              ;
 658+ 9BE1              ;   HAY COLISIÓN !!!!!.
 659+ 9BE1              ;
 660+ 9BE1              ;   .db (Impacto) de Amadeus a "1".
 661+ 9BE1              ;   SET el bit3 de (Impacto2).
 662+ 9BE1              ;
 663+ 9BE1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9BE1
 665+ 9BE1 21 60 89         ld hl,Impacto
 666+ 9BE4 36 01            ld (hl),1
 667+ 9BE6 21 B4 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9BE9 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9BEB CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9BED
 671+ 9BED 18 18            jr 1F
 672+ 9BEF
 673+ 9BEF              ; -----
 674+ 9BEF
 675+ 9BEF E1           3 pop hl
 676+ 9BF0 CD BB 91         call NextScan
 677+ 9BF3 E5               push hl
 678+ 9BF4 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9BF5 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9BF7 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9BF9 30 0C            jr nc,1F
 682+ 9BFB              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9BFB 10 DC            djnz 2B
 684+ 9BFD
 685+ 9BFD              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9BFD
 687+ 9BFD              ; LLegados a este punto:
 688+ 9BFD              ;
 689+ 9BFD              ;   NO HAY COLISIÓN !!!!!.
 690+ 9BFD              ;
 691+ 9BFD              ;   .db (Impacto) de Amadeus a "0".
 692+ 9BFD              ;   RES el bit2 de (Impacto2).
 693+ 9BFD              ;
 694+ 9BFD              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9BFD              ;   Lo colocamos a "0".
 696+ 9BFD
 697+ 9BFD 21 B4 89         ld hl,Impacto2
 698+ 9C00 CB 96            res 2,(hl)
 699+ 9C02 2A B5 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9C05 36 00            ld (hl),0
 701+ 9C07
 702+ 9C07 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9C08 C9               ret
 704+ 9C09
 705+ 9C09               ; ---------- ----------
 706+ 9C09
 707+ 9C09 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9C0A 3A 4C 89         ld a,(Columns)
 709+ 9C0D 47               ld b,a
 710+ 9C0E FD 7E 00     2 ld a,(iy)
 711+ 9C11 BE               cp (hl)
 712+ 9C12 28 01            jr z,1F
 713+ 9C14
 714+ 9C14 1C               inc e
 715+ 9C15
 716+ 9C15 23           1 inc hl
 717+ 9C16 FD 23            inc iy
 718+ 9C18 10 F4            djnz 2B
 719+ 9C1A C1               pop bc
 720+ 9C1B C9               ret
 721+ 9C1C
 722+ 9C1C              ; -------------------------------------------------------------------------------------------------------------
 723+ 9C1C              ;
 724+ 9C1C              ;   13/03/23
 725+ 9C1C              ;
 726+ 9C1C              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9C1C              ;
 728+ 9C1C              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9C1C
 730+ 9C1C 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C1F 7E               ld a,(hl)
 732+ 9C20 A7               and a
 733+ 9C21 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C22
 735+ 9C22 44               ld b,h
 736+ 9C23 4D               ld c,l
 737+ 9C24 2A A7 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C27 E5               push hl
 739+ 9C28 A7               and a
 740+ 9C29 ED 42            sbc hl,bc
 741+ 9C2B E5               push hl
 742+ 9C2C C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C2D
 744+ 9C2D E1               pop hl
 745+ 9C2E 54               ld d,h
 746+ 9C2F 5D               ld e,l
 747+ 9C30 1B               dec de
 748+ 9C31 ED B8            lddr                                                ; Limpiamos.
 749+ 9C33
 750+ 9C33 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9C36 22 A7 89         ld (Stack_snapshot_disparos),hl
 752+ 9C39
 753+ 9C39 C9               ret
 754+ 9C3A
 755+ 9C3A              ; -------------------------------------------------------------------------------------------------------------
 756+ 9C3A              ;
 757+ 9C3A              ;   18/07/23
 758+ 9C3A              ;
 759+ 9C3A
 760+ 9C3A              Motor_de_disparos
 761+ 9C3A
 762+ 9C3A              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9C3A
 764+ 9C3A 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9C3D 2A B2 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9C40
 767+ 9C40 CD 9D 8B     2 call Extrae_address
 768+ 9C43 7E               ld a,(hl)
 769+ 9C44 A7               and a
 770+ 9C45 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9C47
 772+ 9C47              ; ----- ----- ----- ----- ----- -----
 773+ 9C47
 774+ 9C47 C5               push bc
 775+ 9C48 CD 0C 9D         call foto_disparo_a_borrar
 776+ 9C4B
 777+ 9C4B              ; Existe colisión con este disparo???
 778+ 9C4B
 779+ 9C4B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9C4C 7E               ld a,(hl)
 781+ 9C4D 2B               dec hl
 782+ 9C4E E6 01            and 1
 783+ 9C50 28 1D            jr z,9F
 784+ 9C52
 785+ 9C52              ;   En este punto:
 786+ 9C52              ;
 787+ 9C52              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9C52              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9C52              ;   _con la entidad).
 790+ 9C52              ;
 791+ 9C52              ;   Disparo_2A defw 0                                ; Control.
 792+ 9C52              ;    defw 0                                          ; Puntero objeto.
 793+ 9C52              ;    defw 0                                          ; Puntero de impresión.
 794+ 9C52              ;    defw 0                                          ; Rutina de impresión.
 795+ 9C52
 796+ 9C52 E5               push hl
 797+ 9C53
 798+ 9C53 06 04            ld b,4
 799+ 9C55 23           19 inc hl
 800+ 9C56 10 FD            djnz 19B
 801+ 9C58
 802+ 9C58 CD 9D 8B         call Extrae_address
 803+ 9C5B CD EF 9E         call Genera_coordenadas_disparo
 804+ 9C5E
 805+ 9C5E              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9C5E
 807+ 9C5E 21 B7 89         ld hl,Coordenadas_disparo_certero
 808+ 9C61 72               ld (hl),d
 809+ 9C62 23               inc hl
 810+ 9C63 73               ld (hl),e
 811+ 9C64
 812+ 9C64              ; Elimino el disparo de la base de datos.
 813+ 9C64
 814+ 9C64 E1               pop hl
 815+ 9C65 CD 8B 9D         call Elimina_disparo_de_base_de_datos
 816+ 9C68 21 B4 89         ld hl,Impacto2
 817+ 9C6B CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9C6D
 819+ 9C6D 18 06            jr 11F
 820+ 9C6F
 821+ 9C6F CD 35 9D     9 call Mueve_disparo
 822+ 9C72 CD 0C 9D         call foto_disparo_a_borrar
 823+ 9C75
 824+ 9C75 C1           11 pop bc
 825+ 9C76 18 04            jr 7F
 826+ 9C78
 827+ 9C78              ; ----- ----- ----- ----- ----- -----
 828+ 9C78
 829+ 9C78 ED 42        1 sbc hl,bc
 830+ 9C7A 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9C7C
 832+ 9C7C 2A B2 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9C7F 23               inc hl
 834+ 9C80 23               inc hl
 835+ 9C81 22 B2 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9C84 18 BA            jr 2B
 837+ 9C86
 838+ 9C86 CD 22 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9C89              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9C89
 841+ 9C89              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9C89
 843+ 9C89 01 9F 86         ld bc,Disparo_11
 844+ 9C8C 2A B0 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9C8F
 846+ 9C8F CD 9D 8B     5 call Extrae_address
 847+ 9C92 7E               ld a,(hl)
 848+ 9C93 A7               and a
 849+ 9C94 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9C96
 851+ 9C96              ; ----- ----- ----- ----- ----- -----
 852+ 9C96
 853+ 9C96 C5               push bc
 854+ 9C97 CD 0C 9D         call foto_disparo_a_borrar
 855+ 9C9A
 856+ 9C9A              ; Existe colisión con este disparo???
 857+ 9C9A
 858+ 9C9A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9C9B 7E               ld a,(hl)
 860+ 9C9C 2B               dec hl
 861+ 9C9D E6 01            and 1
 862+ 9C9F 28 4D            jr z,10F
 863+ 9CA1
 864+ 9CA1              ;! La colisión se produce con Amadeus???
 865+ 9CA1              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9CA1
 867+ 9CA1 E5               push hl
 868+ 9CA2
 869+ 9CA2 06 04            ld b,4
 870+ 9CA4 23           16 inc hl
 871+ 9CA5 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9CA7
 873+ 9CA7 CD 9D 8B         call Extrae_address
 874+ 9CAA CD EF 9E         call Genera_coordenadas_disparo
 875+ 9CAD
 876+ 9CAD 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9CAE FE 16            cp $16
 878+ 9CB0 38 2A            jr c,15F
 879+ 9CB2
 880+ 9CB2
 881+ 9CB2              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9CB2
 883+ 9CB2 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9CB3
 885+ 9CB3              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9CB3
 887+ 9CB3 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9CB6
 889+ 9CB6              ; Coordenada X de Amadeus en D.
 890+ 9CB6
 891+ 9CB6 7D               ld a,l
 892+ 9CB7 E6 1F            and $1F
 893+ 9CB9 57               ld d,a
 894+ 9CBA
 895+ 9CBA 21 BB 86         ld hl,Amadeus_db+8
 896+ 9CBD 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9CBE
 898+ 9CBE 21 B9 89         ld hl,Coordenadas_X_Amadeus
 899+ 9CC1 CD 87 9B         call Guarda_coordenadas_X
 900+ 9CC4
 901+ 9CC4 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9CC5
 903+ 9CC5              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9CC5
 905+ 9CC5 06 02            ld b,2
 906+ 9CC7 C5           20 push bc
 907+ 9CC8
 908+ 9CC8 06 03            ld b,3
 909+ 9CCA 21 B9 89         ld hl,Coordenadas_X_Amadeus
 910+ 9CCD 7E           18 ld a,(hl)
 911+ 9CCE BA               cp d
 912+ 9CCF 20 04            jr nz,17F
 913+ 9CD1
 914+ 9CD1              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9CD1
 916+ 9CD1 C1               pop bc
 917+ 9CD2 E1               pop hl
 918+ 9CD3 18 0D            jr 14F
 919+ 9CD5
 920+ 9CD5 23           17 inc hl
 921+ 9CD6 10 F5            djnz 18B
 922+ 9CD8
 923+ 9CD8 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9CD9
 925+ 9CD9 C1               pop bc
 926+ 9CDA 10 EB            djnz 20B
 927+ 9CDC
 928+ 9CDC
 929+ 9CDC              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9CDC              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9CDC
 932+ 9CDC E1           15 pop hl
 933+ 9CDD 23               inc hl
 934+ 9CDE 35               dec (hl)
 935+ 9CDF 2B               dec hl
 936+ 9CE0 18 0C            jr 10F
 937+ 9CE2
 938+ 9CE2              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9CE2              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9CE2
 941+ 9CE2 E5           14 push hl
 942+ 9CE3 CD 8B 9D         call Elimina_disparo_de_base_de_datos
 943+ 9CE6 21 B4 89         ld hl,Impacto2
 944+ 9CE9 CB CE            set 1,(hl)
 945+ 9CEB E1               pop hl
 946+ 9CEC 18 06            jr 12F
 947+ 9CEE
 948+ 9CEE              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9CEE
 950+ 9CEE CD 35 9D     10 call Mueve_disparo
 951+ 9CF1 CD 0C 9D         call foto_disparo_a_borrar
 952+ 9CF4 C1           12 pop bc
 953+ 9CF5
 954+ 9CF5 18 04            jr 8F
 955+ 9CF7
 956+ 9CF7              ; ----- ----- ----- ----- ----- -----
 957+ 9CF7
 958+ 9CF7 ED 42        4 sbc hl,bc
 959+ 9CF9 28 0A            jr z,6F
 960+ 9CFB
 961+ 9CFB 2A B0 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9CFE 23               inc hl
 963+ 9CFF 23               inc hl
 964+ 9D00 22 B0 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9D03 18 8A            jr 5B
 966+ 9D05
 967+ 9D05 CD 1B 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9D08 CD 90 9B         call Limpia_Coordenadas_X
 969+ 9D0B C9               ret
 970+ 9D0C
 971+ 9D0C              ; ------------------------------------------------------------------
 972+ 9D0C
 973+ 9D0C              foto_disparo_a_borrar
 974+ 9D0C
 975+ 9D0C 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9D0D A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9D0E C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9D0F
 979+ 9D0F E5               push hl
 980+ 9D10 23               inc hl
 981+ 9D11 23               inc hl
 982+ 9D12 ED 73 9F 89      ld (Stack),sp
 983+ 9D16 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9D17 FD E1            pop iy
 985+ 9D19 DD E1            pop ix
 986+ 9D1B E1               pop hl
 987+ 9D1C ED 7B 9F 89      ld sp,(Stack)
 988+ 9D20 3A 8E 89         ld a,(Ctrl_1)
 989+ 9D23 CB C7            set 0,a
 990+ 9D25 32 8E 89         ld (Ctrl_1),a
 991+ 9D28 CD BF 80         call Guarda_foto_registros
 992+ 9D2B 3A 8E 89         ld a,(Ctrl_1)
 993+ 9D2E CB 87            res 0,a
 994+ 9D30 32 8E 89         ld (Ctrl_1),a
 995+ 9D33 E1               pop hl
 996+ 9D34 C9               ret
 997+ 9D35
 998+ 9D35              ;---------------------------------------------------
 999+ 9D35              ;
1000+ 9D35              ;   18/07/23
1001+ 9D35              ;
1002+ 9D35
1003+ 9D35              Mueve_disparo
1004+ 9D35
1005+ 9D35              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9D35              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9D35              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9D35
1009+ 9D35 E5               push hl
1010+ 9D36
1011+ 9D36 7E               ld a,(hl)
1012+ 9D37
1013+ 9D37 06 04            ld b,4
1014+ 9D39 23           1 inc hl
1015+ 9D3A 10 FD            djnz 1B
1016+ 9D3C
1017+ 9D3C              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9D3C
1019+ 9D3C CD 9D 8B         call Extrae_address
1020+ 9D3F
1021+ 9D3F E6 01            and 1
1022+ 9D41 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9D43
1024+ 9D43              ; Disparo hacia arriba, (Amadeus).
1025+ 9D43
1026+ 9D43              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9D43              ; _ de la dificultad.
1028+ 9D43
1029+ 9D43 CD CA 91         call PreviousScan
1030+ 9D46 CD CA 91         call PreviousScan
1031+ 9D49 CD CA 91         call PreviousScan
1032+ 9D4C CD CA 91         call PreviousScan
1033+ 9D4F
1034+ 9D4F              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9D4F
1036+ 9D4F 7C               ld a,h
1037+ 9D50 FE 40            cp $40
1038+ 9D52 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9D54
1040+ 9D54              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9D54
1042+ 9D54 EB               ex de,hl
1043+ 9D55 06 04            ld b,4
1044+ 9D57 2B           6 dec hl
1045+ 9D58 10 FD            djnz 6B
1046+ 9D5A
1047+ 9D5A CD 8B 9D         call Elimina_disparo_de_base_de_datos
1048+ 9D5D E1               pop hl
1049+ 9D5E 18 10            jr 7F
1050+ 9D60
1051+ 9D60              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9D60              ; HL contiene el puntero de impresión del disparo.
1053+ 9D60              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9D60
1055+ 9D60 D5           3 push de
1056+ 9D61 C5               push bc
1057+ 9D62
1058+ 9D62 CD 1E 9B         call Comprueba_Colision
1059+ 9D65
1060+ 9D65              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9D65
1062+ 9D65 78               ld a,b
1063+ 9D66
1064+ 9D66 C1               pop bc
1065+ 9D67 D1               pop de
1066+ 9D68
1067+ 9D68 EB               ex de,hl
1068+ 9D69
1069+ 9D69 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9D6A 23               inc hl                                      ; _ movimiento.
1071+ 9D6B 72               ld (hl),d
1072+ 9D6C
1073+ 9D6C E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9D6D
1075+ 9D6D 23               inc hl                                      ; _ en curso.
1076+ 9D6E 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9D6F 2B               dec hl
1078+ 9D70
1079+ 9D70 C9           7 ret
1080+ 9D71
1081+ 9D71              ; Disparo hacia abajo, (Entidad).
1082+ 9D71
1083+ 9D71 3A BF 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9D74 47               ld b,a
1085+ 9D75
1086+ 9D75 CD BB 91     4 call NextScan
1087+ 9D78 10 FB            djnz 4B
1088+ 9D7A
1089+ 9D7A              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9D7A
1091+ 9D7A 7C               ld a,h
1092+ 9D7B FE 58            cp $58
1093+ 9D7D 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9D7F
1095+ 9D7F EB               ex de,hl
1096+ 9D80 06 04            ld b,4
1097+ 9D82 2B           5 dec hl
1098+ 9D83 10 FD            djnz 5B
1099+ 9D85
1100+ 9D85 CD 8B 9D         call Elimina_disparo_de_base_de_datos
1101+ 9D88 E1               pop hl
1102+ 9D89 18 E5            jr 7B
1103+ 9D8B
1104+ 9D8B              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9D8B
1106+ 9D8B 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9D8E AF               xor a
1108+ 9D8F 77               ld (hl),a
1109+ 9D90 54               ld d,h
1110+ 9D91 5D               ld e,l
1111+ 9D92 13               inc de
1112+ 9D93 ED B0            ldir
1113+ 9D95 C9               ret
1114+ 9D96
1115+ 9D96              ; -----------------------------------------------------------------
1116+ 9D96              ;
1117+ 9D96              ;   7/12/23
1118+ 9D96              ;
1119+ 9D96
1120+ 9D96 3A B4 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9D99 A7               and a
1122+ 9D9A C8               ret z
1123+ 9D9B
1124+ 9D9B              ; Analizamos si hay impacto por disparos.
1125+ 9D9B
1126+ 9D9B              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9D9B
1128+ 9D9B CB 4F            bit 1,a
1129+ 9D9D 28 07            jr z,1F
1130+ 9D9F
1131+ 9D9F 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9DA2 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9DA4 18 08            jr 2F
1134+ 9DA6
1135+ 9DA6 CB 47        1 bit 0,a
1136+ 9DA8 C8               ret z
1137+ 9DA9
1138+ 9DA9              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9DA9
1140+ 9DA9 21 8E 89         ld hl,Ctrl_1
1141+ 9DAC CB D6            set 2,(hl)
1142+ 9DAE
1143+ 9DAE C9           2 ret
1144+ 9DAF
1145+ 9DAF              ; -----------------------------------------------------------------
1146+ 9DAF              ;
1147+ 9DAF              ;   25/04/23
1148+ 9DAF              ;
1149+ 9DAF
1150+ 9DAF              Determina_resultado_comparativa
1151+ 9DAF
1152+ 9DAF              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9DAF              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9DAF              ;
1155+ 9DAF              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9DAF              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9DAF              ;
1158+ 9DAF              ;   SBC HL,DE
1159+ 9DAF
1160+ 9DAF              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9DAF              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9DAF
1163+ 9DAF              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9DAF              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9DAF
1166+ 9DAF
1167+ 9DAF 3A 5F 89         ld a,(Cuad_objeto)
1168+ 9DB2 FE 02            cp 2
1169+ 9DB4 28 26            jr z,2F
1170+ 9DB6 38 24            jr c,2F
1171+ 9DB8
1172+ 9DB8              ; Cuadrantes 3º y 4º
1173+ 9DB8
1174+ 9DB8 E6 01            and 1
1175+ 9DBA 28 10            jr z,4F
1176+ 9DBC
1177+ 9DBC              ; Cuadrante 3º
1178+ 9DBC
1179+ 9DBC 7C               ld a,h
1180+ 9DBD 06 00            ld b,0
1181+ 9DBF
1182+ 9DBF CD 4A 9E         call Compara_cositas_H3
1183+ 9DC2
1184+ 9DC2 04               inc b
1185+ 9DC3 05               dec b
1186+ 9DC4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9DC5
1188+ 9DC5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9DC6 06 00            ld b,0
1190+ 9DC8
1191+ 9DC8 CD 5C 9E         call Compara_cositas_L3
1192+ 9DCB C9               ret
1193+ 9DCC
1194+ 9DCC              ; Cuadrante 4º
1195+ 9DCC
1196+ 9DCC 7C           4 ld a,h
1197+ 9DCD 06 00            ld b,0
1198+ 9DCF
1199+ 9DCF CD 6E 9E         call Compara_cositas_H4
1200+ 9DD2
1201+ 9DD2 04               inc b
1202+ 9DD3 05               dec b
1203+ 9DD4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9DD5
1205+ 9DD5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9DD6 06 00            ld b,0
1207+ 9DD8
1208+ 9DD8 CD 84 9E         call Compara_cositas_L4
1209+ 9DDB C9               ret
1210+ 9DDC
1211+ 9DDC              ; Cuadrantes 1º y 2º.
1212+ 9DDC
1213+ 9DDC 28 10        2 jr z,3F
1214+ 9DDE
1215+ 9DDE              ; 1er Cuadrante
1216+ 9DDE
1217+ 9DDE 7C               ld a,h
1218+ 9DDF 06 00            ld b,0
1219+ 9DE1
1220+ 9DE1 CD 22 9E         call Compara_cositas_H1
1221+ 9DE4
1222+ 9DE4 04               inc b
1223+ 9DE5 05               dec b
1224+ 9DE6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9DE7
1226+ 9DE7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9DE8 06 00            ld b,0
1228+ 9DEA
1229+ 9DEA CD 38 9E         call Compara_cositas_L1
1230+ 9DED C9               ret
1231+ 9DEE
1232+ 9DEE
1233+ 9DEE              ; 2º Cuadrante
1234+ 9DEE
1235+ 9DEE 7C           3 ld a,h
1236+ 9DEF 06 00            ld b,0
1237+ 9DF1
1238+ 9DF1 CD FE 9D         call Compara_cositas_H2
1239+ 9DF4
1240+ 9DF4 04               inc b
1241+ 9DF5 05               dec b
1242+ 9DF6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9DF7
1244+ 9DF7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9DF8 06 00            ld b,0
1246+ 9DFA
1247+ 9DFA CD 10 9E         call Compara_cositas_L2
1248+ 9DFD C9               ret
1249+ 9DFE
1250+ 9DFE A7           Compara_cositas_H2 and a
1251+ 9DFF 28 0D            jr z,1F
1252+ 9E01              ;    cp $fd
1253+ 9E01              ;    jr z,1F
1254+ 9E01              ;    cp $fe
1255+ 9E01              ;    jr z,1F
1256+ 9E01 FE FF            cp $ff
1257+ 9E03 28 09            jr z,1F
1258+ 9E05 FE 01            cp $01
1259+ 9E07 28 05            jr z,1F
1260+ 9E09 FE 02            cp $02
1261+ 9E0B 28 01            jr z,1F
1262+ 9E0D C0               ret nz
1263+ 9E0E 04           1 inc b
1264+ 9E0F C9               ret
1265+ 9E10
1266+ 9E10 A7           Compara_cositas_L2 and a
1267+ 9E11 28 0D            jr z,1F
1268+ 9E13              ;    cp $fd
1269+ 9E13              ;    jr z,1F
1270+ 9E13 FE FE            cp $fe
1271+ 9E15 28 09            jr z,1F
1272+ 9E17 FE FF            cp $ff
1273+ 9E19 28 05            jr z,1F
1274+ 9E1B FE 01            cp $01
1275+ 9E1D 28 01            jr z,1F
1276+ 9E1F              ;    cp $02
1277+ 9E1F              ;    jr z,1F
1278+ 9E1F C0               ret nz
1279+ 9E20 04           1 inc b
1280+ 9E21 C9               ret
1281+ 9E22
1282+ 9E22 A7           Compara_cositas_H1 and a
1283+ 9E23 28 11            jr z,1F
1284+ 9E25              ;    cp $fd
1285+ 9E25              ;    jr z,1F
1286+ 9E25              ;    cp $fe
1287+ 9E25              ;    jr z,1F
1288+ 9E25 FE FF            cp $ff
1289+ 9E27 28 0D            jr z,1F
1290+ 9E29 FE 01            cp $01
1291+ 9E2B 28 09            jr z,1F
1292+ 9E2D FE 02            cp $02
1293+ 9E2F 28 05            jr z,1F
1294+ 9E31 FE 03            cp $03
1295+ 9E33 28 01            jr z,1F
1296+ 9E35 C0               ret nz
1297+ 9E36 04           1 inc b
1298+ 9E37 C9               ret
1299+ 9E38
1300+ 9E38 A7           Compara_cositas_L1 and a
1301+ 9E39 28 0D            jr z,1F
1302+ 9E3B              ;    cp $fd
1303+ 9E3B              ;    jr z,1F
1304+ 9E3B              ;    cp $fe
1305+ 9E3B              ;    jr z,1F
1306+ 9E3B              ;    cp $ff
1307+ 9E3B              ;    jr z,1F
1308+ 9E3B FE 01            cp $01
1309+ 9E3D 28 09            jr z,1F
1310+ 9E3F FE 02            cp $02
1311+ 9E41 28 05            jr z,1F
1312+ 9E43 FE 03            cp $03
1313+ 9E45 28 01            jr z,1F
1314+ 9E47 C0               ret nz
1315+ 9E48 04           1 inc b
1316+ 9E49 C9               ret
1317+ 9E4A
1318+ 9E4A A7           Compara_cositas_H3 and a
1319+ 9E4B 28 0D            jr z,1F
1320+ 9E4D              ;    cp $fd
1321+ 9E4D              ;    jr z,1F
1322+ 9E4D FE FE            cp $fe
1323+ 9E4F 28 09            jr z,1F
1324+ 9E51 FE FF            cp $ff
1325+ 9E53 28 05            jr z,1F
1326+ 9E55 FE 01            cp $01
1327+ 9E57 28 01            jr z,1F
1328+ 9E59              ;    cp $02
1329+ 9E59              ;    jr z,1F
1330+ 9E59              ;    cp $03
1331+ 9E59              ;    jr z,1F
1332+ 9E59 C0               ret nz
1333+ 9E5A 04           1 inc b
1334+ 9E5B C9               ret
1335+ 9E5C
1336+ 9E5C A7           Compara_cositas_L3 and a
1337+ 9E5D 28 0D            jr z,1F
1338+ 9E5F              ;    cp $fd
1339+ 9E5F              ;    jr z,1F
1340+ 9E5F              ;    cp $fe
1341+ 9E5F              ;    jr z,1F
1342+ 9E5F              ;    cp $ff
1343+ 9E5F              ;    jr z,1F
1344+ 9E5F FE 01            cp $01
1345+ 9E61 28 09            jr z,1F
1346+ 9E63 FE 02            cp $02
1347+ 9E65 28 05            jr z,1F
1348+ 9E67 FE 03            cp $03
1349+ 9E69 28 01            jr z,1F
1350+ 9E6B C0               ret nz
1351+ 9E6C 04           1 inc b
1352+ 9E6D C9               ret
1353+ 9E6E
1354+ 9E6E A7           Compara_cositas_H4 and a
1355+ 9E6F 28 11            jr z,1F
1356+ 9E71 FE FD            cp $fd
1357+ 9E73 28 0D            jr z,1F
1358+ 9E75 FE FE            cp $fe
1359+ 9E77 28 09            jr z,1F
1360+ 9E79 FE FF            cp $ff
1361+ 9E7B 28 05            jr z,1F
1362+ 9E7D FE 01            cp $01
1363+ 9E7F 28 01            jr z,1F
1364+ 9E81              ;    cp $02
1365+ 9E81              ;    jr z,1F
1366+ 9E81              ;    cp $03
1367+ 9E81              ;    jr z,1F
1368+ 9E81 C0               ret nz
1369+ 9E82 04           1 inc b
1370+ 9E83 C9               ret
1371+ 9E84
1372+ 9E84 A7           Compara_cositas_L4 and a
1373+ 9E85 28 0D            jr z,1F
1374+ 9E87              ;    cp $fd
1375+ 9E87              ;    jr z,1F
1376+ 9E87 FE FE            cp $fe
1377+ 9E89 28 09            jr z,1F
1378+ 9E8B FE FF            cp $ff
1379+ 9E8D 28 05            jr z,1F
1380+ 9E8F FE 01            cp $01
1381+ 9E91 28 01            jr z,1F
1382+ 9E93              ;    cp $02
1383+ 9E93              ;    jr z,1F
1384+ 9E93              ;    cp $03
1385+ 9E93              ;    jr z,1F
1386+ 9E93 C0               ret nz
1387+ 9E94 04           1 inc b
1388+ 9E95 C9               ret
# file closed: Disparo.asm
1716  9E96              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9E96              ; Relojes y temporizaciones.
   2+ 9E96
   3+ 9E96              ; ------------------------------------------------------
   4+ 9E96              ;
   5+ 9E96              ;	16/7/23
   6+ 9E96              ;
   7+ 9E96              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9E96              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9E96              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9E96              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9E96              ;
  12+ 9E96              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9E96              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9E96
  15+ 9E96              ; Disparo_entidad db 1
  16+ 9E96              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9E96              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9E96
  19+ 9E96              Habilita_disparos
  20+ 9E96
  21+ 9E96 7E           	ld a,(hl)
  22+ 9E97 A7           	and a
  23+ 9E98 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9E99
  25+ 9E99 EB           	ex de,hl
  26+ 9E9A
  27+ 9E9A 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9E9B C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9E9C
  30+ 9E9C              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9E9C
  32+ 9E9C 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9E9D 7E           	ld a,(hl)
  34+ 9E9E 23           	inc hl
  35+ 9E9F 77           	ld (hl),a
  36+ 9EA0
  37+ 9EA0 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9EA1 3E 01        	ld a,1
  39+ 9EA3 77           	ld (hl),a
  40+ 9EA4 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1717  9EA5              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9EA5              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9EA5              ;
   3+ 9EA5              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9EA5              ;
   5+ 9EA5              ; *****************************************************************************************************************************************************************************************
   6+ 9EA5              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9EA5
   8+ 9EA5 7C           calcula_tercio ld a,h
   9+ 9EA6 E6 18        	and $18
  10+ 9EA8 CB 2F        	sra a
  11+ 9EAA CB 2F        	sra a
  12+ 9EAC CB 2F        	sra a
  13+ 9EAE C9           	ret
  14+ 9EAF
# file closed: calcula_tercio.asm
1718  9EAF              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9EAF              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9EAF              ;
   3+ 9EAF              ;
   4+ 9EAF              ;	CLS.
   5+ 9EAF              ;
   6+ 9EAF              ;	Limpia la pantalla y define sus atributos.
   7+ 9EAF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9EAF              ;
   9+ 9EAF              ;	COLORES: 0 ..... NEGRO
  10+ 9EAF              ;    		 1 ..... AZUL
  11+ 9EAF              ; 			 2 ..... ROJO
  12+ 9EAF              ;			 3 ..... MAGENTA
  13+ 9EAF              ; 			 4 ..... VERDE
  14+ 9EAF              ; 			 5 ..... CIAN
  15+ 9EAF              ;			 6 ..... AMARILLO
  16+ 9EAF              ; 			 7 ..... BLANCO
  17+ 9EAF              ;
  18+ 9EAF              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9EAF              ;
  20+ 9EAF              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9EAF
  22+ 9EAF
  23+ 9EAF 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9EB2 11 01 40     	LD DE,$4001
  25+ 9EB5 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9EB8 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9EBA ED B0        	LDIR
  28+ 9EBC 01 FF 02     	LD BC,767
  29+ 9EBF 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9EC0 ED B0        	LDIR
  31+ 9EC2 C9           	ret
  32+ 9EC3
# file closed: Cls.asm
1719  9EC3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9EC3              ; ------------------------------------------------------------------------
   2+ 9EC3              ;
   3+ 9EC3              ;	30/1/24
   4+ 9EC3              ;
   5+ 9EC3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9EC3              ;	Fila superior "0", Columna izquierda "0".
   7+ 9EC3              ;
   8+ 9EC3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9EC3              ;
  10+ 9EC3              ;	Modifica: A,BC y DE.
  11+ 9EC3
  12+ 9EC3 7D           Genera_coordenadas ld a,l
  13+ 9EC4 E6 1F        	and $1f
  14+ 9EC6 32 51 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9EC9
  16+ 9EC9 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9ECA FE 40        	cp $40
  18+ 9ECC 38 1C        	jr c,4F
  19+ 9ECE
  20+ 9ECE CD A5 9E     	call calcula_tercio
  21+ 9ED1 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9ED2
  23+ 9ED2 1E 00        	ld e,0
  24+ 9ED4 7D           	ld a,l
  25+ 9ED5 E6 E0        	and $e0
  26+ 9ED7 28 01        	jr z,1F
  27+ 9ED9 04           	inc b
  28+ 9EDA
  29+ 9EDA 04           1 inc b
  30+ 9EDB 05           	dec b
  31+ 9EDC 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9EDE              ;														; _ , salimos.
  33+ 9EDE 1C           3 inc e
  34+ 9EDF D6 20        	sub 32
  35+ 9EE1 20 FB        	jr nz,3B
  36+ 9EE3 10 F5        	djnz 1B
  37+ 9EE5
  38+ 9EE5 7B           2 ld a,e
  39+ 9EE6 32 52 89     	ld (Coordenada_y),a
  40+ 9EE9 C9           	ret
  41+ 9EEA
  42+ 9EEA AF           4 xor a
  43+ 9EEB 32 52 89     	ld (Coordenada_y),a
  44+ 9EEE C9           	ret
  45+ 9EEF
  46+ 9EEF              ; ------------------------------------------------------------------------
  47+ 9EEF              ;	28/05/23
  48+ 9EEF              ;
  49+ 9EEF              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9EEF              ;	Fila superior "0", Columna izquierda "0".
  51+ 9EEF              ;
  52+ 9EEF              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9EEF              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9EEF              ;
  55+ 9EEF              ;		DE="$120d"
  56+ 9EEF              ;
  57+ 9EEF              ;		D, (Coordenada_X), Columnas, $12
  58+ 9EEF              ;		E, (Coordenada_y), Filas, $0d
  59+ 9EEF              ;
  60+ 9EEF              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9EEF
  62+ 9EEF              ;	Modifica: A,BC y DE.
  63+ 9EEF
  64+ 9EEF
  65+ 9EEF              Genera_coordenadas_disparo
  66+ 9EEF
  67+ 9EEF              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9EEF
  69+ 9EEF 7D           	ld a,l
  70+ 9EF0 E6 1F        	and $1f
  71+ 9EF2 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9EF3 CD A5 9E     	call calcula_tercio
  73+ 9EF6 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9EF7 1E 00        	ld e,0
  75+ 9EF9 7D           	ld a,l
  76+ 9EFA E6 E0        	and $e0
  77+ 9EFC 28 01        	jr z,1F
  78+ 9EFE 04           	inc b
  79+ 9EFF 1C           1 inc e
  80+ 9F00 D6 20        	sub 32
  81+ 9F02 20 FB        	jr nz,1B
  82+ 9F04 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9F06 C9           	ret
  84+ 9F07
# file closed: Genera_coordenadas.asm
1720  9F07              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F07              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F07              ;
   3+ 9F07              ;	12/12/23
   4+ 9F07              ;
   5+ 9F07              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F07
   7+ 9F07              ;	ADC HL,SP	LD (addr),SP
   8+ 9F07              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F07              ;	ADD IX,SP	LD SP,nn
  10+ 9F07              ; 	ADD IY,SP	LD SP,HL
  11+ 9F07              ;				LD SP,IX
  12+ 9F07              ;	DEC SP		LD SP,IY
  13+ 9F07
  14+ 9F07              ;	EX (SP),HL
  15+ 9F07              ;	EX (SP),IX
  16+ 9F07              ;	EX (SP),IY
  17+ 9F07
  18+ 9F07              ;	INC SP
  19+ 9F07
  20+ 9F07                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 9F 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 67 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 69 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 8E 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A A7 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 6D 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A AB 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A5 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 8E 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 A7 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 6D 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 AB 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B 9F 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A5 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B 9F 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A5 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A5 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1721  8131
1722  8131              	SAVESNA "Pruebas.sna", START
1723  8131
1724  8131
1725  8131
1726  8131
# file closed: Banco_de_pruebas.asm
