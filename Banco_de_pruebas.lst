# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD F4 89     	call Frame
  15  A104
  16  A104 3A 13 89     	ld a,(Ctrl_1) 										; Existe Loop?
  17  A107 CB 5F        	bit 3,a
  18  A109 ED 4D        	reti
  19  A10B
  20  A10B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  A10B
  22  A10B              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10B              ;
   3+ A10B              ;	17/02/23
   4+ A10B              ;
   5+ A10B              ;	Sprites e índices.
   6+ A10B
   7+ A10B              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  23  83E8              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 83E8
   4+ 83E8              ; 13/05/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_cajas										; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 BD 84        	defw Caja_1
  98+ 846A FA 84        	defw Caja_2
  99+ 846C 37 85        	defw Caja_3
 100+ 846E 74 85        	defw Caja_4
 101+ 8470 B1 85        	defw Caja_5
 102+ 8472 EE 85        	defw Caja_6
 103+ 8474 2B 86        	defw Caja_7
 104+ 8476 68 86        	defw Caja_8
 105+ 8478 A5 86        	defw Caja_9
 106+ 847A E2 86        	defw Caja_10
 107+ 847C              ;	...
 108+ 847C              ;	...
 109+ 847C              ;	+ entidades ...
 110+ 847C 00 00        	defw 0
 111+ 847E 00 00        	defw 0
 112+ 8480
 113+ 8480              ; ---------- ---------- ---------- ---------- ----------
 114+ 8480
 115+ 8480 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8482 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8484 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8486 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8489
 120+ 8489 05           	db %00000101									; (Attr).
 121+ 848A 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 848C 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 848E
 124+ 848E 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8490 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8492
 127+ 8492 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8494 04           	db 4 											; (Cuad_objeto).
 129+ 8495 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 8499
 131+ 8499 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 849A
 133+ 849A 00 00        	db 0,0											; Variables_de_borrado
 134+ 849C 00 00        	defw 0											;	" " " " " " "
 135+ 849E 00 00        	defw 0											;	" " " " " " "
 136+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 84A4
 138+ 84A4 00 00        	db 0,0											; Variables_de_pintado
 139+ 84A6 00 00        	defw 0											;	" " " " " " "
 140+ 84A8 00 00        	defw 0											;	" " " " " " "
 141+ 84AA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 84AE
 143+ 84AE 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 144+ 84B1
 145+ 84B1 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 146+ 84B5 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 147+ 84B8
 148+ 84B8 00           	db 0 											; (Columnas).
 149+ 84B9 00 00        	defw 0											; (Limite_horizontal).
 150+ 84BB 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 151+ 84BD
 152+ 84BD              ; ---------- ---------- ---------- ---------- ----------
 153+ 84BD
 154+ 84BD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 155+ 84BF 00 00        	defw 0											; (Posicion_actual).
 156+ 84C1 00 00        	defw 0 											; (Puntero_objeto).
 157+ 84C3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 158+ 84C6
 159+ 84C6 00           	db %00000000 									; (Attr).
 160+ 84C7
 161+ 84C7 00 00        	defw 0											; (Indice_Sprite_der).
 162+ 84C9 00 00        	defw 0											; (Indice_Sprite_izq).
 163+ 84CB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 164+ 84CD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 165+ 84CF
 166+ 84CF 00 00        	defw 0											; (Posicion_inicio).
 167+ 84D1 00           	db 0											; (Cuad_objeto).
 168+ 84D2
 169+ 84D2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 170+ 84D6
 171+ 84D6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 172+ 84D7
 173+ 84D7 00 00        	db 0,0										    ; Variables_de_borrado
 174+ 84D9 00 00        	defw 0											;	" " " " " " "
 175+ 84DB 00 00        	defw 0											;	" " " " " " "
 176+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 177+ 84E1
 178+ 84E1 00 00        	db 0,0											; Variables_de_pintado
 179+ 84E3 00 00        	defw 0											;	" " " " " " "
 180+ 84E5 00 00        	defw 0											;	" " " " " " "
 181+ 84E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 182+ 84EB
 183+ 84EB 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 184+ 84EE
 185+ 84EE 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 186+ 84F2 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 187+ 84F5
 188+ 84F5 00           	db 0 											; (Columnas).
 189+ 84F6 00 00        	defw 0											; (Limite_horizontal).
 190+ 84F8 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 191+ 84FA
 192+ 84FA              ; ---------- ---------- ---------- ---------- ----------
 193+ 84FA
 194+ 84FA 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 195+ 84FC 00 00        	defw 0											; (Posicion_actual).
 196+ 84FE 00 00        	defw 0 											; (Puntero_objeto).
 197+ 8500 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 198+ 8503
 199+ 8503 00           	db %00000000 									; (Attr).
 200+ 8504
 201+ 8504 00 00        	defw 0											; (Indice_Sprite_der).
 202+ 8506 00 00        	defw 0											; (Indice_Sprite_izq).
 203+ 8508 00 00        	defw 0											; (Puntero_DESPLZ_der).
 204+ 850A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 205+ 850C
 206+ 850C 00 00        	defw 0											; (Posicion_inicio).
 207+ 850E 00           	db 0											; (Cuad_objeto).
 208+ 850F
 209+ 850F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 210+ 8513
 211+ 8513 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 212+ 8514
 213+ 8514 00 00        	db 0,0										    ; Variables_de_borrado
 214+ 8516 00 00        	defw 0											;	" " " " " " "
 215+ 8518 00 00        	defw 0											;	" " " " " " "
 216+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 217+ 851E
 218+ 851E 00 00        	db 0,0											; Variables_de_pintado
 219+ 8520 00 00        	defw 0											;	" " " " " " "
 220+ 8522 00 00        	defw 0											;	" " " " " " "
 221+ 8524 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 222+ 8528
 223+ 8528 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 224+ 852B
 225+ 852B 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 226+ 852F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 227+ 8532
 228+ 8532 00           	db 0 											; (Columnas).
 229+ 8533 00 00        	defw 0											; (Limite_horizontal).
 230+ 8535 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 231+ 8537
 232+ 8537              ; ---------- ---------- ---------- ---------- ----------
 233+ 8537
 234+ 8537 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 235+ 8539 00 00        	defw 0											; (Posicion_actual).
 236+ 853B 00 00        	defw 0 											; (Puntero_objeto).
 237+ 853D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 238+ 8540
 239+ 8540 00           	db %00000000 									; (Attr).
 240+ 8541
 241+ 8541 00 00        	defw 0											; (Indice_Sprite_der).
 242+ 8543 00 00        	defw 0											; (Indice_Sprite_izq).
 243+ 8545 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8547 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8549
 246+ 8549 00 00        	defw 0											; (Posicion_inicio).
 247+ 854B 00           	db 0											; (Cuad_objeto).
 248+ 854C
 249+ 854C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8550
 251+ 8550 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8551
 253+ 8551 00 00        	db 0,0										    ; Variables_de_borrado
 254+ 8553 00 00        	defw 0											;	" " " " " " "
 255+ 8555 00 00        	defw 0											;	" " " " " " "
 256+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 855B
 258+ 855B 00 00        	db 0,0											; Variables_de_pintado
 259+ 855D 00 00        	defw 0											;	" " " " " " "
 260+ 855F 00 00        	defw 0											;	" " " " " " "
 261+ 8561 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8565
 263+ 8565 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 264+ 8568
 265+ 8568 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 266+ 856C 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 856F
 268+ 856F 00           	db 0 											; (Columnas).
 269+ 8570 00 00        	defw 0											; (Limite_horizontal).
 270+ 8572 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 271+ 8574
 272+ 8574              ; ---------- ---------- ---------- ---------- ----------
 273+ 8574
 274+ 8574 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 275+ 8576 00 00        	defw 0											; (Posicion_actual).
 276+ 8578 00 00        	defw 0 											; (Puntero_objeto).
 277+ 857A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 857D
 279+ 857D 00           	db %00000000 									; (Attr).
 280+ 857E
 281+ 857E 00 00        	defw 0											; (Indice_Sprite_der).
 282+ 8580 00 00        	defw 0											; (Indice_Sprite_izq).
 283+ 8582 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8584 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8586
 286+ 8586 00 00        	defw 0											; (Posicion_inicio).
 287+ 8588 00           	db 0											; (Cuad_objeto).
 288+ 8589
 289+ 8589 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 858D
 291+ 858D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 858E
 293+ 858E 00 00        	db 0,0										    ; Variables_de_borrado
 294+ 8590 00 00        	defw 0											;	" " " " " " "
 295+ 8592 00 00        	defw 0											;	" " " " " " "
 296+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 8598
 298+ 8598 00 00        	db 0,0											; Variables_de_pintado
 299+ 859A 00 00        	defw 0											;	" " " " " " "
 300+ 859C 00 00        	defw 0											;	" " " " " " "
 301+ 859E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 85A2
 303+ 85A2 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 85A5
 305+ 85A5 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 306+ 85A9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 85AC
 308+ 85AC 00           	db 0 											; (Columnas).
 309+ 85AD 00 00        	defw 0											; (Limite_horizontal).
 310+ 85AF 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 311+ 85B1
 312+ 85B1              ; ---------- ---------- ---------- ---------- ----------
 313+ 85B1
 314+ 85B1 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 85B3 00 00        	defw 0											; (Posicion_actual).
 316+ 85B5 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85B7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85BA
 319+ 85BA 00           	db %00000000 									; (Attr).
 320+ 85BB
 321+ 85BB 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 85BD 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 85BF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 85C1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 85C3
 326+ 85C3 00 00        	defw 0											; (Posicion_inicio).
 327+ 85C5 00           	db 0											; (Cuad_objeto).
 328+ 85C6
 329+ 85C6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 85CA
 331+ 85CA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 85CB
 333+ 85CB 00 00        	db 0,0										    ; Variables_de_borrado
 334+ 85CD 00 00        	defw 0											;	" " " " " " "
 335+ 85CF 00 00        	defw 0											;	" " " " " " "
 336+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 337+ 85D5
 338+ 85D5 00 00        	db 0,0											; Variables_de_pintado
 339+ 85D7 00 00        	defw 0											;	" " " " " " "
 340+ 85D9 00 00        	defw 0											;	" " " " " " "
 341+ 85DB 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 342+ 85DF
 343+ 85DF 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 344+ 85E2
 345+ 85E2 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 346+ 85E6 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 347+ 85E9
 348+ 85E9 00           	db 0 											; (Columnas).
 349+ 85EA 00 00        	defw 0											; (Limite_horizontal).
 350+ 85EC 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 351+ 85EE
 352+ 85EE              ; ---------- ---------- ---------- ---------- ----------
 353+ 85EE
 354+ 85EE 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 355+ 85F0 00 00        	defw 0											; (Posicion_actual).
 356+ 85F2 00 00        	defw 0 											; (Puntero_objeto).
 357+ 85F4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 358+ 85F7
 359+ 85F7 00           	db %00000000 									; (Attr).
 360+ 85F8
 361+ 85F8 00 00        	defw 0											; (Indice_Sprite_der).
 362+ 85FA 00 00        	defw 0											; (Indice_Sprite_izq).
 363+ 85FC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 364+ 85FE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 365+ 8600
 366+ 8600 00 00        	defw 0											; (Posicion_inicio).
 367+ 8602 00           	db 0											; (Cuad_objeto).
 368+ 8603
 369+ 8603 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 370+ 8607
 371+ 8607 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 372+ 8608
 373+ 8608 00 00        	db 0,0										    ; Variables_de_borrado
 374+ 860A 00 00        	defw 0											;	" " " " " " "
 375+ 860C 00 00        	defw 0											;	" " " " " " "
 376+ 860E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 377+ 8612
 378+ 8612 00 00        	db 0,0											; Variables_de_pintado
 379+ 8614 00 00        	defw 0											;	" " " " " " "
 380+ 8616 00 00        	defw 0											;	" " " " " " "
 381+ 8618 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 382+ 861C
 383+ 861C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 384+ 861F
 385+ 861F 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 386+ 8623 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 387+ 8626
 388+ 8626 00           	db 0 											; (Columnas).
 389+ 8627 00 00        	defw 0											; (Limite_horizontal).
 390+ 8629 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 391+ 862B
 392+ 862B              ; ---------- ---------- ---------- ---------- ----------
 393+ 862B
 394+ 862B 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 395+ 862D 00 00        	defw 0											; (Posicion_actual).
 396+ 862F 00 00        	defw 0 											; (Puntero_objeto).
 397+ 8631 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 398+ 8634
 399+ 8634 00           	db %00000000 									; (Attr).
 400+ 8635
 401+ 8635 00 00        	defw 0											; (Indice_Sprite_der).
 402+ 8637 00 00        	defw 0											; (Indice_Sprite_izq).
 403+ 8639 00 00        	defw 0											; (Puntero_DESPLZ_der).
 404+ 863B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 405+ 863D
 406+ 863D 00 00        	defw 0											; (Posicion_inicio).
 407+ 863F 00           	db 0											; (Cuad_objeto).
 408+ 8640
 409+ 8640 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 410+ 8644
 411+ 8644 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 412+ 8645
 413+ 8645 00 00        	db 0,0										    ; Variables_de_borrado
 414+ 8647 00 00        	defw 0											;	" " " " " " "
 415+ 8649 00 00        	defw 0											;	" " " " " " "
 416+ 864B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 864F
 418+ 864F 00 00        	db 0,0											; Variables_de_pintado
 419+ 8651 00 00        	defw 0											;	" " " " " " "
 420+ 8653 00 00        	defw 0											;	" " " " " " "
 421+ 8655 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 422+ 8659
 423+ 8659 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 424+ 865C
 425+ 865C 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 426+ 8660 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 427+ 8663
 428+ 8663 00           	db 0 											; (Columnas).
 429+ 8664 00 00        	defw 0											; (Limite_horizontal).
 430+ 8666 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 431+ 8668
 432+ 8668              ; ---------- ---------- ---------- ---------- ----------
 433+ 8668
 434+ 8668 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 435+ 866A 00 00        	defw 0											; (Posicion_actual).
 436+ 866C 00 00        	defw 0 											; (Puntero_objeto).
 437+ 866E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 438+ 8671
 439+ 8671 00           	db %00000000 									; (Attr).
 440+ 8672
 441+ 8672 00 00        	defw 0											; (Indice_Sprite_der).
 442+ 8674 00 00        	defw 0											; (Indice_Sprite_izq).
 443+ 8676 00 00        	defw 0											; (Puntero_DESPLZ_der).
 444+ 8678 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 445+ 867A
 446+ 867A 00 00        	defw 0											; (Posicion_inicio).
 447+ 867C 00           	db 0											; (Cuad_objeto).
 448+ 867D
 449+ 867D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 450+ 8681
 451+ 8681 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 452+ 8682
 453+ 8682 00 00        	db 0,0										    ; Variables_de_borrado
 454+ 8684 00 00        	defw 0											;	" " " " " " "
 455+ 8686 00 00        	defw 0											;	" " " " " " "
 456+ 8688 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 457+ 868C
 458+ 868C 00 00        	db 0,0											; Variables_de_pintado
 459+ 868E 00 00        	defw 0											;	" " " " " " "
 460+ 8690 00 00        	defw 0											;	" " " " " " "
 461+ 8692 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 462+ 8696
 463+ 8696 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 464+ 8699
 465+ 8699 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 466+ 869D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 467+ 86A0
 468+ 86A0 00           	db 0 											; (Columnas).
 469+ 86A1 00 00        	defw 0											; (Limite_horizontal).
 470+ 86A3 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 471+ 86A5
 472+ 86A5              ; ---------- ---------- ---------- ---------- ----------
 473+ 86A5
 474+ 86A5 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 475+ 86A7 00 00        	defw 0											; (Posicion_actual).
 476+ 86A9 00 00        	defw 0 											; (Puntero_objeto).
 477+ 86AB 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 478+ 86AE
 479+ 86AE 00           	db %00000000 									; (Attr).
 480+ 86AF
 481+ 86AF 00 00        	defw 0											; (Indice_Sprite_der).
 482+ 86B1 00 00        	defw 0											; (Indice_Sprite_izq).
 483+ 86B3 00 00        	defw 0											; (Puntero_DESPLZ_der).
 484+ 86B5 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 485+ 86B7
 486+ 86B7 00 00        	defw 0											; (Posicion_inicio).
 487+ 86B9 00           	db 0											; (Cuad_objeto).
 488+ 86BA
 489+ 86BA 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 490+ 86BE
 491+ 86BE 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 492+ 86BF
 493+ 86BF 00 00        	db 0,0										    ; Variables_de_borrado
 494+ 86C1 00 00        	defw 0											;	" " " " " " "
 495+ 86C3 00 00        	defw 0											;	" " " " " " "
 496+ 86C5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 497+ 86C9
 498+ 86C9 00 00        	db 0,0											; Variables_de_pintado
 499+ 86CB 00 00        	defw 0											;	" " " " " " "
 500+ 86CD 00 00        	defw 0											;	" " " " " " "
 501+ 86CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 502+ 86D3
 503+ 86D3 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 504+ 86D6
 505+ 86D6 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 506+ 86DA 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 507+ 86DD
 508+ 86DD 00           	db 0 											; (Columnas).
 509+ 86DE 00 00        	defw 0											; (Limite_horizontal).
 510+ 86E0 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 511+ 86E2
 512+ 86E2              ; ---------- ---------- ---------- ---------- ----------
 513+ 86E2
 514+ 86E2 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 515+ 86E4 00 00        	defw 0											; (Posicion_actual).
 516+ 86E6 00 00        	defw 0 											; (Puntero_objeto).
 517+ 86E8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 518+ 86EB
 519+ 86EB 00           	db %00000000 									; (Attr).
 520+ 86EC
 521+ 86EC 00 00        	defw 0											; (Indice_Sprite_der).
 522+ 86EE 00 00        	defw 0											; (Indice_Sprite_izq).
 523+ 86F0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 524+ 86F2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 525+ 86F4
 526+ 86F4 00 00        	defw 0											; (Posicion_inicio).
 527+ 86F6 00           	db 0											; (Cuad_objeto).
 528+ 86F7
 529+ 86F7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 530+ 86FB
 531+ 86FB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 532+ 86FC
 533+ 86FC 00 00        	db 0,0										    ; Variables_de_borrado
 534+ 86FE 00 00        	defw 0											;	" " " " " " "
 535+ 8700 00 00        	defw 0											;	" " " " " " "
 536+ 8702 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 537+ 8706
 538+ 8706 00 00        	db 0,0											; Variables_de_pintado
 539+ 8708 00 00        	defw 0											;	" " " " " " "
 540+ 870A 00 00        	defw 0											;	" " " " " " "
 541+ 870C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 542+ 8710
 543+ 8710 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 544+ 8713
 545+ 8713 00 00 00 00  	defw 0,0										; (Puntero_indice_mov) / (Puntero_mov).
 546+ 8717 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 547+ 871A
 548+ 871A 00           	db 0 											; (Columnas).
 549+ 871B 00 00        	defw 0											; (Limite_horizontal).
 550+ 871D 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 551+ 871F
 552+ 871F              ; -------------------------------------------------------------------------------------
 553+ 871F              ;
 554+ 871F              ;	20/05/23
 555+ 871F              ;
 556+ 871F              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 557+ 871F              ;
 558+ 871F              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 559+ 871F              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 560+ 871F              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 561+ 871F              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 562+ 871F
 563+ 871F              Indice_de_entidades
 564+ 871F
 565+ 871F 33 87        	defw Entidad_1
 566+ 8721 43 87        	defw Entidad_2
 567+ 8723 53 87        	defw Entidad_3
 568+ 8725 63 87        	defw Entidad_4
 569+ 8727 73 87        	defw Entidad_5
 570+ 8729 83 87        	defw Entidad_6
 571+ 872B 93 87        	defw Entidad_7
 572+ 872D A3 87        	defw Entidad_8
 573+ 872F B3 87        	defw Entidad_9
 574+ 8731 C3 87        	defw Entidad_10
 575+ 8733
 576+ 8733              ;	BADSAT, (Satélite malvado).
 577+ 8733
 578+ 8733 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 579+ 8735 04           	db %00000100									; (Attr).
 580+ 8736 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 581+ 8738 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 582+ 873A 9F 47        	defw $479f	                             	    ; (Posicion_inicio).
 583+ 873C 01           	db 1											; (Cuad_objeto).
 584+ 873D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 585+ 8741 45 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 586+ 8743
 587+ 8743 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 588+ 8745 02           	db %00000010									; (Attr).
 589+ 8746 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 590+ 8748 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 591+ 874A 5F 48        	defw $485f                                      ; (Posicion_inicio).
 592+ 874C 01           	db 1											; (Cuad_objeto).
 593+ 874D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 594+ 8751 45 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 595+ 8753
 596+ 8753 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 597+ 8755 04           	db %00000100									; (Attr).
 598+ 8756 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 599+ 8758 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 600+ 875A A0 47        	defw $47a0                                      ; (Posicion_inicio).
 601+ 875C 01           	db 1											; (Cuad_objeto).
 602+ 875D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 603+ 8761 39 9B        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 604+ 8763
 605+ 8763 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 606+ 8765 01           	db %00000001									; (Attr).
 607+ 8766 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 608+ 8768 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 609+ 876A BF 47        	defw $47bf                                      ; (Posicion_inicio).
 610+ 876C 01           	db 1											; (Cuad_objeto).
 611+ 876D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 612+ 8771 45 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 613+ 8773
 614+ 8773 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 615+ 8775 01           	db %00000001									; (Attr).
 616+ 8776 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 8778 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 877A 07 40        	defw $4007                                      ; (Posicion_inicio).
 619+ 877C 01           	db 1											; (Cuad_objeto).
 620+ 877D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8781 3B 9B        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
 622+ 8783
 623+ 8783 02 02        Entidad_6 db 2,2		                     		; (Filas) / (Columns).
 624+ 8785 04           	db %00000100									; (Attr).
 625+ 8786 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 8788 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 878A FF 48        	defw $48ff	                             	    ; (Posicion_inicio).
 628+ 878C 01           	db 1											; (Cuad_objeto).
 629+ 878D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 8791 45 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo  	; (Puntero_indice_mov)
 631+ 8793
 632+ 8793 02 02        Entidad_7 db 2,2		                     		; (Filas) / (Columns).
 633+ 8795 02           	db %00000010									; (Attr).
 634+ 8796 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 635+ 8798 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 636+ 879A 7F 48        	defw $487f                                      ; (Posicion_inicio).
 637+ 879C 01           	db 1											; (Cuad_objeto).
 638+ 879D 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 639+ 87A1 45 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo    ; (Puntero_indice_mov)
 640+ 87A3
 641+ 87A3 02 02        Entidad_8 db 2,2		                     		; (Filas) / (Columns).
 642+ 87A5 04           	db %00000100									; (Attr).
 643+ 87A6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 644+ 87A8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 645+ 87AA E0 48        	defw $48e0                                      ; (Posicion_inicio).
 646+ 87AC 01           	db 1											; (Cuad_objeto).
 647+ 87AD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 648+ 87B1 39 9B        	defw Indice_mov_Derecha							; (Puntero_indice_mov)
 649+ 87B3
 650+ 87B3 02 02        Entidad_9 db 2,2		                     		; (Filas) / (Columns).
 651+ 87B5 01           	db %00000001									; (Attr).
 652+ 87B6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 653+ 87B8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 654+ 87BA 3F 50        	defw $503f                                      ; (Posicion_inicio).
 655+ 87BC 01           	db 1											; (Cuad_objeto).
 656+ 87BD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 657+ 87C1 45 9B        	defw Indice_mov_Escaloncitos_izquierda_abajo	; (Puntero_indice_mov)
 658+ 87C3
 659+ 87C3 02 02        Entidad_10 db 2,2		                     		; (Filas) / (Columns).
 660+ 87C5 01           	db %00000001									; (Attr).
 661+ 87C6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 662+ 87C8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 663+ 87CA 13 40        	defw $4013                                      ; (Posicion_inicio).
 664+ 87CC 01           	db 1											; (Cuad_objeto).
 665+ 87CD 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 666+ 87D1 3B 9B        	defw Indice_mov_Abajo							; (Puntero_indice_mov)
# file closed: Cajas_y_disparos.asm
  24  87D3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87D3              ; 13/05/23
   2+ 87D3
   3+ 87D3              Indice_de_niveles
   4+ 87D3
   5+ 87D3 E1 87        	defw Nivel_1
   6+ 87D5 EB 87        	defw Nivel_2
   7+ 87D7 F8 87        	defw Nivel_3
   8+ 87D9 08 88        	defw Nivel_4
   9+ 87DB 1A 88        	defw Nivel_5
  10+ 87DD
  11+ 87DD              ;	...
  12+ 87DD              ;	...
  13+ 87DD              ;	+ Niveles ...
  14+ 87DD
  15+ 87DD 00 00        	defw 0
  16+ 87DF 00 00        	defw 0
  17+ 87E1
  18+ 87E1 09           Nivel_1 db 9	                                ; Nº de entidades.
  19+ 87E2 01 02 03 04  	db 1,2,3,4,5,6,7,8,9						; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 87E6 05 06 07 08
  19+ 87EA 09
  20+ 87EB 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 87EC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 87F0 01 02
  22+ 87F2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87F6 01 02
  23+ 87F8 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 87F9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 87FD 01
  25+ 87FE 03 01 01 01  	db 3,1,1,1,1
  25+ 8802 01
  26+ 8803 03 01 01 01  	db 3,1,1,1,1
  26+ 8807 01
  27+ 8808 11           Nivel_4 db 17									; Nº de entidades.
  28+ 8809 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 880D 01
  29+ 880E 04 01 01 01  	db 4,1,1,1,1
  29+ 8812 01
  30+ 8813 04 01 01 01  	db 4,1,1,1,1
  30+ 8817 01
  31+ 8818 02 03        	db 2,3
  32+ 881A 14           Nivel_5 db 20									; Nº de entidades.
  33+ 881B 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 881F 01
  34+ 8820 05 01 01 01  	db 5,1,1,1,1
  34+ 8824 01
  35+ 8825 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 8829 01
  36+ 882A 05 01 01 01  	db 5,1,1,1,1
  36+ 882E 01
  37+ 882F
  38+ 882F              ;---------------------------------------------------------------------------------------------------------------
  39+ 882F              ;
  40+ 882F              ;   21/5/23
  41+ 882F              ;
  42+ 882F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 882F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 882F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 882F              ;	_en la caja DRAW correspondiente.
  46+ 882F              ;
  47+ 882F              ;	MODIFICA: HL,DE y A.
  48+ 882F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 882F
  50+ 882F              Inicializa_Punteros_de_nivel
  51+ 882F
  52+ 882F 21 D3 87     	ld hl,Indice_de_niveles
  53+ 8832 22 49 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8835 CD 04 8C     	call Extrae_address
  55+ 8838 7E           	ld a,(hl)
  56+ 8839 32 1C 89     	ld (Numero_de_entidades),a
  57+ 883C 23           	inc hl
  58+ 883D 22 4B 89     	ld (Datos_de_nivel),hl
  59+ 8840 C9           	ret
  60+ 8841
  61+ 8841              ;---------------------------------------------------------------------------------------------------------------
  62+ 8841              ;
  63+ 8841              ;   13/5/23
  64+ 8841              ;
  65+ 8841              ;	Destruye A,BC,HL,DE
  66+ 8841
  67+ 8841              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8841              ;	_del juego.
  69+ 8841
  70+ 8841              Prepara_cajas
  71+ 8841
  72+ 8841              ; Preparamos los punteros de las cajas.
  73+ 8841
  74+ 8841 21 68 84     	ld hl,Indice_de_cajas
  75+ 8844 CD 04 8C     	call Extrae_address
  76+ 8847 CD 84 88     	call Avanza_caja
  77+ 884A
  78+ 884A CD BF 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 884D
  80+ 884D 2A 4B 89     	ld hl,(Datos_de_nivel)
  81+ 8850
  82+ 8850              ; HL está en los datos del nivel correspondiente.
  83+ 8850              ; B actuará como contador de cajas.
  84+ 8850
  85+ 8850 C5           1 push bc
  86+ 8851
  87+ 8851 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8852 CD 75 88     	call PreparaBC
  89+ 8855
  90+ 8855 21 1F 87     	ld hl,Indice_de_entidades
  91+ 8858 CD 7D 88     	call SBC_HL_con_BC_y_Extrae
  92+ 885B 22 22 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 885E
  94+ 885E CD 8E 88     	call Datos_de_entidad_a_caja
  95+ 8861
  96+ 8861 2A 1A 89     	ld hl,(Indice_restore_caja)
  97+ 8864 CD 04 8C     	call Extrae_address
  98+ 8867 CD 84 88     	call Avanza_caja
  99+ 886A
 100+ 886A 2A 4B 89     	ld hl,(Datos_de_nivel)
 101+ 886D 23           	inc hl
 102+ 886E 22 4B 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8871
 104+ 8871 C1           	pop bc
 105+ 8872 10 DC        	djnz 1B
 106+ 8874 C9           	ret
 107+ 8875
 108+ 8875 CB 27        PreparaBC sla a
 109+ 8877 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8879 4F           	ld c,a
 111+ 887A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 887C C9           	ret
 113+ 887D
 114+ 887D A7           SBC_HL_con_BC_y_Extrae and a
 115+ 887E ED 4A        	adc hl,bc
 116+ 8880 CD 04 8C     	call Extrae_address
 117+ 8883 C9           	ret
 118+ 8884
 119+ 8884 22 16 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8887 13           	inc de
 121+ 8888 13           	inc de
 122+ 8889 EB           	ex de,hl
 123+ 888A 22 1A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 888D C9           	ret
 125+ 888E
 126+ 888E              Datos_de_entidad_a_caja
 127+ 888E
 128+ 888E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 888E
 130+ 888E ED 5B 16 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8892
 132+ 8892 01 02 00     	ld bc,2
 133+ 8895 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8897
 135+ 8897 01 07 00     	ld bc,7
 136+ 889A CD B9 88     	call Situa_DE
 137+ 889D
 138+ 889D 01 05 00     	ld bc,5
 139+ 88A0 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 88A2
 141+ 88A2 01 04 00     	ld bc,4
 142+ 88A5 CD B9 88     	call Situa_DE
 143+ 88A8
 144+ 88A8 01 07 00     	ld bc,7
 145+ 88AB ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88AD
 147+ 88AD 01 18 00     	ld bc,24
 148+ 88B0 CD B9 88     	call Situa_DE
 149+ 88B3
 150+ 88B3 01 02 00     	ld bc,2
 151+ 88B6 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88B8
 153+ 88B8 C9           	ret
 154+ 88B9
 155+ 88B9 EB           Situa_DE ex de,hl
 156+ 88BA A7           	and a
 157+ 88BB ED 4A        	adc hl,bc
 158+ 88BD EB           	ex de,hl
 159+ 88BE C9           	ret
 160+ 88BF
 161+ 88BF              ;---------------------------------------------------------------------------------------------------------------
 162+ 88BF              ;
 163+ 88BF              ;	21/5/23
 164+ 88BF              ;
 165+ 88BF              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 166+ 88BF              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 167+ 88BF              ;
 168+ 88BF              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 169+ 88BF              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 170+ 88BF              ;	_ total de entidades que contiene (Numero_de_entidades).
 171+ 88BF              ;
 172+ 88BF              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 173+ 88BF              ;	MODIFICA: A y B.
 174+ 88BF              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 175+ 88BF
 176+ 88BF              Admin_num_entidades
 177+ 88BF
 178+ 88BF              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 179+ 88BF
 180+ 88BF 3A 1C 89     	ld a,(Numero_de_entidades)
 181+ 88C2 A7           	and a
 182+ 88C3              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 183+ 88C3 28 FE        	jr z,$
 184+ 88C5              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 185+ 88C5 FE 0A        	cp 10
 186+ 88C7 38 08        	jr c,1F
 187+ 88C9
 188+ 88C9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 189+ 88C9              ; Actualizamos variables.
 190+ 88C9
 191+ 88C9 3E 0A        	ld a,10
 192+ 88CB 32 1D 89     	ld (Numero_parcial_de_entidades),a
 193+ 88CE 47           	ld b,a
 194+ 88CF 18 04        	jr 2F
 195+ 88D1
 196+ 88D1              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 197+ 88D1              ; (Numero_de_entidades)="0".
 198+ 88D1
 199+ 88D1 32 1D 89     1 ld (Numero_parcial_de_entidades),a
 200+ 88D4 47           	ld b,a
 201+ 88D5 C9           2 ret
# file closed: Niveles.asm
  25  88D6
  26  88D6              ; ******************************************************************************************************************************************************************************************
  27  88D6              ; Constantes.
  28  88D6              ; ******************************************************************************************************************************************************************************************
  29  88D6              ;
  30  88D6              ; 25/05/23
  31  88D6              ;
  32  88D6              ; Constantes generales.
  33  88D6              ;
  34  88D6
  35  88D6              Sprite_vacio equ $f000
  36  88D6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  88D6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  88D6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  88D6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  88D6
  41  88D6              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  88D6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  88D6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  44  88D6              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  88D6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  88D6              ;                               				        ; De momento situamos este almacén en $7060.
  47  88D6
  48  88D6              ; ******************************************************************************************************************************************************************************************
  49  88D6              ; Variables.
  50  88D6              ; ******************************************************************************************************************************************************************************************
  51  88D6              ;
  52  88D6              ; 10/11/22
  53  88D6              ;
  54  88D6              ; Variables de DRAW. (Motor principal).
  55  88D6              ;
  56  88D6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  88D6
  58  88D6 00           Filas db 0												; Filas. [DRAW]
  59  88D7 00           Columns db 0  											; Nº de columnas. [DRAW]
  60  88D8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  88DA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  88DC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  88DD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  88DE
  65  88DE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  88DE
  67  88DE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  88DF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  88DF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  88DF 00           Attr db 0												; Atributos de la entidad:
  71  88E0
  72  88E0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  88E0              ;
  74  88E0              ;	COLORES: 0 ..... NEGRO
  75  88E0              ;    		 1 ..... AZUL
  76  88E0              ; 			 2 ..... ROJO
  77  88E0              ;			 3 ..... MAGENTA
  78  88E0              ; 			 4 ..... VERDE
  79  88E0              ; 			 5 ..... CIAN
  80  88E0              ;			 6 ..... AMARILLO
  81  88E0              ; 			 7 ..... BLANCO
  82  88E0
  83  88E0 00 00        Indice_Sprite_der defw 0
  84  88E2 00 00        Indice_Sprite_izq defw 0
  85  88E4 00 00        Puntero_DESPLZ_der defw 0
  86  88E6 00 00        Puntero_DESPLZ_izq defw 0
  87  88E8
  88  88E8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  88EA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  88EB
  91  88EB              ; Variables de objeto. (Características).
  92  88EB
  93  88EB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  88EC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  88ED 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  88EE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  88EF
  98  88EF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  88F0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  88F0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  88F0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  88F2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 103  88F4 00 00        	defw 0
 104  88F6 00 00 00 00  	db 0,0,0,0
 105  88FA
 106  88FA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  88FC 00 00        	defw 0
 108  88FE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  8900 00 00 00 00  	db 0,0,0,0
 110  8904
 111  8904              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 112  8904
 113  8904 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 114  8905              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 115  8905              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 116  8905              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 117  8905              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 118  8905              ;
 119  8905              ; 														DESCRIPCIÖN:
 120  8905              ;
 121  8905              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 122  8905              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 123  8905              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 124  8905              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 125  8905              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 126  8905              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 127  8905              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 128  8905              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 129  8905              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 130  8905              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 131  8905              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 132  8905              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 133  8905              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 134  8905              ;
 135  8905              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 136  8905              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 137  8905              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 138  8905
 139  8905 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 140  8906
 141  8906              ; Movimiento.
 142  8906
 143  8906 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 144  8907 00 00        Puntero_indice_mov defw 0							    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 145  8909 00 00        Puntero_mov defw 0
 146  890B 00           Contador_db_mov db 0
 147  890C 00           Incrementa_puntero db 0
 148  890D 00           Repetimos_db db 0
 149  890E
 150  890E              ; Variables de funcionamiento. [DRAW].
 151  890E
 152  890E 00           Columnas db 0
 153  890F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 154  8911              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  8911 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  8912
 157  8912              ; variables de control general.
 158  8912
 159  8912 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 160  8913
 161  8913              ; 61 Bytes por entidad.
 162  8913              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 163  8913              ;					         		---------;      ;---------
 164  8913
 165  8913
 166  8913              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 167  8913
 168  8913 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 169  8914
 170  8914              ;														DESCRIPCIÓN:
 171  8914              ;
 172  8914              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 173  8914              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 174  8914              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 175  8914              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 176  8914              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 177  8914              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 178  8914              ;														BIT 3, .............
 179  8914              ;														BIT 4, .............
 180  8914              ;														BIT 5, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 181  8914              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 182  8914              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 183  8914              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 184  8914              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 185  8914              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 186  8914              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 187  8914
 188  8914 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 189  8916              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 190  8916              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 191  8916              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 192  8916
 193  8916
 194  8916
 195  8916              ; Gestión de ENTIDADES y CAJAS.
 196  8916
 197  8916              ;Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 198  8916 00 00        Puntero_store_caja defw 0
 199  8918 00 00        Puntero_restore_caja defw 0
 200  891A 00 00        Indice_restore_caja defw 0
 201  891C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 202  891D 00           Numero_parcial_de_entidades db 0
 203  891E 00           Entidades_en_curso db 0									; ..... ..... .....
 204  891F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 205  8920              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 206  8920              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 207  8920              ;														; _ (Numero_de_malotes)="0".
 208  8920 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 209  8922 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 210  8924              ;														; _ puntero (Indice_entidades).
 211  8924
 212  8924
 213  8924              ;---------------------------------------------------------------------------------------------------------------
 214  8924              ;
 215  8924              ; Sirven para PINTAR.
 216  8924
 217  8924 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 218  8926              ;														; _variable para almacenar lo posición del puntero_
 219  8926              ; 														; _de pila, SP.
 220  8926 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 221  8928              ;														; La utiliza la rutina [Extrae_foto_registros].
 222  8928 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 223  892A              ;														; _el snapshot de los registros de la siguiente entidad.
 224  892A              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 225  892A 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 226  892C              ;														; _el snapshot de los registros del siguiente disparo.
 227  892C              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 228  892C
 229  892C              ;---------------------------------------------------------------------------------------------------------------
 230  892C
 231  892C              ; Gestión de Disparos.
 232  892C
 233  892C 00           Numero_de_disparotes db 0
 234  892D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 235  892F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 236  8931 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 237  8932              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 238  8932              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 239  8932 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 240  8934              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 241  8934              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 242  8934              ;														; _produzca colisión.
 243  8934 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 244  8936              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 245  8936 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 246  8939              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 247  8939 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 248  893C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 249  893C
 250  893C              ;---------------------------------------------------------------------------------------------------------------
 251  893C
 252  893C              ; Relojes y temporizaciones.
 253  893C
 254  893C 00           Contador_de_frames db 0
 255  893D 00           Secundero db 0
 256  893E 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 257  893F              ;														; Repite la oleada de entidades.
 258  893F 01           Habilita_disparo_Amadeus db 1
 259  8940 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 260  8941 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 261  8942
 262  8942 01           Habilita_disparo_entidad db 1
 263  8943 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 264  8944 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 265  8945
 266  8945              ;---------------------------------------------------------------------------------------------------------------
 267  8945
 268  8945              ; Gestión de FRAMES.
 269  8945
 270  8945 00           Switch db 0
 271  8946
 272  8946              ; Variables de Raster y localización en pantalla.
 273  8946
 274  8946 00 FF        Temp_Raster defw $ff00
 275  8948
 276  8948              ;---------------------------------------------------------------------------------------------------------------
 277  8948
 278  8948              ; Gestión de NIVELES.
 279  8948
 280  8948 00           Nivel db 0												 ; Nivel actual del juego.
 281  8949 00 00        Puntero_indice_NIVELES defw 0
 282  894B 00 00        Datos_de_nivel defw 0									 ; Este puntero se va desplazando por los distintos bytes_
 283  894D              ; 														 ; _ que definen el NIVEL.
 284  894D
 285  894D
 286  894D              ; Y todo comienza aquí .....
 287  894D              ;
 288  894D              ; Rutina principal *************************************************************************************************************************************************************************
 289  894D              ;
 290  894D              ;	14/11/22
 291  894D
 292  894D              START
 293  894D
 294  894D 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 295  8950 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 296  8952 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 297  8954 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 298  8956 F3           	DI
 299  8957
 300  8957 3E 07        	ld a,%00000111
 301  8959 CD 33 97     	call Cls
 302  895C
 303  895C              ;	call Pinta_marco
 304  895C
 305  895C CD 2F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 306  895F CD DD 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 307  8962
 308  8962 CD 41 88     4 call Prepara_cajas
 309  8965
 310  8965 CD B0 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 311  8968              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 312  8968 CD 8D 8C     	call Restore_entidad
 313  896B
 314  896B 21 1D 89     	ld hl,Numero_parcial_de_entidades
 315  896E 46           	ld b,(hl)
 316  896F 04           	inc b
 317  8970 05           	dec b
 318  8971 28 2C        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 319  8973
 320  8973              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 321  8973              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 322  8973              ;	Pintamos el resto de entidades:
 323  8973
 324  8973              ;	INICIA ENTIDADES !!!!!
 325  8973
 326  8973 C5           1 push bc  												; Guardo el contador de entidades.
 327  8974 CD 0A 8C     	call Inicia_Puntero_objeto
 328  8977 CD 47 97     	call Recompone_posicion_inicio
 329  897A CD 83 91     	call Draw
 330  897D CD A0 7F     	call Guarda_foto_registros
 331  8980
 332  8980 3A 13 89     	ld a,(Ctrl_1)
 333  8983 CB 6F        	bit 5,a
 334  8985 28 0B        	jr z,9F
 335  8987 CB AF        	res 5,a
 336  8989 32 13 89     	ld (Ctrl_1),a
 337  898C 2A 14 89     	ld hl,(Repone_puntero_objeto)
 338  898F 22 DA 88     	ld (Puntero_objeto),hl
 339  8992
 340  8992 CD 52 8C     9 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 341  8995 C1           	pop bc
 342  8996 10 DB        	djnz 1B  											; Decremento el contador de entidades.
 343  8998
 344  8998              ;	call Pinta_marco
 345  8998
 346  8998              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 347  8998
 348  8998 3A 13 89     	ld a,(Ctrl_1)
 349  899B CB 5F        	bit 3,a
 350  899D 20 18        	jr nz,5F											; Loop
 351  899F
 352  899F              ; 	INICIA AMADEUS !!!!!
 353  899F
 354  899F CD B4 8C     3 call Restore_Amadeus
 355  89A2 CD 0A 8C     	call Inicia_Puntero_objeto
 356  89A5 CD 83 91     	call Draw
 357  89A8 CD A0 7F     	call Guarda_foto_registros
 358  89AB 11 80 84     	ld de,Amadeus_db
 359  89AE CD C6 8C     	call Store_Amadeus
 360  89B1
 361  89B1              ; 	INICIA DISPAROS !!!!!
 362  89B1
 363  89B1 CD C6 8B     	call Inicia_Puntero_Disparo_Entidades
 364  89B4 CD CD 8B     	call Inicia_Puntero_Disparo_Amadeus
 365  89B7
 366  89B7              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 367  89B7
 368  89B7 CD B0 8B     5 call Inicia_punteros_de_cajas
 369  89BA CD 8D 8C     	call Restore_entidad
 370  89BD
 371  89BD 3A 13 89     	ld a,(Ctrl_1)
 372  89C0 CB 5F        	bit 3,a
 373  89C2 28 0A        	jr z,6F
 374  89C4
 375  89C4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 376  89C4
 377  89C4 21 13 89     	ld hl,Ctrl_1
 378  89C7 CB 9E        	res 3,(hl)
 379  89C9 CD D4 8B     	call Calcula_numero_de_malotes
 380  89CC 18 07        	jr 7F
 381  89CE
 382  89CE              ; ----------
 383  89CE
 384  89CE 3A 1D 89     6 ld a,(Numero_parcial_de_entidades)
 385  89D1 3C           	inc a
 386  89D2 32 1F 89     	ld (Numero_de_malotes),a
 387  89D5
 388  89D5 AF           7 xor a
 389  89D6 FB           2 ei
 390  89D7 28 FD        	jr z,2B
 391  89D9
 392  89D9 3A 3D 89     	ld a,(Secundero)
 393  89DC 47           	ld b,a
 394  89DD 3A 3E 89     	ld a,(Activa_recarga_cajas)
 395  89E0 B8           	cp b
 396  89E1 28 08        	jr z,8F
 397  89E3
 398  89E3 21 13 89     	ld hl,Ctrl_1
 399  89E6 CB E6        	set 4,(hl)
 400  89E8 AF           	xor a
 401  89E9 18 EB        	jr 2B
 402  89EB
 403  89EB 21 13 89     8 ld hl,Ctrl_1
 404  89EE CB A6        	res 4,(hl)
 405  89F0 F3           	di
 406  89F1
 407  89F1 C3 62 89     	jp 4B
 408  89F4
 409  89F4              ; -----------------------------------------------------------------------------------
 410  89F4
 411  89F4              Frame
 412  89F4
 413  89F4              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 414  89F4              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 415  89F4
 416  89F4              ; PINTAMOS.
 417  89F4
 418  89F4 3E 02            ld a,2
 419  89F6 D3 FE            out ($fe),a
 420  89F8 CD 87 94     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 421  89FB CD C0 94     	call Extrae_foto_disparos
 422  89FE 3E 01            ld a,1
 423  8A00 D3 FE            out ($fe),a
 424  8A02
 425  8A02              ; ----------------------------------------------------------------------
 426  8A02
 427  8A02              ; RELOJES.
 428  8A02
 429  8A02 21 3C 89     	ld hl,Contador_de_frames
 430  8A05 34           	inc (hl)											; 0 - 255
 431  8A06
 432  8A06 3E 3C        	ld a,60
 433  8A08 BE           	cp (hl)
 434  8A09 20 22        	jr nz,13F
 435  8A0B
 436  8A0B 36 00        	ld (hl),0
 437  8A0D
 438  8A0D 21 3D 89     	ld hl,Secundero
 439  8A10 34           	inc (hl)
 440  8A11
 441  8A11 7E           	ld a,(hl)
 442  8A12 E6 01        	and %00000001
 443  8A14 20 10        	jr nz,20F
 444  8A16
 445  8A16 3A 1D 89     	ld a,(Numero_parcial_de_entidades)
 446  8A19 47           	ld b,a
 447  8A1A 3A 1E 89     	ld a,(Entidades_en_curso)
 448  8A1D B8           	cp b
 449  8A1E 28 06        	jr z,20F
 450  8A20 30 04        	jr nc,20F
 451  8A22
 452  8A22 3C           	inc a
 453  8A23 32 1E 89     	ld (Entidades_en_curso),a
 454  8A26
 455  8A26 3E 3C        20 ld a,60
 456  8A28 BE           	cp (hl)
 457  8A29 20 02        	jr nz,13F
 458  8A2B
 459  8A2B 36 00        	ld (hl),0
 460  8A2D
 461  8A2D 21 3F 89     13 ld hl,Habilita_disparo_Amadeus
 462  8A30 11 41 89     	ld de,Temporiza_disparo_Amadeus
 463  8A33 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 464  8A36
 465  8A36 21 42 89     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 466  8A39 11 44 89     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 467  8A3C CD D5 7F     	call Habilita_disparos
 468  8A3F
 469  8A3F              ; COLISIONES.
 470  8A3F
 471  8A3F CD 1D 91     	call Selector_de_impactos
 472  8A42
 473  8A42              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 474  8A42              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 475  8A42              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 476  8A42
 477  8A42 AF           	xor a
 478  8A43 32 31 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 479  8A46
 480  8A46 CD B0 8B     	call Inicia_punteros_de_cajas
 481  8A49 CD 8D 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 482  8A4C              ; 														; _ en DRAW.
 483  8A4C 3A D6 88     	ld a,(Filas)
 484  8A4F A7           	and a
 485  8A50 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 486  8A52 CD 9F 8C     	call Incrementa_punteros_de_cajas
 487  8A55 18 F2        	jr 12B
 488  8A57
 489  8A57              ; ---------------------------------------------------------------------------------------
 490  8A57
 491  8A57 CD 9B 8F     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 492  8A5A 21 00 70     	ld hl,Album_de_fotos
 493  8A5D 22 28 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 494  8A60              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 495  8A60 3A 1D 89     	ld a,(Numero_parcial_de_entidades)
 496  8A63 47               ld b,a
 497  8A64 A7           	and a
 498  8A65 20 16        	jr nz,2F
 499  8A67
 500  8A67 21 13 89     	ld hl,Ctrl_1
 501  8A6A CB 66        	bit 4,(hl)
 502  8A6C C2 E5 8A     	jp nz,4F
 503  8A6F
 504  8A6F 21 13 89     	ld hl,Ctrl_1
 505  8A72 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada.
 506  8A74 3A 3D 89     	ld a,(Secundero)
 507  8A77 3C           	inc a
 508  8A78 32 3E 89     	ld (Activa_recarga_cajas),a							; Pasado 1 seg. se repite la oleada de entidades.
 509  8A7B
 510  8A7B 18 68        	jr 4F
 511  8A7D
 512  8A7D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 513  8A7D
 514  8A7D              ; Código que ejecutamos con cada entidad:
 515  8A7D
 516  8A7D              ; Impacto ???
 517  8A7D
 518  8A7D 3A 1E 89     2 ld a,(Entidades_en_curso)
 519  8A80 A7           	and a
 520  8A81 28 62        	jr z,4F
 521  8A83 47           	ld b,a
 522  8A84
 523  8A84 C5           15 push bc 												; Nº de entidades en curso.
 524  8A85
 525  8A85 3A EF 88     	ld a,(Impacto)
 526  8A88 A7           	and a
 527  8A89 28 14        	jr z,8F
 528  8A8B
 529  8A8B              ; Hay Impacto en esta entidad.
 530  8A8B
 531  8A8B CD 67 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 532  8A8E CD CF 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 533  8A91
 534  8A91              ; -----
 535  8A91
 536  8A91 21 1D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 537  8A94 35           	dec (hl)
 538  8A95 21 1E 89     	ld hl,Entidades_en_curso
 539  8A98 35           	dec (hl)
 540  8A99 21 1C 89     	ld hl,Numero_de_entidades
 541  8A9C 35           	dec (hl)
 542  8A9D 18 27        	jr 7F
 543  8A9F
 544  8A9F              ; -----
 545  8A9F
 546  8A9F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 547  8A9F              ; _con las coordenadas de la entidad almacenada en DRAW.
 548  8A9F
 549  8A9F 3A 13 89     8 ld a,(Ctrl_1)
 550  8AA2 CB 57        	bit 2,a
 551  8AA4 28 20        	jr z,7F
 552  8AA6
 553  8AA6 2A 34 89     	ld hl,(Coordenadas_disparo_certero)
 554  8AA9 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 555  8AAA              ;														; E contiene la coordenada_X del disparo.
 556  8AAA 2A DC 88     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 557  8AAD              ;														; H Coordenado_y de la entidad.
 558  8AAD A7           	and a
 559  8AAE ED 52        	sbc hl,de
 560  8AB0
 561  8AB0 CD 54 91     	call Determina_resultado_comparativa
 562  8AB3 04           	inc b
 563  8AB4 05           	dec b
 564  8AB5
 565  8AB5              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 566  8AB5              ;	jr z,$
 567  8AB5              ;!!!!!!!!!!!!!!!!! Debuggggiiiiiinnnnnngggggggggggg
 568  8AB5
 569  8AB5 28 0F        	jr z,7F
 570  8AB7
 571  8AB7              ; ----- ----- -----
 572  8AB7
 573  8AB7 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 574  8AB9 32 EF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 575  8ABC 21 13 89     	ld hl,Ctrl_1
 576  8ABF CB 96        	res 2,(hl)
 577  8AC1 21 34 89     	ld hl,Coordenadas_disparo_certero
 578  8AC4 36 00        	ld (hl),0
 579  8AC6
 580  8AC6
 581  8AC6 CD 18 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 582  8AC9
 583  8AC9 3A 04 89     	ld a,(Ctrl_0)
 584  8ACC CB 67        	bit 4,a
 585  8ACE 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 586  8AD0
 587  8AD0              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 588  8AD0              ; [[[
 589  8AD0 CD 28 8D     	call Detecta_disparo_entidad
 590  8AD3              ; ]]]
 591  8AD3 CD 77 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 592  8AD6
 593  8AD6 21 04 89     	ld hl,Ctrl_0
 594  8AD9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 595  8ADB AF           	xor a
 596  8ADC 32 05 89     	ld (Obj_dibujado),a
 597  8ADF
 598  8ADF CD 52 8C     6 call Store_Restore_cajas
 599  8AE2
 600  8AE2 C1           	pop bc
 601  8AE3 10 9F        	djnz 15B
 602  8AE5
 603  8AE5              ; Tras la gestión de las entidades, ... AMADEUS.
 604  8AE5
 605  8AE5 CD B4 8C     4 call Restore_Amadeus
 606  8AE8
 607  8AE8 3A EF 88     	ld a,(Impacto)
 608  8AEB A7           	and a
 609  8AEC 20 FE        	jr nz,$
 610  8AEE
 611  8AEE              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 612  8AEE
 613  8AEE CD 48 8B     	call Mov_Amadeus
 614  8AF1
 615  8AF1 3A 04 89     	ld a,(Ctrl_0)
 616  8AF4 CB 67        	bit 4,a
 617  8AF6 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 618  8AF8
 619  8AF8 CD 77 8B     	call Guarda_foto_entidad_a_pintar
 620  8AFB
 621  8AFB 21 04 89     3 ld hl,Ctrl_0
 622  8AFE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 623  8B00 AF           	xor a
 624  8B01 32 05 89     	ld (Obj_dibujado),a
 625  8B04
 626  8B04 11 80 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 627  8B07 CD C6 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 628  8B0A
 629  8B0A CD B9 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 630  8B0D
 631  8B0D              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 632  8B0D
 633  8B0D CD EC 8B     	call Calcula_numero_de_disparotes
 634  8B10 CD D4 8B     9 call Calcula_numero_de_malotes
 635  8B13
 636  8B13 3E 04        	ld a,4
 637  8B15 D3 FE        	out ($fe),a
 638  8B17
 639  8B17 C9           	ret
 640  8B18
 641  8B18              ; --------------------------------------------------------------------------------------------------------------
 642  8B18              ;
 643  8B18              ;	27/03/23
 644  8B18
 645  8B18              Mov_obj
 646  8B18
 647  8B18              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 648  8B18
 649  8B18 AF           	xor a
 650  8B19 32 05 89     	ld (Obj_dibujado),a
 651  8B1C 32 04 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 652  8B1F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 653  8B1F              ; 														; _de la entidad.
 654  8B1F CD 81 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 655  8B22              ;														; Obj_dibujado="0".
 656  8B22              ; Movemos Entidades malignas.
 657  8B22
 658  8B22 21 07 89     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 659  8B25 34           	inc (hl)
 660  8B26 35           	dec (hl)                                            ; Salimos de la rutina.
 661  8B27 C8           	ret z
 662  8B28
 663  8B28 CD 49 9B     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 664  8B2B
 665  8B2B 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 666  8B2E CB 67        	bit 4,a
 667  8B30 C8           	ret z
 668  8B31
 669  8B31              ; Ha habido desplazamiento de la entidad maligna.
 670  8B31              ; Ha llegado a zona de AMADEUS ???
 671  8B31
 672  8B31 3A DD 88     	ld a,(Coordenada_y)
 673  8B34 FE 14        	cp $14
 674  8B36 D4 EA 8E     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 675  8B39              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 676  8B39              ; ---------
 677  8B39
 678  8B39 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 679  8B3B 32 05 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 680  8B3E CD 81 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 681  8B41 CD 98 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 682  8B44 CD 67 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 683  8B47 C9           	ret													; _de la misma.
 684  8B48
 685  8B48              ; --------------------------------------------------------------------------------------------------------------
 686  8B48              ;
 687  8B48              ;	29/1/23
 688  8B48
 689  8B48              Mov_Amadeus
 690  8B48
 691  8B48 AF           	xor a
 692  8B49 32 05 89     	ld (Obj_dibujado),a
 693  8B4C CD 81 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 694  8B4F              ;														; Obj_dibujado="0".
 695  8B4F              ; Movemos Amadeus.
 696  8B4F
 697  8B4F CD F1 8C     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 698  8B52 3A 04 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 699  8B55 CB 67        	bit 4,a
 700  8B57 C8           	ret z
 701  8B58
 702  8B58              ; ---------
 703  8B58
 704  8B58 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 705  8B5A 32 05 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 706  8B5D CD 81 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 707  8B60 CD 98 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 708  8B63 CD 67 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 709  8B66 C9           	ret													; _de la nave.
 710  8B67
 711  8B67              ; --------------------------------------------------------------------------------------------------------------
 712  8B67              ;
 713  8B67              ;	31/01/23
 714  8B67              ;
 715  8B67              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 716  8B67
 717  8B67              Guarda_foto_entidad_a_borrar
 718  8B67
 719  8B67 CD 5D 94     	call Prepara_draw
 720  8B6A CD 97 93     	call calcula_CColumnass
 721  8B6D CD CE 93     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 722  8B70 CD 23 94     	call Define_rutina_de_impresion
 723  8B73 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 724  8B76 C9           	ret
 725  8B77
 726  8B77              ; --------------------------------------------------------------------------------------------------------------
 727  8B77              ;
 728  8B77              ;	31/01/23
 729  8B77              ;
 730  8B77              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 731  8B77              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 732  8B77
 733  8B77              Guarda_foto_entidad_a_pintar
 734  8B77
 735  8B77 CD A4 8B     	call Repone_pintar
 736  8B7A CD 83 91     	call Draw
 737  8B7D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 738  8B80 C9           	ret
 739  8B81
 740  8B81              ; --------------------------------------------------------------------------------------------------------------
 741  8B81              ;
 742  8B81              ;
 743  8B81
 744  8B81 21 D6 88     Prepara_var_pintado_borrado	ld hl,Filas
 745  8B84 3A 05 89     	ld a,(Obj_dibujado)
 746  8B87 A7           	and a
 747  8B88 28 05        	jr z,1F
 748  8B8A 11 FA 88     	ld de,Variables_de_pintado
 749  8B8D 18 03        	jr 2F
 750  8B8F 11 F0 88     1 ld de,Variables_de_borrado
 751  8B92 01 08 00     2 ld bc,8
 752  8B95 ED B0        	ldir
 753  8B97 C9           	ret
 754  8B98
 755  8B98              ; --------------------------------------------------------------------------------------------------------------
 756  8B98
 757  8B98 21 F0 88     Repone_borrar ld hl,Variables_de_borrado
 758  8B9B 11 D6 88     	ld de,Filas
 759  8B9E 01 08 00     	ld bc,8
 760  8BA1 ED B0        	ldir
 761  8BA3 C9           	ret
 762  8BA4
 763  8BA4 21 FA 88     Repone_pintar ld hl,Variables_de_pintado
 764  8BA7 11 D6 88     	ld de,Filas
 765  8BAA 01 08 00     	ld bc,8
 766  8BAD ED B0        	ldir
 767  8BAF C9           	ret
 768  8BB0
 769  8BB0              ; *************************************************************************************************************************************************************
 770  8BB0              ;
 771  8BB0              ; 8/1/23
 772  8BB0              ;
 773  8BB0              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 774  8BB0              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 775  8BB0              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 776  8BB0
 777  8BB0              ; Destruye HL y DE !!!!!
 778  8BB0
 779  8BB0              Inicia_punteros_de_cajas
 780  8BB0
 781  8BB0 21 68 84     	ld hl,Indice_de_cajas
 782  8BB3 CD 04 8C         call Extrae_address
 783  8BB6 22 16 89         ld (Puntero_store_caja),hl
 784  8BB9 21 6A 84     	ld hl,Indice_de_cajas+2
 785  8BBC 22 1A 89     	ld (Indice_restore_caja),hl
 786  8BBF CD 04 8C     	call Extrae_address
 787  8BC2 22 18 89     	ld (Puntero_restore_caja),hl
 788  8BC5 C9               ret
 789  8BC6
 790  8BC6              ; *************************************************************************************************************************************************************
 791  8BC6              ;
 792  8BC6              ; 8/1/23
 793  8BC6              ;
 794  8BC6              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 795  8BC6
 796  8BC6 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 797  8BC9 22 2D 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 798  8BCC C9           	ret
 799  8BCD 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 800  8BD0 22 2F 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 801  8BD3 C9           	ret
 802  8BD4
 803  8BD4              ; -------------------------------------------------------------------------------------------------------------
 804  8BD4              ;
 805  8BD4              ; 28/2/23
 806  8BD4              ;
 807  8BD4
 808  8BD4              Calcula_numero_de_malotes
 809  8BD4
 810  8BD4 21 00 70     	ld hl,Album_de_fotos
 811  8BD7 EB           	ex de,hl
 812  8BD8 2A 28 89     	ld hl,(Stack_snapshot)
 813  8BDB
 814  8BDB 06 00        	ld b,0
 815  8BDD 7D           	ld a,l
 816  8BDE 93           	sub e
 817  8BDF 28 07        	jr z,1F
 818  8BE1
 819  8BE1              ; Nº de malotes no es "0".
 820  8BE1
 821  8BE1 D6 06        2 sub 6
 822  8BE3 04           	inc b
 823  8BE4 A7           	and a
 824  8BE5 20 FA        	jr nz,2B
 825  8BE7 78           	ld a,b
 826  8BE8
 827  8BE8 32 1F 89     1 ld (Numero_de_malotes),a
 828  8BEB C9           	ret
 829  8BEC
 830  8BEC              ; -------------------------------------------------------------------------------------------------------------
 831  8BEC              ;
 832  8BEC              ; 28/2/23
 833  8BEC              ;
 834  8BEC
 835  8BEC              Calcula_numero_de_disparotes
 836  8BEC
 837  8BEC 21 85 70     	ld hl,Album_de_fotos_disparos
 838  8BEF EB           	ex de,hl
 839  8BF0 2A 2A 89     	ld hl,(Stack_snapshot_disparos)
 840  8BF3
 841  8BF3 06 00        	ld b,0
 842  8BF5 7D           	ld a,l
 843  8BF6 93           	sub e
 844  8BF7 28 07        	jr z,1F
 845  8BF9
 846  8BF9              ; Nº de malotes no es "0".
 847  8BF9
 848  8BF9 D6 06        2 sub 6
 849  8BFB 04           	inc b
 850  8BFC A7           	and a
 851  8BFD 20 FA        	jr nz,2B
 852  8BFF 78           	ld a,b
 853  8C00
 854  8C00 32 2C 89     1 ld (Numero_de_disparotes),a
 855  8C03 C9           	ret
 856  8C04              ; *************************************************************************************************************************************************************
 857  8C04              ;
 858  8C04              ; 20/10/22
 859  8C04              ;
 860  8C04              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 861  8C04              ;
 862  8C04              ; Destruye el puntero y DE !!!!!
 863  8C04
 864  8C04 5E           Extrae_address ld e,(hl)
 865  8C05 23           	inc hl
 866  8C06 56           	ld d,(hl)
 867  8C07 2B           	dec hl
 868  8C08 EB           	ex de,hl
 869  8C09 C9           	ret
 870  8C0A
 871  8C0A              ; *************************************************************************************************************************************************************
 872  8C0A              ;
 873  8C0A              ;	7/2/23
 874  8C0A              ;
 875  8C0A              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 876  8C0A              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 877  8C0A              ;
 878  8C0A              ;   Destruye HL y BC !!!!!,
 879  8C0A              ;
 880  8C0A              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 881  8C0A              ;					"0" ..... Izquierda.
 882  8C0A
 883  8C0A              Inicia_Puntero_objeto
 884  8C0A
 885  8C0A 3A EA 88     	ld a,(Cuad_objeto)
 886  8C0D E6 01        	and 1
 887  8C0F F5           	push af
 888  8C10 CC 2E 8C     	call z,Inicia_puntero_objeto_izq
 889  8C13 F1           	pop af
 890  8C14 28 2B        	jr z,1F
 891  8C16 CD 1B 8C     	call Inicia_puntero_objeto_der
 892  8C19 18 26        	jr 1F
 893  8C1B
 894  8C1B              ; Arrancamos desde la parte izquierda de la pantalla.
 895  8C1B              ; Iniciamos (Indice_Sprite_der).
 896  8C1B
 897  8C1B 2A E0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 898  8C1E 22 E4 88     	ld (Puntero_DESPLZ_der),hl
 899  8C21 CD 04 8C     	call Extrae_address
 900  8C24 22 DA 88     	ld (Puntero_objeto),hl
 901  8C27
 902  8C27 2A E2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 903  8C2A 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 904  8C2D C9           	ret
 905  8C2E
 906  8C2E              ; Arrancamos desde la parte derecha de la pantalla.
 907  8C2E              ; Iniciamos (Indice_Sprite_izq).
 908  8C2E
 909  8C2E 2A E2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 910  8C31 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 911  8C34 CD 04 8C     	call Extrae_address
 912  8C37 22 DA 88     	ld (Puntero_objeto),hl
 913  8C3A
 914  8C3A 2A E0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 915  8C3D 22 E4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 916  8C40 C9           	ret
 917  8C41
 918  8C41              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 919  8C41
 920  8C41 21 38 83     1 ld hl,Amadeus
 921  8C44 ED 4B DA 88  	ld bc,(Puntero_objeto)
 922  8C48 B7 ED 42     	sub hl,bc
 923  8C4B C0           	ret nz
 924  8C4C 21 04 89     	ld hl,Ctrl_0
 925  8C4F CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 926  8C51 C9           	ret 												; _de nuestra nave en los extremos.
 927  8C52
 928  8C52              ; *************************************************************************************************************************************************************
 929  8C52              ;
 930  8C52              ;	14/5/23
 931  8C52              ;
 932  8C52              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 933  8C52              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 934  8C52
 935  8C52              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
 936  8C52              ;	_de la 2ª y 3ª entidad respectivamente.
 937  8C52
 938  8C52              Store_Restore_cajas
 939  8C52
 940  8C52 E5           	push hl
 941  8C53 D5           	push de
 942  8C54 C5            	push bc
 943  8C55
 944  8C55              ;	STORE !!!!!
 945  8C55              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 946  8C55
 947  8C55 21 D6 88     	ld hl,Filas
 948  8C58 ED 5B 16 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
 949  8C5C 01 3D 00     	ld bc,61
 950  8C5F ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 951  8C61
 952  8C61              ; 	Entidad_sospechosa. 20/4/23
 953  8C61
 954  8C61 3A EF 88     	ld a,(Impacto)
 955  8C64 A7           	and a
 956  8C65 28 0C        	jr z,1F
 957  8C67
 958  8C67 2A 16 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 959  8C6A 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 960  8C6D A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 961  8C6E ED 4A        	adc hl,bc 											; _ "0" más adelante.
 962  8C70 22 32 89     	ld (Entidad_sospechosa_de_colision),hl
 963  8C73
 964  8C73              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 965  8C73
 966  8C73 2A 18 89     1 ld hl,(Puntero_restore_caja)
 967  8C76 7E           	ld a,(hl)
 968  8C77 A7           	and a
 969  8C78 F5           	push af
 970  8C79 28 08        	jr z,2F
 971  8C7B
 972  8C7B 11 D6 88     	ld de,Filas
 973  8C7E 01 3D 00     	ld bc,61
 974  8C81 ED B0        	ldir
 975  8C83
 976  8C83 CD 9F 8C     2 call Incrementa_punteros_de_cajas
 977  8C86 F1           	pop af
 978  8C87 28 EA        	jr z,1B
 979  8C89
 980  8C89 C1           	pop bc
 981  8C8A D1           	pop de
 982  8C8B E1           	pop hl
 983  8C8C
 984  8C8C C9           	ret
 985  8C8D
 986  8C8D              ; **************************************************************************************************
 987  8C8D              ;
 988  8C8D              ;	12/05/23
 989  8C8D              ;
 990  8C8D              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
 991  8C8D
 992  8C8D E5           Restore_entidad push hl
 993  8C8E D5           	push de
 994  8C8F C5            	push bc
 995  8C90
 996  8C90 2A 16 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
 997  8C93 11 D6 88     	ld de,Filas
 998  8C96 01 3D 00     	ld bc,61
 999  8C99 ED B0        	ldir
1000  8C9B
1001  8C9B C1           	pop bc
1002  8C9C D1           	pop de
1003  8C9D E1           	pop hl
1004  8C9E C9           	ret
1005  8C9F
1006  8C9F
1007  8C9F              ; **************************************************************************************************
1008  8C9F              ;
1009  8C9F              ;	08/05/23
1010  8C9F              ;
1011  8C9F              ;	Incrementamos los dos punteros de entidades. (+1).
1012  8C9F
1013  8C9F 2A 18 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1014  8CA2 22 16 89     	ld (Puntero_store_caja),hl
1015  8CA5 2A 1A 89     	ld hl,(Indice_restore_caja)
1016  8CA8 23           	inc hl
1017  8CA9 23           	inc hl
1018  8CAA 22 1A 89     	ld (Indice_restore_caja),hl
1019  8CAD CD 04 8C         call Extrae_address
1020  8CB0 22 18 89         ld (Puntero_restore_caja),hl
1021  8CB3 C9               ret
1022  8CB4
1023  8CB4              ; **************************************************************************************************
1024  8CB4              ;
1025  8CB4              ;	25/01/23
1026  8CB4              ;
1027  8CB4              ;	Restore_Amadeus
1028  8CB4              ;
1029  8CB4              ;	Cargamos en DRAW los parámetros de Amadeus.
1030  8CB4              ;
1031  8CB4
1032  8CB4 E5           Restore_Amadeus	push hl
1033  8CB5 D5           	push de
1034  8CB6 C5            	push bc
1035  8CB7 21 80 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1036  8CBA 11 D6 88     	ld de,Filas
1037  8CBD 01 3D 00     	ld bc,61
1038  8CC0 ED B0        	ldir
1039  8CC2 C1           	pop bc
1040  8CC3 D1           	pop de
1041  8CC4 E1           	pop hl
1042  8CC5 C9           	ret
1043  8CC6
1044  8CC6              ; *************************************************************************************************************************************************************
1045  8CC6              ;
1046  8CC6              ;	29/04/23
1047  8CC6              ;
1048  8CC6              ;	Store_Amadeus
1049  8CC6              ;
1050  8CC6              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1051  8CC6              ;
1052  8CC6              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1053  8CC6              ;
1054  8CC6              ;	DESTRUYE: HL y BC y DE.
1055  8CC6
1056  8CC6 21 D6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1057  8CC9 01 3D 00     	ld bc,61
1058  8CCC ED B0        	ldir
1059  8CCE C9           	ret
1060  8CCF
1061  8CCF              ; -----------------------------------------------------------
1062  8CCF              ;
1063  8CCF              ;	27/04/23
1064  8CCF              ;
1065  8CCF              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1066  8CCF              ;
1067  8CCF              ;	Destruye: HL,BC,DE,A
1068  8CCF
1069  8CCF 21 D6 88     Borra_datos_entidad ld hl,Filas
1070  8CD2 01 3C 00     	ld bc,60
1071  8CD5 AF           	xor a
1072  8CD6 77           	ld (hl),a
1073  8CD7 11 D7 88     	ld de,Filas+1
1074  8CDA ED B0        	ldir
1075  8CDC C9           	ret
1076  8CDD
1077  8CDD              ; -----------------------------------------------------------
1078  8CDD
1079  8CDD              ; Teclado.
1080  8CDD
1081  8CDD 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1082  8CDF DB FE        	in a,($fe)
1083  8CE1 E6 01        	and $01
1084  8CE3 28 02        	jr z,1f
1085  8CE5 18 F6        	jr Pulsa_ENTER
1086  8CE7 C9           1 ret
1087  8CE8
1088  8CE8              ; **************************************************************************************************
1089  8CE8              ;
1090  8CE8              ; Temporización.
1091  8CE8
1092  8CE8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1093  8CE8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1094  8CE8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1095  8CE8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1096  8CE8
1097  8CE8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1098  8CE8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1099  8CE8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1100  8CE8
1101  8CE8              ; A partir de $4f61 no hace falta DELAY.
1102  8CE8
1103  8CE8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1104  8CE8
1105  8CE8 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1106  8CEB 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1107  8CEC 78           	LD A,B
1108  8CED A7           	AND A
1109  8CEE 20 FB        	JR NZ,wait
1110  8CF0 C9           	RET
1111  8CF1
1112  8CF1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1113  8CF1              ;
1114  8CF1              ;	5/3/23
1115  8CF1              ;
1116  8CF1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1117  8CF1
1118  8CF1              Movimiento_Amadeus
1119  8CF1
1120  8CF1              ; Disparo.
1121  8CF1
1122  8CF1 3A 3F 89     	ld a,(Habilita_disparo_Amadeus)
1123  8CF4 A7           	and a
1124  8CF5 20 02        	jr nz,1F
1125  8CF7 18 15        	jr 2F
1126  8CF9
1127  8CF9 3E F7        1 ld a,$f7													; "5" para disparar.
1128  8CFB DB FE        	in a,($fe)
1129  8CFD E6 10        	and $10
1130  8CFF
1131  8CFF F5           	push af
1132  8D00 CC 66 8D     	call z,Genera_disparo
1133  8D03 F1           	pop af
1134  8D04 20 08        	jr nz,2F
1135  8D06
1136  8D06 3A 3F 89     	ld a,(Habilita_disparo_Amadeus)
1137  8D09 EE 01        	xor 1
1138  8D0B 32 3F 89     	ld (Habilita_disparo_Amadeus),a
1139  8D0E
1140  8D0E 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1141  8D10 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1142  8D12 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1143  8D14 CC E9 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1144  8D17 3E F7        	ld a,$f7
1145  8D19 DB FE        	in a,($fe)
1146  8D1B E6 01        	and $01
1147  8D1D C8           	ret z
1148  8D1E
1149  8D1E 3E F7        	ld a,$f7
1150  8D20 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1151  8D22 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1152  8D24 CC CB 97     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1153  8D27 C9           	ret
1154  8D28
1155  8D28              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1156  8D28              ;
1157  8D28              ;	Rutina provisional para que los malotes cagen balas.
1158  8D28
1159  8D28              Detecta_disparo_entidad
1160  8D28
1161  8D28 3A 42 89     	ld a,(Habilita_disparo_entidad)
1162  8D2B A7           	and a
1163  8D2C C8           	ret z
1164  8D2D 3E 7F        	ld a,$7f
1165  8D2F DB FE        	in a,($fe)
1166  8D31 E6 01        	and 1
1167  8D33 C0           	ret nz
1168  8D34 CD 66 8D     	call Genera_disparo
1169  8D37 C9           	ret
1170  8D38
1171  8D38              ; Pinta indicadores de FILAS. ------------------------------------------------------
1172  8D38
1173  8D38 21 00 40     Pinta_marco ld hl,$4000
1174  8D3B E5           	push hl
1175  8D3C
1176  8D3C CD 5B 8D     	call Pinta_linea
1177  8D3F E1           	pop hl
1178  8D40 3E 80        	ld a,$80
1179  8D42 CD 4E 8D     	call Pinta_columna
1180  8D45
1181  8D45 21 1F 40     	ld hl,$401f
1182  8D48 3E 01        	ld a,1
1183  8D4A CD 4E 8D     	call Pinta_columna
1184  8D4D C9           	ret
1185  8D4E
1186  8D4E 06 BF        Pinta_columna ld b,191
1187  8D50 F5           	push af
1188  8D51 CD 69 94     1 call NextScan
1189  8D54 F1           	pop af
1190  8D55 77           	ld (hl),a
1191  8D56 F5           	push af
1192  8D57 10 F8        	djnz 1B
1193  8D59 F1           	pop af
1194  8D5A C9           	ret
1195  8D5B 36 FF        Pinta_linea ld (hl),$ff
1196  8D5D 54           	ld d,h
1197  8D5E 5D           	ld e,l
1198  8D5F 13           	inc de
1199  8D60 01 1F 00     	ld bc,31
1200  8D63 ED B0        	ldir
1201  8D65 C9           	ret
1202  8D66
1203  8D66              ; ---------------------------------------------------------------
1204  8D66
1205  8D66              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D66              ; ******************************************************************************************************************************************************************************************
   2+ 8D66              ;
   3+ 8D66              ;   17/04/23
   4+ 8D66              ;
   5+ 8D66              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D66              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D66              ;
   8+ 8D66              ;
   9+ 8D66              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D66              ;
  11+ 8D66              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D66              ;               _ hacen las entidades hacia abajo.
  13+ 8D66              ;
  14+ 8D66              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D66              ;
  16+ 8D66              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D66              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D66              ;
  19+ 8D66              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D66              ;           _ la bala.
  21+ 8D66              ;
  22+ 8D66              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D66              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D66              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D66              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D66              ;           _ en el momento de generarse la bala)).
  27+ 8D66
  28+ 8D66              Genera_disparo
  29+ 8D66
  30+ 8D66              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D66              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D66              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D66              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D66              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D66              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D66              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D66
  38+ 8D66              ; Exclusiones:
  39+ 8D66
  40+ 8D66 3A 0E 89         ld a,(Columnas)
  41+ 8D69 47               ld b,a
  42+ 8D6A 3A D7 88         ld a,(Columns)
  43+ 8D6D B8               cp b
  44+ 8D6E C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8D6F
  46+ 8D6F              ; ----- ----- -----
  47+ 8D6F
  48+ 8D6F 3A 04 89         ld a,(Ctrl_0)
  49+ 8D72 CB 77            bit 6,a
  50+ 8D74 20 06            jr nz,14F
  51+ 8D76
  52+ 8D76 3A DD 88         ld a,(Coordenada_y)
  53+ 8D79 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8D7B D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8D7C
  56+ 8D7C 21 00 80     14 ld hl,Indice_disparo
  57+ 8D7F 3A DE 88         ld a,(CTRL_DESPLZ)
  58+ 8D82 4F               ld c,a
  59+ 8D83 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8D85              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8D85              ;                                            ""        ""       "f9", B="1"
  62+ 8D85              ;                                            ""        ""       "fb", B="2"
  63+ 8D85              ;                                            ""        ""       "fb", B="3"
  64+ 8D85 A7               and a
  65+ 8D86 28 10            jr z,1F
  66+ 8D88 E6 01            and 1
  67+ 8D8A C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8D8B
  69+ 8D8B 79               ld a,c
  70+ 8D8C 16 F9            ld d,$f9
  71+ 8D8E 23           2 inc hl
  72+ 8D8F 23               inc hl
  73+ 8D90 04               inc b
  74+ 8D91 BA               cp d
  75+ 8D92 28 04            jr z,1F
  76+ 8D94 14               inc d
  77+ 8D95 14               inc d
  78+ 8D96 18 F6            jr 2B
  79+ 8D98
  80+ 8D98 CD 04 8C     1 call Extrae_address
  81+ 8D9B E5               push hl
  82+ 8D9C FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8D9E DD 21 FC 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8DA2
  85+ 8DA2              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8DA2              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8DA2
  88+ 8DA2 3A 04 89         ld a,(Ctrl_0)
  89+ 8DA5 CB 77            bit 6,a
  90+ 8DA7 20 04            jr nz,19F
  91+ 8DA9
  92+ 8DA9 AF               xor a
  93+ 8DAA 32 42 89         ld (Habilita_disparo_entidad),a
  94+ 8DAD
  95+ 8DAD 3A EA 88     19 ld a,(Cuad_objeto)
  96+ 8DB0 FE 02            cp 2
  97+ 8DB2 38 66            jr c,3F
  98+ 8DB4 28 64            jr z,3F
  99+ 8DB6
 100+ 8DB6              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8DB6
 102+ 8DB6 E6 01            and 1
 103+ 8DB8 28 30            jr z,4F
 104+ 8DBA
 105+ 8DBA              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8DBA              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8DBA              ;
 108+ 8DBA              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8DBA              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8DBA              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8DBA
 112+ 8DBA 2A D8 88     	ld hl,(Posicion_actual)
 113+ 8DBD
 114+ 8DBD              ;   Amadeus o entidad ???.
 115+ 8DBD
 116+ 8DBD 3A 04 89         ld a,(Ctrl_0)
 117+ 8DC0 CB 77            bit 6,a
 118+ 8DC2 28 0A            jr z,8F
 119+ 8DC4
 120+ 8DC4              ; 	Dispara Amadeus.
 121+ 8DC4
 122+ 8DC4 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8DC6 CD 78 94         call PreviousScan
 124+ 8DC9 CD 78 94         call PreviousScan
 125+ 8DCC
 126+ 8DCC              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8DCC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8DCC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8DCC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8DCC
 131+ 8DCC 18 11            jr 10F
 132+ 8DCE
 133+ 8DCE              ; 	Dispara Entidad.
 134+ 8DCE
 135+ 8DCE 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8DD1              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8DD1
 138+ 8DD1              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8DD1              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8DD1
 141+ 8DD1 C5               push bc
 142+ 8DD2 06 10            ld b,16
 143+ 8DD4 CD 69 94     9 call NextScan
 144+ 8DD7 10 FB            djnz 9B
 145+ 8DD9 C1               pop bc
 146+ 8DDA CD 44 8E         call Ajusta_disparo_parte_izquierda
 147+ 8DDD 18 06            jr 17F
 148+ 8DDF
 149+ 8DDF              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8DDF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8DDF              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8DDF              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8DDF
 154+ 8DDF CD 44 8E     10 call Ajusta_disparo_parte_izquierda
 155+ 8DE2 CD B9 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8DE5              ;                                                      ; _al generar el disparo.
 157+ 8DE5
 158+ 8DE5              ; 	LLegados a este punto tendremos:
 159+ 8DE5              ;
 160+ 8DE5              ;       Puntero_objeto_disparo en IY.
 161+ 8DE5              ;       Rutinas_de_impresion en IX.
 162+ 8DE5              ;       Puntero_de_impresion en HL.
 163+ 8DE5              ;       Impacto/Dirección en BC.
 164+ 8DE5
 165+ 8DE5 CD 4C 8E     17 call Almacena_disparo
 166+ 8DE8 18 52            jr 6F                                             ; RET.
 167+ 8DEA
 168+ 8DEA              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8DEA              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8DEA              ;
 171+ 8DEA              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8DEA              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8DEA              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8DEA
 175+ 8DEA 2A D8 88     4 ld hl,(Posicion_actual)
 176+ 8DED
 177+ 8DED              ;   Amadeus o entidad ???.
 178+ 8DED
 179+ 8DED 3A 04 89         ld a,(Ctrl_0)
 180+ 8DF0 CB 77            bit 6,a
 181+ 8DF2 28 0A            jr z,11F
 182+ 8DF4
 183+ 8DF4              ; 	Dispara Amadeus.
 184+ 8DF4
 185+ 8DF4 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8DF6 CD 78 94         call PreviousScan
 187+ 8DF9 CD 78 94         call PreviousScan
 188+ 8DFC
 189+ 8DFC              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8DFC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8DFC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8DFC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8DFC
 194+ 8DFC 18 11            jr 13F
 195+ 8DFE
 196+ 8DFE              ; 	Dispara Entidad.
 197+ 8DFE
 198+ 8DFE 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8E01              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8E01
 201+ 8E01              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8E01              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8E01
 204+ 8E01 C5               push bc
 205+ 8E02 06 10            ld b,16
 206+ 8E04 CD 69 94     12 call NextScan
 207+ 8E07 10 FB            djnz 12B
 208+ 8E09 C1               pop bc
 209+ 8E0A
 210+ 8E0A CD 3D 8E         call Ajusta_disparo_parte_derecha
 211+ 8E0D 18 06            jr 18F
 212+ 8E0F
 213+ 8E0F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8E0F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8E0F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8E0F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8E0F
 218+ 8E0F CD 3D 8E     13 call Ajusta_disparo_parte_derecha
 219+ 8E12 CD B9 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8E15              ;                                                       ; _al generar el disparo.
 221+ 8E15
 222+ 8E15              ; LLegados a este punto tendremos:
 223+ 8E15              ;
 224+ 8E15              ;       Puntero_objeto_disparo en IY.
 225+ 8E15              ;       Rutinas_de_impresion en IX.
 226+ 8E15              ;       Puntero_de_impresion en HL.
 227+ 8E15              ;       Impacto/Dirección en BC.
 228+ 8E15
 229+ 8E15 CD 4C 8E     18 call Almacena_disparo
 230+ 8E18 18 22            jr 6F                                               ; RET.
 231+ 8E1A
 232+ 8E1A              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8E1A
 234+ 8E1A 28 11        3 jr z,5F
 235+ 8E1C
 236+ 8E1C              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8E1C              ;
 238+ 8E1C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8E1C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8E1C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8E1C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8E1C
 243+ 8E1C              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8E1C              ;	   ""        ""       "f9", B="1"
 245+ 8E1C              ;	   ""        ""       "fb", B="2"
 246+ 8E1C              ; 	   ""        ""       "fb", B="3"
 247+ 8E1C
 248+ 8E1C 2A D8 88     	ld hl,(Posicion_actual)
 249+ 8E1F CD 69 94     	call NextScan
 250+ 8E22
 251+ 8E22              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8E22              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8E22              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8E22              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8E22
 256+ 8E22 CD 44 8E         call Ajusta_disparo_parte_izquierda
 257+ 8E25
 258+ 8E25              ; 	No se produce impacto. B="$80"
 259+ 8E25              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8E25
 261+ 8E25 01 80 80         ld bc,$8080
 262+ 8E28
 263+ 8E28              ; 	LLegados a este punto tendremos:
 264+ 8E28              ;
 265+ 8E28              ;       Puntero_objeto_disparo en IY.
 266+ 8E28              ;       Rutinas_de_impresion en IX.
 267+ 8E28              ;       Puntero_de_impresion en HL.
 268+ 8E28              ;       Impacto/Dirección en BC.
 269+ 8E28
 270+ 8E28 CD 4C 8E         call Almacena_disparo
 271+ 8E2B 18 0F            jr 6F                                           ; RET.
 272+ 8E2D
 273+ 8E2D              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8E2D              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8E2D              ;
 276+ 8E2D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8E2D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8E2D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8E2D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8E2D
 281+ 8E2D 2A D8 88     5 ld hl,(Posicion_actual)
 282+ 8E30 CD 69 94     	call NextScan
 283+ 8E33
 284+ 8E33              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8E33              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8E33              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8E33              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8E33
 289+ 8E33 CD 3D 8E         call Ajusta_disparo_parte_derecha
 290+ 8E36
 291+ 8E36              ; 	No se produce impacto. B="$80"
 292+ 8E36              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8E36
 294+ 8E36 01 80 80     15 ld bc,$8080
 295+ 8E39
 296+ 8E39              ; 	LLegados a este punto tendremos:
 297+ 8E39              ;
 298+ 8E39              ;       Puntero_objeto_disparo en IY.
 299+ 8E39              ;       Rutinas_de_impresion en IX.
 300+ 8E39              ;       Puntero_de_impresion en HL.
 301+ 8E39              ;       Impacto/Dirección en BC.
 302+ 8E39
 303+ 8E39 CD 4C 8E         call Almacena_disparo
 304+ 8E3C
 305+ 8E3C C9           6 ret
 306+ 8E3D
 307+ 8E3D              ; ----------------------------------------------------------------
 308+ 8E3D              ;
 309+ 8E3D              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8E3D              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8E3D              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8E3D
 313+ 8E3D 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8E3E FE 02            cp 2
 315+ 8E40 38 01            jr c,1F
 316+ 8E42 23               inc hl
 317+ 8E43 C9           1 ret
 318+ 8E44
 319+ 8E44 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8E45 FE 01        	cp 1
 321+ 8E47 20 01        	jr nz,1F
 322+ 8E49 2B           	dec hl
 323+ 8E4A 2B           1 dec hl
 324+ 8E4B C9               ret
 325+ 8E4C
 326+ 8E4C              ; ----------------------------------------------------------------
 327+ 8E4C              ;
 328+ 8E4C              ;   25/02/23
 329+ 8E4C              ;
 330+ 8E4C              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8E4C              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8E4C              ;
 333+ 8E4C              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8E4C              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8E4C
 336+ 8E4C              Almacena_disparo
 337+ 8E4C
 338+ 8E4C E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8E4D F1               pop af
 340+ 8E4E 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8E4F
 342+ 8E4F 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8E50 E6 01            and 1
 344+ 8E52 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8E54              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8E54              ; 	Dispara AMADEUS.
 347+ 8E54
 348+ 8E54              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8E54              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8E54              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8E54              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8E54
 353+ 8E54 C5               push bc
 354+ 8E55 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8E58 2A 2F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8E5B A7               and a
 357+ 8E5C ED 42            sbc hl,bc
 358+ 8E5E CC CD 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8E61 C1               pop bc
 360+ 8E62 28 54            jr z,4F
 361+ 8E64
 362+ 8E64 2A 2F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8E67 23               inc hl
 364+ 8E68 23               inc hl
 365+ 8E69 22 2F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8E6C              ;                                                   ; _ Disparo_(+1).
 367+ 8E6C 18 18            jr 2F
 368+ 8E6E
 369+ 8E6E              ; Dispara una entidad.
 370+ 8E6E
 371+ 8E6E C5           1 push bc
 372+ 8E6F 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8E72 2A 2D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8E75 A7               and a
 375+ 8E76 ED 42            sbc hl,bc
 376+ 8E78 CC C6 8B         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8E7B C1               pop bc
 378+ 8E7C 28 3A            jr z,4F
 379+ 8E7E
 380+ 8E7E 2A 2D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8E81 23               inc hl
 382+ 8E82 23               inc hl
 383+ 8E83 22 2D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8E86              ;                                                   ; _ Disparo_(+1).
 385+ 8E86 CD 04 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8E89              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8E89              ;
 388+ 8E89              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8E89              ;                                                     Rutinas_de_impresion en IX.
 390+ 8E89              ;                                                     Puntero_de_impresion en HL.
 391+ 8E89              ;                                                     Impacto/Dirección en BC.
 392+ 8E89
 393+ 8E89 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8E8A 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8E8B 23               inc hl                                          ; _ al siguiente.
 396+ 8E8C A7               and a
 397+ 8E8D 20 C0            jr nz,3B
 398+ 8E8F
 399+ 8E8F 08               ex af,af
 400+ 8E90 ED 73 24 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8E94 F9               ld sp,hl
 402+ 8E95
 403+ 8E95 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8E97 F5               push af                                         ; Puntero de impresión.
 405+ 8E98 FD E5            push iy                                         ; Puntero objeto.
 406+ 8E9A C5               push bc                                         ; Control.
 407+ 8E9B
 408+ 8E9B ED 7B 24 89      ld sp,(Stack)
 409+ 8E9F
 410+ 8E9F              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8E9F
 412+ 8E9F 21 13 89     	ld hl,Ctrl_1
 413+ 8EA2 CB C6        	set 0,(hl)
 414+ 8EA4
 415+ 8EA4 DD E5        	push ix
 416+ 8EA6 E1               pop hl
 417+ 8EA7 F5               push af
 418+ 8EA8 DD E1            pop ix
 419+ 8EAA
 420+ 8EAA CD A0 7F     	call Guarda_foto_registros
 421+ 8EAD
 422+ 8EAD 21 13 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8EB0 CB 86        	res 0,(hl)
 424+ 8EB2
 425+ 8EB2              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8EB2              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8EB2
 428+ 8EB2 CD CD 8B         call Inicia_Puntero_Disparo_Amadeus
 429+ 8EB5 CD C6 8B         call Inicia_Puntero_Disparo_Entidades
 430+ 8EB8
 431+ 8EB8 C9           4 ret
 432+ 8EB9
 433+ 8EB9              ; ----------------------------------------------------------------
 434+ 8EB9              ;
 435+ 8EB9              ;   4/3/23
 436+ 8EB9              ;
 437+ 8EB9              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8EB9              ;   _ al generarse el disparo.
 439+ 8EB9              ;
 440+ 8EB9              ;       "$80" ..... No se produce colisión.
 441+ 8EB9              ;       "$81" ..... Se produce colisión.
 442+ 8EB9
 443+ 8EB9              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8EB9              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8EB9
 446+ 8EB9
 447+ 8EB9 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8EBB E5               push hl                                        ; Puntero de impresión.
 449+ 8EBC
 450+ 8EBC 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8EBE CD DA 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8EC1
 453+ 8EC1 7B               ld a,e
 454+ 8EC2 E6 01            and 1
 455+ 8EC4 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8EC6
 457+ 8EC6 E1               pop hl
 458+ 8EC7 E5               push hl
 459+ 8EC8 CD 69 94         call NextScan
 460+ 8ECB
 461+ 8ECB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8ECC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8ECE 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8ED0              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8ED0 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8ED2 CD DA 8E         call Bucle_2
 467+ 8ED5
 468+ 8ED5 43           2 ld b,e
 469+ 8ED6 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8ED7 FD E1            pop iy
 471+ 8ED9 C9               ret
 472+ 8EDA
 473+ 8EDA               ; ---------- ----------
 474+ 8EDA
 475+ 8EDA 06 02        Bucle_2 ld b,2
 476+ 8EDC FD 7E 00     2 ld a,(iy)
 477+ 8EDF A6               and (hl)
 478+ 8EE0 28 02            jr z,1F
 479+ 8EE2 1E 81            ld e,$81
 480+ 8EE4 23           1 inc hl
 481+ 8EE5 FD 23            inc iy
 482+ 8EE7 10 F3            djnz 2B
 483+ 8EE9 C9               ret
 484+ 8EEA
 485+ 8EEA              ; -------------------------------------------------------------------------------------------------------------
 486+ 8EEA              ;
 487+ 8EEA              ;   11/04/23
 488+ 8EEA              ;
 489+ 8EEA              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8EEA              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8EEA              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8EEA              ;
 493+ 8EEA              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8EEA
 495+ 8EEA              Compara_coordenadas_X
 496+ 8EEA
 497+ 8EEA              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8EEA              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8EEA
 500+ 8EEA              ; Preparamos registros:
 501+ 8EEA
 502+ 8EEA 21 DC 88         ld hl,Filas+6
 503+ 8EED 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8EEE 23               inc hl
 505+ 8EEF 23               inc hl
 506+ 8EF0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8EF1 43               ld b,e
 508+ 8EF2 21 EA 88         ld hl,Filas+20
 509+ 8EF5 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8EF6 21 39 89         ld hl,Coordenadas_X_Entidad
 511+ 8EF9 CD 0A 91         call Guarda_coordenadas_X
 512+ 8EFC
 513+ 8EFC              ; Preparamos registros:
 514+ 8EFC
 515+ 8EFC 21 86 84         ld hl,Amadeus_db+6
 516+ 8EFF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8F00 23               inc hl
 518+ 8F01 23               inc hl
 519+ 8F02 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8F03 7B               ld a,e
 521+ 8F04 08               ex af,af'
 522+ 8F05 21 94 84         ld hl,Amadeus_db+20
 523+ 8F08 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8F09 21 36 89         ld hl,Coordenadas_X_Amadeus
 525+ 8F0C CD 0A 91         call Guarda_coordenadas_X
 526+ 8F0F
 527+ 8F0F              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8F0F              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8F0F
 530+ 8F0F 04               inc b
 531+ 8F10 05               dec b
 532+ 8F11 28 04            jr z,1F
 533+ 8F13 06 03            ld b,3
 534+ 8F15 18 02            jr 2F
 535+ 8F17 06 02        1 ld b,2
 536+ 8F19 08           2 ex af,af'
 537+ 8F1A 3C               inc a
 538+ 8F1B 3D               dec a
 539+ 8F1C 28 04            jr z,5F
 540+ 8F1E 0E 03            ld c,3
 541+ 8F20 18 02            jr 6F
 542+ 8F22 0E 02        5 ld c,2
 543+ 8F24 79           6 ld a,c
 544+ 8F25 08               ex af,af'
 545+ 8F26 11 39 89         ld de,Coordenadas_X_Entidad
 546+ 8F29 1A           4 ld a,(de)
 547+ 8F2A 21 36 89         ld hl,Coordenadas_X_Amadeus
 548+ 8F2D BE           3 cp (hl)
 549+ 8F2E 28 0E            jr z,7F
 550+ 8F30 23               inc hl
 551+ 8F31 0D               dec c
 552+ 8F32 20 F9            jr nz,3B
 553+ 8F34 13               inc de
 554+ 8F35 08               ex af,af'
 555+ 8F36 4F               ld c,a
 556+ 8F37 08               ex af,af'
 557+ 8F38 10 EF            djnz 4B
 558+ 8F3A
 559+ 8F3A              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8F3A
 561+ 8F3A CD 49 91     8 call Limpia_Coordenadas_X
 562+ 8F3D C9               ret
 563+ 8F3E
 564+ 8F3E              7
 565+ 8F3E 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8F40 32 EF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8F43 21 31 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8F46 CB D6            set 2,(hl)
 569+ 8F48 18 F0            jr 8B
 570+ 8F4A
 571+ 8F4A              ; -----------------------------------------------------------------------
 572+ 8F4A              ;
 573+ 8F4A              ;   17/04/23
 574+ 8F4A              ;
 575+ 8F4A
 576+ 8F4A              Detecta_colision_nave_entidad
 577+ 8F4A
 578+ 8F4A              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8F4A
 580+ 8F4A 2A D8 88         ld hl,(Posicion_actual)
 581+ 8F4D CD CE 93         call Calcula_puntero_de_impresion
 582+ 8F50
 583+ 8F50              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8F50              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8F50
 586+ 8F50 DD E5            push ix
 587+ 8F52 E1               pop hl
 588+ 8F53 E5               push hl
 589+ 8F54
 590+ 8F54              ; ----- ----- -----
 591+ 8F54 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8F56 06 0A            ld b,10
 593+ 8F58 CD 88 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8F5B 7B               ld a,e
 595+ 8F5C FE 05            cp 5
 596+ 8F5E 38 0E            jr c,3F
 597+ 8F60
 598+ 8F60              ; LLegados a este punto:
 599+ 8F60              ;
 600+ 8F60              ;   HAY COLISIÓN !!!!!.
 601+ 8F60              ;
 602+ 8F60              ;   .db (Impacto) de Amadeus a "1".
 603+ 8F60              ;   SET el bit3 de (Impacto2).
 604+ 8F60              ;
 605+ 8F60              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8F60
 607+ 8F60 21 99 84         ld hl,Amadeus_db+25
 608+ 8F63 36 01            ld (hl),1
 609+ 8F65 21 31 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8F68 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8F6A CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8F6C 18 18            jr 1F
 613+ 8F6E
 614+ 8F6E              ; -----
 615+ 8F6E
 616+ 8F6E E1           3 pop hl
 617+ 8F6F CD 69 94         call NextScan
 618+ 8F72 E5               push hl
 619+ 8F73 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8F74 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8F76 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8F78 30 0C            jr nc,1F
 623+ 8F7A              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8F7A 10 DC            djnz 2B
 625+ 8F7C
 626+ 8F7C              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8F7C
 628+ 8F7C              ; LLegados a este punto:
 629+ 8F7C              ;
 630+ 8F7C              ;   NO HAY COLISIÓN !!!!!.
 631+ 8F7C              ;
 632+ 8F7C              ;   .db (Impacto) de Amadeus a "0".
 633+ 8F7C              ;   RES el bit2 de (Impacto2).
 634+ 8F7C              ;
 635+ 8F7C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8F7C              ;   Lo colocamos a "0".
 637+ 8F7C
 638+ 8F7C 21 31 89         ld hl,Impacto2
 639+ 8F7F CB 96            res 2,(hl)
 640+ 8F81 2A 32 89         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8F84 36 00            ld (hl),0
 642+ 8F86
 643+ 8F86 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8F87 C9               ret
 645+ 8F88
 646+ 8F88               ; ---------- ----------
 647+ 8F88
 648+ 8F88 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8F89 3A D7 88         ld a,(Columns)
 650+ 8F8C 47               ld b,a
 651+ 8F8D FD 7E 00     2 ld a,(iy)
 652+ 8F90 BE               cp (hl)
 653+ 8F91 28 01            jr z,1F
 654+ 8F93
 655+ 8F93 1C               inc e
 656+ 8F94
 657+ 8F94 23           1 inc hl
 658+ 8F95 FD 23            inc iy
 659+ 8F97 10 F4            djnz 2B
 660+ 8F99 C1               pop bc
 661+ 8F9A C9               ret
 662+ 8F9B
 663+ 8F9B              ; -------------------------------------------------------------------------------------------------------------
 664+ 8F9B              ;
 665+ 8F9B              ;   13/03/23
 666+ 8F9B              ;
 667+ 8F9B              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8F9B              ;
 669+ 8F9B              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8F9B
 671+ 8F9B 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8F9E 7E               ld a,(hl)
 673+ 8F9F A7               and a
 674+ 8FA0 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8FA1
 676+ 8FA1 44               ld b,h
 677+ 8FA2 4D               ld c,l
 678+ 8FA3 2A 2A 89         ld hl,(Stack_snapshot_disparos)
 679+ 8FA6 E5               push hl
 680+ 8FA7 A7               and a
 681+ 8FA8 ED 42            sbc hl,bc
 682+ 8FAA E5               push hl
 683+ 8FAB C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8FAC
 685+ 8FAC E1               pop hl
 686+ 8FAD 54               ld d,h
 687+ 8FAE 5D               ld e,l
 688+ 8FAF 1B               dec de
 689+ 8FB0 ED B8            lddr                                                ; Limpiamos.
 690+ 8FB2
 691+ 8FB2 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 8FB5 22 2A 89         ld (Stack_snapshot_disparos),hl
 693+ 8FB8
 694+ 8FB8 C9               ret
 695+ 8FB9
 696+ 8FB9              ; -------------------------------------------------------------------------------------------------------------
 697+ 8FB9              ;
 698+ 8FB9              ;   28/03/23
 699+ 8FB9              ;
 700+ 8FB9
 701+ 8FB9 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8FBC 2A 2F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8FBF
 704+ 8FBF CD 04 8C     2 call Extrae_address
 705+ 8FC2 7E               ld a,(hl)
 706+ 8FC3 A7               and a
 707+ 8FC4 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8FC6
 709+ 8FC6              ; ----- ----- ----- ----- ----- -----
 710+ 8FC6
 711+ 8FC6 C5               push bc
 712+ 8FC7 CD 83 90         call foto_disparo_a_borrar
 713+ 8FCA
 714+ 8FCA              ; Existe colisión con este disparo???
 715+ 8FCA
 716+ 8FCA 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8FCB 7E               ld a,(hl)
 718+ 8FCC 2B               dec hl
 719+ 8FCD E6 01            and 1
 720+ 8FCF 28 1D            jr z,9F
 721+ 8FD1
 722+ 8FD1              ;   En este punto:
 723+ 8FD1              ;
 724+ 8FD1              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8FD1              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8FD1              ;   _con la entidad).
 727+ 8FD1              ;
 728+ 8FD1              ;   Disparo_2A defw 0                                ; Control.
 729+ 8FD1              ;    defw 0                                          ; Puntero objeto.
 730+ 8FD1              ;    defw 0                                          ; Puntero de impresión.
 731+ 8FD1              ;    defw 0                                          ; Rutina de impresión.
 732+ 8FD1
 733+ 8FD1 E5               push hl
 734+ 8FD2
 735+ 8FD2 06 04            ld b,4
 736+ 8FD4 23           19 inc hl
 737+ 8FD5 10 FD            djnz 19B
 738+ 8FD7
 739+ 8FD7 CD 04 8C         call Extrae_address
 740+ 8FDA CD A8 9A         call Genera_coordenadas_disparo
 741+ 8FDD
 742+ 8FDD              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8FDD
 744+ 8FDD 21 34 89         ld hl,Coordenadas_disparo_certero
 745+ 8FE0 72               ld (hl),d
 746+ 8FE1 23               inc hl
 747+ 8FE2 73               ld (hl),e
 748+ 8FE3
 749+ 8FE3              ; Elimino el disparo de la base de datos.
 750+ 8FE3
 751+ 8FE3 E1               pop hl
 752+ 8FE4 CD FF 90         call Elimina_disparo_de_base_de_datos
 753+ 8FE7 21 31 89         ld hl,Impacto2
 754+ 8FEA CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8FEC
 756+ 8FEC 18 06            jr 11F
 757+ 8FEE
 758+ 8FEE CD AC 90     9 call Mueve_disparo
 759+ 8FF1 CD 83 90         call foto_disparo_a_borrar
 760+ 8FF4
 761+ 8FF4 C1           11 pop bc
 762+ 8FF5 18 04            jr 7F
 763+ 8FF7
 764+ 8FF7              ; ----- ----- ----- ----- ----- -----
 765+ 8FF7
 766+ 8FF7 ED 42        1 sbc hl,bc
 767+ 8FF9 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8FFB 2A 2F 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8FFE 23               inc hl
 770+ 8FFF 23               inc hl
 771+ 9000 22 2F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 9003 18 BA            jr 2B
 773+ 9005 CD CD 8B     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 9008
 775+ 9008 01 66 84         ld bc,Disparo_11
 776+ 900B 2A 2D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 900E
 778+ 900E CD 04 8C     5 call Extrae_address
 779+ 9011 7E               ld a,(hl)
 780+ 9012 A7               and a
 781+ 9013 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 9015
 783+ 9015              ; ----- ----- ----- ----- ----- -----
 784+ 9015
 785+ 9015 C5               push bc
 786+ 9016 CD 83 90         call foto_disparo_a_borrar
 787+ 9019
 788+ 9019              ; Existe colisión con este disparo???
 789+ 9019
 790+ 9019 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 901A 7E               ld a,(hl)
 792+ 901B 2B               dec hl
 793+ 901C E6 01            and 1
 794+ 901E 28 48            jr z,10F
 795+ 9020
 796+ 9020              ; La colisión se produce con Amadeus???
 797+ 9020              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 9020
 799+ 9020 E5               push hl
 800+ 9021
 801+ 9021 06 04            ld b,4
 802+ 9023 23           16 inc hl
 803+ 9024 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 9026 CD 04 8C         call Extrae_address
 805+ 9029 CD A8 9A         call Genera_coordenadas_disparo
 806+ 902C
 807+ 902C 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 902D FE 16            cp $16
 809+ 902F 38 22            jr c,15F
 810+ 9031
 811+ 9031              ; (Colisiones en filas 16 y 17).
 812+ 9031
 813+ 9031 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 9032
 815+ 9032              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 9032
 817+ 9032 21 86 84         ld hl,Amadeus_db+6
 818+ 9035 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 9036 23               inc hl
 820+ 9037 23               inc hl
 821+ 9038 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 9039 21 94 84         ld hl,Amadeus_db+20
 823+ 903C 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 903D 21 36 89         ld hl,Coordenadas_X_Amadeus
 825+ 9040 CD 0A 91         call Guarda_coordenadas_X
 826+ 9043
 827+ 9043 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 9044
 829+ 9044              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 9044
 831+ 9044 06 03            ld b,3
 832+ 9046 21 36 89         ld hl,Coordenadas_X_Amadeus
 833+ 9049 7E           18 ld a,(hl)
 834+ 904A BA               cp d
 835+ 904B 20 03            jr nz,17F
 836+ 904D
 837+ 904D              ; Colisión Amadeus !!!!!!!!!!
 838+ 904D
 839+ 904D E1               pop hl
 840+ 904E 18 09            jr 14F
 841+ 9050
 842+ 9050 23           17 inc hl
 843+ 9051 10 F6            djnz 18B
 844+ 9053
 845+ 9053              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 9053              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 9053
 848+ 9053 E1           15 pop hl
 849+ 9054 23               inc hl
 850+ 9055 35               dec (hl)
 851+ 9056 2B               dec hl
 852+ 9057 18 0F            jr 10F
 853+ 9059
 854+ 9059              ; -----------------------debug
 855+ 9059
 856+ 9059              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 9059              ; _ almacén de coordenadas_X de Amadeus.
 858+ 9059
 859+ 9059 E5           14 push hl
 860+ 905A CD FF 90         call Elimina_disparo_de_base_de_datos
 861+ 905D 21 31 89         ld hl,Impacto2
 862+ 9060 CB CE            set 1,(hl)
 863+ 9062 CD 49 91         call Limpia_Coordenadas_X
 864+ 9065
 865+ 9065 E1               pop hl
 866+ 9066 18 06            jr 12F
 867+ 9068
 868+ 9068 CD AC 90     10 call Mueve_disparo
 869+ 906B CD 83 90         call foto_disparo_a_borrar
 870+ 906E C1           12 pop bc
 871+ 906F
 872+ 906F 18 04            jr 8F
 873+ 9071
 874+ 9071              ; ----- ----- ----- ----- ----- -----
 875+ 9071
 876+ 9071 ED 42        4 sbc hl,bc
 877+ 9073 28 0A            jr z,6F
 878+ 9075
 879+ 9075 2A 2D 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 9078 23               inc hl
 881+ 9079 23               inc hl
 882+ 907A 22 2D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 907D 18 8F            jr 5B
 884+ 907F
 885+ 907F CD C6 8B     6 call Inicia_Puntero_Disparo_Entidades
 886+ 9082 C9               ret
 887+ 9083
 888+ 9083              ; ------------------------------------------------------------------
 889+ 9083
 890+ 9083              foto_disparo_a_borrar
 891+ 9083
 892+ 9083 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 9084 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 9085 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 9086
 896+ 9086 E5               push hl
 897+ 9087 23               inc hl
 898+ 9088 23               inc hl
 899+ 9089 ED 73 24 89      ld (Stack),sp
 900+ 908D F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 908E FD E1            pop iy
 902+ 9090 DD E1            pop ix
 903+ 9092 E1               pop hl
 904+ 9093 ED 7B 24 89      ld sp,(Stack)
 905+ 9097 3A 13 89         ld a,(Ctrl_1)
 906+ 909A CB C7            set 0,a
 907+ 909C 32 13 89         ld (Ctrl_1),a
 908+ 909F CD A0 7F         call Guarda_foto_registros
 909+ 90A2 3A 13 89         ld a,(Ctrl_1)
 910+ 90A5 CB 87            res 0,a
 911+ 90A7 32 13 89         ld (Ctrl_1),a
 912+ 90AA E1               pop hl
 913+ 90AB C9               ret
 914+ 90AC
 915+ 90AC E5           Mueve_disparo push hl
 916+ 90AD 7E               ld a,(hl)
 917+ 90AE 06 04            ld b,4
 918+ 90B0 23           1 inc hl
 919+ 90B1 10 FD            djnz 1B
 920+ 90B3
 921+ 90B3              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 90B3
 923+ 90B3 CD 04 8C         call Extrae_address
 924+ 90B6
 925+ 90B6 E6 01            and 1
 926+ 90B8 28 2B            jr z,2F
 927+ 90BA
 928+ 90BA              ; Disparo hacia arriba, (Amadeus).
 929+ 90BA
 930+ 90BA              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 90BA              ; _ de la dificultad.
 932+ 90BA
 933+ 90BA CD 78 94         call PreviousScan
 934+ 90BD CD 78 94         call PreviousScan
 935+ 90C0 CD 78 94         call PreviousScan
 936+ 90C3
 937+ 90C3              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 90C3
 939+ 90C3 7C               ld a,h
 940+ 90C4 FE 40            cp $40
 941+ 90C6 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 90C8
 943+ 90C8              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 90C8
 945+ 90C8 EB               ex de,hl
 946+ 90C9 06 04            ld b,4
 947+ 90CB 2B           6 dec hl
 948+ 90CC 10 FD            djnz 6B
 949+ 90CE
 950+ 90CE CD FF 90         call Elimina_disparo_de_base_de_datos
 951+ 90D1 E1               pop hl
 952+ 90D2 18 10            jr 7F
 953+ 90D4
 954+ 90D4              ; Se ha desplazado la bala, compruebo colisión.
 955+ 90D4
 956+ 90D4 D5           3 push de
 957+ 90D5 C5               push bc
 958+ 90D6
 959+ 90D6 CD B9 8E         call Comprueba_Colision
 960+ 90D9
 961+ 90D9              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 90D9
 963+ 90D9 78               ld a,b
 964+ 90DA
 965+ 90DA C1               pop bc
 966+ 90DB D1               pop de
 967+ 90DC
 968+ 90DC EB               ex de,hl
 969+ 90DD
 970+ 90DD 73               ld (hl),e
 971+ 90DE 23               inc hl
 972+ 90DF 72               ld (hl),d
 973+ 90E0
 974+ 90E0 E1           4 pop hl
 975+ 90E1 23               inc hl
 976+ 90E2 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 90E3 2B               dec hl
 978+ 90E4 C9           7 ret
 979+ 90E5
 980+ 90E5              ; Disparo hacia abajo, (Entidad).
 981+ 90E5
 982+ 90E5              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 90E5              ; _ de la dificultad.
 984+ 90E5
 985+ 90E5 CD 69 94     2 call NextScan
 986+ 90E8 CD 69 94         call NextScan
 987+ 90EB CD 69 94         call NextScan
 988+ 90EE
 989+ 90EE              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 90EE
 991+ 90EE 7C               ld a,h
 992+ 90EF FE 58            cp $58
 993+ 90F1 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 90F3
 995+ 90F3 EB               ex de,hl
 996+ 90F4 06 04            ld b,4
 997+ 90F6 2B           5 dec hl
 998+ 90F7 10 FD            djnz 5B
 999+ 90F9
1000+ 90F9 CD FF 90         call Elimina_disparo_de_base_de_datos
1001+ 90FC E1               pop hl
1002+ 90FD 18 E5            jr 7B
1003+ 90FF
1004+ 90FF              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 90FF
1006+ 90FF 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 9102 AF               xor a
1008+ 9103 77               ld (hl),a
1009+ 9104 54               ld d,h
1010+ 9105 5D               ld e,l
1011+ 9106 13               inc de
1012+ 9107 ED B0            ldir
1013+ 9109 C9               ret
1014+ 910A
1015+ 910A              ; -----------------------------------------------------------------
1016+ 910A              ;
1017+ 910A              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 910A              ;
1019+ 910A              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 910A              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 910A              ;
1022+ 910A              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 910A              ;
1024+ 910A              ;   INPUTS:
1025+ 910A              ;
1026+ 910A              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 910A              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 910A              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 910A
1030+ 910A              ;   MODIFICA: A, HL, DE y C
1031+ 910A
1032+ 910A 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 910B 79               ld a,c
1034+ 910C E6 01            and 1
1035+ 910E 20 03            jr nz,1F
1036+ 9110 14               inc d
1037+ 9111 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 9113
1039+ 9113              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 9113              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 9113
1042+ 9113 15           1 dec d
1043+ 9114 23           2 inc hl
1044+ 9115 72               ld (hl),d
1045+ 9116
1046+ 9116 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 9117 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 9118 C8               ret z
1049+ 9119
1050+ 9119 AF               xor a
1051+ 911A 5F               ld e,a
1052+ 911B 18 ED            jr Guarda_coordenadas_X
1053+ 911D
1054+ 911D              ; -----------------------------------------------------------------
1055+ 911D              ;
1056+ 911D              ;   12/04/23
1057+ 911D              ;
1058+ 911D
1059+ 911D 3A 31 89     Selector_de_impactos ld a,(Impacto2)
1060+ 9120 A7               and a
1061+ 9121 C8               ret z
1062+ 9122
1063+ 9122 FE 04            cp 4
1064+ 9124 20 09            jr nz,1F
1065+ 9126
1066+ 9126
1067+ 9126              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 9126
1069+ 9126 CD 4A 8F         call Detecta_colision_nave_entidad
1070+ 9129
1071+ 9129 21 31 89         ld hl,Impacto2
1072+ 912C CB 5E            bit 3,(hl)
1073+ 912E C0               ret nz                                               ; Existe colisión, RET.
1074+ 912F
1075+ 912F              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 912F              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 912F
1078+ 912F 21 31 89     1 ld hl,Impacto2
1079+ 9132 CB 4E            bit 1,(hl)
1080+ 9134 28 07            jr z,2F
1081+ 9136
1082+ 9136 21 99 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 9139 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 913B 18 0B            jr 3F
1085+ 913D
1086+ 913D 21 31 89     2 ld hl,Impacto2
1087+ 9140 CB 46            bit 0,(hl)
1088+ 9142 C8               ret z
1089+ 9143
1090+ 9143              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 9143
1092+ 9143 21 13 89         ld hl,Ctrl_1
1093+ 9146 CB D6            set 2,(hl)
1094+ 9148
1095+ 9148 C9           3 ret
1096+ 9149
1097+ 9149              ; -----------------------------------------------------------------
1098+ 9149              ;
1099+ 9149              ;   16/04/23
1100+ 9149              ;
1101+ 9149
1102+ 9149 AF           Limpia_Coordenadas_X xor a
1103+ 914A 06 06            ld b,6
1104+ 914C 21 36 89         ld hl,Coordenadas_X_Amadeus
1105+ 914F 77           1 ld (hl),a
1106+ 9150 23               inc hl
1107+ 9151 10 FC            djnz 1B
1108+ 9153 C9               ret
1109+ 9154
1110+ 9154              ; -----------------------------------------------------------------
1111+ 9154              ;
1112+ 9154              ;   25/04/23
1113+ 9154              ;
1114+ 9154
1115+ 9154              Determina_resultado_comparativa
1116+ 9154
1117+ 9154              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 9154              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 9154              ;
1120+ 9154              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 9154              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 9154              ;
1123+ 9154              ;   SBC HL,DE
1124+ 9154
1125+ 9154 7C               ld a,h
1126+ 9155 06 00            ld b,0
1127+ 9157
1128+ 9157 CD 67 91         call Compara_cositas
1129+ 915A
1130+ 915A 04               inc b
1131+ 915B 05               dec b
1132+ 915C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 915D
1134+ 915D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 915E 06 00            ld b,0
1136+ 9160
1137+ 9160 CD 67 91         call Compara_cositas
1138+ 9163 18 01            jr 2F
1139+ 9165
1140+ 9165 04           1 inc b
1141+ 9166 C9           2 ret
1142+ 9167
1143+ 9167 A7           Compara_cositas and a
1144+ 9168 28 17            jr z,1F
1145+ 916A
1146+ 916A FE FD            cp $fd
1147+ 916C 28 13            jr z,1F
1148+ 916E FE FE            cp $fe
1149+ 9170 28 0F            jr z,1F
1150+ 9172 FE FF            cp $ff
1151+ 9174 28 0B            jr z,1F
1152+ 9176 FE 01            cp $01
1153+ 9178 28 07            jr z,1F
1154+ 917A FE 02            cp $02
1155+ 917C 28 03            jr z,1F
1156+ 917E FE 03            cp $03
1157+ 9180 C0               ret nz
1158+ 9181
1159+ 9181 04           1 inc b
1160+ 9182 C9               ret
1161+ 9183
# file closed: Disparo.asm
1206  9183              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9183              ; ******************************************************************************************************************************************************************************************
   2+ 9183              ;
   3+ 9183              ; 01/23
   4+ 9183              ;
   5+ 9183              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9183
   7+ 9183 CD 5D 94     Draw call Prepara_draw
   8+ 9186 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9187 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9188 28 05        	jr z,2F
  11+ 918A
  12+ 918A 3A EA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 918D 18 0C        	jr 1F
  14+ 918F 2A E8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9192 22 D8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9195 CD 24 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9198              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9198 CD CB 9B     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 919B 3A 04 89     1 ld a,(Ctrl_0)
  20+ 919E CB 6F        	bit 5,a
  21+ 91A0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 91A2
  23+ 91A2 CD BA 91     	call Comprueba_limite_horizontal
  24+ 91A5 CD 4A 92     	call Comprueba_limite_vertical
  25+ 91A8
  26+ 91A8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 91A8
  28+ 91A8 CD 97 93     3 call calcula_CColumnass
  29+ 91AB CD CE 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 91AE CD 23 94     	call Define_rutina_de_impresion
  31+ 91B1
  32+ 91B1 3A 04 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 91B4 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 91B6 32 04 89     	ld (Ctrl_0),a
  35+ 91B9
  36+ 91B9 C9           	ret
  37+ 91BA
  38+ 91BA              ; *******************************************************************************************************************************************************************************************
  39+ 91BA              ;	21/01/23
  40+ 91BA              ;
  41+ 91BA              ; 	Comprueba_limite_horizontal.
  42+ 91BA              ;
  43+ 91BA              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 91BA              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 91BA              ;
  46+ 91BA              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 91BA              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 91BA              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 91BA              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 91BA
  51+ 91BA
  52+ 91BA
  53+ 91BA 3A 04 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 91BD CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 91BF 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 91C1 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 91C3 32 04 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 91C6 18 09            jr 6F
  59+ 91C8 CB 5F        1 bit 3,a
  60+ 91CA 28 0A            jr z,2F
  61+ 91CC E6 F7            and $f7
  62+ 91CE 32 04 89         ld (Ctrl_0),a
  63+ 91D1 CD 24 93     6 call Inicializacion
  64+ 91D4 18 5B            jr 5F
  65+ 91D6 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 91D7
  67+ 91D7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 91D7              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 91D7
  70+ 91D7 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 91D8 2A 0F 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 91DB CD 29 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 91DE 67           	ld h,a
  74+ 91DF EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 91E0 CD 29 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 91E3 67           	ld h,a
  77+ 91E4 A7           	and a
  78+ 91E5 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 91E7 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 91E8 3A EA 88     	ld a,(Cuad_objeto)
  81+ 91EB FE 02        	cp 2
  82+ 91ED 38 1E        	jr c,3F
  83+ 91EF 28 1C        	jr z,3F
  84+ 91F1 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 91F2 28 23            jr z,7F
  86+ 91F4 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 91F6 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 91F8 E1           	pop hl
  89+ 91F9
  90+ 91F9              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 91F9              ; _para indicar con E="2" en caso necesario.
  92+ 91F9
  93+ 91F9 E5               push hl
  94+ 91FA C5               push bc
  95+ 91FB CD 29 97     	call calcula_tercio
  96+ 91FE FE 01        	cp 1
  97+ 9200 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 9202 CD 32 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 9205 28 26            jr z,9F
 100+ 9207 38 24            jr c,9F
 101+ 9209 1E 00        11 ld e,0
 102+ 920B 18 22            jr 8F
 103+ 920D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 920E 28 07        	jr z, 7F
 105+ 9210 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 9212 1E 00         	ld e,0
 107+ 9214 E1           	pop hl
 108+ 9215 18 04        	jr 4F
 109+ 9217 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 9219 18 15            jr 10F
 111+ 921B
 112+ 921B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 921B              ; _para indicar con E="2" en caso necesario.
 114+ 921B
 115+ 921B E5           4 push hl
 116+ 921C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 921D CD 29 97     	call calcula_tercio
 118+ 9220 FE 01        	cp 1
 119+ 9222 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 9224 CD 32 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 9227 28 04            jr z,9F
 122+ 9229 30 02            jr nc,9F
 123+ 922B 18 02        	jr 8F
 124+ 922D 1E 02        9 ld e,2
 125+ 922F C1           8 pop bc
 126+ 9230 E1           10 pop hl
 127+ 9231 C9           5 ret
 128+ 9232
 129+ 9232              ; --------------------
 130+ 9232              ;
 131+ 9232              ; 25/08/22
 132+ 9232
 133+ 9232 CD 29 97     Comprueba_centro call calcula_tercio
 134+ 9235 67               ld h,a
 135+ 9236 08           	ex af,af
 136+ 9237 FE 02        	cp 2
 137+ 9239 38 07        	jr c,1F
 138+ 923B 28 05        	jr z,1F
 139+ 923D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 9240 18 03        	jr 2F
 141+ 9242 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 9245 08           2 ex af,af
 143+ 9246 A7               and a
 144+ 9247 ED 42            sbc hl,bc
 145+ 9249 C9               ret
 146+ 924A
 147+ 924A              ; *********************************************************************************************************************************************************************************************
 148+ 924A              ;
 149+ 924A              ;   16/8/22
 150+ 924A              ;
 151+ 924A              ;	Comprueba_limite_vertical
 152+ 924A              ;
 153+ 924A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 924A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 924A              ;
 156+ 924A
 157+ 924A 2A D8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 924D 7D           	ld a,l
 159+ 924E E6 1F        	and $1F
 160+ 9250 57           	ld d,a
 161+ 9251 3A 11 89     	ld a,(Limite_vertical)
 162+ 9254 BA           	cp d 											; Límite - Posición.
 163+ 9255 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9256 3A EA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9259 CB 47        	bit 0,a
 166+ 925B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 925D
 168+ 925D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 925D
 170+ 925D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 925E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9260
 173+ 9260              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9260              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9260
 176+ 9260 3A DC 88         ld a,(Coordenada_X)
 177+ 9263 16 0F            ld d,Centro_izquierda
 178+ 9265 A7               and a
 179+ 9266 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9267 28 1E            jr z,3F
 181+ 9269 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 926B              ;                                                    ; _salimos sin modificar nada.
 183+ 926B 18 0E            jr 2F
 184+ 926D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 926E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9270
 187+ 9270              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9270              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9270
 190+ 9270 3A DC 88         ld a,(Coordenada_X)
 191+ 9273 16 10            ld d,Centro_derecha
 192+ 9275 A7               and a
 193+ 9276 92               sub d
 194+ 9277 28 0E            jr z,3F
 195+ 9279 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 927B              ;                                                    ; _salimos sin modificar nada.
 197+ 927B CB 43        2 bit 0,e
 198+ 927D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 927F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9280 CD 14 93         call Modificaccionne
 201+ 9283 C1           	pop bc
 202+ 9284 CD 24 93         call Inicializacion
 203+ 9287 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9288
 205+ 9288              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9288
 207+ 9288 C5           4 push bc
 208+ 9289 01 D7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 928C 0A           	ld a,(bc)
 210+ 928D 3D           	dec a
 211+ 928E 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 928F 7D           	ld a,l
 213+ 9290 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9291 CB 47        	bit 0,a
 215+ 9293 28 03        	jr z,5F
 216+ 9295 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9296 18 2E        	jr 7F
 218+ 9298
 219+ 9298              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9298
 221+ 9298 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9299 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 929A 3A 04 89     	ld a,(Ctrl_0)
 224+ 929D CB 4F        	bit 1,a
 225+ 929F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 92A1 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 92A2
 228+ 92A2              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 92A2
 230+ 92A2 1C               inc e
 231+ 92A3 1D               dec e
 232+ 92A4 20 07            jr nz,12F
 233+ 92A6 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 92A7 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 92A8 22 D8 88     	ld (Posicion_actual),hl
 236+ 92AB 18 44        13 jr 9F
 237+ 92AD CB 43        12 bit 0,e
 238+ 92AF 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 92B1              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 92B1 C1           	pop bc
 241+ 92B2 18 D3        	jr 3B
 242+ 92B4 80           14 add b
 243+ 92B5 6F               ld l,a
 244+ 92B6 22 D8 88     	ld (Posicion_actual),hl
 245+ 92B9 CD 14 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 92BC 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 92BE E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 92C0 32 04 89         ld (Ctrl_0),a
 249+ 92C3 F1           	pop af
 250+ 92C4 18 2B        	jr 9F
 251+ 92C6
 252+ 92C6              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 92C6
 254+ 92C6 F5           7 push af
 255+ 92C7 3A 04 89     	ld a,(Ctrl_0)
 256+ 92CA CB 47        	bit 0,a
 257+ 92CC 20 1D        	jr nz,8F
 258+ 92CE F1           	pop af
 259+ 92CF
 260+ 92CF              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 92CF
 262+ 92CF 1C           	inc e
 263+ 92D0 1D               dec e
 264+ 92D1 20 07            jr nz,10F
 265+ 92D3 90           	sub b
 266+ 92D4 6F               ld l,a
 267+ 92D5 22 D8 88     	ld (Posicion_actual),hl
 268+ 92D8 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 92DA              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 92DA CB 43        10 bit 0,e
 271+ 92DC 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 92DE              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 92DE C1           	pop bc
 274+ 92DF 18 A6        	jr 3B
 275+ 92E1 90           16 sub b
 276+ 92E2 6F               ld l,a
 277+ 92E3 22 D8 88     	ld (Posicion_actual),hl
 278+ 92E6 CD 14 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 92E9 18 06            jr 9F
 280+ 92EB E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 92ED 32 04 89         ld (Ctrl_0),a
 282+ 92F0 F1           	pop af
 283+ 92F1 C1           9 pop bc
 284+ 92F2 1E 00        	ld e,0
 285+ 92F4 CD 24 93         call Inicializacion
 286+ 92F7 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 92F8 08           	ex af,af
 288+ 92F9 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 92FA 18 8B            jr 3B
 290+ 92FC
 291+ 92FC              ; --------------------
 292+ 92FC
 293+ 92FC 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 92FE CD 78 94     1 call PreviousScan
 295+ 9301 10 FB            djnz 1B
 296+ 9303 22 D8 88     	ld (Posicion_actual),hl
 297+ 9306 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 9307 C9           	ret
 299+ 9308
 300+ 9308              ; --------------------
 301+ 9308
 302+ 9308 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 930A CD 69 94     1 call NextScan
 304+ 930D 10 FB            djnz 1B
 305+ 930F 22 D8 88     	ld (Posicion_actual),hl
 306+ 9312 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 9313 C9           	ret
 308+ 9314
 309+ 9314              ; --------------------
 310+ 9314              ;
 311+ 9314              ;	22/01/23
 312+ 9314              ;
 313+ 9314              ;	E="1". Hemos cambiado de cuadrante.
 314+ 9314              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 9314              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 9314
 317+ 9314
 318+ 9314              Modificaccionne
 319+ 9314
 320+ 9314 3A EA 88     	ld a,(Cuad_objeto)
 321+ 9317 FE 02        	cp 2
 322+ 9319 CC FC 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 931C DC FC 92         call c,Modifica_Pos_actual
 324+ 931F C8           	ret z
 325+ 9320 CD 08 93         call Modifica_Pos_actual2
 326+ 9323 C9               ret
 327+ 9324
 328+ 9324              ; *************************************************************************************************************************************************************************************************
 329+ 9324              ;
 330+ 9324              ;	13/8/22
 331+ 9324              ;
 332+ 9324              ;	Inicializacion
 333+ 9324              ;
 334+ 9324              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 9324              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 9324              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 9324              ;
 338+ 9324              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 9324              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 9324              ;	_ desaparece/aparece.
 341+ 9324
 342+ 9324              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 9324              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 9324              ;
 345+ 9324              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 9324              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 9324              ; 		   [E] ="0"
 348+ 9324
 349+ 9324              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 9324
 351+ 9324 CD 29 97     Inicializacion call calcula_tercio
 352+ 9327 28 36        	jr z,primit
 353+ 9329 E6 02        	and 2
 354+ 932B 20 07        	jr nz,segmit
 355+ 932D 7D           	ld a,l
 356+ 932E FE 7F        	cp $7f
 357+ 9330 38 2D        	jr c,primit
 358+ 9332 28 2B        	jr z,primit
 359+ 9334 CD 91 93     segmit call column
 360+ 9337 38 13        	jr c,tercuad
 361+ 9339 3E 04        cuarcuad ld a,4
 362+ 933B 32 EA 88     	ld (Cuad_objeto),a
 363+ 933E 21 20 48     	ld hl,$4820
 364+ 9341 22 0F 89     	ld (Limite_horizontal),hl
 365+ 9344 21 11 89     	ld hl,Limite_vertical
 366+ 9347 36 0D        	ld (hl),$0d
 367+ 9349 08           	ex af,af
 368+ 934A 18 3C        	jr 1F
 369+ 934C              tercuad
 370+ 934C 3E 03        	ld a,3
 371+ 934E 32 EA 88     	ld (Cuad_objeto),a
 372+ 9351 21 20 48     	ld hl,$4820
 373+ 9354 22 0F 89     	ld (Limite_horizontal),hl
 374+ 9357 21 11 89     	ld hl,Limite_vertical
 375+ 935A 36 12        	ld (hl),$12
 376+ 935C 08           	ex af,af
 377+ 935D 18 29        	jr 1F
 378+ 935F CD 91 93     primit call column
 379+ 9362 38 13        	jr c, primcuad
 380+ 9364              segcuad
 381+ 9364 3E 02        	ld a,2
 382+ 9366 32 EA 88     	ld (Cuad_objeto),a
 383+ 9369 21 C0 4F     	ld hl,$4fc0
 384+ 936C 22 0F 89     	ld (Limite_horizontal),hl
 385+ 936F 21 11 89     	ld hl,Limite_vertical
 386+ 9372 36 0D        	ld (hl),$0d
 387+ 9374 08           	ex af,af
 388+ 9375 18 11        	jr 1F
 389+ 9377              primcuad
 390+ 9377 3E 01        	ld a,1
 391+ 9379 32 EA 88     	ld (Cuad_objeto),a
 392+ 937C 21 C0 4F     	ld hl,$4fc0
 393+ 937F 22 0F 89     	ld (Limite_horizontal),hl
 394+ 9382 21 11 89     	ld hl,Limite_vertical
 395+ 9385 36 12        	ld (hl),$12
 396+ 9387 08           	ex af,af
 397+ 9388 CD 7D 9A     1 call Genera_coordenadas
 398+ 938B 21 04 89     	ld hl,Ctrl_0
 399+ 938E CB EE        	set 5,(hl)
 400+ 9390 C9           	ret
 401+ 9391
 402+ 9391              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9391
 404+ 9391              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9391              ;
 406+ 9391              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9391
 408+ 9391 7D           column ld a,l
 409+ 9392 E6 1F        	and $1f
 410+ 9394 FE 10         	cp $10
 411+ 9396 C9            	ret
 412+ 9397
 413+ 9397              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9397              ;
 415+ 9397              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9397              ;
 417+ 9397              ; 14/12/22
 418+ 9397              ;
 419+ 9397              ;	Modifica: A y BC.
 420+ 9397
 421+ 9397 3A EA 88     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 939A E6 01        	and 1
 423+ 939C 28 17        	jr z,1F
 424+ 939E
 425+ 939E              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 939E
 427+ 939E 3A DC 88     	ld a,(Coordenada_X)
 428+ 93A1 47           	ld b,a
 429+ 93A2 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 93A3 79           	ld a,c
 431+ 93A4 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 93A5 38 08        	jr c,2F
 433+ 93A7 47           	ld b,a
 434+ 93A8 79           	ld a,c
 435+ 93A9 90           	sub b
 436+ 93AA 32 0E 89     	ld (Columnas),a
 437+ 93AD 18 1B        	jr 4F
 438+ 93AF 79           2 ld a,c
 439+ 93B0 32 0E 89     	ld (Columnas),a
 440+ 93B3 18 15        	jr 4F
 441+ 93B5
 442+ 93B5              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 93B5
 444+ 93B5 3A DC 88     1 ld a,(Coordenada_X)
 445+ 93B8 81           	add c
 446+ 93B9 3D           	dec a
 447+ 93BA D6 1F        	sub $1f
 448+ 93BC 38 08        	jr c,3F
 449+ 93BE 47           	ld b,a
 450+ 93BF 79           	ld a,c
 451+ 93C0 90           	sub b
 452+ 93C1 32 0E 89     	ld (Columnas),a
 453+ 93C4 18 04        	jr 4F
 454+ 93C6 79           3 ld a,c
 455+ 93C7 32 0E 89     	ld (Columnas),a
 456+ 93CA D9           4 exx
 457+ 93CB 4F           	ld c,a
 458+ 93CC D9           	exx
 459+ 93CD C9            ret
 460+ 93CE
 461+ 93CE              ; --------------------------------------------------------------------------------------------------------------------
 462+ 93CE              ;
 463+ 93CE              ; 7/1/23
 464+ 93CE              ;
 465+ 93CE              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 93CE              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 93CE              ;
 468+ 93CE              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 93CE              ;	DESTRUYE: HL,B Y A.
 470+ 93CE
 471+ 93CE 3A EA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 93D1 FE 02        	cp 2
 473+ 93D3 38 18        	jr c,1F
 474+ 93D5 28 16        	jr z,1F
 475+ 93D7 E6 01        	and 1
 476+ 93D9 28 0D        	jr z,3F
 477+ 93DB
 478+ 93DB              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 93DB
 480+ 93DB CD 17 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 93DE
 482+ 93DE 7D           9 ld a,l
 483+ 93DF E6 1F        	and $1f
 484+ 93E1 28 2A        	jr z,7F
 485+ 93E3 2B           	dec hl
 486+ 93E4 10 F8        	djnz 9B
 487+ 93E6 18 25        	jr 7F
 488+ 93E8
 489+ 93E8              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 93E8
 491+ 93E8 2A D8 88     3 ld hl,(Posicion_actual)
 492+ 93EB 18 20        	jr 7F
 493+ 93ED
 494+ 93ED 28 14        1 jr z,2F
 495+ 93EF
 496+ 93EF              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 93EF
 498+ 93EF CD 17 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 93F2 7D           4 ld a,l
 500+ 93F3 E6 1F        	and $1f
 501+ 93F5 28 03        	jr z,6F
 502+ 93F7 2B           	dec hl
 503+ 93F8 10 F8        	djnz 4B
 504+ 93FA 06 0F        6 ld b,15
 505+ 93FC CD 78 94     5 call PreviousScan
 506+ 93FF 10 FB        	djnz 5B
 507+ 9401 18 0A        	jr 7F
 508+ 9403
 509+ 9403              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9403
 511+ 9403 CD 17 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9406 06 0F        	ld b,15
 513+ 9408 CD 78 94     8 call PreviousScan
 514+ 940B 10 FB        	djnz 8B
 515+ 940D
 516+ 940D E5           7 push hl
 517+ 940E DD E1        	pop ix
 518+ 9410
 519+ 9410 2A DA 88     	ld hl,(Puntero_objeto)
 520+ 9413 E5           	push hl
 521+ 9414 FD E1        	pop iy
 522+ 9416
 523+ 9416 C9           	ret
 524+ 9417
 525+ 9417              ; --------------------------------------------------------------------------------------------------------------------
 526+ 9417              ;
 527+ 9417              ;	2/1/23
 528+ 9417              ;
 529+ 9417              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 9417              ;
 531+ 9417              ;	Tras esta rutina tenemos:
 532+ 9417              ;
 533+ 9417              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 9417              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 9417              ;
 536+ 9417              ;	DESTRUYE!!!!! HL,B y A.
 537+ 9417
 538+ 9417 2A D8 88     Operandos ld hl,(Posicion_actual)
 539+ 941A 3A 0E 89     	ld a,(Columnas)
 540+ 941D 3D           	dec a
 541+ 941E 20 01        	jr nz,1F
 542+ 9420 3C           	inc a
 543+ 9421 47           1 ld b,a
 544+ 9422 C9           	ret
 545+ 9423
 546+ 9423              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9423              ;
 548+ 9423              ;	3/1/23
 549+ 9423              ;
 550+ 9423              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9423              ;
 552+ 9423              ;	Destruye: A,B,HL y DE.
 553+ 9423
 554+ 9423              Define_rutina_de_impresion
 555+ 9423
 556+ 9423 3A D7 88     	ld a,(Columns)
 557+ 9426 47           	ld b,a
 558+ 9427 3A 0E 89     	ld a,(Columnas)
 559+ 942A B8           	cp b
 560+ 942B 20 0D        	jr nz,2f
 561+ 942D
 562+ 942D              ;	La entidad se imprime entera.
 563+ 942D
 564+ 942D 21 F9 94     	ld hl, Indice_entidades_completas
 565+ 9430 E6 01        	and 1
 566+ 9432 28 02        	jr z,1F
 567+ 9434
 568+ 9434 23           	inc hl
 569+ 9435 23           	inc hl
 570+ 9436
 571+ 9436 CD 04 8C     1 call Extrae_address
 572+ 9439 C9           	ret		;	ret
 573+ 943A
 574+ 943A              ;	La entidad no se imprime entera en pantalla.
 575+ 943A
 576+ 943A 3A EA 88     2 ld a,(Cuad_objeto)
 577+ 943D E6 01        	and 1
 578+ 943F 28 17        	jr z,3F
 579+ 9441
 580+ 9441              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9441
 582+ 9441 21 FD 94     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9444 3A D7 88     4 ld a,(Columns)
 584+ 9447 E6 01        	and 1
 585+ 9449 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 944B
 587+ 944B 23           	inc hl
 588+ 944C 23           	inc hl
 589+ 944D
 590+ 944D 3A 0E 89     	ld a,(Columnas)
 591+ 9450 E6 01        	and 1
 592+ 9452 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 9454
 594+ 9454 23           	inc hl
 595+ 9455 23           	inc hl
 596+ 9456
 597+ 9456 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9458
 599+ 9458 21 03 95     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 945B 18 E7        	jr 4B
 601+ 945D
 602+ 945D              ; --------------------------------------------------------------------------------------------------------------------
 603+ 945D              ;
 604+ 945D              ;	Prepara_draw
 605+ 945D              ;
 606+ 945D              ;	Es una rutina de carga.
 607+ 945D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 945D              ;
 609+ 945D              ;	FUNCIONAMIENTO:
 610+ 945D              ;
 611+ 945D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 945D              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 945D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 945D              ;
 615+ 945D              ;	DESTRUYE:
 616+ 945D              ;
 617+ 945D              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 945D
 619+ 945D 21 D6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9460 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9461 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9462 4E           	ld c,(hl)
 623+ 9463 2A D8 88     	ld hl,(Posicion_actual)
 624+ 9466 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9468 C9           	ret
 626+ 9469
 627+ 9469              ;----------------------------------------------------------------------------------------------------------------
 628+ 9469              ;
 629+ 9469              ;	5/08/22
 630+ 9469              ;
 631+ 9469              ;   NextScan.
 632+ 9469              ;
 633+ 9469              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9469              ;
 635+ 9469              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9469              ;
 637+ 9469              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9469              ;
 639+ 9469              ;       DESTRUIDOS: AF y HL !!!
 640+ 9469              ;
 641+ 9469              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9469              ;
 643+ 9469
 644+ 9469 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 946A 7C               ld a,h
 646+ 946B E6 07            and 7
 647+ 946D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 946E
 649+ 946E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 946F C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9471 6F               ld l,a
 652+ 9472 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9473
 654+ 9473 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9474 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9476 67               ld h,a
 657+ 9477 C9               ret
 658+ 9478
 659+ 9478              ;----------------------------------------------------------------------------------------------------------------
 660+ 9478              ;
 661+ 9478              ;	5/08/22
 662+ 9478              ;
 663+ 9478              ;   PreviousScan.
 664+ 9478              ;
 665+ 9478              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9478              ;
 667+ 9478              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9478              ;
 669+ 9478              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9478              ;
 671+ 9478              ;       DESTRUIDOS: AF y HL !!!
 672+ 9478              ;
 673+ 9478              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9478              ;
 675+ 9478
 676+ 9478 7C           PreviousScan ld a,h
 677+ 9479 25               dec h               ; Dec H.
 678+ 947A E6 07            and 7
 679+ 947C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 947D
 681+ 947D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 947E D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9480 6F               ld l,a
 684+ 9481 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9482
 686+ 9482 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9483 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9485 67               ld h,a
 689+ 9486 C9               ret
 690+ 9487
 691+ 9487              ; -----------------------------------------------------------------------------------
 692+ 9487              ;
 693+ 9487              ;	28/2/23
 694+ 9487              ;
 695+ 9487              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9487              ;	Extrae fotos de Album_de_fotos.
 697+ 9487
 698+ 9487 3A 1F 89     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 948A A7           	and a
 700+ 948B C8           	ret z
 701+ 948C ED 73 24 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 9490 31 00 70     	ld sp,Album_de_fotos
 703+ 9493
 704+ 9493 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 9495 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 9496 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 9497
 708+ 9497 ED 73 26 89  	ld (Stack_2),sp
 709+ 949B ED 7B 24 89  	ld sp,(Stack)
 710+ 949F
 711+ 949F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 949F
 713+ 949F 3E CD        	ld a,$cd
 714+ 94A1 32 A9 94     	ld (Imprime),a
 715+ 94A4 EB           	ex de,hl
 716+ 94A5 22 AA 94     	ld (Imprime+1),hl
 717+ 94A8 EB           	ex de,hl
 718+ 94A9
 719+ 94A9              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 94A9
 721+ 94A9 00 00 00     Imprime db 0,0,0
 722+ 94AC
 723+ 94AC 3A 1F 89     	ld a,(Numero_de_malotes)
 724+ 94AF 3D           	dec a
 725+ 94B0 28 09        	jr z,1F
 726+ 94B2 32 1F 89      	ld (Numero_de_malotes),a
 727+ 94B5
 728+ 94B5 ED 7B 26 89   	ld sp,(Stack_2)
 729+ 94B9 18 D8        	jr 2B
 730+ 94BB
 731+ 94BB AF           1 xor a
 732+ 94BC 32 26 89     	ld (Stack_2),a
 733+ 94BF C9           	ret
 734+ 94C0
 735+ 94C0              ; -----------------------------------------------------------------------------------
 736+ 94C0              ;
 737+ 94C0              ;	28/2/23
 738+ 94C0              ;
 739+ 94C0              ;	Pinta los disparos generados.
 740+ 94C0
 741+ 94C0              Extrae_foto_disparos
 742+ 94C0
 743+ 94C0 3A 2C 89     	ld a,(Numero_de_disparotes)
 744+ 94C3 A7           	and a
 745+ 94C4 C8           	ret z
 746+ 94C5 ED 73 24 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 94C9 31 85 70     	ld sp,Album_de_fotos_disparos
 748+ 94CC
 749+ 94CC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 94CE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 94CF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 94D0
 753+ 94D0 ED 73 26 89  	ld (Stack_2),sp
 754+ 94D4 ED 7B 24 89  	ld sp,(Stack)
 755+ 94D8
 756+ 94D8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 94D8
 758+ 94D8 3E CD        	ld a,$cd
 759+ 94DA 32 E2 94     	ld (Imprime2),a
 760+ 94DD EB           	ex de,hl
 761+ 94DE 22 E3 94     	ld (Imprime2+1),hl
 762+ 94E1 EB           	ex de,hl
 763+ 94E2
 764+ 94E2              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 94E2
 766+ 94E2 00 00 00     Imprime2 db 0,0,0
 767+ 94E5
 768+ 94E5 3A 2C 89     	ld a,(Numero_de_disparotes)
 769+ 94E8 3D           	dec a
 770+ 94E9 28 09        	jr z,1F
 771+ 94EB 32 2C 89      	ld (Numero_de_disparotes),a
 772+ 94EE
 773+ 94EE ED 7B 26 89  	ld sp,(Stack_2)
 774+ 94F2 18 D8        	jr 2B
 775+ 94F4
 776+ 94F4 AF           1 xor a
 777+ 94F5 32 26 89     	ld (Stack_2),a
 778+ 94F8 C9           	ret
 779+ 94F9
# file closed: Draw_XOR.asm
1207  94F9              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 94F9              ;   índices de Rutinas de impresión.
   2+ 94F9
   3+ 94F9 09 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 94FB 36 95            defw Pinta_Amadeus_3x2
   5+ 94FD
   6+ 94FD 8C 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 94FF 2C 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9501 E0 95            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9503
  10+ 9503 B6 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9505 BA 96            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9507 6E 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9509
  14+ 9509
  15+ 9509              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9509              ;
  17+ 9509              ;   12/12/22
  18+ 9509              ;
  19+ 9509              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9509              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9509              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9509              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9509              ;
  24+ 9509              ;   Modifica: DE y HL.
  25+ 9509
  26+ 9509 ED 73 24 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 950D FD F9        	ld sp,iy
  28+ 950F 06 10            ld b,16
  29+ 9511 D1           1 pop de
  30+ 9512 7B               ld a,e
  31+ 9513 AE               xor (hl)
  32+ 9514 77           	ld (hl),a
  33+ 9515 23           	inc hl
  34+ 9516 7A               ld a,d
  35+ 9517 AE               xor (hl)
  36+ 9518 77           	ld (hl),a
  37+ 9519 2B           	dec hl
  38+ 951A 24           	inc h
  39+ 951B 7C               ld a,h
  40+ 951C E6 07            and 7
  41+ 951E 20 0A            jr nz,2F
  42+ 9520 7D               ld a,l
  43+ 9521 C6 20            add a,$20
  44+ 9523 6F               ld l,a
  45+ 9524 38 04            jr c,2F
  46+ 9526 7C               ld a,h
  47+ 9527 D6 08            sub 8
  48+ 9529 67               ld h,a
  49+ 952A 7C           2 ld a,h
  50+ 952B FE 58            cp $58
  51+ 952D 28 02            jr z,3F
  52+ 952F 10 E0            djnz 1B
  53+ 9531 ED 7B 24 89  3 ld sp,(Stack)
  54+ 9535 C9           	ret
  55+ 9536
  56+ 9536 ED 73 24 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 953A FD F9        	ld sp,iy
  58+ 953C 06 08            ld b,8
  59+ 953E D1           1 pop de
  60+ 953F 7B               ld a,e
  61+ 9540 AE               xor (hl)
  62+ 9541 77           	ld (hl),a
  63+ 9542 23           	inc hl
  64+ 9543 7A               ld a,d
  65+ 9544 AE               xor (hl)
  66+ 9545 77           	ld (hl),a
  67+ 9546 23           	inc hl
  68+ 9547 D1           	pop de
  69+ 9548 7B               ld a,e
  70+ 9549 AE               xor (hl)
  71+ 954A 77           	ld (hl),a
  72+ 954B 2B           	dec hl
  73+ 954C 2B           	dec hl
  74+ 954D 24           	inc h
  75+ 954E 7C               ld a,h
  76+ 954F E6 07            and 7
  77+ 9551 20 0A            jr nz,2F
  78+ 9553 7D               ld a,l
  79+ 9554 C6 20            add a,$20
  80+ 9556 6F               ld l,a
  81+ 9557 38 04            jr c,2F
  82+ 9559 7C               ld a,h
  83+ 955A D6 08            sub 8
  84+ 955C 67               ld h,a
  85+ 955D 7C           2 ld a,h
  86+ 955E FE 58            cp $58
  87+ 9560 28 25            jr z,4F
  88+ 9562 7A               ld a,d
  89+ 9563 AE               xor (hl)
  90+ 9564 77               ld (hl),a
  91+ 9565 D1           	pop de
  92+ 9566 23           	inc hl
  93+ 9567 7B               ld a,e
  94+ 9568 AE               xor (hl)
  95+ 9569 77           	ld (hl),a
  96+ 956A 23           	inc hl
  97+ 956B 7A               ld a,d
  98+ 956C AE               xor (hl)
  99+ 956D 77           	ld (hl),a
 100+ 956E 2B           	dec hl
 101+ 956F 2B           	dec hl
 102+ 9570 24           	inc h
 103+ 9571 7C               ld a,h
 104+ 9572 E6 07            and 7
 105+ 9574 20 0A            jr nz,3F
 106+ 9576 7D               ld a,l
 107+ 9577 C6 20            add a,$20
 108+ 9579 6F               ld l,a
 109+ 957A 38 04            jr c,3F
 110+ 957C 7C               ld a,h
 111+ 957D D6 08            sub 8
 112+ 957F 67               ld h,a
 113+ 9580 7C           3 ld a,h
 114+ 9581 FE 58            cp $58
 115+ 9583 28 02            jr z,4F
 116+ 9585 10 B7            djnz 1B
 117+ 9587 ED 7B 24 89  4 ld sp,(Stack)
 118+ 958B C9           	ret
 119+ 958C
 120+ 958C              ; ---------------------------------------------------
 121+ 958C
 122+ 958C ED 73 24 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9590 FD F9        	ld sp,iy
 124+ 9592
 125+ 9592              ; >>>
 126+ 9592
 127+ 9592 06 10            ld b,16
 128+ 9594 D1           1 pop de
 129+ 9595 7A           	ld a,d
 130+ 9596 AE           	xor (hl)
 131+ 9597 77           	ld (hl),a
 132+ 9598 24           	inc h
 133+ 9599 7C               ld a,h
 134+ 959A E6 07            and 7
 135+ 959C 20 0C            jr nz,2F
 136+ 959E 7D               ld a,l
 137+ 959F C6 20            add a,$20
 138+ 95A1 6F               ld l,a
 139+ 95A2 38 06            jr c,2F
 140+ 95A4 7C               ld a,h
 141+ 95A5 D6 08            sub 8
 142+ 95A7 67               ld h,a
 143+ 95A8 18 00            jr 2F
 144+ 95AA 7C           2 ld a,h
 145+ 95AB FE 58            cp $58
 146+ 95AD 28 02            jr z,3F
 147+ 95AF 10 E3            djnz 1B
 148+ 95B1 ED 7B 24 89  3 ld sp,(Stack)
 149+ 95B5 C9           	ret
 150+ 95B6
 151+ 95B6 ED 73 24 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 95BA FD F9        	ld sp,iy
 153+ 95BC
 154+ 95BC              ; >>>
 155+ 95BC
 156+ 95BC 06 10            ld b,16
 157+ 95BE D1           1 pop de
 158+ 95BF 7B           	ld a,e
 159+ 95C0 AE           	xor (hl)
 160+ 95C1 77           	ld (hl),a
 161+ 95C2 24           	inc h
 162+ 95C3 7C               ld a,h
 163+ 95C4 E6 07            and 7
 164+ 95C6 20 0C            jr nz,2F
 165+ 95C8 7D               ld a,l
 166+ 95C9 C6 20            add a,$20
 167+ 95CB 6F               ld l,a
 168+ 95CC 38 06            jr c,2F
 169+ 95CE 7C               ld a,h
 170+ 95CF D6 08            sub 8
 171+ 95D1 67               ld h,a
 172+ 95D2 18 00            jr 2F
 173+ 95D4 7C           2 ld a,h
 174+ 95D5 FE 58            cp $58
 175+ 95D7 28 02            jr z,3F
 176+ 95D9 10 E3            djnz 1B
 177+ 95DB ED 7B 24 89  3 ld sp,(Stack)
 178+ 95DF C9           	ret
 179+ 95E0
 180+ 95E0              ; ---------------------------------------------------
 181+ 95E0
 182+ 95E0 ED 73 24 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 95E4 FD F9        	ld sp,iy
 184+ 95E6 06 08            ld b,8
 185+ 95E8 D1           1 pop de
 186+ 95E9 7A           	ld a,d
 187+ 95EA AE           	xor (hl)
 188+ 95EB 77           	ld (hl),a
 189+ 95EC 23           	inc hl
 190+ 95ED D1           	pop de
 191+ 95EE 7B           	ld a,e
 192+ 95EF AE           	xor (hl)
 193+ 95F0 77           	ld (hl),a
 194+ 95F1 2B           	dec hl
 195+ 95F2 24            	inc h
 196+ 95F3 7C               ld a,h
 197+ 95F4 E6 07            and 7
 198+ 95F6 20 0A            jr nz,2F
 199+ 95F8 7D               ld a,l
 200+ 95F9 C6 20            add a,$20
 201+ 95FB 6F               ld l,a
 202+ 95FC 38 04            jr c,2F
 203+ 95FE 7C               ld a,h
 204+ 95FF D6 08            sub 8
 205+ 9601 67               ld h,a
 206+ 9602 7C           2 ld a,h
 207+ 9603 FE 58            cp $58
 208+ 9605 28 20            jr z,4F
 209+ 9607 D1               pop de
 210+ 9608 7B           	ld a,e
 211+ 9609 AE           	xor (hl)
 212+ 960A 77           	ld (hl),a
 213+ 960B 23           	inc hl
 214+ 960C 7A           	ld a,d
 215+ 960D AE           	xor (hl)
 216+ 960E 77           	ld (hl),a
 217+ 960F 2B           	dec hl
 218+ 9610 24           	inc h
 219+ 9611 7C               ld a,h
 220+ 9612 E6 07            and 7
 221+ 9614 20 0A            jr nz,3F
 222+ 9616 7D               ld a,l
 223+ 9617 C6 20            add a,$20
 224+ 9619 6F               ld l,a
 225+ 961A 38 04            jr c,3F
 226+ 961C 7C               ld a,h
 227+ 961D D6 08            sub 8
 228+ 961F 67               ld h,a
 229+ 9620 7C           3 ld a,h
 230+ 9621 FE 58            cp $58
 231+ 9623 28 02            jr z,4F
 232+ 9625 10 C1            djnz 1B
 233+ 9627 ED 7B 24 89  4 ld sp,(Stack)
 234+ 962B C9           	ret
 235+ 962C
 236+ 962C ED 73 24 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9630 FD F9        	ld sp,iy
 238+ 9632 06 08            ld b,8
 239+ 9634 D1           1 pop de
 240+ 9635 D1           	pop de
 241+ 9636 7B           	ld a,e
 242+ 9637 AE           	xor (hl)
 243+ 9638 77           	ld (hl),a
 244+ 9639 24            	inc h
 245+ 963A 7C               ld a,h
 246+ 963B E6 07            and 7
 247+ 963D 20 0A            jr nz,2F
 248+ 963F 7D               ld a,l
 249+ 9640 C6 20            add a,$20
 250+ 9642 6F               ld l,a
 251+ 9643 38 04            jr c,2F
 252+ 9645 7C               ld a,h
 253+ 9646 D6 08            sub 8
 254+ 9648 67               ld h,a
 255+ 9649 7C           2 ld a,h
 256+ 964A FE 58            cp $58
 257+ 964C 28 1B            jr z,4F
 258+ 964E D1               pop de
 259+ 964F 7A           	ld a,d
 260+ 9650 AE           	xor (hl)
 261+ 9651 77           	ld (hl),a
 262+ 9652 24           	inc h
 263+ 9653 7C               ld a,h
 264+ 9654 E6 07            and 7
 265+ 9656 20 0A            jr nz,3F
 266+ 9658 7D               ld a,l
 267+ 9659 C6 20            add a,$20
 268+ 965B 6F               ld l,a
 269+ 965C 38 04            jr c,3F
 270+ 965E 7C               ld a,h
 271+ 965F D6 08            sub 8
 272+ 9661 67               ld h,a
 273+ 9662 7C           3 ld a,h
 274+ 9663 FE 58            cp $58
 275+ 9665 28 02            jr z,4F
 276+ 9667 10 CB            djnz 1B
 277+ 9669 ED 7B 24 89  4 ld sp,(Stack)
 278+ 966D C9           	ret
 279+ 966E
 280+ 966E ED 73 24 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9672 FD F9        	ld sp,iy
 282+ 9674 06 08            ld b,8
 283+ 9676 D1           1 pop de
 284+ 9677 7B           	ld a,e
 285+ 9678 AE           	xor (hl)
 286+ 9679 77           	ld (hl),a
 287+ 967A 23           	inc hl
 288+ 967B 7A           	ld a,d
 289+ 967C AE           	xor (hl)
 290+ 967D 77           	ld (hl),a
 291+ 967E 2B           	dec hl
 292+ 967F 24             	inc h
 293+ 9680 7C               ld a,h
 294+ 9681 E6 07            and 7
 295+ 9683 20 0A            jr nz,2F
 296+ 9685 7D               ld a,l
 297+ 9686 C6 20            add a,$20
 298+ 9688 6F               ld l,a
 299+ 9689 38 04            jr c,2F
 300+ 968B 7C               ld a,h
 301+ 968C D6 08            sub 8
 302+ 968E 67               ld h,a
 303+ 968F 7C           2 ld a,h
 304+ 9690 FE 58            cp $58
 305+ 9692 28 21            jr z,4F
 306+ 9694 D1               pop de
 307+ 9695 7A           	ld a,d
 308+ 9696 AE           	xor (hl)
 309+ 9697 77           	ld (hl),a
 310+ 9698 23           	inc hl
 311+ 9699 D1               pop de
 312+ 969A 7B           	ld a,e
 313+ 969B AE           	xor (hl)
 314+ 969C 77           	ld (hl),a
 315+ 969D 2B           	dec hl
 316+ 969E 24           	inc h
 317+ 969F 7C               ld a,h
 318+ 96A0 E6 07            and 7
 319+ 96A2 20 0A            jr nz,3F
 320+ 96A4 7D               ld a,l
 321+ 96A5 C6 20            add a,$20
 322+ 96A7 6F               ld l,a
 323+ 96A8 38 04            jr c,3F
 324+ 96AA 7C               ld a,h
 325+ 96AB D6 08            sub 8
 326+ 96AD 67               ld h,a
 327+ 96AE 7C           3 ld a,h
 328+ 96AF FE 58            cp $58
 329+ 96B1 28 02            jr z,4F
 330+ 96B3 10 C1            djnz 1B
 331+ 96B5 ED 7B 24 89  4 ld sp,(Stack)
 332+ 96B9 C9           	ret
 333+ 96BA
 334+ 96BA ED 73 24 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 96BE FD F9        	ld sp,iy
 336+ 96C0 06 08            ld b,8
 337+ 96C2 D1           1 pop de
 338+ 96C3 7B           	ld a,e
 339+ 96C4 AE           	xor (hl)
 340+ 96C5 77           	ld (hl),a
 341+ 96C6 24            	inc h
 342+ 96C7 7C               ld a,h
 343+ 96C8 E6 07            and 7
 344+ 96CA 20 0A            jr nz,2F
 345+ 96CC 7D               ld a,l
 346+ 96CD C6 20            add a,$20
 347+ 96CF 6F               ld l,a
 348+ 96D0 38 04            jr c,2F
 349+ 96D2 7C               ld a,h
 350+ 96D3 D6 08            sub 8
 351+ 96D5 67               ld h,a
 352+ 96D6 7C           2 ld a,h
 353+ 96D7 FE 58            cp $58
 354+ 96D9 28 1C            jr z,4F
 355+ 96DB D1               pop de
 356+ 96DC 7A           	ld a,d
 357+ 96DD AE           	xor (hl)
 358+ 96DE 77           	ld (hl),a
 359+ 96DF 24           	inc h
 360+ 96E0 7C               ld a,h
 361+ 96E1 E6 07            and 7
 362+ 96E3 20 0A            jr nz,3F
 363+ 96E5 7D               ld a,l
 364+ 96E6 C6 20            add a,$20
 365+ 96E8 6F               ld l,a
 366+ 96E9 38 04            jr c,3F
 367+ 96EB 7C               ld a,h
 368+ 96EC D6 08            sub 8
 369+ 96EE 67               ld h,a
 370+ 96EF 7C           3 ld a,h
 371+ 96F0 FE 58            cp $58
 372+ 96F2 28 03            jr z,4F
 373+ 96F4 D1               pop de
 374+ 96F5 10 CB            djnz 1B
 375+ 96F7 ED 7B 24 89  4 ld sp,(Stack)
 376+ 96FB C9           	ret
 377+ 96FC
 378+ 96FC              ; ---------------------------------------------------
 379+ 96FC              ;
 380+ 96FC              ;   27/02/23
 381+ 96FC              ;
 382+ 96FC              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 96FC              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 96FC              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 96FC
 386+ 96FC ED 73 24 89  Pinta_Disparo ld (Stack),sp
 387+ 9700 FD F9            ld sp,iy
 388+ 9702 06 02            ld b,2
 389+ 9704 D1           1 pop de
 390+ 9705 7B               ld a,e
 391+ 9706 AE               xor (hl)
 392+ 9707 77               ld (hl),a
 393+ 9708 23               inc hl
 394+ 9709 7A               ld a,d
 395+ 970A AE               xor (hl)
 396+ 970B 77               ld (hl),a
 397+ 970C 2B               dec hl
 398+ 970D
 399+ 970D 24               inc h
 400+ 970E 7C               ld a,h
 401+ 970F E6 07            and 7
 402+ 9711 20 0A            jr nz,2F
 403+ 9713 7D               ld a,l
 404+ 9714 C6 20            add a,$20
 405+ 9716 6F               ld l,a
 406+ 9717 38 04            jr c,2F
 407+ 9719 7C               ld a,h
 408+ 971A D6 08            sub 8
 409+ 971C 67               ld h,a
 410+ 971D 7C           2 ld a,h
 411+ 971E FE 58            cp $58
 412+ 9720 28 02            jr z,3F
 413+ 9722
 414+ 9722 10 E0            djnz 1B
 415+ 9724 ED 7B 24 89  3 ld sp,(Stack)
 416+ 9728 C9               ret
 417+ 9729
# file closed: Rutinas_de_impresion_sprites.asm
1208  9729              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9729              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9729              ;
   3+ 9729              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9729              ;
   5+ 9729              ; *****************************************************************************************************************************************************************************************
   6+ 9729              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9729
   8+ 9729 7C           calcula_tercio ld a,h
   9+ 972A E6 18        	and $18
  10+ 972C CB 2F        	sra a
  11+ 972E CB 2F        	sra a
  12+ 9730 CB 2F        	sra a
  13+ 9732 C9           	ret
  14+ 9733
# file closed: calcula_tercio.asm
1209  9733              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9733              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9733              ;
   3+ 9733              ;
   4+ 9733              ;	CLS.
   5+ 9733              ;
   6+ 9733              ;	Limpia la pantalla y define sus atributos.
   7+ 9733              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9733              ;
   9+ 9733              ;	COLORES: 0 ..... NEGRO
  10+ 9733              ;    		 1 ..... AZUL
  11+ 9733              ; 			 2 ..... ROJO
  12+ 9733              ;			 3 ..... MAGENTA
  13+ 9733              ; 			 4 ..... VERDE
  14+ 9733              ; 			 5 ..... CIAN
  15+ 9733              ;			 6 ..... AMARILLO
  16+ 9733              ; 			 7 ..... BLANCO
  17+ 9733              ;
  18+ 9733              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9733              ;
  20+ 9733              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9733
  22+ 9733
  23+ 9733 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9736 11 01 40     	LD DE,$4001
  25+ 9739 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 973C 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 973E ED B0        	LDIR
  28+ 9740 01 FF 02     	LD BC,767
  29+ 9743 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9744 ED B0        	LDIR
  31+ 9746 C9           	ret
  32+ 9747
# file closed: Cls.asm
1210  9747              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9747              ; ******************************************************************************************************************************************************************************************
   2+ 9747              ;
   3+ 9747              ;   20/05/23
   4+ 9747              ;
   5+ 9747              ;	Recompone_posicion_inicio
   6+ 9747              ;
   7+ 9747              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9747              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9747              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9747              ;	_ a una u otra rutina.
  11+ 9747
  12+ 9747              Recompone_posicion_inicio
  13+ 9747
  14+ 9747 2A E8 88     	ld hl,(Posicion_inicio)
  15+ 974A 7D           	ld a,l
  16+ 974B E6 1F        	and $1f
  17+ 974D 28 16        	jr z,1F
  18+ 974F
  19+ 974F FE 1F        	cp $1f
  20+ 9751 28 0D        	jr z,3F
  21+ 9753
  22+ 9753 21 13 89     	ld hl,Ctrl_1
  23+ 9756 CB EE        	set 5,(hl)
  24+ 9758 2A DA 88     	ld hl,(Puntero_objeto)
  25+ 975B 22 14 89     	ld (Repone_puntero_objeto),hl
  26+ 975E 18 08        	jr 2F
  27+ 9760
  28+ 9760 CD E9 98     3 call Mov_left
  29+ 9763 18 03        	jr 2F
  30+ 9765
  31+ 9765 CD CB 97     1 call Mov_right
  32+ 9768 21 00 F0     2 ld hl,Sprite_vacio
  33+ 976B 22 DA 88     	ld (Puntero_objeto),hl
  34+ 976E C9           	ret
  35+ 976F
  36+ 976F              ; ******************************************************************************************************************************************************************************************
  37+ 976F              ;
  38+ 976F              ;   22/01/23
  39+ 976F              ;
  40+ 976F              ;	Mov_down
  41+ 976F              ;
  42+ 976F              ; 	Mueve el Sprite X px hacia abajo.
  43+ 976F              ;
  44+ 976F              ;
  45+ 976F 21 04 89     Mov_down ld hl,Ctrl_0
  46+ 9772 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  47+ 9774              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  48+ 9774              ; 																	; _ en el caso de que no lo haya.
  49+ 9774 3A EE 88     	ld a,(Vel_down)
  50+ 9777 47           	ld b,a
  51+ 9778 2A D8 88         ld hl,(Posicion_actual)
  52+ 977B CD 29 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  53+ 977E E6 02        	and 2
  54+ 9780 28 0F        	jr z,1F
  55+ 9782
  56+ 9782              ; Nos encontramos en el último tercio de pantalla.
  57+ 9782              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  58+ 9782
  59+ 9782 7C           	ld a,h
  60+ 9783 FE 57        	cp $57
  61+ 9785 20 0A        	jr nz,1F
  62+ 9787 7D           	ld a,l
  63+ 9788 C6 20        	add $20
  64+ 978A 30 05        	jr nc,1F
  65+ 978C
  66+ 978C              ; ------------------------------
  67+ 978C CD 67 9A     	call Reaparece_arriba
  68+ 978F              ;	call Reinicio
  69+ 978F              ; ------------------------------
  70+ 978F
  71+ 978F 18 08        	jr 3F
  72+ 9791 CD 69 94     1 call NextScan
  73+ 9794 22 D8 88     	ld (Posicion_actual),hl
  74+ 9797 10 E2            djnz 2B
  75+ 9799 CD 7D 9A     3 call Genera_coordenadas
  76+ 979C C9           	ret
  77+ 979D
  78+ 979D              ; ******************************************************************************************************************************************************************************************
  79+ 979D              ;
  80+ 979D              ;   22/01/23
  81+ 979D              ;
  82+ 979D              ;	Mov_up
  83+ 979D              ;
  84+ 979D              ; 	Mueve el Sprite hacia arriba.
  85+ 979D              ;
  86+ 979D              ;
  87+ 979D 21 04 89     Mov_up ld hl,Ctrl_0
  88+ 97A0 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  89+ 97A2              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  90+ 97A2              ; 																		; _ en el caso de que no lo haya.
  91+ 97A2 3A ED 88     	ld a,(Vel_up)
  92+ 97A5 47           	ld b,a
  93+ 97A6 2A D8 88     	ld hl,(Posicion_actual)
  94+ 97A9 CD 29 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  95+ 97AC A7           	and a
  96+ 97AD 20 10        	jr nz,1F
  97+ 97AF
  98+ 97AF              ; Nos encontramos en el 1er tercio de pantalla.
  99+ 97AF              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 100+ 97AF
 101+ 97AF 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 102+ 97B0 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 103+ 97B2 20 0B            jr nz,1F
 104+ 97B4 7D               ld a,l
 105+ 97B5 D6 20            sub $20
 106+ 97B7 30 06            jr nc,1F
 107+ 97B9 25               dec h
 108+ 97BA
 109+ 97BA              ; -----------------------------
 110+ 97BA CD 57 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 111+ 97BD              ;	call Reinicio
 112+ 97BD              ; -----------------------------
 113+ 97BD
 114+ 97BD 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 115+ 97BF CD 78 94     1 call PreviousScan
 116+ 97C2 22 D8 88     	ld (Posicion_actual),hl
 117+ 97C5 10 E2            djnz 3B
 118+ 97C7 CD 7D 9A     2 call Genera_coordenadas
 119+ 97CA C9           	ret
 120+ 97CB
 121+ 97CB              ; ******************************************************************************************************************************************************************************************
 122+ 97CB              ;
 123+ 97CB              ;	19/10/22
 124+ 97CB              ;
 125+ 97CB              ;	Mov_right.
 126+ 97CB              ;
 127+ 97CB              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 128+ 97CB              ;
 129+ 97CB
 130+ 97CB 21 04 89     Mov_right ld hl,Ctrl_0
 131+ 97CE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 132+ 97D0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 133+ 97D0              ; 																	; _ en el caso de que no lo haya.
 134+ 97D0 3A 04 89     	ld a,(Ctrl_0)
 135+ 97D3 CB 77        	bit 6,a
 136+ 97D5 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 137+ 97D7
 138+ 97D7 CD 05 9A     	call Stop_Amadeus_right
 139+ 97DA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 140+ 97DB 18 4D        	jr 8F
 141+ 97DD
 142+ 97DD 3A DC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 143+ 97E0 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 144+ 97E2 20 46        	jr nz,8F
 145+ 97E4
 146+ 97E4 3A DE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 147+ 97E7 A7           	and a 															; _[3] para continuar con el DESPLZ.
 148+ 97E8 28 40        	jr z,8F
 149+ 97EA
 150+ 97EA              ; ---------- ---------- ----------
 151+ 97EA              ;
 152+ 97EA              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 153+ 97EA
 154+ 97EA 3A EC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 155+ 97ED FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 156+ 97EF 28 11        	jr z,1F
 157+ 97F1 38 06        	jr c,6F
 158+ 97F3 FE 04        	cp 4
 159+ 97F5 28 14        	jr z,7F
 160+ 97F7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 161+ 97F9
 162+ 97F9              ; ---------- ---------- ----------
 163+ 97F9              ;
 164+ 97F9              ; Perfiles de velocidad
 165+ 97F9              ;
 166+ 97F9
 167+ 97F9 3A DE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 168+ 97FC FE FE        	cp $fe
 169+ 97FE 20 2A        	jr nz,8F
 170+ 9800 18 10        	jr 3F
 171+ 9802 3A DE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 172+ 9805 FE FD        	cp $fd
 173+ 9807 20 21        	jr nz,8F
 174+ 9809 18 07        	jr 3F
 175+ 980B 3A DE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 176+ 980E FE FB        	cp $fb
 177+ 9810 20 18        	jr nz,8F
 178+ 9812
 179+ 9812              ; ---------- ---------- ----------
 180+ 9812
 181+ 9812              3
 182+ 9812 CD 45 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 183+ 9815              ;	call Reinicio
 184+ 9815
 185+ 9815              ; ---------- ---------- ----------
 186+ 9815              ;
 187+ 9815              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 188+ 9815
 189+ 9815 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 190+ 9817 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 191+ 9818 CD 31 98     	call DESPLZ_DER
 192+ 981B C1           	pop bc
 193+ 981C 10 F9        	djnz 5B
 194+ 981E 2A D8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 195+ 9821 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 196+ 9822 22 D8 88     	ld (Posicion_actual),hl
 197+ 9825 CD 7D 9A     	call Genera_coordenadas
 198+ 9828 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 199+ 982A
 200+ 982A              ; ---------- ---------- ----------
 201+ 982A
 202+ 982A 2A D8 88     8 ld hl,(Posicion_actual)
 203+ 982D CD 31 98     	call DESPLZ_DER
 204+ 9830 C9           2 ret
 205+ 9831
 206+ 9831              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 207+ 9831              ;
 208+ 9831              ;	22/9/22
 209+ 9831              ;
 210+ 9831
 211+ 9831 CD 40 98     DESPLZ_DER call Desplaza_derecha
 212+ 9834 CD 8C 98         call modifica_parametros_1er_DESPLZ_2
 213+ 9837 CD B5 98         call Ciclo_completo
 214+ 983A 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 215+ 983D CB FE        	set 7,(hl)
 216+ 983F C9           	ret
 217+ 9840
 218+ 9840              ; ******************************************************************************************************************************************************************************************
 219+ 9840              ;	15/02/23
 220+ 9840              ;
 221+ 9840
 222+ 9840 3A EC 88     Desplaza_derecha ld a,(Vel_right)
 223+ 9843 47           	ld b,a
 224+ 9844 2A E4 88     	ld hl,(Puntero_DESPLZ_der)
 225+ 9847 23           1 inc hl
 226+ 9848 23           	inc hl
 227+ 9849 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 228+ 984B 22 E4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 229+ 984E CD 04 8C     	call Extrae_address
 230+ 9851 22 DA 88     	ld (Puntero_objeto),hl
 231+ 9854
 232+ 9854              ; Modifica (Puntero_DESPLZ_izq).
 233+ 9854
 234+ 9854              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 235+ 9854              ; Cuántos movimientos hemos hecho ??
 236+ 9854              ; DE contiene (Puntero_DESPLZ_der).
 237+ 9854
 238+ 9854 2A E0 88     7 ld hl,(Indice_Sprite_der)
 239+ 9857 EB           	ex de,hl
 240+ 9858 A7           	and a
 241+ 9859 ED 52        	sbc hl,de
 242+ 985B CB 3D        	srl l
 243+ 985D 3E 08        6 ld a,8
 244+ 985F 95           	sub l
 245+ 9860 30 1E        	jr nc,3F
 246+ 9862
 247+ 9862              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 248+ 9862              ; B="0".
 249+ 9862
 250+ 9862 04           4 inc b
 251+ 9863 3C           	inc a
 252+ 9864 20 FC        	jr nz,4B
 253+ 9866 78           	ld a,b
 254+ 9867 08           	ex af,af
 255+ 9868 2A E0 88     	ld hl,(Indice_Sprite_der)
 256+ 986B 23           5 inc hl
 257+ 986C 23           	inc hl
 258+ 986D 10 FC        	djnz 5B
 259+ 986F 22 E4 88     	ld (Puntero_DESPLZ_der),hl
 260+ 9872 CD 04 8C     	call Extrae_address
 261+ 9875 22 DA 88     	ld (Puntero_objeto),hl
 262+ 9878
 263+ 9878              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 264+ 9878              ; _(Posicion_actual).
 265+ 9878
 266+ 9878 21 D8 88     	ld hl,Posicion_actual
 267+ 987B 34           	inc (hl)
 268+ 987C 08               ex af,af
 269+ 987D 6F           	ld l,a
 270+ 987E 18 DD        	jr 6B
 271+ 9880
 272+ 9880              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 273+ 9880
 274+ 9880 47           3 ld b,a
 275+ 9881 2A E2 88     	ld hl,(Indice_Sprite_izq)
 276+ 9884 23           2 inc hl
 277+ 9885 23           	inc hl
 278+ 9886 10 FC        	djnz 2B
 279+ 9888 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 280+ 988B C9           8 ret
 281+ 988C
 282+ 988C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 283+ 988C              ;
 284+ 988C              ;	24/7/22
 285+ 988C              ;
 286+ 988C              ;	modifica_parametros_1er_DESPLZ_2
 287+ 988C              ;
 288+ 988C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 289+ 988C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 290+ 988C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 291+ 988C
 292+ 988C 3A DE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 293+ 988F A7           	and a
 294+ 9890 20 1F        	jr nz,1F
 295+ 9892 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 296+ 9894 32 DE 88         ld (CTRL_DESPLZ),a
 297+ 9897
 298+ 9897 21 D7 88     	ld hl,Columns
 299+ 989A 34           	inc (hl)
 300+ 989B 3A EA 88     	ld a,(Cuad_objeto)
 301+ 989E E6 01        	and 1
 302+ 98A0 28 0F        	jr z,1F
 303+ 98A2 2A D8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 304+ 98A5 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 305+ 98A6 22 D8 88     	ld (Posicion_actual),hl
 306+ 98A9 CD 7D 9A     	call Genera_coordenadas
 307+ 98AC CD 11 9A     	call Inc_CTRL_DESPLZ
 308+ 98AF 18 03        	jr 2F
 309+ 98B1 CD 11 9A     1 call Inc_CTRL_DESPLZ
 310+ 98B4 C9           2 ret
 311+ 98B5
 312+ 98B5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 98B5              ;
 314+ 98B5              ;	24/7/22
 315+ 98B5              ;
 316+ 98B5              ;	Ciclo_completo.
 317+ 98B5              ;
 318+ 98B5              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 319+ 98B5              ;
 320+ 98B5              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 321+ 98B5              ; 	Decrementamos (Columns).
 322+ 98B5              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 323+ 98B5              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 324+ 98B5
 325+ 98B5
 326+ 98B5 3A DE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 327+ 98B8 FE FF        	cp $ff
 328+ 98BA 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 329+ 98BC E6 F0        	and $f0
 330+ 98BE 20 28        	jr nz,3F
 331+ 98C0
 332+ 98C0              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 333+ 98C0
 334+ 98C0 3A DE 88     	ld a,(CTRL_DESPLZ)
 335+ 98C3 47           	ld b,a
 336+ 98C4 3E F8        	ld a,$f8
 337+ 98C6 80           	add b
 338+ 98C7 32 DE 88     	ld (CTRL_DESPLZ),a
 339+ 98CA 18 1C        	jr 3F
 340+ 98CC 21 D7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 341+ 98CF 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 342+ 98D0 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 343+ 98D1 32 DE 88     	ld (CTRL_DESPLZ),a
 344+ 98D4 3A EA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 345+ 98D7 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 346+ 98D9 20 0A        	jr nz,2F
 347+ 98DB 2A D8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 348+ 98DE 23           	inc hl
 349+ 98DF 22 D8 88     	ld (Posicion_actual),hl
 350+ 98E2 CD 7D 9A     	call Genera_coordenadas
 351+ 98E5
 352+ 98E5              ; Inicia el puntero de Sprite.
 353+ 98E5
 354+ 98E5 CD 1B 8C     2 call Inicia_puntero_objeto_der
 355+ 98E8 C9           3 ret
 356+ 98E9
 357+ 98E9              ; ******************************************************************************************************************************************************************************************
 358+ 98E9              ;
 359+ 98E9              ;	15/02/23
 360+ 98E9              ;
 361+ 98E9              ;	Mov_left.
 362+ 98E9              ;
 363+ 98E9              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 364+ 98E9              ;
 365+ 98E9 21 04 89     Mov_left ld hl,Ctrl_0
 366+ 98EC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 367+ 98EE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 368+ 98EE              ; 																	; _ en el caso de que no lo haya.
 369+ 98EE 3A 04 89     	ld a,(Ctrl_0)
 370+ 98F1 CB 77        	bit 6,a
 371+ 98F3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 372+ 98F5
 373+ 98F5 CD 0B 9A     	call Stop_Amadeus_left
 374+ 98F8 C8           	ret z
 375+ 98F9 20 4A        	jr nz,8F
 376+ 98FB
 377+ 98FB 3A DC 88     11 ld a,(Coordenada_X)
 378+ 98FE A7           	and a
 379+ 98FF 20 44        	jr nz,8F
 380+ 9901
 381+ 9901 3A DE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 382+ 9904 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 383+ 9905 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 384+ 9907
 385+ 9907              ; ---------- ---------- ----------
 386+ 9907
 387+ 9907 3A EB 88     	ld a,(Vel_left)
 388+ 990A FE 02        	cp 2
 389+ 990C 28 0F        	jr z,1F
 390+ 990E 38 04        	jr c,6F
 391+ 9910 FE 04        	cp 4
 392+ 9912 28 12        	jr z,7F
 393+ 9914
 394+ 9914              ; ---------- ---------- ----------
 395+ 9914
 396+ 9914 3A DE 88     6 ld a,(CTRL_DESPLZ)
 397+ 9917 FE F8        	cp $f8
 398+ 9919 20 2A        	jr nz,8F
 399+ 991B 18 10        	jr 4F
 400+ 991D 3A DE 88     1 ld a,(CTRL_DESPLZ)
 401+ 9920 FE F9        	cp $f9
 402+ 9922 20 21        	jr nz,8F
 403+ 9924 18 07        	jr 4F
 404+ 9926 3A DE 88     7 ld a,(CTRL_DESPLZ)
 405+ 9929 FE FB        	cp $fb
 406+ 992B 20 18        	jr nz,8F
 407+ 992D
 408+ 992D              ; ---------- ---------- ----------
 409+ 992D
 410+ 992D              4
 411+ 992D CD 33 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 412+ 9930              ;	call Reinicio
 413+ 9930
 414+ 9930              ; ---------- ---------- ----------
 415+ 9930
 416+ 9930 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 417+ 9932 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 418+ 9933
 419+ 9933              ;	ld hl,(Indice_Sprite_izq)
 420+ 9933              ;	ld (Puntero_DESPLZ_izq),hl
 421+ 9933
 422+ 9933 CD 4C 99     	call DESPLZ_IZQ
 423+ 9936 C1           	pop bc
 424+ 9937 10 F9        	djnz 5B
 425+ 9939 2A D8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 426+ 993C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 427+ 993D 22 D8 88     	ld (Posicion_actual),hl
 428+ 9940 CD 7D 9A     	call Genera_coordenadas
 429+ 9943 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 430+ 9945
 431+ 9945              ; ---------- ---------- ----------
 432+ 9945
 433+ 9945              ; Movemos, no hay recolocación.
 434+ 9945
 435+ 9945 2A D8 88     8 ld hl,(Posicion_actual)
 436+ 9948 CD 4C 99     	call DESPLZ_IZQ
 437+ 994B C9           2 ret
 438+ 994C
 439+ 994C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 440+ 994C              ;
 441+ 994C              ;	22/9/22
 442+ 994C
 443+ 994C              DESPLZ_IZQ
 444+ 994C
 445+ 994C CD 5B 99     	call Desplaza_izquierda
 446+ 994F CD A7 99         call modifica_parametros_1er_DESPLZ
 447+ 9952 CD CF 99     	call Ciclo_completo_2
 448+ 9955 21 04 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 449+ 9958 CB BE        	res 7,(hl)
 450+ 995A C9           	ret
 451+ 995B
 452+ 995B              Desplaza_izquierda
 453+ 995B
 454+ 995B 3A EB 88     	ld a,(Vel_left)
 455+ 995E 47           	ld b,a
 456+ 995F 2A E6 88     	ld hl,(Puntero_DESPLZ_izq)
 457+ 9962 23           1 inc hl
 458+ 9963 23           	inc hl
 459+ 9964 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 460+ 9966 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 461+ 9969 CD 04 8C     	call Extrae_address
 462+ 996C 22 DA 88     	ld (Puntero_objeto),hl
 463+ 996F
 464+ 996F              ; Modifica (Puntero_DESPLZ_der).
 465+ 996F
 466+ 996F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 467+ 996F              ; Cuántos movimientos hemos hecho ??
 468+ 996F              ; DE contiene (Puntero_DESPLZ_izq).
 469+ 996F
 470+ 996F 2A E2 88     7 ld hl,(Indice_Sprite_izq)
 471+ 9972 EB           	ex de,hl
 472+ 9973 A7           	and a
 473+ 9974 ED 52        	sbc hl,de
 474+ 9976 CB 3D        	srl l
 475+ 9978 3E 08        6 ld a,8
 476+ 997A 95           	sub l
 477+ 997B 30 1E        	jr nc,3F
 478+ 997D
 479+ 997D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 480+ 997D              ; B="0".
 481+ 997D
 482+ 997D 04           4 inc b
 483+ 997E 3C           	inc a
 484+ 997F 20 FC        	jr nz,4B
 485+ 9981 78           	ld a,b
 486+ 9982 08           	ex af,af
 487+ 9983 2A E2 88     	ld hl,(Indice_Sprite_izq)
 488+ 9986 23           5 inc hl
 489+ 9987 23           	inc hl
 490+ 9988 10 FC        	djnz 5B
 491+ 998A 22 E6 88     	ld (Puntero_DESPLZ_izq),hl
 492+ 998D CD 04 8C     	call Extrae_address
 493+ 9990 22 DA 88     	ld (Puntero_objeto),hl
 494+ 9993
 495+ 9993              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 496+ 9993              ; _(Posicion_actual).
 497+ 9993
 498+ 9993 21 D8 88     	ld hl,Posicion_actual
 499+ 9996 35           	dec (hl)
 500+ 9997 08           	ex af,af
 501+ 9998 6F           	ld l,a
 502+ 9999 18 DD        	jr 6B
 503+ 999B
 504+ 999B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 505+ 999B
 506+ 999B 47           3 ld b,a
 507+ 999C 2A E0 88     	ld hl,(Indice_Sprite_der)
 508+ 999F 23           2 inc hl
 509+ 99A0 23           	inc hl
 510+ 99A1 10 FC        	djnz 2B
 511+ 99A3 22 E4 88     	ld (Puntero_DESPLZ_der),hl
 512+ 99A6 C9           8 ret
 513+ 99A7
 514+ 99A7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 515+ 99A7              ;
 516+ 99A7              ;	modifica_parametros_1er_DESPLZ
 517+ 99A7              ;
 518+ 99A7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 519+ 99A7              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 520+ 99A7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 521+ 99A7
 522+ 99A7 3A DE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 523+ 99AA A7           	and a
 524+ 99AB 20 1E        	jr nz,1F
 525+ 99AD 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 526+ 99AE 32 DE 88         ld (CTRL_DESPLZ),a
 527+ 99B1 21 D7 88     	ld hl,Columns
 528+ 99B4 34           	inc (hl)
 529+ 99B5 3A EA 88     	ld a,(Cuad_objeto)
 530+ 99B8 E6 01        	and 1
 531+ 99BA 20 0F        	jr nz,1F
 532+ 99BC 2A D8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 533+ 99BF 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 534+ 99C0 22 D8 88     	ld (Posicion_actual),hl
 535+ 99C3 CD 7D 9A     	call Genera_coordenadas
 536+ 99C6 CD 22 9A     	call Dec_CTRL_DESPLZ
 537+ 99C9 18 03        	jr 2F
 538+ 99CB CD 22 9A     1 call Dec_CTRL_DESPLZ
 539+ 99CE C9           2 ret
 540+ 99CF
 541+ 99CF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 542+ 99CF
 543+ 99CF 3A DE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 544+ 99D2 FE F7        	cp $f7
 545+ 99D4 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 546+ 99D6 30 2C        	jr nc,3F
 547+ 99D8
 548+ 99D8              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 549+ 99D8
 550+ 99D8 06 00        	ld b,0
 551+ 99DA 04           4 inc b
 552+ 99DB 3C           	inc a
 553+ 99DC FE F7        	cp $f7
 554+ 99DE 20 FA        	jr nz,4B
 555+ 99E0 3E FF        	ld a,$ff
 556+ 99E2 90           	sub b
 557+ 99E3 32 DE 88     	ld (CTRL_DESPLZ),a
 558+ 99E6 18 1C        	jr 3F
 559+ 99E8
 560+ 99E8              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 561+ 99E8
 562+ 99E8 21 D7 88     1 ld hl,Columns
 563+ 99EB 35           	dec (hl)
 564+ 99EC AF           	xor a
 565+ 99ED 32 DE 88     	ld (CTRL_DESPLZ),a
 566+ 99F0 3A EA 88     	ld a,(Cuad_objeto)
 567+ 99F3 E6 01        	and 1
 568+ 99F5 28 0A        	jr z,2F
 569+ 99F7 2A D8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 570+ 99FA 2B           	dec hl
 571+ 99FB 22 D8 88     	ld (Posicion_actual),hl
 572+ 99FE CD 7D 9A     	call Genera_coordenadas
 573+ 9A01
 574+ 9A01              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 575+ 9A01
 576+ 9A01 CD 2E 8C     2 call Inicia_puntero_objeto_izq
 577+ 9A04 C9           3 ret
 578+ 9A05
 579+ 9A05              ; ---------- ---------- ---------- ---------- ---------- ----------
 580+ 9A05              ;
 581+ 9A05              ;	19/10/22
 582+ 9A05              ;
 583+ 9A05              ;	(cp 29) para un Amadeus de 3 Columns.
 584+ 9A05              ;	(cp 30)   ""  ""    ""     2 Columns.
 585+ 9A05
 586+ 9A05 3A DC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 587+ 9A08 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 588+ 9A0A C9           	ret
 589+ 9A0B
 590+ 9A0B              ; ---------- ---------- ---------- ---------- ---------- ----------
 591+ 9A0B              ;
 592+ 9A0B              ;	19/10/22
 593+ 9A0B              ;
 594+ 9A0B              ;	(cp 2) para un Amadeus de 3 Columns.
 595+ 9A0B              ;	(cp 1)   ""  ""    ""     2 Columns.
 596+ 9A0B
 597+ 9A0B 3A DC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 598+ 9A0E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 599+ 9A10 C9           	ret
 600+ 9A11
 601+ 9A11              ; ---------- ---------- ---------- ---------- ---------- ----------
 602+ 9A11              ;
 603+ 9A11              ;	24/7/22
 604+ 9A11              ;
 605+ 9A11              ;	Inc_CTRL_DESPLZ
 606+ 9A11              ;
 607+ 9A11              ;
 608+ 9A11              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 609+ 9A11
 610+ 9A11 21 DE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 611+ 9A14 3A EC 88     	ld a,(Vel_right)
 612+ 9A17 A7           	and a
 613+ 9A18 28 06        	jr z,1F
 614+ 9A1A 47           	ld b,a
 615+ 9A1B 34           3 inc (hl)
 616+ 9A1C 10 FD        	djnz 3B
 617+ 9A1E 18 01        	jr 2F
 618+ 9A20 34           1 inc (hl)
 619+ 9A21 C9           2 ret
 620+ 9A22
 621+ 9A22              ; ---------- ---------- ---------- ---------- ---------- ----------
 622+ 9A22              ;
 623+ 9A22              ;	5/2/23
 624+ 9A22              ;
 625+ 9A22              ;	Dec_CTRL_DESPLZ
 626+ 9A22              ;
 627+ 9A22              ;
 628+ 9A22              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 629+ 9A22
 630+ 9A22 21 DE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 631+ 9A25 3A EB 88     	ld a,(Vel_left)
 632+ 9A28 A7           	and a
 633+ 9A29 28 06        	jr z,1F
 634+ 9A2B 47           	ld b,a
 635+ 9A2C 35           3 dec (hl)
 636+ 9A2D 10 FD        	djnz 3B
 637+ 9A2F 18 01        	jr 2F
 638+ 9A31 35           1 dec (hl)
 639+ 9A32 C9           2 ret
 640+ 9A33
 641+ 9A33              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9A33
 643+ 9A33 2A D8 88     Reaparece_derecha ld hl,(Posicion_actual)
 644+ 9A36 01 1F 00     	ld bc,31
 645+ 9A39 A7           	and a
 646+ 9A3A ED 4A        	adc hl,bc
 647+ 9A3C 22 D8 88     	ld (Posicion_actual),hl
 648+ 9A3F 21 04 89     	ld hl,Ctrl_0														; $xxx1
 649+ 9A42 CB C6        	set 0,(hl)
 650+ 9A44 C9           	ret
 651+ 9A45
 652+ 9A45              ; ---------- ---------- ---------- ---------- ---------- ----------
 653+ 9A45
 654+ 9A45 2A D8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 655+ 9A48 01 1F 00     	ld bc,31
 656+ 9A4B A7           	and a
 657+ 9A4C ED 42        	sbc hl,bc
 658+ 9A4E 22 D8 88     	ld (Posicion_actual),hl 											; $xx1x
 659+ 9A51 21 04 89     	ld hl,Ctrl_0
 660+ 9A54 CB CE        	set 1,(hl)
 661+ 9A56 C9           	ret
 662+ 9A57
 663+ 9A57              ; ---------- ---------- ---------- ---------- ---------- ----------
 664+ 9A57
 665+ 9A57 24           Reaparece_abajo inc h
 666+ 9A58 01 E0 17     	ld bc,$17e0
 667+ 9A5B A7           	and a
 668+ 9A5C ED 4A        	adc hl,bc
 669+ 9A5E 22 D8 88     	ld (Posicion_actual),hl
 670+ 9A61 21 04 89     	ld hl,Ctrl_0
 671+ 9A64 CB D6        	set 2,(hl)
 672+ 9A66 C9           	ret
 673+ 9A67
 674+ 9A67              ; ---------- ---------- ---------- ---------- ---------- ----------
 675+ 9A67
 676+ 9A67 01 E0 17     Reaparece_arriba ld bc,$17e0
 677+ 9A6A A7           	and a
 678+ 9A6B ED 42        	sbc hl,bc
 679+ 9A6D 22 D8 88     	ld (Posicion_actual),hl
 680+ 9A70 21 04 89     	ld hl,Ctrl_0
 681+ 9A73 CB DE        	set 3,(hl)
 682+ 9A75 C9           	ret
 683+ 9A76
 684+ 9A76              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 685+ 9A76
 686+ 9A76 2A E8 88     Reinicio ld hl,(Posicion_inicio)
 687+ 9A79 22 D8 88     	ld (Posicion_actual),hl
 688+ 9A7C C9           	ret
# file closed: Direcciones.asm
1211  9A7D              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9A7D              ; ------------------------------------------------------------------------
   2+ 9A7D              ;
   3+ 9A7D              ;	02/04/23
   4+ 9A7D              ;
   5+ 9A7D              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9A7D              ;	Fila superior "0", Columna izquierda "0".
   7+ 9A7D              ;
   8+ 9A7D              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9A7D              ;
  10+ 9A7D              ;	Modifica: A,BC y DE.
  11+ 9A7D
  12+ 9A7D C5           Genera_coordenadas push bc
  13+ 9A7E E5           	push hl
  14+ 9A7F D5           	push de
  15+ 9A80
  16+ 9A80 2A D8 88     	ld hl,(Posicion_actual)
  17+ 9A83
  18+ 9A83 7D           	ld a,l
  19+ 9A84 E6 1F        	and $1f
  20+ 9A86 32 DC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9A89
  22+ 9A89 CD 29 97     	call calcula_tercio
  23+ 9A8C 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9A8D
  25+ 9A8D 1E 00        	ld e,0
  26+ 9A8F 7D           	ld a,l
  27+ 9A90 E6 E0        	and $e0
  28+ 9A92 28 01        	jr z,1F
  29+ 9A94 04           	inc b
  30+ 9A95
  31+ 9A95 04           1 inc b
  32+ 9A96 05           	dec b
  33+ 9A97 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9A99              ;														; _ , salimos.
  35+ 9A99 1C           3 inc e
  36+ 9A9A D6 20        	sub 32
  37+ 9A9C 20 FB        	jr nz,3B
  38+ 9A9E 10 F5        	djnz 1B
  39+ 9AA0
  40+ 9AA0 7B           2 ld a,e
  41+ 9AA1 32 DD 88     	ld (Coordenada_y),a
  42+ 9AA4
  43+ 9AA4 D1           	pop de
  44+ 9AA5 E1           	pop hl
  45+ 9AA6 C1           	pop bc
  46+ 9AA7
  47+ 9AA7 C9           	ret
  48+ 9AA8
  49+ 9AA8              ; ------------------------------------------------------------------------
  50+ 9AA8              ;	28/03/23
  51+ 9AA8              ;
  52+ 9AA8              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9AA8              ;	Fila superior "0", Columna izquierda "0".
  54+ 9AA8              ;
  55+ 9AA8              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9AA8              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9AA8              ;
  58+ 9AA8              ;		DE="$120d"
  59+ 9AA8              ;
  60+ 9AA8              ;		D, (Coordenada_X), Columnas, $12
  61+ 9AA8              ;		E, (Coordenada_y), Filas, $0d
  62+ 9AA8              ;
  63+ 9AA8              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9AA8
  65+ 9AA8              ;	Modifica: A,BC y DE.
  66+ 9AA8
  67+ 9AA8
  68+ 9AA8              Genera_coordenadas_disparo
  69+ 9AA8
  70+ 9AA8              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9AA8
  72+ 9AA8 7D           	ld a,l
  73+ 9AA9 E6 1F        	and $1f
  74+ 9AAB 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9AAC CD 29 97     	call calcula_tercio
  76+ 9AAF 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9AB0 1E 00        	ld e,0
  78+ 9AB2 7D           	ld a,l
  79+ 9AB3 E6 E0        	and $e0
  80+ 9AB5 28 01        	jr z,1F
  81+ 9AB7 04           	inc b
  82+ 9AB8 1C           1 inc e
  83+ 9AB9 D6 20        	sub 32
  84+ 9ABB 20 FB        	jr nz,1B
  85+ 9ABD 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9ABF C9           	ret
  87+ 9AC0
# file closed: Genera_coordenadas.asm
1212  9AC0              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9AC0
   2+ 9AC0
   3+ 9AC0              ;   11/8/22
   4+ 9AC0              ;
   5+ 9AC0              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9AC0              ;
   7+ 9AC0              ;   Mov_obj.asm
   8+ 9AC0              ;
   9+ 9AC0              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9AC0              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9AC0              ;
  12+ 9AC0              ;   Codificación:
  13+ 9AC0              ;
  14+ 9AC0              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9AC0
  16+ 9AC0              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9AC0
  18+ 9AC0 02 40 00     Arriba db 2,%01000000,0
  19+ 9AC3 02 80 00     Abajo db 2,%10000000,0
  20+ 9AC6 02 20 00     Derecha db 2,%00100000,0
  21+ 9AC9 02 10 00     Izquierda db 2,%00010000,0
  22+ 9ACC 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9AD0 60 42 60 40
  22+ 9AD4 63
  23+ 9AD5 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9AD9 22 A3 80 A0
  24+ 9ADD 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9AE1 84 A0 83 A0
  25+ 9AE5 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9AE9 80 A3 22 A0
  26+ 9AED 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9AF1 40 60 42 60
  27+ 9AF5 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9AF9
  29+ 9AF9 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9AFD 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9B01 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9B05 84 00
  32+ 9B07 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9B0B 84 00
  33+ 9B0D 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9B11 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9B15 1F 1F 1F 1F
  35+ 9B19 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9B1D 1F 1F 1F 1F
  35+ 9B21 1F
  36+ 9B22 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9B26 2F 2F 2F 2F
  36+ 9B2A 2F 2F
  37+ 9B2C 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9B30 2F 2F 00
  38+ 9B33
  39+ 9B33              ; ----- ----- ----- ----- -----
  40+ 9B33
  41+ 9B33 11 9B        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9B35 0D 9B        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9B37 C9 9A        Indice_mov_Izquierda defw Izquierda
  44+ 9B39 C6 9A        Indice_mov_Derecha defw Derecha
  45+ 9B3B C3 9A        Indice_mov_Abajo defw Abajo
  46+ 9B3D C0 9A        Indice_mov_Arriba defw Arriba
  47+ 9B3F FD 9A        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9B41 01 9B        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9B43 F9 9A        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9B45 07 9B        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9B47 CC 9A        Indice_mov_Onda_senoidal defw Onda_senoidal ; (Es un mov. de izquierda).
  52+ 9B49              ; ----- ----- ----- ----- -----
  53+ 9B49
  54+ 9B49 3A 0B 89     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9B4C A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9B4D 28 02            jr z,1F
  57+ 9B4F 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9B51 3A 0C 89     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9B54 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9B56 32 0C 89         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9B59              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9B59 2A 09 89         ld hl,(Puntero_mov)
  63+ 9B5C 7E               ld a,(hl)
  64+ 9B5D 32 0B 89         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9B60 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9B61 22 09 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9B64
  68+ 9B64 3A 0D 89     Decoder ld a,(Repetimos_db)
  69+ 9B67 A7               and a
  70+ 9B68 20 0C            jr nz,12F
  71+ 9B6A 2A 09 89         ld hl,(Puntero_mov)
  72+ 9B6D 7E               ld a,(hl)
  73+ 9B6E A7               and a
  74+ 9B6F 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9B71 E6 0F            and $0f
  76+ 9B73 32 0D 89         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9B76              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9B76 2A 09 89     12 ld hl,(Puntero_mov)
  79+ 9B79 CB 7E            bit 7,(hl)
  80+ 9B7B 28 03            jr z,2F
  81+ 9B7D CD 6F 97         call Mov_down
  82+ 9B80 2A 09 89     2 ld hl, (Puntero_mov)
  83+ 9B83 CB 76            bit 6,(hl)
  84+ 9B85 28 03            jr z,3F
  85+ 9B87 CD 9D 97         call Mov_up
  86+ 9B8A 2A 09 89     3 ld hl, (Puntero_mov)
  87+ 9B8D CB 6E            bit 5,(hl)
  88+ 9B8F 28 03            jr z,4F
  89+ 9B91 CD CB 97         call Mov_right
  90+ 9B94 2A 09 89     4 ld hl, (Puntero_mov)
  91+ 9B97 CB 66            bit 4,(hl)
  92+ 9B99 28 03            jr z,5F
  93+ 9B9B CD E9 98         call Mov_left
  94+ 9B9E
  95+ 9B9E              ; ---------- --------- --------- ---------- ----------
  96+ 9B9E
  97+ 9B9E 3A 0D 89     5 ld a,(Repetimos_db)
  98+ 9BA1 A7               and a
  99+ 9BA2 28 07            jr z,6F
 100+ 9BA4 3D               dec a
 101+ 9BA5 32 0D 89         ld (Repetimos_db),a
 102+ 9BA8 28 01            jr z,6f
 103+ 9BAA C9           11 ret
 104+ 9BAB 21 0B 89     6 ld hl,Contador_db_mov
 105+ 9BAE 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9BAF 2A 09 89         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9BB2 23               inc hl
 108+ 9BB3 22 09 89         ld (Puntero_mov),hl
 109+ 9BB6 18 F2            jr 11B
 110+ 9BB8 2A 07 89     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9BBB 3A 0C 89         ld a,(Incrementa_puntero)
 112+ 9BBE 47               ld b,a
 113+ 9BBF 23           8 inc hl
 114+ 9BC0 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9BC2 5E               ld e,(hl)
 116+ 9BC3 23               inc hl
 117+ 9BC4 56               ld d,(hl)
 118+ 9BC5 EB               ex de,hl
 119+ 9BC6 22 09 89         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9BC9 18 DF            jr 11B
 121+ 9BCB
 122+ 9BCB              ; ---------- --------- --------- ---------- ----------
 123+ 9BCB              ;
 124+ 9BCB              ;   11/8/22
 125+ 9BCB              ;
 126+ 9BCB              ;   Prepara_Puntero_mov
 127+ 9BCB
 128+ 9BCB E5           Prepara_Puntero_mov push hl
 129+ 9BCC D5               push de
 130+ 9BCD 2A 07 89         ld hl,(Puntero_indice_mov)
 131+ 9BD0 5E               ld e,(hl)
 132+ 9BD1 23               inc hl
 133+ 9BD2 56               ld d,(hl)
 134+ 9BD3 EB               ex de,hl
 135+ 9BD4 22 09 89         ld (Puntero_mov),hl
 136+ 9BD7 D1               pop de
 137+ 9BD8 E1               pop hl
 138+ 9BD9 C9               ret
 139+ 9BDA
 140+ 9BDA              ; ---------- --------- --------- ---------- ----------
 141+ 9BDA              ;
 142+ 9BDA              ;   11/8/22
 143+ 9BDA              ;
 144+ 9BDA              ;   Reinicia_el_movimiento
 145+ 9BDA
 146+ 9BDA CD CB 9B     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9BDD AF               xor a
 148+ 9BDE 32 0B 89         ld (Contador_db_mov),a
 149+ 9BE1 32 0C 89         ld (Incrementa_puntero),a
 150+ 9BE4 C3 49 9B         jp Movimiento
 151+ 9BE7 C9               ret
 152+ 9BE8              ; ---------- --------- --------- ---------- ----------
 153+ 9BE8
 154+ 9BE8
 155+ 9BE8
 156+ 9BE8
 157+ 9BE8
 158+ 9BE8
 159+ 9BE8
 160+ 9BE8
 161+ 9BE8
 162+ 9BE8
 163+ 9BE8
 164+ 9BE8
 165+ 9BE8
 166+ 9BE8
 167+ 9BE8
 168+ 9BE8
 169+ 9BE8
 170+ 9BE8
# file closed: Patrones_de_mov.asm
1213  9BE8              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9BE8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9BE8              ;
   3+ 9BE8              ;	3/1/23
   4+ 9BE8              ;
   5+ 9BE8              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9BE8
   7+ 9BE8              ;	ADC HL,SP	LD (addr),SP
   8+ 9BE8              ;	ADD HL,SP	LD SP,(addr)
   9+ 9BE8              ;	ADD IX,SP	LD SP,nn
  10+ 9BE8              ; 	ADD IY,SP	LD SP,HL
  11+ 9BE8              ;				LD SP,IX
  12+ 9BE8              ;	DEC SP		LD SP,IY
  13+ 9BE8
  14+ 9BE8              ;	EX (SP),HL
  15+ 9BE8              ;	EX (SP),IX
  16+ 9BE8              ;	EX (SP),IY
  17+ 9BE8
  18+ 9BE8              ;	INC SP
  19+ 9BE8
  20+ 9BE8
  21+ 9BE8                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 24 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 13 89         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 2A 89         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 28 89     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 2A 89         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 28 89     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 24 89  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1214  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1215  7FE6
1216  7FE6              	SAVESNA "Pruebas.sna", START
1217  7FE6
1218  7FE6
1219  7FE6
1220  7FE6
# file closed: Banco_de_pruebas.asm
