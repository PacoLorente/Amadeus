# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD 29 8E     	call Frame
  15  AA04 CD E8 8A     	call Gestiona_Amadeus
  16  AA07
  17  AA07 FB           	ei
  18  AA08 ED 4D        	reti
  19  AA0A
  20  AA0A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  21  AA0A
  22  AA0A              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA0A              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA0A              ;
   3+ AA0A              ;	17/02/23
   4+ AA0A              ;
   5+ AA0A              ;	Sprites e índices.
   6+ AA0A
   7+ AA0A              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1E 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 24 89        	defw End_Snapshot_1
 267+ 8500 28 89        	defw End_Snapshot_2
 268+ 8502 2C 89        	defw End_Snapshot_3
 269+ 8504 20 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 26 89        	defw End_Snapshot_disparos_1
 271+ 8508 2A 89        	defw End_Snapshot_disparos_2
 272+ 850A 2E 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  23  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 95 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 95 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  24  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CA 87        	defw Nivel_2
   7+ 87BE D7 87        	defw Nivel_3
   8+ 87C0 E7 87        	defw Nivel_4
   9+ 87C2 F9 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 01           Nivel_1 db 1	                                ; Nº de entidades.
  18+ 87C9 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87CF 01 02
  21+ 87D1 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D5 01 02
  22+ 87D7 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D8 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DC 01
  24+ 87DD 03 01 01 01  	db 3,1,1,1,1
  24+ 87E1 01
  25+ 87E2 03 01 01 01  	db 3,1,1,1,1
  25+ 87E6 01
  26+ 87E7 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E8 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87EC 01
  28+ 87ED 04 01 01 01  	db 4,1,1,1,1
  28+ 87F1 01
  29+ 87F2 04 01 01 01  	db 4,1,1,1,1
  29+ 87F6 01
  30+ 87F7 02 03        	db 2,3
  31+ 87F9 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FA 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FE 01
  33+ 87FF 05 01 01 01  	db 5,1,1,1,1
  33+ 8803 01
  34+ 8804 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8808 01
  35+ 8809 05 01 01 01  	db 5,1,1,1,1
  35+ 880D 01
  36+ 880E
  37+ 880E              ;---------------------------------------------------------------------------------------------------------------
  38+ 880E              ;
  39+ 880E              ;   3/9/23
  40+ 880E              ;
  41+ 880E              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880E              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880E              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880E              ;	_en la caja DRAW correspondiente.
  45+ 880E              ;
  46+ 880E              ;	MODIFICA: HL,DE y A.
  47+ 880E              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880E
  49+ 880E              Inicializa_Punteros_de_nivel
  50+ 880E
  51+ 880E 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8811 22 5B 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8814 CD DF 8C     	call Extrae_address
  54+ 8817 7E           	ld a,(hl)
  55+ 8818 32 0C 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881B 23           	inc hl
  57+ 881C 22 5D 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 881F C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8820
  60+ 8820              ;---------------------------------------------------------------------------------------------------------------
  61+ 8820              ;
  62+ 8820              ;   13/5/23
  63+ 8820              ;
  64+ 8820              ;	Destruye A,BC,HL,DE
  65+ 8820
  66+ 8820              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8820              ;	_del juego.
  68+ 8820
  69+ 8820              Prepara_cajas
  70+ 8820
  71+ 8820              ; Preparamos los punteros de las cajas.
  72+ 8820
  73+ 8820 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8823 CD DF 8C     	call Extrae_address
  75+ 8826 CD 63 88     	call Avanza_caja
  76+ 8829
  77+ 8829 CD A7 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882C
  79+ 882C 2A 5D 89     	ld hl,(Datos_de_nivel)
  80+ 882F
  81+ 882F              ; HL está en los datos del nivel correspondiente.
  82+ 882F              ; B actuará como contador de cajas.
  83+ 882F
  84+ 882F C5           1 push bc
  85+ 8830
  86+ 8830 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8831 CD 54 88     	call PreparaBC
  88+ 8834
  89+ 8834 21 96 87     	ld hl,Indice_de_entidades
  90+ 8837 CD 5C 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883A 22 12 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883D
  93+ 883D CD 6D 88     	call Datos_de_entidad_a_caja
  94+ 8840
  95+ 8840 2A 0A 89     	ld hl,(Indice_restore_caja)
  96+ 8843 CD DF 8C     	call Extrae_address
  97+ 8846 CD 63 88     	call Avanza_caja
  98+ 8849
  99+ 8849 2A 5D 89     	ld hl,(Datos_de_nivel)
 100+ 884C 23           	inc hl
 101+ 884D 22 5D 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8850
 103+ 8850 C1           	pop bc
 104+ 8851 10 DC        	djnz 1B
 105+ 8853 C9           	ret
 106+ 8854
 107+ 8854 CB 27        PreparaBC sla a
 108+ 8856 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8858 4F           	ld c,a
 110+ 8859 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885B C9           	ret
 112+ 885C
 113+ 885C A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885D ED 4A        	adc hl,bc
 115+ 885F CD DF 8C     	call Extrae_address
 116+ 8862 C9           	ret
 117+ 8863
 118+ 8863 22 06 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8866 13           	inc de
 120+ 8867 13           	inc de
 121+ 8868 EB           	ex de,hl
 122+ 8869 22 0A 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886C C9           	ret
 124+ 886D
 125+ 886D              Datos_de_entidad_a_caja
 126+ 886D
 127+ 886D              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886D
 129+ 886D
 130+ 886D ED 5B 06 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8871
 132+ 8871 01 02 00     	ld bc,2
 133+ 8874 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8876
 135+ 8876 01 07 00     	ld bc,7
 136+ 8879 CD A1 88     	call Situa_DE
 137+ 887C
 138+ 887C 01 05 00     	ld bc,5
 139+ 887F ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8881
 141+ 8881 01 04 00     	ld bc,4
 142+ 8884 CD A1 88     	call Situa_DE
 143+ 8887
 144+ 8887 01 07 00     	ld bc,7
 145+ 888A ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888C
 147+ 888C 01 18 00     	ld bc,24
 148+ 888F CD A1 88     	call Situa_DE
 149+ 8892
 150+ 8892 01 02 00     	ld bc,2
 151+ 8895 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8897
 153+ 8897              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8897              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8897
 156+ 8897 01 0F 00     	ld bc,15									; *****
 157+ 889A CD A1 88     	call Situa_DE
 158+ 889D
 159+ 889D 3E 03        	ld a,3
 160+ 889F 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A0
 162+ 88A0 C9           	ret
 163+ 88A1
 164+ 88A1 EB           Situa_DE ex de,hl
 165+ 88A2 A7           	and a
 166+ 88A3 ED 4A        	adc hl,bc
 167+ 88A5 EB           	ex de,hl
 168+ 88A6 C9           	ret
 169+ 88A7
 170+ 88A7              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A7              ;
 172+ 88A7              ;	21/5/23
 173+ 88A7              ;
 174+ 88A7              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A7              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A7              ;
 177+ 88A7              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A7              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A7              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A7              ;
 181+ 88A7              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A7              ;	MODIFICA: A y B.
 183+ 88A7              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A7
 185+ 88A7              Admin_num_entidades
 186+ 88A7
 187+ 88A7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A7
 189+ 88A7 3A 0C 89     	ld a,(Numero_de_entidades)
 190+ 88AA A7           	and a
 191+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AB              ;	jr z,$
 193+ 88AB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AB
 195+ 88AB 20 03        	jr nz,3F
 196+ 88AD
 197+ 88AD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AD
 199+ 88AD CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B0
 201+ 88B0 3A 0C 89     3 ld a,(Numero_de_entidades)
 202+ 88B3 FE 0A        	cp 10
 203+ 88B5 38 08        	jr c,1F
 204+ 88B7
 205+ 88B7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B7              ; Actualizamos variables.
 207+ 88B7
 208+ 88B7 3E 0A        	ld a,10
 209+ 88B9 32 0D 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BC 47           	ld b,a
 211+ 88BD 18 04        	jr 2F
 212+ 88BF
 213+ 88BF              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88BF              ; (Numero_de_entidades)="0".
 215+ 88BF
 216+ 88BF 32 0D 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C2 47           	ld b,a
 218+ 88C3 C9           2 ret
# file closed: Niveles.asm
  25  88C4
  26  88C4              ; ******************************************************************************************************************************************************************************************
  27  88C4              ; Constantes.
  28  88C4              ; ******************************************************************************************************************************************************************************************
  29  88C4              ;
  30  88C4              ; 4/9/23
  31  88C4              ;
  32  88C4              ; Constantes generales.
  33  88C4              ;
  34  88C4
  35  88C4              Sprite_vacio equ $f000
  36  88C4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  88C4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  88C4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  88C4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  88C4
  41  88C4              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  88C4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  88C4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  44  88C4              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  88C4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  88C4              ;
  47  88C4              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  48  88C4              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  49  88C4              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  50  88C4              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  51  88C4              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  52  88C4              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  53  88C4
  54  88C4              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
  55  88C4              Almacen_de_borrado_Amadeus equ $72ad ; 6 bytes. ($72ad - $72b2).
  56  88C4
  57  88C4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  58  88C4
  59  88C4              ; ******************************************************************************************************************************************************************************************
  60  88C4              ; Variables.
  61  88C4              ; ******************************************************************************************************************************************************************************************
  62  88C4              ;
  63  88C4              ; 28/07/23
  64  88C4              ;
  65  88C4              ; Variables de DRAW. (Motor principal).
  66  88C4              ;
  67  88C4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  68  88C4
  69  88C4 00           Filas db 0												; Filas. [DRAW]
  70  88C5 00           Columns db 0  											; Nº de columnas. [DRAW]
  71  88C6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  72  88C8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  73  88CA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  74  88CB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  75  88CC
  76  88CC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  77  88CC
  78  88CC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  79  88CD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  80  88CD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  81  88CD 00           Attr db 0												; Atributos de la entidad:
  82  88CE
  83  88CE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  84  88CE              ;
  85  88CE              ;	COLORES: 0 ..... NEGRO
  86  88CE              ;    		 1 ..... AZUL
  87  88CE              ; 			 2 ..... ROJO
  88  88CE              ;			 3 ..... MAGENTA
  89  88CE              ; 			 4 ..... VERDE
  90  88CE              ; 			 5 ..... CIAN
  91  88CE              ;			 6 ..... AMARILLO
  92  88CE              ; 			 7 ..... BLANCO
  93  88CE
  94  88CE 00 00        Indice_Sprite_der defw 0
  95  88D0 00 00        Indice_Sprite_izq defw 0
  96  88D2 00 00        Puntero_DESPLZ_der defw 0
  97  88D4 00 00        Puntero_DESPLZ_izq defw 0
  98  88D6
  99  88D6 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 100  88D8 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 101  88D9
 102  88D9              ; Variables de objeto. (Características).
 103  88D9
 104  88D9 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 105  88DA 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 106  88DB 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 107  88DC 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 108  88DD
 109  88DD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 110  88DE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 111  88DE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 112  88DE 00 00 00...  Variables_de_borrado ds 6
 113  88E4
 114  88E4 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 115  88E6 00 00        	defw 0
 116  88E8 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 117  88EA 00 00 00 00  	db 0,0,0,0
 118  88EE
 119  88EE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 120  88EE
 121  88EE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 122  88EF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 123  88EF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 124  88EF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 125  88EF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 126  88EF              ;
 127  88EF              ; 														DESCRIPCIÖN:
 128  88EF              ;
 129  88EF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 130  88EF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 131  88EF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 132  88EF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 133  88EF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 134  88EF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 135  88EF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 136  88EF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 137  88EF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 138  88EF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 139  88EF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 140  88EF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 141  88EF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 142  88EF              ;
 143  88EF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 144  88EF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 145  88EF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 146  88EF
 147  88EF 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 148  88F0
 149  88F0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 150  88F0
 151  88F0 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 152  88F1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 153  88F3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 154  88F5 00 00        Puntero_indice_mov_bucle defw 0							;
 155  88F7              ;
 156  88F7              ;
 157  88F7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 158  88F8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 159  88F8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 160  88F8 00           Incrementa_puntero_backup db 0
 161  88F9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 162  88FA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 163  88FA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 164  88FB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 165  88FC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 166  88FD              ;
 167  88FD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 168  88FD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 169  88FD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 170  88FD              ;
 171  88FD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 172  88FD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 173  88FD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 174  88FD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 175  88FD              ;
 176  88FD              ;														;	"$ff" ..... Bucle infinito de repetición.
 177  88FD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 178  88FD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 179  88FD
 180  88FD
 181  88FD              ; Variables de funcionamiento. [DRAW].
 182  88FD
 183  88FD 00           Columnas db 0
 184  88FE 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 185  8900              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  8900 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 187  8901
 188  8901              ; variables de control general.
 189  8901
 190  8901 00           Ctrl_2 db 0
 191  8902              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 192  8902              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 193  8902              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 194  8902              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 195  8902              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 196  8902              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 197  8902              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 198  8902              ;
 199  8902              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 200  8902              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 201  8902              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 202  8902              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 203  8902              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 204  8902
 205  8902 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 206  8903
 207  8903              ;! 63 Bytes por entidad.
 208  8903
 209  8903              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 210  8903              ;					         		---------;      ;---------
 211  8903
 212  8903
 213  8903              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 214  8903
 215  8903 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 216  8904
 217  8904              ;														DESCRIPCIÓN:
 218  8904              ;
 219  8904              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 220  8904              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 221  8904              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 222  8904              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 223  8904              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 224  8904              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 225  8904
 226  8904              ;														BIT 3, Recarga de nueva oleada.
 227  8904              ;														BIT 4, Recarga de nueva oleada.
 228  8904              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 229  8904              ;														BIT 6, **** Frame completo.
 230  8904              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 231  8904
 232  8904 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 233  8906              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 234  8906              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 235  8906              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 236  8906
 237  8906
 238  8906
 239  8906              ; Gestión de ENTIDADES y CAJAS.
 240  8906
 241  8906 00 00        Puntero_store_caja defw 0
 242  8908 00 00        Puntero_restore_caja defw 0
 243  890A 00 00        Indice_restore_caja defw 0
 244  890C 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 245  890D 00           Numero_parcial_de_entidades db 0
 246  890E 00           Entidades_en_curso db 0									; ..... ..... .....
 247  890F 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 248  8910              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 249  8910              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 250  8910              ;														; _ (Numero_de_malotes)="0".
 251  8910 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 252  8912 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 253  8914              ;														; _ puntero (Indice_entidades).
 254  8914
 255  8914
 256  8914              ;---------------------------------------------------------------------------------------------------------------
 257  8914              ;
 258  8914              ;	2/9/23
 259  8914              ;
 260  8914              ;	Álbumes.
 261  8914
 262  8914 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 263  8916              ;														; _variable para almacenar lo posición del puntero_
 264  8916              ; 														; _de pila, SP.
 265  8916 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 266  8918              ;														; La utiliza la rutina [Extrae_foto_registros].
 267  8918 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 268  891A 00 00        Stack_snapshot defw 0
 269  891C 00 00        Stack_snapshot_disparos defw 0
 270  891E
 271  891E 00 00        End_Snapshot defw 0
 272  8920              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 273  8920 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 274  8922              ;														; _el snapshot de los registros del siguiente disparo.
 275  8922              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 276  8922 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 277  8924 00 00        End_Snapshot_1 defw 0
 278  8926 00 00        End_Snapshot_disparos_1 defw 0
 279  8928 00 00        End_Snapshot_2 defw 0
 280  892A 00 00        End_Snapshot_disparos_2 defw 0
 281  892C 00 00        End_Snapshot_3 defw 0
 282  892E 00 00        End_Snapshot_disparos_3 defw 0
 283  8930
 284  8930 00 00        Puntero_indice_album_de_fotos defw 0
 285  8932 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 286  8934
 287  8934 00 00        Puntero_indice_End_Snapshot defw 0
 288  8936 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 289  8938 00 00        Puntero_de_End_Snapshot defw 0
 290  893A 00 00        Puntero_de_End_Snapshot_disparos defw 0
 291  893C
 292  893C              ;---------------------------------------------------------------------------------------------------------------
 293  893C
 294  893C              ; Gestión de Disparos.
 295  893C
 296  893C 00           Numero_de_disparotes db 0
 297  893D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 298  893F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 299  8941 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 300  8942              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 301  8942              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 302  8942 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 303  8944              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 304  8944              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 305  8944              ;														; _produzca colisión.
 306  8944 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 307  8946              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 308  8946 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 309  8949              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 310  8949 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 311  894C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 312  894C 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 313  894E 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 314  894F
 315  894F              ;---------------------------------------------------------------------------------------------------------------
 316  894F
 317  894F              ; Relojes y temporizaciones.
 318  894F
 319  894F 00           Contador_de_frames db 0
 320  8950 00           Contador_de_frames_2 db 0
 321  8951
 322  8951 04           Clock_explosion db 4
 323  8952 1E           Clock_Entidades_en_curso db 30
 324  8953 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 325  8954              ;														; Repite la oleada de entidades.
 326  8954 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 327  8955 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 328  8956 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 329  8957
 330  8957 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 331  8958 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 332  8959 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 333  895A
 334  895A              ;---------------------------------------------------------------------------------------------------------------
 335  895A
 336  895A              ; Gestión de NIVELES.
 337  895A
 338  895A 00           Nivel db 0												; Nivel actual del juego.
 339  895B 00 00        Puntero_indice_NIVELES defw 0
 340  895D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 341  895F              ; 														; _ que definen el NIVEL.
 342  895F              ; Y todo comienza aquí .....
 343  895F              ;
 344  895F              ; Rutina principal *************************************************************************************************************************************************************************
 345  895F              ;
 346  895F              ;	14/11/22
 347  895F
 348  895F              START
 349  895F
 350  895F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 351  8962 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 352  8964 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 353  8966 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 354  8968 F3           	DI
 355  8969
 356  8969 3E 07        	ld a,%00000111
 357  896B CD C2 99     	call Cls
 358  896E
 359  896E CD B8 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 360  8971
 361  8971              ; INICIALIZACIÓN.
 362  8971
 363  8971 CD 0E 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 364  8974
 365  8974 CD 20 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 366  8977
 367  8977 CD E1 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 368  897A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 369  897A CD F7 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 370  897D              ;													     ; _ malotes antes de guardar ninguna foto.
 371  897D              ; ----------
 372  897D
 373  897D CD 68 8D     	call Restore_entidad
 374  8980
 375  8980 21 0D 89     	ld hl,Numero_parcial_de_entidades
 376  8983 46           	ld b,(hl)
 377  8984 04           	inc b
 378  8985 05           	dec b
 379  8986 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 380  8988
 381  8988              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 382  8988              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 383  8988              ;	Pintamos el resto de entidades:
 384  8988
 385  8988              ;	INICIA ENTIDADES !!!!!
 386  8988
 387  8988 C5           1 push bc  												; Guardo el contador de entidades.
 388  8989 CD 88 8B     	call Inicia_entidad
 389  898C C1           	pop bc
 390  898D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 391  898F
 392  898F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 393  898F              ; (Esto se dá cuando se inicia una nueva oleada).
 394  898F
 395  898F 3A 03 89     	ld a,(Ctrl_1)
 396  8992 CB 5F        	bit 3,a
 397  8994 20 15        	jr nz,5F											; Loop
 398  8996
 399  8996              ; 	INICIA AMADEUS !!!!!
 400  8996
 401  8996 CD 8F 8D     3 call Restore_Amadeus
 402  8999 CD E5 8C     	call Inicia_Puntero_objeto
 403  899C CD B5 93     	call Draw
 404  899F CD A0 7F     	call Guarda_foto_registros
 405  89A2
 406  89A2 CD 09 8E     	call Guarda_datos_de_borrado_Amadeus
 407  89A5
 408  89A5 11 9E 85     	ld de,Amadeus_db
 409  89A8 CD A1 8D     	call Store_Amadeus
 410  89AB
 411  89AB              ; 	INICIA DISPAROS !!!!!
 412  89AB
 413  89AB              ;	call Inicia_Puntero_Disparo_Entidades
 414  89AB              ;	call Inicia_Puntero_Disparo_Amadeus
 415  89AB
 416  89AB              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 417  89AB
 418  89AB CD E1 8B     5 call Inicia_punteros_de_cajas
 419  89AE CD 68 8D     	call Restore_entidad
 420  89B1
 421  89B1 3A 03 89     	ld a,(Ctrl_1)
 422  89B4 CB 5F        	bit 3,a
 423  89B6 28 0A        	jr z,6F
 424  89B8
 425  89B8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 426  89B8
 427  89B8 21 03 89     	ld hl,Ctrl_1
 428  89BB CB 9E        	res 3,(hl)
 429  89BD CD 8F 8C     	call Calcula_numero_de_malotes
 430  89C0 18 0A        	jr Main
 431  89C2
 432  89C2              ; ----------
 433  89C2
 434  89C2 3A 0D 89     6 ld a,(Numero_parcial_de_entidades)
 435  89C5 32 0F 89     	ld (Numero_de_malotes),a
 436  89C8
 437  89C8              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 438  89C8              ; _ tenemos calculado (Numero_de_malotes).
 439  89C8              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 440  89C8              ; _ para situarnos en el siguiente album.
 441  89C8
 442  89C8 CD 28 8C     	call Avanza_puntero_de_album_de_fotos_y_malotes
 443  89CB F3           	di
 444  89CC              ; ------------------------------------
 445  89CC
 446  89CC              Main
 447  89CC              ;
 448  89CC              ;	3/8/23
 449  89CC
 450  89CC 3E 01            ld a,1
 451  89CE D3 FE        	out ($fe),a											; Azul.
 452  89D0
 453  89D0 FB           	ei
 454  89D1
 455  89D1 3A 52 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 456  89D4 47           	ld b,a
 457  89D5 3A 4F 89     	ld a,(Contador_de_frames)
 458  89D8 B8           	cp b
 459  89D9 20 18        	jr nz,13F
 460  89DB
 461  89DB 3A 0D 89     	ld a,(Numero_parcial_de_entidades)
 462  89DE 47           	ld b,a
 463  89DF 3A 0E 89     	ld a,(Entidades_en_curso)
 464  89E2 B8           	cp b
 465  89E3 28 0E        	jr z,13F
 466  89E5 30 0C        	jr nc,13F
 467  89E7
 468  89E7 3C           	inc a
 469  89E8 32 0E 89     	ld (Entidades_en_curso),a
 470  89EB
 471  89EB 3A 52 89     	ld a,(Clock_Entidades_en_curso)
 472  89EE
 473  89EE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 474  89EE              ;! _ IMPREDECIBLE !!!!
 475  89EE
 476  89EE C6 64        	add 100
 477  89F0 32 52 89     	ld (Clock_Entidades_en_curso),a
 478  89F3
 479  89F3              ; Habilita disparos.
 480  89F3
 481  89F3 21 54 89     13 ld hl,Disparo_Amadeus
 482  89F6 11 56 89     	ld de,CLOCK_repone_disparo_Amadeus
 483  89F9 CD 86 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 484  89FC
 485  89FC 21 57 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 486  89FF 11 59 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 487  8A02 CD 86 9D     	call Habilita_disparos
 488  8A05
 489  8A05              ; COLISIONES.
 490  8A05
 491  8A05 CD 97 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 492  8A08
 493  8A08              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 494  8A08              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 495  8A08              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 496  8A08
 497  8A08 AF           	xor a
 498  8A09 32 41 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 499  8A0C
 500  8A0C CD E1 8B     	call Inicia_punteros_de_cajas
 501  8A0F CD 68 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 502  8A12              ; 														; _ en DRAW.
 503  8A12 3A C4 88     	ld a,(Filas)
 504  8A15 A7           	and a
 505  8A16 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 506  8A18 CD 7A 8D     	call Incrementa_punteros_de_cajas
 507  8A1B 18 F2        	jr 12B
 508  8A1D
 509  8A1D              ; ---------------------------------------------------------------------------------------
 510  8A1D
 511  8A1D 3A 0D 89     10 ld a,(Numero_parcial_de_entidades)
 512  8A20 47               ld b,a
 513  8A21 A7           	and a
 514  8A22 20 14        	jr nz,11F
 515  8A24
 516  8A24 21 03 89     	ld hl,Ctrl_1
 517  8A27 CB 66        	bit 4,(hl)
 518  8A29 C2 B5 8A     	jp nz,16F
 519  8A2C
 520  8A2C 21 03 89     	ld hl,Ctrl_1
 521  8A2F CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 522  8A31
 523  8A31 3A 4F 89     	ld a,(Contador_de_frames)
 524  8A34 3C           	inc a
 525  8A35 32 53 89     	ld (Activa_recarga_cajas),a
 526  8A38
 527  8A38              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 528  8A38
 529  8A38 3A 0E 89     11 ld a,(Entidades_en_curso)
 530  8A3B A7           	and a
 531  8A3C CA B5 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 532  8A3F 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 533  8A40
 534  8A40              ; Código que ejecutamos con cada entidad:
 535  8A40              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 536  8A40
 537  8A40 C5           15 push bc 												; Nº de entidades en curso.
 538  8A41
 539  8A41              ; Impacto ???
 540  8A41
 541  8A41 3A DD 88     	ld a,(Impacto)
 542  8A44 A7           	and a
 543  8A45 28 2D        	jr z,8F
 544  8A47
 545  8A47              ; Hay Impacto en esta entidad.
 546  8A47
 547  8A47 21 51 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 548  8A4A 35           	dec (hl)
 549  8A4B 20 62        	jr nz,17F
 550  8A4D
 551  8A4D              ;! Velocidad de la animación de la explosión.
 552  8A4D
 553  8A4D 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 554  8A4F              ;														; _,(velocidad de la explosión).
 555  8A4F CD 98 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 556  8A52
 557  8A52              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 558  8A52
 559  8A52 3A 01 89     	ld a,(Ctrl_2)
 560  8A55 CB 4F        	bit 1,a
 561  8A57 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 562  8A59
 563  8A59              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 564  8A59
 565  8A59 3A CC 88     	ld a,(CTRL_DESPLZ)
 566  8A5C A7           	and a
 567  8A5D 20 08        	jr nz,18F
 568  8A5F
 569  8A5F 21 84 84     	ld hl,Indice_Explosion_2x2-2
 570  8A62 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 571  8A65 18 06        	jr 19F
 572  8A67
 573  8A67 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 574  8A6A 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 575  8A6D
 576  8A6D 21 01 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 577  8A70 CB CE        	set 1,(hl)
 578  8A72 18 22        	jr 7F
 579  8A74
 580  8A74              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 581  8A74              ; _con las coordenadas de la entidad almacenada en DRAW.
 582  8A74
 583  8A74 3A 03 89     8 ld a,(Ctrl_1)
 584  8A77 CB 57        	bit 2,a
 585  8A79 28 1B        	jr z,7F
 586  8A7B
 587  8A7B 2A 44 89     	ld hl,(Coordenadas_disparo_certero)
 588  8A7E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 589  8A7F              ;														; E contiene la coordenada_X del disparo.
 590  8A7F 2A CA 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 591  8A82              ;														; H FILA, (Coordenada_y de la entidad).
 592  8A82 A7           	and a
 593  8A83 ED 52        	sbc hl,de
 594  8A85
 595  8A85 CD CE 92     	call Determina_resultado_comparativa
 596  8A88
 597  8A88 78           	ld a,b
 598  8A89 A7           	and a
 599  8A8A 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 600  8A8C
 601  8A8C              ; ----- ----- -----
 602  8A8C
 603  8A8C 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 604  8A8E 32 DD 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 605  8A91
 606  8A91 21 03 89     	ld hl,Ctrl_1
 607  8A94 CB 96        	res 2,(hl)
 608  8A96
 609  8A96 CD 11 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 610  8A99
 611  8A99 3A EE 88     	ld a,(Ctrl_0)
 612  8A9C CB 67        	bit 4,a
 613  8A9E 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 614  8AA0
 615  8AA0              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 616  8AA0              ; [[[
 617  8AA0 CD 03 8E     	call Detecta_disparo_entidad
 618  8AA3              ; ]]]
 619  8AA3 CD A8 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 620  8AA6
 621  8AA6 21 EE 88     	ld hl,Ctrl_0
 622  8AA9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 623  8AAB AF           	xor a
 624  8AAC 32 EF 88     	ld (Obj_dibujado),a
 625  8AAF
 626  8AAF CD 2D 8D     17 call Store_Restore_cajas
 627  8AB2
 628  8AB2 C1           	pop bc
 629  8AB3 10 8B        	djnz 15B
 630  8AB5
 631  8AB5              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 632  8AB5              ; Hemos gestionado todas las unidades.
 633  8AB5              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 634  8AB5
 635  8AB5              ;	ld hl,Ctrl_1
 636  8AB5              ;	res 2,(hl)
 637  8AB5
 638  8AB5 CD 28 8C     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 639  8AB8              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 640  8AB8              ;														; _ interrupción.
 641  8AB8 3E 01        	ld a,1
 642  8ABA D3 FE        	out ($fe),a
 643  8ABC
 644  8ABC              ; ----------------------------------------
 645  8ABC
 646  8ABC 3A 03 89     	ld a,(Ctrl_1) 										; Existe Loop?
 647  8ABF CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 648  8AC1 CA CC 89     	jp z,Main
 649  8AC4
 650  8AC4 3A 4F 89     	ld a,(Contador_de_frames)
 651  8AC7 47           	ld b,a
 652  8AC8 3A 53 89     	ld a,(Activa_recarga_cajas)
 653  8ACB B8           	cp b
 654  8ACC 28 08        	jr z,20F
 655  8ACE
 656  8ACE 21 03 89     	ld hl,Ctrl_1
 657  8AD1 CB E6        	set 4,(hl)
 658  8AD3 C3 CC 89     	jp Main
 659  8AD6
 660  8AD6 21 03 89     20 ld hl,Ctrl_1
 661  8AD9 CB A6        	res 4,(hl)
 662  8ADB
 663  8ADB F3           	di
 664  8ADC
 665  8ADC 3A 4F 89     	ld a,(Contador_de_frames)
 666  8ADF
 667  8ADF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 668  8ADF              ;! _ IMPREDECIBLE !!!!
 669  8ADF
 670  8ADF C6 0A        	add 10
 671  8AE1 32 52 89     	ld (Clock_Entidades_en_curso),a
 672  8AE4
 673  8AE4 C3 74 89     	jp 4B
 674  8AE7
 675  8AE7 C9           	ret
 676  8AE8
 677  8AE8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 678  8AE8
 679  8AE8              Gestiona_Amadeus
 680  8AE8
 681  8AE8 CD 8F 8D     	call Restore_Amadeus
 682  8AEB
 683  8AEB              ;! Activa/desactiva impacto con Amadeus.
 684  8AEB
 685  8AEB 3A DD 88     	ld a,(Impacto)
 686  8AEE A7           	and a
 687  8AEF 20 FE        	jr nz,$
 688  8AF1
 689  8AF1 CD 70 8B     	call Mov_Amadeus
 690  8AF4
 691  8AF4 3A EE 88     	ld a,(Ctrl_0)
 692  8AF7 CB 67        	bit 4,a
 693  8AF9 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 694  8AFB
 695  8AFB              ;	jr $
 696  8AFB
 697  8AFB CD A8 8B     	call Guarda_foto_entidad_a_pintar
 698  8AFE CD 09 8E     	call Guarda_datos_de_borrado_Amadeus
 699  8B01
 700  8B01 21 EE 88     14 ld hl,Ctrl_0
 701  8B04 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 702  8B06
 703  8B06 AF           	xor a
 704  8B07 32 EF 88     	ld (Obj_dibujado),a
 705  8B0A
 706  8B0A 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 707  8B0D CD A1 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 708  8B10
 709  8B10              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 710  8B10
 711  8B10              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 712  8B10
 713  8B10              ;	call Calcula_numero_de_disparotes
 714  8B10
 715  8B10 C9           	ret
 716  8B11
 717  8B11              ; --------------------------------------------------------------------------------------------------------------
 718  8B11              ;
 719  8B11              ;	27/05/23
 720  8B11
 721  8B11              Mov_obj
 722  8B11
 723  8B11 3A 01 89     	ld a,(Ctrl_2)
 724  8B14 CB 4F        	bit 1,a
 725  8B16 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 726  8B18
 727  8B18              ; Explosión:
 728  8B18
 729  8B18 3A 02 89     	ld a,(Frames_explosion)
 730  8B1B A7           	and a
 731  8B1C 20 11        	jr nz,4F
 732  8B1E
 733  8B1E              ; Una alimaña menos!!!!!!!!!1
 734  8B1E
 735  8B1E CD AA 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 736  8B21 21 0D 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 737  8B24 35           	dec (hl)
 738  8B25 21 0E 89     	ld hl,Entidades_en_curso
 739  8B28 35           	dec (hl)
 740  8B29 21 0C 89     	ld hl,Numero_de_entidades
 741  8B2C 35           	dec (hl)
 742  8B2D 18 40        	jr 3F
 743  8B2F
 744  8B2F              ; -----
 745  8B2F
 746  8B2F              ;	`Movemos´ la explosión.
 747  8B2F
 748  8B2F 2A D2 88     4 ld hl,(Puntero_DESPLZ_der)
 749  8B32 23           	inc hl
 750  8B33 23           	inc hl
 751  8B34 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 752  8B37 CD DF 8C     	call Extrae_address
 753  8B3A 22 C8 88     	ld (Puntero_objeto),hl
 754  8B3D
 755  8B3D 21 02 89     	ld hl,Frames_explosion
 756  8B40 35           	dec (hl)
 757  8B41
 758  8B41 CD 98 8B     	call Guarda_foto_entidad_a_borrar
 759  8B44 18 29        	jr 3F
 760  8B46
 761  8B46 AF           2 xor a
 762  8B47 32 EF 88     	ld (Obj_dibujado),a
 763  8B4A 32 EE 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 764  8B4D              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 765  8B4D              ; 														; _de la entidad.
 766  8B4D CD B2 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 767  8B50              ;														; Obj_dibujado="0".
 768  8B50              ; Movemos Entidades malignas.
 769  8B50
 770  8B50              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 771  8B50              ;	and a 												; _a movernos. (Limitador_de_entidades).
 772  8B50              ;	ret z
 773  8B50
 774  8B50 CD 31 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 775  8B53
 776  8B53 3A EE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 777  8B56 CB 67        	bit 4,a
 778  8B58 C8           	ret z
 779  8B59
 780  8B59              ; Ha habido desplazamiento de la entidad maligna.
 781  8B59              ; Ha llegado a zona de AMADEUS ???
 782  8B59
 783  8B59 3A CB 88     	ld a,(Coordenada_y)
 784  8B5C FE 14        	cp $14
 785  8B5E D4 5C 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 786  8B61              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 787  8B61              ; ---------
 788  8B61
 789  8B61 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 790  8B63 32 EF 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 791  8B66 CD B2 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 792  8B69 CD C9 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 793  8B6C CD 98 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 794  8B6F C9           3 ret													; _de la misma.
 795  8B70
 796  8B70              ; --------------------------------------------------------------------------------------------------------------
 797  8B70              ;
 798  8B70              ;	29/1/23
 799  8B70
 800  8B70              Mov_Amadeus
 801  8B70
 802  8B70 CD CC 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 803  8B73
 804  8B73 3A EE 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 805  8B76 CB 67        	bit 4,a
 806  8B78 C8           	ret z
 807  8B79
 808  8B79              ; ---------
 809  8B79
 810  8B79 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 811  8B7B 32 EF 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 812  8B7E CD B2 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 813  8B81 CD 19 8E     	call Repone_datos_de_borrado_Amadeus
 814  8B84 CD 81 8C     	call Limpia_almacen_de_borrado_Amadeus
 815  8B87
 816  8B87 C9           	ret
 817  8B88
 818  8B88              ; -----------------------------------------------------------------------------------
 819  8B88
 820  8B88 CD E5 8C     Inicia_entidad	call Inicia_Puntero_objeto
 821  8B8B CD D6 99     	call Recompone_posicion_inicio
 822  8B8E CD B5 93     	call Draw
 823  8B91 CD A0 7F     	call Guarda_foto_registros
 824  8B94 CD 2D 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 825  8B97 C9           	ret
 826  8B98
 827  8B98              ; --------------------------------------------------------------------------------------------------------------
 828  8B98              ;
 829  8B98              ;	31/8/23
 830  8B98              ;
 831  8B98              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 832  8B98
 833  8B98              Guarda_foto_entidad_a_borrar
 834  8B98
 835  8B98 CD 99 96     	call Prepara_draw
 836  8B9B CD C9 95     	call calcula_CColumnass
 837  8B9E CD 00 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 838  8BA1 CD 5F 96     	call Define_rutina_de_impresion
 839  8BA4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 840  8BA7 C9           	ret
 841  8BA8
 842  8BA8              ; --------------------------------------------------------------------------------------------------------------
 843  8BA8              ;
 844  8BA8              ;	31/08/23
 845  8BA8              ;
 846  8BA8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 847  8BA8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 848  8BA8
 849  8BA8              Guarda_foto_entidad_a_pintar
 850  8BA8
 851  8BA8 CD D5 8B     	call Repone_pintar
 852  8BAB CD B5 93     	call Draw
 853  8BAE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 854  8BB1 C9           	ret
 855  8BB2
 856  8BB2              ; --------------------------------------------------------------------------------------------------------------
 857  8BB2              ;
 858  8BB2              ;
 859  8BB2
 860  8BB2 21 C4 88     Prepara_var_pintado_borrado	ld hl,Filas
 861  8BB5 3A EF 88     	ld a,(Obj_dibujado)
 862  8BB8 A7           	and a
 863  8BB9 28 05        	jr z,1F
 864  8BBB 11 E4 88     	ld de,Variables_de_pintado
 865  8BBE 18 03        	jr 2F
 866  8BC0 11 DE 88     1 ld de,Variables_de_borrado
 867  8BC3 01 08 00     2 ld bc,8
 868  8BC6 ED B0        	ldir
 869  8BC8 C9           	ret
 870  8BC9
 871  8BC9              ; --------------------------------------------------------------------------------------------------------------
 872  8BC9
 873  8BC9 21 DE 88     Repone_borrar ld hl,Variables_de_borrado
 874  8BCC 11 C4 88     	ld de,Filas
 875  8BCF 01 08 00     	ld bc,8
 876  8BD2 ED B0        	ldir
 877  8BD4 C9           	ret
 878  8BD5
 879  8BD5 21 E4 88     Repone_pintar ld hl,Variables_de_pintado
 880  8BD8 11 C4 88     	ld de,Filas
 881  8BDB 01 08 00     	ld bc,8
 882  8BDE ED B0        	ldir
 883  8BE0 C9           	ret
 884  8BE1
 885  8BE1              ; *************************************************************************************************************************************************************
 886  8BE1              ;
 887  8BE1              ; 8/1/23
 888  8BE1              ;
 889  8BE1              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 890  8BE1              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 891  8BE1              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 892  8BE1
 893  8BE1              ; Destruye HL y DE !!!!!
 894  8BE1
 895  8BE1              Inicia_punteros_de_cajas
 896  8BE1
 897  8BE1 21 8C 85     	ld hl,Indice_de_cajas
 898  8BE4 CD DF 8C         call Extrae_address
 899  8BE7 22 06 89         ld (Puntero_store_caja),hl
 900  8BEA 21 8E 85     	ld hl,Indice_de_cajas+2
 901  8BED 22 0A 89     	ld (Indice_restore_caja),hl
 902  8BF0 CD DF 8C     	call Extrae_address
 903  8BF3 22 08 89     	ld (Puntero_restore_caja),hl
 904  8BF6 C9               ret
 905  8BF7
 906  8BF7              ; ---------------------------------------------------------------
 907  8BF7              ;
 908  8BF7              ;	9/8/23
 909  8BF7              ;
 910  8BF7              ;	Inicialización y gestión de álbumes de fotos y cajas.
 911  8BF7
 912  8BF7              Inicia_punteros_de_albumes_y_malotes
 913  8BF7
 914  8BF7 21 EC 84     	ld hl,Indice_album_de_fotos
 915  8BFA 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 916  8BFD CD DF 8C     	call Extrae_address
 917  8C00 22 1A 89     	ld (Stack_snapshot),hl
 918  8C03
 919  8C03 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 920  8C06 22 32 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 921  8C09 CD DF 8C     	call Extrae_address
 922  8C0C 22 1C 89     	ld (Stack_snapshot_disparos),hl
 923  8C0F
 924  8C0F 21 FC 84     	ld hl,Indice_End_Snapshot
 925  8C12 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 926  8C15 CD DF 8C     	call Extrae_address
 927  8C18 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 928  8C1B
 929  8C1B 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 930  8C1E 22 36 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 931  8C21 CD DF 8C     	call Extrae_address
 932  8C24 22 3A 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 933  8C27
 934  8C27 C9           	ret
 935  8C28
 936  8C28              ;	2/9/23
 937  8C28
 938  8C28              Avanza_puntero_de_album_de_fotos_y_malotes
 939  8C28
 940  8C28              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 941  8C28
 942  8C28              ; Estamos en el último álbum del índice???.
 943  8C28
 944  8C28 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 945  8C2B 01 F2 84     	ld bc,Indice_album_de_fotos+6
 946  8C2E A7           	and a
 947  8C2F ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 948  8C31 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 949  8C33
 950  8C33 21 03 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 951  8C36 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 952  8C38 76           	halt
 953  8C39 C9           	ret
 954  8C3A
 955  8C3A F3           1 di
 956  8C3B 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
 957  8C3E 23           	inc hl
 958  8C3F 23           	inc hl
 959  8C40 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
 960  8C43 CD DF 8C     	call Extrae_address
 961  8C46 22 1A 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 962  8C49
 963  8C49 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
 964  8C4C 23           	inc hl
 965  8C4D 23           	inc hl
 966  8C4E 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
 967  8C51 CD DF 8C     	call Extrae_address
 968  8C54 22 38 89     	ld (Puntero_de_End_Snapshot),hl
 969  8C57 FB           	ei
 970  8C58
 971  8C58 C9           	ret
 972  8C59
 973  8C59              ; *************************************************************************************************************************************************************
 974  8C59              ;
 975  8C59              ; 8/1/23
 976  8C59              ;
 977  8C59              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 978  8C59
 979  8C59 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 980  8C5C 22 3D 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 981  8C5F C9           	ret
 982  8C60 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 983  8C63 22 3F 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 984  8C66 C9           	ret
 985  8C67
 986  8C67              ; -------------------------------------------------------------------------------------------------------------
 987  8C67              ;
 988  8C67              ; 4/9/23
 989  8C67              ;
 990  8C67
 991  8C67              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 992  8C67
 993  8C67 21 A0 72     Limpia_album_Amadeus ld hl,Album_de_fotos_Amadeus
 994  8C6A 7E           	ld a,(hl)
 995  8C6B A7           	and a
 996  8C6C C8           	ret z
 997  8C6D
 998  8C6D 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 999  8C70 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1000  8C73 01 0C 00     	ld bc,12
1001  8C76 AF           	xor a
1002  8C77 77           	ld (hl),a
1003  8C78 ED B0        	ldir
1004  8C7A
1005  8C7A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1006  8C7D 22 22 89     	ld (End_Snapshot_Amadeus),hl
1007  8C80
1008  8C80 C9           	ret
1009  8C81
1010  8C81 21 AD 72     Limpia_almacen_de_borrado_Amadeus ld hl,Almacen_de_borrado_Amadeus
1011  8C84 11 AE 72     	ld de,Almacen_de_borrado_Amadeus+1
1012  8C87 01 05 00     	ld bc,5
1013  8C8A AF           	xor a
1014  8C8B 77           	ld (hl),a
1015  8C8C ED B0        	ldir
1016  8C8E C9           	ret
1017  8C8F
1018  8C8F              ; -------------------------------------------------------------------------------------------------------------
1019  8C8F              ;
1020  8C8F              ; 8/9/23
1021  8C8F              ;
1022  8C8F
1023  8C8F              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1024  8C8F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1025  8C8F
1026  8C8F              Calcula_numero_de_malotes
1027  8C8F
1028  8C8F 21 00 70     	ld hl,Album_de_fotos
1029  8C92 EB           	ex de,hl
1030  8C93 2A 1E 89     	ld hl,(End_Snapshot)
1031  8C96
1032  8C96 7C           	ld a,h
1033  8C97 A7           	and a
1034  8C98 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1035  8C9A
1036  8C9A 06 00        4 ld b,0
1037  8C9C 7D           	ld a,l
1038  8C9D 93           	sub e
1039  8C9E 28 07        	jr z,1F
1040  8CA0
1041  8CA0              ; Nº de malotes no es "0".
1042  8CA0
1043  8CA0 D6 06        2 sub 6
1044  8CA2 04           	inc b
1045  8CA3 A7           	and a
1046  8CA4 20 FA        	jr nz,2B
1047  8CA6 78           	ld a,b
1048  8CA7
1049  8CA7 32 0F 89     1 ld (Numero_de_malotes),a
1050  8CAA C9           	ret
1051  8CAB
1052  8CAB              ; -------------------------------------------------------------------------------------------------------------
1053  8CAB              ;
1054  8CAB              ; 8/9/23
1055  8CAB              ;
1056  8CAB
1057  8CAB              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1058  8CAB              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1059  8CAB
1060  8CAB              Calcula_malotes_Amadeus
1061  8CAB
1062  8CAB 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1063  8CAE EB           	ex de,hl
1064  8CAF 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1065  8CB2
1066  8CB2 7C           	ld a,h
1067  8CB3 A7           	and a
1068  8CB4 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1069  8CB6
1070  8CB6 06 00        	ld b,0
1071  8CB8 7D           	ld a,l
1072  8CB9 93           	sub e
1073  8CBA 28 07        	jr z,1F
1074  8CBC
1075  8CBC              ; Nº de malotes no es "0".
1076  8CBC
1077  8CBC D6 06        2 sub 6
1078  8CBE 04           	inc b
1079  8CBF A7           	and a
1080  8CC0 20 FA        	jr nz,2B
1081  8CC2 78           	ld a,b
1082  8CC3
1083  8CC3 32 0F 89     1 ld (Numero_de_malotes),a
1084  8CC6 C9           	ret
1085  8CC7
1086  8CC7              ; -------------------------------------------------------------------------------------------------------------
1087  8CC7              ;
1088  8CC7              ; 28/2/23
1089  8CC7              ;
1090  8CC7
1091  8CC7              Calcula_numero_de_disparotes
1092  8CC7
1093  8CC7 21 50 71     	ld hl,Album_de_fotos_disparos
1094  8CCA EB           	ex de,hl
1095  8CCB 2A 3A 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1096  8CCE
1097  8CCE 06 00        	ld b,0
1098  8CD0 7D           	ld a,l
1099  8CD1 93           	sub e
1100  8CD2 28 07        	jr z,1F
1101  8CD4
1102  8CD4              ; Nº de malotes no es "0".
1103  8CD4
1104  8CD4 D6 06        2 sub 6
1105  8CD6 04           	inc b
1106  8CD7 A7           	and a
1107  8CD8 20 FA        	jr nz,2B
1108  8CDA 78           	ld a,b
1109  8CDB
1110  8CDB 32 3C 89     1 ld (Numero_de_disparotes),a
1111  8CDE C9           	ret
1112  8CDF
1113  8CDF              ; *************************************************************************************************************************************************************
1114  8CDF              ;
1115  8CDF              ; 20/10/22
1116  8CDF              ;
1117  8CDF              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1118  8CDF              ;
1119  8CDF              ; Destruye el puntero y DE !!!!!
1120  8CDF
1121  8CDF 5E           Extrae_address ld e,(hl)
1122  8CE0 23           	inc hl
1123  8CE1 56           	ld d,(hl)
1124  8CE2 2B           	dec hl
1125  8CE3 EB           	ex de,hl
1126  8CE4 C9           	ret
1127  8CE5
1128  8CE5              ; *************************************************************************************************************************************************************
1129  8CE5              ;
1130  8CE5              ;	7/2/23
1131  8CE5              ;
1132  8CE5              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1133  8CE5              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1134  8CE5              ;
1135  8CE5              ;   Destruye HL y BC !!!!!,
1136  8CE5              ;
1137  8CE5              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1138  8CE5              ;					"0" ..... Izquierda.
1139  8CE5
1140  8CE5              Inicia_Puntero_objeto
1141  8CE5
1142  8CE5 3A D8 88     	ld a,(Cuad_objeto)
1143  8CE8 E6 01        	and 1
1144  8CEA F5           	push af
1145  8CEB CC 09 8D     	call z,Inicia_puntero_objeto_izq
1146  8CEE F1           	pop af
1147  8CEF 28 2B        	jr z,1F
1148  8CF1 CD F6 8C     	call Inicia_puntero_objeto_der
1149  8CF4 18 26        	jr 1F
1150  8CF6
1151  8CF6              ; Arrancamos desde la parte izquierda de la pantalla.
1152  8CF6              ; Iniciamos (Indice_Sprite_der).
1153  8CF6
1154  8CF6 2A CE 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1155  8CF9 22 D2 88     	ld (Puntero_DESPLZ_der),hl
1156  8CFC CD DF 8C     	call Extrae_address
1157  8CFF 22 C8 88     	ld (Puntero_objeto),hl
1158  8D02
1159  8D02 2A D0 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1160  8D05 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1161  8D08 C9           	ret
1162  8D09
1163  8D09              ; Arrancamos desde la parte derecha de la pantalla.
1164  8D09              ; Iniciamos (Indice_Sprite_izq).
1165  8D09
1166  8D09 2A D0 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1167  8D0C 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
1168  8D0F CD DF 8C     	call Extrae_address
1169  8D12 22 C8 88     	ld (Puntero_objeto),hl
1170  8D15
1171  8D15 2A CE 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1172  8D18 22 D2 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1173  8D1B C9           	ret
1174  8D1C
1175  8D1C              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1176  8D1C
1177  8D1C 21 40 83     1 ld hl,Amadeus
1178  8D1F ED 4B C8 88  	ld bc,(Puntero_objeto)
1179  8D23 B7 ED 42     	sub hl,bc
1180  8D26 C0           	ret nz
1181  8D27 21 EE 88     	ld hl,Ctrl_0
1182  8D2A CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1183  8D2C C9           	ret 												; _de nuestra nave en los extremos.
1184  8D2D
1185  8D2D              ; *************************************************************************************************************************************************************
1186  8D2D              ;
1187  8D2D              ;	14/5/23
1188  8D2D              ;
1189  8D2D              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1190  8D2D              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1191  8D2D
1192  8D2D              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1193  8D2D              ;	_de la 2ª y 3ª entidad respectivamente.
1194  8D2D
1195  8D2D              Store_Restore_cajas
1196  8D2D
1197  8D2D E5           	push hl
1198  8D2E D5           	push de
1199  8D2F C5            	push bc
1200  8D30
1201  8D30              ;	STORE !!!!!
1202  8D30              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1203  8D30
1204  8D30 21 C4 88     	ld hl,Filas
1205  8D33 ED 5B 06 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1206  8D37 01 3F 00     	ld bc,63
1207  8D3A ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1208  8D3C
1209  8D3C              ; 	Entidad_sospechosa. 20/4/23
1210  8D3C
1211  8D3C 3A DD 88     	ld a,(Impacto)
1212  8D3F A7           	and a
1213  8D40 28 0C        	jr z,1F
1214  8D42
1215  8D42 2A 06 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1216  8D45 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1217  8D48 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1218  8D49 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1219  8D4B 22 42 89     	ld (Entidad_sospechosa_de_colision),hl
1220  8D4E
1221  8D4E              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1222  8D4E
1223  8D4E 2A 08 89     1 ld hl,(Puntero_restore_caja)
1224  8D51 7E           	ld a,(hl)
1225  8D52 A7           	and a
1226  8D53 F5           	push af
1227  8D54 28 08        	jr z,2F
1228  8D56
1229  8D56 11 C4 88     	ld de,Filas
1230  8D59 01 3F 00     	ld bc,63
1231  8D5C ED B0        	ldir
1232  8D5E
1233  8D5E CD 7A 8D     2 call Incrementa_punteros_de_cajas
1234  8D61 F1           	pop af
1235  8D62 28 EA        	jr z,1B
1236  8D64
1237  8D64 C1           	pop bc
1238  8D65 D1           	pop de
1239  8D66 E1           	pop hl
1240  8D67
1241  8D67 C9           	ret
1242  8D68
1243  8D68              ; **************************************************************************************************
1244  8D68              ;
1245  8D68              ;	12/05/23
1246  8D68              ;
1247  8D68              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1248  8D68
1249  8D68 E5           Restore_entidad push hl
1250  8D69 D5           	push de
1251  8D6A C5            	push bc
1252  8D6B
1253  8D6B 2A 06 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1254  8D6E 11 C4 88     	ld de,Filas
1255  8D71 01 3F 00     	ld bc,63
1256  8D74 ED B0        	ldir
1257  8D76
1258  8D76 C1           	pop bc
1259  8D77 D1           	pop de
1260  8D78 E1           	pop hl
1261  8D79 C9           	ret
1262  8D7A
1263  8D7A
1264  8D7A              ; **************************************************************************************************
1265  8D7A              ;
1266  8D7A              ;	08/05/23
1267  8D7A              ;
1268  8D7A              ;	Incrementamos los dos punteros de entidades. (+1).
1269  8D7A
1270  8D7A 2A 08 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1271  8D7D 22 06 89     	ld (Puntero_store_caja),hl
1272  8D80 2A 0A 89     	ld hl,(Indice_restore_caja)
1273  8D83 23           	inc hl
1274  8D84 23           	inc hl
1275  8D85 22 0A 89     	ld (Indice_restore_caja),hl
1276  8D88 CD DF 8C         call Extrae_address
1277  8D8B 22 08 89         ld (Puntero_restore_caja),hl
1278  8D8E C9               ret
1279  8D8F
1280  8D8F              ; **************************************************************************************************
1281  8D8F              ;
1282  8D8F              ;	25/01/23
1283  8D8F              ;
1284  8D8F              ;	Restore_Amadeus
1285  8D8F              ;
1286  8D8F              ;	Cargamos en DRAW los parámetros de Amadeus.
1287  8D8F              ;
1288  8D8F
1289  8D8F E5           Restore_Amadeus	push hl
1290  8D90 D5           	push de
1291  8D91 C5            	push bc
1292  8D92 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1293  8D95 11 C4 88     	ld de,Filas
1294  8D98 01 3F 00     	ld bc,63
1295  8D9B ED B0        	ldir
1296  8D9D C1           	pop bc
1297  8D9E D1           	pop de
1298  8D9F E1           	pop hl
1299  8DA0 C9           	ret
1300  8DA1
1301  8DA1              ; *************************************************************************************************************************************************************
1302  8DA1              ;
1303  8DA1              ;	29/04/23
1304  8DA1              ;
1305  8DA1              ;	Store_Amadeus
1306  8DA1              ;
1307  8DA1              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1308  8DA1              ;
1309  8DA1              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1310  8DA1              ;
1311  8DA1              ;	DESTRUYE: HL y BC y DE.
1312  8DA1
1313  8DA1 21 C4 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1314  8DA4 01 3F 00     	ld bc,63
1315  8DA7 ED B0        	ldir
1316  8DA9 C9           	ret
1317  8DAA
1318  8DAA              ; -----------------------------------------------------------
1319  8DAA              ;
1320  8DAA              ;	27/04/23
1321  8DAA              ;
1322  8DAA              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1323  8DAA              ;
1324  8DAA              ;	Destruye: HL,BC,DE,A
1325  8DAA
1326  8DAA 21 C4 88     Borra_datos_entidad ld hl,Filas
1327  8DAD 01 3E 00     	ld bc,62
1328  8DB0 AF           	xor a
1329  8DB1 77           	ld (hl),a
1330  8DB2 11 C5 88     	ld de,Filas+1
1331  8DB5 ED B0        	ldir
1332  8DB7 C9           	ret
1333  8DB8
1334  8DB8              ; -----------------------------------------------------------
1335  8DB8
1336  8DB8              ; Teclado.
1337  8DB8
1338  8DB8 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1339  8DBA DB FE        	in a,($fe)
1340  8DBC E6 01        	and $01
1341  8DBE 28 02        	jr z,1f
1342  8DC0 18 F6        	jr Pulsa_ENTER
1343  8DC2 C9           1 ret
1344  8DC3
1345  8DC3              ; **************************************************************************************************
1346  8DC3              ;
1347  8DC3              ; Temporización.
1348  8DC3
1349  8DC3              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1350  8DC3              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1351  8DC3              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1352  8DC3              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1353  8DC3
1354  8DC3              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1355  8DC3              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1356  8DC3              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1357  8DC3
1358  8DC3              ; A partir de $4f61 no hace falta DELAY.
1359  8DC3
1360  8DC3              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1361  8DC3
1362  8DC3 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1363  8DC6 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1364  8DC7 78           	LD A,B
1365  8DC8 A7           	AND A
1366  8DC9 20 FB        	JR NZ,wait
1367  8DCB C9           	RET
1368  8DCC
1369  8DCC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1370  8DCC              ;
1371  8DCC              ;	5/3/23
1372  8DCC              ;
1373  8DCC              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1374  8DCC
1375  8DCC              Movimiento_Amadeus
1376  8DCC
1377  8DCC              ; Disparo.
1378  8DCC
1379  8DCC 3A 54 89     	ld a,(Disparo_Amadeus)
1380  8DCF A7           	and a
1381  8DD0 20 02        	jr nz,1F
1382  8DD2 18 15        	jr 2F
1383  8DD4
1384  8DD4 3E F7        1 ld a,$f7													; "5" para disparar.
1385  8DD6 DB FE        	in a,($fe)
1386  8DD8 E6 10        	and $10
1387  8DDA
1388  8DDA F5           	push af
1389  8DDB CC BF 8E     	call z,Genera_disparo
1390  8DDE F1           	pop af
1391  8DDF 20 08        	jr nz,2F
1392  8DE1
1393  8DE1 3A 54 89     	ld a,(Disparo_Amadeus)
1394  8DE4 EE 01        	xor 1
1395  8DE6 32 54 89     	ld (Disparo_Amadeus),a
1396  8DE9
1397  8DE9 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1398  8DEB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1399  8DED E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1400  8DEF CC 90 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1401  8DF2
1402  8DF2 3E F7        	ld a,$f7
1403  8DF4 DB FE        	in a,($fe)
1404  8DF6 E6 01        	and $01
1405  8DF8 C8           	ret z
1406  8DF9
1407  8DF9 3E F7        	ld a,$f7
1408  8DFB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1409  8DFD E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1410  8DFF CC 72 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1411  8E02 C9           	ret
1412  8E03
1413  8E03              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1414  8E03              ;
1415  8E03              ;	Rutina provisional para que los malotes cagen balas.
1416  8E03
1417  8E03              Detecta_disparo_entidad
1418  8E03
1419  8E03 3A 57 89     	ld a,(Disparo_entidad)
1420  8E06 A7           	and a
1421  8E07 C8           	ret z
1422  8E08
1423  8E08              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1424  8E08
1425  8E08              ;	ld a,$7f				; Detecta SPACE.
1426  8E08              ;	in a,($fe)
1427  8E08              ;	and 1
1428  8E08              ;	ret nz
1429  8E08
1430  8E08              ;	call Genera_disparo
1431  8E08 C9           	ret
1432  8E09
1433  8E09              ; ----------------------------------------------------------------------
1434  8E09              ;
1435  8E09              ;	8/9/23
1436  8E09
1437  8E09              Guarda_datos_de_borrado_Amadeus
1438  8E09
1439  8E09 2A 22 89     	ld hl,(End_Snapshot_Amadeus)
1440  8E0C 2B           	dec hl
1441  8E0D 7E           	ld a,(hl)
1442  8E0E A7           	and a
1443  8E0F C8           	ret z										; Salimos si es álbum está vacío.
1444  8E10
1445  8E10 11 E3 88     	ld de,Variables_de_borrado+5
1446  8E13 01 06 00     	ld bc,6
1447  8E16 ED B8        	lddr
1448  8E18 C9           	ret
1449  8E19
1450  8E19              ; ----------------------------------------------------------------------
1451  8E19              ;
1452  8E19              ;	9/9/23
1453  8E19
1454  8E19              Repone_datos_de_borrado_Amadeus
1455  8E19
1456  8E19 21 DE 88     	ld hl,Variables_de_borrado
1457  8E1C 11 A0 72     	ld de,Album_de_fotos_Amadeus
1458  8E1F 01 06 00     	ld bc,6
1459  8E22 ED B0        	ldir
1460  8E24
1461  8E24 EB           	ex de,hl
1462  8E25 22 22 89     	ld (End_Snapshot_Amadeus),hl
1463  8E28
1464  8E28 C9           	ret
1465  8E29
1466  8E29              ; ----------------------------------------------------------------------
1467  8E29              ;
1468  8E29              ;	11/8/23
1469  8E29
1470  8E29              Frame
1471  8E29
1472  8E29              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1473  8E29              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1474  8E29
1475  8E29              ; PINTAMOS.
1476  8E29
1477  8E29 ED 73 18 89  	ld (Stack_3),sp
1478  8E2D
1479  8E2D              ; Guardamos registros y SP.
1480  8E2D
1481  8E2D 08           	ex af,af'
1482  8E2E F5           	push af	;af'
1483  8E2F D9           	exx
1484  8E30 E5           	push hl	;hl'
1485  8E31 D5           	push de	;de'
1486  8E32 C5           	push bc	;bc'
1487  8E33 D9           	exx
1488  8E34 E5           	push hl	;hl
1489  8E35 D5           	push de	;de
1490  8E36 C5           	push bc	;bc
1491  8E37 08           	ex af,af'
1492  8E38 F5           	push af	;af
1493  8E39 DD E5        	push ix
1494  8E3B FD E5        	push iy
1495  8E3D
1496  8E3D 3E 02        	ld a,2
1497  8E3F D3 FE            out ($fe),a											; Rojo.
1498  8E41
1499  8E41              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1500  8E41              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1501  8E41
1502  8E41 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1503  8E44 01 EC 84     	ld bc,Indice_album_de_fotos
1504  8E47 A7           	and a
1505  8E48 ED 42        	sbc hl,bc
1506  8E4A
1507  8E4A 28 FE        	jr z,$
1508  8E4C 28 4E        	jr z,6F
1509  8E4E
1510  8E4E CD 8F 8C     	call Calcula_numero_de_malotes
1511  8E51 CD C3 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1512  8E54
1513  8E54              ;	call Extrae_foto_disparos
1514  8E54 3E 01            ld a,1
1515  8E56 D3 FE            out ($fe),a											; Azul.
1516  8E58
1517  8E58              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1518  8E58 CD B3 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1519  8E5B
1520  8E5B              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1521  8E5B
1522  8E5B 3A 03 89     	ld a,(Ctrl_1)
1523  8E5E CB 6F        	bit 5,a
1524  8E60 20 24        	jr nz,1F
1525  8E62
1526  8E62              ; No hemos terminado de guardar el último FRAME.
1527  8E62
1528  8E62 2A 30 89     	ld hl,(Puntero_indice_album_de_fotos)
1529  8E65 2B           	dec hl
1530  8E66 2B           	dec hl
1531  8E67 22 30 89     	ld (Puntero_indice_album_de_fotos),hl
1532  8E6A
1533  8E6A 2A 34 89     	ld hl,(Puntero_indice_End_Snapshot)
1534  8E6D 2B           	dec hl
1535  8E6E 2B           	dec hl
1536  8E6F 22 34 89     	ld (Puntero_indice_End_Snapshot),hl
1537  8E72 CD DF 8C     	call Extrae_address
1538  8E75 22 38 89     	ld (Puntero_de_End_Snapshot),hl
1539  8E78
1540  8E78 CD DF 8C     	call Extrae_address
1541  8E7B
1542  8E7B              ; Esta vacío este album???
1543  8E7B
1544  8E7B 24           	inc h
1545  8E7C 25           	dec h
1546  8E7D 20 02        	jr nz,5F
1547  8E7F
1548  8E7F              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1549  8E7F
1550  8E7F 18 05        	jr 1F
1551  8E81
1552  8E81 22 1A 89     5 ld (Stack_snapshot),hl
1553  8E84 18 09        	jr 2F
1554  8E86
1555  8E86              ; FRAME completo.
1556  8E86
1557  8E86 2A 30 89     1 ld hl,(Puntero_indice_album_de_fotos)
1558  8E89 CD DF 8C     	call Extrae_address
1559  8E8C 22 1A 89     	ld (Stack_snapshot),hl
1560  8E8F
1561  8E8F              ;	En este punto:
1562  8E8F
1563  8E8F              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1564  8E8F              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1565  8E8F
1566  8E8F              ; RELOJES.
1567  8E8F
1568  8E8F 21 4F 89     2 ld hl,Contador_de_frames
1569  8E92 7E           	ld a,(hl)
1570  8E93 FE FF        	cp $ff
1571  8E95 20 04        	jr nz,3F
1572  8E97 34           	inc (hl)
1573  8E98 21 50 89     	ld hl,Contador_de_frames_2
1574  8E9B 34           3 inc (hl)											; 0 - 255
1575  8E9C
1576  8E9C CD AB 8C     6 call Calcula_malotes_Amadeus
1577  8E9F CD 45 97     	call Extrae_foto_Amadeus
1578  8EA2 CD 67 8C     	call Limpia_album_Amadeus
1579  8EA5
1580  8EA5 21 03 89     	ld hl,Ctrl_1
1581  8EA8 CB AE        	res 5,(hl)
1582  8EAA
1583  8EAA              ; Recuperamos registros y SP.
1584  8EAA
1585  8EAA FD E1        	pop iy
1586  8EAC DD E1        	pop ix
1587  8EAE F1           	pop af
1588  8EAF C1           	pop bc
1589  8EB0 D1           	pop de
1590  8EB1 E1           	pop hl
1591  8EB2 D9           	exx
1592  8EB3 C1           	pop bc
1593  8EB4 D1           	pop de
1594  8EB5 E1           	pop hl
1595  8EB6 08           	ex af,af'
1596  8EB7 F1           	pop af
1597  8EB8 08           	ex af,af'
1598  8EB9 D9           	exx
1599  8EBA
1600  8EBA ED 7B 18 89  	ld sp,(Stack_3)
1601  8EBE C9           	ret
1602  8EBF
1603  8EBF              ; ---------------------------------------------------------------
1604  8EBF
1605  8EBF              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EBF              ; ******************************************************************************************************************************************************************************************
   2+ 8EBF              ;
   3+ 8EBF              ;   21/07/23
   4+ 8EBF              ;
   5+ 8EBF              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EBF              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EBF              ;
   8+ 8EBF              ;
   9+ 8EBF              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EBF              ;
  11+ 8EBF              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EBF              ;               _ hacen las entidades hacia abajo.
  13+ 8EBF              ;
  14+ 8EBF              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EBF              ;
  16+ 8EBF              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EBF              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EBF              ;
  19+ 8EBF              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EBF              ;           _ la bala.
  21+ 8EBF              ;
  22+ 8EBF              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EBF              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EBF              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EBF              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EBF              ;           _ en el momento de generarse la bala)).
  27+ 8EBF
  28+ 8EBF              Genera_disparo
  29+ 8EBF
  30+ 8EBF              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EBF              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EBF              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EBF              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EBF              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EBF              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EBF              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EBF
  38+ 8EBF              ; Exclusiones:
  39+ 8EBF
  40+ 8EBF 3A DC 88         ld a,(Vel_down)
  41+ 8EC2 47               ld b,a
  42+ 8EC3 3A 4E 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EC6 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EC7 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EC8 3A FD 88         ld a,(Columnas)
  46+ 8ECB 47               ld b,a
  47+ 8ECC 3A C5 88         ld a,(Columns)
  48+ 8ECF B8               cp b
  49+ 8ED0 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8ED1
  51+ 8ED1              ; ----- ----- -----
  52+ 8ED1
  53+ 8ED1 3A EE 88         ld a,(Ctrl_0)
  54+ 8ED4 CB 77            bit 6,a
  55+ 8ED6 20 06            jr nz,14F
  56+ 8ED8
  57+ 8ED8 3A CB 88         ld a,(Coordenada_y)
  58+ 8EDB FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EDD D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EDE
  61+ 8EDE 21 00 80     14 ld hl,Indice_disparo
  62+ 8EE1 3A CC 88         ld a,(CTRL_DESPLZ)
  63+ 8EE4 4F               ld c,a
  64+ 8EE5 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EE7              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EE7              ;                                            ""        ""       "f9", B="1"
  67+ 8EE7              ;                                            ""        ""       "fb", B="2"
  68+ 8EE7              ;                                            ""        ""       "fb", B="3"
  69+ 8EE7 A7               and a
  70+ 8EE8 28 10            jr z,1F
  71+ 8EEA E6 01            and 1
  72+ 8EEC C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EED
  74+ 8EED 79               ld a,c
  75+ 8EEE 16 F9            ld d,$f9
  76+ 8EF0 23           2 inc hl
  77+ 8EF1 23               inc hl
  78+ 8EF2 04               inc b
  79+ 8EF3 BA               cp d
  80+ 8EF4 28 04            jr z,1F
  81+ 8EF6 14               inc d
  82+ 8EF7 14               inc d
  83+ 8EF8 18 F6            jr 2B
  84+ 8EFA
  85+ 8EFA CD DF 8C     1 call Extrae_address
  86+ 8EFD E5               push hl
  87+ 8EFE FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F00 DD 21 8B 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F04
  90+ 8F04              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F04              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F04
  93+ 8F04 3A EE 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F07 CB 77            bit 6,a
  95+ 8F09 20 04            jr nz,19F
  96+ 8F0B
  97+ 8F0B AF               xor a
  98+ 8F0C 32 57 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F0F
 100+ 8F0F 3A D8 88     19 ld a,(Cuad_objeto)
 101+ 8F12 FE 02            cp 2
 102+ 8F14 38 66            jr c,3F
 103+ 8F16 28 64            jr z,3F
 104+ 8F18
 105+ 8F18              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F18
 107+ 8F18 E6 01            and 1
 108+ 8F1A 28 30            jr z,4F
 109+ 8F1C
 110+ 8F1C              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F1C              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F1C              ;
 113+ 8F1C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F1C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F1C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F1C
 117+ 8F1C 2A C6 88     	ld hl,(Posicion_actual)
 118+ 8F1F
 119+ 8F1F              ;   Amadeus o entidad ???.
 120+ 8F1F
 121+ 8F1F 3A EE 88         ld a,(Ctrl_0)
 122+ 8F22 CB 77            bit 6,a
 123+ 8F24 28 0A            jr z,8F
 124+ 8F26
 125+ 8F26              ; 	Dispara Amadeus.
 126+ 8F26
 127+ 8F26 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F28 CD B4 96         call PreviousScan
 129+ 8F2B CD B4 96         call PreviousScan
 130+ 8F2E
 131+ 8F2E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F2E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F2E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F2E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F2E
 136+ 8F2E 18 11            jr 10F
 137+ 8F30
 138+ 8F30              ; 	Dispara Entidad.
 139+ 8F30
 140+ 8F30 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F33              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F33
 143+ 8F33              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F33              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F33
 146+ 8F33 C5               push bc
 147+ 8F34 06 10            ld b,16
 148+ 8F36 CD A5 96     9 call NextScan
 149+ 8F39 10 FB            djnz 9B
 150+ 8F3B C1               pop bc
 151+ 8F3C CD A6 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F3F 18 06            jr 17F
 153+ 8F41
 154+ 8F41              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F41              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F41              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F41              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F41
 159+ 8F41 CD A6 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F44 CD 1B 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F47              ;                                                      ; _al generar el disparo.
 162+ 8F47
 163+ 8F47              ; 	LLegados a este punto tendremos:
 164+ 8F47              ;
 165+ 8F47              ;       Puntero_objeto_disparo en IY.
 166+ 8F47              ;       Rutinas_de_impresion en IX.
 167+ 8F47              ;       Puntero_de_impresion en HL.
 168+ 8F47              ;       Impacto/Dirección en BC.
 169+ 8F47
 170+ 8F47 CD AE 8F     17 call Almacena_disparo
 171+ 8F4A 18 52            jr 6F                                             ; RET.
 172+ 8F4C
 173+ 8F4C              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F4C              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F4C              ;
 176+ 8F4C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F4C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F4C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F4C
 180+ 8F4C 2A C6 88     4 ld hl,(Posicion_actual)
 181+ 8F4F
 182+ 8F4F              ;   Amadeus o entidad ???.
 183+ 8F4F
 184+ 8F4F 3A EE 88         ld a,(Ctrl_0)
 185+ 8F52 CB 77            bit 6,a
 186+ 8F54 28 0A            jr z,11F
 187+ 8F56
 188+ 8F56              ; 	Dispara Amadeus.
 189+ 8F56
 190+ 8F56 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F58 CD B4 96         call PreviousScan
 192+ 8F5B CD B4 96         call PreviousScan
 193+ 8F5E
 194+ 8F5E              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F5E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F5E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F5E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F5E
 199+ 8F5E 18 11            jr 13F
 200+ 8F60
 201+ 8F60              ; 	Dispara Entidad.
 202+ 8F60
 203+ 8F60 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F63              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F63
 206+ 8F63              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F63              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F63
 209+ 8F63 C5               push bc
 210+ 8F64 06 10            ld b,16
 211+ 8F66 CD A5 96     12 call NextScan
 212+ 8F69 10 FB            djnz 12B
 213+ 8F6B C1               pop bc
 214+ 8F6C
 215+ 8F6C CD 9F 8F         call Ajusta_disparo_parte_derecha
 216+ 8F6F 18 06            jr 18F
 217+ 8F71
 218+ 8F71              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F71              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F71              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F71              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F71
 223+ 8F71 CD 9F 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F74 CD 1B 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F77              ;                                                       ; _al generar el disparo.
 226+ 8F77
 227+ 8F77              ; LLegados a este punto tendremos:
 228+ 8F77              ;
 229+ 8F77              ;       Puntero_objeto_disparo en IY.
 230+ 8F77              ;       Rutinas_de_impresion en IX.
 231+ 8F77              ;       Puntero_de_impresion en HL.
 232+ 8F77              ;       Impacto/Dirección en BC.
 233+ 8F77
 234+ 8F77 CD AE 8F     18 call Almacena_disparo
 235+ 8F7A 18 22            jr 6F                                               ; RET.
 236+ 8F7C
 237+ 8F7C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F7C
 239+ 8F7C 28 11        3 jr z,5F
 240+ 8F7E
 241+ 8F7E              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F7E              ;
 243+ 8F7E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F7E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F7E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F7E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F7E
 248+ 8F7E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F7E              ;	   ""        ""       "f9", B="1"
 250+ 8F7E              ;	   ""        ""       "fb", B="2"
 251+ 8F7E              ; 	   ""        ""       "fb", B="3"
 252+ 8F7E
 253+ 8F7E 2A C6 88     	ld hl,(Posicion_actual)
 254+ 8F81 CD A5 96     	call NextScan
 255+ 8F84
 256+ 8F84              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F84              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F84              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F84              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F84
 261+ 8F84 CD A6 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F87
 263+ 8F87              ; 	No se produce impacto. B="$80"
 264+ 8F87              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F87
 266+ 8F87 01 80 80         ld bc,$8080
 267+ 8F8A
 268+ 8F8A              ; 	LLegados a este punto tendremos:
 269+ 8F8A              ;
 270+ 8F8A              ;       Puntero_objeto_disparo en IY.
 271+ 8F8A              ;       Rutinas_de_impresion en IX.
 272+ 8F8A              ;       Puntero_de_impresion en HL.
 273+ 8F8A              ;       Impacto/Dirección en BC.
 274+ 8F8A
 275+ 8F8A CD AE 8F         call Almacena_disparo
 276+ 8F8D 18 0F            jr 6F                                           ; RET.
 277+ 8F8F
 278+ 8F8F              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F8F              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F8F              ;
 281+ 8F8F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F8F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F8F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F8F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F8F
 286+ 8F8F 2A C6 88     5 ld hl,(Posicion_actual)
 287+ 8F92 CD A5 96     	call NextScan
 288+ 8F95
 289+ 8F95              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F95              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F95              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F95              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F95
 294+ 8F95 CD 9F 8F         call Ajusta_disparo_parte_derecha
 295+ 8F98
 296+ 8F98              ; 	No se produce impacto. B="$80"
 297+ 8F98              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F98
 299+ 8F98 01 80 80     15 ld bc,$8080
 300+ 8F9B
 301+ 8F9B              ; 	LLegados a este punto tendremos:
 302+ 8F9B              ;
 303+ 8F9B              ;       Puntero_objeto_disparo en IY.
 304+ 8F9B              ;       Rutinas_de_impresion en IX.
 305+ 8F9B              ;       Puntero_de_impresion en HL.
 306+ 8F9B              ;       Impacto/Dirección en BC.
 307+ 8F9B
 308+ 8F9B CD AE 8F         call Almacena_disparo
 309+ 8F9E
 310+ 8F9E C9           6 ret
 311+ 8F9F
 312+ 8F9F              ; ----------------------------------------------------------------
 313+ 8F9F              ;
 314+ 8F9F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F9F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F9F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F9F
 318+ 8F9F 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FA0 FE 02            cp 2
 320+ 8FA2 38 01            jr c,1F
 321+ 8FA4 23               inc hl
 322+ 8FA5 C9           1 ret
 323+ 8FA6
 324+ 8FA6 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FA7 FE 01        	cp 1
 326+ 8FA9 20 01        	jr nz,1F
 327+ 8FAB 2B           	dec hl
 328+ 8FAC 2B           1 dec hl
 329+ 8FAD C9               ret
 330+ 8FAE
 331+ 8FAE              ; ----------------------------------------------------------------
 332+ 8FAE              ;
 333+ 8FAE              ;   25/02/23
 334+ 8FAE              ;
 335+ 8FAE              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FAE              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FAE              ;
 338+ 8FAE              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FAE              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FAE
 341+ 8FAE              Almacena_disparo
 342+ 8FAE
 343+ 8FAE E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FAF F1               pop af
 345+ 8FB0 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FB1
 347+ 8FB1 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FB2 E6 01            and 1
 349+ 8FB4 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FB6              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FB6              ; 	Dispara AMADEUS.
 352+ 8FB6
 353+ 8FB6              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FB6              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FB6              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FB6              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FB6
 358+ 8FB6 C5               push bc
 359+ 8FB7 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FBA 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FBD A7               and a
 362+ 8FBE ED 42            sbc hl,bc
 363+ 8FC0 CC 60 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FC3 C1               pop bc
 365+ 8FC4 28 54            jr z,4F
 366+ 8FC6
 367+ 8FC6 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FC9 23               inc hl
 369+ 8FCA 23               inc hl
 370+ 8FCB 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FCE              ;                                                   ; _ Disparo_(+1).
 372+ 8FCE 18 18            jr 2F
 373+ 8FD0
 374+ 8FD0              ; Dispara una entidad.
 375+ 8FD0
 376+ 8FD0 C5           1 push bc
 377+ 8FD1 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FD4 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FD7 A7               and a
 380+ 8FD8 ED 42            sbc hl,bc
 381+ 8FDA CC 59 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FDD C1               pop bc
 383+ 8FDE 28 3A            jr z,4F
 384+ 8FE0
 385+ 8FE0 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FE3 23               inc hl
 387+ 8FE4 23               inc hl
 388+ 8FE5 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FE8              ;                                                   ; _ Disparo_(+1).
 390+ 8FE8 CD DF 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FEB              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FEB              ;
 393+ 8FEB              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FEB              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FEB              ;                                                     Puntero_de_impresion en HL.
 396+ 8FEB              ;                                                     Impacto/Dirección en BC.
 397+ 8FEB
 398+ 8FEB 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FEC 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FED 23               inc hl                                          ; _ al siguiente.
 401+ 8FEE A7               and a
 402+ 8FEF 20 C0            jr nz,3B
 403+ 8FF1
 404+ 8FF1 08               ex af,af
 405+ 8FF2 ED 73 14 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FF6 F9               ld sp,hl
 407+ 8FF7
 408+ 8FF7 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FF9 F5               push af                                         ; Puntero de impresión.
 410+ 8FFA FD E5            push iy                                         ; Puntero objeto.
 411+ 8FFC C5               push bc                                         ; Control.
 412+ 8FFD
 413+ 8FFD ED 7B 14 89      ld sp,(Stack)
 414+ 9001
 415+ 9001              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9001
 417+ 9001 21 03 89     	ld hl,Ctrl_1
 418+ 9004 CB C6        	set 0,(hl)
 419+ 9006
 420+ 9006 DD E5        	push ix
 421+ 9008 E1               pop hl
 422+ 9009 F5               push af
 423+ 900A DD E1            pop ix
 424+ 900C
 425+ 900C CD A0 7F     	call Guarda_foto_registros
 426+ 900F
 427+ 900F 21 03 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9012 CB 86        	res 0,(hl)
 429+ 9014
 430+ 9014              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9014              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9014
 433+ 9014 CD 60 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9017 CD 59 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 901A
 436+ 901A C9           4 ret
 437+ 901B
 438+ 901B              ; ----------------------------------------------------------------
 439+ 901B              ;
 440+ 901B              ;   4/3/23
 441+ 901B              ;
 442+ 901B              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 901B              ;   _ al generarse el disparo.
 444+ 901B              ;
 445+ 901B              ;       "$80" ..... No se produce colisión.
 446+ 901B              ;       "$81" ..... Se produce colisión.
 447+ 901B              ;
 448+ 901B              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 901B              ;         _ que forman el disparo.
 450+ 901B
 451+ 901B
 452+ 901B              Comprueba_Colision
 453+ 901B
 454+ 901B              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 901B
 456+ 901B FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 901D E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 901E
 459+ 901E CD 54 90         call Modifica_H_Velocidad_disparo
 460+ 9021
 461+ 9021 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9022 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9024 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9026
 465+ 9026 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9028 CD 44 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 902B
 468+ 902B 7B               ld a,e
 469+ 902C E6 01            and 1
 470+ 902E 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9030              ;                                                  ; _ para activar IMPACTO.
 472+ 9030 E1               pop hl
 473+ 9031 E5               push hl
 474+ 9032 CD A5 96         call NextScan
 475+ 9035
 476+ 9035 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9036 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9038 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 903A              ;                                                  ; _ 2º scanline si esto es así.
 480+ 903A 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 903C CD 44 90         call Bucle_2
 482+ 903F
 483+ 903F 43           1 ld b,e
 484+ 9040 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9041 FD E1            pop iy
 486+ 9043 C9               ret
 487+ 9044
 488+ 9044              ; ---------- ----------
 489+ 9044
 490+ 9044 06 02        Bucle_2 ld b,2
 491+ 9046 FD 7E 00     2 ld a,(iy)
 492+ 9049 A6               and (hl)
 493+ 904A 28 02            jr z,1F
 494+ 904C 1E 81            ld e,$81
 495+ 904E 23           1 inc hl
 496+ 904F FD 23            inc iy
 497+ 9051 10 F3            djnz 2B
 498+ 9053 C9               ret
 499+ 9054
 500+ 9054              ; ---------- ----------
 501+ 9054              ;
 502+ 9054              ;   21/7/23
 503+ 9054
 504+ 9054              Modifica_H_Velocidad_disparo
 505+ 9054
 506+ 9054 3A 4E 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9057 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9059 D0               ret nc                                         ; _ incrementamos H.
 509+ 905A 24               inc h
 510+ 905B
 511+ 905B C9               ret
 512+ 905C
 513+ 905C              ; -------------------------------------------------------------------------------------------------------------
 514+ 905C              ;
 515+ 905C              ;   11/04/23
 516+ 905C              ;
 517+ 905C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 905C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 905C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 905C              ;
 521+ 905C              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 905C
 523+ 905C              Compara_coordenadas_X
 524+ 905C
 525+ 905C              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 905C              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 905C
 528+ 905C              ; Preparamos registros:
 529+ 905C
 530+ 905C 21 CA 88         ld hl,Filas+6
 531+ 905F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9060 23               inc hl
 533+ 9061 23               inc hl
 534+ 9062 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9063 43               ld b,e
 536+ 9064
 537+ 9064 21 D8 88         ld hl,Filas+20
 538+ 9067 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9068 21 49 89         ld hl,Coordenadas_X_Entidad
 540+ 906B CD 87 92         call Guarda_coordenadas_X
 541+ 906E
 542+ 906E              ; Preparamos registros:
 543+ 906E
 544+ 906E 21 A4 85         ld hl,Amadeus_db+6
 545+ 9071 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9072 23               inc hl
 547+ 9073 23               inc hl
 548+ 9074 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9075 7B               ld a,e
 550+ 9076 08               ex af,af'
 551+ 9077 21 B2 85         ld hl,Amadeus_db+20
 552+ 907A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 907B 21 46 89         ld hl,Coordenadas_X_Amadeus
 554+ 907E CD 87 92         call Guarda_coordenadas_X
 555+ 9081
 556+ 9081              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9081              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9081
 559+ 9081 04               inc b
 560+ 9082 05               dec b
 561+ 9083 28 04            jr z,1F
 562+ 9085 06 03            ld b,3
 563+ 9087 18 02            jr 2F
 564+ 9089 06 02        1 ld b,2
 565+ 908B 08           2 ex af,af'
 566+ 908C 3C               inc a
 567+ 908D 3D               dec a
 568+ 908E 28 04            jr z,5F
 569+ 9090 0E 03            ld c,3
 570+ 9092 18 02            jr 6F
 571+ 9094 0E 02        5 ld c,2
 572+ 9096 79           6 ld a,c
 573+ 9097 08               ex af,af'
 574+ 9098 11 49 89         ld de,Coordenadas_X_Entidad
 575+ 909B 1A           4 ld a,(de)
 576+ 909C 21 46 89         ld hl,Coordenadas_X_Amadeus
 577+ 909F BE           3 cp (hl)
 578+ 90A0 28 0E            jr z,7F
 579+ 90A2 23               inc hl
 580+ 90A3 0D               dec c
 581+ 90A4 20 F9            jr nz,3B
 582+ 90A6 13               inc de
 583+ 90A7 08               ex af,af'
 584+ 90A8 4F               ld c,a
 585+ 90A9 08               ex af,af'
 586+ 90AA 10 EF            djnz 4B
 587+ 90AC
 588+ 90AC              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90AC
 590+ 90AC CD C3 92     8 call Limpia_Coordenadas_X
 591+ 90AF C9               ret
 592+ 90B0
 593+ 90B0 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90B2 32 DD 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90B5 21 41 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90B8 CB D6            set 2,(hl)
 597+ 90BA 18 F0            jr 8B
 598+ 90BC
 599+ 90BC              ; -----------------------------------------------------------------------
 600+ 90BC              ;
 601+ 90BC              ;   17/04/23
 602+ 90BC              ;
 603+ 90BC
 604+ 90BC              Detecta_colision_nave_entidad
 605+ 90BC
 606+ 90BC              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90BC
 608+ 90BC 2A C6 88         ld hl,(Posicion_actual)
 609+ 90BF CD 00 96         call Calcula_puntero_de_impresion
 610+ 90C2
 611+ 90C2              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90C2              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90C2
 614+ 90C2 DD E5            push ix
 615+ 90C4 E1               pop hl
 616+ 90C5 E5               push hl
 617+ 90C6
 618+ 90C6              ; ----- ----- -----
 619+ 90C6 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90C8 06 0A            ld b,10
 621+ 90CA CD FA 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90CD 7B               ld a,e
 623+ 90CE FE 05            cp 5
 624+ 90D0 38 0E            jr c,3F
 625+ 90D2
 626+ 90D2              ; LLegados a este punto:
 627+ 90D2              ;
 628+ 90D2              ;   HAY COLISIÓN !!!!!.
 629+ 90D2              ;
 630+ 90D2              ;   .db (Impacto) de Amadeus a "1".
 631+ 90D2              ;   SET el bit3 de (Impacto2).
 632+ 90D2              ;
 633+ 90D2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90D2
 635+ 90D2 21 B7 85         ld hl,Amadeus_db+25
 636+ 90D5 36 01            ld (hl),1
 637+ 90D7 21 41 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90DA CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90DC CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90DE 18 18            jr 1F
 641+ 90E0
 642+ 90E0              ; -----
 643+ 90E0
 644+ 90E0 E1           3 pop hl
 645+ 90E1 CD A5 96         call NextScan
 646+ 90E4 E5               push hl
 647+ 90E5 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90E6 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90E8 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90EA 30 0C            jr nc,1F
 651+ 90EC              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90EC 10 DC            djnz 2B
 653+ 90EE
 654+ 90EE              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90EE
 656+ 90EE              ; LLegados a este punto:
 657+ 90EE              ;
 658+ 90EE              ;   NO HAY COLISIÓN !!!!!.
 659+ 90EE              ;
 660+ 90EE              ;   .db (Impacto) de Amadeus a "0".
 661+ 90EE              ;   RES el bit2 de (Impacto2).
 662+ 90EE              ;
 663+ 90EE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90EE              ;   Lo colocamos a "0".
 665+ 90EE
 666+ 90EE 21 41 89         ld hl,Impacto2
 667+ 90F1 CB 96            res 2,(hl)
 668+ 90F3 2A 42 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90F6 36 00            ld (hl),0
 670+ 90F8
 671+ 90F8 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90F9 C9               ret
 673+ 90FA
 674+ 90FA               ; ---------- ----------
 675+ 90FA
 676+ 90FA C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90FB 3A C5 88         ld a,(Columns)
 678+ 90FE 47               ld b,a
 679+ 90FF FD 7E 00     2 ld a,(iy)
 680+ 9102 BE               cp (hl)
 681+ 9103 28 01            jr z,1F
 682+ 9105
 683+ 9105 1C               inc e
 684+ 9106
 685+ 9106 23           1 inc hl
 686+ 9107 FD 23            inc iy
 687+ 9109 10 F4            djnz 2B
 688+ 910B C1               pop bc
 689+ 910C C9               ret
 690+ 910D
 691+ 910D              ; -------------------------------------------------------------------------------------------------------------
 692+ 910D              ;
 693+ 910D              ;   13/03/23
 694+ 910D              ;
 695+ 910D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 910D              ;
 697+ 910D              ;   DESTRUYE: HL,BC,DE y A.
 698+ 910D
 699+ 910D 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9110 7E               ld a,(hl)
 701+ 9111 A7               and a
 702+ 9112 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9113
 704+ 9113 44               ld b,h
 705+ 9114 4D               ld c,l
 706+ 9115 2A 1C 89         ld hl,(Stack_snapshot_disparos)
 707+ 9118 E5               push hl
 708+ 9119 A7               and a
 709+ 911A ED 42            sbc hl,bc
 710+ 911C E5               push hl
 711+ 911D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 911E
 713+ 911E E1               pop hl
 714+ 911F 54               ld d,h
 715+ 9120 5D               ld e,l
 716+ 9121 1B               dec de
 717+ 9122 ED B8            lddr                                                ; Limpiamos.
 718+ 9124
 719+ 9124 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9127 22 1C 89         ld (Stack_snapshot_disparos),hl
 721+ 912A
 722+ 912A C9               ret
 723+ 912B
 724+ 912B              ; -------------------------------------------------------------------------------------------------------------
 725+ 912B              ;
 726+ 912B              ;   18/07/23
 727+ 912B              ;
 728+ 912B
 729+ 912B              Motor_de_disparos
 730+ 912B
 731+ 912B              ; Gestiona DISPAROS DE AMADEUS.
 732+ 912B
 733+ 912B 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 912E 2A 3F 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9131
 736+ 9131 CD DF 8C     2 call Extrae_address
 737+ 9134 7E               ld a,(hl)
 738+ 9135 A7               and a
 739+ 9136 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9138
 741+ 9138              ; ----- ----- ----- ----- ----- -----
 742+ 9138
 743+ 9138 C5               push bc
 744+ 9139 CD FD 91         call foto_disparo_a_borrar
 745+ 913C
 746+ 913C              ; Existe colisión con este disparo???
 747+ 913C
 748+ 913C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 913D 7E               ld a,(hl)
 750+ 913E 2B               dec hl
 751+ 913F E6 01            and 1
 752+ 9141 28 1D            jr z,9F
 753+ 9143
 754+ 9143              ;   En este punto:
 755+ 9143              ;
 756+ 9143              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9143              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9143              ;   _con la entidad).
 759+ 9143              ;
 760+ 9143              ;   Disparo_2A defw 0                                ; Control.
 761+ 9143              ;    defw 0                                          ; Puntero objeto.
 762+ 9143              ;    defw 0                                          ; Puntero de impresión.
 763+ 9143              ;    defw 0                                          ; Rutina de impresión.
 764+ 9143
 765+ 9143 E5               push hl
 766+ 9144
 767+ 9144 06 04            ld b,4
 768+ 9146 23           19 inc hl
 769+ 9147 10 FD            djnz 19B
 770+ 9149
 771+ 9149 CD DF 8C         call Extrae_address
 772+ 914C CD 6E 9D         call Genera_coordenadas_disparo
 773+ 914F
 774+ 914F              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 914F
 776+ 914F 21 44 89         ld hl,Coordenadas_disparo_certero
 777+ 9152 72               ld (hl),d
 778+ 9153 23               inc hl
 779+ 9154 73               ld (hl),e
 780+ 9155
 781+ 9155              ; Elimino el disparo de la base de datos.
 782+ 9155
 783+ 9155 E1               pop hl
 784+ 9156 CD 7C 92         call Elimina_disparo_de_base_de_datos
 785+ 9159 21 41 89         ld hl,Impacto2
 786+ 915C CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 915E
 788+ 915E 18 06            jr 11F
 789+ 9160
 790+ 9160 CD 26 92     9 call Mueve_disparo
 791+ 9163 CD FD 91         call foto_disparo_a_borrar
 792+ 9166
 793+ 9166 C1           11 pop bc
 794+ 9167 18 04            jr 7F
 795+ 9169
 796+ 9169              ; ----- ----- ----- ----- ----- -----
 797+ 9169
 798+ 9169 ED 42        1 sbc hl,bc
 799+ 916B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 916D
 801+ 916D 2A 3F 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9170 23               inc hl
 803+ 9171 23               inc hl
 804+ 9172 22 3F 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9175 18 BA            jr 2B
 806+ 9177
 807+ 9177 CD 60 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 917A              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 917A
 810+ 917A              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 917A
 812+ 917A 01 8A 85         ld bc,Disparo_11
 813+ 917D 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9180
 815+ 9180 CD DF 8C     5 call Extrae_address
 816+ 9183 7E               ld a,(hl)
 817+ 9184 A7               and a
 818+ 9185 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9187
 820+ 9187              ; ----- ----- ----- ----- ----- -----
 821+ 9187
 822+ 9187 C5               push bc
 823+ 9188 CD FD 91         call foto_disparo_a_borrar
 824+ 918B
 825+ 918B              ; Existe colisión con este disparo???
 826+ 918B
 827+ 918B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 918C 7E               ld a,(hl)
 829+ 918D 2B               dec hl
 830+ 918E E6 01            and 1
 831+ 9190 28 4D            jr z,10F
 832+ 9192
 833+ 9192              ;! La colisión se produce con Amadeus???
 834+ 9192              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9192
 836+ 9192 E5               push hl
 837+ 9193
 838+ 9193 06 04            ld b,4
 839+ 9195 23           16 inc hl
 840+ 9196 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9198
 842+ 9198 CD DF 8C         call Extrae_address
 843+ 919B CD 6E 9D         call Genera_coordenadas_disparo
 844+ 919E
 845+ 919E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 919F FE 16            cp $16
 847+ 91A1 38 2A            jr c,15F
 848+ 91A3
 849+ 91A3
 850+ 91A3              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91A3
 852+ 91A3 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91A4
 854+ 91A4              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91A4
 856+ 91A4
 857+ 91A4 2A 4C 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91A7
 859+ 91A7              ; Coordenada X de Amadeus en D.
 860+ 91A7
 861+ 91A7 7D               ld a,l
 862+ 91A8 E6 1F            and $1F
 863+ 91AA 57               ld d,a
 864+ 91AB
 865+ 91AB 21 A6 85         ld hl,Amadeus_db+8
 866+ 91AE 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91AF
 868+ 91AF 21 46 89         ld hl,Coordenadas_X_Amadeus
 869+ 91B2 CD 87 92         call Guarda_coordenadas_X
 870+ 91B5
 871+ 91B5 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91B6
 873+ 91B6              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91B6
 875+ 91B6 06 02            ld b,2
 876+ 91B8 C5           20 push bc
 877+ 91B9
 878+ 91B9 06 03            ld b,3
 879+ 91BB 21 46 89         ld hl,Coordenadas_X_Amadeus
 880+ 91BE 7E           18 ld a,(hl)
 881+ 91BF BA               cp d
 882+ 91C0 20 04            jr nz,17F
 883+ 91C2
 884+ 91C2              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91C2
 886+ 91C2 C1               pop bc
 887+ 91C3 E1               pop hl
 888+ 91C4 18 0D            jr 14F
 889+ 91C6
 890+ 91C6 23           17 inc hl
 891+ 91C7 10 F5            djnz 18B
 892+ 91C9
 893+ 91C9 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91CA
 895+ 91CA C1               pop bc
 896+ 91CB 10 EB            djnz 20B
 897+ 91CD
 898+ 91CD
 899+ 91CD              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91CD              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91CD
 902+ 91CD E1           15 pop hl
 903+ 91CE 23               inc hl
 904+ 91CF 35               dec (hl)
 905+ 91D0 2B               dec hl
 906+ 91D1 18 0C            jr 10F
 907+ 91D3
 908+ 91D3              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91D3              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91D3
 911+ 91D3 E5           14 push hl
 912+ 91D4 CD 7C 92         call Elimina_disparo_de_base_de_datos
 913+ 91D7 21 41 89         ld hl,Impacto2
 914+ 91DA CB CE            set 1,(hl)
 915+ 91DC E1               pop hl
 916+ 91DD 18 06            jr 12F
 917+ 91DF
 918+ 91DF              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91DF
 920+ 91DF CD 26 92     10 call Mueve_disparo
 921+ 91E2 CD FD 91         call foto_disparo_a_borrar
 922+ 91E5 C1           12 pop bc
 923+ 91E6
 924+ 91E6 18 04            jr 8F
 925+ 91E8
 926+ 91E8              ; ----- ----- ----- ----- ----- -----
 927+ 91E8
 928+ 91E8 ED 42        4 sbc hl,bc
 929+ 91EA 28 0A            jr z,6F
 930+ 91EC
 931+ 91EC 2A 3D 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91EF 23               inc hl
 933+ 91F0 23               inc hl
 934+ 91F1 22 3D 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91F4 18 8A            jr 5B
 936+ 91F6
 937+ 91F6 CD 59 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91F9 CD C3 92         call Limpia_Coordenadas_X
 939+ 91FC C9               ret
 940+ 91FD
 941+ 91FD              ; ------------------------------------------------------------------
 942+ 91FD
 943+ 91FD              foto_disparo_a_borrar
 944+ 91FD
 945+ 91FD 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91FE A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91FF C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9200
 949+ 9200 E5               push hl
 950+ 9201 23               inc hl
 951+ 9202 23               inc hl
 952+ 9203 ED 73 14 89      ld (Stack),sp
 953+ 9207 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9208 FD E1            pop iy
 955+ 920A DD E1            pop ix
 956+ 920C E1               pop hl
 957+ 920D ED 7B 14 89      ld sp,(Stack)
 958+ 9211 3A 03 89         ld a,(Ctrl_1)
 959+ 9214 CB C7            set 0,a
 960+ 9216 32 03 89         ld (Ctrl_1),a
 961+ 9219 CD A0 7F         call Guarda_foto_registros
 962+ 921C 3A 03 89         ld a,(Ctrl_1)
 963+ 921F CB 87            res 0,a
 964+ 9221 32 03 89         ld (Ctrl_1),a
 965+ 9224 E1               pop hl
 966+ 9225 C9               ret
 967+ 9226
 968+ 9226              ;---------------------------------------------------
 969+ 9226              ;
 970+ 9226              ;   18/07/23
 971+ 9226              ;
 972+ 9226
 973+ 9226              Mueve_disparo
 974+ 9226
 975+ 9226              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9226              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9226              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9226
 979+ 9226 E5               push hl
 980+ 9227
 981+ 9227 7E               ld a,(hl)
 982+ 9228
 983+ 9228 06 04            ld b,4
 984+ 922A 23           1 inc hl
 985+ 922B 10 FD            djnz 1B
 986+ 922D
 987+ 922D              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 922D
 989+ 922D CD DF 8C         call Extrae_address
 990+ 9230
 991+ 9230 E6 01            and 1
 992+ 9232 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9234
 994+ 9234              ; Disparo hacia arriba, (Amadeus).
 995+ 9234
 996+ 9234              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9234              ; _ de la dificultad.
 998+ 9234
 999+ 9234 CD B4 96         call PreviousScan
1000+ 9237 CD B4 96         call PreviousScan
1001+ 923A CD B4 96         call PreviousScan
1002+ 923D CD B4 96         call PreviousScan
1003+ 9240
1004+ 9240              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9240
1006+ 9240 7C               ld a,h
1007+ 9241 FE 40            cp $40
1008+ 9243 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9245
1010+ 9245              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9245
1012+ 9245 EB               ex de,hl
1013+ 9246 06 04            ld b,4
1014+ 9248 2B           6 dec hl
1015+ 9249 10 FD            djnz 6B
1016+ 924B
1017+ 924B CD 7C 92         call Elimina_disparo_de_base_de_datos
1018+ 924E E1               pop hl
1019+ 924F 18 10            jr 7F
1020+ 9251
1021+ 9251              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9251              ; HL contiene el puntero de impresión del disparo.
1023+ 9251              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9251
1025+ 9251 D5           3 push de
1026+ 9252 C5               push bc
1027+ 9253
1028+ 9253 CD 1B 90         call Comprueba_Colision
1029+ 9256
1030+ 9256              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9256
1032+ 9256 78               ld a,b
1033+ 9257
1034+ 9257 C1               pop bc
1035+ 9258 D1               pop de
1036+ 9259
1037+ 9259 EB               ex de,hl
1038+ 925A
1039+ 925A 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 925B 23               inc hl                                      ; _ movimiento.
1041+ 925C 72               ld (hl),d
1042+ 925D
1043+ 925D E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 925E
1045+ 925E 23               inc hl                                      ; _ en curso.
1046+ 925F 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9260 2B               dec hl
1048+ 9261
1049+ 9261 C9           7 ret
1050+ 9262
1051+ 9262              ; Disparo hacia abajo, (Entidad).
1052+ 9262
1053+ 9262 3A 4E 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9265 47               ld b,a
1055+ 9266
1056+ 9266 CD A5 96     4 call NextScan
1057+ 9269 10 FB            djnz 4B
1058+ 926B
1059+ 926B              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 926B
1061+ 926B 7C               ld a,h
1062+ 926C FE 58            cp $58
1063+ 926E 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9270
1065+ 9270 EB               ex de,hl
1066+ 9271 06 04            ld b,4
1067+ 9273 2B           5 dec hl
1068+ 9274 10 FD            djnz 5B
1069+ 9276
1070+ 9276 CD 7C 92         call Elimina_disparo_de_base_de_datos
1071+ 9279 E1               pop hl
1072+ 927A 18 E5            jr 7B
1073+ 927C
1074+ 927C              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 927C
1076+ 927C 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 927F AF               xor a
1078+ 9280 77               ld (hl),a
1079+ 9281 54               ld d,h
1080+ 9282 5D               ld e,l
1081+ 9283 13               inc de
1082+ 9284 ED B0            ldir
1083+ 9286 C9               ret
1084+ 9287
1085+ 9287              ; -----------------------------------------------------------------
1086+ 9287              ;
1087+ 9287              ;   19/7/23
1088+ 9287              ;
1089+ 9287              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9287              ;
1091+ 9287              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9287              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9287              ;
1094+ 9287              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9287              ;
1096+ 9287              ;   INPUTS:
1097+ 9287              ;
1098+ 9287              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9287              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9287
1101+ 9287              ;   MODIFICA: A, HL, BC y DE.
1102+ 9287
1103+ 9287              Guarda_coordenadas_X
1104+ 9287
1105+ 9287 7B               ld a,e
1106+ 9288 A7               and a
1107+ 9289 20 04            jr nz,1F
1108+ 928B
1109+ 928B 06 02            ld b,2
1110+ 928D 18 02            jr 2F
1111+ 928F
1112+ 928F 06 03        1 ld b,3
1113+ 9291 72           2 ld (hl),d
1114+ 9292 23               inc hl
1115+ 9293 14               inc d
1116+ 9294 10 FB            djnz 2B
1117+ 9296
1118+ 9296 C9               ret
1119+ 9297
1120+ 9297              ; -----------------------------------------------------------------
1121+ 9297              ;
1122+ 9297              ;   12/04/23
1123+ 9297              ;
1124+ 9297
1125+ 9297 3A 41 89     Selector_de_impactos ld a,(Impacto2)
1126+ 929A A7               and a
1127+ 929B C8               ret z
1128+ 929C
1129+ 929C FE 04            cp 4
1130+ 929E 20 09            jr nz,1F
1131+ 92A0
1132+ 92A0
1133+ 92A0              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92A0
1135+ 92A0 CD BC 90         call Detecta_colision_nave_entidad
1136+ 92A3
1137+ 92A3 21 41 89         ld hl,Impacto2
1138+ 92A6 CB 5E            bit 3,(hl)
1139+ 92A8 C0               ret nz                                               ; Existe colisión, RET.
1140+ 92A9
1141+ 92A9              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92A9              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92A9
1144+ 92A9 21 41 89     1 ld hl,Impacto2
1145+ 92AC CB 4E            bit 1,(hl)
1146+ 92AE 28 07            jr z,2F
1147+ 92B0
1148+ 92B0 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92B3 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92B5 18 0B            jr 3F
1151+ 92B7
1152+ 92B7 21 41 89     2 ld hl,Impacto2
1153+ 92BA CB 46            bit 0,(hl)
1154+ 92BC C8               ret z
1155+ 92BD
1156+ 92BD              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92BD
1158+ 92BD 21 03 89         ld hl,Ctrl_1
1159+ 92C0 CB D6            set 2,(hl)
1160+ 92C2
1161+ 92C2 C9           3 ret
1162+ 92C3
1163+ 92C3              ; -----------------------------------------------------------------
1164+ 92C3              ;
1165+ 92C3              ;   19/7/23
1166+ 92C3              ;
1167+ 92C3              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92C3
1169+ 92C3 AF           Limpia_Coordenadas_X xor a
1170+ 92C4 06 06            ld b,6
1171+ 92C6 21 46 89         ld hl,Coordenadas_X_Amadeus
1172+ 92C9 77           1 ld (hl),a
1173+ 92CA 23               inc hl
1174+ 92CB 10 FC            djnz 1B
1175+ 92CD C9               ret
1176+ 92CE
1177+ 92CE              ; -----------------------------------------------------------------
1178+ 92CE              ;
1179+ 92CE              ;   25/04/23
1180+ 92CE              ;
1181+ 92CE
1182+ 92CE              Determina_resultado_comparativa
1183+ 92CE
1184+ 92CE              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92CE              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92CE              ;
1187+ 92CE              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92CE              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92CE              ;
1190+ 92CE              ;   SBC HL,DE
1191+ 92CE
1192+ 92CE              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92CE              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92CE
1195+ 92CE              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92CE              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92CE
1198+ 92CE
1199+ 92CE 3A D8 88         ld a,(Cuad_objeto)
1200+ 92D1 FE 02            cp 2
1201+ 92D3 28 26            jr z,2F
1202+ 92D5 38 24            jr c,2F
1203+ 92D7
1204+ 92D7              ; Cuadrantes 3º y 4º
1205+ 92D7
1206+ 92D7 E6 01            and 1
1207+ 92D9 28 10            jr z,4F
1208+ 92DB
1209+ 92DB              ; Cuadrante 3º
1210+ 92DB
1211+ 92DB 7C               ld a,h
1212+ 92DC 06 00            ld b,0
1213+ 92DE
1214+ 92DE CD 69 93         call Compara_cositas_H3
1215+ 92E1
1216+ 92E1 04               inc b
1217+ 92E2 05               dec b
1218+ 92E3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92E4
1220+ 92E4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92E5 06 00            ld b,0
1222+ 92E7
1223+ 92E7 CD 7B 93         call Compara_cositas_L3
1224+ 92EA C9               ret
1225+ 92EB
1226+ 92EB              ; Cuadrante 4º
1227+ 92EB
1228+ 92EB 7C           4 ld a,h
1229+ 92EC 06 00            ld b,0
1230+ 92EE
1231+ 92EE CD 8D 93         call Compara_cositas_H4
1232+ 92F1
1233+ 92F1 04               inc b
1234+ 92F2 05               dec b
1235+ 92F3 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92F4
1237+ 92F4 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92F5 06 00            ld b,0
1239+ 92F7
1240+ 92F7 CD A3 93         call Compara_cositas_L4
1241+ 92FA C9               ret
1242+ 92FB
1243+ 92FB              ; Cuadrantes 1º y 2º.
1244+ 92FB
1245+ 92FB 28 10        2 jr z,3F
1246+ 92FD
1247+ 92FD              ; 1er Cuadrante
1248+ 92FD
1249+ 92FD 7C               ld a,h
1250+ 92FE 06 00            ld b,0
1251+ 9300
1252+ 9300 CD 41 93         call Compara_cositas_H1
1253+ 9303
1254+ 9303 04               inc b
1255+ 9304 05               dec b
1256+ 9305 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9306
1258+ 9306 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9307 06 00            ld b,0
1260+ 9309
1261+ 9309 CD 57 93         call Compara_cositas_L1
1262+ 930C C9               ret
1263+ 930D
1264+ 930D
1265+ 930D              ; 2º Cuadrante
1266+ 930D
1267+ 930D 7C           3 ld a,h
1268+ 930E 06 00            ld b,0
1269+ 9310
1270+ 9310 CD 1D 93         call Compara_cositas_H2
1271+ 9313
1272+ 9313 04               inc b
1273+ 9314 05               dec b
1274+ 9315 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9316
1276+ 9316 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9317 06 00            ld b,0
1278+ 9319
1279+ 9319 CD 2F 93         call Compara_cositas_L2
1280+ 931C C9               ret
1281+ 931D
1282+ 931D A7           Compara_cositas_H2 and a
1283+ 931E 28 0D            jr z,1F
1284+ 9320              ;    cp $fd
1285+ 9320              ;    jr z,1F
1286+ 9320              ;    cp $fe
1287+ 9320              ;    jr z,1F
1288+ 9320 FE FF            cp $ff
1289+ 9322 28 09            jr z,1F
1290+ 9324 FE 01            cp $01
1291+ 9326 28 05            jr z,1F
1292+ 9328 FE 02            cp $02
1293+ 932A 28 01            jr z,1F
1294+ 932C C0               ret nz
1295+ 932D 04           1 inc b
1296+ 932E C9               ret
1297+ 932F
1298+ 932F A7           Compara_cositas_L2 and a
1299+ 9330 28 0D            jr z,1F
1300+ 9332              ;    cp $fd
1301+ 9332              ;    jr z,1F
1302+ 9332 FE FE            cp $fe
1303+ 9334 28 09            jr z,1F
1304+ 9336 FE FF            cp $ff
1305+ 9338 28 05            jr z,1F
1306+ 933A FE 01            cp $01
1307+ 933C 28 01            jr z,1F
1308+ 933E              ;    cp $02
1309+ 933E              ;    jr z,1F
1310+ 933E C0               ret nz
1311+ 933F 04           1 inc b
1312+ 9340 C9               ret
1313+ 9341
1314+ 9341 A7           Compara_cositas_H1 and a
1315+ 9342 28 11            jr z,1F
1316+ 9344              ;    cp $fd
1317+ 9344              ;    jr z,1F
1318+ 9344              ;    cp $fe
1319+ 9344              ;    jr z,1F
1320+ 9344 FE FF            cp $ff
1321+ 9346 28 0D            jr z,1F
1322+ 9348 FE 01            cp $01
1323+ 934A 28 09            jr z,1F
1324+ 934C FE 02            cp $02
1325+ 934E 28 05            jr z,1F
1326+ 9350 FE 03            cp $03
1327+ 9352 28 01            jr z,1F
1328+ 9354 C0               ret nz
1329+ 9355 04           1 inc b
1330+ 9356 C9               ret
1331+ 9357
1332+ 9357 A7           Compara_cositas_L1 and a
1333+ 9358 28 0D            jr z,1F
1334+ 935A              ;    cp $fd
1335+ 935A              ;    jr z,1F
1336+ 935A              ;    cp $fe
1337+ 935A              ;    jr z,1F
1338+ 935A              ;    cp $ff
1339+ 935A              ;    jr z,1F
1340+ 935A FE 01            cp $01
1341+ 935C 28 09            jr z,1F
1342+ 935E FE 02            cp $02
1343+ 9360 28 05            jr z,1F
1344+ 9362 FE 03            cp $03
1345+ 9364 28 01            jr z,1F
1346+ 9366 C0               ret nz
1347+ 9367 04           1 inc b
1348+ 9368 C9               ret
1349+ 9369
1350+ 9369 A7           Compara_cositas_H3 and a
1351+ 936A 28 0D            jr z,1F
1352+ 936C              ;    cp $fd
1353+ 936C              ;    jr z,1F
1354+ 936C FE FE            cp $fe
1355+ 936E 28 09            jr z,1F
1356+ 9370 FE FF            cp $ff
1357+ 9372 28 05            jr z,1F
1358+ 9374 FE 01            cp $01
1359+ 9376 28 01            jr z,1F
1360+ 9378              ;    cp $02
1361+ 9378              ;    jr z,1F
1362+ 9378              ;    cp $03
1363+ 9378              ;    jr z,1F
1364+ 9378 C0               ret nz
1365+ 9379 04           1 inc b
1366+ 937A C9               ret
1367+ 937B
1368+ 937B A7           Compara_cositas_L3 and a
1369+ 937C 28 0D            jr z,1F
1370+ 937E              ;    cp $fd
1371+ 937E              ;    jr z,1F
1372+ 937E              ;    cp $fe
1373+ 937E              ;    jr z,1F
1374+ 937E              ;    cp $ff
1375+ 937E              ;    jr z,1F
1376+ 937E FE 01            cp $01
1377+ 9380 28 09            jr z,1F
1378+ 9382 FE 02            cp $02
1379+ 9384 28 05            jr z,1F
1380+ 9386 FE 03            cp $03
1381+ 9388 28 01            jr z,1F
1382+ 938A C0               ret nz
1383+ 938B 04           1 inc b
1384+ 938C C9               ret
1385+ 938D
1386+ 938D A7           Compara_cositas_H4 and a
1387+ 938E 28 11            jr z,1F
1388+ 9390 FE FD            cp $fd
1389+ 9392 28 0D            jr z,1F
1390+ 9394 FE FE            cp $fe
1391+ 9396 28 09            jr z,1F
1392+ 9398 FE FF            cp $ff
1393+ 939A 28 05            jr z,1F
1394+ 939C FE 01            cp $01
1395+ 939E 28 01            jr z,1F
1396+ 93A0              ;    cp $02
1397+ 93A0              ;    jr z,1F
1398+ 93A0              ;    cp $03
1399+ 93A0              ;    jr z,1F
1400+ 93A0 C0               ret nz
1401+ 93A1 04           1 inc b
1402+ 93A2 C9               ret
1403+ 93A3
1404+ 93A3 A7           Compara_cositas_L4 and a
1405+ 93A4 28 0D            jr z,1F
1406+ 93A6              ;    cp $fd
1407+ 93A6              ;    jr z,1F
1408+ 93A6 FE FE            cp $fe
1409+ 93A8 28 09            jr z,1F
1410+ 93AA FE FF            cp $ff
1411+ 93AC 28 05            jr z,1F
1412+ 93AE FE 01            cp $01
1413+ 93B0 28 01            jr z,1F
1414+ 93B2              ;    cp $02
1415+ 93B2              ;    jr z,1F
1416+ 93B2              ;    cp $03
1417+ 93B2              ;    jr z,1F
1418+ 93B2 C0               ret nz
1419+ 93B3 04           1 inc b
1420+ 93B4 C9               ret
# file closed: Disparo.asm
1606  93B5              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93B5              ; ******************************************************************************************************************************************************************************************
   2+ 93B5              ;
   3+ 93B5              ; 26/06/23
   4+ 93B5              ;
   5+ 93B5              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93B5
   7+ 93B5 CD 99 96     Draw call Prepara_draw
   8+ 93B8 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93B9 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93BA 28 05        	jr z,2F
  11+ 93BC
  12+ 93BC 3A D8 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93BF 18 0C        	jr 1F
  14+ 93C1
  15+ 93C1 2A D6 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93C4 22 C6 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93C7 CD 56 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93CA              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93CA CD FB 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93CD
  21+ 93CD 3A EE 88     1 ld a,(Ctrl_0)
  22+ 93D0 CB 6F        	bit 5,a
  23+ 93D2 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93D4
  25+ 93D4 CD EC 93     	call Comprueba_limite_horizontal
  26+ 93D7 CD 7C 94     	call Comprueba_limite_vertical
  27+ 93DA
  28+ 93DA              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93DA              ; -----------------------
  30+ 93DA              ; -----------------------
  31+ 93DA              ; -----------------------
  32+ 93DA
  33+ 93DA CD C9 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93DD CD 00 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93E0 CD 5F 96     	call Define_rutina_de_impresion
  36+ 93E3
  37+ 93E3 3A EE 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93E6 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93E8 32 EE 88     	ld (Ctrl_0),a
  40+ 93EB
  41+ 93EB C9           	ret
  42+ 93EC
  43+ 93EC              ; *******************************************************************************************************************************************************************************************
  44+ 93EC              ;	21/01/23
  45+ 93EC              ;
  46+ 93EC              ; 	Comprueba_limite_horizontal.
  47+ 93EC              ;
  48+ 93EC              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93EC              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93EC              ;
  51+ 93EC              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93EC              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93EC              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93EC              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93EC
  56+ 93EC
  57+ 93EC
  58+ 93EC 3A EE 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93EF CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93F1 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93F3 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93F5 32 EE 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93F8 18 09            jr 6F
  64+ 93FA CB 5F        1 bit 3,a
  65+ 93FC 28 0A            jr z,2F
  66+ 93FE E6 F7            and $f7
  67+ 9400 32 EE 88         ld (Ctrl_0),a
  68+ 9403 CD 56 95     6 call Inicializacion
  69+ 9406 18 5B            jr 5F
  70+ 9408 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9409
  72+ 9409              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9409              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9409
  75+ 9409 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 940A 2A FE 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 940D CD B8 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9410 67           	ld h,a
  79+ 9411 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9412 CD B8 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9415 67           	ld h,a
  82+ 9416 A7           	and a
  83+ 9417 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9419 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 941A 3A D8 88     	ld a,(Cuad_objeto)
  86+ 941D FE 02        	cp 2
  87+ 941F 38 1E        	jr c,3F
  88+ 9421 28 1C        	jr z,3F
  89+ 9423 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9424 28 23            jr z,7F
  91+ 9426 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9428 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 942A E1           	pop hl
  94+ 942B
  95+ 942B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 942B              ; _para indicar con E="2" en caso necesario.
  97+ 942B
  98+ 942B E5               push hl
  99+ 942C C5               push bc
 100+ 942D CD B8 99     	call calcula_tercio
 101+ 9430 FE 01        	cp 1
 102+ 9432 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9434 CD 64 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9437 28 26            jr z,9F
 105+ 9439 38 24            jr c,9F
 106+ 943B 1E 00        11 ld e,0
 107+ 943D 18 22            jr 8F
 108+ 943F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9440 28 07        	jr z, 7F
 110+ 9442 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9444 1E 00         	ld e,0
 112+ 9446 E1           	pop hl
 113+ 9447 18 04        	jr 4F
 114+ 9449 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 944B 18 15            jr 10F
 116+ 944D
 117+ 944D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 944D              ; _para indicar con E="2" en caso necesario.
 119+ 944D
 120+ 944D E5           4 push hl
 121+ 944E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 944F CD B8 99     	call calcula_tercio
 123+ 9452 FE 01        	cp 1
 124+ 9454 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9456 CD 64 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9459 28 04            jr z,9F
 127+ 945B 30 02            jr nc,9F
 128+ 945D 18 02        	jr 8F
 129+ 945F 1E 02        9 ld e,2
 130+ 9461 C1           8 pop bc
 131+ 9462 E1           10 pop hl
 132+ 9463 C9           5 ret
 133+ 9464
 134+ 9464              ; --------------------
 135+ 9464              ;
 136+ 9464              ; 25/08/22
 137+ 9464
 138+ 9464 CD B8 99     Comprueba_centro call calcula_tercio
 139+ 9467 67               ld h,a
 140+ 9468 08           	ex af,af
 141+ 9469 FE 02        	cp 2
 142+ 946B 38 07        	jr c,1F
 143+ 946D 28 05        	jr z,1F
 144+ 946F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9472 18 03        	jr 2F
 146+ 9474 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9477 08           2 ex af,af
 148+ 9478 A7               and a
 149+ 9479 ED 42            sbc hl,bc
 150+ 947B C9               ret
 151+ 947C
 152+ 947C              ; *********************************************************************************************************************************************************************************************
 153+ 947C              ;
 154+ 947C              ;   16/8/22
 155+ 947C              ;
 156+ 947C              ;	Comprueba_limite_vertical
 157+ 947C              ;
 158+ 947C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 947C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 947C              ;
 161+ 947C
 162+ 947C 2A C6 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 947F 7D           	ld a,l
 164+ 9480 E6 1F        	and $1F
 165+ 9482 57           	ld d,a
 166+ 9483 3A 00 89     	ld a,(Limite_vertical)
 167+ 9486 BA           	cp d 											; Límite - Posición.
 168+ 9487 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9488 3A D8 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 948B CB 47        	bit 0,a
 171+ 948D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 948F
 173+ 948F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 948F
 175+ 948F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9490 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9492
 178+ 9492              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9492              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9492
 181+ 9492 3A CA 88         ld a,(Coordenada_X)
 182+ 9495 16 0F            ld d,Centro_izquierda
 183+ 9497 A7               and a
 184+ 9498 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9499 28 1E            jr z,3F
 186+ 949B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 949D              ;                                                    ; _salimos sin modificar nada.
 188+ 949D 18 0E            jr 2F
 189+ 949F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94A0 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94A2
 192+ 94A2              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94A2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94A2
 195+ 94A2 3A CA 88         ld a,(Coordenada_X)
 196+ 94A5 16 10            ld d,Centro_derecha
 197+ 94A7 A7               and a
 198+ 94A8 92               sub d
 199+ 94A9 28 0E            jr z,3F
 200+ 94AB 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94AD              ;                                                    ; _salimos sin modificar nada.
 202+ 94AD CB 43        2 bit 0,e
 203+ 94AF 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94B1 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94B2 CD 46 95         call Modificaccionne
 206+ 94B5 C1           	pop bc
 207+ 94B6 CD 56 95         call Inicializacion
 208+ 94B9 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94BA
 210+ 94BA              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94BA
 212+ 94BA C5           4 push bc
 213+ 94BB 01 C5 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94BE 0A           	ld a,(bc)
 215+ 94BF 3D           	dec a
 216+ 94C0 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94C1 7D           	ld a,l
 218+ 94C2 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94C3 CB 47        	bit 0,a
 220+ 94C5 28 03        	jr z,5F
 221+ 94C7 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94C8 18 2E        	jr 7F
 223+ 94CA
 224+ 94CA              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94CA
 226+ 94CA 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94CB F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94CC 3A EE 88     	ld a,(Ctrl_0)
 229+ 94CF CB 4F        	bit 1,a
 230+ 94D1 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94D3 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94D4
 233+ 94D4              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94D4
 235+ 94D4 1C               inc e
 236+ 94D5 1D               dec e
 237+ 94D6 20 07            jr nz,12F
 238+ 94D8 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94D9 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94DA 22 C6 88     	ld (Posicion_actual),hl
 241+ 94DD 18 44        13 jr 9F
 242+ 94DF CB 43        12 bit 0,e
 243+ 94E1 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94E3              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94E3 C1           	pop bc
 246+ 94E4 18 D3        	jr 3B
 247+ 94E6 80           14 add b
 248+ 94E7 6F               ld l,a
 249+ 94E8 22 C6 88     	ld (Posicion_actual),hl
 250+ 94EB CD 46 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94EE 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94F0 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94F2 32 EE 88         ld (Ctrl_0),a
 254+ 94F5 F1           	pop af
 255+ 94F6 18 2B        	jr 9F
 256+ 94F8
 257+ 94F8              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94F8
 259+ 94F8 F5           7 push af
 260+ 94F9 3A EE 88     	ld a,(Ctrl_0)
 261+ 94FC CB 47        	bit 0,a
 262+ 94FE 20 1D        	jr nz,8F
 263+ 9500 F1           	pop af
 264+ 9501
 265+ 9501              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9501
 267+ 9501 1C           	inc e
 268+ 9502 1D               dec e
 269+ 9503 20 07            jr nz,10F
 270+ 9505 90           	sub b
 271+ 9506 6F               ld l,a
 272+ 9507 22 C6 88     	ld (Posicion_actual),hl
 273+ 950A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 950C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 950C CB 43        10 bit 0,e
 276+ 950E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9510              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9510 C1           	pop bc
 279+ 9511 18 A6        	jr 3B
 280+ 9513 90           16 sub b
 281+ 9514 6F               ld l,a
 282+ 9515 22 C6 88     	ld (Posicion_actual),hl
 283+ 9518 CD 46 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 951B 18 06            jr 9F
 285+ 951D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 951F 32 EE 88         ld (Ctrl_0),a
 287+ 9522 F1           	pop af
 288+ 9523 C1           9 pop bc
 289+ 9524 1E 00        	ld e,0
 290+ 9526 CD 56 95         call Inicializacion
 291+ 9529 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 952A 08           	ex af,af
 293+ 952B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 952C 18 8B            jr 3B
 295+ 952E
 296+ 952E              ; --------------------
 297+ 952E
 298+ 952E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9530 CD B4 96     1 call PreviousScan
 300+ 9533 10 FB            djnz 1B
 301+ 9535 22 C6 88     	ld (Posicion_actual),hl
 302+ 9538 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9539 C9           	ret
 304+ 953A
 305+ 953A              ; --------------------
 306+ 953A
 307+ 953A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 953C CD A5 96     1 call NextScan
 309+ 953F 10 FB            djnz 1B
 310+ 9541 22 C6 88     	ld (Posicion_actual),hl
 311+ 9544 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9545 C9           	ret
 313+ 9546
 314+ 9546              ; --------------------
 315+ 9546              ;
 316+ 9546              ;	22/01/23
 317+ 9546              ;
 318+ 9546              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9546              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9546              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9546
 322+ 9546
 323+ 9546              Modificaccionne
 324+ 9546
 325+ 9546 3A D8 88     	ld a,(Cuad_objeto)
 326+ 9549 FE 02        	cp 2
 327+ 954B CC 2E 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 954E DC 2E 95         call c,Modifica_Pos_actual
 329+ 9551 C8           	ret z
 330+ 9552 CD 3A 95         call Modifica_Pos_actual2
 331+ 9555 C9               ret
 332+ 9556
 333+ 9556              ; *************************************************************************************************************************************************************************************************
 334+ 9556              ;
 335+ 9556              ;	13/8/22
 336+ 9556              ;
 337+ 9556              ;	Inicializacion
 338+ 9556              ;
 339+ 9556              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9556              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9556              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9556              ;
 343+ 9556              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9556              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9556              ;	_ desaparece/aparece.
 346+ 9556
 347+ 9556              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9556              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9556              ;
 350+ 9556              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9556              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9556              ; 		   [E] ="0"
 353+ 9556
 354+ 9556              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9556
 356+ 9556 CD B8 99     Inicializacion call calcula_tercio
 357+ 9559 28 36        	jr z,primit
 358+ 955B E6 02        	and 2
 359+ 955D 20 07        	jr nz,segmit
 360+ 955F 7D           	ld a,l
 361+ 9560 FE 7F        	cp $7f
 362+ 9562 38 2D        	jr c,primit
 363+ 9564 28 2B        	jr z,primit
 364+ 9566 CD C3 95     segmit call column
 365+ 9569 38 13        	jr c,tercuad
 366+ 956B 3E 04        cuarcuad ld a,4
 367+ 956D 32 D8 88     	ld (Cuad_objeto),a
 368+ 9570 21 20 48     	ld hl,$4820
 369+ 9573 22 FE 88     	ld (Limite_horizontal),hl
 370+ 9576 21 00 89     	ld hl,Limite_vertical
 371+ 9579 36 0D        	ld (hl),$0d
 372+ 957B 08           	ex af,af
 373+ 957C 18 3C        	jr 1F
 374+ 957E              tercuad
 375+ 957E 3E 03        	ld a,3
 376+ 9580 32 D8 88     	ld (Cuad_objeto),a
 377+ 9583 21 20 48     	ld hl,$4820
 378+ 9586 22 FE 88     	ld (Limite_horizontal),hl
 379+ 9589 21 00 89     	ld hl,Limite_vertical
 380+ 958C 36 12        	ld (hl),$12
 381+ 958E 08           	ex af,af
 382+ 958F 18 29        	jr 1F
 383+ 9591 CD C3 95     primit call column
 384+ 9594 38 13        	jr c, primcuad
 385+ 9596              segcuad
 386+ 9596 3E 02        	ld a,2
 387+ 9598 32 D8 88     	ld (Cuad_objeto),a
 388+ 959B 21 C0 4F     	ld hl,$4fc0
 389+ 959E 22 FE 88     	ld (Limite_horizontal),hl
 390+ 95A1 21 00 89     	ld hl,Limite_vertical
 391+ 95A4 36 0D        	ld (hl),$0d
 392+ 95A6 08           	ex af,af
 393+ 95A7 18 11        	jr 1F
 394+ 95A9              primcuad
 395+ 95A9 3E 01        	ld a,1
 396+ 95AB 32 D8 88     	ld (Cuad_objeto),a
 397+ 95AE 21 C0 4F     	ld hl,$4fc0
 398+ 95B1 22 FE 88     	ld (Limite_horizontal),hl
 399+ 95B4 21 00 89     	ld hl,Limite_vertical
 400+ 95B7 36 12        	ld (hl),$12
 401+ 95B9 08           	ex af,af
 402+ 95BA CD 43 9D     1 call Genera_coordenadas
 403+ 95BD 21 EE 88     	ld hl,Ctrl_0
 404+ 95C0 CB EE        	set 5,(hl)
 405+ 95C2 C9           	ret
 406+ 95C3
 407+ 95C3              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95C3
 409+ 95C3              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95C3              ;
 411+ 95C3              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95C3
 413+ 95C3 7D           column ld a,l
 414+ 95C4 E6 1F        	and $1f
 415+ 95C6 FE 10         	cp $10
 416+ 95C8 C9            	ret
 417+ 95C9
 418+ 95C9              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95C9              ;
 420+ 95C9              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95C9              ;
 422+ 95C9              ; 14/12/22
 423+ 95C9              ;
 424+ 95C9              ;	Modifica: A y BC.
 425+ 95C9
 426+ 95C9 3A D8 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95CC E6 01        	and 1
 428+ 95CE 28 17        	jr z,1F
 429+ 95D0
 430+ 95D0              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95D0
 432+ 95D0 3A CA 88     	ld a,(Coordenada_X)
 433+ 95D3 47           	ld b,a
 434+ 95D4 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95D5 79           	ld a,c
 436+ 95D6 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95D7 38 08        	jr c,2F
 438+ 95D9 47           	ld b,a
 439+ 95DA 79           	ld a,c
 440+ 95DB 90           	sub b
 441+ 95DC 32 FD 88     	ld (Columnas),a
 442+ 95DF 18 1B        	jr 4F
 443+ 95E1 79           2 ld a,c
 444+ 95E2 32 FD 88     	ld (Columnas),a
 445+ 95E5 18 15        	jr 4F
 446+ 95E7
 447+ 95E7              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95E7
 449+ 95E7 3A CA 88     1 ld a,(Coordenada_X)
 450+ 95EA 81           	add c
 451+ 95EB 3D           	dec a
 452+ 95EC D6 1F        	sub $1f
 453+ 95EE 38 08        	jr c,3F
 454+ 95F0 47           	ld b,a
 455+ 95F1 79           	ld a,c
 456+ 95F2 90           	sub b
 457+ 95F3 32 FD 88     	ld (Columnas),a
 458+ 95F6 18 04        	jr 4F
 459+ 95F8 79           3 ld a,c
 460+ 95F9 32 FD 88     	ld (Columnas),a
 461+ 95FC D9           4 exx
 462+ 95FD 4F           	ld c,a
 463+ 95FE D9           	exx
 464+ 95FF C9            ret
 465+ 9600
 466+ 9600              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9600              ;
 468+ 9600              ;   19/7/23
 469+ 9600              ;
 470+ 9600              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9600              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9600              ;
 473+ 9600              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9600              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9600              ;
 476+ 9600              ;	DESTRUYE: HL,B Y A.
 477+ 9600
 478+ 9600 3A D8 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9603 FE 02        	cp 2
 480+ 9605 38 18        	jr c,1F
 481+ 9607 28 16        	jr z,1F
 482+ 9609 E6 01        	and 1
 483+ 960B 28 0D        	jr z,3F
 484+ 960D
 485+ 960D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 960D
 487+ 960D CD 53 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9610
 489+ 9610 7D           9 ld a,l
 490+ 9611 E6 1F        	and $1f
 491+ 9613 28 2A        	jr z,7F
 492+ 9615 2B           	dec hl
 493+ 9616 10 F8        	djnz 9B
 494+ 9618 18 25        	jr 7F
 495+ 961A
 496+ 961A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 961A
 498+ 961A 2A C6 88     3 ld hl,(Posicion_actual)
 499+ 961D 18 20        	jr 7F
 500+ 961F
 501+ 961F 28 14        1 jr z,2F
 502+ 9621
 503+ 9621              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9621
 505+ 9621 CD 53 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9624
 507+ 9624 7D           4 ld a,l
 508+ 9625 E6 1F        	and $1f
 509+ 9627 28 03        	jr z,6F
 510+ 9629 2B           	dec hl
 511+ 962A 10 F8        	djnz 4B
 512+ 962C 06 0F        6 ld b,15
 513+ 962E CD B4 96     5 call PreviousScan
 514+ 9631 10 FB        	djnz 5B
 515+ 9633 18 0A        	jr 7F
 516+ 9635
 517+ 9635              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9635
 519+ 9635 CD 53 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9638 06 0F        	ld b,15
 521+ 963A CD B4 96     8 call PreviousScan
 522+ 963D 10 FB        	djnz 8B
 523+ 963F
 524+ 963F E5           7 push hl
 525+ 9640 DD E1        	pop ix
 526+ 9642
 527+ 9642 2A C8 88     	ld hl,(Puntero_objeto)
 528+ 9645 E5           	push hl
 529+ 9646 FD E1        	pop iy
 530+ 9648
 531+ 9648              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9648
 533+ 9648 3A EE 88     	ld a,(Ctrl_0)
 534+ 964B CB 77        	bit 6,a
 535+ 964D C8           	ret z
 536+ 964E
 537+ 964E              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 964E              ; _ entidad / Amadeus´.
 539+ 964E
 540+ 964E DD 22 4C 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9652
 542+ 9652 C9           	ret
 543+ 9653
 544+ 9653              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9653              ;
 546+ 9653              ;	2/1/23
 547+ 9653              ;
 548+ 9653              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9653              ;
 550+ 9653              ;	Tras esta rutina tenemos:
 551+ 9653              ;
 552+ 9653              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9653              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9653              ;
 555+ 9653              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9653
 557+ 9653 2A C6 88     Operandos ld hl,(Posicion_actual)
 558+ 9656 3A FD 88     	ld a,(Columnas)
 559+ 9659 3D           	dec a
 560+ 965A 20 01        	jr nz,1F
 561+ 965C 3C           	inc a
 562+ 965D 47           1 ld b,a
 563+ 965E C9           	ret
 564+ 965F
 565+ 965F              ; --------------------------------------------------------------------------------------------------------------------
 566+ 965F              ;
 567+ 965F              ;	3/1/23
 568+ 965F              ;
 569+ 965F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 965F              ;
 571+ 965F              ;	Destruye: A,B,HL y DE.
 572+ 965F
 573+ 965F              Define_rutina_de_impresion
 574+ 965F
 575+ 965F 3A C5 88     	ld a,(Columns)
 576+ 9662 47           	ld b,a
 577+ 9663 3A FD 88     	ld a,(Columnas)
 578+ 9666 B8           	cp b
 579+ 9667 20 0D        	jr nz,2f
 580+ 9669
 581+ 9669              ;	La entidad se imprime entera.
 582+ 9669
 583+ 9669 21 88 97     	ld hl, Indice_entidades_completas
 584+ 966C E6 01        	and 1
 585+ 966E 28 02        	jr z,1F
 586+ 9670
 587+ 9670 23           	inc hl
 588+ 9671 23           	inc hl
 589+ 9672
 590+ 9672 CD DF 8C     1 call Extrae_address
 591+ 9675 C9           	ret		;	ret
 592+ 9676
 593+ 9676              ;	La entidad no se imprime entera en pantalla.
 594+ 9676
 595+ 9676 3A D8 88     2 ld a,(Cuad_objeto)
 596+ 9679 E6 01        	and 1
 597+ 967B 28 17        	jr z,3F
 598+ 967D
 599+ 967D              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 967D
 601+ 967D 21 8C 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9680 3A C5 88     4 ld a,(Columns)
 603+ 9683 E6 01        	and 1
 604+ 9685 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9687
 606+ 9687 23           	inc hl
 607+ 9688 23           	inc hl
 608+ 9689
 609+ 9689 3A FD 88     	ld a,(Columnas)
 610+ 968C E6 01        	and 1
 611+ 968E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9690
 613+ 9690 23           	inc hl
 614+ 9691 23           	inc hl
 615+ 9692
 616+ 9692 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9694
 618+ 9694 21 92 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9697 18 E7        	jr 4B
 620+ 9699
 621+ 9699              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9699              ;
 623+ 9699              ;	Prepara_draw
 624+ 9699              ;
 625+ 9699              ;	Es una rutina de carga.
 626+ 9699              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9699              ;
 628+ 9699              ;	FUNCIONAMIENTO:
 629+ 9699              ;
 630+ 9699              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9699              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9699              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9699              ;
 634+ 9699              ;	DESTRUYE:
 635+ 9699              ;
 636+ 9699              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9699
 638+ 9699 21 C4 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 969C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 969D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 969E 4E           	ld c,(hl)
 642+ 969F 2A C6 88     	ld hl,(Posicion_actual)
 643+ 96A2 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96A4 C9           	ret
 645+ 96A5
 646+ 96A5              ;----------------------------------------------------------------------------------------------------------------
 647+ 96A5              ;
 648+ 96A5              ;	5/08/22
 649+ 96A5              ;
 650+ 96A5              ;   NextScan.
 651+ 96A5              ;
 652+ 96A5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96A5              ;
 654+ 96A5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96A5              ;
 656+ 96A5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96A5              ;
 658+ 96A5              ;       DESTRUIDOS: AF y HL !!!
 659+ 96A5              ;
 660+ 96A5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96A5              ;
 662+ 96A5
 663+ 96A5 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96A6 7C               ld a,h
 665+ 96A7 E6 07            and 7
 666+ 96A9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96AA
 668+ 96AA 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96AB C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96AD 6F               ld l,a
 671+ 96AE D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96AF
 673+ 96AF 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96B0 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96B2 67               ld h,a
 676+ 96B3 C9               ret
 677+ 96B4
 678+ 96B4              ;----------------------------------------------------------------------------------------------------------------
 679+ 96B4              ;
 680+ 96B4              ;	5/08/22
 681+ 96B4              ;
 682+ 96B4              ;   PreviousScan.
 683+ 96B4              ;
 684+ 96B4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96B4              ;
 686+ 96B4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96B4              ;
 688+ 96B4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96B4              ;
 690+ 96B4              ;       DESTRUIDOS: AF y HL !!!
 691+ 96B4              ;
 692+ 96B4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96B4              ;
 694+ 96B4
 695+ 96B4 7C           PreviousScan ld a,h
 696+ 96B5 25               dec h               ; Dec H.
 697+ 96B6 E6 07            and 7
 698+ 96B8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96B9
 700+ 96B9 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96BA D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96BC 6F               ld l,a
 703+ 96BD D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96BE
 705+ 96BE 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96BF C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96C1 67               ld h,a
 708+ 96C2 C9               ret
 709+ 96C3
 710+ 96C3              ; -----------------------------------------------------------------------------------
 711+ 96C3              ;
 712+ 96C3              ;	31/7/23
 713+ 96C3              ;
 714+ 96C3              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96C3              ;	Extrae fotos de Album_de_fotos.
 716+ 96C3
 717+ 96C3              Extrae_foto_entidades
 718+ 96C3
 719+ 96C3 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96C6 7E           	ld a,(hl)
 721+ 96C7 A7           	and a
 722+ 96C8 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96C9
 724+ 96C9 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96CC A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96CD C8           	ret z
 727+ 96CE
 728+ 96CE              ; -----------------------------------
 729+ 96CE
 730+ 96CE ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96D2 31 00 70     	ld sp,Album_de_fotos
 732+ 96D5
 733+ 96D5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96D7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96D8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96D9
 737+ 96D9 ED 73 16 89  	ld (Stack_2),sp
 738+ 96DD ED 7B 14 89  	ld sp,(Stack)
 739+ 96E1
 740+ 96E1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96E1
 742+ 96E1 3E CD        	ld a,$cd
 743+ 96E3 32 EB 96     	ld (Imprime),a
 744+ 96E6 EB           	ex de,hl
 745+ 96E7 22 EC 96     	ld (Imprime+1),hl
 746+ 96EA EB           	ex de,hl
 747+ 96EB
 748+ 96EB              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96EB
 750+ 96EB 00 00 00     Imprime db 0,0,0
 751+ 96EE
 752+ 96EE ED 73 14 89  	ld (Stack),sp
 753+ 96F2
 754+ 96F2 3A 0F 89     	ld a,(Numero_de_malotes)
 755+ 96F5 3D           	dec a
 756+ 96F6 28 09        	jr z,1F
 757+ 96F8 32 0F 89      	ld (Numero_de_malotes),a
 758+ 96FB
 759+ 96FB ED 7B 16 89  	ld sp,(Stack_2)
 760+ 96FF 18 D4        	jr 2B
 761+ 9701
 762+ 9701 AF           1 xor a
 763+ 9702 32 16 89     	ld (Stack_2),a
 764+ 9705
 765+ 9705 C9           	ret
 766+ 9706
 767+ 9706              ; -----------------------------------------------------------------------------------
 768+ 9706              ;
 769+ 9706              ;	28/2/23
 770+ 9706              ;
 771+ 9706              ;	Pinta los disparos generados.
 772+ 9706
 773+ 9706              Extrae_foto_disparos
 774+ 9706
 775+ 9706 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 9709 7E               ld a,(hl)
 777+ 970A A7               and a
 778+ 970B C8               ret z
 779+ 970C
 780+ 970C 3A 3C 89     	ld a,(Numero_de_disparotes)
 781+ 970F A7           	and a
 782+ 9710 C8           	ret z
 783+ 9711 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9715 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 9718
 786+ 9718 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 971A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 971B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 971C
 790+ 971C ED 73 16 89  	ld (Stack_2),sp
 791+ 9720 ED 7B 14 89  	ld sp,(Stack)
 792+ 9724
 793+ 9724              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9724
 795+ 9724 3E CD        	ld a,$cd
 796+ 9726 32 2E 97     	ld (Imprime2),a
 797+ 9729 EB           	ex de,hl
 798+ 972A 22 2F 97     	ld (Imprime2+1),hl
 799+ 972D EB           	ex de,hl
 800+ 972E
 801+ 972E              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 972E
 803+ 972E 00 00 00     Imprime2 db 0,0,0
 804+ 9731
 805+ 9731 3A 3C 89     	ld a,(Numero_de_disparotes)
 806+ 9734 3D           	dec a
 807+ 9735 28 09        	jr z,1F
 808+ 9737 32 3C 89      	ld (Numero_de_disparotes),a
 809+ 973A
 810+ 973A ED 7B 16 89  	ld sp,(Stack_2)
 811+ 973E 18 D8        	jr 2B
 812+ 9740
 813+ 9740 AF           1 xor a
 814+ 9741 32 16 89     	ld (Stack_2),a
 815+ 9744 C9           	ret
 816+ 9745
 817+ 9745              ; -----------------------------------------------------------------------------------
 818+ 9745              ;
 819+ 9745              ;	4/9/23
 820+ 9745              ;
 821+ 9745              ;	Rutina principal de pintado de Amadeus.
 822+ 9745              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9745
 824+ 9745              Extrae_foto_Amadeus
 825+ 9745
 826+ 9745 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 827+ 9748 7E           	ld a,(hl)
 828+ 9749 A7           	and a
 829+ 974A C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 974B
 831+ 974B 3A 0F 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 974E A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 974F C8           	ret z
 834+ 9750
 835+ 9750              ; -----------------------------------
 836+ 9750
 837+ 9750 ED 73 14 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9754 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 9757
 840+ 9757 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9759 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 975A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 975B
 844+ 975B ED 73 16 89  	ld (Stack_2),sp
 845+ 975F ED 7B 14 89  	ld sp,(Stack)
 846+ 9763
 847+ 9763              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9763
 849+ 9763 3E CD        	ld a,$cd
 850+ 9765 32 6D 97     	ld (Imprime_Amadeus),a
 851+ 9768 EB           	ex de,hl
 852+ 9769 22 6E 97     	ld (Imprime_Amadeus+1),hl
 853+ 976C EB           	ex de,hl
 854+ 976D
 855+ 976D              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 976D
 857+ 976D 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9770
 859+ 9770 ED 73 14 89  	ld (Stack),sp
 860+ 9774
 861+ 9774 3A 0F 89     	ld a,(Numero_de_malotes)
 862+ 9777 3D           	dec a
 863+ 9778 28 09        	jr z,1F
 864+ 977A 32 0F 89      	ld (Numero_de_malotes),a
 865+ 977D
 866+ 977D ED 7B 16 89  	ld sp,(Stack_2)
 867+ 9781 18 D4        	jr 2B
 868+ 9783
 869+ 9783 AF           1 xor a
 870+ 9784 32 16 89     	ld (Stack_2),a
 871+ 9787
 872+ 9787 C9           	ret
# file closed: Draw_XOR.asm
1607  9788              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9788              ;   índices de Rutinas de impresión.
   2+ 9788
   3+ 9788 98 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 978A C5 97            defw Pinta_Amadeus_3x2
   5+ 978C
   6+ 978C 1B 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 978E BB 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9790 6F 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9792
  10+ 9792 45 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9794 49 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9796 FD 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9798
  14+ 9798
  15+ 9798              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9798              ;
  17+ 9798              ;   12/12/22
  18+ 9798              ;
  19+ 9798              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9798              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9798              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9798              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9798              ;
  24+ 9798              ;   Modifica: DE y HL.
  25+ 9798
  26+ 9798 ED 73 14 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 979C FD F9        	ld sp,iy
  28+ 979E 06 10            ld b,16
  29+ 97A0 D1           1 pop de
  30+ 97A1 7B               ld a,e
  31+ 97A2 AE               xor (hl)
  32+ 97A3 77           	ld (hl),a
  33+ 97A4 23           	inc hl
  34+ 97A5 7A               ld a,d
  35+ 97A6 AE               xor (hl)
  36+ 97A7 77           	ld (hl),a
  37+ 97A8 2B           	dec hl
  38+ 97A9 24           	inc h
  39+ 97AA 7C               ld a,h
  40+ 97AB E6 07            and 7
  41+ 97AD 20 0A            jr nz,2F
  42+ 97AF 7D               ld a,l
  43+ 97B0 C6 20            add a,$20
  44+ 97B2 6F               ld l,a
  45+ 97B3 38 04            jr c,2F
  46+ 97B5 7C               ld a,h
  47+ 97B6 D6 08            sub 8
  48+ 97B8 67               ld h,a
  49+ 97B9 7C           2 ld a,h
  50+ 97BA FE 58            cp $58
  51+ 97BC 28 02            jr z,3F
  52+ 97BE 10 E0            djnz 1B
  53+ 97C0 ED 7B 14 89  3 ld sp,(Stack)
  54+ 97C4 C9           	ret
  55+ 97C5
  56+ 97C5 ED 73 14 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97C9 FD F9        	ld sp,iy
  58+ 97CB 06 08            ld b,8
  59+ 97CD D1           1 pop de
  60+ 97CE 7B               ld a,e
  61+ 97CF AE               xor (hl)
  62+ 97D0 77           	ld (hl),a
  63+ 97D1 23           	inc hl
  64+ 97D2 7A               ld a,d
  65+ 97D3 AE               xor (hl)
  66+ 97D4 77           	ld (hl),a
  67+ 97D5 23           	inc hl
  68+ 97D6 D1           	pop de
  69+ 97D7 7B               ld a,e
  70+ 97D8 AE               xor (hl)
  71+ 97D9 77           	ld (hl),a
  72+ 97DA 2B           	dec hl
  73+ 97DB 2B           	dec hl
  74+ 97DC 24           	inc h
  75+ 97DD 7C               ld a,h
  76+ 97DE E6 07            and 7
  77+ 97E0 20 0A            jr nz,2F
  78+ 97E2 7D               ld a,l
  79+ 97E3 C6 20            add a,$20
  80+ 97E5 6F               ld l,a
  81+ 97E6 38 04            jr c,2F
  82+ 97E8 7C               ld a,h
  83+ 97E9 D6 08            sub 8
  84+ 97EB 67               ld h,a
  85+ 97EC 7C           2 ld a,h
  86+ 97ED FE 58            cp $58
  87+ 97EF 28 25            jr z,4F
  88+ 97F1 7A               ld a,d
  89+ 97F2 AE               xor (hl)
  90+ 97F3 77               ld (hl),a
  91+ 97F4 D1           	pop de
  92+ 97F5 23           	inc hl
  93+ 97F6 7B               ld a,e
  94+ 97F7 AE               xor (hl)
  95+ 97F8 77           	ld (hl),a
  96+ 97F9 23           	inc hl
  97+ 97FA 7A               ld a,d
  98+ 97FB AE               xor (hl)
  99+ 97FC 77           	ld (hl),a
 100+ 97FD 2B           	dec hl
 101+ 97FE 2B           	dec hl
 102+ 97FF 24           	inc h
 103+ 9800 7C               ld a,h
 104+ 9801 E6 07            and 7
 105+ 9803 20 0A            jr nz,3F
 106+ 9805 7D               ld a,l
 107+ 9806 C6 20            add a,$20
 108+ 9808 6F               ld l,a
 109+ 9809 38 04            jr c,3F
 110+ 980B 7C               ld a,h
 111+ 980C D6 08            sub 8
 112+ 980E 67               ld h,a
 113+ 980F 7C           3 ld a,h
 114+ 9810 FE 58            cp $58
 115+ 9812 28 02            jr z,4F
 116+ 9814 10 B7            djnz 1B
 117+ 9816 ED 7B 14 89  4 ld sp,(Stack)
 118+ 981A C9           	ret
 119+ 981B
 120+ 981B              ; ---------------------------------------------------
 121+ 981B
 122+ 981B ED 73 14 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 981F FD F9        	ld sp,iy
 124+ 9821
 125+ 9821              ; >>>
 126+ 9821
 127+ 9821 06 10            ld b,16
 128+ 9823 D1           1 pop de
 129+ 9824 7A           	ld a,d
 130+ 9825 AE           	xor (hl)
 131+ 9826 77           	ld (hl),a
 132+ 9827 24           	inc h
 133+ 9828 7C               ld a,h
 134+ 9829 E6 07            and 7
 135+ 982B 20 0C            jr nz,2F
 136+ 982D 7D               ld a,l
 137+ 982E C6 20            add a,$20
 138+ 9830 6F               ld l,a
 139+ 9831 38 06            jr c,2F
 140+ 9833 7C               ld a,h
 141+ 9834 D6 08            sub 8
 142+ 9836 67               ld h,a
 143+ 9837 18 00            jr 2F
 144+ 9839 7C           2 ld a,h
 145+ 983A FE 58            cp $58
 146+ 983C 28 02            jr z,3F
 147+ 983E 10 E3            djnz 1B
 148+ 9840 ED 7B 14 89  3 ld sp,(Stack)
 149+ 9844 C9           	ret
 150+ 9845
 151+ 9845 ED 73 14 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9849 FD F9        	ld sp,iy
 153+ 984B
 154+ 984B              ; >>>
 155+ 984B
 156+ 984B 06 10            ld b,16
 157+ 984D D1           1 pop de
 158+ 984E 7B           	ld a,e
 159+ 984F AE           	xor (hl)
 160+ 9850 77           	ld (hl),a
 161+ 9851 24           	inc h
 162+ 9852 7C               ld a,h
 163+ 9853 E6 07            and 7
 164+ 9855 20 0C            jr nz,2F
 165+ 9857 7D               ld a,l
 166+ 9858 C6 20            add a,$20
 167+ 985A 6F               ld l,a
 168+ 985B 38 06            jr c,2F
 169+ 985D 7C               ld a,h
 170+ 985E D6 08            sub 8
 171+ 9860 67               ld h,a
 172+ 9861 18 00            jr 2F
 173+ 9863 7C           2 ld a,h
 174+ 9864 FE 58            cp $58
 175+ 9866 28 02            jr z,3F
 176+ 9868 10 E3            djnz 1B
 177+ 986A ED 7B 14 89  3 ld sp,(Stack)
 178+ 986E C9           	ret
 179+ 986F
 180+ 986F              ; ---------------------------------------------------
 181+ 986F
 182+ 986F ED 73 14 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9873 FD F9        	ld sp,iy
 184+ 9875 06 08            ld b,8
 185+ 9877 D1           1 pop de
 186+ 9878 7A           	ld a,d
 187+ 9879 AE           	xor (hl)
 188+ 987A 77           	ld (hl),a
 189+ 987B 23           	inc hl
 190+ 987C D1           	pop de
 191+ 987D 7B           	ld a,e
 192+ 987E AE           	xor (hl)
 193+ 987F 77           	ld (hl),a
 194+ 9880 2B           	dec hl
 195+ 9881 24            	inc h
 196+ 9882 7C               ld a,h
 197+ 9883 E6 07            and 7
 198+ 9885 20 0A            jr nz,2F
 199+ 9887 7D               ld a,l
 200+ 9888 C6 20            add a,$20
 201+ 988A 6F               ld l,a
 202+ 988B 38 04            jr c,2F
 203+ 988D 7C               ld a,h
 204+ 988E D6 08            sub 8
 205+ 9890 67               ld h,a
 206+ 9891 7C           2 ld a,h
 207+ 9892 FE 58            cp $58
 208+ 9894 28 20            jr z,4F
 209+ 9896 D1               pop de
 210+ 9897 7B           	ld a,e
 211+ 9898 AE           	xor (hl)
 212+ 9899 77           	ld (hl),a
 213+ 989A 23           	inc hl
 214+ 989B 7A           	ld a,d
 215+ 989C AE           	xor (hl)
 216+ 989D 77           	ld (hl),a
 217+ 989E 2B           	dec hl
 218+ 989F 24           	inc h
 219+ 98A0 7C               ld a,h
 220+ 98A1 E6 07            and 7
 221+ 98A3 20 0A            jr nz,3F
 222+ 98A5 7D               ld a,l
 223+ 98A6 C6 20            add a,$20
 224+ 98A8 6F               ld l,a
 225+ 98A9 38 04            jr c,3F
 226+ 98AB 7C               ld a,h
 227+ 98AC D6 08            sub 8
 228+ 98AE 67               ld h,a
 229+ 98AF 7C           3 ld a,h
 230+ 98B0 FE 58            cp $58
 231+ 98B2 28 02            jr z,4F
 232+ 98B4 10 C1            djnz 1B
 233+ 98B6 ED 7B 14 89  4 ld sp,(Stack)
 234+ 98BA C9           	ret
 235+ 98BB
 236+ 98BB ED 73 14 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98BF FD F9        	ld sp,iy
 238+ 98C1 06 08            ld b,8
 239+ 98C3 D1           1 pop de
 240+ 98C4 D1           	pop de
 241+ 98C5 7B           	ld a,e
 242+ 98C6 AE           	xor (hl)
 243+ 98C7 77           	ld (hl),a
 244+ 98C8 24            	inc h
 245+ 98C9 7C               ld a,h
 246+ 98CA E6 07            and 7
 247+ 98CC 20 0A            jr nz,2F
 248+ 98CE 7D               ld a,l
 249+ 98CF C6 20            add a,$20
 250+ 98D1 6F               ld l,a
 251+ 98D2 38 04            jr c,2F
 252+ 98D4 7C               ld a,h
 253+ 98D5 D6 08            sub 8
 254+ 98D7 67               ld h,a
 255+ 98D8 7C           2 ld a,h
 256+ 98D9 FE 58            cp $58
 257+ 98DB 28 1B            jr z,4F
 258+ 98DD D1               pop de
 259+ 98DE 7A           	ld a,d
 260+ 98DF AE           	xor (hl)
 261+ 98E0 77           	ld (hl),a
 262+ 98E1 24           	inc h
 263+ 98E2 7C               ld a,h
 264+ 98E3 E6 07            and 7
 265+ 98E5 20 0A            jr nz,3F
 266+ 98E7 7D               ld a,l
 267+ 98E8 C6 20            add a,$20
 268+ 98EA 6F               ld l,a
 269+ 98EB 38 04            jr c,3F
 270+ 98ED 7C               ld a,h
 271+ 98EE D6 08            sub 8
 272+ 98F0 67               ld h,a
 273+ 98F1 7C           3 ld a,h
 274+ 98F2 FE 58            cp $58
 275+ 98F4 28 02            jr z,4F
 276+ 98F6 10 CB            djnz 1B
 277+ 98F8 ED 7B 14 89  4 ld sp,(Stack)
 278+ 98FC C9           	ret
 279+ 98FD
 280+ 98FD ED 73 14 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9901 FD F9        	ld sp,iy
 282+ 9903 06 08            ld b,8
 283+ 9905 D1           1 pop de
 284+ 9906 7B           	ld a,e
 285+ 9907 AE           	xor (hl)
 286+ 9908 77           	ld (hl),a
 287+ 9909 23           	inc hl
 288+ 990A 7A           	ld a,d
 289+ 990B AE           	xor (hl)
 290+ 990C 77           	ld (hl),a
 291+ 990D 2B           	dec hl
 292+ 990E 24             	inc h
 293+ 990F 7C               ld a,h
 294+ 9910 E6 07            and 7
 295+ 9912 20 0A            jr nz,2F
 296+ 9914 7D               ld a,l
 297+ 9915 C6 20            add a,$20
 298+ 9917 6F               ld l,a
 299+ 9918 38 04            jr c,2F
 300+ 991A 7C               ld a,h
 301+ 991B D6 08            sub 8
 302+ 991D 67               ld h,a
 303+ 991E 7C           2 ld a,h
 304+ 991F FE 58            cp $58
 305+ 9921 28 21            jr z,4F
 306+ 9923 D1               pop de
 307+ 9924 7A           	ld a,d
 308+ 9925 AE           	xor (hl)
 309+ 9926 77           	ld (hl),a
 310+ 9927 23           	inc hl
 311+ 9928 D1               pop de
 312+ 9929 7B           	ld a,e
 313+ 992A AE           	xor (hl)
 314+ 992B 77           	ld (hl),a
 315+ 992C 2B           	dec hl
 316+ 992D 24           	inc h
 317+ 992E 7C               ld a,h
 318+ 992F E6 07            and 7
 319+ 9931 20 0A            jr nz,3F
 320+ 9933 7D               ld a,l
 321+ 9934 C6 20            add a,$20
 322+ 9936 6F               ld l,a
 323+ 9937 38 04            jr c,3F
 324+ 9939 7C               ld a,h
 325+ 993A D6 08            sub 8
 326+ 993C 67               ld h,a
 327+ 993D 7C           3 ld a,h
 328+ 993E FE 58            cp $58
 329+ 9940 28 02            jr z,4F
 330+ 9942 10 C1            djnz 1B
 331+ 9944 ED 7B 14 89  4 ld sp,(Stack)
 332+ 9948 C9           	ret
 333+ 9949
 334+ 9949 ED 73 14 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 994D FD F9        	ld sp,iy
 336+ 994F 06 08            ld b,8
 337+ 9951 D1           1 pop de
 338+ 9952 7B           	ld a,e
 339+ 9953 AE           	xor (hl)
 340+ 9954 77           	ld (hl),a
 341+ 9955 24            	inc h
 342+ 9956 7C               ld a,h
 343+ 9957 E6 07            and 7
 344+ 9959 20 0A            jr nz,2F
 345+ 995B 7D               ld a,l
 346+ 995C C6 20            add a,$20
 347+ 995E 6F               ld l,a
 348+ 995F 38 04            jr c,2F
 349+ 9961 7C               ld a,h
 350+ 9962 D6 08            sub 8
 351+ 9964 67               ld h,a
 352+ 9965 7C           2 ld a,h
 353+ 9966 FE 58            cp $58
 354+ 9968 28 1C            jr z,4F
 355+ 996A D1               pop de
 356+ 996B 7A           	ld a,d
 357+ 996C AE           	xor (hl)
 358+ 996D 77           	ld (hl),a
 359+ 996E 24           	inc h
 360+ 996F 7C               ld a,h
 361+ 9970 E6 07            and 7
 362+ 9972 20 0A            jr nz,3F
 363+ 9974 7D               ld a,l
 364+ 9975 C6 20            add a,$20
 365+ 9977 6F               ld l,a
 366+ 9978 38 04            jr c,3F
 367+ 997A 7C               ld a,h
 368+ 997B D6 08            sub 8
 369+ 997D 67               ld h,a
 370+ 997E 7C           3 ld a,h
 371+ 997F FE 58            cp $58
 372+ 9981 28 03            jr z,4F
 373+ 9983 D1               pop de
 374+ 9984 10 CB            djnz 1B
 375+ 9986 ED 7B 14 89  4 ld sp,(Stack)
 376+ 998A C9           	ret
 377+ 998B
 378+ 998B              ; ---------------------------------------------------
 379+ 998B              ;
 380+ 998B              ;   27/02/23
 381+ 998B              ;
 382+ 998B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 998B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 998B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 998B
 386+ 998B ED 73 14 89  Pinta_Disparo ld (Stack),sp
 387+ 998F FD F9            ld sp,iy
 388+ 9991 06 03            ld b,3
 389+ 9993 D1           1 pop de
 390+ 9994 7B               ld a,e
 391+ 9995 AE               xor (hl)
 392+ 9996 77               ld (hl),a
 393+ 9997 23               inc hl
 394+ 9998 7A               ld a,d
 395+ 9999 AE               xor (hl)
 396+ 999A 77               ld (hl),a
 397+ 999B 2B               dec hl
 398+ 999C
 399+ 999C 24               inc h
 400+ 999D 7C               ld a,h
 401+ 999E E6 07            and 7
 402+ 99A0 20 0A            jr nz,2F
 403+ 99A2 7D               ld a,l
 404+ 99A3 C6 20            add a,$20
 405+ 99A5 6F               ld l,a
 406+ 99A6 38 04            jr c,2F
 407+ 99A8 7C               ld a,h
 408+ 99A9 D6 08            sub 8
 409+ 99AB 67               ld h,a
 410+ 99AC 7C           2 ld a,h
 411+ 99AD FE 58            cp $58
 412+ 99AF 28 02            jr z,3F
 413+ 99B1
 414+ 99B1 10 E0            djnz 1B
 415+ 99B3 ED 7B 14 89  3 ld sp,(Stack)
 416+ 99B7 C9               ret
 417+ 99B8
# file closed: Rutinas_de_impresion_sprites.asm
1608  99B8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99B8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99B8              ;
   3+ 99B8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99B8              ;
   5+ 99B8              ; *****************************************************************************************************************************************************************************************
   6+ 99B8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99B8
   8+ 99B8 7C           calcula_tercio ld a,h
   9+ 99B9 E6 18        	and $18
  10+ 99BB CB 2F        	sra a
  11+ 99BD CB 2F        	sra a
  12+ 99BF CB 2F        	sra a
  13+ 99C1 C9           	ret
  14+ 99C2
# file closed: calcula_tercio.asm
1609  99C2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99C2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99C2              ;
   3+ 99C2              ;
   4+ 99C2              ;	CLS.
   5+ 99C2              ;
   6+ 99C2              ;	Limpia la pantalla y define sus atributos.
   7+ 99C2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99C2              ;
   9+ 99C2              ;	COLORES: 0 ..... NEGRO
  10+ 99C2              ;    		 1 ..... AZUL
  11+ 99C2              ; 			 2 ..... ROJO
  12+ 99C2              ;			 3 ..... MAGENTA
  13+ 99C2              ; 			 4 ..... VERDE
  14+ 99C2              ; 			 5 ..... CIAN
  15+ 99C2              ;			 6 ..... AMARILLO
  16+ 99C2              ; 			 7 ..... BLANCO
  17+ 99C2              ;
  18+ 99C2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99C2              ;
  20+ 99C2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99C2
  22+ 99C2
  23+ 99C2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99C5 11 01 40     	LD DE,$4001
  25+ 99C8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99CB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99CD ED B0        	LDIR
  28+ 99CF 01 FF 02     	LD BC,767
  29+ 99D2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99D3 ED B0        	LDIR
  31+ 99D5 C9           	ret
  32+ 99D6
# file closed: Cls.asm
1610  99D6              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D6              ; ******************************************************************************************************************************************************************************************
   2+ 99D6              ;
   3+ 99D6              ;   20/05/23
   4+ 99D6              ;
   5+ 99D6              ;	Recompone_posicion_inicio
   6+ 99D6              ;
   7+ 99D6              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99D6              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99D6              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99D6              ;	_ a una u otra rutina.
  11+ 99D6
  12+ 99D6              Recompone_posicion_inicio
  13+ 99D6
  14+ 99D6 2A D6 88     	ld hl,(Posicion_inicio)
  15+ 99D9 7D           	ld a,l
  16+ 99DA E6 1F        	and $1f
  17+ 99DC 28 16        	jr z,1F
  18+ 99DE
  19+ 99DE FE 1F        	cp $1f
  20+ 99E0 28 0D        	jr z,3F
  21+ 99E2
  22+ 99E2 21 01 89     	ld hl,Ctrl_2
  23+ 99E5 CB C6        	set 0,(hl)
  24+ 99E7 2A C8 88     	ld hl,(Puntero_objeto)
  25+ 99EA 22 04 89     	ld (Repone_puntero_objeto),hl
  26+ 99ED 18 08        	jr 2F
  27+ 99EF
  28+ 99EF CD 90 9B     3 call Mov_left
  29+ 99F2 18 03        	jr 2F
  30+ 99F4
  31+ 99F4 CD 72 9A     1 call Mov_right
  32+ 99F7 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99FA 22 C8 88     	ld (Puntero_objeto),hl
  34+ 99FD C9           	ret
  35+ 99FE
  36+ 99FE              ; ******************************************************************************************************************************************************************************************
  37+ 99FE              ;
  38+ 99FE              ;   27/05/23
  39+ 99FE              ;
  40+ 99FE              ;	Mov_down
  41+ 99FE              ;
  42+ 99FE              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99FE              ;
  44+ 99FE              ;
  45+ 99FE              Mov_down
  46+ 99FE
  47+ 99FE CD 60 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A01              ;																	; _ repone (Puntero_objeto).
  49+ 9A01 21 EE 88     	ld hl,Ctrl_0
  50+ 9A04 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A06              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A06              ; 																	; _ en el caso de que no lo haya.
  53+ 9A06 3A DC 88     	ld a,(Vel_down)
  54+ 9A09 47           	ld b,a
  55+ 9A0A 2A C6 88         ld hl,(Posicion_actual)
  56+ 9A0D CD B8 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A10 E6 02        	and 2
  58+ 9A12 28 0F        	jr z,1F
  59+ 9A14
  60+ 9A14              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A14              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A14
  63+ 9A14 7C           	ld a,h
  64+ 9A15 FE 57        	cp $57
  65+ 9A17 20 0A        	jr nz,1F
  66+ 9A19
  67+ 9A19 7D           	ld a,l
  68+ 9A1A C6 20        	add $20
  69+ 9A1C 30 05        	jr nc,1F
  70+ 9A1E
  71+ 9A1E              ; ------------------------------
  72+ 9A1E              ;	call Reaparece_arriba
  73+ 9A1E CD 1D 9D     	call Reinicio
  74+ 9A21              ; ------------------------------
  75+ 9A21
  76+ 9A21 18 08        	jr 3F
  77+ 9A23 CD A5 96     1 call NextScan
  78+ 9A26 22 C6 88     	ld (Posicion_actual),hl
  79+ 9A29 10 E2            djnz 2B
  80+ 9A2B CD 43 9D     3 call Genera_coordenadas
  81+ 9A2E C9           	ret
  82+ 9A2F
  83+ 9A2F              ; ******************************************************************************************************************************************************************************************
  84+ 9A2F              ;
  85+ 9A2F              ;   27/05/23
  86+ 9A2F              ;
  87+ 9A2F              ;	Mov_up
  88+ 9A2F              ;
  89+ 9A2F              ; 	Mueve el Sprite hacia arriba.
  90+ 9A2F              ;
  91+ 9A2F              ;
  92+ 9A2F              Mov_up
  93+ 9A2F
  94+ 9A2F CD 60 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A32              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A32 21 EE 88     	ld hl,Ctrl_0
  97+ 9A35 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A37              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A37              ; 																		; _ en el caso de que no lo haya.
 100+ 9A37 3A DB 88     	ld a,(Vel_up)
 101+ 9A3A 47           	ld b,a
 102+ 9A3B 2A C6 88     	ld hl,(Posicion_actual)
 103+ 9A3E CD B8 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A41 A7           	and a
 105+ 9A42 20 10        	jr nz,1F
 106+ 9A44
 107+ 9A44              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A44              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A44
 110+ 9A44 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A45 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A47 20 0B            jr nz,1F
 113+ 9A49 7D               ld a,l
 114+ 9A4A D6 20            sub $20
 115+ 9A4C 30 06            jr nc,1F
 116+ 9A4E 25               dec h
 117+ 9A4F
 118+ 9A4F              ; -----------------------------
 119+ 9A4F CD FE 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A52              ;	call Reinicio
 121+ 9A52              ; -----------------------------
 122+ 9A52
 123+ 9A52 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A54 CD B4 96     1 call PreviousScan
 125+ 9A57 22 C6 88     	ld (Posicion_actual),hl
 126+ 9A5A 10 E2            djnz 3B
 127+ 9A5C CD 43 9D     2 call Genera_coordenadas
 128+ 9A5F C9           	ret
 129+ 9A60
 130+ 9A60              ; -----------------------------
 131+ 9A60              ;
 132+ 9A60              ;	27/5/23
 133+ 9A60              ;
 134+ 9A60              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A60              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A60              ;
 137+ 9A60              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A60              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A60              ;
 140+ 9A60              ;	Modifica: A y (Puntero_objeto).
 141+ 9A60
 142+ 9A60 3A 01 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A63 CB 47        	bit 0,a
 144+ 9A65 C8           	ret z
 145+ 9A66 CB 87        	res 0,a
 146+ 9A68 32 01 89     	ld (Ctrl_2),a
 147+ 9A6B 2A 04 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A6E 22 C8 88     	ld (Puntero_objeto),hl
 149+ 9A71 C9           	ret
 150+ 9A72
 151+ 9A72              ; ******************************************************************************************************************************************************************************************
 152+ 9A72              ;
 153+ 9A72              ;	19/10/22
 154+ 9A72              ;
 155+ 9A72              ;	Mov_right.
 156+ 9A72              ;
 157+ 9A72              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A72              ;
 159+ 9A72
 160+ 9A72 21 EE 88     Mov_right ld hl,Ctrl_0
 161+ 9A75 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A77              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A77              ; 																	; _ en el caso de que no lo haya.
 164+ 9A77 3A EE 88     	ld a,(Ctrl_0)
 165+ 9A7A CB 77        	bit 6,a
 166+ 9A7C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A7E
 168+ 9A7E CD AC 9C     	call Stop_Amadeus_right
 169+ 9A81 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A82 18 4D        	jr 8F
 171+ 9A84
 172+ 9A84 3A CA 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A87 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A89 20 46        	jr nz,8F
 175+ 9A8B
 176+ 9A8B 3A CC 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A8E A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A8F 28 40        	jr z,8F
 179+ 9A91
 180+ 9A91              ; ---------- ---------- ----------
 181+ 9A91              ;
 182+ 9A91              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A91
 184+ 9A91 3A DA 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A94 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A96 28 11        	jr z,1F
 187+ 9A98 38 06        	jr c,6F
 188+ 9A9A FE 04        	cp 4
 189+ 9A9C 28 14        	jr z,7F
 190+ 9A9E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AA0
 192+ 9AA0              ; ---------- ---------- ----------
 193+ 9AA0              ;
 194+ 9AA0              ; Perfiles de velocidad
 195+ 9AA0              ;
 196+ 9AA0
 197+ 9AA0 3A CC 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AA3 FE FE        	cp $fe
 199+ 9AA5 20 2A        	jr nz,8F
 200+ 9AA7 18 10        	jr 3F
 201+ 9AA9 3A CC 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AAC FE FD        	cp $fd
 203+ 9AAE 20 21        	jr nz,8F
 204+ 9AB0 18 07        	jr 3F
 205+ 9AB2 3A CC 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AB5 FE FB        	cp $fb
 207+ 9AB7 20 18        	jr nz,8F
 208+ 9AB9
 209+ 9AB9              ; ---------- ---------- ----------
 210+ 9AB9
 211+ 9AB9              3
 212+ 9AB9 CD EC 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9ABC              ;	call Reinicio
 214+ 9ABC
 215+ 9ABC              ; ---------- ---------- ----------
 216+ 9ABC              ;
 217+ 9ABC              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9ABC
 219+ 9ABC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9ABE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9ABF CD D8 9A     	call DESPLZ_DER
 222+ 9AC2 C1           	pop bc
 223+ 9AC3 10 F9        	djnz 5B
 224+ 9AC5 2A C6 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AC8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AC9 22 C6 88     	ld (Posicion_actual),hl
 227+ 9ACC CD 43 9D     	call Genera_coordenadas
 228+ 9ACF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AD1
 230+ 9AD1              ; ---------- ---------- ----------
 231+ 9AD1
 232+ 9AD1 2A C6 88     8 ld hl,(Posicion_actual)
 233+ 9AD4 CD D8 9A     	call DESPLZ_DER
 234+ 9AD7 C9           2 ret
 235+ 9AD8
 236+ 9AD8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AD8              ;
 238+ 9AD8              ;	22/9/22
 239+ 9AD8              ;
 240+ 9AD8
 241+ 9AD8 CD E7 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9ADB CD 33 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9ADE CD 5C 9B         call Ciclo_completo
 244+ 9AE1 21 EE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AE4 CB FE        	set 7,(hl)
 246+ 9AE6 C9           	ret
 247+ 9AE7
 248+ 9AE7              ; ******************************************************************************************************************************************************************************************
 249+ 9AE7              ;	15/02/23
 250+ 9AE7              ;
 251+ 9AE7
 252+ 9AE7 3A DA 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AEA 47           	ld b,a
 254+ 9AEB 2A D2 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AEE 23           1 inc hl
 256+ 9AEF 23           	inc hl
 257+ 9AF0 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AF2 22 D2 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AF5 CD DF 8C     	call Extrae_address
 260+ 9AF8 22 C8 88     	ld (Puntero_objeto),hl
 261+ 9AFB
 262+ 9AFB              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AFB
 264+ 9AFB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AFB              ; Cuántos movimientos hemos hecho ??
 266+ 9AFB              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AFB
 268+ 9AFB 2A CE 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AFE EB           	ex de,hl
 270+ 9AFF A7           	and a
 271+ 9B00 ED 52        	sbc hl,de
 272+ 9B02 CB 3D        	srl l
 273+ 9B04 3E 08        6 ld a,8
 274+ 9B06 95           	sub l
 275+ 9B07 30 1E        	jr nc,3F
 276+ 9B09
 277+ 9B09              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B09              ; B="0".
 279+ 9B09
 280+ 9B09 04           4 inc b
 281+ 9B0A 3C           	inc a
 282+ 9B0B 20 FC        	jr nz,4B
 283+ 9B0D 78           	ld a,b
 284+ 9B0E 08           	ex af,af
 285+ 9B0F 2A CE 88     	ld hl,(Indice_Sprite_der)
 286+ 9B12 23           5 inc hl
 287+ 9B13 23           	inc hl
 288+ 9B14 10 FC        	djnz 5B
 289+ 9B16 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B19 CD DF 8C     	call Extrae_address
 291+ 9B1C 22 C8 88     	ld (Puntero_objeto),hl
 292+ 9B1F
 293+ 9B1F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B1F              ; _(Posicion_actual).
 295+ 9B1F
 296+ 9B1F 21 C6 88     	ld hl,Posicion_actual
 297+ 9B22 34           	inc (hl)
 298+ 9B23 08               ex af,af
 299+ 9B24 6F           	ld l,a
 300+ 9B25 18 DD        	jr 6B
 301+ 9B27
 302+ 9B27              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B27
 304+ 9B27 47           3 ld b,a
 305+ 9B28 2A D0 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B2B 23           2 inc hl
 307+ 9B2C 23           	inc hl
 308+ 9B2D 10 FC        	djnz 2B
 309+ 9B2F 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B32 C9           8 ret
 311+ 9B33
 312+ 9B33              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B33              ;
 314+ 9B33              ;	24/7/22
 315+ 9B33              ;
 316+ 9B33              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B33              ;
 318+ 9B33              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B33              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B33              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B33
 322+ 9B33 3A CC 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B36 A7           	and a
 324+ 9B37 20 1F        	jr nz,1F
 325+ 9B39 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B3B 32 CC 88         ld (CTRL_DESPLZ),a
 327+ 9B3E
 328+ 9B3E 21 C5 88     	ld hl,Columns
 329+ 9B41 34           	inc (hl)
 330+ 9B42 3A D8 88     	ld a,(Cuad_objeto)
 331+ 9B45 E6 01        	and 1
 332+ 9B47 28 0F        	jr z,1F
 333+ 9B49 2A C6 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B4C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B4D 22 C6 88     	ld (Posicion_actual),hl
 336+ 9B50 CD 43 9D     	call Genera_coordenadas
 337+ 9B53 CD B8 9C     	call Inc_CTRL_DESPLZ
 338+ 9B56 18 03        	jr 2F
 339+ 9B58 CD B8 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B5B C9           2 ret
 341+ 9B5C
 342+ 9B5C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B5C              ;
 344+ 9B5C              ;	24/7/22
 345+ 9B5C              ;
 346+ 9B5C              ;	Ciclo_completo.
 347+ 9B5C              ;
 348+ 9B5C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B5C              ;
 350+ 9B5C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B5C              ; 	Decrementamos (Columns).
 352+ 9B5C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B5C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B5C
 355+ 9B5C
 356+ 9B5C 3A CC 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B5F FE FF        	cp $ff
 358+ 9B61 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B63 E6 F0        	and $f0
 360+ 9B65 20 28        	jr nz,3F
 361+ 9B67
 362+ 9B67              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B67
 364+ 9B67 3A CC 88     	ld a,(CTRL_DESPLZ)
 365+ 9B6A 47           	ld b,a
 366+ 9B6B 3E F8        	ld a,$f8
 367+ 9B6D 80           	add b
 368+ 9B6E 32 CC 88     	ld (CTRL_DESPLZ),a
 369+ 9B71 18 1C        	jr 3F
 370+ 9B73 21 C5 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B76 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B77 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B78 32 CC 88     	ld (CTRL_DESPLZ),a
 374+ 9B7B 3A D8 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B7E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B80 20 0A        	jr nz,2F
 377+ 9B82 2A C6 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B85 23           	inc hl
 379+ 9B86 22 C6 88     	ld (Posicion_actual),hl
 380+ 9B89 CD 43 9D     	call Genera_coordenadas
 381+ 9B8C
 382+ 9B8C              ; Inicia el puntero de Sprite.
 383+ 9B8C
 384+ 9B8C CD F6 8C     2 call Inicia_puntero_objeto_der
 385+ 9B8F C9           3 ret
 386+ 9B90
 387+ 9B90              ; ******************************************************************************************************************************************************************************************
 388+ 9B90              ;
 389+ 9B90              ;	15/02/23
 390+ 9B90              ;
 391+ 9B90              ;	Mov_left.
 392+ 9B90              ;
 393+ 9B90              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B90              ;
 395+ 9B90              Mov_left
 396+ 9B90
 397+ 9B90 21 EE 88     	ld hl,Ctrl_0
 398+ 9B93 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B95              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B95              ; 																	; _ en el caso de que no lo haya.
 401+ 9B95 3A EE 88     	ld a,(Ctrl_0)
 402+ 9B98 CB 77        	bit 6,a
 403+ 9B9A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B9C
 405+ 9B9C CD B2 9C     	call Stop_Amadeus_left
 406+ 9B9F C8           	ret z
 407+ 9BA0 20 4A        	jr nz,8F
 408+ 9BA2
 409+ 9BA2 3A CA 88     11 ld a,(Coordenada_X)
 410+ 9BA5 A7           	and a
 411+ 9BA6 20 44        	jr nz,8F
 412+ 9BA8
 413+ 9BA8 3A CC 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9BAB A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9BAC 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9BAE
 417+ 9BAE              ; ---------- ---------- ----------
 418+ 9BAE
 419+ 9BAE 3A D9 88     	ld a,(Vel_left)
 420+ 9BB1 FE 02        	cp 2
 421+ 9BB3 28 0F        	jr z,1F
 422+ 9BB5 38 04        	jr c,6F
 423+ 9BB7 FE 04        	cp 4
 424+ 9BB9 28 12        	jr z,7F
 425+ 9BBB
 426+ 9BBB              ; ---------- ---------- ----------
 427+ 9BBB
 428+ 9BBB 3A CC 88     6 ld a,(CTRL_DESPLZ)
 429+ 9BBE FE F8        	cp $f8
 430+ 9BC0 20 2A        	jr nz,8F
 431+ 9BC2 18 10        	jr 4F
 432+ 9BC4 3A CC 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BC7 FE F9        	cp $f9
 434+ 9BC9 20 21        	jr nz,8F
 435+ 9BCB 18 07        	jr 4F
 436+ 9BCD 3A CC 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BD0 FE FB        	cp $fb
 438+ 9BD2 20 18        	jr nz,8F
 439+ 9BD4
 440+ 9BD4              ; ---------- ---------- ----------
 441+ 9BD4
 442+ 9BD4              4
 443+ 9BD4 CD DA 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BD7              ;	call Reinicio
 445+ 9BD7
 446+ 9BD7              ; ---------- ---------- ----------
 447+ 9BD7
 448+ 9BD7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BD9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BDA
 451+ 9BDA              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BDA              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BDA
 454+ 9BDA CD F3 9B     	call DESPLZ_IZQ
 455+ 9BDD C1           	pop bc
 456+ 9BDE 10 F9        	djnz 5B
 457+ 9BE0 2A C6 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BE3 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BE4 22 C6 88     	ld (Posicion_actual),hl
 460+ 9BE7 CD 43 9D     	call Genera_coordenadas
 461+ 9BEA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BEC
 463+ 9BEC              ; ---------- ---------- ----------
 464+ 9BEC
 465+ 9BEC              ; Movemos, no hay recolocación.
 466+ 9BEC
 467+ 9BEC 2A C6 88     8 ld hl,(Posicion_actual)
 468+ 9BEF CD F3 9B     	call DESPLZ_IZQ
 469+ 9BF2 C9           2 ret
 470+ 9BF3
 471+ 9BF3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9BF3              ;
 473+ 9BF3              ;	22/9/22
 474+ 9BF3
 475+ 9BF3              DESPLZ_IZQ
 476+ 9BF3
 477+ 9BF3 CD 02 9C     	call Desplaza_izquierda
 478+ 9BF6 CD 4E 9C         call modifica_parametros_1er_DESPLZ
 479+ 9BF9 CD 76 9C     	call Ciclo_completo_2
 480+ 9BFC 21 EE 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9BFF CB BE        	res 7,(hl)
 482+ 9C01 C9           	ret
 483+ 9C02
 484+ 9C02              Desplaza_izquierda
 485+ 9C02
 486+ 9C02 3A D9 88     	ld a,(Vel_left)
 487+ 9C05 47           	ld b,a
 488+ 9C06 2A D4 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9C09 23           1 inc hl
 490+ 9C0A 23           	inc hl
 491+ 9C0B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9C0D 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9C10 CD DF 8C     	call Extrae_address
 494+ 9C13 22 C8 88     	ld (Puntero_objeto),hl
 495+ 9C16
 496+ 9C16              ; Modifica (Puntero_DESPLZ_der).
 497+ 9C16
 498+ 9C16              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9C16              ; Cuántos movimientos hemos hecho ??
 500+ 9C16              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9C16
 502+ 9C16 2A D0 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9C19 EB           	ex de,hl
 504+ 9C1A A7           	and a
 505+ 9C1B ED 52        	sbc hl,de
 506+ 9C1D CB 3D        	srl l
 507+ 9C1F 3E 08        6 ld a,8
 508+ 9C21 95           	sub l
 509+ 9C22 30 1E        	jr nc,3F
 510+ 9C24
 511+ 9C24              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C24              ; B="0".
 513+ 9C24
 514+ 9C24 04           4 inc b
 515+ 9C25 3C           	inc a
 516+ 9C26 20 FC        	jr nz,4B
 517+ 9C28 78           	ld a,b
 518+ 9C29 08           	ex af,af
 519+ 9C2A 2A D0 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C2D 23           5 inc hl
 521+ 9C2E 23           	inc hl
 522+ 9C2F 10 FC        	djnz 5B
 523+ 9C31 22 D4 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C34 CD DF 8C     	call Extrae_address
 525+ 9C37 22 C8 88     	ld (Puntero_objeto),hl
 526+ 9C3A
 527+ 9C3A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C3A              ; _(Posicion_actual).
 529+ 9C3A
 530+ 9C3A 21 C6 88     	ld hl,Posicion_actual
 531+ 9C3D 35           	dec (hl)
 532+ 9C3E 08           	ex af,af
 533+ 9C3F 6F           	ld l,a
 534+ 9C40 18 DD        	jr 6B
 535+ 9C42
 536+ 9C42              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C42
 538+ 9C42 47           3 ld b,a
 539+ 9C43 2A CE 88     	ld hl,(Indice_Sprite_der)
 540+ 9C46 23           2 inc hl
 541+ 9C47 23           	inc hl
 542+ 9C48 10 FC        	djnz 2B
 543+ 9C4A 22 D2 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C4D C9           8 ret
 545+ 9C4E
 546+ 9C4E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C4E              ;
 548+ 9C4E              ;	modifica_parametros_1er_DESPLZ
 549+ 9C4E              ;
 550+ 9C4E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C4E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C4E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C4E
 554+ 9C4E 3A CC 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C51 A7           	and a
 556+ 9C52 20 1E        	jr nz,1F
 557+ 9C54 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C55 32 CC 88         ld (CTRL_DESPLZ),a
 559+ 9C58 21 C5 88     	ld hl,Columns
 560+ 9C5B 34           	inc (hl)
 561+ 9C5C 3A D8 88     	ld a,(Cuad_objeto)
 562+ 9C5F E6 01        	and 1
 563+ 9C61 20 0F        	jr nz,1F
 564+ 9C63 2A C6 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C66 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C67 22 C6 88     	ld (Posicion_actual),hl
 567+ 9C6A CD 43 9D     	call Genera_coordenadas
 568+ 9C6D CD C9 9C     	call Dec_CTRL_DESPLZ
 569+ 9C70 18 03        	jr 2F
 570+ 9C72 CD C9 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C75 C9           2 ret
 572+ 9C76
 573+ 9C76              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C76
 575+ 9C76 3A CC 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C79 FE F7        	cp $f7
 577+ 9C7B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C7D 30 2C        	jr nc,3F
 579+ 9C7F
 580+ 9C7F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C7F
 582+ 9C7F 06 00        	ld b,0
 583+ 9C81 04           4 inc b
 584+ 9C82 3C           	inc a
 585+ 9C83 FE F7        	cp $f7
 586+ 9C85 20 FA        	jr nz,4B
 587+ 9C87 3E FF        	ld a,$ff
 588+ 9C89 90           	sub b
 589+ 9C8A 32 CC 88     	ld (CTRL_DESPLZ),a
 590+ 9C8D 18 1C        	jr 3F
 591+ 9C8F
 592+ 9C8F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C8F
 594+ 9C8F 21 C5 88     1 ld hl,Columns
 595+ 9C92 35           	dec (hl)
 596+ 9C93 AF           	xor a
 597+ 9C94 32 CC 88     	ld (CTRL_DESPLZ),a
 598+ 9C97 3A D8 88     	ld a,(Cuad_objeto)
 599+ 9C9A E6 01        	and 1
 600+ 9C9C 28 0A        	jr z,2F
 601+ 9C9E 2A C6 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9CA1 2B           	dec hl
 603+ 9CA2 22 C6 88     	ld (Posicion_actual),hl
 604+ 9CA5 CD 43 9D     	call Genera_coordenadas
 605+ 9CA8
 606+ 9CA8              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9CA8
 608+ 9CA8 CD 09 8D     2 call Inicia_puntero_objeto_izq
 609+ 9CAB C9           3 ret
 610+ 9CAC
 611+ 9CAC              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9CAC              ;
 613+ 9CAC              ;	19/10/22
 614+ 9CAC              ;
 615+ 9CAC              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9CAC              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9CAC
 618+ 9CAC 3A CA 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9CAF FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9CB1 C9           	ret
 621+ 9CB2
 622+ 9CB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9CB2              ;
 624+ 9CB2              ;	19/10/22
 625+ 9CB2              ;
 626+ 9CB2              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9CB2              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9CB2
 629+ 9CB2 3A CA 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9CB5 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9CB7 C9           	ret
 632+ 9CB8
 633+ 9CB8              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9CB8              ;
 635+ 9CB8              ;	24/7/22
 636+ 9CB8              ;
 637+ 9CB8              ;	Inc_CTRL_DESPLZ
 638+ 9CB8              ;
 639+ 9CB8              ;
 640+ 9CB8              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9CB8
 642+ 9CB8 21 CC 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9CBB 3A DA 88     	ld a,(Vel_right)
 644+ 9CBE A7           	and a
 645+ 9CBF 28 06        	jr z,1F
 646+ 9CC1 47           	ld b,a
 647+ 9CC2 34           3 inc (hl)
 648+ 9CC3 10 FD        	djnz 3B
 649+ 9CC5 18 01        	jr 2F
 650+ 9CC7 34           1 inc (hl)
 651+ 9CC8 C9           2 ret
 652+ 9CC9
 653+ 9CC9              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CC9              ;
 655+ 9CC9              ;	5/2/23
 656+ 9CC9              ;
 657+ 9CC9              ;	Dec_CTRL_DESPLZ
 658+ 9CC9              ;
 659+ 9CC9              ;
 660+ 9CC9              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CC9
 662+ 9CC9 21 CC 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CCC 3A D9 88     	ld a,(Vel_left)
 664+ 9CCF A7           	and a
 665+ 9CD0 28 06        	jr z,1F
 666+ 9CD2 47           	ld b,a
 667+ 9CD3 35           3 dec (hl)
 668+ 9CD4 10 FD        	djnz 3B
 669+ 9CD6 18 01        	jr 2F
 670+ 9CD8 35           1 dec (hl)
 671+ 9CD9 C9           2 ret
 672+ 9CDA
 673+ 9CDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CDA
 675+ 9CDA 2A C6 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CDD 01 1F 00     	ld bc,31
 677+ 9CE0 A7           	and a
 678+ 9CE1 ED 4A        	adc hl,bc
 679+ 9CE3 22 C6 88     	ld (Posicion_actual),hl
 680+ 9CE6 21 EE 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CE9 CB C6        	set 0,(hl)
 682+ 9CEB C9           	ret
 683+ 9CEC
 684+ 9CEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CEC
 686+ 9CEC 2A C6 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9CEF 01 1F 00     	ld bc,31
 688+ 9CF2 A7           	and a
 689+ 9CF3 ED 42        	sbc hl,bc
 690+ 9CF5 22 C6 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9CF8 21 EE 88     	ld hl,Ctrl_0
 692+ 9CFB CB CE        	set 1,(hl)
 693+ 9CFD C9           	ret
 694+ 9CFE
 695+ 9CFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9CFE
 697+ 9CFE 24           Reaparece_abajo inc h
 698+ 9CFF 01 E0 17     	ld bc,$17e0
 699+ 9D02 A7           	and a
 700+ 9D03 ED 4A        	adc hl,bc
 701+ 9D05 22 C6 88     	ld (Posicion_actual),hl
 702+ 9D08 21 EE 88     	ld hl,Ctrl_0
 703+ 9D0B CB D6        	set 2,(hl)
 704+ 9D0D C9           	ret
 705+ 9D0E
 706+ 9D0E              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9D0E
 708+ 9D0E 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9D11 A7           	and a
 710+ 9D12 ED 42        	sbc hl,bc
 711+ 9D14 22 C6 88     	ld (Posicion_actual),hl
 712+ 9D17 21 EE 88     	ld hl,Ctrl_0
 713+ 9D1A CB DE        	set 3,(hl)
 714+ 9D1C C9           	ret
 715+ 9D1D
 716+ 9D1D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9D1D              ;
 718+ 9D1D              ;	15/07/23
 719+ 9D1D
 720+ 9D1D              Reinicio
 721+ 9D1D
 722+ 9D1D              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9D1D
 724+ 9D1D AF           	xor a
 725+ 9D1E 21 F5 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D21 CD 3F 9D     	call Limpia_contenido_hl
 727+ 9D24
 728+ 9D24 21 C6 88     	ld hl,Posicion_actual
 729+ 9D27 CD 3F 9D     	call Limpia_contenido_hl
 730+ 9D2A
 731+ 9D2A CD 71 A0     	call Inicializa_Puntero_indice_mov
 732+ 9D2D CD FB 9F     	call Inicia_Puntero_mov
 733+ 9D30
 734+ 9D30 21 F7 88     	ld hl,Incrementa_puntero
 735+ 9D33 06 05        	ld b,5
 736+ 9D35 77           1 ld (hl),a
 737+ 9D36 23           	inc hl
 738+ 9D37 10 FC        	djnz 1B
 739+ 9D39
 740+ 9D39 21 01 89     	ld hl,Ctrl_2
 741+ 9D3C CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D3E
 743+ 9D3E C9           	ret
 744+ 9D3F
 745+ 9D3F 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D40 23           	inc hl
 747+ 9D41 77           	ld (hl),a
 748+ 9D42 C9           	ret
 749+ 9D43
 750+ 9D43
# file closed: Direcciones.asm
1611  9D43              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D43              ; ------------------------------------------------------------------------
   2+ 9D43              ;
   3+ 9D43              ;	02/04/23
   4+ 9D43              ;
   5+ 9D43              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D43              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D43              ;
   8+ 9D43              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D43              ;
  10+ 9D43              ;	Modifica: A,BC y DE.
  11+ 9D43
  12+ 9D43 C5           Genera_coordenadas push bc
  13+ 9D44 E5           	push hl
  14+ 9D45 D5           	push de
  15+ 9D46
  16+ 9D46 2A C6 88     	ld hl,(Posicion_actual)
  17+ 9D49
  18+ 9D49 7D           	ld a,l
  19+ 9D4A E6 1F        	and $1f
  20+ 9D4C 32 CA 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D4F
  22+ 9D4F CD B8 99     	call calcula_tercio
  23+ 9D52 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D53
  25+ 9D53 1E 00        	ld e,0
  26+ 9D55 7D           	ld a,l
  27+ 9D56 E6 E0        	and $e0
  28+ 9D58 28 01        	jr z,1F
  29+ 9D5A 04           	inc b
  30+ 9D5B
  31+ 9D5B 04           1 inc b
  32+ 9D5C 05           	dec b
  33+ 9D5D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D5F              ;														; _ , salimos.
  35+ 9D5F 1C           3 inc e
  36+ 9D60 D6 20        	sub 32
  37+ 9D62 20 FB        	jr nz,3B
  38+ 9D64 10 F5        	djnz 1B
  39+ 9D66
  40+ 9D66 7B           2 ld a,e
  41+ 9D67 32 CB 88     	ld (Coordenada_y),a
  42+ 9D6A
  43+ 9D6A D1           	pop de
  44+ 9D6B E1           	pop hl
  45+ 9D6C C1           	pop bc
  46+ 9D6D
  47+ 9D6D C9           	ret
  48+ 9D6E
  49+ 9D6E              ; ------------------------------------------------------------------------
  50+ 9D6E              ;	28/05/23
  51+ 9D6E              ;
  52+ 9D6E              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D6E              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D6E              ;
  55+ 9D6E              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D6E              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D6E              ;
  58+ 9D6E              ;		DE="$120d"
  59+ 9D6E              ;
  60+ 9D6E              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D6E              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D6E              ;
  63+ 9D6E              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D6E
  65+ 9D6E              ;	Modifica: A,BC y DE.
  66+ 9D6E
  67+ 9D6E
  68+ 9D6E              Genera_coordenadas_disparo
  69+ 9D6E
  70+ 9D6E              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D6E
  72+ 9D6E 7D           	ld a,l
  73+ 9D6F E6 1F        	and $1f
  74+ 9D71 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D72 CD B8 99     	call calcula_tercio
  76+ 9D75 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D76 1E 00        	ld e,0
  78+ 9D78 7D           	ld a,l
  79+ 9D79 E6 E0        	and $e0
  80+ 9D7B 28 01        	jr z,1F
  81+ 9D7D 04           	inc b
  82+ 9D7E 1C           1 inc e
  83+ 9D7F D6 20        	sub 32
  84+ 9D81 20 FB        	jr nz,1B
  85+ 9D83 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D85 C9           	ret
  87+ 9D86
# file closed: Genera_coordenadas.asm
1612  9D86              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D86              ; Relojes y temporizaciones.
   2+ 9D86
   3+ 9D86              ; ------------------------------------------------------
   4+ 9D86              ;
   5+ 9D86              ;	16/7/23
   6+ 9D86              ;
   7+ 9D86              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D86              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D86              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D86              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D86              ;
  12+ 9D86              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D86              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D86
  15+ 9D86              ; Disparo_entidad db 1
  16+ 9D86              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D86              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D86
  19+ 9D86              Habilita_disparos
  20+ 9D86
  21+ 9D86 7E           	ld a,(hl)
  22+ 9D87 A7           	and a
  23+ 9D88 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D89
  25+ 9D89 EB           	ex de,hl
  26+ 9D8A
  27+ 9D8A 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D8B C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D8C
  30+ 9D8C              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D8C
  32+ 9D8C 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D8D 7E           	ld a,(hl)
  34+ 9D8E 23           	inc hl
  35+ 9D8F 77           	ld (hl),a
  36+ 9D90
  37+ 9D90 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D91 3E 01        	ld a,1
  39+ 9D93 77           	ld (hl),a
  40+ 9D94 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1613  9D95              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D95
   2+ 9D95
   3+ 9D95              ;   07/07/23
   4+ 9D95              ;
   5+ 9D95              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D95              ;
   7+ 9D95              ;   Codificación:
   8+ 9D95              ;
   9+ 9D95              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D95              ;
  11+ 9D95              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D95              ;
  13+ 9D95              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D95              ;
  15+ 9D95              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D95              ;
  17+ 9D95              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D95              ;                               ..... %01000010 Vel_up 4
  19+ 9D95              ;                                               Vel_down 2
  20+ 9D95              ;                               ..... $42
  21+ 9D95              ;
  22+ 9D95              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D95              ;
  24+ 9D95              ;                               ..... %01000010 Vel_left 4
  25+ 9D95              ;                                               Vel_right 2
  26+ 9D95              ;                               ..... $42
  27+ 9D95              ;
  28+ 9D95              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D95              ;
  30+ 9D95              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D95              ;
  32+ 9D95              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D95              ;
  34+ 9D95              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D95              ;                                     $53
  36+ 9D95              ;
  37+ 9D95              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D95              ;
  39+ 9D95              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D95              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D95              ;
  42+ 9D95              ;                       Arriba ..... $81
  43+ 9D95              ;                       Arriba - izquierda ..... $a1
  44+ 9D95              ;                       Arriba - derecha ..... $91
  45+ 9D95              ;
  46+ 9D95              ;                       Abajo ..... $41
  47+ 9D95              ;                       Abajo - izquierda ..... $61
  48+ 9D95              ;                       Abajo - derecha ..... $51
  49+ 9D95              ;
  50+ 9D95              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D95              ;
  52+ 9D95              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D95              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D95              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D95              ;
  56+ 9D95              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D95              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D95              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D95              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D95              ;
  61+ 9D95              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D95              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D95              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D95              ;
  65+ 9D95              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D95              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D95              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D95              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D95
  70+ 9D95              ; ----- ----- ----- ----- -----
  71+ 9D95
  72+ 9D95 C1 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D97 C9 9D            defw F_1
  74+ 9D99 D3 9D            defw F_2
  75+ 9D9B DD 9D            defw Codo_abajo_derecha
  76+ 9D9D 11 9E            defw Derecha_y_subiendo
  77+ 9D9F 1B 9E            defw Derecha_y_subiendo_1
  78+ 9DA1 25 9E            defw F_3
  79+ 9DA3 2F 9E            defw F_4
  80+ 9DA5 39 9E            defw Derecha_y_bajando
  81+ 9DA7 43 9E            defw Derecha_y_bajando_1
  82+ 9DA9 4D 9E            defw Derecha_y_bajando_2
  83+ 9DAB 57 9E            defw Codo_derecha_abajo
  84+ 9DAD 87 9E            defw Codo_abajo_izq.
  85+ 9DAF BB 9E            defw Izquierda_y_subiendo
  86+ 9DB1 C5 9E            defw Izquierda_y_subiendo_1
  87+ 9DB3 CF 9E            defw F_5
  88+ 9DB5 D9 9E            defw F_6
  89+ 9DB7 E3 9E            defw Izquierda_y_bajando
  90+ 9DB9 ED 9E            defw Izquierda_y_bajando_1
  91+ 9DBB F7 9E            defw Izquierda_y_bajando_2
  92+ 9DBD 01 9F            defw Codo_izquierda_abajo
  93+ 9DBF 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DC1
  95+ 9DC1 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DC5 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DC9
  98+ 9DC9 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DCD 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DD1 08 00
 100+ 9DD3 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DD7 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DDB 0F FE
 102+ 9DDD
 103+ 9DDD 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DE5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DE9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DED 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DF1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DF5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DF9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DFD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E01 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E05 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E09 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E0D 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E11
 117+ 9E11 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E15 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E19 06 00
 119+ 9E1B
 120+ 9E1B 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E1F 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E23 02 00
 122+ 9E25
 123+ 9E25 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E29 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E2D 04 00
 125+ 9E2F 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E33 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E37 08 00
 127+ 9E39
 128+ 9E39 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E3D 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E41 02 00
 130+ 9E43
 131+ 9E43 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E47 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E4B 06 00
 133+ 9E4D
 134+ 9E4D 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E51 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E55 06 00
 136+ 9E57
 137+ 9E57              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E57
 139+ 9E57 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E5B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E5F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E63 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E67 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E6B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E6F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E73 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E77 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E7B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E7F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E83 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E87
 152+ 9E87 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E8B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E8F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E93 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E97 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E9B 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E9F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EA3 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EA7 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EAB 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EAF 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EB3 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EB7 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EBB
 166+ 9EBB 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EBF 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EC3 06 00
 168+ 9EC5
 169+ 9EC5 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EC9 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9ECD 02 00
 171+ 9ECF
 172+ 9ECF 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ED3 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ED7 04 00
 174+ 9ED9 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EDD 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EE1 08 00
 176+ 9EE3
 177+ 9EE3 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EE7 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EEB 02 00
 179+ 9EED
 180+ 9EED 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EF1 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EF5 06 00
 182+ 9EF7
 183+ 9EF7 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EFB 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EFF 06 00
 185+ 9F01
 186+ 9F01 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F05 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F09 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F0D 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F11 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F15 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F19 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F1D 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F21 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F25 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F29 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F2D 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F31
 199+ 9F31              ; ----- ----- ----- ----- -----
 200+ 9F31              ;
 201+ 9F31              ;   27/06/23
 202+ 9F31
 203+ 9F31              Movimiento
 204+ 9F31
 205+ 9F31              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F31
 207+ 9F31              ;    ld hl,(Posicion_actual)
 208+ 9F31
 209+ 9F31 FB               ei
 210+ 9F32
 211+ 9F32 3A 01 89         ld a,(Ctrl_2)
 212+ 9F35 CB 57            bit 2,a
 213+ 9F37 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F39
 215+ 9F39 2A F3 88         ld hl,(Puntero_mov)
 216+ 9F3C 7E               ld a,(hl)
 217+ 9F3D
 218+ 9F3D              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F3D
 220+ 9F3D              Inicia_desplazamiento.
 221+ 9F3D
 222+ 9F3D              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F3D
 224+ 9F3D CD 32 A0         call Ajusta_velocidad_desplazamiento
 225+ 9F40
 226+ 9F40              ; Iniciamos (Repetimos_mov).
 227+ 9F40
 228+ 9F40 7E               ld a,(hl)
 229+ 9F41 E6 0F            and $0f
 230+ 9F43 32 F9 88         ld (Repetimos_desplazamiento),a
 231+ 9F46 32 FA 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F49
 233+ 9F49              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F49
 235+ 9F49 23               inc hl
 236+ 9F4A 7E               ld a,(hl)
 237+ 9F4B 32 FC 88         ld (Cola_de_desplazamiento),a
 238+ 9F4E 2B               dec hl
 239+ 9F4F
 240+ 9F4F 21 01 89         ld hl,Ctrl_2
 241+ 9F52 CB D6            set 2,(hl)
 242+ 9F54
 243+ 9F54              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F54              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F54
 246+ 9F54              Desplazamiento_iniciado
 247+ 9F54
 248+ 9F54 CD 06 A0         call Aplica_desplazamiento
 249+ 9F57
 250+ 9F57 3A 01 89         ld a,(Ctrl_2)
 251+ 9F5A CB 67            bit 4,a
 252+ 9F5C C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F5D
 254+ 9F5D 21 F9 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F60 35               dec (hl)
 256+ 9F61 C0               ret nz
 257+ 9F62
 258+ 9F62              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F62              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F62              ; Analiza (Cola_de_desplazamiento).
 261+ 9F62
 262+ 9F62 3A FC 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F65 A7               and a
 264+ 9F66 CC 5B A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F69 28 30            jr z,Reinicia_el_movimiento
 266+ 9F6B
 267+ 9F6B FE FF            cp $ff
 268+ 9F6D 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F6F
 270+ 9F6F FE FE            cp $fe
 271+ 9F71 CC DF 9F         call z,Fijamos_bucle
 272+ 9F74 28 25            jr z,Reinicia_el_movimiento
 273+ 9F76
 274+ 9F76 FE FD            cp $fd
 275+ 9F78 20 11            jr nz,1F
 276+ 9F7A
 277+ 9F7A              ; ---
 278+ 9F7A              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F7A
 280+ 9F7A 3A 01 89         ld a,(Ctrl_2)
 281+ 9F7D CB 5F            bit 3,a
 282+ 9F7F 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F81
 284+ 9F81              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F81
 286+ 9F81 21 01 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F84 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F86
 289+ 9F86 CD F0 9F         call Inicia_Repetimos_movimiento
 290+ 9F89 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F8B              ; ---
 292+ 9F8B
 293+ 9F8B FE 01        1 cp 1
 294+ 9F8D CA C9 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F90
 296+ 9F90 3D               dec a
 297+ 9F91 32 FC 88         ld (Cola_de_desplazamiento),a
 298+ 9F94
 299+ 9F94 3A FA 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F97 32 F9 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F9A              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F9A C9               ret
 303+ 9F9B
 304+ 9F9B              Reinicia_el_movimiento
 305+ 9F9B
 306+ 9F9B F3               di
 307+ 9F9C
 308+ 9F9C 3A 01 89         ld a,(Ctrl_2)
 309+ 9F9F CB 5F            bit 3,a
 310+ 9FA1 28 1B            jr z,2F
 311+ 9FA3
 312+ 9FA3              ; (Cola_de_desplazamiento)="254".
 313+ 9FA3
 314+ 9FA3 21 FB 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FA6 35               dec (hl)
 316+ 9FA7 20 15            jr nz,2F
 317+ 9FA9
 318+ 9FA9              ; Fin de las repeticiones del último movimiento.
 319+ 9FA9
 320+ 9FA9 21 01 89         ld hl,Ctrl_2
 321+ 9FAC CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FAE
 323+ 9FAE 2A F3 88         ld hl,(Puntero_mov)
 324+ 9FB1 23               inc hl
 325+ 9FB2 23               inc hl
 326+ 9FB3 23               inc hl
 327+ 9FB4 22 F3 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FB7              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FB7 7E               ld a,(hl)
 330+ 9FB8 32 FC 88         ld (Cola_de_desplazamiento),a
 331+ 9FBB
 332+ 9FBB C3 62 9F         jp Cola
 333+ 9FBE
 334+ 9FBE CD FB 9F     2 call Inicia_Puntero_mov
 335+ 9FC1
 336+ 9FC1 21 01 89         ld hl,Ctrl_2
 337+ 9FC4 CB 96            res 2,(hl)
 338+ 9FC6
 339+ 9FC6 C3 31 9F         jp Movimiento
 340+ 9FC9
 341+ 9FC9              Siguiente_desplazamiento
 342+ 9FC9
 343+ 9FC9              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FC9              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FC9
 346+ 9FC9 21 01 89         ld hl,Ctrl_2
 347+ 9FCC CB 96            res 2,(hl)
 348+ 9FCE
 349+ 9FCE 2A F3 88         ld hl,(Puntero_mov)
 350+ 9FD1 23               inc hl
 351+ 9FD2 23               inc hl
 352+ 9FD3 22 F3 88         ld (Puntero_mov),hl
 353+ 9FD6
 354+ 9FD6 7E               ld a,(hl)
 355+ 9FD7 A7               and a
 356+ 9FD8 CC 5B A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FDB CA 9B 9F         jp z,Reinicia_el_movimiento
 358+ 9FDE
 359+ 9FDE C9               ret
 360+ 9FDF              ; Subrutinas -----------------------------------------
 361+ 9FDF              ; ---------- --------- --------- ---------- ----------
 362+ 9FDF              ;
 363+ 9FDF              ;   24/07/23
 364+ 9FDF              ;
 365+ 9FDF              ;   Fijamos_bucle
 366+ 9FDF              ;
 367+ 9FDF              ;
 368+ 9FDF
 369+ 9FDF              Fijamos_bucle
 370+ 9FDF
 371+ 9FDF 3A F7 88         ld a,(Incrementa_puntero)
 372+ 9FE2 3C               inc a
 373+ 9FE3 32 F8 88         ld (Incrementa_puntero_backup),a
 374+ 9FE6
 375+ 9FE6 CD 5B A0         call Incrementa_Puntero_indice_mov
 376+ 9FE9 2A F1 88         ld hl,(Puntero_indice_mov)
 377+ 9FEC 22 F5 88         ld (Puntero_indice_mov_bucle),hl
 378+ 9FEF C9               ret
 379+ 9FF0
 380+ 9FF0              ; ---------- --------- --------- ---------- ----------
 381+ 9FF0              ;
 382+ 9FF0              ;   07/7/23
 383+ 9FF0              ;
 384+ 9FF0              ;   Inicia_Repetimos_movimiento
 385+ 9FF0              ;
 386+ 9FF0              ;
 387+ 9FF0
 388+ 9FF0              Inicia_Repetimos_movimiento
 389+ 9FF0
 390+ 9FF0              ; Iniciamos (Repetimos_movimiento).
 391+ 9FF0
 392+ 9FF0 DD 2A F3 88      ld ix,(Puntero_mov)
 393+ 9FF4 DD 7E 02         ld a,(ix+2)
 394+ 9FF7 32 FB 88         ld (Repetimos_movimiento),a
 395+ 9FFA
 396+ 9FFA C9               ret
 397+ 9FFB
 398+ 9FFB              ; ---------- --------- --------- ---------- ----------
 399+ 9FFB              ;
 400+ 9FFB              ;   26/6/23
 401+ 9FFB              ;
 402+ 9FFB              ;   Inicia_Puntero_mov
 403+ 9FFB              ;
 404+ 9FFB              ;
 405+ 9FFB
 406+ 9FFB 2A F1 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FFE 5E               ld e,(hl)
 408+ 9FFF 23               inc hl
 409+ A000 56               ld d,(hl)
 410+ A001 EB               ex de,hl
 411+ A002 22 F3 88         ld (Puntero_mov),hl
 412+ A005 C9               ret
 413+ A006
 414+ A006              ; ---------- --------- --------- ---------- ----------
 415+ A006              ;
 416+ A006              ;   27/06/23
 417+ A006              ;
 418+ A006              ;   Aplica_movimiento.
 419+ A006
 420+ A006              Aplica_desplazamiento
 421+ A006
 422+ A006              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ A006
 424+ A006 2A F3 88         ld hl, (Puntero_mov)
 425+ A009
 426+ A009 7E               ld a,(hl)
 427+ A00A E6 F0            and $f0
 428+ A00C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ A00D
 430+ A00D CB 7E            bit 7,(hl)
 431+ A00F 28 03            jr z,1F
 432+ A011 CD 2F 9A         call Mov_up
 433+ A014 2A F3 88     1 ld hl, (Puntero_mov)
 434+ A017 CB 76            bit 6,(hl)
 435+ A019 28 03            jr z,2F
 436+ A01B CD FE 99         call Mov_down
 437+ A01E 2A F3 88     2 ld hl, (Puntero_mov)
 438+ A021 CB 6E            bit 5,(hl)
 439+ A023 28 03            jr z,3F
 440+ A025 CD 90 9B         call Mov_left
 441+ A028 2A F3 88     3 ld hl, (Puntero_mov)
 442+ A02B CB 66            bit 4,(hl)
 443+ A02D C8               ret z
 444+ A02E CD 72 9A         call Mov_right
 445+ A031 C9               ret
 446+ A032
 447+ A032              ; ---------- --------- --------- ---------- ----------
 448+ A032              ;
 449+ A032              ;   26/06/23
 450+ A032              ;
 451+ A032              ;   Ajusta_velocidad_desplazamiento.
 452+ A032
 453+ A032              Ajusta_velocidad_desplazamiento
 454+ A032
 455+ A032              ; 1er byte de la cadena de movimiento.
 456+ A032              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A032
 458+ A032 CD 50 A0         call Extrae_nibble_alto
 459+ A035
 460+ A035 32 DB 88         ld (Vel_up),a
 461+ A038 79               ld a,c
 462+ A039 E6 0F            and $0f
 463+ A03B 32 DC 88         ld (Vel_down),a
 464+ A03E
 465+ A03E              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A03E              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A03E
 468+ A03E 23               inc hl
 469+ A03F CD 50 A0         call Extrae_nibble_alto
 470+ A042
 471+ A042 32 D9 88         ld (Vel_left),a
 472+ A045 79               ld a,c
 473+ A046 E6 0F            and $0f
 474+ A048 32 DA 88         ld (Vel_right),a
 475+ A04B
 476+ A04B              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A04B
 478+ A04B 23               inc hl
 479+ A04C 22 F3 88         ld (Puntero_mov),hl
 480+ A04F C9               ret
 481+ A050
 482+ A050 06 04        Extrae_nibble_alto ld b,4
 483+ A052 7E               ld a,(hl)
 484+ A053 4F               ld c,a
 485+ A054 E6 F0            and $f0
 486+ A056 CB 3F        1 srl a
 487+ A058 10 FC            djnz 1B
 488+ A05A C9               ret
 489+ A05B
 490+ A05B              ; ---------- --------- --------- ---------- ----------
 491+ A05B              ;
 492+ A05B              ;   5/7/23
 493+ A05B              ;
 494+ A05B              ;   Incrementa_Puntero_indice_mov
 495+ A05B
 496+ A05B              Incrementa_Puntero_indice_mov
 497+ A05B
 498+ A05B 21 F7 88         ld hl,Incrementa_puntero
 499+ A05E 34               inc (hl)
 500+ A05F
 501+ A05F 2A F1 88         ld hl,(Puntero_indice_mov)
 502+ A062 01 02 00         ld bc,2
 503+ A065 A7               and a
 504+ A066 09               add hl,bc
 505+ A067 22 F1 88         ld (Puntero_indice_mov),hl
 506+ A06A
 507+ A06A 7E               ld a,(hl)
 508+ A06B A7               and a
 509+ A06C
 510+ A06C              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A06C
 512+ A06C              ;    jr z,$
 513+ A06C
 514+ A06C              ;! Reinicia el Patrón de movimiento.
 515+ A06C
 516+ A06C CC 71 A0         call z,Inicializa_Puntero_indice_mov
 517+ A06F
 518+ A06F AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A070
 520+ A070 C9               ret
 521+ A071
 522+ A071
 523+ A071              ; ---------- --------- --------- ---------- ----------
 524+ A071              ;
 525+ A071              ;   24/07/23
 526+ A071              ;
 527+ A071              ;   Inicializa_Puntero_indice_mov
 528+ A071
 529+ A071              Inicializa_Puntero_indice_mov
 530+ A071
 531+ A071              ; Existe etiqueta de bucle principal???
 532+ A071
 533+ A071 2A F5 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A074 24               inc h
 535+ A075 25               dec h
 536+ A076 28 05            jr z,2F
 537+ A078
 538+ A078 22 F1 88         ld (Puntero_indice_mov),hl
 539+ A07B 18 14            jr 3F
 540+ A07D
 541+ A07D              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A07D
 543+ A07D 3A F7 88     2 ld a,(Incrementa_puntero)
 544+ A080 47               ld b,a
 545+ A081
 546+ A081 2A F1 88         ld hl,(Puntero_indice_mov)
 547+ A084 2B           1 dec hl
 548+ A085 2B               dec hl
 549+ A086 10 FC            djnz 1B
 550+ A088 22 F1 88         ld (Puntero_indice_mov),hl
 551+ A08B
 552+ A08B AF               xor a
 553+ A08C 32 F7 88         ld (Incrementa_puntero),a
 554+ A08F 18 06            jr 4F
 555+ A091
 556+ A091 3A F8 88     3 ld a,(Incrementa_puntero_backup)
 557+ A094 32 F7 88         ld (Incrementa_puntero),a
 558+ A097 C9           4 ret
 559+ A098
 560+ A098
 561+ A098
# file closed: Patrones_de_mov.asm
1614  A098              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A098              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A098              ;
   3+ A098              ;	4/9/23
   4+ A098              ;
   5+ A098              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A098
   7+ A098              ;	ADC HL,SP	LD (addr),SP
   8+ A098              ;	ADD HL,SP	LD SP,(addr)
   9+ A098              ;	ADD IX,SP	LD SP,nn
  10+ A098              ; 	ADD IY,SP	LD SP,HL
  11+ A098              ;				LD SP,IX
  12+ A098              ;	DEC SP		LD SP,IY
  13+ A098
  14+ A098              ;	EX (SP),HL
  15+ A098              ;	EX (SP),IX
  16+ A098              ;	EX (SP),IY
  17+ A098
  18+ A098              ;	INC SP
  19+ A098
  20+ A098                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 14 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A 03 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 1C 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 0F            jr 4F
  46+ 7FB9
  47+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  48+ 7FB9
  49+ 7FB9 3A EE 88     2 ld a,(Ctrl_0)
  50+ 7FBC CB 77            bit 6,a
  51+ 7FBE 28 05            jr z,7F
  52+ 7FC0
  53+ 7FC0              ; Guardamos foto de Amadeus.
  54+ 7FC0
  55+ 7FC0 2A 22 89         ld hl,(End_Snapshot_Amadeus)
  56+ 7FC3 18 03            jr 4F
  57+ 7FC5
  58+ 7FC5 2A 1A 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  59+ 7FC8
  60+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  61+ 7FCA
  62+ 7FCA D1           1 pop de
  63+ 7FCB 73               ld (hl),e
  64+ 7FCC 23               inc hl
  65+ 7FCD 72               ld (hl),d
  66+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  67+ 7FCF 10 F9            djnz 1B
  68+ 7FD1
  69+ 7FD1 3A 03 89         ld a,(Ctrl_1)
  70+ 7FD4 CB 47            bit 0,a
  71+ 7FD6 28 05            jr z,5F
  72+ 7FD8
  73+ 7FD8 22 1C 89         ld (Stack_snapshot_disparos),hl
  74+ 7FDB 18 13            jr 6F
  75+ 7FDD
  76+ 7FDD 3A EE 88     5 ld a,(Ctrl_0)
  77+ 7FE0 CB 77            bit 6,a
  78+ 7FE2 28 09            jr z,8F
  79+ 7FE4
  80+ 7FE4 22 22 89         ld (End_Snapshot_Amadeus),hl
  81+ 7FE7 ED 7B 14 89      ld sp,(Stack)
  82+ 7FEB FB               ei
  83+ 7FEC C9               ret
  84+ 7FED
  85+ 7FED 22 1A 89     8 ld (Stack_snapshot),hl
  86+ 7FF0 ED 7B 14 89  6 ld sp,(Stack)
  87+ 7FF4
  88+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  89+ 7FF4
  90+ 7FF4 5D               ld e,l
  91+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  92+ 7FF6
  93+ 7FF6 2A 38 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  94+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  95+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  96+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
  97+ 7FFC
  98+ 7FFC FB               ei
  99+ 7FFD C9               ret
 100+ 7FFE
 101+ 7FFE              ; ------------------------------------------------
 102+ 7FFE              ;
 103+ 7FFE              ;   3/08/23
 104+ 7FFE              ;
 105+ 7FFE              ;   La rutina estará situada justo después de:
 106+ 7FFE              ;   Almacen_de_borrado_Amadeus equ $72ad ; 6 bytes. ($72ad - $72b2).
 107+ 7FFE              ;
 108+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 109+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 110+ 7FFE
 111+ 7FFE                  org $72b3
 112+ 72B3
 113+ 72B3              Gestiona_albumes_de_fotos
 114+ 72B3
 115+ 72B3              ;   En 1er lugar limpiamos el FRAME pintado.
 116+ 72B3              ;   Vaciamos Album_de_fotos.
 117+ 72B3
 118+ 72B3              ;   Album_de_fotos. Contiene datos ???
 119+ 72B3
 120+ 72B3 21 01 70         ld hl,Album_de_fotos+1
 121+ 72B6 7E               ld a,(hl)
 122+ 72B7 A7               and a
 123+ 72B8 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 124+ 72BA
 125+ 72BA 2A 1E 89         ld hl,(End_Snapshot)
 126+ 72BD 01 00 70         ld bc,Album_de_fotos
 127+ 72C0 11 01 70         ld de,Album_de_fotos+1
 128+ 72C3 AF               xor a
 129+ 72C4 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 130+ 72C5
 131+ 72C5 CD 55 73         call Limpia_album
 132+ 72C8
 133+ 72C8 21 00 00         ld hl,0
 134+ 72CB 22 1E 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 135+ 72CE
 136+ 72CE              ; ----- ----- ----- -----
 137+ 72CE
 138+ 72CE              ;   Album_de_fotos_1. Contiene datos ???
 139+ 72CE
 140+ 72CE 21 55 70     3 ld hl,Album_de_fotos_1+1
 141+ 72D1 7E               ld a,(hl)
 142+ 72D2 A7               and a
 143+ 72D3 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 144+ 72D5              ;                               ; _ información del album2 al album1.
 145+ 72D5
 146+ 72D5              ; ----- ----- ----- -----
 147+ 72D5              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 148+ 72D5
 149+ 72D5 2A 24 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 150+ 72D8 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 151+ 72DB 11 00 70         ld de,Album_de_fotos        ; Destino.
 152+ 72DE
 153+ 72DE CD 55 73         call Limpia_album
 154+ 72E1
 155+ 72E1              ;   Calculamos (End_Snapshot)
 156+ 72E1
 157+ 72E1 A7               and a
 158+ 72E2 ED 4A            adc hl,bc
 159+ 72E4 22 1E 89         ld (End_Snapshot),hl
 160+ 72E7
 161+ 72E7              ;   Limpiamos Album_de_fotos_1.
 162+ 72E7
 163+ 72E7 2A 24 89         ld hl,(End_Snapshot_1)
 164+ 72EA 01 54 70         ld bc,Album_de_fotos_1
 165+ 72ED 11 55 70         ld de,Album_de_fotos_1+1
 166+ 72F0 AF               xor a
 167+ 72F1 02               ld (bc),a
 168+ 72F2
 169+ 72F2 CD 55 73         call Limpia_album
 170+ 72F5
 171+ 72F5 21 00 00         ld hl,0
 172+ 72F8 22 24 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 173+ 72FB
 174+ 72FB              ; ----- ----- ----- -----
 175+ 72FB
 176+ 72FB              ;   Album_de_fotos_2. Contiene datos ???
 177+ 72FB
 178+ 72FB 21 A9 70     1 ld hl,Album_de_fotos_2+1
 179+ 72FE 7E               ld a,(hl)
 180+ 72FF A7               and a
 181+ 7300 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 182+ 7302              ;                               ; _ información del album3 al album2.
 183+ 7302              ; ----- ----- ----- -----
 184+ 7302              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 185+ 7302
 186+ 7302 2A 28 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 187+ 7305 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 188+ 7308 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 189+ 730B
 190+ 730B CD 55 73         call Limpia_album
 191+ 730E
 192+ 730E              ;   Calculamos (End_Snapshot_1):
 193+ 730E
 194+ 730E A7               and a
 195+ 730F ED 4A            adc hl,bc
 196+ 7311 22 24 89         ld (End_Snapshot_1),hl
 197+ 7314
 198+ 7314              ;   Limpiamos Album_de_fotos_2.
 199+ 7314
 200+ 7314 2A 28 89         ld hl,(End_Snapshot_2)
 201+ 7317 01 A8 70         ld bc,Album_de_fotos_2
 202+ 731A 11 A9 70         ld de,Album_de_fotos_2+1
 203+ 731D AF               xor a
 204+ 731E 02               ld (bc),a
 205+ 731F
 206+ 731F CD 55 73         call Limpia_album
 207+ 7322
 208+ 7322 21 00 00         ld hl,0
 209+ 7325 22 28 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 210+ 7328
 211+ 7328              ; ----- ----- ----- -----
 212+ 7328
 213+ 7328              ;   Album_de_fotos_3. Contiene datos ???
 214+ 7328
 215+ 7328 21 FD 70     2 ld hl,Album_de_fotos_3+1
 216+ 732B 7E               ld a,(hl)
 217+ 732C A7               and a
 218+ 732D C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 219+ 732E
 220+ 732E              ; ----- ----- ----- -----
 221+ 732E              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 222+ 732E
 223+ 732E 2A 2C 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 224+ 7331 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 225+ 7334 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 226+ 7337
 227+ 7337 CD 55 73         call Limpia_album
 228+ 733A
 229+ 733A              ;   Calculamos (End_Snapshot_2):
 230+ 733A
 231+ 733A A7               and a
 232+ 733B ED 4A            adc hl,bc
 233+ 733D 22 28 89         ld (End_Snapshot_2),hl
 234+ 7340
 235+ 7340              ;   Limpiamos Album_de_fotos_3.
 236+ 7340
 237+ 7340 2A 2C 89         ld hl,(End_Snapshot_3)
 238+ 7343 01 FC 70         ld bc,Album_de_fotos_3
 239+ 7346 11 FD 70         ld de,Album_de_fotos_3+1
 240+ 7349 AF               xor a
 241+ 734A 02               ld (bc),a
 242+ 734B
 243+ 734B CD 55 73         call Limpia_album
 244+ 734E
 245+ 734E 21 00 00         ld hl,0
 246+ 7351 22 2C 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 247+ 7354 C9               ret
 248+ 7355
 249+ 7355              ; ----------------------------------------------------
 250+ 7355              ;
 251+ 7355              ;   10/8/23
 252+ 7355              ;
 253+ 7355              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 254+ 7355              ;
 255+ 7355              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 256+ 7355              ;           BC ..... Dirección de inicio del álbum.
 257+ 7355              ;           DE ..... Dirección de inicio del álbum. +1
 258+ 7355
 259+ 7355              ;    ld hl,(End_Snapshot)
 260+ 7355              ;    ld bc,Album_de_fotos
 261+ 7355              ;    ld de,Album_de_fotos+1
 262+ 7355
 263+ 7355              ;   MODIFICA: A,HL,BC y DE.
 264+ 7355
 265+ 7355              Limpia_album
 266+ 7355 D5               push de                     ; Guardo DESTINO.
 267+ 7356 C5               push bc                     ; Guardo ORIGEN.
 268+ 7357 ED 42            sbc hl,bc
 269+ 7359 4D               ld c,l
 270+ 735A 44               ld b,h
 271+ 735B E1               pop hl
 272+ 735C C5               push bc
 273+ 735D ED B0            ldir
 274+ 735F C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 275+ 7360 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 276+ 7361 C9               ret                         ; _ a otro).
 277+ 7362              ;
 278+ 7362
 279+ 7362              ; -----------------------------------------------
 280+ 7362
 281+ 7362
 282+ 7362
 283+ 7362
 284+ 7362
# file closed: Guarda_foto_registros.asm
1615  7362
1616  7362              	SAVESNA "Pruebas.sna", START
1617  7362
1618  7362
1619  7362
1620  7362
# file closed: Banco_de_pruebas.asm
