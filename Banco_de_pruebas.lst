# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 3B 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD CC 8C     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD DC 8C     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 45 88     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B 3B 88  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC D1 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 C4 85        	defw Caja_2
 110+ 8574 D0 85        	defw Caja_3
 111+ 8576 DC 85        	defw Caja_4
 112+ 8578 E8 85        	defw Caja_5
 113+ 857A F4 85        	defw Caja_6
 114+ 857C 00 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 12 bytes !!!
 155+ 85B8
 156+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 157+ 85BA 00           	db %00000000										; (Attr).
 158+ 85BB              ;	db 0												; (Cuad_objeto).
 159+ 85BB 00           	db 0												; (Impacto).
 160+ 85BC 00 00        	defw 0												; (Puntero_de_impresion).
 161+ 85BE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 162+ 85C0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 163+ 85C2 00           	db 0												; (Ctrl_0).
 164+ 85C3 00           	db 0												; (Ctrl_2).
 165+ 85C4
 166+ 85C4              ; ---------- ---------- ---------- ---------- ----------
 167+ 85C4
 168+ 85C4 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 169+ 85C6 00           	db %00000000										; (Attr).
 170+ 85C7              ;	db 0												; (Cuad_objeto).
 171+ 85C7 00           	db 0												; (Impacto).
 172+ 85C8 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 85CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 85CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 85CE 00           	db 0												; (Ctrl_0).
 176+ 85CF 00           	db 0												; (Ctrl_2).
 177+ 85D0
 178+ 85D0              ; ---------- ---------- ---------- ---------- ----------
 179+ 85D0
 180+ 85D0 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 181+ 85D2 00           	db %00000000										; (Attr).
 182+ 85D3              ;	db 0												; (Cuad_objeto).
 183+ 85D3 00           	db 0												; (Impacto).
 184+ 85D4 00 00        	defw 0												; (Puntero_de_impresion).
 185+ 85D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 186+ 85D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 187+ 85DA 00           	db 0												; (Ctrl_0).
 188+ 85DB 00           	db 0												; (Ctrl_2).
 189+ 85DC
 190+ 85DC              ; ---------- ---------- ---------- ---------- ----------
 191+ 85DC
 192+ 85DC 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 193+ 85DE 00           	db %00000000										; (Attr).
 194+ 85DF              ;	db 0												; (Cuad_objeto).
 195+ 85DF 00           	db 0												; (Impacto).
 196+ 85E0 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 85E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 85E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 85E6 00           	db 0												; (Ctrl_0).
 200+ 85E7 00           	db 0												; (Ctrl_2).
 201+ 85E8
 202+ 85E8              ; ---------- ---------- ---------- ---------- ----------
 203+ 85E8
 204+ 85E8 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 205+ 85EA 00           	db %00000000										; (Attr).
 206+ 85EB              ;	db 0												; (Cuad_objeto).
 207+ 85EB 00           	db 0												; (Impacto).
 208+ 85EC 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 85EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 85F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 85F2 00           	db 0												; (Ctrl_0).
 212+ 85F3 00           	db 0												; (Ctrl_2).
 213+ 85F4
 214+ 85F4              ; ---------- ---------- ---------- ---------- ----------
 215+ 85F4
 216+ 85F4 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 217+ 85F6 00           	db %00000000										; (Attr).
 218+ 85F7              ;	db 0												; (Cuad_objeto).
 219+ 85F7 00           	db 0												; (Impacto).
 220+ 85F8 00 00        	defw 0												; (Puntero_de_impresion).
 221+ 85FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 222+ 85FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 223+ 85FE 00           	db 0												; (Ctrl_0).
 224+ 85FF 00           	db 0												; (Ctrl_2).
 225+ 8600
 226+ 8600              ; ---------- ---------- ---------- ---------- ----------
 227+ 8600
 228+ 8600 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 229+ 8602 00           	db %00000000										; (Attr).
 230+ 8603              ;	db 0												; (Cuad_objeto).
 231+ 8603 00           	db 0												; (Impacto).
 232+ 8604 00 00        	defw 0												; (Puntero_de_impresion).
 233+ 8606 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 234+ 8608 00 00        	defw 0 												; (Contador_de_mov_masticados).
 235+ 860A 00           	db 0												; (Ctrl_0).
 236+ 860B 00           	db 0												; (Ctrl_2).
 237+ 860C
 238+ 860C              ; -------------------------------------------------------------------------------------
 239+ 860C              ;
 240+ 860C              ;	11/1/24
 241+ 860C              ;
 242+ 860C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 243+ 860C              ;
 244+ 860C              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 245+ 860C              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 246+ 860C              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 247+ 860C              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 248+ 860C
 249+ 860C              Indice_de_definiciones_de_entidades
 250+ 860C
 251+ 860C 10 86        	defw Entidad_1
 252+ 860E 1D 86        	defw Entidad_2
 253+ 8610
 254+ 8610              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 255+ 8610
 256+ 8610              ;	BADSAT, (Satélite malvado).
 257+ 8610
 258+ 8610 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 259+ 8613 04           	db %00000100										; (Attr).
 260+ 8614 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 261+ 8616 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 262+ 8618 03 40        	defw $4003                                      	; (Posicion_inicio).
 263+ 861A 01           	db 1												; (Cuad_objeto).
 264+ 861B 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 265+ 861D
 266+ 861D 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 267+ 8620 02           	db %00000010										; (Attr).
 268+ 8621 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 269+ 8623 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 270+ 8625 40 50        	defw $5040                                      	; (Posicion_inicio).
 271+ 8627 01           	db 1												; (Cuad_objeto).
 272+ 8628 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 273+ 862A
# file closed: Cajas_y_disparos.asm
 105  862A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 862A              ; 19/1/24
   2+ 862A
   3+ 862A              Indice_de_niveles
   4+ 862A
   5+ 862A 32 86        	defw Nivel_1
   6+ 862C 3A 86        	defw Nivel_2
   7+ 862E
   8+ 862E              ;	...
   9+ 862E              ;	...
  10+ 862E              ;	+ Niveles ...
  11+ 862E
  12+ 862E 00 00        	defw 0
  13+ 8630 00 00        	defw 0
  14+ 8632
  15+ 8632 03           Nivel_1 db 3									; Nº de entidades.
  16+ 8633 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8637 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 863A
  19+ 863A 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 863B 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 863F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8643 01 02
  22+ 8645 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8649 01 02
  23+ 864B
  24+ 864B              ;---------------------------------------------------------------------------------------------------------------
  25+ 864B              ;
  26+ 864B              ;   19/1/24
  27+ 864B              ;
  28+ 864B              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 864B              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 864B              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 864B              ;	_ de la 1ª entidad del Nivel.
  32+ 864B              ;
  33+ 864B              ;	MODIFICA: HL,DE y A.
  34+ 864B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 864B
  36+ 864B              Inicializa_Nivel
  37+ 864B
  38+ 864B 2A 64 88     	ld hl,(Puntero_indice_NIVELES)
  39+ 864E CD AF 8B     	call Extrae_address
  40+ 8651 7E           	ld a,(hl)
  41+ 8652 32 2F 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 8655 23           	inc hl
  43+ 8656 CD 60 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 8659 22 66 88     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 865C CD 69 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 865F C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 8660
  48+ 8660              ; ----------------------
  49+ 8660
  50+ 8660 11 0E 88     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8663 01 04 00     	ld bc,4
  52+ 8666 ED B0        	ldir
  53+ 8668 C9           	ret
  54+ 8669
  55+ 8669 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 866A CD 4A 87         call Calcula_salto_en_BC
  57+ 866D 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 8670 A7               and a
  59+ 8671 ED 4A            adc hl,bc
  60+ 8673 CD AF 8B         call Extrae_address
  61+ 8676 22 1A 88         ld (Puntero_indice_mov),hl
  62+ 8679 C9               ret
  63+ 867A
  64+ 867A              ;---------------------------------------------------------------------------------------------------------------
  65+ 867A              ;
  66+ 867A              ;   5/1/24
  67+ 867A              ;
  68+ 867A              ;	Destruye A,BC,HL,DE
  69+ 867A
  70+ 867A              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 867A              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 867A
  73+ 867A              Prepara_cajas_de_entidades
  74+ 867A
  75+ 867A              ; Preparamos los punteros de las cajas de entidades:
  76+ 867A
  77+ 867A CD 17 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 867D              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 867D CD C7 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 8680
  81+ 8680 2A 66 88     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 8683
  83+ 8683 22 66 88     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 8686
  85+ 8686 CD F8 86     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 8689
  87+ 8689 2A 66 88     	ld hl,(Datos_de_nivel)
  88+ 868C
  89+ 868C              ; En este punto:
  90+ 868C              ;
  91+ 868C              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 868C              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 868C
  94+ 868C C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 868D
  96+ 868D 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 868E CD 4A 87     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 8691
  99+ 8691 21 0C 86     	ld hl,Indice_de_definiciones_de_entidades
 100+ 8694 CD 52 87     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 8697              ;
 102+ 8697              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 103+ 8697
 104+ 8697 E5           	push hl
 105+ 8698 CD 1A 87     	call Busca_mov_masticados_segun_tipo
 106+ 869B E1           	pop hl
 107+ 869C
 108+ 869C A7           	and a
 109+ 869D 28 02        	jr z,3F													; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 869F
 111+ 869F              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 869F
 113+ 869F 18 FE        	jr $
 114+ 86A1
 115+ 86A1
 116+ 86A1 CD 5C 87     3 call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 117+ 86A4 CD 67 8A     	call Construye_movimientos_masticados_entidad
 118+ 86A7
 119+ 86A7              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 120+ 86A7              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 121+ 86A7              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 122+ 86A7              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 123+ 86A7              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 124+ 86A7
 125+ 86A7 CD D8 86     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 126+ 86AA              ;																; _ Mov_masticados ya generados.
 127+ 86AA CD BC 8A     	call Cargamos_registros_con_mov_masticado
 128+ 86AD CD 16 71     	call Guarda_foto_registros
 129+ 86B0 F3           	di
 130+ 86B1
 131+ 86B1              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 132+ 86B1
 133+ 86B1              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 86B1              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 135+ 86B1
 136+ 86B1              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 137+ 86B1
 138+ 86B1 CD D0 86     	call Decrementa_Contador_de_mov_masticados
 139+ 86B4
 140+ 86B4              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 141+ 86B4
 142+ 86B4 2A 01 88     	ld hl,(Puntero_de_impresion)
 143+ 86B7 CD 7E 9B     	call Genera_coordenadas
 144+ 86BA
 145+ 86BA CD 8F 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 146+ 86BD
 147+ 86BD              ; Limpiamos la bandeja DRAW.
 148+ 86BD
 149+ 86BD              ; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 150+ 86BD
 151+ 86BD CD FD 8B     	call Incrementa_punteros_de_cajas							; Nos situamos en la siguiente caja de entidades.
 152+ 86C0
 153+ 86C0              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 154+ 86C0              ; _ entidad del Nivel.
 155+ 86C0
 156+ 86C0 3A 46 88     	ld a,(Ctrl_4)
 157+ 86C3 E6 F0        	and $f0
 158+ 86C5 32 46 88     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 159+ 86C8
 160+ 86C8              ; Siguiente entidad del Nivel.
 161+ 86C8
 162+ 86C8 2A 66 88     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 163+ 86CB 23           	inc hl 														; _ entidad del Nivel.
 164+ 86CC
 165+ 86CC C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 166+ 86CD 10 B4        	djnz 2B
 167+ 86CF
 168+ 86CF C9           	ret
 169+ 86D0
 170+ 86D0              ; ---------------------------------------------------------------------
 171+ 86D0              ;
 172+ 86D0              ;	22/01/24
 173+ 86D0
 174+ 86D0 2A 05 88     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 175+ 86D3 2B           	dec hl
 176+ 86D4 22 05 88     	ld (Contador_de_mov_masticados),hl
 177+ 86D7 C9           	ret
 178+ 86D8
 179+ 86D8              ; ---------------------------------------------------------------------
 180+ 86D8              ;
 181+ 86D8              ;	22/01/24
 182+ 86D8
 183+ 86D8 21 46 88     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 184+ 86DB CB 46        	bit 0,(hl)
 185+ 86DD 20 0D        	jr nz,1F
 186+ 86DF CB 4E        	bit 1,(hl)
 187+ 86E1 20 0C        	jr nz,2F
 188+ 86E3 CB 56        	bit 2,(hl)
 189+ 86E5 20 0B        	jr nz,3F
 190+ 86E7 CB 5E        	bit 3,(hl)
 191+ 86E9 20 0A        	jr nz,4F
 192+ 86EB C9           	ret
 193+ 86EC
 194+ 86EC CB E6        1 set 4,(hl)
 195+ 86EE C9           	ret
 196+ 86EF CB EE        2 set 5,(hl)
 197+ 86F1 C9           	ret
 198+ 86F2 CB F6        3 set 6,(hl)
 199+ 86F4 C9           	ret
 200+ 86F5 CB FE        4 set 7,(hl)
 201+ 86F7 C9           	ret
 202+ 86F8
 203+ 86F8              ; ---------------------------------------------------------------------
 204+ 86F8              ;
 205+ 86F8              ;	23/01/24
 206+ 86F8              ;
 207+ 86F8              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 208+ 86F8              ;
 209+ 86F8              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 210+ 86F8              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 211+ 86F8              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 212+ 86F8              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 213+ 86F8
 214+ 86F8              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 215+ 86F8
 216+ 86F8 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 217+ 86F9 3D           	dec a
 218+ 86FA 20 06        	jr nz,1F
 219+ 86FC
 220+ 86FC              ; --- Tipo_1
 221+ 86FC
 222+ 86FC 21 46 88     	ld hl,Ctrl_4
 223+ 86FF CB C6        	set 0,(hl)
 224+ 8701 C9           	ret
 225+ 8702
 226+ 8702 3D           1 dec a
 227+ 8703 20 06        	jr nz,2F
 228+ 8705
 229+ 8705              ; --- Tipo_2
 230+ 8705
 231+ 8705 21 46 88     	ld hl,Ctrl_4
 232+ 8708 CB CE        	set 1,(hl)
 233+ 870A C9           	ret
 234+ 870B
 235+ 870B 3D           2 dec a
 236+ 870C 20 06        	jr nz,3F
 237+ 870E
 238+ 870E              ; --- Tipo_3
 239+ 870E
 240+ 870E 21 46 88     	ld hl,Ctrl_4
 241+ 8711 CB D6        	set 2,(hl)
 242+ 8713 C9           	ret
 243+ 8714
 244+ 8714              ; --- Tipo_3
 245+ 8714
 246+ 8714 21 46 88     3 ld hl,Ctrl_4
 247+ 8717 CB D6        	set 2,(hl)
 248+ 8719 C9           	ret
 249+ 871A
 250+ 871A              ; ---------------------------------------------------------------------
 251+ 871A              ;
 252+ 871A              ;	22/01/24
 253+ 871A
 254+ 871A 21 46 88     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 255+ 871D CB 46        	bit 0,(hl)
 256+ 871F 20 0E        	jr nz,1F
 257+ 8721
 258+ 8721 CB 4E        	bit 1,(hl)
 259+ 8723 20 10        	jr nz,2F
 260+ 8725
 261+ 8725 CB 56        	bit 2,(hl)
 262+ 8727 20 12        	jr nz,3F
 263+ 8729
 264+ 8729 CB 5E        	bit 3,(hl)
 265+ 872B 20 14        	jr nz,4F
 266+ 872D 18 19        	jr 6F
 267+ 872F
 268+ 872F              ; Entidad_de_Tipo_1.
 269+ 872F
 270+ 872F CB 66        1 bit 4,(hl)
 271+ 8731 28 15        	jr z,6F
 272+ 8733 18 10        	jr 5F
 273+ 8735
 274+ 8735              ; Entidad_de_Tipo_2.
 275+ 8735
 276+ 8735 CB 6E        2 bit 5,(hl)
 277+ 8737 28 0F        	jr z,6F
 278+ 8739 18 0A        	jr 5F
 279+ 873B
 280+ 873B              ; Entidad_de_Tipo_3.
 281+ 873B
 282+ 873B CB 76        3 bit 6,(hl)
 283+ 873D 28 09        	jr z,6F
 284+ 873F 18 04        	jr 5F
 285+ 8741
 286+ 8741              ; Entidad_de_Tipo_4.
 287+ 8741
 288+ 8741 CB 7E        4 bit 7,(hl)
 289+ 8743 28 03        	jr z,6F
 290+ 8745
 291+ 8745              ; Esta entidad TIENE MOV_MASTICADOS.
 292+ 8745
 293+ 8745 AF           5 xor a
 294+ 8746 3C           	inc a
 295+ 8747 C9           	ret
 296+ 8748
 297+ 8748              ; Esta entidad NO TIENE MOV_MASTICADOS.
 298+ 8748
 299+ 8748 AF           6 xor a
 300+ 8749 C9           	ret
 301+ 874A
 302+ 874A              ;	------------------------------------------------------------------------------------
 303+ 874A              ;
 304+ 874A              ;	12/01/24
 305+ 874A              ;
 306+ 874A              ;	INPUTS:	A contiene el (Tipo) de entidad.
 307+ 874A              ;
 308+ 874A              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 309+ 874A              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 310+ 874A
 311+ 874A CB 27        Calcula_salto_en_BC sla a
 312+ 874C D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 313+ 874E 4F           	ld c,a
 314+ 874F 06 00        	ld b,0
 315+ 8751 C9           	ret
 316+ 8752
 317+ 8752              ; ------------------------------------------------------------------
 318+ 8752              ;
 319+ 8752              ;	19/1/24
 320+ 8752              ;
 321+ 8752              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 322+ 8752              ;	Actualiza (Datos_de_entidad) con esa dirección.
 323+ 8752
 324+ 8752 A7           Situa_en_datos_de_definicion and a
 325+ 8753 ED 4A        	adc hl,bc
 326+ 8755 CD AF 8B     	call Extrae_address
 327+ 8758 22 35 88         ld (Datos_de_entidad),hl
 328+ 875B C9           	ret
 329+ 875C
 330+ 875C              ; ------------------------------------------------------------------
 331+ 875C
 332+ 875C              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 333+ 875C              ; 	inc de
 334+ 875C              ; 	inc de
 335+ 875C              ; 	ex de,hl
 336+ 875C              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 337+ 875C              ; 	ret
 338+ 875C
 339+ 875C              ; ----------------------------------------------------------------------------------------------------------
 340+ 875C              ;
 341+ 875C              ;	19/1/24
 342+ 875C              ;
 343+ 875C              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 344+ 875C              ;	_ de entidad.
 345+ 875C              ;
 346+ 875C              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 347+ 875C              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 348+ 875C              ;
 349+ 875C              ;	MODIFICA: HL,DE y BC
 350+ 875C
 351+ 875C
 352+ 875C              Definicion_de_entidad_a_bandeja_DRAW
 353+ 875C
 354+ 875C 11 E4 87     	ld de,Variables_DRAW	 					; DE apunta al 1er .db de las variables DRAW
 355+ 875F
 356+ 875F 01 03 00     	ld bc,3
 357+ 8762 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 358+ 8764              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 359+ 8764 01 07 00     	ld bc,7
 360+ 8767 CD BD 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 361+ 876A
 362+ 876A 01 05 00     	ld bc,5
 363+ 876D ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 364+ 876F              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 365+ 876F 01 04 00     	ld bc,4
 366+ 8772 CD BD 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 367+ 8775
 368+ 8775 01 03 00     	ld bc,3
 369+ 8778 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 370+ 877A              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 371+ 877A
 372+ 877A 01 09 00     	ld bc,9
 373+ 877D CD BD 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 374+ 8780
 375+ 8780 01 02 00     	ld bc,2
 376+ 8783 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 377+ 8785
 378+ 8785 01 08 00     	ld bc,8
 379+ 8788 CD BD 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 380+ 878B
 381+ 878B 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 382+ 878D 12           	ld (de),a 									; Vuelco (Frames_explosion).
 383+ 878E
 384+ 878E C9           	ret
 385+ 878F
 386+ 878F              ; ----------------------------------------------------------------------------------------------------------
 387+ 878F              ;
 388+ 878F              ;	22/01/24
 389+ 878F              ;
 390+ 878F              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 391+ 878F              ;
 392+ 878F              ;	Las cajas contienen entidades iniciadas:
 393+ 878F              ;
 394+ 878F              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 395+ 878F              ;
 396+ 878F              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 397+ 878F              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 398+ 878F              ;
 399+ 878F              ;	MODIFICA: HL,DE y BC
 400+ 878F
 401+ 878F 21 EB 87     Parametros_de_bandeja_DRAW_a_caja ld hl,Variables_DRAW+7	; HL situado en (Coordenada_X) de la bandeja DRAW.
 402+ 8792 ED 5B 29 88  	ld de,(Puntero_store_caja) 								; DE situado en el 1er .db de la correspondiente caja de entidades.
 403+ 8796 01 02 00     	ld bc,2
 404+ 8799 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 405+ 879B              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 406+ 879B 23           	inc hl
 407+ 879C 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 408+ 879D 12           	ld (de),a
 409+ 879E 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 410+ 879F
 411+ 879F 01 0C 00     	ld bc,12
 412+ 87A2 CD C3 87     	call Situa_HL
 413+ 87A5 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 414+ 87A6 12           	ld (de),a
 415+ 87A7 13           	inc de 													; (Impacto), volcado a la caja.
 416+ 87A8              ;															; DE situado ahora en (Puntero_de_impresion).
 417+ 87A8 01 07 00     	ld bc,7
 418+ 87AB CD C3 87     	call Situa_HL
 419+ 87AE 01 07 00     	ld bc,7
 420+ 87B1 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 421+ 87B3              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 422+ 87B3              ;															; HL apunta ahora a (Columnas).
 423+ 87B3 01 04 00     	ld bc,4
 424+ 87B6 CD C3 87     	call Situa_HL
 425+ 87B9 7E           	ld a,(hl)
 426+ 87BA 12           	ld (de),a 												; Volcamos (Ctrl_2).
 427+ 87BB 13           	inc de
 428+ 87BC
 429+ 87BC C9           	ret
 430+ 87BD
 431+ 87BD              ; -------------------------------------------------------------
 432+ 87BD
 433+ 87BD EB           Situa_DE ex de,hl
 434+ 87BE A7           	and a
 435+ 87BF ED 4A        	adc hl,bc
 436+ 87C1 EB           	ex de,hl
 437+ 87C2 C9           	ret
 438+ 87C3
 439+ 87C3 A7           Situa_HL and a
 440+ 87C4 ED 4A        	adc hl,bc
 441+ 87C6 C9           	ret
 442+ 87C7
 443+ 87C7              ;---------------------------------------------------------------------------------------------------------------
 444+ 87C7              ;
 445+ 87C7              ;	5/1/24
 446+ 87C7              ;
 447+ 87C7              ;	INICIALIZA (Numero_parcial_de_entidades).
 448+ 87C7              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 449+ 87C7              ;
 450+ 87C7              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 451+ 87C7              ;
 452+ 87C7              ;	(Numero_parcial_de_entidades)="7".
 453+ 87C7              ;
 454+ 87C7              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 455+ 87C7              ;
 456+ 87C7              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 457+ 87C7              ;
 458+ 87C7              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 459+ 87C7              ;	MODIFICA: A y B.
 460+ 87C7              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 461+ 87C7
 462+ 87C7              Inicializa_Numero_parcial_de_entidades
 463+ 87C7
 464+ 87C7              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 465+ 87C7
 466+ 87C7 3A 2F 88     	ld a,(Numero_de_entidades)
 467+ 87CA A7           	and a
 468+ 87CB
 469+ 87CB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 470+ 87CB              ;	jr z,$
 471+ 87CB              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 472+ 87CB
 473+ 87CB 20 03        	jr nz,3F
 474+ 87CD
 475+ 87CD              ; ---------- ---------- ----------
 476+ 87CD
 477+ 87CD              ;! RESET para pruebas. Omitir esta línea en modo normal.
 478+ 87CD              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 479+ 87CD
 480+ 87CD CD 4B 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 481+ 87D0
 482+ 87D0              ; ---------- ---------- ----------
 483+ 87D0
 484+ 87D0 3A 2F 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 485+ 87D3 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 486+ 87D5 38 08        	jr c,1F
 487+ 87D7
 488+ 87D7              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 489+ 87D7              ; Actualizamos variables.
 490+ 87D7
 491+ 87D7 3E 07        	ld a,7
 492+ 87D9 32 30 88     	ld (Numero_parcial_de_entidades),a
 493+ 87DC 47           	ld b,a
 494+ 87DD 18 04        	jr 2F
 495+ 87DF
 496+ 87DF              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 497+ 87DF              ; (Numero_de_entidades)="0".
 498+ 87DF
 499+ 87DF 32 30 88     1 ld (Numero_parcial_de_entidades),a
 500+ 87E2 47           	ld b,a
 501+ 87E3 C9           2 ret
# file closed: Niveles.asm
 106  87E4
 107  87E4              ; ******************************************************************************************************************************************************************************************
 108  87E4              ; Constantes.
 109  87E4              ; ******************************************************************************************************************************************************************************************
 110  87E4              ;
 111  87E4              ; 25/12/23
 112  87E4
 113  87E4              ;
 114  87E4              ; Constantes.
 115  87E4              ;
 116  87E4
 117  87E4              Sprite_vacio equ $f000
 118  87E4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  87E4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  87E4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  87E4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  87E4
 123  87E4              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  87E4              ;														;
 125  87E4              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  87E4
 127  87E4              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  87E4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  87E4              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  87E4              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  87E4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  87E4
 133  87E4              ;														; 55 Bytes.
 134  87E4              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  87E4              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  87E4
 137  87E4              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  87E4
 139  87E4              ; ******************************************************************************************************************************************************************************************
 140  87E4              ; Variables.
 141  87E4              ; ******************************************************************************************************************************************************************************************
 142  87E4              ;
 143  87E4              ; 18/01/24
 144  87E4              ;
 145  87E4              ; Variables de DRAW. (Motor principal).	42 Bytes.
 146  87E4              ;
 147  87E4
 148  87E4              Variables_DRAW ; -----------------------------------------------------------------------------------------------
 149  87E4
 150  87E4 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  87E5              ;															- Patrón de movimiento.
 152  87E5              ;															- Aspecto
 153  87E5 00           Filas db 0												; Filas. [DRAW]
 154  87E6 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  87E7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  87E9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  87EB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  87EC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  87ED
 160  87ED              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  87ED
 162  87ED 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  87EE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  87EE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  87EE 00           Attr db 0												; Atributos de la entidad:
 166  87EF
 167  87EF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  87EF              ;
 169  87EF              ;	COLORES: 0 ..... NEGRO
 170  87EF              ;    		 1 ..... AZUL
 171  87EF              ; 			 2 ..... ROJO
 172  87EF              ;			 3 ..... MAGENTA
 173  87EF              ; 			 4 ..... VERDE
 174  87EF              ; 			 5 ..... CIAN
 175  87EF              ;			 6 ..... AMARILLO
 176  87EF              ; 			 7 ..... BLANCO
 177  87EF
 178  87EF 00 00        Indice_Sprite_der defw 0
 179  87F1 00 00        Indice_Sprite_izq defw 0
 180  87F3 00 00        Puntero_DESPLZ_der defw 0
 181  87F5 00 00        Puntero_DESPLZ_izq defw 0
 182  87F7
 183  87F7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  87F9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  87FA
 186  87FA              ; Variables de objeto. (Características).
 187  87FA
 188  87FA 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 189  87FB              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 190  87FB              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 191  87FB 00 00 00...  Variables_de_borrado ds 6
 192  8801
 193  8801 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 194  8803              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 195  8803
 196  8803 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 197  8805
 198  8805              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 199  8805              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 200  8805
 201  8805 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 202  8807              ;														; _palabras que componen el "movimiento_masticado".
 203  8807
 204  8807              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 205  8807
 206  8807 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 207  8808              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 208  8808              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 209  8808              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 210  8808              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 211  8808              ;
 212  8808              ; 														DESCRIPCIÖN:
 213  8808              ;
 214  8808              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 215  8808              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 216  8808              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 217  8808              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 218  8808              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 219  8808              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 220  8808              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 221  8808              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 222  8808              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 223  8808              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 224  8808              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 225  8808              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 226  8808              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 227  8808              ;
 228  8808              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 229  8808              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 230  8808              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 231  8808
 232  8808              ; Variables de funcionamiento. [DRAW].
 233  8808
 234  8808 00           Columnas db 0
 235  8809 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 236  880B              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 237  880B 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  880C
 239  880C              ; variables de control general.
 240  880C
 241  880C 00           Ctrl_2 db 0
 242  880D              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 243  880D              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 244  880D              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 245  880D              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 246  880D              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 247  880D              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 248  880D              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 249  880D              ;
 250  880D              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 251  880D              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 252  880D              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 253  880D              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 254  880D              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 255  880D              ;														BIT 4, ???
 256  880D              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 257  880D
 258  880D 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 259  880E
 260  880E              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 261  880E
 262  880E              ;					         		---------;      ;---------
 263  880E
 264  880E              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 265  880E
 266  880E              Perfiles_de_velocidad
 267  880E
 268  880E 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 269  880F 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 270  8810 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 271  8811 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 272  8812
 273  8812              ; Contadores de 16 bits.
 274  8812
 275  8812 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 276  8814 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 277  8816 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 278  8818 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 279  881A
 280  881A              ; Movimiento. ------------------------------------------------------------------------------------------------------
 281  881A
 282  881A 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 283  881C 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 284  881E 00 00        Puntero_indice_mov_bucle defw 0							;
 285  8820              ;
 286  8820              ;
 287  8820 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 288  8821              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 289  8821              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 290  8821 00           Incrementa_puntero_backup db 0
 291  8822 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 292  8823              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 293  8823 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 294  8824 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 295  8825 00           Cola_de_desplazamiento db 0								; Este byte indica:
 296  8826              ;
 297  8826              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 298  8826              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 299  8826              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 300  8826              ;
 301  8826              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 302  8826              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 303  8826              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 304  8826              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 305  8826              ;
 306  8826              ;														;	"$ff" ..... Bucle infinito de repetición.
 307  8826              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 308  8826              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 309  8826              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  8826
 311  8826 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  8827
 313  8827              ;														DESCRIPCIÓN:
 314  8827              ;
 315  8827              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  8827              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  8827              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  8827              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  8827              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  8827              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  8827
 322  8827              ;														BIT 3, Recarga de nueva oleada.
 323  8827              ;														BIT 4, Recarga de nueva oleada.
 324  8827              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  8827              ;														BIT 6, **** Frame completo.
 326  8827              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  8827
 328  8827 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  8829              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  8829              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  8829              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  8829
 333  8829              ; Gestión de ENTIDADES y CAJAS.
 334  8829
 335  8829 00 00        Puntero_store_caja defw 0
 336  882B 00 00        Puntero_restore_caja defw 0
 337  882D 00 00        Indice_restore_caja defw 0
 338  882F 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  8830 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  8831 00           Entidades_en_curso db 0									; ..... ..... .....
 341  8832 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  8833              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  8833              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  8833              ;														; _ (Numero_de_malotes)="0".
 345  8833 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  8835 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  8837              ;														; _ puntero (Indice_entidades).
 348  8837
 349  8837              ;---------------------------------------------------------------------------------------------------------------
 350  8837              ;
 351  8837              ;	11/01/24
 352  8837              ;
 353  8837              ;	Álbumes.
 354  8837
 355  8837 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  8839              ;														; _variable para almacenar lo posición del puntero_
 357  8839              ; 														; _de pila, SP.
 358  8839 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  883B              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  883B 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  883D 00 70        Stack_snapshot defw Album_de_fotos
 362  883F 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  8841
 364  8841              ;End_Snapshot defw Album_de_fotos
 365  8841              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  8841 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  8843              ;														; _el snapshot de los registros del siguiente disparo.
 368  8843              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  8843 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  8845
 371  8845 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  8846              ;
 373  8846              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  8846              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 375  8846              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 376  8846
 377  8846 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 378  8847              ;
 379  8847              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 380  8847              ;
 381  8847              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 382  8847              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 383  8847              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 384  8847              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 385  8847              ;
 386  8847              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 387  8847              ;															_ masticados ya generados.
 388  8847              ;
 389  8847              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 390  8847              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 391  8847              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 392  8847              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 393  8847
 394  8847
 395  8847              ; Gestión de Disparos.
 396  8847
 397  8847 00           Numero_de_disparotes db 0
 398  8848 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 399  884A 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 400  884C 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 401  884D              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 402  884D              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 403  884D 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 404  884F              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 405  884F              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 406  884F              ;														; _produzca colisión.
 407  884F 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 408  8851              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 409  8851 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 410  8854              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 411  8854 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 412  8857              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 413  8857 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 414  8858
 415  8858              ;---------------------------------------------------------------------------------------------------------------
 416  8858
 417  8858              ; Relojes y temporizaciones.
 418  8858
 419  8858 00           Contador_de_frames db 0
 420  8859 00           Contador_de_frames_2 db 0
 421  885A
 422  885A 04           Clock_explosion db 4
 423  885B 14           Clock_Entidades_en_curso db 20
 424  885C 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 425  885D              ;														; Repite la oleada de entidades.
 426  885D 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 427  885E 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 428  885F 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 429  8860
 430  8860 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 431  8861 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 432  8862 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 433  8863
 434  8863              ;---------------------------------------------------------------------------------------------------------------
 435  8863
 436  8863              ; Gestión de NIVELES.
 437  8863
 438  8863 00           Nivel db 0												; Nivel actual del juego.
 439  8864 00 00        Puntero_indice_NIVELES defw 0
 440  8866 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 441  8868              ; 														; _ que definen el NIVEL.
 442  8868              ; Y todo comienza aquí .....
 443  8868              ;
 444  8868              ; 	INICIO  *************************************************************************************************************************************************************************
 445  8868              ;
 446  8868              ;	5/1/24
 447  8868
 448  8868              START
 449  8868
 450  8868 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 451  886B 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 452  886D ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 453  886F ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 454  8871 F3           	DI
 455  8872
 456  8872 3E 07        	ld a,%00000111
 457  8874 CD F0 97     	call Cls
 458  8877 CD 3B 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 459  887A
 460  887A              ; INICIALIZACIÓN.
 461  887A
 462  887A              ;	Inicializa 1er Nivel.
 463  887A
 464  887A 21 2A 86     	ld hl,Indice_de_niveles
 465  887D 22 64 88     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 466  8880 CD 4B 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 467  8883              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 468  8883              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 469  8883              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 470  8883
 471  8883 CD 7A 86     4 call Prepara_cajas_de_entidades
 472  8886
 473  8886              ;	call Inicia_punteros_de_cajas 						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 474  8886              ;														 ; Situa (Puntero_restore-caja) en el 1er .db de la 2ª caja del índice de entidades.
 475  8886 CD EB 8B     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 476  8889
 477  8889 21 30 88     	ld hl,Numero_parcial_de_entidades
 478  888C 46           	ld b,(hl)
 479  888D              ;	inc b
 480  888D              ;	dec b
 481  888D              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 482  888D
 483  888D              ;	INICIA ENTIDADES !!!!!
 484  888D
 485  888D              ;1 push bc  												; Guardo el contador de entidades.
 486  888D              ;	call Inicia_entidad
 487  888D
 488  888D              ;	pop bc
 489  888D              ;	djnz 1B  											; Decremento el contador de entidades.
 490  888D
 491  888D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 492  888D              ; (Esto se dá cuando se inicia una nueva oleada).
 493  888D
 494  888D              ;	ld a,(Ctrl_1)
 495  888D              ;	bit 3,a
 496  888D              ;	jr nz,5F											; Loop
 497  888D
 498  888D              ; 	INICIA AMADEUS !!!!!
 499  888D
 500  888D              ;3 call Restore_Amadeus
 501  888D              ;	call Inicia_Puntero_objeto
 502  888D              ;	call Draw
 503  888D
 504  888D              ;	call Guarda_movimiento_masticado	;! Provisional
 505  888D
 506  888D              ;	call Guarda_foto_registros
 507  888D              ;	call Guarda_datos_de_borrado_Amadeus
 508  888D
 509  888D              ;	ld de,Amadeus_db
 510  888D              ;	call Store_Amadeus
 511  888D
 512  888D              ; 	INICIA DISPAROS !!!!!
 513  888D
 514  888D              ;	call Inicia_Puntero_Disparo_Entidades
 515  888D              ;	call Inicia_Puntero_Disparo_Amadeus
 516  888D
 517  888D              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 518  888D
 519  888D              5
 520  888D              ;	call Inicia_punteros_de_cajas
 521  888D CD EB 8B     	call Restore_entidad
 522  8890
 523  8890 3A 26 88     	ld a,(Ctrl_1)
 524  8893 CB 5F        	bit 3,a
 525  8895 28 07        	jr z,6F
 526  8897
 527  8897              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 528  8897
 529  8897 21 26 88     	ld hl,Ctrl_1
 530  889A CB 9E        	res 3,(hl)
 531  889C 18 07        	jr Main
 532  889E
 533  889E              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 534  889E
 535  889E 21 45 88     6 ld hl,Ctrl_3
 536  88A1 CB C6        	set 0,(hl)											; Frame completo.
 537  88A3 FB           	ei
 538  88A4 76           	halt
 539  88A5
 540  88A5              ; ------------------------------------
 541  88A5
 542  88A5              Main
 543  88A5              ;
 544  88A5              ;	11/12/23
 545  88A5
 546  88A5              ; Aparece nueva entidad ???
 547  88A5
 548  88A5              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 549  88A5              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 550  88A5              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 551  88A5              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 552  88A5              ;														; _un 2º bloque.
 553  88A5
 554  88A5 3E 01        	ld a,1
 555  88A7 D3 FE        	out ($fe),a
 556  88A9
 557  88A9 3A 5B 88     	ld a,(Clock_Entidades_en_curso)
 558  88AC 47           	ld b,a
 559  88AD 3A 58 88     	ld a,(Contador_de_frames)
 560  88B0 B8           	cp b
 561  88B1 20 18        	jr nz,13F
 562  88B3
 563  88B3              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 564  88B3              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 565  88B3
 566  88B3 3A 30 88     21 ld a,(Numero_parcial_de_entidades)
 567  88B6 47           	ld b,a
 568  88B7 3A 31 88     	ld a,(Entidades_en_curso)
 569  88BA B8           	cp b
 570  88BB 28 0E        	jr z,13F
 571  88BD 30 0C        	jr nc,13F
 572  88BF
 573  88BF 3C           	inc a
 574  88C0 32 31 88     	ld (Entidades_en_curso),a
 575  88C3
 576  88C3              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 577  88C3
 578  88C3 3A 5B 88     	ld a,(Clock_Entidades_en_curso)
 579  88C6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 580  88C6              ;! _ IMPREDECIBLE !!!!
 581  88C6 C6 64        	add 100
 582  88C8 32 5B 88     	ld (Clock_Entidades_en_curso),a
 583  88CB
 584  88CB              ; -------------------------------------------------------------------------------------------------------------
 585  88CB
 586  88CB              ; Habilita disparos.
 587  88CB
 588  88CB 21 5D 88     13 ld hl,Disparo_Amadeus
 589  88CE 11 5F 88     	ld de,CLOCK_repone_disparo_Amadeus
 590  88D1 CD C2 9B     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 591  88D4
 592  88D4 21 60 88     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 593  88D7 11 62 88     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 594  88DA CD C2 9B     	call Habilita_disparos
 595  88DD
 596  88DD              ; COLISIONES.
 597  88DD
 598  88DD CD DA 90     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 599  88E0
 600  88E0              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 601  88E0              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 602  88E0              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 603  88E0
 604  88E0 AF           	xor a
 605  88E1 32 4C 88     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 606  88E4
 607  88E4 CD 17 8B     	call Inicia_punteros_de_cajas
 608  88E7 CD EB 8B     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 609  88EA              ; 														; _ en DRAW.
 610  88EA 3A E5 87     	ld a,(Filas)
 611  88ED A7           	and a
 612  88EE 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 613  88F0 CD FD 8B     	call Incrementa_punteros_de_cajas
 614  88F3 18 F2        	jr 12B
 615  88F5
 616  88F5              ; ---------------------------------------------------------------------------------------
 617  88F5
 618  88F5 3A 30 88     10 ld a,(Numero_parcial_de_entidades)
 619  88F8 47               ld b,a
 620  88F9 A7           	and a
 621  88FA 20 14        	jr nz,11F
 622  88FC
 623  88FC 21 26 88     	ld hl,Ctrl_1
 624  88FF CB 66        	bit 4,(hl)
 625  8901 C2 A9 89     	jp nz,16F
 626  8904
 627  8904              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 628  8904
 629  8904 21 26 88     	ld hl,Ctrl_1
 630  8907 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 631  8909
 632  8909 3A 58 88     	ld a,(Contador_de_frames)
 633  890C 3C           	inc a
 634  890D 32 5C 88     	ld (Activa_recarga_cajas),a
 635  8910
 636  8910              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 637  8910
 638  8910 3A 31 88     11 ld a,(Entidades_en_curso)
 639  8913 A7           	and a
 640  8914 CA A9 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 641  8917 47           	ld b,a												; No hay entidades que gestionar.
 642  8918
 643  8918              ; ( Código que ejecutamos con cada entidad: ).
 644  8918
 645  8918              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 646  8918
 647  8918 C5           15 push bc 												; Nº de entidades en curso.
 648  8919
 649  8919              ; Existe "Entidad_guía" ???.
 650  8919              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 651  8919
 652  8919 3A 45 88     	ld a,(Ctrl_3)
 653  891C CB 4F        	bit 1,a
 654  891E 20 11        	jr nz,22F
 655  8920
 656  8920              ; Almacén de "Movimientos_masticados" lleno ???
 657  8920              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 658  8920              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 659  8920
 660  8920 3A 45 88     	ld a,(Ctrl_3)
 661  8923 CB 5F        	bit 3,a
 662  8925 20 0A        	jr nz,22F
 663  8927
 664  8927              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 665  8927
 666  8927 21 0C 88     	ld hl,Ctrl_2
 667  892A CB EE        	set 5,(hl)
 668  892C 21 45 88     	ld hl,Ctrl_3
 669  892F CB CE        	set 1,(hl)
 670  8931
 671  8931              ; Impacto ???
 672  8931
 673  8931 3A FA 87     22 ld a,(Impacto)
 674  8934 A7           	and a
 675  8935 28 31        	jr z,8F
 676  8937
 677  8937              ; Hay Impacto en esta entidad.
 678  8937
 679  8937 21 5A 88     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 680  893A 35           	dec (hl)
 681  893B C2 9C 89     	jp nz,17F
 682  893E
 683  893E              ;! Velocidad de la animación de la explosión.
 684  893E
 685  893E 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 686  8940              ;														; _,(velocidad de la explosión).
 687  8940              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 688  8940
 689  8940 CD AF 8C     	call Repone_datos_de_borrado
 690  8943 CD 55 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 691  8946
 692  8946              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 693  8946
 694  8946 3A 0C 88     	ld a,(Ctrl_2)
 695  8949 CB 4F        	bit 1,a
 696  894B 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 697  894D
 698  894D              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 699  894D
 700  894D 3A ED 87     	ld a,(CTRL_DESPLZ)
 701  8950 A7           	and a
 702  8951 20 08        	jr nz,18F
 703  8953
 704  8953 21 84 84     	ld hl,Indice_Explosion_2x2-2
 705  8956 22 F3 87     	ld (Puntero_DESPLZ_der),hl
 706  8959 18 06        	jr 19F
 707  895B
 708  895B 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 709  895E 22 F3 87     	ld (Puntero_DESPLZ_der),hl
 710  8961
 711  8961 21 0C 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 712  8964 CB CE        	set 1,(hl)
 713  8966 18 22        	jr 7F
 714  8968
 715  8968              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 716  8968              ; _con las coordenadas de la entidad almacenada en DRAW.
 717  8968
 718  8968 3A 26 88     8 ld a,(Ctrl_1)
 719  896B CB 57        	bit 2,a
 720  896D 28 1B        	jr z,7F
 721  896F
 722  896F 2A 4F 88     	ld hl,(Coordenadas_disparo_certero)
 723  8972 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 724  8973              ;														; E contiene la coordenada_X del disparo.
 725  8973 2A EB 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 726  8976              ;														; H FILA, (Coordenada_y de la entidad).
 727  8976 A7           	and a
 728  8977 ED 52        	sbc hl,de
 729  8979
 730  8979 CD F3 90     	call Determina_resultado_comparativa
 731  897C
 732  897C 78           	ld a,b
 733  897D A7           	and a
 734  897E 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 735  8980
 736  8980              ; ----- ----- -----
 737  8980
 738  8980 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 739  8982 32 FA 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 740  8985
 741  8985 21 26 88     	ld hl,Ctrl_1
 742  8988 CB 96        	res 2,(hl)
 743  898A
 744  898A CD FA 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 745  898D
 746  898D 3A 07 88     	ld a,(Ctrl_0)
 747  8990 CB 67        	bit 4,a
 748  8992 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 749  8994
 750  8994              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 751  8994              ; [[[
 752  8994              ;	call Detecta_disparo_entidad
 753  8994              ; ]]]
 754  8994
 755  8994 CD D2 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 756  8997
 757  8997 21 07 88     	ld hl,Ctrl_0
 758  899A CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 759  899C
 760  899C CD EA 8B     17 call Store_Restore_cajas
 761  899F
 762  899F C1           	pop bc
 763  89A0
 764  89A0 05           	dec b
 765  89A1 C2 18 89     	jp nz,15B
 766  89A4
 767  89A4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 768  89A4              ; Hemos gestionado todas las unidades.
 769  89A4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 770  89A4
 771  89A4 21 26 88     	ld hl,Ctrl_1
 772  89A7 CB 96        	res 2,(hl)
 773  89A9
 774  89A9 21 45 88     16 ld hl,Ctrl_3
 775  89AC CB C6        	set 0,(hl)											; Frame completo.
 776  89AE
 777  89AE AF           	xor a
 778  89AF D3 FE        	out ($fe),a
 779  89B1
 780  89B1 FB           	ei
 781  89B2 76           	halt
 782  89B3
 783  89B3              ; ----------------------------------------
 784  89B3
 785  89B3 3A 26 88     	ld a,(Ctrl_1) 										; Existe Loop?
 786  89B6 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 787  89B8 CA A5 88     	jp z,Main
 788  89BB
 789  89BB              ; RECARGA DE NUEVA OLEADA.
 790  89BB
 791  89BB 3A 58 88     	ld a,(Contador_de_frames)
 792  89BE 47           	ld b,a
 793  89BF 3A 5C 88     	ld a,(Activa_recarga_cajas)
 794  89C2 B8           	cp b
 795  89C3 28 08        	jr z,20F
 796  89C5
 797  89C5 21 26 88     	ld hl,Ctrl_1
 798  89C8 CB E6        	set 4,(hl)
 799  89CA C3 A5 88     	jp Main
 800  89CD
 801  89CD 21 26 88     20 ld hl,Ctrl_1
 802  89D0 CB A6        	res 4,(hl)
 803  89D2
 804  89D2 3A 58 88     	ld a,(Contador_de_frames)
 805  89D5
 806  89D5              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 807  89D5              ;! _ IMPREDECIBLE !!!!
 808  89D5
 809  89D5 C6 0A        	add 10
 810  89D7 32 5B 88     	ld (Clock_Entidades_en_curso),a
 811  89DA
 812  89DA C3 83 88     	jp 4B
 813  89DD
 814  89DD C9           	ret
 815  89DE
 816  89DE              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 817  89DE              ;
 818  89DE              ;	16/11/23
 819  89DE
 820  89DE              Gestiona_Amadeus
 821  89DE
 822  89DE              ;! Activa/desactiva impacto con Amadeus.
 823  89DE
 824  89DE              ;	ld a,(Impacto)
 825  89DE              ;	and a
 826  89DE              ;	jr nz,2F
 827  89DE
 828  89DE CD 57 8A     	call Mov_Amadeus
 829  89E1
 830  89E1 3A 07 88     2 ld a,(Ctrl_0)
 831  89E4 CB 67        	bit 4,a
 832  89E6 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 833  89E8
 834  89E8 CD D2 8A     	call Guarda_foto_entidad_a_pintar
 835  89EB CD 8F 8C     	call Guarda_datos_de_borrado_Amadeus
 836  89EE
 837  89EE 21 07 88     1 ld hl,Ctrl_0
 838  89F1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 839  89F3
 840  89F3 CD 7E 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 841  89F6
 842  89F6              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 843  89F6
 844  89F6 CD 97 8B     	call Calcula_numero_de_disparotes
 845  89F9
 846  89F9 C9           	ret
 847  89FA
 848  89FA              ; --------------------------------------------------------------------------------------------------------------
 849  89FA              ;
 850  89FA              ;	15/12/23
 851  89FA
 852  89FA              Mov_obj
 853  89FA
 854  89FA 3A 0C 88     	ld a,(Ctrl_2)
 855  89FD CB 4F        	bit 1,a
 856  89FF 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 857  8A01
 858  8A01              ; Explosión:
 859  8A01
 860  8A01 3A 0D 88     	ld a,(Frames_explosion)
 861  8A04 A7           	and a
 862  8A05 20 1D        	jr nz,4F
 863  8A07
 864  8A07              ;!  Una alimaña menos!!!!!!!!!1
 865  8A07
 866  8A07              ; Se trataba de una Entidad_guía ???
 867  8A07
 868  8A07 3A 0C 88     	ld a,(Ctrl_2)
 869  8A0A CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 870  8A0C 28 05        	jr z,5F
 871  8A0E
 872  8A0E 21 45 88     	ld hl,Ctrl_3
 873  8A11 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 874  8A13
 875  8A13              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 876  8A13              ;!! _generado puede ser distinto, (aletoriedad).
 877  8A13
 878  8A13 CD 2D 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 879  8A16 21 30 88     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 880  8A19 35           	dec (hl)
 881  8A1A 21 31 88     	ld hl,Entidades_en_curso
 882  8A1D 35           	dec (hl)
 883  8A1E 21 2F 88     	ld hl,Numero_de_entidades
 884  8A21 35           	dec (hl)
 885  8A22 18 32        	jr 3F
 886  8A24
 887  8A24              ; -----
 888  8A24
 889  8A24              ;	`Movemos´ la explosión.
 890  8A24
 891  8A24 2A F3 87     4 ld hl,(Puntero_DESPLZ_der)
 892  8A27 23           	inc hl
 893  8A28 23           	inc hl
 894  8A29 22 F3 87     	ld (Puntero_DESPLZ_der),hl
 895  8A2C CD AF 8B     	call Extrae_address
 896  8A2F 22 E9 87     	ld (Puntero_objeto),hl
 897  8A32
 898  8A32 21 0D 88     	ld hl,Frames_explosion
 899  8A35 35           	dec (hl)
 900  8A36
 901  8A36 21 07 88     	ld hl,Ctrl_0
 902  8A39 CB E6        	set 4,(hl)
 903  8A3B
 904  8A3B 18 19        	jr 3F
 905  8A3D
 906  8A3D              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 907  8A3D
 908  8A3D AF           2 xor a
 909  8A3E 32 07 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 910  8A41
 911  8A41              ; Movemos Entidades malignas.
 912  8A41              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 913  8A41
 914  8A41              ;	ld a,(Ctrl_2)
 915  8A41              ;	bit 5,a
 916  8A41              ;	jr nz,8F
 917  8A41
 918  8A41              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 919  8A41              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 920  8A41              ;	jr 7F
 921  8A41
 922  8A41              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 923  8A41
 924  8A41              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 925  8A41              ;	bit 4,a
 926  8A41              ;	ret z
 927  8A41
 928  8A41              ; Ha habido desplazamiento de la entidad maligna.
 929  8A41              ; Ha llegado a zona de AMADEUS ???
 930  8A41
 931  8A41 3A EC 87     7 ld a,(Coordenada_y)
 932  8A44 FE 14        	cp $14
 933  8A46 38 08        	jr c,1F
 934  8A48
 935  8A48              ; ---------
 936  8A48
 937  8A48              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 938  8A48              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 939  8A48
 940  8A48 F3           	di
 941  8A49 CD A3 8E     	call Genera_coordenadas_X
 942  8A4C CD DF 8E     	call Compara_coordenadas_X
 943  8A4F FB           	ei
 944  8A50
 945  8A50              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 946  8A50
 947  8A50              ; ---------
 948  8A50
 949  8A50              1
 950  8A50
 951  8A50              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 952  8A50 CD AF 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 953  8A53 CD 55 8B     	call Limpia_Variables_de_borrado
 954  8A56
 955  8A56 C9           3 ret
 956  8A57
 957  8A57              ; --------------------------------------------------------------------------------------------------------------
 958  8A57              ;
 959  8A57              ;	29/1/23
 960  8A57
 961  8A57              Mov_Amadeus
 962  8A57
 963  8A57              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 964  8A57
 965  8A57 CD A8 98     	call Mov_right
 966  8A5A
 967  8A5A 3A 07 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 968  8A5D CB 67        	bit 4,a
 969  8A5F C8           	ret z
 970  8A60
 971  8A60              ; ---------
 972  8A60
 973  8A60              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 974  8A60 CD 9F 8C     	call Repone_datos_de_borrado_Amadeus
 975  8A63 CD 55 8B     	call Limpia_Variables_de_borrado
 976  8A66
 977  8A66 C9           	ret
 978  8A67
 979  8A67              ; -----------------------------------------------------------------------------------
 980  8A67              ;
 981  8A67              ;	20/01/24
 982  8A67              ;
 983  8A67              ;
 984  8A67
 985  8A67              Construye_movimientos_masticados_entidad
 986  8A67
 987  8A67 2A 03 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 988  8A6A E5           	push hl
 989  8A6B
 990  8A6B CD AF 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 991  8A6E              ;															; _ el (Contador_de_mov_masticados).
 992  8A6E CD B5 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 993  8A71              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 994  8A71 CD 04 98     	call Recompone_posicion_inicio
 995  8A74
 996  8A74 CD DA 91     1 call Draw
 997  8A77 CD 93 8A     	call Guarda_movimiento_masticado
 998  8A7A CD 6D 9D     	call Movimiento
 999  8A7D
1000  8A7D 3A 45 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1001  8A80 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1002  8A82 28 F0        	jr z,1B
1003  8A84
1004  8A84              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1005  8A84              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1006  8A84
1007  8A84 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1008  8A85 22 03 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1009  8A88
1010  8A88
1011  8A88              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1012  8A88
1013  8A88 CD DE 9E     	call Vuelca_en_Contador_general_de_mov_masticados
1014  8A8B
1015  8A8B              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1016  8A8B              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1017  8A8B
1018  8A8B ED 4B 05 88  	ld bc,(Contador_de_mov_masticados)
1019  8A8F 71           	ld (hl),c
1020  8A90 23           	inc hl
1021  8A91 70           	ld (hl),b
1022  8A92
1023  8A92 C9           	ret
1024  8A93
1025  8A93              ; -----------------------------------------------------------------------------------
1026  8A93              ;
1027  8A93              ;	28/12/23
1028  8A93              ;
1029  8A93              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1030  8A93              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1031  8A93
1032  8A93              Guarda_movimiento_masticado
1033  8A93
1034  8A93 ED 73 37 88  	ld (Stack),sp
1035  8A97 ED 7B 03 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1036  8A9B
1037  8A9B E5           	push hl
1038  8A9C DD E5            push ix
1039  8A9E FD E5            push iy
1040  8AA0
1041  8AA0 ED 7B 37 88      ld sp,(Stack)
1042  8AA4
1043  8AA4              ;    push hl
1044  8AA4
1045  8AA4 2A 05 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1046  8AA7 23           	inc hl
1047  8AA8 22 05 88     	ld (Contador_de_mov_masticados),hl
1048  8AAB
1049  8AAB              ;	pop hl
1050  8AAB
1051  8AAB CD AF 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1052  8AAE              ;															; _ el (Contador_de_mov_masticados).
1053  8AAE C9               ret
1054  8AAF
1055  8AAF              ; --------------------------------------------------------------------------------------------------------------
1056  8AAF              ;
1057  8AAF              ;	12/1/24
1058  8AAF              ;
1059  8AAF              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1060  8AAF
1061  8AAF              Actualiza_Puntero_de_almacen_de_mov_masticados
1062  8AAF
1063  8AAF              ;	push hl
1064  8AAF              ;	push bc
1065  8AAF
1066  8AAF 2A 03 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1067  8AB2 01 06 00     	ld bc,6
1068  8AB5 A7           	and a
1069  8AB6 ED 4A        	adc hl,bc
1070  8AB8 22 03 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1071  8ABB
1072  8ABB              ;	pop bc
1073  8ABB              ;	pop hl
1074  8ABB
1075  8ABB C9           	ret
1076  8ABC
1077  8ABC              ; --------------------------------------------------------------------------------------------------------------
1078  8ABC              ;
1079  8ABC              ;	15/01/24
1080  8ABC              ;
1081  8ABC              ;	Cargamos los registros_
1082  8ABC              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1083  8ABC              ;
1084  8ABC              ;	HL contiene la dirección de la rutina de impresión.
1085  8ABC              ;	IX contiene el puntero de impresión.
1086  8ABC              ;	IY contiene (Puntero_objeto).
1087  8ABC
1088  8ABC
1089  8ABC ED 73 37 88  Cargamos_registros_con_mov_masticado ld (Stack),sp
1090  8AC0 ED 7B 03 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1091  8AC4
1092  8AC4 FD E1        	pop iy
1093  8AC6 DD E1        	pop ix
1094  8AC8 E1           	pop hl
1095  8AC9
1096  8AC9 ED 73 03 88  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1097  8ACD
1098  8ACD ED 7B 37 88  	ld sp,(Stack)
1099  8AD1
1100  8AD1 C9           	ret
1101  8AD2
1102  8AD2              ; --------------------------------------------------------------------------------------------------------------
1103  8AD2              ;
1104  8AD2              ;	28/12/23
1105  8AD2              ;
1106  8AD2              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1107  8AD2              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1108  8AD2
1109  8AD2              Guarda_foto_entidad_a_pintar
1110  8AD2
1111  8AD2 3A 07 88     	ld a,(Ctrl_0)
1112  8AD5 CB 77        	bit 6,a
1113  8AD7 28 0E        	jr z,5F
1114  8AD9
1115  8AD9              ;	Guarda la foto de Amadeus.
1116  8AD9
1117  8AD9 CD DA 91     	call Draw
1118  8ADC
1119  8ADC CD 93 8A     	call Guarda_movimiento_masticado	;! Provisional
1120  8ADF
1121  8ADF CD 16 71     	call Guarda_foto_registros
1122  8AE2
1123  8AE2 F3           	di
1124  8AE3 18 FE        	jr $
1125  8AE5 FB           	ei
1126  8AE6
1127  8AE6 C9           	ret
1128  8AE7
1129  8AE7              ; ENTIDADES!
1130  8AE7              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1131  8AE7
1132  8AE7 3A 45 88     5 ld a,(Ctrl_3)
1133  8AEA CB 5F        	bit 3,a
1134  8AEC 28 01        	jr z,1F
1135  8AEE
1136  8AEE              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1137  8AEE
1138  8AEE              4
1139  8AEE              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1140  8AEE C9           	ret
1141  8AEF
1142  8AEF              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1143  8AEF
1144  8AEF 3A 45 88     1 ld a,(Ctrl_3)
1145  8AF2 CB 57        	bit 2,a
1146  8AF4 20 10        	jr nz,6F
1147  8AF6
1148  8AF6              ; Entidad guía o fantasma ???
1149  8AF6
1150  8AF6 3A 0C 88     	ld a,(Ctrl_2)
1151  8AF9 CB 6F        	bit 5,a
1152  8AFB 20 10        	jr nz,3F
1153  8AFD
1154  8AFD              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1155  8AFD
1156  8AFD 18 EF        	jr 4B
1157  8AFF
1158  8AFF              ; ENTIDAD_GUÍA:
1159  8AFF              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1160  8AFF              ; _guardando "movimientos_masticados".
1161  8AFF
1162  8AFF 3A 45 88     2 ld a,(Ctrl_3)
1163  8B02 CB 57        	bit 2,a
1164  8B04 28 07        	jr z,3F
1165  8B06
1166  8B06              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1167  8B06              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1168  8B06
1169  8B06 CB 97        6 res 2,a
1170  8B08 CB DF        	set 3,a
1171  8B0A 32 45 88     	ld (Ctrl_3),a
1172  8B0D
1173  8B0D
1174  8B0D              ;	Esto sólo lo ejecuta una entidad guía.
1175  8B0D
1176  8B0D CD DA 91     3 	call Draw
1177  8B10 CD 93 8A     	call Guarda_movimiento_masticado
1178  8B13 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1179  8B16
1180  8B16              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1181  8B16              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1182  8B16
1183  8B16              ;	call Convierte_guia_en_fantasma
1184  8B16 C9           	ret
1185  8B17
1186  8B17              ; --------------------------------------------------------------------------------------------------------------
1187  8B17              ;
1188  8B17              ;	19/9/23
1189  8B17
1190  8B17              ;Prepara_var_pintado
1191  8B17
1192  8B17              ;	ld hl,Filas
1193  8B17              ;	ld de,Variables_de_pintado
1194  8B17              ;	ld bc,8
1195  8B17              ;	ldir
1196  8B17              ;	ret
1197  8B17
1198  8B17              ; --------------------------------------------------------------------------------------------------------------
1199  8B17
1200  8B17              ;Repone_pintar
1201  8B17
1202  8B17              ;	ld hl,Variables_de_pintado
1203  8B17              ;	ld de,Filas
1204  8B17              ;	ld bc,8
1205  8B17              ;	ldir
1206  8B17              ;	ret
1207  8B17
1208  8B17              ; *************************************************************************************************************************************************************
1209  8B17              ;
1210  8B17              ; 8/1/23
1211  8B17              ;
1212  8B17              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1213  8B17              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1214  8B17              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1215  8B17
1216  8B17              ; Destruye HL y DE !!!!!
1217  8B17
1218  8B17              Inicia_punteros_de_cajas
1219  8B17
1220  8B17 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1221  8B1A CD AF 8B         call Extrae_address
1222  8B1D 22 29 88         ld (Puntero_store_caja),hl
1223  8B20 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1224  8B23 22 2D 88     	ld (Indice_restore_caja),hl
1225  8B26 CD AF 8B     	call Extrae_address
1226  8B29 22 2B 88     	ld (Puntero_restore_caja),hl
1227  8B2C C9               ret
1228  8B2D
1229  8B2D              ; *************************************************************************************************************************************************************
1230  8B2D              ;
1231  8B2D              ; 8/1/23
1232  8B2D              ;
1233  8B2D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1234  8B2D
1235  8B2D 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1236  8B30 22 48 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1237  8B33 C9           	ret
1238  8B34 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1239  8B37 22 4A 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1240  8B3A C9           	ret
1241  8B3B
1242  8B3B              ; -------------------------------------------------------------------------------------------------------------
1243  8B3B              ;
1244  8B3B              ; 21/9/23
1245  8B3B              ;
1246  8B3B
1247  8B3B              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1248  8B3B
1249  8B3B              Limpia_album_Amadeus
1250  8B3B
1251  8B3B 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1252  8B3E 7E           	ld a,(hl)
1253  8B3F A7           	and a
1254  8B40 C8           	ret z
1255  8B41
1256  8B41 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1257  8B44 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1258  8B47 01 0B 00     	ld bc,11
1259  8B4A AF           	xor a
1260  8B4B 77           	ld (hl),a
1261  8B4C ED B0        	ldir
1262  8B4E
1263  8B4E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1264  8B51 22 43 88     	ld (End_Snapshot_Amadeus),hl
1265  8B54
1266  8B54 C9           	ret
1267  8B55
1268  8B55 21 FB 87     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1269  8B58 11 FC 87     	ld de,Variables_de_borrado+1
1270  8B5B 01 05 00     	ld bc,5
1271  8B5E AF           	xor a
1272  8B5F 77           	ld (hl),a
1273  8B60 ED B0        	ldir
1274  8B62 C9           	ret
1275  8B63
1276  8B63              ; -------------------------------------------------------------------------------------------------------------
1277  8B63              ;
1278  8B63              ; 8/9/23
1279  8B63              ;
1280  8B63
1281  8B63              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1282  8B63              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1283  8B63
1284  8B63              Calcula_numero_de_malotes
1285  8B63
1286  8B63 21 00 70     	ld hl,Album_de_fotos
1287  8B66 EB           	ex de,hl
1288  8B67 2A 3D 88     	ld hl,(Stack_snapshot)
1289  8B6A
1290  8B6A 06 00        	ld b,0
1291  8B6C 7D           	ld a,l
1292  8B6D 93           	sub e
1293  8B6E 28 07        	jr z,1F
1294  8B70
1295  8B70              ; Nº de malotes no es "0".
1296  8B70
1297  8B70 D6 06        2 sub 6
1298  8B72 04           	inc b
1299  8B73 A7           	and a
1300  8B74 20 FA        	jr nz,2B
1301  8B76 78           	ld a,b
1302  8B77
1303  8B77 32 32 88     1 ld (Numero_de_malotes),a
1304  8B7A C9           	ret
1305  8B7B
1306  8B7B              ; -------------------------------------------------------------------------------------------------------------
1307  8B7B              ;
1308  8B7B              ; 8/9/23
1309  8B7B              ;
1310  8B7B
1311  8B7B              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1312  8B7B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1313  8B7B
1314  8B7B              Calcula_malotes_Amadeus
1315  8B7B
1316  8B7B 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1317  8B7E EB           	ex de,hl
1318  8B7F 2A 43 88     	ld hl,(End_Snapshot_Amadeus)
1319  8B82
1320  8B82 7C           	ld a,h
1321  8B83 A7           	and a
1322  8B84 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1323  8B86
1324  8B86 06 00        	ld b,0
1325  8B88 7D           	ld a,l
1326  8B89 93           	sub e
1327  8B8A 28 07        	jr z,1F
1328  8B8C
1329  8B8C              ; Nº de malotes no es "0".
1330  8B8C
1331  8B8C D6 06        2 sub 6
1332  8B8E 04           	inc b
1333  8B8F A7           	and a
1334  8B90 20 FA        	jr nz,2B
1335  8B92 78           	ld a,b
1336  8B93
1337  8B93 32 32 88     1 ld (Numero_de_malotes),a
1338  8B96 C9           	ret
1339  8B97
1340  8B97              ; -------------------------------------------------------------------------------------------------------------
1341  8B97              ;
1342  8B97              ; 28/2/23
1343  8B97              ;
1344  8B97
1345  8B97              Calcula_numero_de_disparotes
1346  8B97
1347  8B97 21 56 70     	ld hl,Album_de_fotos_disparos
1348  8B9A EB           	ex de,hl
1349  8B9B 2A 41 88     	ld hl,(End_Snapshot_disparos)
1350  8B9E
1351  8B9E 06 00        	ld b,0
1352  8BA0 7D           	ld a,l
1353  8BA1 93           	sub e
1354  8BA2 28 07        	jr z,1F
1355  8BA4
1356  8BA4              ; Nº de malotes no es "0".
1357  8BA4
1358  8BA4 D6 06        2 sub 6
1359  8BA6 04           	inc b
1360  8BA7 A7           	and a
1361  8BA8 20 FA        	jr nz,2B
1362  8BAA 78           	ld a,b
1363  8BAB
1364  8BAB 32 47 88     1 ld (Numero_de_disparotes),a
1365  8BAE C9           	ret
1366  8BAF
1367  8BAF              ; *************************************************************************************************************************************************************
1368  8BAF              ;
1369  8BAF              ; 20/10/22
1370  8BAF              ;
1371  8BAF              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1372  8BAF              ;
1373  8BAF              ; Destruye el puntero y DE !!!!!
1374  8BAF
1375  8BAF 5E           Extrae_address ld e,(hl)
1376  8BB0 23           	inc hl
1377  8BB1 56           	ld d,(hl)
1378  8BB2 2B           	dec hl
1379  8BB3 EB           	ex de,hl
1380  8BB4 C9           	ret
1381  8BB5
1382  8BB5              ; *************************************************************************************************************************************************************
1383  8BB5              ;
1384  8BB5              ;	20/1/24
1385  8BB5              ;
1386  8BB5              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1387  8BB5              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1388  8BB5              ;
1389  8BB5              ;   Destruye HL y BC !!!!!,
1390  8BB5              ;
1391  8BB5              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1392  8BB5              ;					"0" ..... Izquierda.
1393  8BB5
1394  8BB5              Inicia_Puntero_objeto
1395  8BB5
1396  8BB5 3A F9 87     	ld a,(Cuad_objeto)
1397  8BB8 E6 01        	and 1
1398  8BBA F5           	push af
1399  8BBB CC D7 8B     	call z,Inicia_puntero_objeto_izq
1400  8BBE F1           	pop af
1401  8BBF C8           	ret z
1402  8BC0 CD C4 8B     	call Inicia_puntero_objeto_der
1403  8BC3 C9           	ret
1404  8BC4
1405  8BC4              ; Arrancamos desde la parte izquierda de la pantalla.
1406  8BC4              ; Iniciamos (Indice_Sprite_der).
1407  8BC4
1408  8BC4 2A EF 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1409  8BC7 22 F3 87     	ld (Puntero_DESPLZ_der),hl
1410  8BCA CD AF 8B     	call Extrae_address
1411  8BCD 22 E9 87     	ld (Puntero_objeto),hl
1412  8BD0
1413  8BD0 2A F1 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1414  8BD3 22 F5 87     	ld (Puntero_DESPLZ_izq),hl
1415  8BD6 C9           	ret
1416  8BD7
1417  8BD7              ; Arrancamos desde la parte derecha de la pantalla.
1418  8BD7              ; Iniciamos (Indice_Sprite_izq).
1419  8BD7
1420  8BD7 2A F1 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1421  8BDA 22 F5 87     	ld (Puntero_DESPLZ_izq),hl
1422  8BDD CD AF 8B     	call Extrae_address
1423  8BE0 22 E9 87     	ld (Puntero_objeto),hl
1424  8BE3
1425  8BE3 2A EF 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1426  8BE6 22 F3 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1427  8BE9 C9           	ret
1428  8BEA
1429  8BEA              ; *************************************************************************************************************************************************************
1430  8BEA              ;
1431  8BEA              ;	21/12/23
1432  8BEA              ;
1433  8BEA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1434  8BEA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1435  8BEA
1436  8BEA              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1437  8BEA              ;	_de la 2ª y 3ª entidad respectivamente.
1438  8BEA
1439  8BEA              Store_Restore_cajas
1440  8BEA
1441  8BEA              ; 	Entidad_sospechosa. 20/4/23
1442  8BEA
1443  8BEA              ;	ld a,(Impacto)
1444  8BEA              ;	and a
1445  8BEA              ;	jr z,1F
1446  8BEA
1447  8BEA              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1448  8BEA              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1449  8BEA              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1450  8BEA              ;	adc hl,bc 											; _ "0" más adelante.
1451  8BEA              ;	ld (Entidad_sospechosa_de_colision),hl
1452  8BEA
1453  8BEA              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1454  8BEA
1455  8BEA              ;	jr $
1456  8BEA
1457  8BEA
1458  8BEA              ;1 ld hl,(Puntero_restore_caja)
1459  8BEA              ;	ld a,(hl)
1460  8BEA              ;	and a
1461  8BEA              ;	push af
1462  8BEA              ;	jr z,2F
1463  8BEA
1464  8BEA              ;	di
1465  8BEA              ;	jr $
1466  8BEA              ;	ei
1467  8BEA
1468  8BEA              ;	di
1469  8BEA              ;	ld de,Variables_DRAW
1470  8BEA              ;	ld bc,42
1471  8BEA              ;	ldir
1472  8BEA              ;	ei
1473  8BEA
1474  8BEA              ;2 call Incrementa_punteros_de_cajas
1475  8BEA
1476  8BEA
1477  8BEA C9           	ret
1478  8BEB
1479  8BEB              ; **************************************************************************************************
1480  8BEB              ;
1481  8BEB              ;	21/12/23
1482  8BEB              ;
1483  8BEB              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1484  8BEB
1485  8BEB E5           Restore_entidad push hl
1486  8BEC D5           	push de
1487  8BED C5            	push bc
1488  8BEE
1489  8BEE 2A 29 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1490  8BF1 11 E4 87     	ld de,Variables_DRAW
1491  8BF4 01 2A 00     	ld bc,42
1492  8BF7 ED B0        	ldir
1493  8BF9
1494  8BF9 C1           	pop bc
1495  8BFA D1           	pop de
1496  8BFB E1           	pop hl
1497  8BFC C9           	ret
1498  8BFD
1499  8BFD              ; **************************************************************************************************
1500  8BFD              ;
1501  8BFD              ;	08/05/23
1502  8BFD              ;
1503  8BFD              ;	Incrementamos los dos punteros de entidades. (+1).
1504  8BFD
1505  8BFD              Incrementa_punteros_de_cajas
1506  8BFD
1507  8BFD 2A 2B 88     	ld hl,(Puntero_restore_caja)
1508  8C00 22 29 88     	ld (Puntero_store_caja),hl
1509  8C03 2A 2D 88     	ld hl,(Indice_restore_caja)
1510  8C06 23           	inc hl
1511  8C07 23           	inc hl
1512  8C08 22 2D 88     	ld (Indice_restore_caja),hl
1513  8C0B CD AF 8B         call Extrae_address
1514  8C0E 22 2B 88         ld (Puntero_restore_caja),hl
1515  8C11 C9               ret
1516  8C12
1517  8C12              ; **************************************************************************************************
1518  8C12              ;
1519  8C12              ;	21/12/23
1520  8C12              ;
1521  8C12              ;	Restore_Amadeus
1522  8C12              ;
1523  8C12              ;	Cargamos en DRAW los parámetros de Amadeus.
1524  8C12              ;
1525  8C12
1526  8C12 E5           Restore_Amadeus	push hl
1527  8C13 D5           	push de
1528  8C14 C5            	push bc
1529  8C15 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1530  8C18 11 E4 87     	ld de,Variables_DRAW
1531  8C1B 01 2A 00     	ld bc,42
1532  8C1E ED B0        	ldir
1533  8C20 C1           	pop bc
1534  8C21 D1           	pop de
1535  8C22 E1           	pop hl
1536  8C23 C9           	ret
1537  8C24
1538  8C24              ; *************************************************************************************************************************************************************
1539  8C24              ;
1540  8C24              ;	21/12/23
1541  8C24              ;
1542  8C24              ;	Store_Amadeus
1543  8C24              ;
1544  8C24              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1545  8C24              ;
1546  8C24              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1547  8C24              ;
1548  8C24              ;	DESTRUYE: HL y BC y DE.
1549  8C24
1550  8C24 21 E4 87     Store_Amadeus ld hl,Variables_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1551  8C27 01 2A 00     	ld bc,42
1552  8C2A ED B0        	ldir
1553  8C2C C9           	ret
1554  8C2D
1555  8C2D              ; -----------------------------------------------------------
1556  8C2D              ;
1557  8C2D              ;	21/12/23
1558  8C2D              ;
1559  8C2D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1560  8C2D              ;
1561  8C2D              ;	Destruye: HL,BC,DE,A
1562  8C2D
1563  8C2D 21 E4 87     Borra_datos_entidad ld hl,Variables_DRAW
1564  8C30 01 29 00     	ld bc,41
1565  8C33 AF           	xor a
1566  8C34 77           	ld (hl),a
1567  8C35 11 E5 87     	ld de,Variables_DRAW+1
1568  8C38 ED B0        	ldir
1569  8C3A C9           	ret
1570  8C3B
1571  8C3B              ; -----------------------------------------------------------
1572  8C3B
1573  8C3B              ; Teclado.
1574  8C3B
1575  8C3B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1576  8C3D DB FE        	in a,($fe)
1577  8C3F E6 01        	and $01
1578  8C41 28 02        	jr z,1f
1579  8C43 18 F6        	jr Pulsa_ENTER
1580  8C45 C9           1 ret
1581  8C46
1582  8C46              ; **************************************************************************************************
1583  8C46              ;
1584  8C46              ; Temporización.
1585  8C46
1586  8C46              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1587  8C46              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1588  8C46              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1589  8C46              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1590  8C46
1591  8C46              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1592  8C46              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1593  8C46              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1594  8C46
1595  8C46              ; A partir de $4f61 no hace falta DELAY.
1596  8C46
1597  8C46              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1598  8C46
1599  8C46 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1600  8C49 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1601  8C4A 78           	LD A,B
1602  8C4B A7           	AND A
1603  8C4C 20 FB        	JR NZ,wait
1604  8C4E C9           	RET
1605  8C4F
1606  8C4F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1607  8C4F              ;
1608  8C4F              ;	5/3/23
1609  8C4F              ;
1610  8C4F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1611  8C4F
1612  8C4F              Movimiento_Amadeus
1613  8C4F
1614  8C4F              ; Disparo.
1615  8C4F
1616  8C4F 3A 5D 88     	ld a,(Disparo_Amadeus)
1617  8C52 A7           	and a
1618  8C53 20 02        	jr nz,1F
1619  8C55 18 15        	jr 2F
1620  8C57
1621  8C57 3E F7        1 ld a,$f7													; "5" para disparar.
1622  8C59 DB FE        	in a,($fe)
1623  8C5B E6 10        	and $10
1624  8C5D
1625  8C5D F5           	push af
1626  8C5E CC 06 8D     	call z,Genera_disparo
1627  8C61 F1           	pop af
1628  8C62 20 08        	jr nz,2F
1629  8C64
1630  8C64 3A 5D 88     	ld a,(Disparo_Amadeus)
1631  8C67 EE 01        	xor 1
1632  8C69 32 5D 88     	ld (Disparo_Amadeus),a
1633  8C6C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1634  8C6E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1635  8C70 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1636  8C72 CC CB 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1637  8C75
1638  8C75 3E F7        	ld a,$f7
1639  8C77 DB FE        	in a,($fe)
1640  8C79 E6 01        	and $01
1641  8C7B C8           	ret z
1642  8C7C
1643  8C7C 3E F7        	ld a,$f7
1644  8C7E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1645  8C80 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1646  8C82 CC A8 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1647  8C85 C9           	ret
1648  8C86
1649  8C86              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1650  8C86              ;
1651  8C86              ;	Rutina provisional para que los malotes cagen balas.
1652  8C86
1653  8C86              Detecta_disparo_entidad
1654  8C86
1655  8C86 3A 60 88     	ld a,(Disparo_entidad)
1656  8C89 A7           	and a
1657  8C8A C8           	ret z
1658  8C8B
1659  8C8B              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1660  8C8B
1661  8C8B              ;	ld a,$7f				; Detecta SPACE.
1662  8C8B              ;	in a,($fe)
1663  8C8B              ;	and 1
1664  8C8B              ;	ret nz
1665  8C8B
1666  8C8B CD 06 8D     	call Genera_disparo
1667  8C8E C9           	ret
1668  8C8F
1669  8C8F              ; ----------------------------------------------------------------------
1670  8C8F              ;
1671  8C8F              ;	8/9/23
1672  8C8F
1673  8C8F 2A 43 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1674  8C92 2B            	dec hl
1675  8C93 7E           	ld a,(hl)
1676  8C94 A7           	and a
1677  8C95 C8           	ret z										; Salimos si es álbum está vacío.
1678  8C96
1679  8C96 11 00 88     	ld de,Variables_de_borrado+5
1680  8C99 01 06 00     	ld bc,6
1681  8C9C ED B8        	lddr
1682  8C9E C9           	ret
1683  8C9F
1684  8C9F              ; ----------------------------------------------------------------------
1685  8C9F              ;
1686  8C9F              ;	9/9/23
1687  8C9F
1688  8C9F              Repone_datos_de_borrado_Amadeus
1689  8C9F
1690  8C9F 21 FB 87     	ld hl,Variables_de_borrado
1691  8CA2 11 AC 70     	ld de,Album_de_fotos_Amadeus
1692  8CA5 01 06 00     	ld bc,6
1693  8CA8 ED B0        	ldir
1694  8CAA
1695  8CAA EB           	ex de,hl
1696  8CAB 22 43 88     	ld (End_Snapshot_Amadeus),hl
1697  8CAE
1698  8CAE C9           	ret
1699  8CAF
1700  8CAF              ; ----------------------------------------------------------------------
1701  8CAF              ;
1702  8CAF              ;	27/10/23
1703  8CAF              ;
1704  8CAF
1705  8CAF              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1706  8CAF              ;	_ Album_de_fotos correspondiente.
1707  8CAF
1708  8CAF              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1709  8CAF              ;	_ durante el proceso de escritura.
1710  8CAF
1711  8CAF              Repone_datos_de_borrado
1712  8CAF
1713  8CAF F3           	di
1714  8CB0 ED 5B 3D 88  	ld de,(Stack_snapshot)
1715  8CB4 21 FB 87     	ld hl,Variables_de_borrado
1716  8CB7 01 06 00     	ld bc,6
1717  8CBA ED B0        	ldir
1718  8CBC FB           	ei
1719  8CBD
1720  8CBD EB           	ex de,hl
1721  8CBE 22 3D 88     	ld (Stack_snapshot),hl
1722  8CC1
1723  8CC1 C9           	ret
1724  8CC2
1725  8CC2              ; --------------------------------------------------------------------------------------
1726  8CC2
1727  8CC2              Pinta_Amadeus
1728  8CC2
1729  8CC2 CD 7B 8B        	call Calcula_malotes_Amadeus
1730  8CC5 CD 73 95     	call Extrae_foto_Amadeus
1731  8CC8 CD 3B 8B     	call Limpia_album_Amadeus
1732  8CCB
1733  8CCB C9           	ret
1734  8CCC
1735  8CCC              Pinta_entidades
1736  8CCC
1737  8CCC              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1738  8CCC
1739  8CCC 3A 45 88     	ld a,(Ctrl_3)
1740  8CCF CB 47        	bit 0,a
1741  8CD1 C8           	ret z
1742  8CD2
1743  8CD2 CD 63 8B     	call Calcula_numero_de_malotes
1744  8CD5 CD F1 94     	call Extrae_foto_entidades
1745  8CD8 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1746  8CDB
1747  8CDB C9           	ret
1748  8CDC
1749  8CDC              ; -----------------------------------------------------------------------------------
1750  8CDC              ;
1751  8CDC              ;	10/12/23
1752  8CDC              ;
1753  8CDC              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1754  8CDC
1755  8CDC              Actualiza_relojes
1756  8CDC
1757  8CDC 3A 45 88     	ld a,(Ctrl_3)
1758  8CDF CB 47        	bit 0,a
1759  8CE1 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1760  8CE2
1761  8CE2 21 58 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1762  8CE5 34           	inc (hl)
1763  8CE6
1764  8CE6 34           	inc (hl)
1765  8CE7 35           	dec (hl)
1766  8CE8 C0           	ret nz
1767  8CE9
1768  8CE9 21 59 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1769  8CEC 34           	inc (hl)
1770  8CED C9           	ret
1771  8CEE
1772  8CEE              ; ---------------------------------------------------------------
1773  8CEE              ;
1774  8CEE              ;	21/12/23
1775  8CEE
1776  8CEE              Guarda_parametros_DRAW
1777  8CEE
1778  8CEE 21 E4 87     	ld hl,Variables_DRAW
1779  8CF1 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1780  8CF4 01 2A 00     	ld bc,42
1781  8CF7 ED B0        	ldir
1782  8CF9 C9           	ret
1783  8CFA
1784  8CFA              Recupera_parametros_DRAW
1785  8CFA
1786  8CFA 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1787  8CFD 11 E4 87     	ld de,Variables_DRAW
1788  8D00 01 2A 00     	ld bc,42
1789  8D03 ED B0        	ldir
1790  8D05 C9           	ret
1791  8D06
1792  8D06              ; ---------------------------------------------------------------
1793  8D06
1794  8D06              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D06              ; ******************************************************************************************************************************************************************************************
   2+ 8D06              ;
   3+ 8D06              ;   21/07/23
   4+ 8D06              ;
   5+ 8D06              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D06              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D06              ;
   8+ 8D06              ;
   9+ 8D06              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D06              ;
  11+ 8D06              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D06              ;               _ hacen las entidades hacia abajo.
  13+ 8D06              ;
  14+ 8D06              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D06              ;
  16+ 8D06              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D06              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D06              ;
  19+ 8D06              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D06              ;           _ la bala.
  21+ 8D06              ;
  22+ 8D06              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D06              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D06              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D06              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D06              ;           _ en el momento de generarse la bala)).
  27+ 8D06
  28+ 8D06              Genera_disparo
  29+ 8D06
  30+ 8D06              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D06              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D06              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D06              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D06              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D06              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D06              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D06
  38+ 8D06              ; Exclusiones:
  39+ 8D06
  40+ 8D06 3A 11 88         ld a,(Vel_down)
  41+ 8D09 47               ld b,a
  42+ 8D0A 3A 57 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D0D B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D0E D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D0F 3A 08 88         ld a,(Columnas)
  46+ 8D12 47               ld b,a
  47+ 8D13 3A E6 87         ld a,(Columns)
  48+ 8D16 B8               cp b
  49+ 8D17 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D18
  51+ 8D18              ; ----- ----- -----
  52+ 8D18
  53+ 8D18 3A 07 88         ld a,(Ctrl_0)
  54+ 8D1B CB 77            bit 6,a
  55+ 8D1D 20 06            jr nz,14F
  56+ 8D1F
  57+ 8D1F 3A EC 87         ld a,(Coordenada_y)
  58+ 8D22 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D24 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D25
  61+ 8D25 21 00 80     14 ld hl,Indice_disparo
  62+ 8D28 3A ED 87         ld a,(CTRL_DESPLZ)
  63+ 8D2B 4F               ld c,a
  64+ 8D2C 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D2E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D2E              ;                                            ""        ""       "f9", B="1"
  67+ 8D2E              ;                                            ""        ""       "fb", B="2"
  68+ 8D2E              ;                                            ""        ""       "fb", B="3"
  69+ 8D2E A7               and a
  70+ 8D2F 28 10            jr z,1F
  71+ 8D31 E6 01            and 1
  72+ 8D33 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D34
  74+ 8D34 79               ld a,c
  75+ 8D35 16 F9            ld d,$f9
  76+ 8D37 23           2 inc hl
  77+ 8D38 23               inc hl
  78+ 8D39 04               inc b
  79+ 8D3A BA               cp d
  80+ 8D3B 28 04            jr z,1F
  81+ 8D3D 14               inc d
  82+ 8D3E 14               inc d
  83+ 8D3F 18 F6            jr 2B
  84+ 8D41
  85+ 8D41 CD AF 8B     1 call Extrae_address
  86+ 8D44 E5               push hl
  87+ 8D45 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D47 DD 21 B9 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D4B
  90+ 8D4B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D4B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D4B
  93+ 8D4B 3A 07 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D4E CB 77            bit 6,a
  95+ 8D50 20 04            jr nz,19F
  96+ 8D52
  97+ 8D52 AF               xor a
  98+ 8D53 32 60 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D56
 100+ 8D56 3A F9 87     19 ld a,(Cuad_objeto)
 101+ 8D59 FE 02            cp 2
 102+ 8D5B 38 66            jr c,3F
 103+ 8D5D 28 64            jr z,3F
 104+ 8D5F
 105+ 8D5F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D5F
 107+ 8D5F E6 01            and 1
 108+ 8D61 28 30            jr z,4F
 109+ 8D63
 110+ 8D63              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D63              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D63              ;
 113+ 8D63              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D63              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D63              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D63
 117+ 8D63 2A E7 87     	ld hl,(Posicion_actual)
 118+ 8D66
 119+ 8D66              ;   Amadeus o entidad ???.
 120+ 8D66
 121+ 8D66 3A 07 88         ld a,(Ctrl_0)
 122+ 8D69 CB 77            bit 6,a
 123+ 8D6B 28 0A            jr z,8F
 124+ 8D6D
 125+ 8D6D              ; 	Dispara Amadeus.
 126+ 8D6D
 127+ 8D6D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D6F CD E2 94         call PreviousScan
 129+ 8D72 CD E2 94         call PreviousScan
 130+ 8D75
 131+ 8D75              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D75              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D75              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D75              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D75
 136+ 8D75 18 11            jr 10F
 137+ 8D77
 138+ 8D77              ; 	Dispara Entidad.
 139+ 8D77
 140+ 8D77 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D7A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D7A
 143+ 8D7A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D7A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D7A
 146+ 8D7A C5               push bc
 147+ 8D7B 06 10            ld b,16
 148+ 8D7D CD D3 94     9 call NextScan
 149+ 8D80 10 FB            djnz 9B
 150+ 8D82 C1               pop bc
 151+ 8D83 CD ED 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D86 18 06            jr 17F
 153+ 8D88
 154+ 8D88              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D88              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D88              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D88              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D88
 159+ 8D88 CD ED 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D8B CD 62 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8D8E              ;                                                      ; _al generar el disparo.
 162+ 8D8E
 163+ 8D8E              ; 	LLegados a este punto tendremos:
 164+ 8D8E              ;
 165+ 8D8E              ;       Puntero_objeto_disparo en IY.
 166+ 8D8E              ;       Rutinas_de_impresion en IX.
 167+ 8D8E              ;       Puntero_de_impresion en HL.
 168+ 8D8E              ;       Impacto/Dirección en BC.
 169+ 8D8E
 170+ 8D8E CD F5 8D     17 call Almacena_disparo
 171+ 8D91 18 52            jr 6F                                             ; RET.
 172+ 8D93
 173+ 8D93              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8D93              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8D93              ;
 176+ 8D93              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8D93              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8D93              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8D93
 180+ 8D93 2A E7 87     4 ld hl,(Posicion_actual)
 181+ 8D96
 182+ 8D96              ;   Amadeus o entidad ???.
 183+ 8D96
 184+ 8D96 3A 07 88         ld a,(Ctrl_0)
 185+ 8D99 CB 77            bit 6,a
 186+ 8D9B 28 0A            jr z,11F
 187+ 8D9D
 188+ 8D9D              ; 	Dispara Amadeus.
 189+ 8D9D
 190+ 8D9D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8D9F CD E2 94         call PreviousScan
 192+ 8DA2 CD E2 94         call PreviousScan
 193+ 8DA5
 194+ 8DA5              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DA5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DA5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DA5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DA5
 199+ 8DA5 18 11            jr 13F
 200+ 8DA7
 201+ 8DA7              ; 	Dispara Entidad.
 202+ 8DA7
 203+ 8DA7 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DAA              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DAA
 206+ 8DAA              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DAA              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DAA
 209+ 8DAA C5               push bc
 210+ 8DAB 06 10            ld b,16
 211+ 8DAD CD D3 94     12 call NextScan
 212+ 8DB0 10 FB            djnz 12B
 213+ 8DB2 C1               pop bc
 214+ 8DB3
 215+ 8DB3 CD E6 8D         call Ajusta_disparo_parte_derecha
 216+ 8DB6 18 06            jr 18F
 217+ 8DB8
 218+ 8DB8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DB8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DB8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DB8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DB8
 223+ 8DB8 CD E6 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8DBB CD 62 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DBE              ;                                                       ; _al generar el disparo.
 226+ 8DBE
 227+ 8DBE              ; LLegados a este punto tendremos:
 228+ 8DBE              ;
 229+ 8DBE              ;       Puntero_objeto_disparo en IY.
 230+ 8DBE              ;       Rutinas_de_impresion en IX.
 231+ 8DBE              ;       Puntero_de_impresion en HL.
 232+ 8DBE              ;       Impacto/Dirección en BC.
 233+ 8DBE
 234+ 8DBE CD F5 8D     18 call Almacena_disparo
 235+ 8DC1 18 22            jr 6F                                               ; RET.
 236+ 8DC3
 237+ 8DC3              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DC3
 239+ 8DC3 28 11        3 jr z,5F
 240+ 8DC5
 241+ 8DC5              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DC5              ;
 243+ 8DC5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DC5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DC5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DC5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DC5
 248+ 8DC5              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DC5              ;	   ""        ""       "f9", B="1"
 250+ 8DC5              ;	   ""        ""       "fb", B="2"
 251+ 8DC5              ; 	   ""        ""       "fb", B="3"
 252+ 8DC5
 253+ 8DC5 2A E7 87     	ld hl,(Posicion_actual)
 254+ 8DC8 CD D3 94     	call NextScan
 255+ 8DCB
 256+ 8DCB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DCB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DCB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DCB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DCB
 261+ 8DCB CD ED 8D         call Ajusta_disparo_parte_izquierda
 262+ 8DCE
 263+ 8DCE              ; 	No se produce impacto. B="$80"
 264+ 8DCE              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DCE
 266+ 8DCE 01 80 80         ld bc,$8080
 267+ 8DD1
 268+ 8DD1              ; 	LLegados a este punto tendremos:
 269+ 8DD1              ;
 270+ 8DD1              ;       Puntero_objeto_disparo en IY.
 271+ 8DD1              ;       Rutinas_de_impresion en IX.
 272+ 8DD1              ;       Puntero_de_impresion en HL.
 273+ 8DD1              ;       Impacto/Dirección en BC.
 274+ 8DD1
 275+ 8DD1 CD F5 8D         call Almacena_disparo
 276+ 8DD4 18 0F            jr 6F                                           ; RET.
 277+ 8DD6
 278+ 8DD6              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DD6              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DD6              ;
 281+ 8DD6              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DD6              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DD6              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DD6              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DD6
 286+ 8DD6 2A E7 87     5 ld hl,(Posicion_actual)
 287+ 8DD9 CD D3 94     	call NextScan
 288+ 8DDC
 289+ 8DDC              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DDC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DDC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DDC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DDC
 294+ 8DDC CD E6 8D         call Ajusta_disparo_parte_derecha
 295+ 8DDF
 296+ 8DDF              ; 	No se produce impacto. B="$80"
 297+ 8DDF              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8DDF
 299+ 8DDF 01 80 80     15 ld bc,$8080
 300+ 8DE2
 301+ 8DE2              ; 	LLegados a este punto tendremos:
 302+ 8DE2              ;
 303+ 8DE2              ;       Puntero_objeto_disparo en IY.
 304+ 8DE2              ;       Rutinas_de_impresion en IX.
 305+ 8DE2              ;       Puntero_de_impresion en HL.
 306+ 8DE2              ;       Impacto/Dirección en BC.
 307+ 8DE2
 308+ 8DE2 CD F5 8D         call Almacena_disparo
 309+ 8DE5
 310+ 8DE5 C9           6 ret
 311+ 8DE6
 312+ 8DE6              ; ----------------------------------------------------------------
 313+ 8DE6              ;
 314+ 8DE6              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8DE6              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8DE6              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8DE6
 318+ 8DE6 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8DE7 FE 02            cp 2
 320+ 8DE9 38 01            jr c,1F
 321+ 8DEB 23               inc hl
 322+ 8DEC C9           1 ret
 323+ 8DED
 324+ 8DED 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8DEE FE 01        	cp 1
 326+ 8DF0 20 01        	jr nz,1F
 327+ 8DF2 2B           	dec hl
 328+ 8DF3 2B           1 dec hl
 329+ 8DF4 C9               ret
 330+ 8DF5
 331+ 8DF5              ; ----------------------------------------------------------------
 332+ 8DF5              ;
 333+ 8DF5              ;   25/02/23
 334+ 8DF5              ;
 335+ 8DF5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8DF5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8DF5              ;
 338+ 8DF5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8DF5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8DF5
 341+ 8DF5              Almacena_disparo
 342+ 8DF5
 343+ 8DF5 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8DF6 F1               pop af
 345+ 8DF7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8DF8
 347+ 8DF8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8DF9 E6 01            and 1
 349+ 8DFB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8DFD              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8DFD              ; 	Dispara AMADEUS.
 352+ 8DFD
 353+ 8DFD              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8DFD              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8DFD              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8DFD              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8DFD
 358+ 8DFD C5               push bc
 359+ 8DFE 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E01 2A 4A 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E04 A7               and a
 362+ 8E05 ED 42            sbc hl,bc
 363+ 8E07 CC 34 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E0A C1               pop bc
 365+ 8E0B 28 54            jr z,4F
 366+ 8E0D
 367+ 8E0D 2A 4A 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E10 23               inc hl
 369+ 8E11 23               inc hl
 370+ 8E12 22 4A 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E15              ;                                                   ; _ Disparo_(+1).
 372+ 8E15 18 18            jr 2F
 373+ 8E17
 374+ 8E17              ; Dispara una entidad.
 375+ 8E17
 376+ 8E17 C5           1 push bc
 377+ 8E18 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E1B 2A 48 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E1E A7               and a
 380+ 8E1F ED 42            sbc hl,bc
 381+ 8E21 CC 2D 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E24 C1               pop bc
 383+ 8E25 28 3A            jr z,4F
 384+ 8E27
 385+ 8E27 2A 48 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E2A 23               inc hl
 387+ 8E2B 23               inc hl
 388+ 8E2C 22 48 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E2F              ;                                                   ; _ Disparo_(+1).
 390+ 8E2F CD AF 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E32              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E32              ;
 393+ 8E32              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E32              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E32              ;                                                     Puntero_de_impresion en HL.
 396+ 8E32              ;                                                     Impacto/Dirección en BC.
 397+ 8E32
 398+ 8E32 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E33 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E34 23               inc hl                                          ; _ al siguiente.
 401+ 8E35 A7               and a
 402+ 8E36 20 C0            jr nz,3B
 403+ 8E38
 404+ 8E38 08               ex af,af
 405+ 8E39 ED 73 37 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E3D F9               ld sp,hl
 407+ 8E3E
 408+ 8E3E DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E40 F5               push af                                         ; Puntero de impresión.
 410+ 8E41 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E43 C5               push bc                                         ; Control.
 412+ 8E44
 413+ 8E44 ED 7B 37 88      ld sp,(Stack)
 414+ 8E48
 415+ 8E48              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E48
 417+ 8E48 21 26 88     	ld hl,Ctrl_1
 418+ 8E4B CB C6        	set 0,(hl)
 419+ 8E4D
 420+ 8E4D DD E5        	push ix
 421+ 8E4F E1               pop hl
 422+ 8E50 F5               push af
 423+ 8E51 DD E1            pop ix
 424+ 8E53
 425+ 8E53 CD 16 71     	call Guarda_foto_registros
 426+ 8E56
 427+ 8E56 21 26 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E59 CB 86        	res 0,(hl)
 429+ 8E5B
 430+ 8E5B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E5B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E5B
 433+ 8E5B CD 34 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E5E CD 2D 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8E61
 436+ 8E61 C9           4 ret
 437+ 8E62
 438+ 8E62              ; ----------------------------------------------------------------
 439+ 8E62              ;
 440+ 8E62              ;   4/3/23
 441+ 8E62              ;
 442+ 8E62              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E62              ;   _ al generarse el disparo.
 444+ 8E62              ;
 445+ 8E62              ;       "$80" ..... No se produce colisión.
 446+ 8E62              ;       "$81" ..... Se produce colisión.
 447+ 8E62              ;
 448+ 8E62              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E62              ;         _ que forman el disparo.
 450+ 8E62
 451+ 8E62
 452+ 8E62              Comprueba_Colision
 453+ 8E62
 454+ 8E62              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E62
 456+ 8E62 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E64 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E65
 459+ 8E65 CD 9B 8E         call Modifica_H_Velocidad_disparo
 460+ 8E68
 461+ 8E68 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E69 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E6B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E6D
 465+ 8E6D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E6F CD 8B 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E72
 468+ 8E72 7B               ld a,e
 469+ 8E73 E6 01            and 1
 470+ 8E75 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E77              ;                                                  ; _ para activar IMPACTO.
 472+ 8E77 E1               pop hl
 473+ 8E78 E5               push hl
 474+ 8E79 CD D3 94         call NextScan
 475+ 8E7C
 476+ 8E7C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E7D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E7F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E81              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E81 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E83 CD 8B 8E         call Bucle_2
 482+ 8E86
 483+ 8E86 43           1 ld b,e
 484+ 8E87 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E88 FD E1            pop iy
 486+ 8E8A C9               ret
 487+ 8E8B
 488+ 8E8B              ; ---------- ----------
 489+ 8E8B
 490+ 8E8B 06 02        Bucle_2 ld b,2
 491+ 8E8D FD 7E 00     2 ld a,(iy)
 492+ 8E90 A6               and (hl)
 493+ 8E91 28 02            jr z,1F
 494+ 8E93 1E 81            ld e,$81
 495+ 8E95 23           1 inc hl
 496+ 8E96 FD 23            inc iy
 497+ 8E98 10 F3            djnz 2B
 498+ 8E9A C9               ret
 499+ 8E9B
 500+ 8E9B              ; ---------- ----------
 501+ 8E9B              ;
 502+ 8E9B              ;   21/7/23
 503+ 8E9B
 504+ 8E9B              Modifica_H_Velocidad_disparo
 505+ 8E9B
 506+ 8E9B 3A 57 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8E9E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EA0 D0               ret nc                                         ; _ incrementamos H.
 509+ 8EA1 24               inc h
 510+ 8EA2
 511+ 8EA2 C9               ret
 512+ 8EA3
 513+ 8EA3              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EA3              ;
 515+ 8EA3              ;   04/12/23
 516+ 8EA3              ;
 517+ 8EA3              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EA3              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EA3              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EA3              ;
 521+ 8EA3              ;   MODIFICA: HL,DE,B y A.
 522+ 8EA3
 523+ 8EA3              Genera_coordenadas_X
 524+ 8EA3
 525+ 8EA3              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EA3              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EA3
 528+ 8EA3              ;   Limpiamos almacenes.
 529+ 8EA3
 530+ 8EA3 CD D4 8E         call Limpia_Coordenadas_X
 531+ 8EA6
 532+ 8EA6              ;   Almacenamos coordenadas X.
 533+ 8EA6
 534+ 8EA6              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8EA6
 536+ 8EA6 2A 01 88         ld hl,(Puntero_de_impresion)
 537+ 8EA9 11 54 88         ld de,Coordenadas_X_Entidad
 538+ 8EAC 06 02            ld b,2
 539+ 8EAE
 540+ 8EAE 3A ED 87         ld a,(CTRL_DESPLZ)
 541+ 8EB1 A7               and a
 542+ 8EB2 28 01            jr z,1F
 543+ 8EB4 04               inc b
 544+ 8EB5
 545+ 8EB5 CD CB 8E     1 call Guarda_coordenadas_X
 546+ 8EB8
 547+ 8EB8              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8EB8
 549+ 8EB8 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8EBB 11 51 88         ld de,Coordenadas_X_Amadeus
 551+ 8EBE 06 02            ld b,2
 552+ 8EC0
 553+ 8EC0 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8EC3 A7               and a
 555+ 8EC4 28 01            jr z,2F
 556+ 8EC6 04               inc b
 557+ 8EC7
 558+ 8EC7 CD CB 8E     2 call Guarda_coordenadas_X
 559+ 8ECA
 560+ 8ECA              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8ECA
 562+ 8ECA C9               ret
 563+ 8ECB
 564+ 8ECB              ; ----- ----- ----- ----- -----
 565+ 8ECB
 566+ 8ECB 7D           Guarda_coordenadas_X  ld a,l
 567+ 8ECC E6 1F            and $1f
 568+ 8ECE 12           1 ld (de),a
 569+ 8ECF 3C               inc a
 570+ 8ED0 13               inc de
 571+ 8ED1 10 FB            djnz 1B
 572+ 8ED3 C9               ret
 573+ 8ED4
 574+ 8ED4 AF           Limpia_Coordenadas_X xor a
 575+ 8ED5 06 06            ld b,6
 576+ 8ED7 21 51 88         ld hl,Coordenadas_X_Amadeus
 577+ 8EDA 77           1 ld (hl),a
 578+ 8EDB 23               inc hl
 579+ 8EDC 10 FC            djnz 1B
 580+ 8EDE C9               ret
 581+ 8EDF
 582+ 8EDF              ; ----- ----- ----- ----- -----
 583+ 8EDF
 584+ 8EDF              Compara_coordenadas_X
 585+ 8EDF
 586+ 8EDF 06 03            ld b,3
 587+ 8EE1 11 56 88         ld de,Coordenadas_X_Entidad+2
 588+ 8EE4
 589+ 8EE4 1A               ld a,(de)
 590+ 8EE5 A7               and a
 591+ 8EE6 20 01            jr nz,2F
 592+ 8EE8 05               dec b
 593+ 8EE9
 594+ 8EE9 1B           2 dec de
 595+ 8EEA 1B               dec de
 596+ 8EEB 21 51 88         ld hl,Coordenadas_X_Amadeus
 597+ 8EEE
 598+ 8EEE D5           1 push de
 599+ 8EEF E5               push hl
 600+ 8EF0 C5               push bc
 601+ 8EF1
 602+ 8EF1 CD FB 8E         call Comparando
 603+ 8EF4
 604+ 8EF4 C1               pop bc
 605+ 8EF5 E1               pop hl
 606+ 8EF6 D1               pop de
 607+ 8EF7
 608+ 8EF7 13               inc de
 609+ 8EF8 10 F4            djnz 1B
 610+ 8EFA
 611+ 8EFA C9               ret
 612+ 8EFB
 613+ 8EFB              ; ----- ----- ----- ----- -----
 614+ 8EFB              ;
 615+ 8EFB              ;   4/12/23
 616+ 8EFB              ;
 617+ 8EFB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8EFB
 619+ 8EFB 06 03        Comparando ld b,3
 620+ 8EFD 1A               ld a,(de)
 621+ 8EFE 4E           2 ld c,(hl)
 622+ 8EFF B9               cp c
 623+ 8F00 28 04            jr z,1F
 624+ 8F02 23               inc hl
 625+ 8F03 10 F9            djnz 2B
 626+ 8F05 C9               ret
 627+ 8F06
 628+ 8F06 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F08 32 FA 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F0B 21 4C 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F0E CB D6            set 2,(hl)
 632+ 8F10 C9               ret
 633+ 8F11
 634+ 8F11              ; -----------------------------------------------------------------------
 635+ 8F11              ;
 636+ 8F11              ;   7/12/23
 637+ 8F11              ;
 638+ 8F11
 639+ 8F11              Detecta_colision_nave_entidad
 640+ 8F11
 641+ 8F11              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F11
 643+ 8F11 FD 2A E9 87      ld iy,(Puntero_objeto)
 644+ 8F15 2A 01 88         ld hl,(Puntero_de_impresion)
 645+ 8F18
 646+ 8F18 E5               push hl
 647+ 8F19
 648+ 8F19              ; ----- ----- -----
 649+ 8F19 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F1B 06 0A            ld b,10
 651+ 8F1D CD 4D 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F20 7B               ld a,e
 653+ 8F21 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F23 38 0E            jr c,3F
 655+ 8F25
 656+ 8F25              ; LLegados a este punto:
 657+ 8F25              ;
 658+ 8F25              ;   HAY COLISIÓN !!!!!.
 659+ 8F25              ;
 660+ 8F25              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F25              ;   SET el bit3 de (Impacto2).
 662+ 8F25              ;
 663+ 8F25              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F25
 665+ 8F25 21 FA 87         ld hl,Impacto
 666+ 8F28 36 01            ld (hl),1
 667+ 8F2A 21 4C 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F2D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F2F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F31
 671+ 8F31 18 18            jr 1F
 672+ 8F33
 673+ 8F33              ; -----
 674+ 8F33
 675+ 8F33 E1           3 pop hl
 676+ 8F34 CD D3 94         call NextScan
 677+ 8F37 E5               push hl
 678+ 8F38 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F39 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F3B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F3D 30 0C            jr nc,1F
 682+ 8F3F              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F3F 10 DC            djnz 2B
 684+ 8F41
 685+ 8F41              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F41
 687+ 8F41              ; LLegados a este punto:
 688+ 8F41              ;
 689+ 8F41              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F41              ;
 691+ 8F41              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F41              ;   RES el bit2 de (Impacto2).
 693+ 8F41              ;
 694+ 8F41              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F41              ;   Lo colocamos a "0".
 696+ 8F41
 697+ 8F41 21 4C 88         ld hl,Impacto2
 698+ 8F44 CB 96            res 2,(hl)
 699+ 8F46 2A 4D 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F49 36 00            ld (hl),0
 701+ 8F4B
 702+ 8F4B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F4C C9               ret
 704+ 8F4D
 705+ 8F4D               ; ---------- ----------
 706+ 8F4D
 707+ 8F4D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F4E 3A E6 87         ld a,(Columns)
 709+ 8F51 47               ld b,a
 710+ 8F52 FD 7E 00     2 ld a,(iy)
 711+ 8F55 BE               cp (hl)
 712+ 8F56 28 01            jr z,1F
 713+ 8F58
 714+ 8F58 1C               inc e
 715+ 8F59
 716+ 8F59 23           1 inc hl
 717+ 8F5A FD 23            inc iy
 718+ 8F5C 10 F4            djnz 2B
 719+ 8F5E C1               pop bc
 720+ 8F5F C9               ret
 721+ 8F60
 722+ 8F60              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F60              ;
 724+ 8F60              ;   13/03/23
 725+ 8F60              ;
 726+ 8F60              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F60              ;
 728+ 8F60              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F60
 730+ 8F60 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F63 7E               ld a,(hl)
 732+ 8F64 A7               and a
 733+ 8F65 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F66
 735+ 8F66 44               ld b,h
 736+ 8F67 4D               ld c,l
 737+ 8F68 2A 3F 88         ld hl,(Stack_snapshot_disparos)
 738+ 8F6B E5               push hl
 739+ 8F6C A7               and a
 740+ 8F6D ED 42            sbc hl,bc
 741+ 8F6F E5               push hl
 742+ 8F70 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F71
 744+ 8F71 E1               pop hl
 745+ 8F72 54               ld d,h
 746+ 8F73 5D               ld e,l
 747+ 8F74 1B               dec de
 748+ 8F75 ED B8            lddr                                                ; Limpiamos.
 749+ 8F77
 750+ 8F77 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8F7A 22 3F 88         ld (Stack_snapshot_disparos),hl
 752+ 8F7D
 753+ 8F7D C9               ret
 754+ 8F7E
 755+ 8F7E              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F7E              ;
 757+ 8F7E              ;   18/07/23
 758+ 8F7E              ;
 759+ 8F7E
 760+ 8F7E              Motor_de_disparos
 761+ 8F7E
 762+ 8F7E              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F7E
 764+ 8F7E 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F81 2A 4A 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F84
 767+ 8F84 CD AF 8B     2 call Extrae_address
 768+ 8F87 7E               ld a,(hl)
 769+ 8F88 A7               and a
 770+ 8F89 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F8B
 772+ 8F8B              ; ----- ----- ----- ----- ----- -----
 773+ 8F8B
 774+ 8F8B C5               push bc
 775+ 8F8C CD 50 90         call foto_disparo_a_borrar
 776+ 8F8F
 777+ 8F8F              ; Existe colisión con este disparo???
 778+ 8F8F
 779+ 8F8F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8F90 7E               ld a,(hl)
 781+ 8F91 2B               dec hl
 782+ 8F92 E6 01            and 1
 783+ 8F94 28 1D            jr z,9F
 784+ 8F96
 785+ 8F96              ;   En este punto:
 786+ 8F96              ;
 787+ 8F96              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8F96              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8F96              ;   _con la entidad).
 790+ 8F96              ;
 791+ 8F96              ;   Disparo_2A defw 0                                ; Control.
 792+ 8F96              ;    defw 0                                          ; Puntero objeto.
 793+ 8F96              ;    defw 0                                          ; Puntero de impresión.
 794+ 8F96              ;    defw 0                                          ; Rutina de impresión.
 795+ 8F96
 796+ 8F96 E5               push hl
 797+ 8F97
 798+ 8F97 06 04            ld b,4
 799+ 8F99 23           19 inc hl
 800+ 8F9A 10 FD            djnz 19B
 801+ 8F9C
 802+ 8F9C CD AF 8B         call Extrae_address
 803+ 8F9F CD AA 9B         call Genera_coordenadas_disparo
 804+ 8FA2
 805+ 8FA2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FA2
 807+ 8FA2 21 4F 88         ld hl,Coordenadas_disparo_certero
 808+ 8FA5 72               ld (hl),d
 809+ 8FA6 23               inc hl
 810+ 8FA7 73               ld (hl),e
 811+ 8FA8
 812+ 8FA8              ; Elimino el disparo de la base de datos.
 813+ 8FA8
 814+ 8FA8 E1               pop hl
 815+ 8FA9 CD CF 90         call Elimina_disparo_de_base_de_datos
 816+ 8FAC 21 4C 88         ld hl,Impacto2
 817+ 8FAF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FB1
 819+ 8FB1 18 06            jr 11F
 820+ 8FB3
 821+ 8FB3 CD 79 90     9 call Mueve_disparo
 822+ 8FB6 CD 50 90         call foto_disparo_a_borrar
 823+ 8FB9
 824+ 8FB9 C1           11 pop bc
 825+ 8FBA 18 04            jr 7F
 826+ 8FBC
 827+ 8FBC              ; ----- ----- ----- ----- ----- -----
 828+ 8FBC
 829+ 8FBC ED 42        1 sbc hl,bc
 830+ 8FBE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FC0
 832+ 8FC0 2A 4A 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FC3 23               inc hl
 834+ 8FC4 23               inc hl
 835+ 8FC5 22 4A 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FC8 18 BA            jr 2B
 837+ 8FCA
 838+ 8FCA CD 34 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FCD              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FCD
 841+ 8FCD              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FCD
 843+ 8FCD 01 6E 85         ld bc,Disparo_11
 844+ 8FD0 2A 48 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FD3
 846+ 8FD3 CD AF 8B     5 call Extrae_address
 847+ 8FD6 7E               ld a,(hl)
 848+ 8FD7 A7               and a
 849+ 8FD8 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FDA
 851+ 8FDA              ; ----- ----- ----- ----- ----- -----
 852+ 8FDA
 853+ 8FDA C5               push bc
 854+ 8FDB CD 50 90         call foto_disparo_a_borrar
 855+ 8FDE
 856+ 8FDE              ; Existe colisión con este disparo???
 857+ 8FDE
 858+ 8FDE 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8FDF 7E               ld a,(hl)
 860+ 8FE0 2B               dec hl
 861+ 8FE1 E6 01            and 1
 862+ 8FE3 28 4D            jr z,10F
 863+ 8FE5
 864+ 8FE5              ;! La colisión se produce con Amadeus???
 865+ 8FE5              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8FE5
 867+ 8FE5 E5               push hl
 868+ 8FE6
 869+ 8FE6 06 04            ld b,4
 870+ 8FE8 23           16 inc hl
 871+ 8FE9 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8FEB
 873+ 8FEB CD AF 8B         call Extrae_address
 874+ 8FEE CD AA 9B         call Genera_coordenadas_disparo
 875+ 8FF1
 876+ 8FF1 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8FF2 FE 16            cp $16
 878+ 8FF4 38 2A            jr c,15F
 879+ 8FF6
 880+ 8FF6
 881+ 8FF6              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8FF6
 883+ 8FF6 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8FF7
 885+ 8FF7              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8FF7
 887+ 8FF7 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 8FFA
 889+ 8FFA              ; Coordenada X de Amadeus en D.
 890+ 8FFA
 891+ 8FFA 7D               ld a,l
 892+ 8FFB E6 1F            and $1F
 893+ 8FFD 57               ld d,a
 894+ 8FFE
 895+ 8FFE 21 8A 85         ld hl,Amadeus_db+8
 896+ 9001 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9002
 898+ 9002 21 51 88         ld hl,Coordenadas_X_Amadeus
 899+ 9005 CD CB 8E         call Guarda_coordenadas_X
 900+ 9008
 901+ 9008 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9009
 903+ 9009              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9009
 905+ 9009 06 02            ld b,2
 906+ 900B C5           20 push bc
 907+ 900C
 908+ 900C 06 03            ld b,3
 909+ 900E 21 51 88         ld hl,Coordenadas_X_Amadeus
 910+ 9011 7E           18 ld a,(hl)
 911+ 9012 BA               cp d
 912+ 9013 20 04            jr nz,17F
 913+ 9015
 914+ 9015              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9015
 916+ 9015 C1               pop bc
 917+ 9016 E1               pop hl
 918+ 9017 18 0D            jr 14F
 919+ 9019
 920+ 9019 23           17 inc hl
 921+ 901A 10 F5            djnz 18B
 922+ 901C
 923+ 901C 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 901D
 925+ 901D C1               pop bc
 926+ 901E 10 EB            djnz 20B
 927+ 9020
 928+ 9020
 929+ 9020              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9020              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9020
 932+ 9020 E1           15 pop hl
 933+ 9021 23               inc hl
 934+ 9022 35               dec (hl)
 935+ 9023 2B               dec hl
 936+ 9024 18 0C            jr 10F
 937+ 9026
 938+ 9026              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9026              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9026
 941+ 9026 E5           14 push hl
 942+ 9027 CD CF 90         call Elimina_disparo_de_base_de_datos
 943+ 902A 21 4C 88         ld hl,Impacto2
 944+ 902D CB CE            set 1,(hl)
 945+ 902F E1               pop hl
 946+ 9030 18 06            jr 12F
 947+ 9032
 948+ 9032              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9032
 950+ 9032 CD 79 90     10 call Mueve_disparo
 951+ 9035 CD 50 90         call foto_disparo_a_borrar
 952+ 9038 C1           12 pop bc
 953+ 9039
 954+ 9039 18 04            jr 8F
 955+ 903B
 956+ 903B              ; ----- ----- ----- ----- ----- -----
 957+ 903B
 958+ 903B ED 42        4 sbc hl,bc
 959+ 903D 28 0A            jr z,6F
 960+ 903F
 961+ 903F 2A 48 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9042 23               inc hl
 963+ 9043 23               inc hl
 964+ 9044 22 48 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9047 18 8A            jr 5B
 966+ 9049
 967+ 9049 CD 2D 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 904C CD D4 8E         call Limpia_Coordenadas_X
 969+ 904F C9               ret
 970+ 9050
 971+ 9050              ; ------------------------------------------------------------------
 972+ 9050
 973+ 9050              foto_disparo_a_borrar
 974+ 9050
 975+ 9050 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9051 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9052 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9053
 979+ 9053 E5               push hl
 980+ 9054 23               inc hl
 981+ 9055 23               inc hl
 982+ 9056 ED 73 37 88      ld (Stack),sp
 983+ 905A F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 905B FD E1            pop iy
 985+ 905D DD E1            pop ix
 986+ 905F E1               pop hl
 987+ 9060 ED 7B 37 88      ld sp,(Stack)
 988+ 9064 3A 26 88         ld a,(Ctrl_1)
 989+ 9067 CB C7            set 0,a
 990+ 9069 32 26 88         ld (Ctrl_1),a
 991+ 906C CD 16 71         call Guarda_foto_registros
 992+ 906F 3A 26 88         ld a,(Ctrl_1)
 993+ 9072 CB 87            res 0,a
 994+ 9074 32 26 88         ld (Ctrl_1),a
 995+ 9077 E1               pop hl
 996+ 9078 C9               ret
 997+ 9079
 998+ 9079              ;---------------------------------------------------
 999+ 9079              ;
1000+ 9079              ;   18/07/23
1001+ 9079              ;
1002+ 9079
1003+ 9079              Mueve_disparo
1004+ 9079
1005+ 9079              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9079              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9079              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9079
1009+ 9079 E5               push hl
1010+ 907A
1011+ 907A 7E               ld a,(hl)
1012+ 907B
1013+ 907B 06 04            ld b,4
1014+ 907D 23           1 inc hl
1015+ 907E 10 FD            djnz 1B
1016+ 9080
1017+ 9080              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9080
1019+ 9080 CD AF 8B         call Extrae_address
1020+ 9083
1021+ 9083 E6 01            and 1
1022+ 9085 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9087
1024+ 9087              ; Disparo hacia arriba, (Amadeus).
1025+ 9087
1026+ 9087              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9087              ; _ de la dificultad.
1028+ 9087
1029+ 9087 CD E2 94         call PreviousScan
1030+ 908A CD E2 94         call PreviousScan
1031+ 908D CD E2 94         call PreviousScan
1032+ 9090 CD E2 94         call PreviousScan
1033+ 9093
1034+ 9093              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9093
1036+ 9093 7C               ld a,h
1037+ 9094 FE 40            cp $40
1038+ 9096 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9098
1040+ 9098              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9098
1042+ 9098 EB               ex de,hl
1043+ 9099 06 04            ld b,4
1044+ 909B 2B           6 dec hl
1045+ 909C 10 FD            djnz 6B
1046+ 909E
1047+ 909E CD CF 90         call Elimina_disparo_de_base_de_datos
1048+ 90A1 E1               pop hl
1049+ 90A2 18 10            jr 7F
1050+ 90A4
1051+ 90A4              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90A4              ; HL contiene el puntero de impresión del disparo.
1053+ 90A4              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90A4
1055+ 90A4 D5           3 push de
1056+ 90A5 C5               push bc
1057+ 90A6
1058+ 90A6 CD 62 8E         call Comprueba_Colision
1059+ 90A9
1060+ 90A9              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90A9
1062+ 90A9 78               ld a,b
1063+ 90AA
1064+ 90AA C1               pop bc
1065+ 90AB D1               pop de
1066+ 90AC
1067+ 90AC EB               ex de,hl
1068+ 90AD
1069+ 90AD 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90AE 23               inc hl                                      ; _ movimiento.
1071+ 90AF 72               ld (hl),d
1072+ 90B0
1073+ 90B0 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90B1
1075+ 90B1 23               inc hl                                      ; _ en curso.
1076+ 90B2 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90B3 2B               dec hl
1078+ 90B4
1079+ 90B4 C9           7 ret
1080+ 90B5
1081+ 90B5              ; Disparo hacia abajo, (Entidad).
1082+ 90B5
1083+ 90B5 3A 57 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 90B8 47               ld b,a
1085+ 90B9
1086+ 90B9 CD D3 94     4 call NextScan
1087+ 90BC 10 FB            djnz 4B
1088+ 90BE
1089+ 90BE              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90BE
1091+ 90BE 7C               ld a,h
1092+ 90BF FE 58            cp $58
1093+ 90C1 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90C3
1095+ 90C3 EB               ex de,hl
1096+ 90C4 06 04            ld b,4
1097+ 90C6 2B           5 dec hl
1098+ 90C7 10 FD            djnz 5B
1099+ 90C9
1100+ 90C9 CD CF 90         call Elimina_disparo_de_base_de_datos
1101+ 90CC E1               pop hl
1102+ 90CD 18 E5            jr 7B
1103+ 90CF
1104+ 90CF              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90CF
1106+ 90CF 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90D2 AF               xor a
1108+ 90D3 77               ld (hl),a
1109+ 90D4 54               ld d,h
1110+ 90D5 5D               ld e,l
1111+ 90D6 13               inc de
1112+ 90D7 ED B0            ldir
1113+ 90D9 C9               ret
1114+ 90DA
1115+ 90DA              ; -----------------------------------------------------------------
1116+ 90DA              ;
1117+ 90DA              ;   7/12/23
1118+ 90DA              ;
1119+ 90DA
1120+ 90DA 3A 4C 88     Selector_de_impactos ld a,(Impacto2)
1121+ 90DD A7               and a
1122+ 90DE C8               ret z
1123+ 90DF
1124+ 90DF              ; Analizamos si hay impacto por disparos.
1125+ 90DF
1126+ 90DF              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 90DF
1128+ 90DF CB 4F            bit 1,a
1129+ 90E1 28 07            jr z,1F
1130+ 90E3
1131+ 90E3 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 90E6 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 90E8 18 08            jr 2F
1134+ 90EA
1135+ 90EA CB 47        1 bit 0,a
1136+ 90EC C8               ret z
1137+ 90ED
1138+ 90ED              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 90ED
1140+ 90ED 21 26 88         ld hl,Ctrl_1
1141+ 90F0 CB D6            set 2,(hl)
1142+ 90F2
1143+ 90F2 C9           2 ret
1144+ 90F3
1145+ 90F3              ; -----------------------------------------------------------------
1146+ 90F3              ;
1147+ 90F3              ;   25/04/23
1148+ 90F3              ;
1149+ 90F3
1150+ 90F3              Determina_resultado_comparativa
1151+ 90F3
1152+ 90F3              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 90F3              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 90F3              ;
1155+ 90F3              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 90F3              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 90F3              ;
1158+ 90F3              ;   SBC HL,DE
1159+ 90F3
1160+ 90F3              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 90F3              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 90F3
1163+ 90F3              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 90F3              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 90F3
1166+ 90F3
1167+ 90F3 3A F9 87         ld a,(Cuad_objeto)
1168+ 90F6 FE 02            cp 2
1169+ 90F8 28 26            jr z,2F
1170+ 90FA 38 24            jr c,2F
1171+ 90FC
1172+ 90FC              ; Cuadrantes 3º y 4º
1173+ 90FC
1174+ 90FC E6 01            and 1
1175+ 90FE 28 10            jr z,4F
1176+ 9100
1177+ 9100              ; Cuadrante 3º
1178+ 9100
1179+ 9100 7C               ld a,h
1180+ 9101 06 00            ld b,0
1181+ 9103
1182+ 9103 CD 8E 91         call Compara_cositas_H3
1183+ 9106
1184+ 9106 04               inc b
1185+ 9107 05               dec b
1186+ 9108 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9109
1188+ 9109 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 910A 06 00            ld b,0
1190+ 910C
1191+ 910C CD A0 91         call Compara_cositas_L3
1192+ 910F C9               ret
1193+ 9110
1194+ 9110              ; Cuadrante 4º
1195+ 9110
1196+ 9110 7C           4 ld a,h
1197+ 9111 06 00            ld b,0
1198+ 9113
1199+ 9113 CD B2 91         call Compara_cositas_H4
1200+ 9116
1201+ 9116 04               inc b
1202+ 9117 05               dec b
1203+ 9118 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9119
1205+ 9119 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 911A 06 00            ld b,0
1207+ 911C
1208+ 911C CD C8 91         call Compara_cositas_L4
1209+ 911F C9               ret
1210+ 9120
1211+ 9120              ; Cuadrantes 1º y 2º.
1212+ 9120
1213+ 9120 28 10        2 jr z,3F
1214+ 9122
1215+ 9122              ; 1er Cuadrante
1216+ 9122
1217+ 9122 7C               ld a,h
1218+ 9123 06 00            ld b,0
1219+ 9125
1220+ 9125 CD 66 91         call Compara_cositas_H1
1221+ 9128
1222+ 9128 04               inc b
1223+ 9129 05               dec b
1224+ 912A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 912B
1226+ 912B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 912C 06 00            ld b,0
1228+ 912E
1229+ 912E CD 7C 91         call Compara_cositas_L1
1230+ 9131 C9               ret
1231+ 9132
1232+ 9132
1233+ 9132              ; 2º Cuadrante
1234+ 9132
1235+ 9132 7C           3 ld a,h
1236+ 9133 06 00            ld b,0
1237+ 9135
1238+ 9135 CD 42 91         call Compara_cositas_H2
1239+ 9138
1240+ 9138 04               inc b
1241+ 9139 05               dec b
1242+ 913A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 913B
1244+ 913B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 913C 06 00            ld b,0
1246+ 913E
1247+ 913E CD 54 91         call Compara_cositas_L2
1248+ 9141 C9               ret
1249+ 9142
1250+ 9142 A7           Compara_cositas_H2 and a
1251+ 9143 28 0D            jr z,1F
1252+ 9145              ;    cp $fd
1253+ 9145              ;    jr z,1F
1254+ 9145              ;    cp $fe
1255+ 9145              ;    jr z,1F
1256+ 9145 FE FF            cp $ff
1257+ 9147 28 09            jr z,1F
1258+ 9149 FE 01            cp $01
1259+ 914B 28 05            jr z,1F
1260+ 914D FE 02            cp $02
1261+ 914F 28 01            jr z,1F
1262+ 9151 C0               ret nz
1263+ 9152 04           1 inc b
1264+ 9153 C9               ret
1265+ 9154
1266+ 9154 A7           Compara_cositas_L2 and a
1267+ 9155 28 0D            jr z,1F
1268+ 9157              ;    cp $fd
1269+ 9157              ;    jr z,1F
1270+ 9157 FE FE            cp $fe
1271+ 9159 28 09            jr z,1F
1272+ 915B FE FF            cp $ff
1273+ 915D 28 05            jr z,1F
1274+ 915F FE 01            cp $01
1275+ 9161 28 01            jr z,1F
1276+ 9163              ;    cp $02
1277+ 9163              ;    jr z,1F
1278+ 9163 C0               ret nz
1279+ 9164 04           1 inc b
1280+ 9165 C9               ret
1281+ 9166
1282+ 9166 A7           Compara_cositas_H1 and a
1283+ 9167 28 11            jr z,1F
1284+ 9169              ;    cp $fd
1285+ 9169              ;    jr z,1F
1286+ 9169              ;    cp $fe
1287+ 9169              ;    jr z,1F
1288+ 9169 FE FF            cp $ff
1289+ 916B 28 0D            jr z,1F
1290+ 916D FE 01            cp $01
1291+ 916F 28 09            jr z,1F
1292+ 9171 FE 02            cp $02
1293+ 9173 28 05            jr z,1F
1294+ 9175 FE 03            cp $03
1295+ 9177 28 01            jr z,1F
1296+ 9179 C0               ret nz
1297+ 917A 04           1 inc b
1298+ 917B C9               ret
1299+ 917C
1300+ 917C A7           Compara_cositas_L1 and a
1301+ 917D 28 0D            jr z,1F
1302+ 917F              ;    cp $fd
1303+ 917F              ;    jr z,1F
1304+ 917F              ;    cp $fe
1305+ 917F              ;    jr z,1F
1306+ 917F              ;    cp $ff
1307+ 917F              ;    jr z,1F
1308+ 917F FE 01            cp $01
1309+ 9181 28 09            jr z,1F
1310+ 9183 FE 02            cp $02
1311+ 9185 28 05            jr z,1F
1312+ 9187 FE 03            cp $03
1313+ 9189 28 01            jr z,1F
1314+ 918B C0               ret nz
1315+ 918C 04           1 inc b
1316+ 918D C9               ret
1317+ 918E
1318+ 918E A7           Compara_cositas_H3 and a
1319+ 918F 28 0D            jr z,1F
1320+ 9191              ;    cp $fd
1321+ 9191              ;    jr z,1F
1322+ 9191 FE FE            cp $fe
1323+ 9193 28 09            jr z,1F
1324+ 9195 FE FF            cp $ff
1325+ 9197 28 05            jr z,1F
1326+ 9199 FE 01            cp $01
1327+ 919B 28 01            jr z,1F
1328+ 919D              ;    cp $02
1329+ 919D              ;    jr z,1F
1330+ 919D              ;    cp $03
1331+ 919D              ;    jr z,1F
1332+ 919D C0               ret nz
1333+ 919E 04           1 inc b
1334+ 919F C9               ret
1335+ 91A0
1336+ 91A0 A7           Compara_cositas_L3 and a
1337+ 91A1 28 0D            jr z,1F
1338+ 91A3              ;    cp $fd
1339+ 91A3              ;    jr z,1F
1340+ 91A3              ;    cp $fe
1341+ 91A3              ;    jr z,1F
1342+ 91A3              ;    cp $ff
1343+ 91A3              ;    jr z,1F
1344+ 91A3 FE 01            cp $01
1345+ 91A5 28 09            jr z,1F
1346+ 91A7 FE 02            cp $02
1347+ 91A9 28 05            jr z,1F
1348+ 91AB FE 03            cp $03
1349+ 91AD 28 01            jr z,1F
1350+ 91AF C0               ret nz
1351+ 91B0 04           1 inc b
1352+ 91B1 C9               ret
1353+ 91B2
1354+ 91B2 A7           Compara_cositas_H4 and a
1355+ 91B3 28 11            jr z,1F
1356+ 91B5 FE FD            cp $fd
1357+ 91B7 28 0D            jr z,1F
1358+ 91B9 FE FE            cp $fe
1359+ 91BB 28 09            jr z,1F
1360+ 91BD FE FF            cp $ff
1361+ 91BF 28 05            jr z,1F
1362+ 91C1 FE 01            cp $01
1363+ 91C3 28 01            jr z,1F
1364+ 91C5              ;    cp $02
1365+ 91C5              ;    jr z,1F
1366+ 91C5              ;    cp $03
1367+ 91C5              ;    jr z,1F
1368+ 91C5 C0               ret nz
1369+ 91C6 04           1 inc b
1370+ 91C7 C9               ret
1371+ 91C8
1372+ 91C8 A7           Compara_cositas_L4 and a
1373+ 91C9 28 0D            jr z,1F
1374+ 91CB              ;    cp $fd
1375+ 91CB              ;    jr z,1F
1376+ 91CB FE FE            cp $fe
1377+ 91CD 28 09            jr z,1F
1378+ 91CF FE FF            cp $ff
1379+ 91D1 28 05            jr z,1F
1380+ 91D3 FE 01            cp $01
1381+ 91D5 28 01            jr z,1F
1382+ 91D7              ;    cp $02
1383+ 91D7              ;    jr z,1F
1384+ 91D7              ;    cp $03
1385+ 91D7              ;    jr z,1F
1386+ 91D7 C0               ret nz
1387+ 91D8 04           1 inc b
1388+ 91D9 C9               ret
# file closed: Disparo.asm
1795  91DA              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91DA              ; ******************************************************************************************************************************************************************************************
   2+ 91DA              ;
   3+ 91DA              ; 26/06/23
   4+ 91DA              ;
   5+ 91DA              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91DA
   7+ 91DA              Draw
   8+ 91DA
   9+ 91DA CD C7 94     	call Prepara_draw
  10+ 91DD 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 91DE A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 91DF 28 05        	jr z,2F
  13+ 91E1
  14+ 91E1 3A F9 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 91E4 18 0C        	jr 1F
  16+ 91E6
  17+ 91E6 2A F7 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 91E9 22 E7 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 91EC CD 7B 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 91EF              ;													; _la esquina superior izquierda de la pantalla.
  21+ 91EF
  22+ 91EF CD 3B 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 91F2
  24+ 91F2 3A 07 88     1 ld a,(Ctrl_0)
  25+ 91F5 CB 6F        	bit 5,a
  26+ 91F7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 91F9
  28+ 91F9 CD 11 92     	call Comprueba_limite_horizontal
  29+ 91FC CD A1 92     	call Comprueba_limite_vertical
  30+ 91FF
  31+ 91FF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 91FF              ; -----------------------
  33+ 91FF              ; -----------------------
  34+ 91FF              ; -----------------------
  35+ 91FF
  36+ 91FF CD F7 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9202 CD 2E 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9205 CD 8D 94     	call Define_rutina_de_impresion
  39+ 9208
  40+ 9208 3A 07 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 920B CB AF        	res 5,a											; _a ser de utilidad.
  42+ 920D 32 07 88     	ld (Ctrl_0),a
  43+ 9210
  44+ 9210 C9           	ret
  45+ 9211
  46+ 9211              ; *******************************************************************************************************************************************************************************************
  47+ 9211              ;	21/01/23
  48+ 9211              ;
  49+ 9211              ; 	Comprueba_limite_horizontal.
  50+ 9211              ;
  51+ 9211              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9211              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9211              ;
  54+ 9211              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9211              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9211              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9211              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9211
  59+ 9211
  60+ 9211
  61+ 9211 3A 07 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9214 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9216 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9218 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 921A 32 07 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 921D 18 09            jr 6F
  67+ 921F CB 5F        1 bit 3,a
  68+ 9221 28 0A            jr z,2F
  69+ 9223 E6 F7            and $f7
  70+ 9225 32 07 88         ld (Ctrl_0),a
  71+ 9228 CD 7B 93     6 call Inicializacion
  72+ 922B 18 5B            jr 5F
  73+ 922D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 922E
  75+ 922E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 922E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 922E
  78+ 922E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 922F 2A 09 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9232 CD E6 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9235 67           	ld h,a
  82+ 9236 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9237 CD E6 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 923A 67           	ld h,a
  85+ 923B A7           	and a
  86+ 923C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 923E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 923F 3A F9 87     	ld a,(Cuad_objeto)
  89+ 9242 FE 02        	cp 2
  90+ 9244 38 1E        	jr c,3F
  91+ 9246 28 1C        	jr z,3F
  92+ 9248 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9249 28 23            jr z,7F
  94+ 924B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 924D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 924F E1           	pop hl
  97+ 9250
  98+ 9250              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9250              ; _para indicar con E="2" en caso necesario.
 100+ 9250
 101+ 9250 E5               push hl
 102+ 9251 C5               push bc
 103+ 9252 CD E6 97     	call calcula_tercio
 104+ 9255 FE 01        	cp 1
 105+ 9257 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9259 CD 89 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 925C 28 26            jr z,9F
 108+ 925E 38 24            jr c,9F
 109+ 9260 1E 00        11 ld e,0
 110+ 9262 18 22            jr 8F
 111+ 9264 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9265 28 07        	jr z, 7F
 113+ 9267 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9269 1E 00         	ld e,0
 115+ 926B E1           	pop hl
 116+ 926C 18 04        	jr 4F
 117+ 926E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9270 18 15            jr 10F
 119+ 9272
 120+ 9272              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9272              ; _para indicar con E="2" en caso necesario.
 122+ 9272
 123+ 9272 E5           4 push hl
 124+ 9273 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9274 CD E6 97     	call calcula_tercio
 126+ 9277 FE 01        	cp 1
 127+ 9279 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 927B CD 89 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 927E 28 04            jr z,9F
 130+ 9280 30 02            jr nc,9F
 131+ 9282 18 02        	jr 8F
 132+ 9284 1E 02        9 ld e,2
 133+ 9286 C1           8 pop bc
 134+ 9287 E1           10 pop hl
 135+ 9288 C9           5 ret
 136+ 9289
 137+ 9289              ; --------------------
 138+ 9289              ;
 139+ 9289              ; 25/08/22
 140+ 9289
 141+ 9289 CD E6 97     Comprueba_centro call calcula_tercio
 142+ 928C 67               ld h,a
 143+ 928D 08           	ex af,af
 144+ 928E FE 02        	cp 2
 145+ 9290 38 07        	jr c,1F
 146+ 9292 28 05        	jr z,1F
 147+ 9294 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9297 18 03        	jr 2F
 149+ 9299 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 929C 08           2 ex af,af
 151+ 929D A7               and a
 152+ 929E ED 42            sbc hl,bc
 153+ 92A0 C9               ret
 154+ 92A1
 155+ 92A1              ; *********************************************************************************************************************************************************************************************
 156+ 92A1              ;
 157+ 92A1              ;   16/8/22
 158+ 92A1              ;
 159+ 92A1              ;	Comprueba_limite_vertical
 160+ 92A1              ;
 161+ 92A1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 92A1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 92A1              ;
 164+ 92A1
 165+ 92A1 2A E7 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 92A4 7D           	ld a,l
 167+ 92A5 E6 1F        	and $1F
 168+ 92A7 57           	ld d,a
 169+ 92A8 3A 0B 88     	ld a,(Limite_vertical)
 170+ 92AB BA           	cp d 											; Límite - Posición.
 171+ 92AC 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 92AD 3A F9 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 92B0 CB 47        	bit 0,a
 174+ 92B2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 92B4
 176+ 92B4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 92B4
 178+ 92B4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 92B5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 92B7
 181+ 92B7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 92B7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 92B7
 184+ 92B7 3A EB 87         ld a,(Coordenada_X)
 185+ 92BA 16 0F            ld d,Centro_izquierda
 186+ 92BC A7               and a
 187+ 92BD 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 92BE 28 1E            jr z,3F
 189+ 92C0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 92C2              ;                                                    ; _salimos sin modificar nada.
 191+ 92C2 18 0E            jr 2F
 192+ 92C4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 92C5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 92C7
 195+ 92C7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 92C7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 92C7
 198+ 92C7 3A EB 87         ld a,(Coordenada_X)
 199+ 92CA 16 10            ld d,Centro_derecha
 200+ 92CC A7               and a
 201+ 92CD 92               sub d
 202+ 92CE 28 0E            jr z,3F
 203+ 92D0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 92D2              ;                                                    ; _salimos sin modificar nada.
 205+ 92D2 CB 43        2 bit 0,e
 206+ 92D4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 92D6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 92D7 CD 6B 93         call Modificaccionne
 209+ 92DA C1           	pop bc
 210+ 92DB CD 7B 93         call Inicializacion
 211+ 92DE C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 92DF
 213+ 92DF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 92DF
 215+ 92DF C5           4 push bc
 216+ 92E0 01 E6 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 92E3 0A           	ld a,(bc)
 218+ 92E4 3D           	dec a
 219+ 92E5 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 92E6 7D           	ld a,l
 221+ 92E7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 92E8 CB 47        	bit 0,a
 223+ 92EA 28 03        	jr z,5F
 224+ 92EC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 92ED 18 2E        	jr 7F
 226+ 92EF
 227+ 92EF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 92EF
 229+ 92EF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 92F0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 92F1 3A 07 88     	ld a,(Ctrl_0)
 232+ 92F4 CB 4F        	bit 1,a
 233+ 92F6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 92F8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 92F9
 236+ 92F9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 92F9
 238+ 92F9 1C               inc e
 239+ 92FA 1D               dec e
 240+ 92FB 20 07            jr nz,12F
 241+ 92FD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 92FE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 92FF 22 E7 87     	ld (Posicion_actual),hl
 244+ 9302 18 44        13 jr 9F
 245+ 9304 CB 43        12 bit 0,e
 246+ 9306 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9308              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9308 C1           	pop bc
 249+ 9309 18 D3        	jr 3B
 250+ 930B 80           14 add b
 251+ 930C 6F               ld l,a
 252+ 930D 22 E7 87     	ld (Posicion_actual),hl
 253+ 9310 CD 6B 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9313 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9315 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9317 32 07 88         ld (Ctrl_0),a
 257+ 931A F1           	pop af
 258+ 931B 18 2B        	jr 9F
 259+ 931D
 260+ 931D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 931D
 262+ 931D F5           7 push af
 263+ 931E 3A 07 88     	ld a,(Ctrl_0)
 264+ 9321 CB 47        	bit 0,a
 265+ 9323 20 1D        	jr nz,8F
 266+ 9325 F1           	pop af
 267+ 9326
 268+ 9326              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9326
 270+ 9326 1C           	inc e
 271+ 9327 1D               dec e
 272+ 9328 20 07            jr nz,10F
 273+ 932A 90           	sub b
 274+ 932B 6F               ld l,a
 275+ 932C 22 E7 87     	ld (Posicion_actual),hl
 276+ 932F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9331              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9331 CB 43        10 bit 0,e
 279+ 9333 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9335              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9335 C1           	pop bc
 282+ 9336 18 A6        	jr 3B
 283+ 9338 90           16 sub b
 284+ 9339 6F               ld l,a
 285+ 933A 22 E7 87     	ld (Posicion_actual),hl
 286+ 933D CD 6B 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9340 18 06            jr 9F
 288+ 9342 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9344 32 07 88         ld (Ctrl_0),a
 290+ 9347 F1           	pop af
 291+ 9348 C1           9 pop bc
 292+ 9349 1E 00        	ld e,0
 293+ 934B CD 7B 93         call Inicializacion
 294+ 934E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 934F 08           	ex af,af
 296+ 9350 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9351 18 8B            jr 3B
 298+ 9353
 299+ 9353              ; --------------------
 300+ 9353
 301+ 9353 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9355 CD E2 94     1 call PreviousScan
 303+ 9358 10 FB            djnz 1B
 304+ 935A 22 E7 87     	ld (Posicion_actual),hl
 305+ 935D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 935E C9           	ret
 307+ 935F
 308+ 935F              ; --------------------
 309+ 935F
 310+ 935F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9361 CD D3 94     1 call NextScan
 312+ 9364 10 FB            djnz 1B
 313+ 9366 22 E7 87     	ld (Posicion_actual),hl
 314+ 9369 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 936A C9           	ret
 316+ 936B
 317+ 936B              ; --------------------
 318+ 936B              ;
 319+ 936B              ;	22/01/23
 320+ 936B              ;
 321+ 936B              ;	E="1". Hemos cambiado de cuadrante.
 322+ 936B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 936B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 936B
 325+ 936B
 326+ 936B              Modificaccionne
 327+ 936B
 328+ 936B 3A F9 87     	ld a,(Cuad_objeto)
 329+ 936E FE 02        	cp 2
 330+ 9370 CC 53 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9373 DC 53 93         call c,Modifica_Pos_actual
 332+ 9376 C8           	ret z
 333+ 9377 CD 5F 93         call Modifica_Pos_actual2
 334+ 937A C9               ret
 335+ 937B
 336+ 937B              ; *************************************************************************************************************************************************************************************************
 337+ 937B              ;
 338+ 937B              ;	13/8/22
 339+ 937B              ;
 340+ 937B              ;	Inicializacion
 341+ 937B              ;
 342+ 937B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 937B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 937B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 937B              ;
 346+ 937B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 937B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 937B              ;	_ desaparece/aparece.
 349+ 937B
 350+ 937B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 937B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 937B              ;
 353+ 937B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 937B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 937B              ; 		   [E] ="0"
 356+ 937B
 357+ 937B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 937B
 359+ 937B CD E6 97     Inicializacion call calcula_tercio
 360+ 937E 28 36        	jr z,primit
 361+ 9380 E6 02        	and 2
 362+ 9382 20 07        	jr nz,segmit
 363+ 9384 7D           	ld a,l
 364+ 9385 FE 7F        	cp $7f
 365+ 9387 38 2D        	jr c,primit
 366+ 9389 28 2B        	jr z,primit
 367+ 938B CD F1 93     segmit call column
 368+ 938E 38 13        	jr c,tercuad
 369+ 9390 3E 04        cuarcuad ld a,4
 370+ 9392 32 F9 87     	ld (Cuad_objeto),a
 371+ 9395 21 20 48     	ld hl,$4820
 372+ 9398 22 09 88     	ld (Limite_horizontal),hl
 373+ 939B 21 0B 88     	ld hl,Limite_vertical
 374+ 939E 36 0D        	ld (hl),$0d
 375+ 93A0 08           	ex af,af
 376+ 93A1 18 3C        	jr 1F
 377+ 93A3              tercuad
 378+ 93A3 3E 03        	ld a,3
 379+ 93A5 32 F9 87     	ld (Cuad_objeto),a
 380+ 93A8 21 20 48     	ld hl,$4820
 381+ 93AB 22 09 88     	ld (Limite_horizontal),hl
 382+ 93AE 21 0B 88     	ld hl,Limite_vertical
 383+ 93B1 36 12        	ld (hl),$12
 384+ 93B3 08           	ex af,af
 385+ 93B4 18 29        	jr 1F
 386+ 93B6 CD F1 93     primit call column
 387+ 93B9 38 13        	jr c, primcuad
 388+ 93BB              segcuad
 389+ 93BB 3E 02        	ld a,2
 390+ 93BD 32 F9 87     	ld (Cuad_objeto),a
 391+ 93C0 21 C0 4F     	ld hl,$4fc0
 392+ 93C3 22 09 88     	ld (Limite_horizontal),hl
 393+ 93C6 21 0B 88     	ld hl,Limite_vertical
 394+ 93C9 36 0D        	ld (hl),$0d
 395+ 93CB 08           	ex af,af
 396+ 93CC 18 11        	jr 1F
 397+ 93CE              primcuad
 398+ 93CE 3E 01        	ld a,1
 399+ 93D0 32 F9 87     	ld (Cuad_objeto),a
 400+ 93D3 21 C0 4F     	ld hl,$4fc0
 401+ 93D6 22 09 88     	ld (Limite_horizontal),hl
 402+ 93D9 21 0B 88     	ld hl,Limite_vertical
 403+ 93DC 36 12        	ld (hl),$12
 404+ 93DE 08           	ex af,af
 405+ 93DF
 406+ 93DF C5           1 push bc
 407+ 93E0 E5           	push hl
 408+ 93E1 D5           	push de
 409+ 93E2
 410+ 93E2 2A E7 87     	ld hl,(Posicion_actual)
 411+ 93E5 CD 7E 9B     	call Genera_coordenadas
 412+ 93E8
 413+ 93E8 D1           	pop de
 414+ 93E9 E1           	pop hl
 415+ 93EA C1           	pop bc
 416+ 93EB
 417+ 93EB 21 07 88     	ld hl,Ctrl_0
 418+ 93EE CB EE        	set 5,(hl)
 419+ 93F0 C9           	ret
 420+ 93F1
 421+ 93F1              ; ------------------------------------------------------------------------------------------------------------------
 422+ 93F1
 423+ 93F1              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 93F1              ;
 425+ 93F1              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 93F1
 427+ 93F1 7D           column ld a,l
 428+ 93F2 E6 1F        	and $1f
 429+ 93F4 FE 10         	cp $10
 430+ 93F6 C9            	ret
 431+ 93F7
 432+ 93F7              ; --------------------------------------------------------------------------------------------------------------------
 433+ 93F7              ;
 434+ 93F7              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 93F7              ;
 436+ 93F7              ; 14/12/22
 437+ 93F7              ;
 438+ 93F7              ;	Modifica: A y BC.
 439+ 93F7
 440+ 93F7 3A F9 87     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 93FA E6 01        	and 1
 442+ 93FC 28 17        	jr z,1F
 443+ 93FE
 444+ 93FE              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 93FE
 446+ 93FE 3A EB 87     	ld a,(Coordenada_X)
 447+ 9401 47           	ld b,a
 448+ 9402 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9403 79           	ld a,c
 450+ 9404 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9405 38 08        	jr c,2F
 452+ 9407 47           	ld b,a
 453+ 9408 79           	ld a,c
 454+ 9409 90           	sub b
 455+ 940A 32 08 88     	ld (Columnas),a
 456+ 940D 18 1B        	jr 4F
 457+ 940F 79           2 ld a,c
 458+ 9410 32 08 88     	ld (Columnas),a
 459+ 9413 18 15        	jr 4F
 460+ 9415
 461+ 9415              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9415
 463+ 9415 3A EB 87     1 ld a,(Coordenada_X)
 464+ 9418 81           	add c
 465+ 9419 3D           	dec a
 466+ 941A D6 1F        	sub $1f
 467+ 941C 38 08        	jr c,3F
 468+ 941E 47           	ld b,a
 469+ 941F 79           	ld a,c
 470+ 9420 90           	sub b
 471+ 9421 32 08 88     	ld (Columnas),a
 472+ 9424 18 04        	jr 4F
 473+ 9426 79           3 ld a,c
 474+ 9427 32 08 88     	ld (Columnas),a
 475+ 942A D9           4 exx
 476+ 942B 4F           	ld c,a
 477+ 942C D9           	exx
 478+ 942D C9            ret
 479+ 942E
 480+ 942E              ; --------------------------------------------------------------------------------------------------------------------
 481+ 942E              ;
 482+ 942E              ;   19/7/23
 483+ 942E              ;
 484+ 942E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 942E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 942E              ;
 487+ 942E              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 942E              ;			HL e IY Contienen (Puntero_objeto).
 489+ 942E              ;
 490+ 942E              ;	DESTRUYE: HL,B Y A.
 491+ 942E
 492+ 942E 3A F9 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9431 FE 02        	cp 2
 494+ 9433 38 18        	jr c,1F
 495+ 9435 28 16        	jr z,1F
 496+ 9437 E6 01        	and 1
 497+ 9439 28 0D        	jr z,3F
 498+ 943B
 499+ 943B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 943B
 501+ 943B CD 81 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 943E
 503+ 943E 7D           9 ld a,l
 504+ 943F E6 1F        	and $1f
 505+ 9441 28 2A        	jr z,7F
 506+ 9443 2B           	dec hl
 507+ 9444 10 F8        	djnz 9B
 508+ 9446 18 25        	jr 7F
 509+ 9448
 510+ 9448              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9448
 512+ 9448 2A E7 87     3 ld hl,(Posicion_actual)
 513+ 944B 18 20        	jr 7F
 514+ 944D
 515+ 944D 28 14        1 jr z,2F
 516+ 944F
 517+ 944F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 944F
 519+ 944F CD 81 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9452
 521+ 9452 7D           4 ld a,l
 522+ 9453 E6 1F        	and $1f
 523+ 9455 28 03        	jr z,6F
 524+ 9457 2B           	dec hl
 525+ 9458 10 F8        	djnz 4B
 526+ 945A 06 0F        6 ld b,15
 527+ 945C CD E2 94     5 call PreviousScan
 528+ 945F 10 FB        	djnz 5B
 529+ 9461 18 0A        	jr 7F
 530+ 9463
 531+ 9463              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9463
 533+ 9463 CD 81 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9466 06 0F        	ld b,15
 535+ 9468 CD E2 94     8 call PreviousScan
 536+ 946B 10 FB        	djnz 8B
 537+ 946D
 538+ 946D E5           7 push hl
 539+ 946E DD E1        	pop ix
 540+ 9470
 541+ 9470 2A E9 87     	ld hl,(Puntero_objeto)
 542+ 9473 E5           	push hl
 543+ 9474 FD E1        	pop iy
 544+ 9476
 545+ 9476              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9476
 547+ 9476 3A 07 88     	ld a,(Ctrl_0)
 548+ 9479 CB 77        	bit 6,a
 549+ 947B C8           	ret z
 550+ 947C
 551+ 947C              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 947C              ; _ entidad / Amadeus´.
 553+ 947C
 554+ 947C DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 9480
 556+ 9480 C9           	ret
 557+ 9481
 558+ 9481              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9481              ;
 560+ 9481              ;	2/1/23
 561+ 9481              ;
 562+ 9481              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9481              ;
 564+ 9481              ;	Tras esta rutina tenemos:
 565+ 9481              ;
 566+ 9481              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9481              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9481              ;
 569+ 9481              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9481
 571+ 9481 2A E7 87     Operandos ld hl,(Posicion_actual)
 572+ 9484 3A 08 88     	ld a,(Columnas)
 573+ 9487 3D           	dec a
 574+ 9488 20 01        	jr nz,1F
 575+ 948A 3C           	inc a
 576+ 948B 47           1 ld b,a
 577+ 948C C9           	ret
 578+ 948D
 579+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 580+ 948D              ;
 581+ 948D              ;	3/1/23
 582+ 948D              ;
 583+ 948D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 948D              ;
 585+ 948D              ;	Destruye: A,B,HL y DE.
 586+ 948D
 587+ 948D              Define_rutina_de_impresion
 588+ 948D
 589+ 948D 3A E6 87     	ld a,(Columns)
 590+ 9490 47           	ld b,a
 591+ 9491 3A 08 88     	ld a,(Columnas)
 592+ 9494 B8           	cp b
 593+ 9495 20 0D        	jr nz,2f
 594+ 9497
 595+ 9497              ;	La entidad se imprime entera.
 596+ 9497
 597+ 9497 21 B6 95     	ld hl, Indice_entidades_completas
 598+ 949A E6 01        	and 1
 599+ 949C 28 02        	jr z,1F
 600+ 949E
 601+ 949E 23           	inc hl
 602+ 949F 23           	inc hl
 603+ 94A0
 604+ 94A0 CD AF 8B     1 call Extrae_address
 605+ 94A3 C9           	ret		;	ret
 606+ 94A4
 607+ 94A4              ;	La entidad no se imprime entera en pantalla.
 608+ 94A4
 609+ 94A4 3A F9 87     2 ld a,(Cuad_objeto)
 610+ 94A7 E6 01        	and 1
 611+ 94A9 28 17        	jr z,3F
 612+ 94AB
 613+ 94AB              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 94AB
 615+ 94AB 21 BA 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 94AE 3A E6 87     4 ld a,(Columns)
 617+ 94B1 E6 01        	and 1
 618+ 94B3 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 94B5
 620+ 94B5 23           	inc hl
 621+ 94B6 23           	inc hl
 622+ 94B7
 623+ 94B7 3A 08 88     	ld a,(Columnas)
 624+ 94BA E6 01        	and 1
 625+ 94BC 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 94BE
 627+ 94BE 23           	inc hl
 628+ 94BF 23           	inc hl
 629+ 94C0
 630+ 94C0 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 94C2
 632+ 94C2 21 C0 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 94C5 18 E7        	jr 4B
 634+ 94C7
 635+ 94C7              ; --------------------------------------------------------------------------------------------------------------------
 636+ 94C7              ;
 637+ 94C7              ;	Prepara_draw
 638+ 94C7              ;
 639+ 94C7              ;	Es una rutina de carga.
 640+ 94C7              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 94C7              ;
 642+ 94C7              ;	FUNCIONAMIENTO:
 643+ 94C7              ;
 644+ 94C7              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 94C7              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 94C7              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 94C7              ;
 648+ 94C7              ;	DESTRUYE:
 649+ 94C7              ;
 650+ 94C7              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 94C7
 652+ 94C7 21 E5 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 94CA 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 94CB 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 94CC 4E           	ld c,(hl)
 656+ 94CD 2A E7 87     	ld hl,(Posicion_actual)
 657+ 94D0 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 94D2 C9           	ret
 659+ 94D3
 660+ 94D3              ;----------------------------------------------------------------------------------------------------------------
 661+ 94D3              ;
 662+ 94D3              ;	5/08/22
 663+ 94D3              ;
 664+ 94D3              ;   NextScan.
 665+ 94D3              ;
 666+ 94D3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 94D3              ;
 668+ 94D3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 94D3              ;
 670+ 94D3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 94D3              ;
 672+ 94D3              ;       DESTRUIDOS: AF y HL !!!
 673+ 94D3              ;
 674+ 94D3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 94D3              ;
 676+ 94D3
 677+ 94D3 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 94D4 7C               ld a,h
 679+ 94D5 E6 07            and 7
 680+ 94D7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 94D8
 682+ 94D8 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 94D9 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 94DB 6F               ld l,a
 685+ 94DC D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 94DD
 687+ 94DD 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 94DE D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 94E0 67               ld h,a
 690+ 94E1 C9               ret
 691+ 94E2
 692+ 94E2              ;----------------------------------------------------------------------------------------------------------------
 693+ 94E2              ;
 694+ 94E2              ;	5/08/22
 695+ 94E2              ;
 696+ 94E2              ;   PreviousScan.
 697+ 94E2              ;
 698+ 94E2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 94E2              ;
 700+ 94E2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 94E2              ;
 702+ 94E2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 94E2              ;
 704+ 94E2              ;       DESTRUIDOS: AF y HL !!!
 705+ 94E2              ;
 706+ 94E2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 94E2              ;
 708+ 94E2
 709+ 94E2 7C           PreviousScan ld a,h
 710+ 94E3 25               dec h               ; Dec H.
 711+ 94E4 E6 07            and 7
 712+ 94E6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 94E7
 714+ 94E7 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 94E8 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 94EA 6F               ld l,a
 717+ 94EB D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 94EC
 719+ 94EC 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 94ED C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 94EF 67               ld h,a
 722+ 94F0 C9               ret
 723+ 94F1
 724+ 94F1              ; -----------------------------------------------------------------------------------
 725+ 94F1              ;
 726+ 94F1              ;	31/7/23
 727+ 94F1              ;
 728+ 94F1              ;	Rutina principal de pintado de entidades.
 729+ 94F1              ;	Extrae la foto del frame, (entidades).
 730+ 94F1
 731+ 94F1              Extrae_foto_entidades
 732+ 94F1
 733+ 94F1 21 01 70     	ld hl,Album_de_fotos+1
 734+ 94F4 7E           	ld a,(hl)
 735+ 94F5 A7           	and a
 736+ 94F6 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 94F7
 738+ 94F7              ;	No hay datos, (entidades para pintar en este frame).
 739+ 94F7
 740+ 94F7 3A 32 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 94FA A7           	and a
 742+ 94FB C8           	ret z
 743+ 94FC
 744+ 94FC              ; -----------------------------------
 745+ 94FC
 746+ 94FC ED 73 37 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9500 31 00 70     	ld sp,Album_de_fotos
 748+ 9503
 749+ 9503 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9505 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9506 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9507
 753+ 9507 ED 73 39 88  	ld (Stack_2),sp
 754+ 950B ED 7B 37 88  	ld sp,(Stack)
 755+ 950F
 756+ 950F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 950F
 758+ 950F 3E CD        	ld a,$cd
 759+ 9511 32 19 95     	ld (Imprime),a
 760+ 9514 EB           	ex de,hl
 761+ 9515 22 1A 95     	ld (Imprime+1),hl
 762+ 9518 EB           	ex de,hl
 763+ 9519
 764+ 9519              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9519
 766+ 9519 00 00 00     Imprime db 0,0,0
 767+ 951C
 768+ 951C ED 73 37 88  	ld (Stack),sp
 769+ 9520
 770+ 9520 3A 32 88     	ld a,(Numero_de_malotes)
 771+ 9523 3D           	dec a
 772+ 9524 28 09        	jr z,1F
 773+ 9526 32 32 88      	ld (Numero_de_malotes),a
 774+ 9529
 775+ 9529 ED 7B 39 88  	ld sp,(Stack_2)
 776+ 952D 18 D4        	jr 2B
 777+ 952F
 778+ 952F AF           1 xor a
 779+ 9530 32 39 88     	ld (Stack_2),a
 780+ 9533
 781+ 9533 C9           	ret
 782+ 9534
 783+ 9534              ; -----------------------------------------------------------------------------------
 784+ 9534              ;
 785+ 9534              ;	28/2/23
 786+ 9534              ;
 787+ 9534              ;	Pinta los disparos generados.
 788+ 9534
 789+ 9534              Extrae_foto_disparos
 790+ 9534
 791+ 9534 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 9537 7E               ld a,(hl)
 793+ 9538 A7               and a
 794+ 9539 C8               ret z
 795+ 953A
 796+ 953A 3A 47 88     	ld a,(Numero_de_disparotes)
 797+ 953D A7           	and a
 798+ 953E C8           	ret z
 799+ 953F ED 73 37 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9543 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 9546
 802+ 9546 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9548 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9549 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 954A
 806+ 954A ED 73 39 88  	ld (Stack_2),sp
 807+ 954E ED 7B 37 88  	ld sp,(Stack)
 808+ 9552
 809+ 9552              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9552
 811+ 9552 3E CD        	ld a,$cd
 812+ 9554 32 5C 95     	ld (Imprime2),a
 813+ 9557 EB           	ex de,hl
 814+ 9558 22 5D 95     	ld (Imprime2+1),hl
 815+ 955B EB           	ex de,hl
 816+ 955C
 817+ 955C              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 955C
 819+ 955C 00 00 00     Imprime2 db 0,0,0
 820+ 955F
 821+ 955F 3A 47 88     	ld a,(Numero_de_disparotes)
 822+ 9562 3D           	dec a
 823+ 9563 28 09        	jr z,1F
 824+ 9565 32 47 88      	ld (Numero_de_disparotes),a
 825+ 9568
 826+ 9568 ED 7B 39 88  	ld sp,(Stack_2)
 827+ 956C 18 D8        	jr 2B
 828+ 956E
 829+ 956E AF           1 xor a
 830+ 956F 32 39 88     	ld (Stack_2),a
 831+ 9572 C9           	ret
 832+ 9573
 833+ 9573              ; -----------------------------------------------------------------------------------
 834+ 9573              ;
 835+ 9573              ;	4/9/23
 836+ 9573              ;
 837+ 9573              ;	Rutina principal de pintado de Amadeus.
 838+ 9573              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9573
 840+ 9573 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9576 7E           	ld a,(hl)
 842+ 9577 A7           	and a
 843+ 9578 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9579
 845+ 9579 3A 32 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 957C A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 957D C8           	ret z
 848+ 957E
 849+ 957E              ; -----------------------------------
 850+ 957E
 851+ 957E ED 73 37 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9582 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 9585
 854+ 9585 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9587 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9588 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9589
 858+ 9589 ED 73 39 88  	ld (Stack_2),sp
 859+ 958D ED 7B 37 88  	ld sp,(Stack)
 860+ 9591
 861+ 9591              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9591
 863+ 9591 3E CD        	ld a,$cd
 864+ 9593 32 9B 95     	ld (Imprime_Amadeus),a
 865+ 9596 EB           	ex de,hl
 866+ 9597 22 9C 95     	ld (Imprime_Amadeus+1),hl
 867+ 959A EB           	ex de,hl
 868+ 959B
 869+ 959B              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 959B
 871+ 959B 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 959E
 873+ 959E ED 73 37 88  	ld (Stack),sp
 874+ 95A2
 875+ 95A2 3A 32 88     	ld a,(Numero_de_malotes)
 876+ 95A5 3D           	dec a
 877+ 95A6 28 09        	jr z,1F
 878+ 95A8 32 32 88      	ld (Numero_de_malotes),a
 879+ 95AB
 880+ 95AB ED 7B 39 88  	ld sp,(Stack_2)
 881+ 95AF 18 D4        	jr 2B
 882+ 95B1
 883+ 95B1 AF           1 xor a
 884+ 95B2 32 39 88     	ld (Stack_2),a
 885+ 95B5
 886+ 95B5 C9           	ret
# file closed: Draw_XOR.asm
1796  95B6              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95B6              ;   índices de Rutinas de impresión.
   2+ 95B6
   3+ 95B6 C6 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95B8 F3 95            defw Pinta_Amadeus_3x2
   5+ 95BA
   6+ 95BA 49 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95BC E9 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95BE 9D 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95C0
  10+ 95C0 73 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95C2 77 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95C4 2B 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95C6
  14+ 95C6
  15+ 95C6              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95C6              ;
  17+ 95C6              ;   12/12/22
  18+ 95C6              ;
  19+ 95C6              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95C6              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95C6              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95C6              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95C6              ;
  24+ 95C6              ;   Modifica: DE y HL.
  25+ 95C6
  26+ 95C6 ED 73 37 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95CA FD F9        	ld sp,iy
  28+ 95CC 06 10            ld b,16
  29+ 95CE D1           1 pop de
  30+ 95CF 7B               ld a,e
  31+ 95D0 AE               xor (hl)
  32+ 95D1 77           	ld (hl),a
  33+ 95D2 23           	inc hl
  34+ 95D3 7A               ld a,d
  35+ 95D4 AE               xor (hl)
  36+ 95D5 77           	ld (hl),a
  37+ 95D6 2B           	dec hl
  38+ 95D7 24           	inc h
  39+ 95D8 7C               ld a,h
  40+ 95D9 E6 07            and 7
  41+ 95DB 20 0A            jr nz,2F
  42+ 95DD 7D               ld a,l
  43+ 95DE C6 20            add a,$20
  44+ 95E0 6F               ld l,a
  45+ 95E1 38 04            jr c,2F
  46+ 95E3 7C               ld a,h
  47+ 95E4 D6 08            sub 8
  48+ 95E6 67               ld h,a
  49+ 95E7 7C           2 ld a,h
  50+ 95E8 FE 58            cp $58
  51+ 95EA 28 02            jr z,3F
  52+ 95EC 10 E0            djnz 1B
  53+ 95EE ED 7B 37 88  3 ld sp,(Stack)
  54+ 95F2 C9           	ret
  55+ 95F3
  56+ 95F3 ED 73 37 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95F7 FD F9        	ld sp,iy
  58+ 95F9 06 08            ld b,8
  59+ 95FB D1           1 pop de
  60+ 95FC 7B               ld a,e
  61+ 95FD AE               xor (hl)
  62+ 95FE 77           	ld (hl),a
  63+ 95FF 23           	inc hl
  64+ 9600 7A               ld a,d
  65+ 9601 AE               xor (hl)
  66+ 9602 77           	ld (hl),a
  67+ 9603 23           	inc hl
  68+ 9604 D1           	pop de
  69+ 9605 7B               ld a,e
  70+ 9606 AE               xor (hl)
  71+ 9607 77           	ld (hl),a
  72+ 9608 2B           	dec hl
  73+ 9609 2B           	dec hl
  74+ 960A 24           	inc h
  75+ 960B 7C               ld a,h
  76+ 960C E6 07            and 7
  77+ 960E 20 0A            jr nz,2F
  78+ 9610 7D               ld a,l
  79+ 9611 C6 20            add a,$20
  80+ 9613 6F               ld l,a
  81+ 9614 38 04            jr c,2F
  82+ 9616 7C               ld a,h
  83+ 9617 D6 08            sub 8
  84+ 9619 67               ld h,a
  85+ 961A 7C           2 ld a,h
  86+ 961B FE 58            cp $58
  87+ 961D 28 25            jr z,4F
  88+ 961F 7A               ld a,d
  89+ 9620 AE               xor (hl)
  90+ 9621 77               ld (hl),a
  91+ 9622 D1           	pop de
  92+ 9623 23           	inc hl
  93+ 9624 7B               ld a,e
  94+ 9625 AE               xor (hl)
  95+ 9626 77           	ld (hl),a
  96+ 9627 23           	inc hl
  97+ 9628 7A               ld a,d
  98+ 9629 AE               xor (hl)
  99+ 962A 77           	ld (hl),a
 100+ 962B 2B           	dec hl
 101+ 962C 2B           	dec hl
 102+ 962D 24           	inc h
 103+ 962E 7C               ld a,h
 104+ 962F E6 07            and 7
 105+ 9631 20 0A            jr nz,3F
 106+ 9633 7D               ld a,l
 107+ 9634 C6 20            add a,$20
 108+ 9636 6F               ld l,a
 109+ 9637 38 04            jr c,3F
 110+ 9639 7C               ld a,h
 111+ 963A D6 08            sub 8
 112+ 963C 67               ld h,a
 113+ 963D 7C           3 ld a,h
 114+ 963E FE 58            cp $58
 115+ 9640 28 02            jr z,4F
 116+ 9642 10 B7            djnz 1B
 117+ 9644 ED 7B 37 88  4 ld sp,(Stack)
 118+ 9648 C9           	ret
 119+ 9649
 120+ 9649              ; ---------------------------------------------------
 121+ 9649
 122+ 9649 ED 73 37 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 964D FD F9        	ld sp,iy
 124+ 964F
 125+ 964F              ; >>>
 126+ 964F
 127+ 964F 06 10            ld b,16
 128+ 9651 D1           1 pop de
 129+ 9652 7A           	ld a,d
 130+ 9653 AE           	xor (hl)
 131+ 9654 77           	ld (hl),a
 132+ 9655 24           	inc h
 133+ 9656 7C               ld a,h
 134+ 9657 E6 07            and 7
 135+ 9659 20 0C            jr nz,2F
 136+ 965B 7D               ld a,l
 137+ 965C C6 20            add a,$20
 138+ 965E 6F               ld l,a
 139+ 965F 38 06            jr c,2F
 140+ 9661 7C               ld a,h
 141+ 9662 D6 08            sub 8
 142+ 9664 67               ld h,a
 143+ 9665 18 00            jr 2F
 144+ 9667 7C           2 ld a,h
 145+ 9668 FE 58            cp $58
 146+ 966A 28 02            jr z,3F
 147+ 966C 10 E3            djnz 1B
 148+ 966E ED 7B 37 88  3 ld sp,(Stack)
 149+ 9672 C9           	ret
 150+ 9673
 151+ 9673 ED 73 37 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9677 FD F9        	ld sp,iy
 153+ 9679
 154+ 9679              ; >>>
 155+ 9679
 156+ 9679 06 10            ld b,16
 157+ 967B D1           1 pop de
 158+ 967C 7B           	ld a,e
 159+ 967D AE           	xor (hl)
 160+ 967E 77           	ld (hl),a
 161+ 967F 24           	inc h
 162+ 9680 7C               ld a,h
 163+ 9681 E6 07            and 7
 164+ 9683 20 0C            jr nz,2F
 165+ 9685 7D               ld a,l
 166+ 9686 C6 20            add a,$20
 167+ 9688 6F               ld l,a
 168+ 9689 38 06            jr c,2F
 169+ 968B 7C               ld a,h
 170+ 968C D6 08            sub 8
 171+ 968E 67               ld h,a
 172+ 968F 18 00            jr 2F
 173+ 9691 7C           2 ld a,h
 174+ 9692 FE 58            cp $58
 175+ 9694 28 02            jr z,3F
 176+ 9696 10 E3            djnz 1B
 177+ 9698 ED 7B 37 88  3 ld sp,(Stack)
 178+ 969C C9           	ret
 179+ 969D
 180+ 969D              ; ---------------------------------------------------
 181+ 969D
 182+ 969D ED 73 37 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96A1 FD F9        	ld sp,iy
 184+ 96A3 06 08            ld b,8
 185+ 96A5 D1           1 pop de
 186+ 96A6 7A           	ld a,d
 187+ 96A7 AE           	xor (hl)
 188+ 96A8 77           	ld (hl),a
 189+ 96A9 23           	inc hl
 190+ 96AA D1           	pop de
 191+ 96AB 7B           	ld a,e
 192+ 96AC AE           	xor (hl)
 193+ 96AD 77           	ld (hl),a
 194+ 96AE 2B           	dec hl
 195+ 96AF 24            	inc h
 196+ 96B0 7C               ld a,h
 197+ 96B1 E6 07            and 7
 198+ 96B3 20 0A            jr nz,2F
 199+ 96B5 7D               ld a,l
 200+ 96B6 C6 20            add a,$20
 201+ 96B8 6F               ld l,a
 202+ 96B9 38 04            jr c,2F
 203+ 96BB 7C               ld a,h
 204+ 96BC D6 08            sub 8
 205+ 96BE 67               ld h,a
 206+ 96BF 7C           2 ld a,h
 207+ 96C0 FE 58            cp $58
 208+ 96C2 28 20            jr z,4F
 209+ 96C4 D1               pop de
 210+ 96C5 7B           	ld a,e
 211+ 96C6 AE           	xor (hl)
 212+ 96C7 77           	ld (hl),a
 213+ 96C8 23           	inc hl
 214+ 96C9 7A           	ld a,d
 215+ 96CA AE           	xor (hl)
 216+ 96CB 77           	ld (hl),a
 217+ 96CC 2B           	dec hl
 218+ 96CD 24           	inc h
 219+ 96CE 7C               ld a,h
 220+ 96CF E6 07            and 7
 221+ 96D1 20 0A            jr nz,3F
 222+ 96D3 7D               ld a,l
 223+ 96D4 C6 20            add a,$20
 224+ 96D6 6F               ld l,a
 225+ 96D7 38 04            jr c,3F
 226+ 96D9 7C               ld a,h
 227+ 96DA D6 08            sub 8
 228+ 96DC 67               ld h,a
 229+ 96DD 7C           3 ld a,h
 230+ 96DE FE 58            cp $58
 231+ 96E0 28 02            jr z,4F
 232+ 96E2 10 C1            djnz 1B
 233+ 96E4 ED 7B 37 88  4 ld sp,(Stack)
 234+ 96E8 C9           	ret
 235+ 96E9
 236+ 96E9 ED 73 37 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96ED FD F9        	ld sp,iy
 238+ 96EF 06 08            ld b,8
 239+ 96F1 D1           1 pop de
 240+ 96F2 D1           	pop de
 241+ 96F3 7B           	ld a,e
 242+ 96F4 AE           	xor (hl)
 243+ 96F5 77           	ld (hl),a
 244+ 96F6 24            	inc h
 245+ 96F7 7C               ld a,h
 246+ 96F8 E6 07            and 7
 247+ 96FA 20 0A            jr nz,2F
 248+ 96FC 7D               ld a,l
 249+ 96FD C6 20            add a,$20
 250+ 96FF 6F               ld l,a
 251+ 9700 38 04            jr c,2F
 252+ 9702 7C               ld a,h
 253+ 9703 D6 08            sub 8
 254+ 9705 67               ld h,a
 255+ 9706 7C           2 ld a,h
 256+ 9707 FE 58            cp $58
 257+ 9709 28 1B            jr z,4F
 258+ 970B D1               pop de
 259+ 970C 7A           	ld a,d
 260+ 970D AE           	xor (hl)
 261+ 970E 77           	ld (hl),a
 262+ 970F 24           	inc h
 263+ 9710 7C               ld a,h
 264+ 9711 E6 07            and 7
 265+ 9713 20 0A            jr nz,3F
 266+ 9715 7D               ld a,l
 267+ 9716 C6 20            add a,$20
 268+ 9718 6F               ld l,a
 269+ 9719 38 04            jr c,3F
 270+ 971B 7C               ld a,h
 271+ 971C D6 08            sub 8
 272+ 971E 67               ld h,a
 273+ 971F 7C           3 ld a,h
 274+ 9720 FE 58            cp $58
 275+ 9722 28 02            jr z,4F
 276+ 9724 10 CB            djnz 1B
 277+ 9726 ED 7B 37 88  4 ld sp,(Stack)
 278+ 972A C9           	ret
 279+ 972B
 280+ 972B ED 73 37 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 972F FD F9        	ld sp,iy
 282+ 9731 06 08            ld b,8
 283+ 9733 D1           1 pop de
 284+ 9734 7B           	ld a,e
 285+ 9735 AE           	xor (hl)
 286+ 9736 77           	ld (hl),a
 287+ 9737 23           	inc hl
 288+ 9738 7A           	ld a,d
 289+ 9739 AE           	xor (hl)
 290+ 973A 77           	ld (hl),a
 291+ 973B 2B           	dec hl
 292+ 973C 24             	inc h
 293+ 973D 7C               ld a,h
 294+ 973E E6 07            and 7
 295+ 9740 20 0A            jr nz,2F
 296+ 9742 7D               ld a,l
 297+ 9743 C6 20            add a,$20
 298+ 9745 6F               ld l,a
 299+ 9746 38 04            jr c,2F
 300+ 9748 7C               ld a,h
 301+ 9749 D6 08            sub 8
 302+ 974B 67               ld h,a
 303+ 974C 7C           2 ld a,h
 304+ 974D FE 58            cp $58
 305+ 974F 28 21            jr z,4F
 306+ 9751 D1               pop de
 307+ 9752 7A           	ld a,d
 308+ 9753 AE           	xor (hl)
 309+ 9754 77           	ld (hl),a
 310+ 9755 23           	inc hl
 311+ 9756 D1               pop de
 312+ 9757 7B           	ld a,e
 313+ 9758 AE           	xor (hl)
 314+ 9759 77           	ld (hl),a
 315+ 975A 2B           	dec hl
 316+ 975B 24           	inc h
 317+ 975C 7C               ld a,h
 318+ 975D E6 07            and 7
 319+ 975F 20 0A            jr nz,3F
 320+ 9761 7D               ld a,l
 321+ 9762 C6 20            add a,$20
 322+ 9764 6F               ld l,a
 323+ 9765 38 04            jr c,3F
 324+ 9767 7C               ld a,h
 325+ 9768 D6 08            sub 8
 326+ 976A 67               ld h,a
 327+ 976B 7C           3 ld a,h
 328+ 976C FE 58            cp $58
 329+ 976E 28 02            jr z,4F
 330+ 9770 10 C1            djnz 1B
 331+ 9772 ED 7B 37 88  4 ld sp,(Stack)
 332+ 9776 C9           	ret
 333+ 9777
 334+ 9777 ED 73 37 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 977B FD F9        	ld sp,iy
 336+ 977D 06 08            ld b,8
 337+ 977F D1           1 pop de
 338+ 9780 7B           	ld a,e
 339+ 9781 AE           	xor (hl)
 340+ 9782 77           	ld (hl),a
 341+ 9783 24            	inc h
 342+ 9784 7C               ld a,h
 343+ 9785 E6 07            and 7
 344+ 9787 20 0A            jr nz,2F
 345+ 9789 7D               ld a,l
 346+ 978A C6 20            add a,$20
 347+ 978C 6F               ld l,a
 348+ 978D 38 04            jr c,2F
 349+ 978F 7C               ld a,h
 350+ 9790 D6 08            sub 8
 351+ 9792 67               ld h,a
 352+ 9793 7C           2 ld a,h
 353+ 9794 FE 58            cp $58
 354+ 9796 28 1C            jr z,4F
 355+ 9798 D1               pop de
 356+ 9799 7A           	ld a,d
 357+ 979A AE           	xor (hl)
 358+ 979B 77           	ld (hl),a
 359+ 979C 24           	inc h
 360+ 979D 7C               ld a,h
 361+ 979E E6 07            and 7
 362+ 97A0 20 0A            jr nz,3F
 363+ 97A2 7D               ld a,l
 364+ 97A3 C6 20            add a,$20
 365+ 97A5 6F               ld l,a
 366+ 97A6 38 04            jr c,3F
 367+ 97A8 7C               ld a,h
 368+ 97A9 D6 08            sub 8
 369+ 97AB 67               ld h,a
 370+ 97AC 7C           3 ld a,h
 371+ 97AD FE 58            cp $58
 372+ 97AF 28 03            jr z,4F
 373+ 97B1 D1               pop de
 374+ 97B2 10 CB            djnz 1B
 375+ 97B4 ED 7B 37 88  4 ld sp,(Stack)
 376+ 97B8 C9           	ret
 377+ 97B9
 378+ 97B9              ; ---------------------------------------------------
 379+ 97B9              ;
 380+ 97B9              ;   27/02/23
 381+ 97B9              ;
 382+ 97B9              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97B9              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97B9              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97B9
 386+ 97B9 ED 73 37 88  Pinta_Disparo ld (Stack),sp
 387+ 97BD FD F9            ld sp,iy
 388+ 97BF 06 03            ld b,3
 389+ 97C1 D1           1 pop de
 390+ 97C2 7B               ld a,e
 391+ 97C3 AE               xor (hl)
 392+ 97C4 77               ld (hl),a
 393+ 97C5 23               inc hl
 394+ 97C6 7A               ld a,d
 395+ 97C7 AE               xor (hl)
 396+ 97C8 77               ld (hl),a
 397+ 97C9 2B               dec hl
 398+ 97CA
 399+ 97CA 24               inc h
 400+ 97CB 7C               ld a,h
 401+ 97CC E6 07            and 7
 402+ 97CE 20 0A            jr nz,2F
 403+ 97D0 7D               ld a,l
 404+ 97D1 C6 20            add a,$20
 405+ 97D3 6F               ld l,a
 406+ 97D4 38 04            jr c,2F
 407+ 97D6 7C               ld a,h
 408+ 97D7 D6 08            sub 8
 409+ 97D9 67               ld h,a
 410+ 97DA 7C           2 ld a,h
 411+ 97DB FE 58            cp $58
 412+ 97DD 28 02            jr z,3F
 413+ 97DF
 414+ 97DF 10 E0            djnz 1B
 415+ 97E1 ED 7B 37 88  3 ld sp,(Stack)
 416+ 97E5 C9               ret
 417+ 97E6
# file closed: Rutinas_de_impresion_sprites.asm
1797  97E6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97E6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97E6              ;
   3+ 97E6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97E6              ;
   5+ 97E6              ; *****************************************************************************************************************************************************************************************
   6+ 97E6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97E6
   8+ 97E6 7C           calcula_tercio ld a,h
   9+ 97E7 E6 18        	and $18
  10+ 97E9 CB 2F        	sra a
  11+ 97EB CB 2F        	sra a
  12+ 97ED CB 2F        	sra a
  13+ 97EF C9           	ret
  14+ 97F0
# file closed: calcula_tercio.asm
1798  97F0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97F0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97F0              ;
   3+ 97F0              ;
   4+ 97F0              ;	CLS.
   5+ 97F0              ;
   6+ 97F0              ;	Limpia la pantalla y define sus atributos.
   7+ 97F0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97F0              ;
   9+ 97F0              ;	COLORES: 0 ..... NEGRO
  10+ 97F0              ;    		 1 ..... AZUL
  11+ 97F0              ; 			 2 ..... ROJO
  12+ 97F0              ;			 3 ..... MAGENTA
  13+ 97F0              ; 			 4 ..... VERDE
  14+ 97F0              ; 			 5 ..... CIAN
  15+ 97F0              ;			 6 ..... AMARILLO
  16+ 97F0              ; 			 7 ..... BLANCO
  17+ 97F0              ;
  18+ 97F0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97F0              ;
  20+ 97F0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97F0
  22+ 97F0
  23+ 97F0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97F3 11 01 40     	LD DE,$4001
  25+ 97F6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97F9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97FB ED B0        	LDIR
  28+ 97FD 01 FF 02     	LD BC,767
  29+ 9800 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9801 ED B0        	LDIR
  31+ 9803 C9           	ret
  32+ 9804
# file closed: Cls.asm
1799  9804              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9804
   2+ 9804              ; ******************************************************************************************************************************************************************************************
   3+ 9804              ;
   4+ 9804              ;   20/05/23
   5+ 9804              ;
   6+ 9804              ;	Recompone_posicion_inicio
   7+ 9804              ;
   8+ 9804              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9804              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9804              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9804              ;	_ a una u otra rutina.
  12+ 9804
  13+ 9804              Recompone_posicion_inicio
  14+ 9804
  15+ 9804 2A F7 87     	ld hl,(Posicion_inicio)
  16+ 9807 7D           	ld a,l
  17+ 9808 E6 1F        	and $1f
  18+ 980A 28 16        	jr z,1F
  19+ 980C
  20+ 980C FE 1F        	cp $1f
  21+ 980E 28 0D        	jr z,3F
  22+ 9810
  23+ 9810 21 0C 88     	ld hl,Ctrl_2
  24+ 9813 CB C6        	set 0,(hl)
  25+ 9815 2A E9 87     	ld hl,(Puntero_objeto)
  26+ 9818 22 27 88     	ld (Repone_puntero_objeto),hl
  27+ 981B 18 08        	jr 2F
  28+ 981D
  29+ 981D CD CB 99     3 call Mov_left
  30+ 9820 18 03        	jr 2F
  31+ 9822
  32+ 9822 CD A8 98     1 call Mov_right
  33+ 9825 21 00 F0     2 ld hl,Sprite_vacio
  34+ 9828 22 E9 87     	ld (Puntero_objeto),hl
  35+ 982B C9           	ret
  36+ 982C
  37+ 982C              ; ******************************************************************************************************************************************************************************************
  38+ 982C              ;
  39+ 982C              ;   27/05/23
  40+ 982C              ;
  41+ 982C              ;	Mov_down
  42+ 982C              ;
  43+ 982C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 982C              ;
  45+ 982C              ;
  46+ 982C              Mov_down
  47+ 982C
  48+ 982C CD 96 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 982F              ;																	; _ repone (Puntero_objeto).
  50+ 982F 21 07 88     	ld hl,Ctrl_0
  51+ 9832 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9834              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9834              ; 																	; _ en el caso de que no lo haya.
  54+ 9834 3A 11 88     	ld a,(Vel_down)
  55+ 9837 47           	ld b,a
  56+ 9838 2A E7 87         ld hl,(Posicion_actual)
  57+ 983B CD E6 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 983E E6 02        	and 2
  59+ 9840 28 17        	jr z,1F
  60+ 9842
  61+ 9842              ; Nos encontramos en el último tercio de pantalla.
  62+ 9842              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9842
  64+ 9842 7C           	ld a,h
  65+ 9843 FE 57        	cp $57
  66+ 9845 20 12        	jr nz,1F
  67+ 9847
  68+ 9847 7D           	ld a,l
  69+ 9848 C6 20        	add $20
  70+ 984A 30 0D        	jr nc,1F
  71+ 984C
  72+ 984C              ; ------------------------------
  73+ 984C              ;
  74+ 984C              ;	12/01/24
  75+ 984C
  76+ 984C              ;	call Reaparece_arriba
  77+ 984C CD 58 9B     	call Reinicio
  78+ 984F
  79+ 984F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 984F
  81+ 984F 3A 45 88     	ld a,(Ctrl_3)
  82+ 9852 CB CF        	set 1,a
  83+ 9854 32 45 88     	ld (Ctrl_3),a
  84+ 9857
  85+ 9857 18 08        	jr 3F
  86+ 9859              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9859              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9859              ; ------------------------------
  89+ 9859
  90+ 9859 CD D3 94     1 call NextScan
  91+ 985C 22 E7 87     	ld (Posicion_actual),hl
  92+ 985F 10 DA            djnz 2B
  93+ 9861 CD 7E 9B     3 call Genera_coordenadas
  94+ 9864 C9           	ret
  95+ 9865
  96+ 9865              ; ******************************************************************************************************************************************************************************************
  97+ 9865              ;
  98+ 9865              ;   27/05/23
  99+ 9865              ;
 100+ 9865              ;	Mov_up
 101+ 9865              ;
 102+ 9865              ; 	Mueve el Sprite hacia arriba.
 103+ 9865              ;
 104+ 9865              ;
 105+ 9865              Mov_up
 106+ 9865
 107+ 9865 CD 96 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9868              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9868 21 07 88     	ld hl,Ctrl_0
 110+ 986B CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 986D              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 986D              ; 																		; _ en el caso de que no lo haya.
 113+ 986D 3A 10 88     	ld a,(Vel_up)
 114+ 9870 47           	ld b,a
 115+ 9871 2A E7 87     	ld hl,(Posicion_actual)
 116+ 9874 CD E6 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9877 A7           	and a
 118+ 9878 20 10        	jr nz,1F
 119+ 987A
 120+ 987A              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 987A              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 987A
 123+ 987A 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 987B FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 987D 20 0B            jr nz,1F
 126+ 987F 7D               ld a,l
 127+ 9880 D6 20            sub $20
 128+ 9882 30 06            jr nc,1F
 129+ 9884 25               dec h
 130+ 9885
 131+ 9885              ; -----------------------------
 132+ 9885 CD 39 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9888              ;	call Reinicio
 134+ 9888              ; -----------------------------
 135+ 9888
 136+ 9888 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 988A CD E2 94     1 call PreviousScan
 138+ 988D 22 E7 87     	ld (Posicion_actual),hl
 139+ 9890 10 E2            djnz 3B
 140+ 9892 CD 7E 9B     2 call Genera_coordenadas
 141+ 9895 C9           	ret
 142+ 9896
 143+ 9896              ; -----------------------------
 144+ 9896              ;
 145+ 9896              ;	27/5/23
 146+ 9896              ;
 147+ 9896              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9896              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9896              ;
 150+ 9896              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9896              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9896              ;
 153+ 9896              ;	Modifica: A y (Puntero_objeto).
 154+ 9896
 155+ 9896 3A 0C 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9899 CB 47        	bit 0,a
 157+ 989B C8           	ret z
 158+ 989C CB 87        	res 0,a
 159+ 989E 32 0C 88     	ld (Ctrl_2),a
 160+ 98A1 2A 27 88     	ld hl,(Repone_puntero_objeto)
 161+ 98A4 22 E9 87     	ld (Puntero_objeto),hl
 162+ 98A7 C9           	ret
 163+ 98A8
 164+ 98A8              ; ******************************************************************************************************************************************************************************************
 165+ 98A8              ;
 166+ 98A8              ;	19/10/22
 167+ 98A8              ;
 168+ 98A8              ;	Mov_right.
 169+ 98A8              ;
 170+ 98A8              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 98A8              ;
 172+ 98A8
 173+ 98A8 3A 07 88     Mov_right ld a,(Ctrl_0)
 174+ 98AB CB 77        	bit 6,a
 175+ 98AD 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 98AF
 177+ 98AF CD E7 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 98B2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 98B3
 180+ 98B3 21 07 88     	ld hl,Ctrl_0
 181+ 98B6 CB E6        	set 4,(hl)
 182+ 98B8 18 52        	jr 8F
 183+ 98BA
 184+ 98BA 21 07 88     10 ld hl,Ctrl_0
 185+ 98BD CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 98BF              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 98BF              ; 																	; _ en el caso de que no lo haya.
 188+ 98BF 3A EB 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 98C2 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 98C4 20 46        	jr nz,8F
 191+ 98C6
 192+ 98C6 3A ED 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 98C9 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 98CA 28 40        	jr z,8F
 195+ 98CC
 196+ 98CC              ; ---------- ---------- ----------
 197+ 98CC              ;
 198+ 98CC              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98CC
 200+ 98CC 3A 0F 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 98CF FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98D1 28 11        	jr z,1F
 203+ 98D3 38 06        	jr c,6F
 204+ 98D5 FE 04        	cp 4
 205+ 98D7 28 14        	jr z,7F
 206+ 98D9 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 98DB
 208+ 98DB              ; ---------- ---------- ----------
 209+ 98DB              ;
 210+ 98DB              ; Perfiles de velocidad
 211+ 98DB              ;
 212+ 98DB
 213+ 98DB 3A ED 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 98DE FE FE        	cp $fe
 215+ 98E0 20 2A        	jr nz,8F
 216+ 98E2 18 10        	jr 3F
 217+ 98E4 3A ED 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 98E7 FE FD        	cp $fd
 219+ 98E9 20 21        	jr nz,8F
 220+ 98EB 18 07        	jr 3F
 221+ 98ED 3A ED 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 98F0 FE FB        	cp $fb
 223+ 98F2 20 18        	jr nz,8F
 224+ 98F4
 225+ 98F4              ; ---------- ---------- ----------
 226+ 98F4
 227+ 98F4              3
 228+ 98F4 CD 27 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 98F7              ;	call Reinicio
 230+ 98F7
 231+ 98F7              ; ---------- ---------- ----------
 232+ 98F7              ;
 233+ 98F7              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 98F7
 235+ 98F7 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 98F9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 98FA CD 13 99     	call DESPLZ_DER
 238+ 98FD C1           	pop bc
 239+ 98FE 10 F9        	djnz 5B
 240+ 9900 2A E7 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9903 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9904 22 E7 87     	ld (Posicion_actual),hl
 243+ 9907 CD 7E 9B     	call Genera_coordenadas
 244+ 990A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 990C
 246+ 990C              ; ---------- ---------- ----------
 247+ 990C
 248+ 990C 2A E7 87     8 ld hl,(Posicion_actual)
 249+ 990F CD 13 99     	call DESPLZ_DER
 250+ 9912 C9           2 ret
 251+ 9913
 252+ 9913              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9913              ;
 254+ 9913              ;	22/9/22
 255+ 9913              ;
 256+ 9913
 257+ 9913 CD 22 99     DESPLZ_DER call Desplaza_derecha
 258+ 9916 CD 6E 99         call modifica_parametros_1er_DESPLZ_2
 259+ 9919 CD 97 99         call Ciclo_completo
 260+ 991C 21 07 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 991F CB FE        	set 7,(hl)
 262+ 9921 C9           	ret
 263+ 9922
 264+ 9922              ; ******************************************************************************************************************************************************************************************
 265+ 9922              ;	15/02/23
 266+ 9922              ;
 267+ 9922
 268+ 9922 3A 0F 88     Desplaza_derecha ld a,(Vel_right)
 269+ 9925 47           	ld b,a
 270+ 9926 2A F3 87     	ld hl,(Puntero_DESPLZ_der)
 271+ 9929 23           1 inc hl
 272+ 992A 23           	inc hl
 273+ 992B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 992D 22 F3 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9930 CD AF 8B     	call Extrae_address
 276+ 9933 22 E9 87     	ld (Puntero_objeto),hl
 277+ 9936
 278+ 9936              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9936
 280+ 9936              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9936              ; Cuántos movimientos hemos hecho ??
 282+ 9936              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9936
 284+ 9936 2A EF 87     7 ld hl,(Indice_Sprite_der)
 285+ 9939 EB           	ex de,hl
 286+ 993A A7           	and a
 287+ 993B ED 52        	sbc hl,de
 288+ 993D CB 3D        	srl l
 289+ 993F 3E 08        6 ld a,8
 290+ 9941 95           	sub l
 291+ 9942 30 1E        	jr nc,3F
 292+ 9944
 293+ 9944              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9944              ; B="0".
 295+ 9944
 296+ 9944 04           4 inc b
 297+ 9945 3C           	inc a
 298+ 9946 20 FC        	jr nz,4B
 299+ 9948 78           	ld a,b
 300+ 9949 08           	ex af,af
 301+ 994A 2A EF 87     	ld hl,(Indice_Sprite_der)
 302+ 994D 23           5 inc hl
 303+ 994E 23           	inc hl
 304+ 994F 10 FC        	djnz 5B
 305+ 9951 22 F3 87     	ld (Puntero_DESPLZ_der),hl
 306+ 9954 CD AF 8B     	call Extrae_address
 307+ 9957 22 E9 87     	ld (Puntero_objeto),hl
 308+ 995A
 309+ 995A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 995A              ; _(Posicion_actual).
 311+ 995A
 312+ 995A 21 E7 87     	ld hl,Posicion_actual
 313+ 995D 34           	inc (hl)
 314+ 995E 08               ex af,af
 315+ 995F 6F           	ld l,a
 316+ 9960 18 DD        	jr 6B
 317+ 9962
 318+ 9962              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9962
 320+ 9962 47           3 ld b,a
 321+ 9963 2A F1 87     	ld hl,(Indice_Sprite_izq)
 322+ 9966 23           2 inc hl
 323+ 9967 23           	inc hl
 324+ 9968 10 FC        	djnz 2B
 325+ 996A 22 F5 87     	ld (Puntero_DESPLZ_izq),hl
 326+ 996D C9           8 ret
 327+ 996E
 328+ 996E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 996E              ;
 330+ 996E              ;	24/7/22
 331+ 996E              ;
 332+ 996E              ;	modifica_parametros_1er_DESPLZ_2
 333+ 996E              ;
 334+ 996E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 996E              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 996E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 996E
 338+ 996E 3A ED 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9971 A7           	and a
 340+ 9972 20 1F        	jr nz,1F
 341+ 9974 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9976 32 ED 87         ld (CTRL_DESPLZ),a
 343+ 9979
 344+ 9979 21 E6 87     	ld hl,Columns
 345+ 997C 34           	inc (hl)
 346+ 997D 3A F9 87     	ld a,(Cuad_objeto)
 347+ 9980 E6 01        	and 1
 348+ 9982 28 0F        	jr z,1F
 349+ 9984 2A E7 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9987 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9988 22 E7 87     	ld (Posicion_actual),hl
 352+ 998B CD 7E 9B     	call Genera_coordenadas
 353+ 998E CD F3 9A     	call Inc_CTRL_DESPLZ
 354+ 9991 18 03        	jr 2F
 355+ 9993 CD F3 9A     1 call Inc_CTRL_DESPLZ
 356+ 9996 C9           2 ret
 357+ 9997
 358+ 9997              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9997              ;
 360+ 9997              ;	24/7/22
 361+ 9997              ;
 362+ 9997              ;	Ciclo_completo.
 363+ 9997              ;
 364+ 9997              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9997              ;
 366+ 9997              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9997              ; 	Decrementamos (Columns).
 368+ 9997              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9997              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9997
 371+ 9997
 372+ 9997 3A ED 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 999A FE FF        	cp $ff
 374+ 999C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 999E E6 F0        	and $f0
 376+ 99A0 20 28        	jr nz,3F
 377+ 99A2
 378+ 99A2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 99A2
 380+ 99A2 3A ED 87     	ld a,(CTRL_DESPLZ)
 381+ 99A5 47           	ld b,a
 382+ 99A6 3E F8        	ld a,$f8
 383+ 99A8 80           	add b
 384+ 99A9 32 ED 87     	ld (CTRL_DESPLZ),a
 385+ 99AC 18 1C        	jr 3F
 386+ 99AE 21 E6 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 99B1 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 99B2 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 99B3 32 ED 87     	ld (CTRL_DESPLZ),a
 390+ 99B6 3A F9 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 99B9 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 99BB 20 0A        	jr nz,2F
 393+ 99BD 2A E7 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 99C0 23           	inc hl
 395+ 99C1 22 E7 87     	ld (Posicion_actual),hl
 396+ 99C4 CD 7E 9B     	call Genera_coordenadas
 397+ 99C7
 398+ 99C7              ; Inicia el puntero de Sprite.
 399+ 99C7
 400+ 99C7 CD C4 8B     2 call Inicia_puntero_objeto_der
 401+ 99CA C9           3 ret
 402+ 99CB
 403+ 99CB              ; ******************************************************************************************************************************************************************************************
 404+ 99CB              ;
 405+ 99CB              ;	15/02/23
 406+ 99CB              ;
 407+ 99CB              ;	Mov_left.
 408+ 99CB              ;
 409+ 99CB              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 99CB              ;
 411+ 99CB              Mov_left
 412+ 99CB
 413+ 99CB 21 07 88     	ld hl,Ctrl_0
 414+ 99CE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99D0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99D0              ; 																	; _ en el caso de que no lo haya.
 417+ 99D0 3A 07 88     	ld a,(Ctrl_0)
 418+ 99D3 CB 77        	bit 6,a
 419+ 99D5 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 99D7
 421+ 99D7 CD ED 9A     	call Stop_Amadeus_left
 422+ 99DA C8           	ret z
 423+ 99DB 20 4A        	jr nz,8F
 424+ 99DD
 425+ 99DD 3A EB 87     11 ld a,(Coordenada_X)
 426+ 99E0 A7           	and a
 427+ 99E1 20 44        	jr nz,8F
 428+ 99E3
 429+ 99E3 3A ED 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 99E6 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 99E7 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 99E9
 433+ 99E9              ; ---------- ---------- ----------
 434+ 99E9
 435+ 99E9 3A 0E 88     	ld a,(Vel_left)
 436+ 99EC FE 02        	cp 2
 437+ 99EE 28 0F        	jr z,1F
 438+ 99F0 38 04        	jr c,6F
 439+ 99F2 FE 04        	cp 4
 440+ 99F4 28 12        	jr z,7F
 441+ 99F6
 442+ 99F6              ; ---------- ---------- ----------
 443+ 99F6
 444+ 99F6 3A ED 87     6 ld a,(CTRL_DESPLZ)
 445+ 99F9 FE F8        	cp $f8
 446+ 99FB 20 2A        	jr nz,8F
 447+ 99FD 18 10        	jr 4F
 448+ 99FF 3A ED 87     1 ld a,(CTRL_DESPLZ)
 449+ 9A02 FE F9        	cp $f9
 450+ 9A04 20 21        	jr nz,8F
 451+ 9A06 18 07        	jr 4F
 452+ 9A08 3A ED 87     7 ld a,(CTRL_DESPLZ)
 453+ 9A0B FE FB        	cp $fb
 454+ 9A0D 20 18        	jr nz,8F
 455+ 9A0F
 456+ 9A0F              ; ---------- ---------- ----------
 457+ 9A0F
 458+ 9A0F              4
 459+ 9A0F CD 15 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9A12              ;	call Reinicio
 461+ 9A12
 462+ 9A12              ; ---------- ---------- ----------
 463+ 9A12
 464+ 9A12 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9A14 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9A15
 467+ 9A15              ;	ld hl,(Indice_Sprite_izq)
 468+ 9A15              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9A15
 470+ 9A15 CD 2E 9A     	call DESPLZ_IZQ
 471+ 9A18 C1           	pop bc
 472+ 9A19 10 F9        	djnz 5B
 473+ 9A1B 2A E7 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9A1E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9A1F 22 E7 87     	ld (Posicion_actual),hl
 476+ 9A22 CD 7E 9B     	call Genera_coordenadas
 477+ 9A25 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9A27
 479+ 9A27              ; ---------- ---------- ----------
 480+ 9A27
 481+ 9A27              ; Movemos, no hay recolocación.
 482+ 9A27
 483+ 9A27 2A E7 87     8 ld hl,(Posicion_actual)
 484+ 9A2A CD 2E 9A     	call DESPLZ_IZQ
 485+ 9A2D C9           2 ret
 486+ 9A2E
 487+ 9A2E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A2E              ;
 489+ 9A2E              ;	22/9/22
 490+ 9A2E
 491+ 9A2E              DESPLZ_IZQ
 492+ 9A2E
 493+ 9A2E CD 3D 9A     	call Desplaza_izquierda
 494+ 9A31 CD 89 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A34 CD B1 9A     	call Ciclo_completo_2
 496+ 9A37 21 07 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A3A CB BE        	res 7,(hl)
 498+ 9A3C C9           	ret
 499+ 9A3D
 500+ 9A3D              Desplaza_izquierda
 501+ 9A3D
 502+ 9A3D 3A 0E 88     	ld a,(Vel_left)
 503+ 9A40 47           	ld b,a
 504+ 9A41 2A F5 87     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A44 23           1 inc hl
 506+ 9A45 23           	inc hl
 507+ 9A46 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A48 22 F5 87     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A4B CD AF 8B     	call Extrae_address
 510+ 9A4E 22 E9 87     	ld (Puntero_objeto),hl
 511+ 9A51
 512+ 9A51              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A51
 514+ 9A51              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A51              ; Cuántos movimientos hemos hecho ??
 516+ 9A51              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A51
 518+ 9A51 2A F1 87     7 ld hl,(Indice_Sprite_izq)
 519+ 9A54 EB           	ex de,hl
 520+ 9A55 A7           	and a
 521+ 9A56 ED 52        	sbc hl,de
 522+ 9A58 CB 3D        	srl l
 523+ 9A5A 3E 08        6 ld a,8
 524+ 9A5C 95           	sub l
 525+ 9A5D 30 1E        	jr nc,3F
 526+ 9A5F
 527+ 9A5F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A5F              ; B="0".
 529+ 9A5F
 530+ 9A5F 04           4 inc b
 531+ 9A60 3C           	inc a
 532+ 9A61 20 FC        	jr nz,4B
 533+ 9A63 78           	ld a,b
 534+ 9A64 08           	ex af,af
 535+ 9A65 2A F1 87     	ld hl,(Indice_Sprite_izq)
 536+ 9A68 23           5 inc hl
 537+ 9A69 23           	inc hl
 538+ 9A6A 10 FC        	djnz 5B
 539+ 9A6C 22 F5 87     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A6F CD AF 8B     	call Extrae_address
 541+ 9A72 22 E9 87     	ld (Puntero_objeto),hl
 542+ 9A75
 543+ 9A75              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A75              ; _(Posicion_actual).
 545+ 9A75
 546+ 9A75 21 E7 87     	ld hl,Posicion_actual
 547+ 9A78 35           	dec (hl)
 548+ 9A79 08           	ex af,af
 549+ 9A7A 6F           	ld l,a
 550+ 9A7B 18 DD        	jr 6B
 551+ 9A7D
 552+ 9A7D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A7D
 554+ 9A7D 47           3 ld b,a
 555+ 9A7E 2A EF 87     	ld hl,(Indice_Sprite_der)
 556+ 9A81 23           2 inc hl
 557+ 9A82 23           	inc hl
 558+ 9A83 10 FC        	djnz 2B
 559+ 9A85 22 F3 87     	ld (Puntero_DESPLZ_der),hl
 560+ 9A88 C9           8 ret
 561+ 9A89
 562+ 9A89              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A89              ;
 564+ 9A89              ;	modifica_parametros_1er_DESPLZ
 565+ 9A89              ;
 566+ 9A89              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A89              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A89              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A89
 570+ 9A89 3A ED 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A8C A7           	and a
 572+ 9A8D 20 1E        	jr nz,1F
 573+ 9A8F 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9A90 32 ED 87         ld (CTRL_DESPLZ),a
 575+ 9A93 21 E6 87     	ld hl,Columns
 576+ 9A96 34           	inc (hl)
 577+ 9A97 3A F9 87     	ld a,(Cuad_objeto)
 578+ 9A9A E6 01        	and 1
 579+ 9A9C 20 0F        	jr nz,1F
 580+ 9A9E 2A E7 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9AA1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9AA2 22 E7 87     	ld (Posicion_actual),hl
 583+ 9AA5 CD 7E 9B     	call Genera_coordenadas
 584+ 9AA8 CD 04 9B     	call Dec_CTRL_DESPLZ
 585+ 9AAB 18 03        	jr 2F
 586+ 9AAD CD 04 9B     1 call Dec_CTRL_DESPLZ
 587+ 9AB0 C9           2 ret
 588+ 9AB1
 589+ 9AB1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9AB1
 591+ 9AB1 3A ED 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9AB4 FE F7        	cp $f7
 593+ 9AB6 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9AB8 30 2C        	jr nc,3F
 595+ 9ABA
 596+ 9ABA              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9ABA
 598+ 9ABA 06 00        	ld b,0
 599+ 9ABC 04           4 inc b
 600+ 9ABD 3C           	inc a
 601+ 9ABE FE F7        	cp $f7
 602+ 9AC0 20 FA        	jr nz,4B
 603+ 9AC2 3E FF        	ld a,$ff
 604+ 9AC4 90           	sub b
 605+ 9AC5 32 ED 87     	ld (CTRL_DESPLZ),a
 606+ 9AC8 18 1C        	jr 3F
 607+ 9ACA
 608+ 9ACA              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9ACA
 610+ 9ACA 21 E6 87     1 ld hl,Columns
 611+ 9ACD 35           	dec (hl)
 612+ 9ACE AF           	xor a
 613+ 9ACF 32 ED 87     	ld (CTRL_DESPLZ),a
 614+ 9AD2 3A F9 87     	ld a,(Cuad_objeto)
 615+ 9AD5 E6 01        	and 1
 616+ 9AD7 28 0A        	jr z,2F
 617+ 9AD9 2A E7 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9ADC 2B           	dec hl
 619+ 9ADD 22 E7 87     	ld (Posicion_actual),hl
 620+ 9AE0 CD 7E 9B     	call Genera_coordenadas
 621+ 9AE3
 622+ 9AE3              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9AE3
 624+ 9AE3 CD D7 8B     2 call Inicia_puntero_objeto_izq
 625+ 9AE6 C9           3 ret
 626+ 9AE7
 627+ 9AE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9AE7              ;
 629+ 9AE7              ;	19/10/22
 630+ 9AE7              ;
 631+ 9AE7              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9AE7              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9AE7
 634+ 9AE7 3A EB 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9AEA FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9AEC C9           	ret
 637+ 9AED
 638+ 9AED              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9AED              ;
 640+ 9AED              ;	19/10/22
 641+ 9AED              ;
 642+ 9AED              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9AED              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9AED
 645+ 9AED 3A EB 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9AF0 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9AF2 C9           	ret
 648+ 9AF3
 649+ 9AF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9AF3              ;
 651+ 9AF3              ;	24/7/22
 652+ 9AF3              ;
 653+ 9AF3              ;	Inc_CTRL_DESPLZ
 654+ 9AF3              ;
 655+ 9AF3              ;
 656+ 9AF3              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9AF3
 658+ 9AF3 21 ED 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9AF6 3A 0F 88     	ld a,(Vel_right)
 660+ 9AF9 A7           	and a
 661+ 9AFA 28 06        	jr z,1F
 662+ 9AFC 47           	ld b,a
 663+ 9AFD 34           3 inc (hl)
 664+ 9AFE 10 FD        	djnz 3B
 665+ 9B00 18 01        	jr 2F
 666+ 9B02 34           1 inc (hl)
 667+ 9B03 C9           2 ret
 668+ 9B04
 669+ 9B04              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9B04              ;
 671+ 9B04              ;	5/2/23
 672+ 9B04              ;
 673+ 9B04              ;	Dec_CTRL_DESPLZ
 674+ 9B04              ;
 675+ 9B04              ;
 676+ 9B04              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9B04
 678+ 9B04 21 ED 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9B07 3A 0E 88     	ld a,(Vel_left)
 680+ 9B0A A7           	and a
 681+ 9B0B 28 06        	jr z,1F
 682+ 9B0D 47           	ld b,a
 683+ 9B0E 35           3 dec (hl)
 684+ 9B0F 10 FD        	djnz 3B
 685+ 9B11 18 01        	jr 2F
 686+ 9B13 35           1 dec (hl)
 687+ 9B14 C9           2 ret
 688+ 9B15
 689+ 9B15              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9B15
 691+ 9B15 2A E7 87     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9B18 01 1F 00     	ld bc,31
 693+ 9B1B A7           	and a
 694+ 9B1C ED 4A        	adc hl,bc
 695+ 9B1E 22 E7 87     	ld (Posicion_actual),hl
 696+ 9B21 21 07 88     	ld hl,Ctrl_0														; $xxx1
 697+ 9B24 CB C6        	set 0,(hl)
 698+ 9B26 C9           	ret
 699+ 9B27
 700+ 9B27              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9B27
 702+ 9B27 2A E7 87     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9B2A 01 1F 00     	ld bc,31
 704+ 9B2D A7           	and a
 705+ 9B2E ED 42        	sbc hl,bc
 706+ 9B30 22 E7 87     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B33 21 07 88     	ld hl,Ctrl_0
 708+ 9B36 CB CE        	set 1,(hl)
 709+ 9B38 C9           	ret
 710+ 9B39
 711+ 9B39              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B39
 713+ 9B39 24           Reaparece_abajo inc h
 714+ 9B3A 01 E0 17     	ld bc,$17e0
 715+ 9B3D A7           	and a
 716+ 9B3E ED 4A        	adc hl,bc
 717+ 9B40 22 E7 87     	ld (Posicion_actual),hl
 718+ 9B43 21 07 88     	ld hl,Ctrl_0
 719+ 9B46 CB D6        	set 2,(hl)
 720+ 9B48 C9           	ret
 721+ 9B49
 722+ 9B49              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B49
 724+ 9B49 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B4C A7           	and a
 726+ 9B4D ED 42        	sbc hl,bc
 727+ 9B4F 22 E7 87     	ld (Posicion_actual),hl
 728+ 9B52 21 07 88     	ld hl,Ctrl_0
 729+ 9B55 CB DE        	set 3,(hl)
 730+ 9B57 C9           	ret
 731+ 9B58
 732+ 9B58              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B58              ;
 734+ 9B58              ;	15/07/23
 735+ 9B58
 736+ 9B58              Reinicio
 737+ 9B58
 738+ 9B58              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B58
 740+ 9B58 AF           	xor a
 741+ 9B59 21 1E 88     	ld hl,Puntero_indice_mov_bucle
 742+ 9B5C CD 7A 9B     	call Limpia_contenido_hl
 743+ 9B5F
 744+ 9B5F 21 E7 87     	ld hl,Posicion_actual
 745+ 9B62 CD 7A 9B     	call Limpia_contenido_hl
 746+ 9B65
 747+ 9B65 CD 69 86     	call Inicializa_Puntero_indice_mov
 748+ 9B68 CD 3B 9E     	call Inicia_Puntero_mov
 749+ 9B6B
 750+ 9B6B 21 20 88     	ld hl,Incrementa_puntero
 751+ 9B6E 06 05        	ld b,5
 752+ 9B70 77           1 ld (hl),a
 753+ 9B71 23           	inc hl
 754+ 9B72 10 FC        	djnz 1B
 755+ 9B74
 756+ 9B74 21 0C 88     	ld hl,Ctrl_2
 757+ 9B77 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B79
 759+ 9B79 C9           	ret
 760+ 9B7A
 761+ 9B7A 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B7B 23           	inc hl
 763+ 9B7C 77           	ld (hl),a
 764+ 9B7D C9           	ret
 765+ 9B7E
 766+ 9B7E
# file closed: Direcciones.asm
1800  9B7E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B7E              ; ------------------------------------------------------------------------
   2+ 9B7E              ;
   3+ 9B7E              ;	22/1/24
   4+ 9B7E              ;
   5+ 9B7E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B7E              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B7E              ;
   8+ 9B7E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B7E              ;
  10+ 9B7E              ;	Modifica: A,BC y DE.
  11+ 9B7E
  12+ 9B7E 7D           Genera_coordenadas ld a,l
  13+ 9B7F E6 1F        	and $1f
  14+ 9B81 32 EB 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B84
  16+ 9B84 3E 39        	ld a,$39											; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9B86 BC           	cp h
  18+ 9B87 20 05        	jr nz,4F
  19+ 9B89
  20+ 9B89 AF           	xor a
  21+ 9B8A 32 EC 87     	ld (Coordenada_y),a
  22+ 9B8D C9           	ret
  23+ 9B8E
  24+ 9B8E CD E6 97     4 call calcula_tercio
  25+ 9B91 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  26+ 9B92
  27+ 9B92 1E 00        	ld e,0
  28+ 9B94 7D           	ld a,l
  29+ 9B95 E6 E0        	and $e0
  30+ 9B97 28 01        	jr z,1F
  31+ 9B99 04           	inc b
  32+ 9B9A
  33+ 9B9A 04           1 inc b
  34+ 9B9B 05           	dec b
  35+ 9B9C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  36+ 9B9E              ;														; _ , salimos.
  37+ 9B9E 1C           3 inc e
  38+ 9B9F D6 20        	sub 32
  39+ 9BA1 20 FB        	jr nz,3B
  40+ 9BA3 10 F5        	djnz 1B
  41+ 9BA5
  42+ 9BA5 7B           2 ld a,e
  43+ 9BA6 32 EC 87     	ld (Coordenada_y),a
  44+ 9BA9
  45+ 9BA9 C9           	ret
  46+ 9BAA
  47+ 9BAA              ; ------------------------------------------------------------------------
  48+ 9BAA              ;	28/05/23
  49+ 9BAA              ;
  50+ 9BAA              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  51+ 9BAA              ;	Fila superior "0", Columna izquierda "0".
  52+ 9BAA              ;
  53+ 9BAA              ;	Input: HL contendrá la posición del proyectil en pantalla.
  54+ 9BAA              ;	Output: DE contendrá las coordenadas del disparo:
  55+ 9BAA              ;
  56+ 9BAA              ;		DE="$120d"
  57+ 9BAA              ;
  58+ 9BAA              ;		D, (Coordenada_X), Columnas, $12
  59+ 9BAA              ;		E, (Coordenada_y), Filas, $0d
  60+ 9BAA              ;
  61+ 9BAA              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  62+ 9BAA
  63+ 9BAA              ;	Modifica: A,BC y DE.
  64+ 9BAA
  65+ 9BAA
  66+ 9BAA              Genera_coordenadas_disparo
  67+ 9BAA
  68+ 9BAA              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  69+ 9BAA
  70+ 9BAA 7D           	ld a,l
  71+ 9BAB E6 1F        	and $1f
  72+ 9BAD 57           	ld d,a 												; Columnas en D. Coordenada_X.
  73+ 9BAE CD E6 97     	call calcula_tercio
  74+ 9BB1 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  75+ 9BB2 1E 00        	ld e,0
  76+ 9BB4 7D           	ld a,l
  77+ 9BB5 E6 E0        	and $e0
  78+ 9BB7 28 01        	jr z,1F
  79+ 9BB9 04           	inc b
  80+ 9BBA 1C           1 inc e
  81+ 9BBB D6 20        	sub 32
  82+ 9BBD 20 FB        	jr nz,1B
  83+ 9BBF 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  84+ 9BC1 C9           	ret
  85+ 9BC2
# file closed: Genera_coordenadas.asm
1801  9BC2              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BC2              ; Relojes y temporizaciones.
   2+ 9BC2
   3+ 9BC2              ; ------------------------------------------------------
   4+ 9BC2              ;
   5+ 9BC2              ;	16/7/23
   6+ 9BC2              ;
   7+ 9BC2              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BC2              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BC2              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BC2              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BC2              ;
  12+ 9BC2              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BC2              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BC2
  15+ 9BC2              ; Disparo_entidad db 1
  16+ 9BC2              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BC2              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BC2
  19+ 9BC2              Habilita_disparos
  20+ 9BC2
  21+ 9BC2 7E           	ld a,(hl)
  22+ 9BC3 A7           	and a
  23+ 9BC4 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BC5
  25+ 9BC5 EB           	ex de,hl
  26+ 9BC6
  27+ 9BC6 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BC7 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BC8
  30+ 9BC8              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BC8
  32+ 9BC8 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BC9 7E           	ld a,(hl)
  34+ 9BCA 23           	inc hl
  35+ 9BCB 77           	ld (hl),a
  36+ 9BCC
  37+ 9BCC EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BCD 3E 01        	ld a,1
  39+ 9BCF 77           	ld (hl),a
  40+ 9BD0 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1802  9BD1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BD1
   2+ 9BD1
   3+ 9BD1              ;   07/07/23
   4+ 9BD1              ;
   5+ 9BD1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BD1              ;
   7+ 9BD1              ;   Codificación:
   8+ 9BD1              ;
   9+ 9BD1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BD1              ;
  11+ 9BD1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BD1              ;
  13+ 9BD1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BD1              ;
  15+ 9BD1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BD1              ;
  17+ 9BD1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BD1              ;                               ..... %01000010 Vel_up 4
  19+ 9BD1              ;                                               Vel_down 2
  20+ 9BD1              ;                               ..... $42
  21+ 9BD1              ;
  22+ 9BD1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BD1              ;
  24+ 9BD1              ;                               ..... %01000010 Vel_left 4
  25+ 9BD1              ;                                               Vel_right 2
  26+ 9BD1              ;                               ..... $42
  27+ 9BD1              ;
  28+ 9BD1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BD1              ;
  30+ 9BD1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BD1              ;
  32+ 9BD1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BD1              ;
  34+ 9BD1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BD1              ;                                     $53
  36+ 9BD1              ;
  37+ 9BD1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BD1              ;
  39+ 9BD1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BD1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BD1              ;
  42+ 9BD1              ;                       Arriba ..... $81
  43+ 9BD1              ;                       Arriba - izquierda ..... $a1
  44+ 9BD1              ;                       Arriba - derecha ..... $91
  45+ 9BD1              ;
  46+ 9BD1              ;                       Abajo ..... $41
  47+ 9BD1              ;                       Abajo - izquierda ..... $61
  48+ 9BD1              ;                       Abajo - derecha ..... $51
  49+ 9BD1              ;
  50+ 9BD1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BD1              ;
  52+ 9BD1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BD1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BD1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BD1              ;
  56+ 9BD1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BD1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BD1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BD1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BD1              ;
  61+ 9BD1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BD1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BD1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BD1              ;
  65+ 9BD1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BD1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BD1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BD1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BD1
  70+ 9BD1              ; ----- ----- ----- ----- -----
  71+ 9BD1
  72+ 9BD1 FD 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BD3 05 9C            defw F_1
  74+ 9BD5 0F 9C            defw F_2
  75+ 9BD7 19 9C            defw Codo_abajo_derecha
  76+ 9BD9 4D 9C            defw Derecha_y_subiendo
  77+ 9BDB 57 9C            defw Derecha_y_subiendo_1
  78+ 9BDD 61 9C            defw F_3
  79+ 9BDF 6B 9C            defw F_4
  80+ 9BE1 75 9C            defw Derecha_y_bajando
  81+ 9BE3 7F 9C            defw Derecha_y_bajando_1
  82+ 9BE5 89 9C            defw Derecha_y_bajando_2
  83+ 9BE7 93 9C            defw Codo_derecha_abajo
  84+ 9BE9 C3 9C            defw Codo_abajo_izq.
  85+ 9BEB F7 9C            defw Izquierda_y_subiendo
  86+ 9BED 01 9D            defw Izquierda_y_subiendo_1
  87+ 9BEF 0B 9D            defw F_5
  88+ 9BF1 15 9D            defw F_6
  89+ 9BF3 1F 9D            defw Izquierda_y_bajando
  90+ 9BF5 29 9D            defw Izquierda_y_bajando_1
  91+ 9BF7 33 9D            defw Izquierda_y_bajando_2
  92+ 9BF9 3D 9D            defw Codo_izquierda_abajo
  93+ 9BFB 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9BFD
  95+ 9BFD 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C01 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C05
  98+ 9C05 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C09 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C0D 08 00
 100+ 9C0F 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C13 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C17 0F FE
 102+ 9C19
 103+ 9C19 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C1D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C21 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C25 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C29 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C2D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C31 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C35 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C39 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C3D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C41 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C45 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C49 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C4D
 117+ 9C4D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C51 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C55 06 00
 119+ 9C57
 120+ 9C57 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C5B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C5F 02 00
 122+ 9C61
 123+ 9C61 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C65 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C69 04 00
 125+ 9C6B 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C6F 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C73 08 00
 127+ 9C75
 128+ 9C75 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C79 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C7D 02 00
 130+ 9C7F
 131+ 9C7F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9C83 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9C87 06 00
 133+ 9C89
 134+ 9C89 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9C8D 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9C91 06 00
 136+ 9C93
 137+ 9C93              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9C93
 139+ 9C93 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9C97 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9C9B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9C9F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CA3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CA7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CAB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CAF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CB3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CB7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CBB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9CBF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9CC3
 152+ 9CC3 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9CC7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9CCB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9CCF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9CD3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9CD7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9CDB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CDF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9CE3 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9CE7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9CEB 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9CEF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9CF3 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9CF7
 166+ 9CF7 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9CFB 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9CFF 06 00
 168+ 9D01
 169+ 9D01 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D05 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D09 02 00
 171+ 9D0B
 172+ 9D0B 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D0F 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D13 04 00
 174+ 9D15 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D19 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D1D 08 00
 176+ 9D1F
 177+ 9D1F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D23 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D27 02 00
 179+ 9D29
 180+ 9D29 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D2D 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D31 06 00
 182+ 9D33
 183+ 9D33 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D37 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D3B 06 00
 185+ 9D3D
 186+ 9D3D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D41 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D45 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D49 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D4D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D51 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D55 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D59 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D5D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D61 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D65 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D69 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D6D
 199+ 9D6D              ; ----- ----- ----- ----- -----
 200+ 9D6D              ;
 201+ 9D6D              ;   28/12/23
 202+ 9D6D
 203+ 9D6D              Movimiento
 204+ 9D6D
 205+ 9D6D              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D6D
 207+ 9D6D 3A 0C 88         ld a,(Ctrl_2)
 208+ 9D70 CB 57            bit 2,a
 209+ 9D72 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D74
 211+ 9D74 2A 1C 88         ld hl,(Puntero_mov)
 212+ 9D77 7E               ld a,(hl)
 213+ 9D78
 214+ 9D78              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D78
 216+ 9D78              Inicia_desplazamiento.
 217+ 9D78
 218+ 9D78              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D78
 220+ 9D78 CD 78 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D7B
 222+ 9D7B              ; Iniciamos (Repetimos_mov).
 223+ 9D7B
 224+ 9D7B 7E               ld a,(hl)
 225+ 9D7C E6 0F            and $0f
 226+ 9D7E 32 22 88         ld (Repetimos_desplazamiento),a
 227+ 9D81 32 23 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9D84
 229+ 9D84              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9D84
 231+ 9D84 23               inc hl
 232+ 9D85 7E               ld a,(hl)
 233+ 9D86 32 25 88         ld (Cola_de_desplazamiento),a
 234+ 9D89 2B               dec hl
 235+ 9D8A
 236+ 9D8A 21 0C 88         ld hl,Ctrl_2
 237+ 9D8D CB D6            set 2,(hl)
 238+ 9D8F
 239+ 9D8F              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9D8F              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9D8F
 242+ 9D8F              Desplazamiento_iniciado
 243+ 9D8F
 244+ 9D8F CD 46 9E         call Aplica_desplazamiento
 245+ 9D92
 246+ 9D92              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9D92
 248+ 9D92 3A 45 88         ld a,(Ctrl_3)
 249+ 9D95 CB 57            bit 2,a
 250+ 9D97 C0               ret nz
 251+ 9D98
 252+ 9D98 3A 0C 88         ld a,(Ctrl_2)
 253+ 9D9B CB 67            bit 4,a
 254+ 9D9D C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9D9E
 256+ 9D9E 21 22 88     3 ld hl,Repetimos_desplazamiento
 257+ 9DA1 35               dec (hl)
 258+ 9DA2 C0               ret nz
 259+ 9DA3
 260+ 9DA3              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DA3              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DA3              ; Analiza (Cola_de_desplazamiento).
 263+ 9DA3
 264+ 9DA3 3A 25 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DA6 A7               and a
 266+ 9DA7 CC A1 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DAA 28 30            jr z,Reinicia_el_movimiento
 268+ 9DAC
 269+ 9DAC FE FF            cp $ff
 270+ 9DAE 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DB0
 272+ 9DB0 FE FE            cp $fe
 273+ 9DB2 CC 1F 9E         call z,Fijamos_bucle
 274+ 9DB5 28 25            jr z,Reinicia_el_movimiento
 275+ 9DB7
 276+ 9DB7 FE FD            cp $fd
 277+ 9DB9 20 11            jr nz,1F
 278+ 9DBB
 279+ 9DBB              ; ---
 280+ 9DBB              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DBB
 282+ 9DBB 3A 0C 88         ld a,(Ctrl_2)
 283+ 9DBE CB 5F            bit 3,a
 284+ 9DC0 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9DC2
 286+ 9DC2              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9DC2
 288+ 9DC2 21 0C 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9DC5 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9DC7
 291+ 9DC7 CD 30 9E         call Inicia_Repetimos_movimiento
 292+ 9DCA 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9DCC              ; ---
 294+ 9DCC
 295+ 9DCC FE 01        1 cp 1
 296+ 9DCE CA 09 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9DD1
 298+ 9DD1 3D               dec a
 299+ 9DD2 32 25 88         ld (Cola_de_desplazamiento),a
 300+ 9DD5
 301+ 9DD5 3A 23 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9DD8 32 22 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9DDB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9DDB C9               ret
 305+ 9DDC
 306+ 9DDC              Reinicia_el_movimiento
 307+ 9DDC
 308+ 9DDC 3A 0C 88         ld a,(Ctrl_2)
 309+ 9DDF CB 5F            bit 3,a
 310+ 9DE1 28 1B            jr z,2F
 311+ 9DE3
 312+ 9DE3              ; (Cola_de_desplazamiento)="254".
 313+ 9DE3
 314+ 9DE3 21 24 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9DE6 35               dec (hl)
 316+ 9DE7 20 15            jr nz,2F
 317+ 9DE9
 318+ 9DE9              ; Fin de las repeticiones del último movimiento.
 319+ 9DE9
 320+ 9DE9 21 0C 88         ld hl,Ctrl_2
 321+ 9DEC CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9DEE
 323+ 9DEE 2A 1C 88         ld hl,(Puntero_mov)
 324+ 9DF1 23               inc hl
 325+ 9DF2 23               inc hl
 326+ 9DF3 23               inc hl
 327+ 9DF4 22 1C 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9DF7              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9DF7 7E               ld a,(hl)
 330+ 9DF8 32 25 88         ld (Cola_de_desplazamiento),a
 331+ 9DFB
 332+ 9DFB C3 A3 9D         jp Cola
 333+ 9DFE
 334+ 9DFE CD 3B 9E     2 call Inicia_Puntero_mov
 335+ 9E01
 336+ 9E01 21 0C 88         ld hl,Ctrl_2
 337+ 9E04 CB 96            res 2,(hl)
 338+ 9E06
 339+ 9E06 C3 6D 9D         jp Movimiento
 340+ 9E09
 341+ 9E09              Siguiente_desplazamiento
 342+ 9E09
 343+ 9E09              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E09              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E09
 346+ 9E09 21 0C 88         ld hl,Ctrl_2
 347+ 9E0C CB 96            res 2,(hl)
 348+ 9E0E
 349+ 9E0E 2A 1C 88         ld hl,(Puntero_mov)
 350+ 9E11 23               inc hl
 351+ 9E12 23               inc hl
 352+ 9E13 22 1C 88         ld (Puntero_mov),hl
 353+ 9E16
 354+ 9E16 7E               ld a,(hl)
 355+ 9E17 A7               and a
 356+ 9E18 CC A1 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E1B CA DC 9D         jp z,Reinicia_el_movimiento
 358+ 9E1E
 359+ 9E1E C9               ret
 360+ 9E1F
 361+ 9E1F              ; Subrutinas -----------------------------------------
 362+ 9E1F              ; ---------- --------- --------- ---------- ----------
 363+ 9E1F              ;
 364+ 9E1F              ;   24/07/23
 365+ 9E1F              ;
 366+ 9E1F              ;   Fijamos_bucle
 367+ 9E1F              ;
 368+ 9E1F              ;
 369+ 9E1F
 370+ 9E1F              Fijamos_bucle
 371+ 9E1F
 372+ 9E1F 3A 20 88         ld a,(Incrementa_puntero)
 373+ 9E22 3C               inc a
 374+ 9E23 32 21 88         ld (Incrementa_puntero_backup),a
 375+ 9E26
 376+ 9E26 CD A1 9E         call Incrementa_Puntero_indice_mov
 377+ 9E29 2A 1A 88         ld hl,(Puntero_indice_mov)
 378+ 9E2C 22 1E 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9E2F C9               ret
 380+ 9E30
 381+ 9E30              ; ---------- --------- --------- ---------- ----------
 382+ 9E30              ;
 383+ 9E30              ;   07/7/23
 384+ 9E30              ;
 385+ 9E30              ;   Inicia_Repetimos_movimiento
 386+ 9E30              ;
 387+ 9E30              ;
 388+ 9E30
 389+ 9E30              Inicia_Repetimos_movimiento
 390+ 9E30
 391+ 9E30              ; Iniciamos (Repetimos_movimiento).
 392+ 9E30
 393+ 9E30 DD 2A 1C 88      ld ix,(Puntero_mov)
 394+ 9E34 DD 7E 02         ld a,(ix+2)
 395+ 9E37 32 24 88         ld (Repetimos_movimiento),a
 396+ 9E3A
 397+ 9E3A C9               ret
 398+ 9E3B
 399+ 9E3B              ; ---------- --------- --------- ---------- ----------
 400+ 9E3B              ;
 401+ 9E3B              ;   26/6/23
 402+ 9E3B              ;
 403+ 9E3B              ;   Inicia_Puntero_mov
 404+ 9E3B              ;
 405+ 9E3B              ;
 406+ 9E3B
 407+ 9E3B 2A 1A 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E3E 5E               ld e,(hl)
 409+ 9E3F 23               inc hl
 410+ 9E40 56               ld d,(hl)
 411+ 9E41 EB               ex de,hl
 412+ 9E42 22 1C 88         ld (Puntero_mov),hl
 413+ 9E45 C9               ret
 414+ 9E46
 415+ 9E46              ; ---------- --------- --------- ---------- ----------
 416+ 9E46              ;
 417+ 9E46              ;   27/06/23
 418+ 9E46              ;
 419+ 9E46              ;   Aplica_movimiento.
 420+ 9E46
 421+ 9E46              Aplica_desplazamiento
 422+ 9E46
 423+ 9E46              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E46
 425+ 9E46 2A 1C 88         ld hl, (Puntero_mov)
 426+ 9E49
 427+ 9E49 7E               ld a,(hl)
 428+ 9E4A E6 F0            and $f0
 429+ 9E4C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E4D
 431+ 9E4D CB 7E            bit 7,(hl)
 432+ 9E4F 28 03            jr z,1F
 433+ 9E51 CD 65 98         call Mov_up
 434+ 9E54 2A 1C 88     1 ld hl, (Puntero_mov)
 435+ 9E57 CB 76            bit 6,(hl)
 436+ 9E59 28 09            jr z,2F
 437+ 9E5B CD 2C 98         call Mov_down
 438+ 9E5E
 439+ 9E5E              ; Se ha aplicado reinicio ???
 440+ 9E5E              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E5E
 442+ 9E5E 3A 45 88         ld a,(Ctrl_3)
 443+ 9E61 CB 57            bit 2,a
 444+ 9E63 C0               ret nz
 445+ 9E64
 446+ 9E64 2A 1C 88     2 ld hl, (Puntero_mov)
 447+ 9E67 CB 6E            bit 5,(hl)
 448+ 9E69 28 03            jr z,3F
 449+ 9E6B CD CB 99         call Mov_left
 450+ 9E6E 2A 1C 88     3 ld hl, (Puntero_mov)
 451+ 9E71 CB 66            bit 4,(hl)
 452+ 9E73 C8               ret z
 453+ 9E74 CD A8 98         call Mov_right
 454+ 9E77 C9               ret
 455+ 9E78
 456+ 9E78              ; ---------- --------- --------- ---------- ----------
 457+ 9E78              ;
 458+ 9E78              ;   26/06/23
 459+ 9E78              ;
 460+ 9E78              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E78
 462+ 9E78              Ajusta_velocidad_desplazamiento
 463+ 9E78
 464+ 9E78              ; 1er byte de la cadena de movimiento.
 465+ 9E78              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E78
 467+ 9E78 CD 96 9E         call Extrae_nibble_alto
 468+ 9E7B
 469+ 9E7B 32 10 88         ld (Vel_up),a
 470+ 9E7E 79               ld a,c
 471+ 9E7F E6 0F            and $0f
 472+ 9E81 32 11 88         ld (Vel_down),a
 473+ 9E84
 474+ 9E84              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9E84              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9E84
 477+ 9E84 23               inc hl
 478+ 9E85 CD 96 9E         call Extrae_nibble_alto
 479+ 9E88
 480+ 9E88 32 0E 88         ld (Vel_left),a
 481+ 9E8B 79               ld a,c
 482+ 9E8C E6 0F            and $0f
 483+ 9E8E 32 0F 88         ld (Vel_right),a
 484+ 9E91
 485+ 9E91              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9E91
 487+ 9E91 23               inc hl
 488+ 9E92 22 1C 88         ld (Puntero_mov),hl
 489+ 9E95 C9               ret
 490+ 9E96
 491+ 9E96 06 04        Extrae_nibble_alto ld b,4
 492+ 9E98 7E               ld a,(hl)
 493+ 9E99 4F               ld c,a
 494+ 9E9A E6 F0            and $f0
 495+ 9E9C CB 3F        1 srl a
 496+ 9E9E 10 FC            djnz 1B
 497+ 9EA0 C9               ret
 498+ 9EA1
 499+ 9EA1              ; ---------- --------- --------- ---------- ----------
 500+ 9EA1              ;
 501+ 9EA1              ;   5/7/23
 502+ 9EA1              ;
 503+ 9EA1              ;   Incrementa_Puntero_indice_mov
 504+ 9EA1
 505+ 9EA1              Incrementa_Puntero_indice_mov
 506+ 9EA1
 507+ 9EA1 21 20 88         ld hl,Incrementa_puntero
 508+ 9EA4 34               inc (hl)
 509+ 9EA5
 510+ 9EA5 2A 1A 88         ld hl,(Puntero_indice_mov)
 511+ 9EA8 01 02 00         ld bc,2
 512+ 9EAB A7               and a
 513+ 9EAC 09               add hl,bc
 514+ 9EAD 22 1A 88         ld (Puntero_indice_mov),hl
 515+ 9EB0
 516+ 9EB0 7E               ld a,(hl)
 517+ 9EB1 A7               and a
 518+ 9EB2
 519+ 9EB2              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9EB2
 521+ 9EB2              ;    jr z,$
 522+ 9EB2
 523+ 9EB2              ;! Reinicia el Patrón de movimiento.
 524+ 9EB2
 525+ 9EB2 CC B7 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9EB5
 527+ 9EB5 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9EB6
 529+ 9EB6 C9               ret
 530+ 9EB7
 531+ 9EB7              ; ---------- --------- --------- ---------- ----------
 532+ 9EB7              ;
 533+ 9EB7              ;   15/01/24
 534+ 9EB7              ;
 535+ 9EB7              ;   Inicializa_Puntero_indice_mov
 536+ 9EB7
 537+ 9EB7              Inicializa_Puntero_indice_mov_2
 538+ 9EB7
 539+ 9EB7              ; Existe etiqueta de bucle principal???
 540+ 9EB7
 541+ 9EB7 2A 1E 88         ld hl,(Puntero_indice_mov_bucle)
 542+ 9EBA 24               inc h
 543+ 9EBB 25               dec h
 544+ 9EBC 28 05            jr z,2F
 545+ 9EBE
 546+ 9EBE 22 1A 88         ld (Puntero_indice_mov),hl
 547+ 9EC1 18 14            jr 3F
 548+ 9EC3
 549+ 9EC3              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9EC3
 551+ 9EC3 3A 20 88     2 ld a,(Incrementa_puntero)
 552+ 9EC6 47               ld b,a
 553+ 9EC7
 554+ 9EC7 2A 1A 88         ld hl,(Puntero_indice_mov)
 555+ 9ECA 2B           1 dec hl
 556+ 9ECB 2B               dec hl
 557+ 9ECC 10 FC            djnz 1B
 558+ 9ECE 22 1A 88         ld (Puntero_indice_mov),hl
 559+ 9ED1
 560+ 9ED1 AF               xor a
 561+ 9ED2 32 20 88         ld (Incrementa_puntero),a
 562+ 9ED5 18 06            jr 4F
 563+ 9ED7
 564+ 9ED7 3A 21 88     3 ld a,(Incrementa_puntero_backup)
 565+ 9EDA 32 20 88         ld (Incrementa_puntero),a
 566+ 9EDD C9           4 ret
 567+ 9EDE
 568+ 9EDE 3A E4 87     Vuelca_en_Contador_general_de_mov_masticados ld a,(Tipo)
 569+ 9EE1 CD 4A 87         call Calcula_salto_en_BC
 570+ 9EE4 21 12 88         ld hl,Contador_general_de_mov_masticados_Entidad_1
 571+ 9EE7 A7               and a
 572+ 9EE8 ED 4A            adc hl,bc
 573+ 9EEA C9               ret
 574+ 9EEB
 575+ 9EEB
# file closed: Patrones_de_mov.asm
1803  9EEB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9EEB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9EEB              ;
   3+ 9EEB              ;	12/12/23
   4+ 9EEB              ;
   5+ 9EEB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9EEB
   7+ 9EEB              ;	ADC HL,SP	LD (addr),SP
   8+ 9EEB              ;	ADD HL,SP	LD SP,(addr)
   9+ 9EEB              ;	ADD IX,SP	LD SP,nn
  10+ 9EEB              ; 	ADD IY,SP	LD SP,HL
  11+ 9EEB              ;				LD SP,IX
  12+ 9EEB              ;	DEC SP		LD SP,IY
  13+ 9EEB
  14+ 9EEB              ;	EX (SP),HL
  15+ 9EEB              ;	EX (SP),IX
  16+ 9EEB              ;	EX (SP),IY
  17+ 9EEB
  18+ 9EEB              ;	INC SP
  19+ 9EEB
  20+ 9EEB                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 37 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 01 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 03 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 26 88         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 3F 88         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 07 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 43 88         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 3D 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 26 88         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 3F 88         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 07 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 43 88         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 37 88      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 3D 88     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 37 88  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 3D 88         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 3D 88         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1804  718B
1805  718B              	SAVESNA "Pruebas.sna", START
1806  718B
1807  718B
1808  718B
1809  718B
# file closed: Banco_de_pruebas.asm
