# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 48 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  9+  83E8              ;                    _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AF 84        	defw Entidad_1
 98+  846A EA 84        	defw Entidad_2
 99+  846C 25 85        	defw Entidad_3
100+  846E 60 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
128+  848E
129+  848E 00 00        	db 0,0											; Variables_de_borrado
130+  8490 00 00        	defw 0											;	" " " " " " "
131+  8492 00 00        	defw 0											;	" " " " " " "
132+  8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
133+  8498
134+  8498 00 00        	db 0,0											; Variables_de_pintado
135+  849A 00 00        	defw 0											;	" " " " " " "
136+  849C 00 00        	defw 0											;	" " " " " " "
137+  849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
138+  84A2
139+  84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
140+  84A4
141+  84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
142+  84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
143+  84AB
144+  84AB 00           	db 0 											; (Columnas).
145+  84AC 00 00        	defw 0											; (Limite_horizontal).
146+  84AE 00           	db 0											; (Limite_vertical).
147+  84AF
148+  84AF              ; ---------- ---------- ---------- ---------- ----------
149+  84AF
150+  84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
151+  84B1 00 00        	defw 0											; (Posicion_actual).
152+  84B3 00 00        	defw 0 											; (Puntero_objeto).
153+  84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
154+  84B8
155+  84B8 00           	db %00000000 									; (Attr).
156+  84B9
157+  84B9 00 00        	defw 0											; (Indice_Sprite_der).
158+  84BB 00 00        	defw 0											; (Indice_Sprite_izq).
159+  84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
160+  84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
161+  84C1
162+  84C1 00 00        	defw 0											; (Posicion_inicio).
163+  84C3 00           	db 0											; (Cuad_objeto).
164+  84C4
165+  84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
166+  84C8
167+  84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
168+  84C9
169+  84C9 00 00        	db 0,0										    ; Variables_de_borrado
170+  84CB 00 00        	defw 0											;	" " " " " " "
171+  84CD 00 00        	defw 0											;	" " " " " " "
172+  84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
173+  84D3
174+  84D3 00 00        	db 0,0											; Variables_de_pintado
175+  84D5 00 00        	defw 0											;	" " " " " " "
176+  84D7 00 00        	defw 0											;	" " " " " " "
177+  84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
178+  84DD
179+  84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
180+  84DF
181+  84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
182+  84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
183+  84E6
184+  84E6 00           	db 0 											; (Columnas).
185+  84E7 00 00        	defw 0											; (Limite_horizontal).
186+  84E9 00           	db 0											; (Limite_vertical).
187+  84EA
188+  84EA              ; ---------- ---------- ---------- ---------- ----------
189+  84EA
190+  84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
191+  84EC 00 00        	defw 0                                          ; (Posicion_actual).
192+  84EE 00 00        	defw 0											; (Puntero_objeto).
193+  84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
194+  84F3
195+  84F3 02           	db %00000010									; (Attr).
196+  84F4
197+  84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
198+  84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
199+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
200+  84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
201+  84FC
202+  84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
203+  84FE 03           	db 3											; (Cuad_objeto).
204+  84FF
205+  84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
206+  8503
207+  8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
208+  8504
209+  8504 00 00        	db 0,0											; Variables_de_borrado
210+  8506 00 00        	defw 0										 	;	" " " " " " "
211+  8508 00 00        	defw 0											;	" " " " " " "
212+  850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
213+  850E
214+  850E 00 00        	db 0,0											; Variables_de_pintado
215+  8510 00 00        	defw 0											;	" " " " " " "
216+  8512 00 00        	defw 0											;	" " " " " " "
217+  8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
218+  8518
219+  8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
220+  851A
221+  851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
222+  851E
223+  851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
224+  8521
225+  8521 00           	db 0 											; (Columnas).
226+  8522 00 00        	defw 0											; (Limite_horizontal).
227+  8524 00           	db 0											; (Limite_vertical).
228+  8525
229+  8525              ; ---------- ---------- ---------- ---------- ----------
230+  8525
231+  8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
232+  8527 00 00        	defw 0                                          ; (Posicion_actual).
233+  8529 00 00        	defw 0											; (Puntero_objeto).
234+  852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
235+  852E
236+  852E 04           	db %00000100									; (Attr).
237+  852F
238+  852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
239+  8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
240+  8533
241+  8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
242+  8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
243+  8537
244+  8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
245+  8539 01           	db 1											; (Cuad_objeto).
246+  853A
247+  853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
248+  853E
249+  853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
250+  853F
251+  853F 00 00        	db 0,0											; Variables_de_borrado
252+  8541 00 00        	defw 0										 	;	" " " " " " "
253+  8543 00 00        	defw 0											;	" " " " " " "
254+  8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
255+  8549
256+  8549 00 00        	db 0,0											; Variables_de_pintado
257+  854B 00 00        	defw 0											;	" " " " " " "
258+  854D 00 00        	defw 0											;	" " " " " " "
259+  854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
260+  8553
261+  8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
262+  8555
263+  8555 FE 95 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
264+  8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
265+  855C
266+  855C 00           	db 0 											; (Columnas).
267+  855D 00 00        	defw 0											; (Limite_horizontal).
268+  855F 00           	db 0											; (Limite_vertical).
269+  8560
270+  8560              ; ---------- ---------- ---------- ---------- ----------
271+  8560
272+  8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
273+  8562 00 00        	defw 0                                          ; (Posicion_actual).
274+  8564 00 00        	defw 0 											; (Puntero_objeto).
275+  8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
276+  8569
277+  8569 01           	db %00000001									; (Attr).
278+  856A
279+  856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
280+  856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
281+  856E
282+  856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
283+  8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
284+  8572
285+  8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
286+  8574 00           	db 0											; (Cuad_objeto).
287+  8575
288+  8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
289+  8579
290+  8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
291+  857A
292+  857A 00 00        	db 0,0											; Variables_de_borrado
293+  857C 00 00        	defw 0										 	;	" " " " " " "
294+  857E 00 00        	defw 0											;	" " " " " " "
295+  8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
296+  8584
297+  8584 00 00        	db 0,0											; Variables_de_pintado
298+  8586 00 00        	defw 0											;	" " " " " " "
299+  8588 00 00        	defw 0											;	" " " " " " "
300+  858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
301+  858E
302+  858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
303+  8590
304+  8590 EE 95 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
305+  8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
306+  8597
307+  8597 00           	db 0 											; (Columnas).
308+  8598 00 00        	defw 0											; (Limite_horizontal).
309+  859A 00           	db 0											; (Limite_vertical).
310+  859B
# file closed: Entidades_y_disparos.asm
 21   859B
 22   859B              ; ******************************************************************************************************************************************************************************************
 23   859B              ; Constantes.
 24   859B              ; ******************************************************************************************************************************************************************************************
 25   859B              ;
 26   859B              ; 8/11/22
 27   859B              ;
 28   859B              ; Constantes generales.
 29   859B              ;
 30   859B
 31   859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   859B
 36   859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   859B              ;                               				        ; De momento situamos este almacén en $7000.
 39   859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   859B              ;                               				        ; De momento situamos este almacén en $7060.
 42   859B
 43   859B              ; ******************************************************************************************************************************************************************************************
 44   859B              ; Variables.
 45   859B              ; ******************************************************************************************************************************************************************************************
 46   859B              ;
 47   859B              ; 10/11/22
 48   859B              ;
 49   859B              ; Variables de DRAW. (Motor principal).
 50   859B              ;
 51   859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   859B
 53   859B 02           Filas db 2												; Filas. [DRAW]
 54   859C 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   85A3
 60   85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 61   85A3
 62   85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   85A4 04           Attr db %00000100										; Atributos de la entidad:
 66   85A5
 67   85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A5              ;
 69   85A5              ;	COLORES: 0 ..... NEGRO
 70   85A5              ;    		 1 ..... AZUL
 71   85A5              ; 			 2 ..... ROJO
 72   85A5              ;			 3 ..... MAGENTA
 73   85A5              ; 			 4 ..... VERDE
 74   85A5              ; 			 5 ..... CIAN
 75   85A5              ;			 6 ..... AMARILLO
 76   85A5              ; 			 7 ..... BLANCO
 77   85A5
 78   85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A9 00 00        Puntero_DESPLZ_der defw 0
 81   85AB 00 00        Puntero_DESPLZ_izq defw 0
 82   85AD
 83   85AD 7E 50        Posicion_inicio defw $507e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AF 04           Cuad_objeto db 4										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85B0
 86   85B0              ; Variables de objeto. (Características).
 87   85B0
 88   85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85B3 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85B4
 93   85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 94   85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 95   85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 96   85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 97   85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 98   85B9 00 00        	defw 0
 99   85BB 00 00 00 00  	db 0,0,0,0
100   85BF
101   85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
102   85C1 00 00        	defw 0
103   85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
104   85C5 00 00 00 00  	db 0,0,0,0
105   85C9
106   85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
107   85C9
108   85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
109   85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
110   85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
111   85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
112   85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
113   85CA              ;
114   85CA              ; 														DESCRIPCIÖN:
115   85CA              ;
116   85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
117   85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
118   85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
119   85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
120   85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
121   85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
122   85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
123   85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
124   85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
125   85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
126   85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
127   85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
128   85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
129   85CA              ;
130   85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
131   85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
132   85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
133   85CA
134   85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
135   85CB
136   85CB              ; Movimiento.
137   85CB
138   85CB EA 95        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
139   85CD 00 00        Puntero_mov defw 0
140   85CF 00           Contador_db_mov db 0
141   85D0 00           Incrementa_puntero db 0
142   85D1 00           Repetimos_db db 0
143   85D2
144   85D2              ; Variables de funcionamiento. [DRAW].
145   85D2
146   85D2 00           Columnas db 0
147   85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
148   85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
149   85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
150   85D6
151   85D6              ; 59 Bytes por entidad.
152   85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
153   85D6              ;					         		---------;      ;---------
154   85D6
155   85D6
156   85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
157   85D6
158   85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
159   85D7
160   85D7              ;														DESCRIPCIÓN:
161   85D7              ;
162   85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
163   85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
164   85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
165   85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
166   85D7
167   85D7
168   85D7
169   85D7
170   85D7
171   85D7
172   85D7              ; Gestión de ENTIDADES.
173   85D7
174   85D7 00 00        Puntero_store_entidades defw 0
175   85D9 00 00        Puntero_restore_entidades defw 0
176   85DB 00 00        Indice_restore defw 0
177   85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
178   85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
179   85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
180   85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
181   85DF              ;														; _ (Numero_de_malotes)="0".
182   85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
183   85E1              ;														; _variable para almacenar lo posición del puntero_
184   85E1              ; 														; _de pila, SP.
185   85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
186   85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
187   85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E5              ;														; _el snapshot de los registros de la siguiente entidad.
189   85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
190   85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
191   85E7              ;														; _el snapshot de los registros del siguiente disparo.
192   85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
193   85E7
194   85E7              ; Gestión de Disparos.
195   85E7
196   85E7 00           Numero_de_disparotes db 0
197   85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
198   85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
199   85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
200   85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
201   85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
202   85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
203   85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
204   85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
205   85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
206   85F3
207   85F3
208   85F3              ; Gestión de FRAMES.
209   85F3
210   85F3 00           Switch db 0
211   85F4
212   85F4              ; Variables de Raster y localización en pantalla.
213   85F4
214   85F4 00 FF        Temp_Raster defw $ff00
215   85F6
216   85F6              ; Rutina principal *************************************************************************************************************************************************************************
217   85F6              ;
218   85F6              ;	14/11/22
219   85F6
220   85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
221   85F9
222   85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
223   85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
224   85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
225   85FF F3           	DI
226   8600
227   8600 3E 07        	ld a,%00000111
228   8602 CD 12 92     	call Cls
229   8605
230   8605              ;	call Pinta_FILAS
231   8605
232   8605 CD 65 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
233   8608
234   8608 21 DD 85     	ld hl,Numero_de_entidades
235   860B 46           	ld b,(hl)
236   860C 04           	inc b
237   860D 05           	dec b
238   860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
239   8610
240   8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
241   8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
242   8610              ;	Pintamos el resto de entidades:
243   8610
244   8610 CD 5E 87     	call Inicia_punteros_de_entidades
245   8613
246   8613              ;	INICIA ENTIDADES!!!!!
247   8613
248   8613 C5           1 push bc  												; Guardo el contador de entidades.
249   8614 CD B8 87      	call Inicia_Puntero_objeto
250   8617 CD 62 8C     	call Draw
251   861A CD A0 7F     	call Guarda_foto_registros
252   861D CD 00 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
253   8620 C1           	pop bc
254   8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
255   8623
256   8623              ; 	INICIA AMADEUS!!!!!
257   8623
258   8623 CD 41 88     3 call Restore_Amadeus
259   8626 CD B8 87     	call Inicia_Puntero_objeto
260   8629 CD 62 8C     	call Draw
261   862C CD A0 7F     	call Guarda_foto_registros
262   862F CD 53 88     	call Store_Amadeus
263   8632
264   8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
265   8632
266   8632 CD 74 87     	call Inicia_Puntero_Disparo_Entidades
267   8635 CD 7B 87     	call Inicia_Puntero_Disparo_Amadeus
268   8638
269   8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
270   8638
271   8638 CD 5E 87     	call Inicia_punteros_de_entidades
272   863B CD 2F 88     	call Restore_Primera_entidad
273   863E
274   863E 3A DD 85     	ld a,(Numero_de_entidades)
275   8641 3C           	inc a
276   8642 32 DE 85     	ld (Numero_de_malotes),a
277   8645
278   8645 FB           2 ei
279   8646 18 FD        	jr 2B
280   8648
281   8648              ; -----------------------------------------------------------------------------------
282   8648
283   8648              Frame
284   8648
285   8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
286   8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
287   8648
288   8648 3E 02            ld a,2
289   864A D3 FE            out ($fe),a
290   864C CD 66 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
291   864F CD 9F 8F     	call Extrae_foto_disparos
292   8652 3E 01            ld a,1
293   8654 D3 FE            out ($fe),a
294   8656
295   8656              ; ----------------------------------------------------------------------
296   8656
297   8656              ;	Existe colisión?????
298   8656
299   8656 3A EC 85     	ld a,(Impacto2)
300   8659 A7           	and a
301   865A 28 02        	jr z,5F
302   865C
303   865C              ; Bit 0 a "1" Impacto en entidad por disparo.
304   865C              ; Bit 1 a "1" Impacto en Amadeus por disparo.
305   865C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo).
306   865C
307   865C 18 FE        	jr $
308   865E
309   865E CD 5E 87     5 call Inicia_punteros_de_entidades
310   8661 CD 2F 88     	call Restore_Primera_entidad
311   8664
312   8664 AF           	xor a
313   8665 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
314   8668
315   8668 CD F4 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
316   866B 21 00 70     	ld hl,Album_de_fotos
317   866E 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
318   8671              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
319   8671 3A DD 85         ld a,(Numero_de_entidades)
320   8674 47               ld b,a
321   8675 A7           	and a
322   8676 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
323   8678
324   8678 C5           2 push bc
325   8679 CD C9 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
326   867C
327   867C 3A C9 85     	ld a,(Ctrl_0)
328   867F CB 67        	bit 4,a
329   8681 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
330   8683
331   8683              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
332   8683              ; Las entidades sólo generan disparo cuando se mueven.
333   8683              ; 16/02/23.
334   8683              ; [[[
335   8683 CD 9C 88     	call Detecta_disparo_entidad
336   8686              ; ]]]
337   8686 CD 25 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
338   8689
339   8689 21 C9 85     1 ld hl,Ctrl_0
340   868C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
341   868E AF           	xor a
342   868F 32 CA 85     	ld (Obj_dibujado),a
343   8692
344   8692 CD 00 88     6 call Store_Restore_entidades
345   8695 C1           	pop bc
346   8696 10 E0        	djnz 2B
347   8698
348   8698              ; Tras la gestión de las entidades, ... AMADEUS.
349   8698
350   8698 CD 41 88     4 call Restore_Amadeus
351   869B CD F6 86     	call Mov_Amadeus
352   869E
353   869E 3A EC 85     	ld a,(Impacto2)
354   86A1 CB 57        	bit 2,a
355   86A3 28 00        	jr z,7F
356   86A5
357   86A5              ; Comprobamos posible colisión entre Amadeus y una entidad.
358   86A5
359   86A5              ;	call Detecta_colision_nave_entidad
360   86A5
361   86A5 3A C9 85     7 ld a,(Ctrl_0)
362   86A8 CB 67        	bit 4,a
363   86AA 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
364   86AC CD 25 87     	call Guarda_foto_entidad_a_pintar
365   86AF
366   86AF 21 C9 85     3 ld hl,Ctrl_0
367   86B2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
368   86B4 AF           	xor a
369   86B5 32 CA 85     	ld (Obj_dibujado),a
370   86B8 CD 53 88     	call Store_Amadeus
371   86BB
372   86BB CD 12 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
373   86BE
374   86BE              ; -----
375   86BE
376   86BE              ;	call Inicia_punteros_de_entidades
377   86BE              ;	call Restore_Primera_entidad
378   86BE
379   86BE              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
380   86BE
381   86BE CD 82 87     	call Calcula_numero_de_malotes
382   86C1 CD 9A 87     	call Calcula_numero_de_disparotes
383   86C4
384   86C4 3E 04        	ld a,4
385   86C6 D3 FE        	out ($fe),a
386   86C8 C9           	ret
387   86C9
388   86C9              ; --------------------------------------------------------------------------------------------------------------
389   86C9              ;
390   86C9              ;	27/03/23
391   86C9
392   86C9              Mov_obj
393   86C9
394   86C9              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
395   86C9
396   86C9 AF           	xor a
397   86CA 32 CA 85     	ld (Obj_dibujado),a
398   86CD CD 2F 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
399   86D0              ;														; Obj_dibujado="0".
400   86D0              ; Movemos Entidades malignas.
401   86D0
402   86D0 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
403   86D3 24           	inc h                                               ; Salimos de la rutina.
404   86D4 25           	dec h
405   86D5 C8           	ret z
406   86D6
407   86D6 CD 00 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
408   86D9
409   86D9 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
410   86DC CB 67        	bit 4,a
411   86DE C8           	ret z
412   86DF
413   86DF              ; Ha habido desplazamiento de la entidad maligna.
414   86DF              ; Ha llegado a zona de AMADEUS ???
415   86DF
416   86DF 3A A2 85     	ld a,(Coordenada_y)
417   86E2 FE 14        	cp $14
418   86E4 D4 58 8A     	call nc, Compara_coordenadas_X
419   86E7
420   86E7              ; ---------
421   86E7
422   86E7 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
423   86E9 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
424   86EC CD 2F 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
425   86EF CD 46 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
426   86F2 CD 15 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
427   86F5 C9           	ret													; _de la misma.
428   86F6
429   86F6              ; --------------------------------------------------------------------------------------------------------------
430   86F6              ;
431   86F6              ;	29/1/23
432   86F6
433   86F6              Mov_Amadeus
434   86F6
435   86F6 AF           	xor a
436   86F7 32 CA 85     	ld (Obj_dibujado),a
437   86FA CD 2F 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
438   86FD              ;														; Obj_dibujado="0".
439   86FD              ; Movemos Amadeus.
440   86FD
441   86FD CD 79 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
442   8700 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
443   8703 CB 67        	bit 4,a
444   8705 C8           	ret z
445   8706
446   8706              ; ---------
447   8706
448   8706 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
449   8708 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
450   870B CD 2F 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
451   870E CD 46 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
452   8711 CD 15 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
453   8714 C9           	ret													; _de la nave.
454   8715
455   8715              ; --------------------------------------------------------------------------------------------------------------
456   8715              ;
457   8715              ;	31/01/23
458   8715              ;
459   8715              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
460   8715
461   8715              Guarda_foto_entidad_a_borrar
462   8715
463   8715 CD 3C 8F     	call Prepara_draw
464   8718 CD 76 8E     	call calcula_CColumnass
465   871B CD AD 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
466   871E CD 02 8F     	call Define_rutina_de_impresion
467   8721 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
468   8724 C9           	ret
469   8725
470   8725              ; --------------------------------------------------------------------------------------------------------------
471   8725              ;
472   8725              ;	31/01/23
473   8725              ;
474   8725              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
475   8725              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
476   8725
477   8725              Guarda_foto_entidad_a_pintar
478   8725
479   8725 CD 52 87     	call Repone_pintar
480   8728 CD 62 8C     	call Draw
481   872B CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
482   872E C9           	ret
483   872F
484   872F              ; --------------------------------------------------------------------------------------------------------------
485   872F              ;
486   872F              ;
487   872F
488   872F 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
489   8732 3A CA 85     	ld a,(Obj_dibujado)
490   8735 A7           	and a
491   8736 28 05        	jr z,1F
492   8738 11 BF 85     	ld de,Variables_de_pintado
493   873B 18 03        	jr 2F
494   873D 11 B5 85     1 ld de,Variables_de_borrado
495   8740 01 08 00     2 ld bc,8
496   8743 ED B0        	ldir
497   8745 C9           	ret
498   8746
499   8746              ; --------------------------------------------------------------------------------------------------------------
500   8746
501   8746 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
502   8749 11 9B 85     	ld de,Filas
503   874C 01 08 00     	ld bc,8
504   874F ED B0        	ldir
505   8751 C9           	ret
506   8752
507   8752 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
508   8755 11 9B 85     	ld de,Filas
509   8758 01 08 00     	ld bc,8
510   875B ED B0        	ldir
511   875D C9           	ret
512   875E
513   875E              ; *************************************************************************************************************************************************************
514   875E              ;
515   875E              ; 8/1/23
516   875E              ;
517   875E              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
518   875E              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
519   875E              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
520   875E
521   875E              ; Destruye HL y DE !!!!!
522   875E
523   875E              Inicia_punteros_de_entidades
524   875E
525   875E 21 68 84     	ld hl,Indice_de_entidades
526   8761 CD B2 87         call Extrae_address
527   8764 22 D7 85         ld (Puntero_store_entidades),hl
528   8767 21 6A 84     	ld hl,Indice_de_entidades+2
529   876A 22 DB 85     	ld (Indice_restore),hl
530   876D CD B2 87     	call Extrae_address
531   8770 22 D9 85     	ld (Puntero_restore_entidades),hl
532   8773 C9               ret
533   8774
534   8774              ; *************************************************************************************************************************************************************
535   8774              ;
536   8774              ; 8/1/23
537   8774              ;
538   8774              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
539   8774
540   8774 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
541   8777 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
542   877A C9           	ret
543   877B 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
544   877E 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
545   8781 C9           	ret
546   8782
547   8782              ; -------------------------------------------------------------------------------------------------------------
548   8782              ;
549   8782              ; 28/2/23
550   8782              ;
551   8782
552   8782              Calcula_numero_de_malotes
553   8782
554   8782 21 00 70     	ld hl,Album_de_fotos
555   8785 EB           	ex de,hl
556   8786 2A E3 85     	ld hl,(Stack_snapshot)
557   8789
558   8789 06 00        	ld b,0
559   878B 7D           	ld a,l
560   878C 93           	sub e
561   878D 28 07        	jr z,1F
562   878F
563   878F              ; Nº de malotes no es "0".
564   878F
565   878F D6 06        2 sub 6
566   8791 04           	inc b
567   8792 A7           	and a
568   8793 20 FA        	jr nz,2B
569   8795 78           	ld a,b
570   8796
571   8796 32 DE 85     1 ld (Numero_de_malotes),a
572   8799 C9           	ret
573   879A
574   879A              ; -------------------------------------------------------------------------------------------------------------
575   879A              ;
576   879A              ; 28/2/23
577   879A              ;
578   879A
579   879A              Calcula_numero_de_disparotes
580   879A
581   879A 21 60 70     	ld hl,Album_de_fotos_disparos
582   879D EB           	ex de,hl
583   879E 2A E5 85     	ld hl,(Stack_snapshot_disparos)
584   87A1
585   87A1 06 00        	ld b,0
586   87A3 7D           	ld a,l
587   87A4 93           	sub e
588   87A5 28 07        	jr z,1F
589   87A7
590   87A7              ; Nº de malotes no es "0".
591   87A7
592   87A7 D6 06        2 sub 6
593   87A9 04           	inc b
594   87AA A7           	and a
595   87AB 20 FA        	jr nz,2B
596   87AD 78           	ld a,b
597   87AE
598   87AE 32 E7 85     1 ld (Numero_de_disparotes),a
599   87B1 C9           	ret
600   87B2              ; *************************************************************************************************************************************************************
601   87B2              ;
602   87B2              ; 20/10/22
603   87B2              ;
604   87B2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
605   87B2              ;
606   87B2              ; Destruye el puntero y DE !!!!!
607   87B2
608   87B2 5E           Extrae_address ld e,(hl)
609   87B3 23           	inc hl
610   87B4 56           	ld d,(hl)
611   87B5 2B           	dec hl
612   87B6 EB           	ex de,hl
613   87B7 C9           	ret
614   87B8
615   87B8              ; *************************************************************************************************************************************************************
616   87B8              ;
617   87B8              ;	7/2/23
618   87B8              ;
619   87B8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
620   87B8              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
621   87B8              ;
622   87B8              ;   Destruye HL y BC !!!!!,
623   87B8              ;
624   87B8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
625   87B8              ;					"0" ..... Izquierda.
626   87B8
627   87B8              Inicia_Puntero_objeto
628   87B8
629   87B8 3A AF 85     	ld a,(Cuad_objeto)
630   87BB E6 01        	and 1
631   87BD F5           	push af
632   87BE CC DC 87     	call z,Inicia_puntero_objeto_izq
633   87C1 F1           	pop af
634   87C2 28 2B        	jr z,1F
635   87C4 CD C9 87     	call Inicia_puntero_objeto_der
636   87C7 18 26        	jr 1F
637   87C9
638   87C9              ; Arrancamos desde la parte izquierda de la pantalla.
639   87C9              ; Iniciamos (Indice_Sprite_der).
640   87C9
641   87C9 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
642   87CC 22 A9 85     	ld (Puntero_DESPLZ_der),hl
643   87CF CD B2 87     	call Extrae_address
644   87D2 22 9F 85     	ld (Puntero_objeto),hl
645   87D5
646   87D5 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
647   87D8              ;	call Extrae_address
648   87D8 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
649   87DB C9           	ret
650   87DC
651   87DC              ; Arrancamos desde la parte derecha de la pantalla.
652   87DC              ; Iniciamos (Indice_Sprite_izq).
653   87DC
654   87DC 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
655   87DF 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
656   87E2 CD B2 87     	call Extrae_address
657   87E5 22 9F 85     	ld (Puntero_objeto),hl
658   87E8
659   87E8 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
660   87EB              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
661   87EB 22 A9 85     	ld (Puntero_DESPLZ_der),hl
662   87EE C9           	ret
663   87EF
664   87EF              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
665   87EF
666   87EF 21 38 83     1 ld hl,Amadeus
667   87F2 ED 4B 9F 85  	ld bc,(Puntero_objeto)
668   87F6 B7 ED 42     	sub hl,bc
669   87F9 C0           	ret nz
670   87FA 21 C9 85     	ld hl,Ctrl_0
671   87FD CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
672   87FF C9           	ret 												; _de nuestra nave en los extremos.
673   8800
674   8800              ; *************************************************************************************************************************************************************
675   8800              ;
676   8800              ;	8/1/23
677   8800              ;
678   8800              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
679   8800              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
680   8800
681   8800              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
682   8800              ;	_de la 2ª y 3ª entidad respectivamente.
683   8800
684   8800              Store_Restore_entidades
685   8800
686   8800 E5           	push hl
687   8801 D5           	push de
688   8802 C5            	push bc
689   8803
690   8803              ;	STORE !!!!!
691   8803              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
692   8803
693   8803 21 9B 85     	ld hl,Filas
694   8806 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
695   880A 01 3B 00     	ld bc,59
696   880D ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
697   880F
698   880F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
699   880F
700   880F 2A D9 85     	ld hl,(Puntero_restore_entidades)
701   8812 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
702   8815 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
703   8818 01 3B 00     	ld bc,59
704   881B ED B0        	ldir
705   881D
706   881D              ;	Incrementa RESTORE !!!!!
707   881D
708   881D 2A DB 85         ld hl,(Indice_restore)
709   8820 23           	inc hl
710   8821 23           	inc hl
711   8822 22 DB 85     	ld (Indice_restore),hl
712   8825 CD B2 87         call Extrae_address
713   8828 22 D9 85         ld (Puntero_restore_entidades),hl
714   882B C1           	pop bc
715   882C D1           	pop de
716   882D E1           	pop hl
717   882E C9           	ret
718   882F
719   882F              ; **************************************************************************************************
720   882F              ;
721   882F              ;	29/10/22
722   882F              ;
723   882F              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
724   882F
725   882F E5           Restore_Primera_entidad push hl
726   8830 D5           	push de
727   8831 C5            	push bc
728   8832 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
729   8835 11 9B 85     	ld de,Filas
730   8838 01 3B 00     	ld bc,59
731   883B ED B0        	ldir
732   883D C1           	pop bc
733   883E D1           	pop de
734   883F E1           	pop hl
735   8840 C9           	ret
736   8841
737   8841              ; **************************************************************************************************
738   8841              ;
739   8841              ;	25/01/23
740   8841              ;
741   8841              ;	Restore_Amadeus
742   8841              ;
743   8841              ;	Cargamos en DRAW los parámetros de Amadeus.
744   8841              ;
745   8841
746   8841 E5           Restore_Amadeus	push hl
747   8842 D5           	push de
748   8843 C5            	push bc
749   8844 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
750   8847 11 9B 85     	ld de,Filas
751   884A 01 3B 00     	ld bc,59
752   884D ED B0        	ldir
753   884F C1           	pop bc
754   8850 D1           	pop de
755   8851 E1           	pop hl
756   8852 C9           	ret
757   8853
758   8853              ; *************************************************************************************************************************************************************
759   8853              ;
760   8853              ;	29/01/23
761   8853              ;
762   8853              ;	Store_Amadeus
763   8853              ;
764   8853              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
765   8853              ;
766   8853
767   8853 E5           Store_Amadeus push hl
768   8854 D5           	push de
769   8855 C5            	push bc
770   8856 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
771   8859 11 74 84     	ld de,Amadeus_db
772   885C 01 3B 00     	ld bc,59
773   885F ED B0        	ldir
774   8861 C1           	pop bc
775   8862 D1           	pop de
776   8863 E1           	pop hl
777   8864 C9           	ret
778   8865
779   8865              ; **************************************************************************************************
780   8865
781   8865              ; Teclado.
782   8865
783   8865 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
784   8867 DB FE        	in a,($fe)
785   8869 E6 01        	and $01
786   886B 28 02        	jr z,1f
787   886D 18 F6        	jr Pulsa_ENTER
788   886F C9           1 ret
789   8870
790   8870              ; **************************************************************************************************
791   8870              ;
792   8870              ; Temporización.
793   8870
794   8870              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
795   8870              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
796   8870              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
797   8870              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
798   8870
799   8870              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
800   8870              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
801   8870              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
802   8870
803   8870              ; A partir de $4f61 no hace falta DELAY.
804   8870
805   8870              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
806   8870
807   8870 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
808   8873 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
809   8874 78           	LD A,B
810   8875 A7           	AND A
811   8876 20 FB        	JR NZ,wait
812   8878 C9           	RET
813   8879
814   8879              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
815   8879              ;
816   8879              ;	5/3/23
817   8879              ;
818   8879              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
819   8879
820   8879              Movimiento_Amadeus
821   8879
822   8879              ; Disparo.
823   8879
824   8879 3E F7        	ld a,$f7												; "5" para disparar.
825   887B DB FE        	in a,($fe)
826   887D E6 10        	and $10
827   887F CC D9 88     	call z,Genera_disparo
828   8882
829   8882 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
830   8884 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
831   8886 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
832   8888 CC A0 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
833   888B 3E F7        	ld a,$f7
834   888D DB FE        	in a,($fe)
835   888F E6 01        	and $01
836   8891 C8           	ret z
837   8892
838   8892 3E F7        	ld a,$f7
839   8894 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
840   8896 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
841   8898 CC 82 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
842   889B C9           	ret
843   889C
844   889C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
845   889C              ;
846   889C              ;	Rutina provisional para que los malotes cagen balas.
847   889C
848   889C 3E 7F        Detecta_disparo_entidad ld a,$7f
849   889E DB FE        	in a,($fe)
850   88A0 E6 01        	and 1
851   88A2 C0           	ret nz
852   88A3 CD D9 88     	call Genera_disparo
853   88A6 C9           	ret
854   88A7
855   88A7              ; Pinta indicadores de FILAS. ------------------------------------------------------
856   88A7
857   88A7 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
858   88AA
859   88AA              ; ----------
860   88AA 06 20        	ld b,32
861   88AC E5           2 push hl
862   88AD C5           	push bc
863   88AE              ; ----------
864   88AE
865   88AE 06 BF        	ld b,$bf
866   88B0 36 80        1 ld (hl),%10000000
867   88B2 CD 48 8F     	call NextScan
868   88B5 10 F9        	djnz 1B
869   88B7
870   88B7              ; ----------
871   88B7 C1           	pop bc
872   88B8 E1           	pop hl
873   88B9 2C           	inc l
874   88BA 10 F0        	djnz 2B
875   88BC              ; ----------
876   88BC
877   88BC 06 03        	ld b,3
878   88BE 21 00 47         ld hl,$4700
879   88C1 CD C7 88     3 call Bucle_1
880   88C4 10 FB            djnz 3B
881   88C6 C9               ret
882   88C7
883   88C7 C5           Bucle_1 push bc
884   88C8 E5                   push hl
885   88C9 D1                   pop de
886   88CA 13                   inc de
887   88CB 01 FF 00             ld bc,255
888   88CE 36 FF                ld (hl),255
889   88D0 ED B0                ldir
890   88D2 23                   inc hl
891   88D3 3E 07                ld a,7
892   88D5 84                   add a,h
893   88D6 67                   ld h,a
894   88D7 C1                   pop bc
895   88D8 C9                   ret
896   88D9
897   88D9              ; ---------------------------------------------------------------
898   88D9
899   88D9              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88D9              ; ******************************************************************************************************************************************************************************************
  2+  88D9              ;
  3+  88D9              ;   27/03/23
  4+  88D9              ;
  5+  88D9              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88D9              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88D9              ;
  8+  88D9              ;
  9+  88D9              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88D9              ;
 11+  88D9              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88D9              ;               _ hacen las entidades hacia abajo.
 13+  88D9              ;
 14+  88D9              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88D9              ;
 16+  88D9              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88D9              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88D9              ;
 19+  88D9              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88D9              ;           _ la bala.
 21+  88D9              ;
 22+  88D9              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88D9              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88D9              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88D9              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88D9              ;           _ en el momento de generarse la bala)).
 27+  88D9
 28+  88D9              Genera_disparo
 29+  88D9
 30+  88D9              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88D9              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88D9              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88D9              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88D9              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88D9              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88D9              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88D9
 38+  88D9              ; Exclusiones:
 39+  88D9
 40+  88D9 3A D2 85         ld a,(Columnas)
 41+  88DC 47               ld b,a
 42+  88DD 3A 9C 85         ld a,(Columns)
 43+  88E0 B8               cp b
 44+  88E1 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88E2
 46+  88E2              ; ----- ----- -----
 47+  88E2
 48+  88E2 3A C9 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
 49+  88E5 CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
 50+  88E7 20 06            jr nz,16F
 51+  88E9
 52+  88E9 3A A2 85         ld a,(Coordenada_y)
 53+  88EC FE 13            cp $13
 54+  88EE D0               ret nc
 55+  88EF
 56+  88EF              ; ----- ----- -----
 57+  88EF
 58+  88EF              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 59+  88EF
 60+  88EF 21 F2 83     16 ld hl,ON_Disparo_2A
 61+  88F2 CD B2 87         call Extrae_address
 62+  88F5 24               inc h
 63+  88F6 25               dec h
 64+  88F7 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 65+  88F9
 66+  88F9 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 67+  88FC A7               and a
 68+  88FD ED 52            sbc hl,de
 69+  88FF D0               ret nc
 70+  8900
 71+  8900              ; ----- ----- -----
 72+  8900
 73+  8900 21 00 80     14 ld hl,Indice_disparo
 74+  8903 3A A3 85         ld a,(CTRL_DESPLZ)
 75+  8906 4F               ld c,a
 76+  8907 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 77+  8909              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 78+  8909              ;                                            ""        ""       "f9", B="1"
 79+  8909              ;                                            ""        ""       "fb", B="2"
 80+  8909              ;                                            ""        ""       "fb", B="3"
 81+  8909 A7               and a
 82+  890A 28 10            jr z,1F
 83+  890C E6 01            and 1
 84+  890E C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 85+  890F
 86+  890F 79               ld a,c
 87+  8910 16 F9            ld d,$f9
 88+  8912 23           2 inc hl
 89+  8913 23               inc hl
 90+  8914 04               inc b
 91+  8915 BA               cp d
 92+  8916 28 04            jr z,1F
 93+  8918 14               inc d
 94+  8919 14               inc d
 95+  891A 18 F6            jr 2B
 96+  891C
 97+  891C CD B2 87     1 call Extrae_address
 98+  891F E5               push hl
 99+  8920 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
100+  8922 DD 21 DB 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
101+  8926
102+  8926              ;	Se cumplen las condiciones necesarias para generar un disparo.
103+  8926              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
104+  8926
105+  8926 3A AF 85     	ld a,(Cuad_objeto)
106+  8929 FE 02            cp 2
107+  892B 38 60            jr c,3F
108+  892D 28 5E            jr z,3F
109+  892F
110+  892F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
111+  892F
112+  892F E6 01            and 1
113+  8931 28 2D            jr z,4F
114+  8933
115+  8933              ; 	Estamos en el 3er cuadrante de pantalla.
116+  8933              ; 	3er CUAD. ----- ----- ----- ----- -----
117+  8933              ;
118+  8933              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
119+  8933              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
120+  8933              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
121+  8933
122+  8933 2A 9D 85     	ld hl,(Posicion_actual)
123+  8936
124+  8936              ;   Amadeus o entidad ???.
125+  8936
126+  8936 3A C9 85         ld a,(Ctrl_0)
127+  8939 CB 77            bit 6,a
128+  893B 28 0D            jr z,8F
129+  893D
130+  893D              ; 	Dispara Amadeus.
131+  893D
132+  893D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
133+  893F CD 57 8F         call PreviousScan
134+  8942 CD 57 8F         call PreviousScan
135+  8945
136+  8945              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
137+  8945              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
138+  8945              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
139+  8945              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
140+  8945
141+  8945 CD B7 89         call Ajusta_disparo_parte_izquierda
142+  8948 18 0E            jr 10F
143+  894A
144+  894A              ; 	Dispara Entidad.
145+  894A
146+  894A 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
147+  894C
148+  894C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
149+  894C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
150+  894C
151+  894C C5               push bc
152+  894D 06 10            ld b,16
153+  894F CD 48 8F     9 call NextScan
154+  8952 10 FB            djnz 9B
155+  8954 C1               pop bc
156+  8955
157+  8955              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
158+  8955              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
159+  8955              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
160+  8955              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
161+  8955
162+  8955 CD B7 89         call Ajusta_disparo_parte_izquierda
163+  8958
164+  8958 CD 2C 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
165+  895B              ;                                                   ; _al generar el disparo.
166+  895B
167+  895B              ; 	LLegados a este punto tendremos:
168+  895B              ;
169+  895B              ;       Puntero_objeto_disparo en IY.
170+  895B              ;       Rutinas_de_impresion en IX.
171+  895B              ;       Puntero_de_impresion en HL.
172+  895B              ;       Impacto/Dirección en BC.
173+  895B
174+  895B CD BF 89         call Almacena_disparo
175+  895E 18 4F            jr 6F                                           ; RET.
176+  8960
177+  8960
178+  8960              ; 	Estamos en el 4º cuadrante de pantalla.
179+  8960              ; 	4º CUAD. ----- ----- ----- ----- -----
180+  8960              ;
181+  8960              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
182+  8960              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
183+  8960              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
184+  8960
185+  8960 2A 9D 85     4 ld hl,(Posicion_actual)
186+  8963
187+  8963              ;   Amadeus o entidad ???.
188+  8963
189+  8963 3A C9 85         ld a,(Ctrl_0)
190+  8966 CB 77            bit 6,a
191+  8968 28 0D            jr z,11F
192+  896A
193+  896A              ; 	Dispara Amadeus.
194+  896A
195+  896A 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
196+  896C CD 57 8F         call PreviousScan
197+  896F CD 57 8F         call PreviousScan
198+  8972
199+  8972              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
200+  8972              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
201+  8972              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
202+  8972              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
203+  8972
204+  8972 CD B0 89         call Ajusta_disparo_parte_derecha
205+  8975 18 0E            jr 13F
206+  8977
207+  8977              ; 	Dispara Entidad.
208+  8977
209+  8977 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
210+  8979
211+  8979              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
212+  8979              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
213+  8979
214+  8979 C5               push bc
215+  897A
216+  897A 06 10            ld b,16
217+  897C CD 48 8F     12 call NextScan
218+  897F 10 FB            djnz 12B
219+  8981
220+  8981 C1               pop bc
221+  8982
222+  8982              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
223+  8982              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
224+  8982              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
225+  8982              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
226+  8982
227+  8982 CD B0 89         call Ajusta_disparo_parte_derecha
228+  8985
229+  8985 CD 2C 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
230+  8988              ;                                                     ; _al generar el disparo.
231+  8988
232+  8988              ; LLegados a este punto tendremos:
233+  8988              ;
234+  8988              ;       Puntero_objeto_disparo en IY.
235+  8988              ;       Rutinas_de_impresion en IX.
236+  8988              ;       Puntero_de_impresion en HL.
237+  8988              ;       Impacto/Dirección en BC.
238+  8988
239+  8988 CD BF 89         call Almacena_disparo
240+  898B 18 22            jr 6F                                           ; RET.
241+  898D
242+  898D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
243+  898D
244+  898D 28 11        3 jr z,5F
245+  898F
246+  898F              ; 	1er CUAD. ----- ----- ----- ----- -----
247+  898F              ;
248+  898F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
249+  898F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
250+  898F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
251+  898F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
252+  898F
253+  898F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
254+  898F              ;	   ""        ""       "f9", B="1"
255+  898F              ;	   ""        ""       "fb", B="2"
256+  898F              ; 	   ""        ""       "fb", B="3"
257+  898F
258+  898F 2A 9D 85     	ld hl,(Posicion_actual)
259+  8992 CD 48 8F     	call NextScan
260+  8995
261+  8995              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
262+  8995              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
263+  8995              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
264+  8995              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
265+  8995
266+  8995 CD B7 89         call Ajusta_disparo_parte_izquierda
267+  8998
268+  8998              ; 	No se produce impacto. B="$80"
269+  8998              ; 	Dirección del proyectil hacia abajo. C="$80"
270+  8998
271+  8998 01 80 80         ld bc,$8080
272+  899B
273+  899B              ; 	LLegados a este punto tendremos:
274+  899B              ;
275+  899B              ;       Puntero_objeto_disparo en IY.
276+  899B              ;       Rutinas_de_impresion en IX.
277+  899B              ;       Puntero_de_impresion en HL.
278+  899B              ;       Impacto/Dirección en BC.
279+  899B
280+  899B CD BF 89         call Almacena_disparo
281+  899E 18 0F            jr 6F                                           ; RET.
282+  89A0
283+  89A0              ; 	Estamos en el 2º cuadrante de pantalla.
284+  89A0              ; 	2º CUAD. ----- ----- ----- ----- -----
285+  89A0              ;
286+  89A0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
287+  89A0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
288+  89A0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
289+  89A0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
290+  89A0
291+  89A0 2A 9D 85     5 ld hl,(Posicion_actual)
292+  89A3 CD 48 8F     	call NextScan
293+  89A6
294+  89A6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
295+  89A6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
296+  89A6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
297+  89A6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
298+  89A6
299+  89A6 CD B0 89         call Ajusta_disparo_parte_derecha
300+  89A9
301+  89A9              ; 	No se produce impacto. B="$80"
302+  89A9              ; 	Dirección del proyectil hacia abajo. C="80"
303+  89A9
304+  89A9 01 80 80     15 ld bc,$8080
305+  89AC
306+  89AC              ; 	LLegados a este punto tendremos:
307+  89AC              ;
308+  89AC              ;       Puntero_objeto_disparo en IY.
309+  89AC              ;       Rutinas_de_impresion en IX.
310+  89AC              ;       Puntero_de_impresion en HL.
311+  89AC              ;       Impacto/Dirección en BC.
312+  89AC
313+  89AC CD BF 89         call Almacena_disparo
314+  89AF
315+  89AF C9           6 ret
316+  89B0
317+  89B0              ; ----------------------------------------------------------------
318+  89B0              ;
319+  89B0              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
320+  89B0              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
321+  89B0              ;	_ (lado izq. o derecho), de la entidad que lo genera.
322+  89B0
323+  89B0 78           Ajusta_disparo_parte_derecha ld a,b
324+  89B1 FE 02            cp 2
325+  89B3 38 01            jr c,1F
326+  89B5 23               inc hl
327+  89B6 C9           1 ret
328+  89B7
329+  89B7 78           Ajusta_disparo_parte_izquierda ld a,b
330+  89B8 FE 01        	cp 1
331+  89BA 20 01        	jr nz,1F
332+  89BC 2B           	dec hl
333+  89BD 2B           1 dec hl
334+  89BE C9               ret
335+  89BF
336+  89BF              ; ----------------------------------------------------------------
337+  89BF              ;
338+  89BF              ;   25/02/23
339+  89BF              ;
340+  89BF              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
341+  89BF              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
342+  89BF
343+  89BF              Almacena_disparo
344+  89BF
345+  89BF E5               push hl  										; HL contiene el puntero de impresión.
346+  89C0 F1               pop af
347+  89C1 08               ex af,af                                        ; Puntero_de_impresion en AF'.
348+  89C2
349+  89C2 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
350+  89C3 E6 01            and 1
351+  89C5 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
352+  89C7              ;                                                   ; _ es Amadeus o una entidad la que dispara.
353+  89C7              ; 	Dispara AMADEUS.
354+  89C7
355+  89C7              ;	Comprobamos que a Amadeus aún le quedan disparos.
356+  89C7              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
357+  89C7              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
358+  89C7              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
359+  89C7
360+  89C7 C5               push bc
361+  89C8 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
362+  89CB 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
363+  89CE A7               and a
364+  89CF ED 42            sbc hl,bc
365+  89D1 CC 7B 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
366+  89D4 C1               pop bc
367+  89D5 28 54            jr z,4F
368+  89D7
369+  89D7 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
370+  89DA 23               inc hl
371+  89DB 23               inc hl
372+  89DC 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
373+  89DF              ;                                                   ; _ Disparo_(+1).
374+  89DF 18 18            jr 2F
375+  89E1
376+  89E1              ; Dispara una entidad.
377+  89E1
378+  89E1 C5           1 push bc
379+  89E2 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
380+  89E5 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
381+  89E8 A7               and a
382+  89E9 ED 42            sbc hl,bc
383+  89EB CC 74 87         call z,Inicia_Puntero_Disparo_Entidades
384+  89EE C1               pop bc
385+  89EF 28 3A            jr z,4F
386+  89F1
387+  89F1 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
388+  89F4 23               inc hl
389+  89F5 23               inc hl
390+  89F6 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
391+  89F9              ;                                                   ; _ Disparo_(+1).
392+  89F9 CD B2 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
393+  89FC              ;                                                   ; _ los 8 bytes que definen el disparo:
394+  89FC              ;
395+  89FC              ;                                                     Puntero_objeto_disparo en IY.
396+  89FC              ;                                                     Rutinas_de_impresion en IX.
397+  89FC              ;                                                     Puntero_de_impresion en HL.
398+  89FC              ;                                                     Impacto/Dirección en BC.
399+  89FC
400+  89FC 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
401+  89FD 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
402+  89FE 23               inc hl                                          ; _ al siguiente.
403+  89FF A7               and a
404+  8A00 20 C0            jr nz,3B
405+  8A02
406+  8A02 08               ex af,af
407+  8A03 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
408+  8A07 F9               ld sp,hl
409+  8A08
410+  8A08 DD E5            push ix                                         ; Rutina de impresión.
411+  8A0A F5               push af                                         ; Puntero de impresión.
412+  8A0B FD E5            push iy                                         ; Puntero objeto.
413+  8A0D C5               push bc                                         ; Control.
414+  8A0E
415+  8A0E ED 7B DF 85      ld sp,(Stack)
416+  8A12
417+  8A12              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
418+  8A12
419+  8A12 21 D6 85     	ld hl,Ctrl_1
420+  8A15 CB C6        	set 0,(hl)
421+  8A17
422+  8A17 DD E5        	push ix
423+  8A19 E1               pop hl
424+  8A1A F5               push af
425+  8A1B DD E1            pop ix
426+  8A1D
427+  8A1D CD A0 7F     	call Guarda_foto_registros
428+  8A20
429+  8A20 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
430+  8A23 CB 86        	res 0,(hl)
431+  8A25
432+  8A25              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
433+  8A25              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
434+  8A25
435+  8A25 CD 7B 87         call Inicia_Puntero_Disparo_Amadeus
436+  8A28 CD 74 87         call Inicia_Puntero_Disparo_Entidades
437+  8A2B
438+  8A2B C9           4 ret
439+  8A2C
440+  8A2C              ; ----------------------------------------------------------------
441+  8A2C              ;
442+  8A2C              ;   4/3/23
443+  8A2C              ;
444+  8A2C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
445+  8A2C              ;   _ al generarse el disparo.
446+  8A2C              ;
447+  8A2C              ;       "$80" ..... No se produce colisión.
448+  8A2C              ;       "$81" ..... Se produce colisión.
449+  8A2C
450+  8A2C              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
451+  8A2C              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
452+  8A2C
453+  8A2C
454+  8A2C FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
455+  8A2E E5               push hl                                        ; Puntero de impresión.
456+  8A2F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
457+  8A31 CD 48 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
458+  8A34 E1               pop hl
459+  8A35 E5               push hl
460+  8A36 CD 48 8F         call NextScan
461+  8A39
462+  8A39 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
463+  8A3A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
464+  8A3C 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
465+  8A3E              ;                                                  ; _ 2º scanline si esto es así.
466+  8A3E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
467+  8A40 CD 48 8A         call Bucle_2
468+  8A43
469+  8A43 43           2 ld b,e
470+  8A44 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
471+  8A45 FD E1            pop iy
472+  8A47 C9               ret
473+  8A48
474+  8A48               ; ---------- ----------
475+  8A48
476+  8A48 06 02        Bucle_2 ld b,2
477+  8A4A FD 7E 00     2 ld a,(iy)
478+  8A4D A6               and (hl)
479+  8A4E 28 02            jr z,1F
480+  8A50 1E 81            ld e,$81
481+  8A52 23           1 inc hl
482+  8A53 FD 23            inc iy
483+  8A55 10 F3            djnz 2B
484+  8A57 C9               ret
485+  8A58
486+  8A58              ; -------------------------------------------------------------------------------------------------------------
487+  8A58              ;
488+  8A58              ;   11/04/23
489+  8A58              ;
490+  8A58              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
491+  8A58              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
492+  8A58              ;   _ tanto, existe riesgo alto de colisión entre ambas.
493+  8A58              ;
494+  8A58              ;   MODIFICA: HL,DE,BC,A y AF´.
495+  8A58
496+  8A58              Compara_coordenadas_X
497+  8A58
498+  8A58              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
499+  8A58
500+  8A58              ; Preparamos registros:
501+  8A58
502+  8A58 21 A1 85         ld hl,Filas+6
503+  8A5B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
504+  8A5C 23               inc hl
505+  8A5D 23               inc hl
506+  8A5E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
507+  8A5F 43               ld b,e
508+  8A60 21 AF 85         ld hl,Filas+20
509+  8A63 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
510+  8A64 21 F0 85         ld hl,Coordenadas_X_Entidad
511+  8A67 CD 4F 8C         call Guarda_coordenadas_X
512+  8A6A
513+  8A6A              ; Preparamos registros:
514+  8A6A
515+  8A6A 21 7A 84         ld hl,Amadeus_db+6
516+  8A6D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
517+  8A6E 23               inc hl
518+  8A6F 23               inc hl
519+  8A70 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
520+  8A71 7B               ld a,e
521+  8A72 08               ex af,af'
522+  8A73 21 88 84         ld hl,Amadeus_db+20
523+  8A76 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
524+  8A77 21 ED 85         ld hl,Coordenadas_X_Amadeus
525+  8A7A CD 4F 8C         call Guarda_coordenadas_X
526+  8A7D
527+  8A7D              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
528+  8A7D              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
529+  8A7D
530+  8A7D 04               inc b
531+  8A7E 05               dec b
532+  8A7F 28 04            jr z,1F
533+  8A81 06 03            ld b,3
534+  8A83 18 02            jr 2F
535+  8A85 06 02        1 ld b,2
536+  8A87 08           2 ex af,af'
537+  8A88 3C               inc a
538+  8A89 3D               dec a
539+  8A8A 28 04            jr z,5F
540+  8A8C 0E 03            ld c,3
541+  8A8E 18 02            jr 6F
542+  8A90 0E 02        5 ld c,2
543+  8A92 79           6 ld a,c
544+  8A93 08               ex af,af'
545+  8A94 11 F0 85         ld de,Coordenadas_X_Entidad
546+  8A97 1A           4 ld a,(de)
547+  8A98 21 ED 85         ld hl,Coordenadas_X_Amadeus
548+  8A9B BE           3 cp (hl)
549+  8A9C 28 0B            jr z,7F
550+  8A9E 23               inc hl
551+  8A9F 0D               dec c
552+  8AA0 20 F9            jr nz,3B
553+  8AA2 13               inc de
554+  8AA3 08               ex af,af'
555+  8AA4 4F               ld c,a
556+  8AA5 08               ex af,af'
557+  8AA6 10 EF            djnz 4B
558+  8AA8 C9           8 ret
559+  8AA9 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
560+  8AAB 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
561+  8AAE              ;                                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
562+  8AAE 21 EC 85         ld hl,Impacto2
563+  8AB1 CB D6            set 2,(hl)
564+  8AB3 18 F3            jr 8B
565+  8AB5
566+  8AB5              ; -----------------------------------------------------------------------
567+  8AB5              ;
568+  8AB5              ;   11/04/23
569+  8AB5              ;
570+  8AB5
571+  8AB5              Detecta_colision_nave_entidad
572+  8AB5
573+  8AB5              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
574+  8AB5
575+  8AB5 2A 9D 85         ld hl,(Posicion_actual)
576+  8AB8 CD AD 8E         call Calcula_puntero_de_impresion
577+  8ABB
578+  8ABB              ; Ahora, IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
579+  8ABB              ;        IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
580+  8ABB
581+  8ABB 18 FE            jr $
582+  8ABD
583+  8ABD DD E5            push ix
584+  8ABF E1               pop hl
585+  8AC0 E5               push hl
586+  8AC1
587+  8AC1              ; ----- ----- -----
588+  8AC1
589+  8AC1 1E 00            ld e,0                                         ; E,(Impacto)="0".
590+  8AC3 06 10            ld b,16
591+  8AC5
592+  8AC5 CD E2 8A     2 call Bucle_3                                   ; Comprobamos el 1er scanline.
593+  8AC8 7B               ld a,e
594+  8AC9 28 07            jr z,3F
595+  8ACB
596+  8ACB 21 EC 85         ld hl,Impacto2
597+  8ACE CB D6            set 2,(hl)
598+  8AD0 18 0E            jr 1F
599+  8AD2
600+  8AD2 E1           3 pop hl
601+  8AD3 E5               push hl
602+  8AD4 CD 48 8F         call NextScan
603+  8AD7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
604+  8AD8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
605+  8ADA 28 04            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
606+  8ADC 30 02            jr nc,1F
607+  8ADE              ;                                                  ; _ 2º scanline si esto es así.
608+  8ADE 10 E5            djnz 2B
609+  8AE0
610+  8AE0 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
611+  8AE1 C9               ret
612+  8AE2
613+  8AE2               ; ---------- ----------
614+  8AE2
615+  8AE2 3A 9C 85     Bucle_3 ld a,(Columns)
616+  8AE5 47               ld b,a
617+  8AE6 FD 7E 00     2 ld a,(iy)
618+  8AE9 A6               and (hl)
619+  8AEA 28 02            jr z,1F
620+  8AEC 1E 01            ld e,1
621+  8AEE 23           1 inc hl
622+  8AEF FD 23            inc iy
623+  8AF1 10 F3            djnz 2B
624+  8AF3 C9               ret
625+  8AF4
626+  8AF4              ; -------------------------------------------------------------------------------------------------------------
627+  8AF4              ;
628+  8AF4              ;   13/03/23
629+  8AF4              ;
630+  8AF4              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
631+  8AF4              ;
632+  8AF4              ;   DESTRUYE: HL,BC,DE y A.
633+  8AF4
634+  8AF4 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
635+  8AF7 7E               ld a,(hl)
636+  8AF8 A7               and a
637+  8AF9 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
638+  8AFA
639+  8AFA 44               ld b,h
640+  8AFB 4D               ld c,l
641+  8AFC 2A E5 85         ld hl,(Stack_snapshot_disparos)
642+  8AFF E5               push hl
643+  8B00 A7               and a
644+  8B01 ED 42            sbc hl,bc
645+  8B03 E5               push hl
646+  8B04 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
647+  8B05
648+  8B05 E1               pop hl
649+  8B06 54               ld d,h
650+  8B07 5D               ld e,l
651+  8B08 1B               dec de
652+  8B09 ED B8            lddr                                                ; Limpiamos.
653+  8B0B
654+  8B0B 21 60 70         ld hl,Album_de_fotos_disparos
655+  8B0E 22 E5 85         ld (Stack_snapshot_disparos),hl
656+  8B11
657+  8B11 C9               ret
658+  8B12
659+  8B12              ; -------------------------------------------------------------------------------------------------------------
660+  8B12              ;
661+  8B12              ;   28/03/23
662+  8B12              ;
663+  8B12
664+  8B12 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
665+  8B15 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
666+  8B18
667+  8B18 CD B2 87     2 call Extrae_address
668+  8B1B 7E               ld a,(hl)
669+  8B1C A7               and a
670+  8B1D 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
671+  8B1F
672+  8B1F              ; ----- ----- ----- ----- ----- -----
673+  8B1F
674+  8B1F C5               push bc
675+  8B20 CD CA 8B         call foto_disparo_a_borrar
676+  8B23
677+  8B23              ; Existe colisión con este disparo???
678+  8B23
679+  8B23 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
680+  8B24 7E               ld a,(hl)
681+  8B25 2B               dec hl
682+  8B26 E6 01            and 1
683+  8B28 28 0C            jr z,9F
684+  8B2A
685+  8B2A              ; Elimino el disparo de la base de datos.
686+  8B2A
687+  8B2A E5               push hl
688+  8B2B CD 44 8C         call Elimina_disparo_de_base_de_datos
689+  8B2E 21 EC 85         ld hl,Impacto2
690+  8B31 CB C6            set 0,(hl)
691+  8B33 E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
692+  8B34 18 06            jr 11F
693+  8B36
694+  8B36 CD F3 8B     9 call Mueve_disparo
695+  8B39 CD CA 8B         call foto_disparo_a_borrar
696+  8B3C
697+  8B3C C1           11 pop bc
698+  8B3D
699+  8B3D 18 04            jr 7F
700+  8B3F
701+  8B3F              ; ----- ----- ----- ----- ----- -----
702+  8B3F
703+  8B3F ED 42        1 sbc hl,bc
704+  8B41 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
705+  8B43
706+  8B43 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
707+  8B46 23               inc hl
708+  8B47 23               inc hl
709+  8B48 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
710+  8B4B 18 CB            jr 2B
711+  8B4D
712+  8B4D CD 7B 87     3 call Inicia_Puntero_Disparo_Amadeus
713+  8B50
714+  8B50 01 66 84         ld bc,Disparo_11
715+  8B53 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
716+  8B56
717+  8B56 CD B2 87     5 call Extrae_address
718+  8B59 7E               ld a,(hl)
719+  8B5A A7               and a
720+  8B5B 28 5B            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
721+  8B5D
722+  8B5D              ; ----- ----- ----- ----- ----- -----
723+  8B5D
724+  8B5D C5               push bc
725+  8B5E CD CA 8B         call foto_disparo_a_borrar
726+  8B61
727+  8B61              ; Existe colisión con este disparo???
728+  8B61
729+  8B61 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
730+  8B62 7E               ld a,(hl)
731+  8B63 2B               dec hl
732+  8B64 E6 01            and 1
733+  8B66 28 47            jr z,10F
734+  8B68
735+  8B68              ; La colisión se produce con Amadeus???
736+  8B68              ; Amadeus siempre tiene (Coordenada_y)="$16".
737+  8B68
738+  8B68 E5               push hl
739+  8B69
740+  8B69 06 04            ld b,4
741+  8B6B 23           16 inc hl
742+  8B6C 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
743+  8B6E
744+  8B6E CD B2 87         call Extrae_address
745+  8B71 CD 5F 95         call Genera_coordenadas_disparo
746+  8B74 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
747+  8B75 FE 16            cp $16
748+  8B77 38 24            jr c,15F
749+  8B79
750+  8B79              ; (Colisiones en filas 16 y 17).
751+  8B79
752+  8B79 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
753+  8B7A
754+  8B7A              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
755+  8B7A
756+  8B7A 21 7A 84         ld hl,Amadeus_db+6
757+  8B7D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
758+  8B7E 23               inc hl
759+  8B7F 23               inc hl
760+  8B80 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
761+  8B81 21 88 84         ld hl,Amadeus_db+20
762+  8B84 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
763+  8B85 21 ED 85         ld hl,Coordenadas_X_Amadeus
764+  8B88
765+  8B88 CD 4F 8C         call Guarda_coordenadas_X
766+  8B8B
767+  8B8B D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
768+  8B8C
769+  8B8C              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
770+  8B8C
771+  8B8C 21 ED 85         ld hl,Coordenadas_X_Amadeus
772+  8B8F 7E               ld a,(hl)
773+  8B90 BA           18 cp d
774+  8B91 20 03            jr nz,17F
775+  8B93
776+  8B93              ; Colisión Amadeus !!!!!!!!!!
777+  8B93
778+  8B93 E1               pop hl
779+  8B94 18 0D            jr 14F
780+  8B96
781+  8B96 23           17 inc hl
782+  8B97 7E               ld a,(hl)
783+  8B98
784+  8B98 A7               and a
785+  8B99 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
786+  8B9B 18 F3            jr 18B
787+  8B9D
788+  8B9D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
789+  8B9D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
790+  8B9D
791+  8B9D E1           15  pop hl
792+  8B9E 23               inc hl
793+  8B9F 35               dec (hl)
794+  8BA0 2B               dec hl
795+  8BA1 18 0C            jr 10F
796+  8BA3
797+  8BA3              ; -----------------------debug
798+  8BA3
799+  8BA3              ; Elimino el disparo de la base de datos.
800+  8BA3
801+  8BA3 E5           14 push hl
802+  8BA4 CD 44 8C         call Elimina_disparo_de_base_de_datos
803+  8BA7 21 EC 85         ld hl,Impacto2
804+  8BAA CB CE            set 1,(hl)
805+  8BAC E1               pop hl
806+  8BAD 18 06            jr 12F
807+  8BAF
808+  8BAF CD F3 8B     10 call Mueve_disparo
809+  8BB2 CD CA 8B         call foto_disparo_a_borrar
810+  8BB5 C1           12 pop bc
811+  8BB6
812+  8BB6 18 04            jr 8F
813+  8BB8
814+  8BB8              ; ----- ----- ----- ----- ----- -----
815+  8BB8
816+  8BB8 ED 42        4 sbc hl,bc
817+  8BBA 28 0A            jr z,6F
818+  8BBC
819+  8BBC 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
820+  8BBF 23               inc hl
821+  8BC0 23               inc hl
822+  8BC1 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
823+  8BC4 18 90            jr 5B
824+  8BC6
825+  8BC6 CD 74 87     6 call Inicia_Puntero_Disparo_Entidades
826+  8BC9 C9               ret
827+  8BCA
828+  8BCA              ; ------------------------------------------------------------------
829+  8BCA
830+  8BCA              foto_disparo_a_borrar
831+  8BCA
832+  8BCA 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
833+  8BCB A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
834+  8BCC C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
835+  8BCD
836+  8BCD E5               push hl
837+  8BCE 23               inc hl
838+  8BCF 23               inc hl
839+  8BD0 ED 73 DF 85      ld (Stack),sp
840+  8BD4 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
841+  8BD5 FD E1            pop iy
842+  8BD7 DD E1            pop ix
843+  8BD9 E1               pop hl
844+  8BDA ED 7B DF 85      ld sp,(Stack)
845+  8BDE 3A D6 85         ld a,(Ctrl_1)
846+  8BE1 CB C7            set 0,a
847+  8BE3 32 D6 85         ld (Ctrl_1),a
848+  8BE6 CD A0 7F         call Guarda_foto_registros
849+  8BE9 3A D6 85         ld a,(Ctrl_1)
850+  8BEC CB 87            res 0,a
851+  8BEE 32 D6 85         ld (Ctrl_1),a
852+  8BF1 E1               pop hl
853+  8BF2 C9               ret
854+  8BF3
855+  8BF3 E5           Mueve_disparo push hl
856+  8BF4 7E               ld a,(hl)
857+  8BF5 06 04            ld b,4
858+  8BF7 23           1 inc hl
859+  8BF8 10 FD            djnz 1B
860+  8BFA
861+  8BFA              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
862+  8BFA
863+  8BFA CD B2 87         call Extrae_address
864+  8BFD
865+  8BFD E6 01            and 1
866+  8BFF 28 2A            jr z,2F
867+  8C01
868+  8C01              ; Disparo hacia arriba, (Amadeus).
869+  8C01
870+  8C01              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
871+  8C01              ; _ de la dificultad.
872+  8C01
873+  8C01 CD 57 8F         call PreviousScan
874+  8C04 CD 57 8F         call PreviousScan
875+  8C07 CD 57 8F         call PreviousScan
876+  8C0A
877+  8C0A              ; Detecta si el disparo de Amadeus sale de pantalla:
878+  8C0A
879+  8C0A 7C               ld a,h
880+  8C0B FE 40            cp $40
881+  8C0D 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
882+  8C0F
883+  8C0F              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
884+  8C0F
885+  8C0F EB               ex de,hl
886+  8C10 06 04            ld b,4
887+  8C12 2B           6 dec hl
888+  8C13 10 FD            djnz 6B
889+  8C15
890+  8C15 CD 44 8C         call Elimina_disparo_de_base_de_datos
891+  8C18
892+  8C18 18 0C            jr 4F
893+  8C1A
894+  8C1A              ; Se ha desplazado la bala, compruebo colisión.
895+  8C1A
896+  8C1A D5           3 push de
897+  8C1B C5               push bc
898+  8C1C CD 2C 8A         call Comprueba_Colision
899+  8C1F 78               ld a,b
900+  8C20 C1               pop bc
901+  8C21 D1               pop de
902+  8C22
903+  8C22 EB               ex de,hl
904+  8C23
905+  8C23 73               ld (hl),e
906+  8C24 23               inc hl
907+  8C25 72               ld (hl),d
908+  8C26
909+  8C26 E1           4 pop hl
910+  8C27 23               inc hl
911+  8C28 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
912+  8C29 2B               dec hl
913+  8C2A C9               ret
914+  8C2B
915+  8C2B              ; Disparo hacia abajo, (Entidad).
916+  8C2B
917+  8C2B              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
918+  8C2B              ; _ de la dificultad.
919+  8C2B
920+  8C2B CD 48 8F     2 call NextScan
921+  8C2E CD 48 8F         call NextScan
922+  8C31 CD 48 8F         call NextScan
923+  8C34
924+  8C34              ; Detecta si el disparo de la entidad sale de la pantalla.
925+  8C34
926+  8C34 7C               ld a,h
927+  8C35 FE 58            cp $58
928+  8C37 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
929+  8C39
930+  8C39 EB               ex de,hl
931+  8C3A 06 04            ld b,4
932+  8C3C 2B           5 dec hl
933+  8C3D 10 FD            djnz 5B
934+  8C3F
935+  8C3F CD 44 8C         call Elimina_disparo_de_base_de_datos
936+  8C42
937+  8C42 18 E2            jr 4B
938+  8C44
939+  8C44              ; HL apunta al primer byte de la base de datos del disparo.
940+  8C44 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
941+  8C47 AF               xor a
942+  8C48 77               ld (hl),a
943+  8C49 54               ld d,h
944+  8C4A 5D               ld e,l
945+  8C4B 13               inc de
946+  8C4C ED B0            ldir
947+  8C4E C9               ret
948+  8C4F
949+  8C4F              ; -----------------------------------------------------------------
950+  8C4F              ;
951+  8C4F              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
952+  8C4F              ;
953+  8C4F              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
954+  8C4F              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
955+  8C4F              ;
956+  8C4F              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
957+  8C4F              ;
958+  8C4F              ;   INPUTS:
959+  8C4F              ;
960+  8C4F              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
961+  8C4F              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
962+  8C4F              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
963+  8C4F
964+  8C4F              ;   MODIFICA: A, HL, DE y C
965+  8C4F
966+  8C4F 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
967+  8C50 79               ld a,c
968+  8C51 E6 01            and 1
969+  8C53 20 03            jr nz,1F
970+  8C55 14               inc d
971+  8C56 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
972+  8C58
973+  8C58              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
974+  8C58              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
975+  8C58
976+  8C58 15           1 dec d
977+  8C59 23           2 inc hl
978+  8C5A 72               ld (hl),d
979+  8C5B
980+  8C5B 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
981+  8C5C A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
982+  8C5D C8               ret z
983+  8C5E
984+  8C5E AF               xor a
985+  8C5F 5F               ld e,a
986+  8C60 18 ED            jr Guarda_coordenadas_X
987+  8C62
# file closed: Disparo.asm
900   8C62              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8C62              ; ******************************************************************************************************************************************************************************************
  2+  8C62              ;
  3+  8C62              ; 01/23
  4+  8C62              ;
  5+  8C62              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8C62
  7+  8C62 CD 3C 8F     Draw call Prepara_draw
  8+  8C65 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8C66 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8C67 28 05        	jr z,2F
 11+  8C69
 12+  8C69 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8C6C 18 0C        	jr 1F
 14+  8C6E 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8C71 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8C74 CD 03 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8C77              ;													; _la esquina superior izquierda de la pantalla.
 18+  8C77 CD 82 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8C7A 3A C9 85     1 ld a,(Ctrl_0)
 20+  8C7D CB 6F        	bit 5,a
 21+  8C7F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8C81
 23+  8C81 CD 99 8C     	call Comprueba_limite_horizontal
 24+  8C84 CD 29 8D     	call Comprueba_limite_vertical
 25+  8C87
 26+  8C87              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8C87
 28+  8C87 CD 76 8E     3 call calcula_CColumnass
 29+  8C8A CD AD 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8C8D CD 02 8F     	call Define_rutina_de_impresion
 31+  8C90
 32+  8C90 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8C93 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8C95 32 C9 85     	ld (Ctrl_0),a
 35+  8C98
 36+  8C98 C9           	ret
 37+  8C99
 38+  8C99              ; *******************************************************************************************************************************************************************************************
 39+  8C99              ;	21/01/23
 40+  8C99              ;
 41+  8C99              ; 	Comprueba_limite_horizontal.
 42+  8C99              ;
 43+  8C99              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8C99              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8C99              ;
 46+  8C99              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8C99              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8C99              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8C99              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8C99
 51+  8C99
 52+  8C99
 53+  8C99 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8C9C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8C9E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8CA0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8CA2 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8CA5 18 09            jr 6F
 59+  8CA7 CB 5F        1 bit 3,a
 60+  8CA9 28 0A            jr z,2F
 61+  8CAB E6 F7            and $f7
 62+  8CAD 32 C9 85         ld (Ctrl_0),a
 63+  8CB0 CD 03 8E     6 call Inicializacion
 64+  8CB3 18 5B            jr 5F
 65+  8CB5 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8CB6
 67+  8CB6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8CB6              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8CB6
 70+  8CB6 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8CB7 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8CBA CD 08 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8CBD 67           	ld h,a
 74+  8CBE EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8CBF CD 08 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8CC2 67           	ld h,a
 77+  8CC3 A7           	and a
 78+  8CC4 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8CC6 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8CC7 3A AF 85     	ld a,(Cuad_objeto)
 81+  8CCA FE 02        	cp 2
 82+  8CCC 38 1E        	jr c,3F
 83+  8CCE 28 1C        	jr z,3F
 84+  8CD0 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8CD1 28 23            jr z,7F
 86+  8CD3 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8CD5 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8CD7 E1           	pop hl
 89+  8CD8
 90+  8CD8              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8CD8              ; _para indicar con E="2" en caso necesario.
 92+  8CD8
 93+  8CD8 E5               push hl
 94+  8CD9 C5               push bc
 95+  8CDA CD 08 92     	call calcula_tercio
 96+  8CDD FE 01        	cp 1
 97+  8CDF 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8CE1 CD 11 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8CE4 28 26            jr z,9F
100+  8CE6 38 24            jr c,9F
101+  8CE8 1E 00        11 ld e,0
102+  8CEA 18 22            jr 8F
103+  8CEC 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8CED 28 07        	jr z, 7F
105+  8CEF 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8CF1 1E 00         	ld e,0
107+  8CF3 E1           	pop hl
108+  8CF4 18 04        	jr 4F
109+  8CF6 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8CF8 18 15            jr 10F
111+  8CFA
112+  8CFA              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8CFA              ; _para indicar con E="2" en caso necesario.
114+  8CFA
115+  8CFA E5           4 push hl
116+  8CFB C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8CFC CD 08 92     	call calcula_tercio
118+  8CFF FE 01        	cp 1
119+  8D01 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8D03 CD 11 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8D06 28 04            jr z,9F
122+  8D08 30 02            jr nc,9F
123+  8D0A 18 02        	jr 8F
124+  8D0C 1E 02        9 ld e,2
125+  8D0E C1           8 pop bc
126+  8D0F E1           10 pop hl
127+  8D10 C9           5 ret
128+  8D11
129+  8D11              ; --------------------
130+  8D11              ;
131+  8D11              ; 25/08/22
132+  8D11
133+  8D11 CD 08 92     Comprueba_centro call calcula_tercio
134+  8D14 67               ld h,a
135+  8D15 08           	ex af,af
136+  8D16 FE 02        	cp 2
137+  8D18 38 07        	jr c,1F
138+  8D1A 28 05        	jr z,1F
139+  8D1C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8D1F 18 03        	jr 2F
141+  8D21 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8D24 08           2 ex af,af
143+  8D25 A7               and a
144+  8D26 ED 42            sbc hl,bc
145+  8D28 C9               ret
146+  8D29
147+  8D29              ; *********************************************************************************************************************************************************************************************
148+  8D29              ;
149+  8D29              ;   16/8/22
150+  8D29              ;
151+  8D29              ;	Comprueba_limite_vertical
152+  8D29              ;
153+  8D29              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8D29              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8D29              ;
156+  8D29
157+  8D29 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8D2C 7D           	ld a,l
159+  8D2D E6 1F        	and $1F
160+  8D2F 57           	ld d,a
161+  8D30 3A D5 85     	ld a,(Limite_vertical)
162+  8D33 BA           	cp d 											; Límite - Posición.
163+  8D34 08           	ex af,af 										; Resultado de CP d en F'.
164+  8D35 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8D38 CB 47        	bit 0,a
166+  8D3A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8D3C
168+  8D3C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8D3C
170+  8D3C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8D3D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8D3F
173+  8D3F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8D3F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8D3F
176+  8D3F 3A A1 85         ld a,(Coordenada_X)
177+  8D42 16 0F            ld d,Centro_izquierda
178+  8D44 A7               and a
179+  8D45 92               sub d 											 ; Posición - Centro_izquierda.
180+  8D46 28 1E            jr z,3F
181+  8D48 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8D4A              ;                                                    ; _salimos sin modificar nada.
183+  8D4A 18 0E            jr 2F
184+  8D4C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8D4D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8D4F
187+  8D4F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8D4F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8D4F
190+  8D4F 3A A1 85         ld a,(Coordenada_X)
191+  8D52 16 10            ld d,Centro_derecha
192+  8D54 A7               and a
193+  8D55 92               sub d
194+  8D56 28 0E            jr z,3F
195+  8D58 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8D5A              ;                                                    ; _salimos sin modificar nada.
197+  8D5A CB 43        2 bit 0,e
198+  8D5C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8D5E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8D5F CD F3 8D         call Modificaccionne
201+  8D62 C1           	pop bc
202+  8D63 CD 03 8E         call Inicializacion
203+  8D66 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8D67
205+  8D67              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8D67
207+  8D67 C5           4 push bc
208+  8D68 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8D6B 0A           	ld a,(bc)
210+  8D6C 3D           	dec a
211+  8D6D 47           	ld b,a 											 ; Columnas-1 en B.
212+  8D6E 7D           	ld a,l
213+  8D6F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8D70 CB 47        	bit 0,a
215+  8D72 28 03        	jr z,5F
216+  8D74 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8D75 18 2E        	jr 7F
218+  8D77
219+  8D77              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8D77
221+  8D77 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8D78 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8D79 3A C9 85     	ld a,(Ctrl_0)
224+  8D7C CB 4F        	bit 1,a
225+  8D7E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8D80 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8D81
228+  8D81              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8D81
230+  8D81 1C               inc e
231+  8D82 1D               dec e
232+  8D83 20 07            jr nz,12F
233+  8D85 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8D86 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8D87 22 9D 85     	ld (Posicion_actual),hl
236+  8D8A 18 44        13 jr 9F
237+  8D8C CB 43        12 bit 0,e
238+  8D8E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8D90              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8D90 C1           	pop bc
241+  8D91 18 D3        	jr 3B
242+  8D93 80           14 add b
243+  8D94 6F               ld l,a
244+  8D95 22 9D 85     	ld (Posicion_actual),hl
245+  8D98 CD F3 8D         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8D9B 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8D9D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8D9F 32 C9 85         ld (Ctrl_0),a
249+  8DA2 F1           	pop af
250+  8DA3 18 2B        	jr 9F
251+  8DA5
252+  8DA5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8DA5
254+  8DA5 F5           7 push af
255+  8DA6 3A C9 85     	ld a,(Ctrl_0)
256+  8DA9 CB 47        	bit 0,a
257+  8DAB 20 1D        	jr nz,8F
258+  8DAD F1           	pop af
259+  8DAE
260+  8DAE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8DAE
262+  8DAE 1C           	inc e
263+  8DAF 1D               dec e
264+  8DB0 20 07            jr nz,10F
265+  8DB2 90           	sub b
266+  8DB3 6F               ld l,a
267+  8DB4 22 9D 85     	ld (Posicion_actual),hl
268+  8DB7 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8DB9              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8DB9 CB 43        10 bit 0,e
271+  8DBB 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8DBD              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8DBD C1           	pop bc
274+  8DBE 18 A6        	jr 3B
275+  8DC0 90           16 sub b
276+  8DC1 6F               ld l,a
277+  8DC2 22 9D 85     	ld (Posicion_actual),hl
278+  8DC5 CD F3 8D         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8DC8 18 06            jr 9F
280+  8DCA E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8DCC 32 C9 85         ld (Ctrl_0),a
282+  8DCF F1           	pop af
283+  8DD0 C1           9 pop bc
284+  8DD1 1E 00        	ld e,0
285+  8DD3 CD 03 8E         call Inicializacion
286+  8DD6 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8DD7 08           	ex af,af
288+  8DD8 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8DD9 18 8B            jr 3B
290+  8DDB
291+  8DDB              ; --------------------
292+  8DDB
293+  8DDB 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8DDD CD 57 8F     1 call PreviousScan
295+  8DE0 10 FB            djnz 1B
296+  8DE2 22 9D 85     	ld (Posicion_actual),hl
297+  8DE5 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8DE6 C9           	ret
299+  8DE7
300+  8DE7              ; --------------------
301+  8DE7
302+  8DE7 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8DE9 CD 48 8F     1 call NextScan
304+  8DEC 10 FB            djnz 1B
305+  8DEE 22 9D 85     	ld (Posicion_actual),hl
306+  8DF1 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8DF2 C9           	ret
308+  8DF3
309+  8DF3              ; --------------------
310+  8DF3              ;
311+  8DF3              ;	22/01/23
312+  8DF3              ;
313+  8DF3              ;	E="1". Hemos cambiado de cuadrante.
314+  8DF3              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8DF3              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8DF3
317+  8DF3
318+  8DF3              Modificaccionne
319+  8DF3
320+  8DF3 3A AF 85     	ld a,(Cuad_objeto)
321+  8DF6 FE 02        	cp 2
322+  8DF8 CC DB 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8DFB DC DB 8D         call c,Modifica_Pos_actual
324+  8DFE C8           	ret z
325+  8DFF CD E7 8D         call Modifica_Pos_actual2
326+  8E02 C9               ret
327+  8E03
328+  8E03              ; *************************************************************************************************************************************************************************************************
329+  8E03              ;
330+  8E03              ;	13/8/22
331+  8E03              ;
332+  8E03              ;	Inicializacion
333+  8E03              ;
334+  8E03              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8E03              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8E03              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8E03              ;
338+  8E03              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8E03              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8E03              ;	_ desaparece/aparece.
341+  8E03
342+  8E03              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8E03              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8E03              ;
345+  8E03              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8E03              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8E03              ; 		   [E] ="0"
348+  8E03
349+  8E03              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8E03
351+  8E03 CD 08 92     Inicializacion call calcula_tercio
352+  8E06 28 36        	jr z,primit
353+  8E08 E6 02        	and 2
354+  8E0A 20 07        	jr nz,segmit
355+  8E0C 7D           	ld a,l
356+  8E0D FE 7F        	cp $7f
357+  8E0F 38 2D        	jr c,primit
358+  8E11 28 2B        	jr z,primit
359+  8E13 CD 70 8E     segmit call column
360+  8E16 38 13        	jr c,tercuad
361+  8E18 3E 04        cuarcuad ld a,4
362+  8E1A 32 AF 85     	ld (Cuad_objeto),a
363+  8E1D 21 20 48     	ld hl,$4820
364+  8E20 22 D3 85     	ld (Limite_horizontal),hl
365+  8E23 21 D5 85     	ld hl,Limite_vertical
366+  8E26 36 0D        	ld (hl),$0d
367+  8E28 08           	ex af,af
368+  8E29 18 3C        	jr 1F
369+  8E2B              tercuad
370+  8E2B 3E 03        	ld a,3
371+  8E2D 32 AF 85     	ld (Cuad_objeto),a
372+  8E30 21 20 48     	ld hl,$4820
373+  8E33 22 D3 85     	ld (Limite_horizontal),hl
374+  8E36 21 D5 85     	ld hl,Limite_vertical
375+  8E39 36 12        	ld (hl),$12
376+  8E3B 08           	ex af,af
377+  8E3C 18 29        	jr 1F
378+  8E3E CD 70 8E     primit call column
379+  8E41 38 13        	jr c, primcuad
380+  8E43              segcuad
381+  8E43 3E 02        	ld a,2
382+  8E45 32 AF 85     	ld (Cuad_objeto),a
383+  8E48 21 C0 4F     	ld hl,$4fc0
384+  8E4B 22 D3 85     	ld (Limite_horizontal),hl
385+  8E4E 21 D5 85     	ld hl,Limite_vertical
386+  8E51 36 0D        	ld (hl),$0d
387+  8E53 08           	ex af,af
388+  8E54 18 11        	jr 1F
389+  8E56              primcuad
390+  8E56 3E 01        	ld a,1
391+  8E58 32 AF 85     	ld (Cuad_objeto),a
392+  8E5B 21 C0 4F     	ld hl,$4fc0
393+  8E5E 22 D3 85     	ld (Limite_horizontal),hl
394+  8E61 21 D5 85     	ld hl,Limite_vertical
395+  8E64 36 12        	ld (hl),$12
396+  8E66 08           	ex af,af
397+  8E67 CD 34 95     1 call Genera_coordenadas
398+  8E6A 21 C9 85     	ld hl,Ctrl_0
399+  8E6D CB EE        	set 5,(hl)
400+  8E6F C9           	ret
401+  8E70
402+  8E70              ; ------------------------------------------------------------------------------------------------------------------
403+  8E70
404+  8E70              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8E70              ;
406+  8E70              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8E70
408+  8E70 7D           column ld a,l
409+  8E71 E6 1F        	and $1f
410+  8E73 FE 10         	cp $10
411+  8E75 C9            	ret
412+  8E76
413+  8E76              ; --------------------------------------------------------------------------------------------------------------------
414+  8E76              ;
415+  8E76              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8E76              ;
417+  8E76              ; 14/12/22
418+  8E76              ;
419+  8E76              ;	Modifica: A y BC.
420+  8E76
421+  8E76 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8E79 E6 01        	and 1
423+  8E7B 28 17        	jr z,1F
424+  8E7D
425+  8E7D              ; Nos encontramos en la parte izquierda de la pantalla
426+  8E7D
427+  8E7D 3A A1 85     	ld a,(Coordenada_X)
428+  8E80 47           	ld b,a
429+  8E81 04           	inc b											; (Coordenada_X)+1 en B.
430+  8E82 79           	ld a,c
431+  8E83 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8E84 38 08        	jr c,2F
433+  8E86 47           	ld b,a
434+  8E87 79           	ld a,c
435+  8E88 90           	sub b
436+  8E89 32 D2 85     	ld (Columnas),a
437+  8E8C 18 1B        	jr 4F
438+  8E8E 79           2 ld a,c
439+  8E8F 32 D2 85     	ld (Columnas),a
440+  8E92 18 15        	jr 4F
441+  8E94
442+  8E94              ; Nos encontramos en la parte derecha de la pantalla.
443+  8E94
444+  8E94 3A A1 85     1 ld a,(Coordenada_X)
445+  8E97 81           	add c
446+  8E98 3D           	dec a
447+  8E99 D6 1F        	sub $1f
448+  8E9B 38 08        	jr c,3F
449+  8E9D 47           	ld b,a
450+  8E9E 79           	ld a,c
451+  8E9F 90           	sub b
452+  8EA0 32 D2 85     	ld (Columnas),a
453+  8EA3 18 04        	jr 4F
454+  8EA5 79           3 ld a,c
455+  8EA6 32 D2 85     	ld (Columnas),a
456+  8EA9 D9           4 exx
457+  8EAA 4F           	ld c,a
458+  8EAB D9           	exx
459+  8EAC C9            ret
460+  8EAD
461+  8EAD              ; --------------------------------------------------------------------------------------------------------------------
462+  8EAD              ;
463+  8EAD              ; 7/1/23
464+  8EAD              ;
465+  8EAD              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8EAD              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8EAD              ;
468+  8EAD              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8EAD              ;	DESTRUYE: HL,B Y A.
470+  8EAD
471+  8EAD 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8EB0 FE 02        	cp 2
473+  8EB2 38 18        	jr c,1F
474+  8EB4 28 16        	jr z,1F
475+  8EB6 E6 01        	and 1
476+  8EB8 28 0D        	jr z,3F
477+  8EBA
478+  8EBA              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8EBA
480+  8EBA CD F6 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8EBD
482+  8EBD 7D           9 ld a,l
483+  8EBE E6 1F        	and $1f
484+  8EC0 28 2A        	jr z,7F
485+  8EC2 2B           	dec hl
486+  8EC3 10 F8        	djnz 9B
487+  8EC5 18 25        	jr 7F
488+  8EC7
489+  8EC7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8EC7
491+  8EC7 2A 9D 85     3 ld hl,(Posicion_actual)
492+  8ECA 18 20        	jr 7F
493+  8ECC
494+  8ECC 28 14        1 jr z,2F
495+  8ECE
496+  8ECE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8ECE
498+  8ECE CD F6 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8ED1 7D           4 ld a,l
500+  8ED2 E6 1F        	and $1f
501+  8ED4 28 03        	jr z,6F
502+  8ED6 2B           	dec hl
503+  8ED7 10 F8        	djnz 4B
504+  8ED9 06 0F        6 ld b,15
505+  8EDB CD 57 8F     5 call PreviousScan
506+  8EDE 10 FB        	djnz 5B
507+  8EE0 18 0A        	jr 7F
508+  8EE2
509+  8EE2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8EE2
511+  8EE2 CD F6 8E     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8EE5 06 0F        	ld b,15
513+  8EE7 CD 57 8F     8 call PreviousScan
514+  8EEA 10 FB        	djnz 8B
515+  8EEC
516+  8EEC E5           7 push hl
517+  8EED DD E1        	pop ix
518+  8EEF
519+  8EEF 2A 9F 85     	ld hl,(Puntero_objeto)
520+  8EF2 E5           	push hl
521+  8EF3 FD E1        	pop iy
522+  8EF5
523+  8EF5 C9           	ret
524+  8EF6
525+  8EF6              ; --------------------------------------------------------------------------------------------------------------------
526+  8EF6              ;
527+  8EF6              ;	2/1/23
528+  8EF6              ;
529+  8EF6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8EF6              ;
531+  8EF6              ;	Tras esta rutina tenemos:
532+  8EF6              ;
533+  8EF6              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8EF6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8EF6              ;
536+  8EF6              ;	DESTRUYE!!!!! HL,B y A.
537+  8EF6
538+  8EF6 2A 9D 85     Operandos ld hl,(Posicion_actual)
539+  8EF9 3A D2 85     	ld a,(Columnas)
540+  8EFC 3D           	dec a
541+  8EFD 20 01        	jr nz,1F
542+  8EFF 3C           	inc a
543+  8F00 47           1 ld b,a
544+  8F01 C9           	ret
545+  8F02
546+  8F02              ; --------------------------------------------------------------------------------------------------------------------
547+  8F02              ;
548+  8F02              ;	3/1/23
549+  8F02              ;
550+  8F02              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8F02              ;
552+  8F02              ;	Destruye: A,B,HL y DE.
553+  8F02
554+  8F02              Define_rutina_de_impresion
555+  8F02
556+  8F02 3A 9C 85     	ld a,(Columns)
557+  8F05 47           	ld b,a
558+  8F06 3A D2 85     	ld a,(Columnas)
559+  8F09 B8           	cp b
560+  8F0A 20 0D        	jr nz,2f
561+  8F0C
562+  8F0C              ;	La entidad se imprime entera.
563+  8F0C
564+  8F0C 21 D8 8F     	ld hl, Indice_entidades_completas
565+  8F0F E6 01        	and 1
566+  8F11 28 02        	jr z,1F
567+  8F13
568+  8F13 23           	inc hl
569+  8F14 23           	inc hl
570+  8F15
571+  8F15 CD B2 87     1 call Extrae_address
572+  8F18 C9           	ret		;	ret
573+  8F19
574+  8F19              ;	La entidad no se imprime entera en pantalla.
575+  8F19
576+  8F19 3A AF 85     2 ld a,(Cuad_objeto)
577+  8F1C E6 01        	and 1
578+  8F1E 28 17        	jr z,3F
579+  8F20
580+  8F20              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8F20
582+  8F20 21 DC 8F     	ld hl, Indice_entidades_incompletas_izquierda
583+  8F23 3A 9C 85     4 ld a,(Columns)
584+  8F26 E6 01        	and 1
585+  8F28 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8F2A
587+  8F2A 23           	inc hl
588+  8F2B 23           	inc hl
589+  8F2C
590+  8F2C 3A D2 85     	ld a,(Columnas)
591+  8F2F E6 01        	and 1
592+  8F31 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8F33
594+  8F33 23           	inc hl
595+  8F34 23           	inc hl
596+  8F35
597+  8F35 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8F37
599+  8F37 21 E2 8F     3 ld hl, Indice_entidades_incompletas_derecha
600+  8F3A 18 E7        	jr 4B
601+  8F3C
602+  8F3C              ; --------------------------------------------------------------------------------------------------------------------
603+  8F3C              ;
604+  8F3C              ;	Prepara_draw
605+  8F3C              ;
606+  8F3C              ;	Es una rutina de carga.
607+  8F3C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8F3C              ;
609+  8F3C              ;	FUNCIONAMIENTO:
610+  8F3C              ;
611+  8F3C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8F3C              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8F3C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8F3C              ;
615+  8F3C              ;	DESTRUYE:
616+  8F3C              ;
617+  8F3C              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8F3C
619+  8F3C 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8F3F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8F40 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8F41 4E           	ld c,(hl)
623+  8F42 2A 9D 85     	ld hl,(Posicion_actual)
624+  8F45 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8F47 C9           	ret
626+  8F48
627+  8F48              ;----------------------------------------------------------------------------------------------------------------
628+  8F48              ;
629+  8F48              ;	5/08/22
630+  8F48              ;
631+  8F48              ;   NextScan.
632+  8F48              ;
633+  8F48              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8F48              ;
635+  8F48              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8F48              ;
637+  8F48              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8F48              ;
639+  8F48              ;       DESTRUIDOS: AF y HL !!!
640+  8F48              ;
641+  8F48              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8F48              ;
643+  8F48
644+  8F48 24           NextScan inc h          ; Incrementamos el scanline.
645+  8F49 7C               ld a,h
646+  8F4A E6 07            and 7
647+  8F4C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8F4D
649+  8F4D 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8F4E C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8F50 6F               ld l,a
652+  8F51 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8F52
654+  8F52 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8F53 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8F55 67               ld h,a
657+  8F56 C9               ret
658+  8F57
659+  8F57              ;----------------------------------------------------------------------------------------------------------------
660+  8F57              ;
661+  8F57              ;	5/08/22
662+  8F57              ;
663+  8F57              ;   PreviousScan.
664+  8F57              ;
665+  8F57              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8F57              ;
667+  8F57              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8F57              ;
669+  8F57              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8F57              ;
671+  8F57              ;       DESTRUIDOS: AF y HL !!!
672+  8F57              ;
673+  8F57              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8F57              ;
675+  8F57
676+  8F57 7C           PreviousScan ld a,h
677+  8F58 25               dec h               ; Dec H.
678+  8F59 E6 07            and 7
679+  8F5B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8F5C
681+  8F5C 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8F5D D6 20            sub $20             ; Vamos a comprobarlo...
683+  8F5F 6F               ld l,a
684+  8F60 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8F61
686+  8F61 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8F62 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8F64 67               ld h,a
689+  8F65 C9               ret
690+  8F66
691+  8F66              ; -----------------------------------------------------------------------------------
692+  8F66              ;
693+  8F66              ;	28/2/23
694+  8F66              ;
695+  8F66              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8F66              ;	Extrae fotos de Album_de_fotos.
697+  8F66
698+  8F66 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8F69 A7           	and a
700+  8F6A C8           	ret z
701+  8F6B ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8F6F 31 00 70     	ld sp,Album_de_fotos
703+  8F72
704+  8F72 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8F74 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8F75 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8F76
708+  8F76 ED 73 E1 85  	ld (Stack_2),sp
709+  8F7A ED 7B DF 85  	ld sp,(Stack)
710+  8F7E
711+  8F7E              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8F7E
713+  8F7E 3E CD        	ld a,$cd
714+  8F80 32 88 8F     	ld (Imprime),a
715+  8F83 EB           	ex de,hl
716+  8F84 22 89 8F     	ld (Imprime+1),hl
717+  8F87 EB           	ex de,hl
718+  8F88
719+  8F88              ; Ejecuta la llamada:	CALL $xx,xx
720+  8F88
721+  8F88 00 00 00     Imprime db 0,0,0
722+  8F8B
723+  8F8B 3A DE 85     	ld a,(Numero_de_malotes)
724+  8F8E 3D           	dec a
725+  8F8F 28 09        	jr z,1F
726+  8F91 32 DE 85      	ld (Numero_de_malotes),a
727+  8F94
728+  8F94 ED 7B E1 85   	ld sp,(Stack_2)
729+  8F98 18 D8        	jr 2B
730+  8F9A
731+  8F9A AF           1 xor a
732+  8F9B 32 E1 85     	ld (Stack_2),a
733+  8F9E C9           	ret
734+  8F9F
735+  8F9F              ; -----------------------------------------------------------------------------------
736+  8F9F              ;
737+  8F9F              ;	28/2/23
738+  8F9F              ;
739+  8F9F              ;	Pinta los disparos generados.
740+  8F9F
741+  8F9F              Extrae_foto_disparos
742+  8F9F
743+  8F9F 3A E7 85     	ld a,(Numero_de_disparotes)
744+  8FA2 A7           	and a
745+  8FA3 C8           	ret z
746+  8FA4 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8FA8 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8FAB
749+  8FAB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8FAD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8FAE D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8FAF
753+  8FAF ED 73 E1 85  	ld (Stack_2),sp
754+  8FB3 ED 7B DF 85  	ld sp,(Stack)
755+  8FB7
756+  8FB7              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8FB7
758+  8FB7 3E CD        	ld a,$cd
759+  8FB9 32 C1 8F     	ld (Imprime2),a
760+  8FBC EB           	ex de,hl
761+  8FBD 22 C2 8F     	ld (Imprime2+1),hl
762+  8FC0 EB           	ex de,hl
763+  8FC1
764+  8FC1              ; Ejecuta la llamada:	CALL $xx,xx
765+  8FC1
766+  8FC1 00 00 00     Imprime2 db 0,0,0
767+  8FC4
768+  8FC4 3A E7 85     	ld a,(Numero_de_disparotes)
769+  8FC7 3D           	dec a
770+  8FC8 28 09        	jr z,1F
771+  8FCA 32 E7 85      	ld (Numero_de_disparotes),a
772+  8FCD
773+  8FCD ED 7B E1 85  	ld sp,(Stack_2)
774+  8FD1 18 D8        	jr 2B
775+  8FD3
776+  8FD3 AF           1 xor a
777+  8FD4 32 E1 85     	ld (Stack_2),a
778+  8FD7 C9           	ret
779+  8FD8
# file closed: Draw_XOR.asm
901   8FD8              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8FD8              ;   índices de Rutinas de impresión.
  2+  8FD8
  3+  8FD8 E8 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8FDA 15 90            defw Pinta_Amadeus_3x2
  5+  8FDC
  6+  8FDC 6B 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8FDE 0B 91            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8FE0 BF 90            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8FE2
 10+  8FE2 95 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8FE4 99 91            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8FE6 4D 91            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8FE8
 14+  8FE8
 15+  8FE8              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8FE8              ;
 17+  8FE8              ;   12/12/22
 18+  8FE8              ;
 19+  8FE8              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8FE8              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8FE8              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8FE8              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8FE8              ;
 24+  8FE8              ;   Modifica: DE y HL.
 25+  8FE8
 26+  8FE8 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8FEC FD F9        	ld sp,iy
 28+  8FEE 06 10            ld b,16
 29+  8FF0 D1           1 pop de
 30+  8FF1 7B               ld a,e
 31+  8FF2 AE               xor (hl)
 32+  8FF3 77           	ld (hl),a
 33+  8FF4 23           	inc hl
 34+  8FF5 7A               ld a,d
 35+  8FF6 AE               xor (hl)
 36+  8FF7 77           	ld (hl),a
 37+  8FF8 2B           	dec hl
 38+  8FF9 24           	inc h
 39+  8FFA 7C               ld a,h
 40+  8FFB E6 07            and 7
 41+  8FFD 20 0A            jr nz,2F
 42+  8FFF 7D               ld a,l
 43+  9000 C6 20            add a,$20
 44+  9002 6F               ld l,a
 45+  9003 38 04            jr c,2F
 46+  9005 7C               ld a,h
 47+  9006 D6 08            sub 8
 48+  9008 67               ld h,a
 49+  9009 7C           2 ld a,h
 50+  900A FE 58            cp $58
 51+  900C 28 02            jr z,3F
 52+  900E 10 E0            djnz 1B
 53+  9010 ED 7B DF 85  3 ld sp,(Stack)
 54+  9014 C9           	ret
 55+  9015
 56+  9015 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  9019 FD F9        	ld sp,iy
 58+  901B 06 08            ld b,8
 59+  901D D1           1 pop de
 60+  901E 7B               ld a,e
 61+  901F AE               xor (hl)
 62+  9020 77           	ld (hl),a
 63+  9021 23           	inc hl
 64+  9022 7A               ld a,d
 65+  9023 AE               xor (hl)
 66+  9024 77           	ld (hl),a
 67+  9025 23           	inc hl
 68+  9026 D1           	pop de
 69+  9027 7B               ld a,e
 70+  9028 AE               xor (hl)
 71+  9029 77           	ld (hl),a
 72+  902A 2B           	dec hl
 73+  902B 2B           	dec hl
 74+  902C 24           	inc h
 75+  902D 7C               ld a,h
 76+  902E E6 07            and 7
 77+  9030 20 0A            jr nz,2F
 78+  9032 7D               ld a,l
 79+  9033 C6 20            add a,$20
 80+  9035 6F               ld l,a
 81+  9036 38 04            jr c,2F
 82+  9038 7C               ld a,h
 83+  9039 D6 08            sub 8
 84+  903B 67               ld h,a
 85+  903C 7C           2 ld a,h
 86+  903D FE 58            cp $58
 87+  903F 28 25            jr z,4F
 88+  9041 7A               ld a,d
 89+  9042 AE               xor (hl)
 90+  9043 77               ld (hl),a
 91+  9044 D1           	pop de
 92+  9045 23           	inc hl
 93+  9046 7B               ld a,e
 94+  9047 AE               xor (hl)
 95+  9048 77           	ld (hl),a
 96+  9049 23           	inc hl
 97+  904A 7A               ld a,d
 98+  904B AE               xor (hl)
 99+  904C 77           	ld (hl),a
100+  904D 2B           	dec hl
101+  904E 2B           	dec hl
102+  904F 24           	inc h
103+  9050 7C               ld a,h
104+  9051 E6 07            and 7
105+  9053 20 0A            jr nz,3F
106+  9055 7D               ld a,l
107+  9056 C6 20            add a,$20
108+  9058 6F               ld l,a
109+  9059 38 04            jr c,3F
110+  905B 7C               ld a,h
111+  905C D6 08            sub 8
112+  905E 67               ld h,a
113+  905F 7C           3 ld a,h
114+  9060 FE 58            cp $58
115+  9062 28 02            jr z,4F
116+  9064 10 B7            djnz 1B
117+  9066 ED 7B DF 85  4 ld sp,(Stack)
118+  906A C9           	ret
119+  906B
120+  906B              ; ---------------------------------------------------
121+  906B
122+  906B ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  906F FD F9        	ld sp,iy
124+  9071
125+  9071              ; >>>
126+  9071
127+  9071 06 10            ld b,16
128+  9073 D1           1 pop de
129+  9074 7A           	ld a,d
130+  9075 AE           	xor (hl)
131+  9076 77           	ld (hl),a
132+  9077 24           	inc h
133+  9078 7C               ld a,h
134+  9079 E6 07            and 7
135+  907B 20 0C            jr nz,2F
136+  907D 7D               ld a,l
137+  907E C6 20            add a,$20
138+  9080 6F               ld l,a
139+  9081 38 06            jr c,2F
140+  9083 7C               ld a,h
141+  9084 D6 08            sub 8
142+  9086 67               ld h,a
143+  9087 18 00            jr 2F
144+  9089 7C           2 ld a,h
145+  908A FE 58            cp $58
146+  908C 28 02            jr z,3F
147+  908E 10 E3            djnz 1B
148+  9090 ED 7B DF 85  3 ld sp,(Stack)
149+  9094 C9           	ret
150+  9095
151+  9095 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  9099 FD F9        	ld sp,iy
153+  909B
154+  909B              ; >>>
155+  909B
156+  909B 06 10            ld b,16
157+  909D D1           1 pop de
158+  909E 7B           	ld a,e
159+  909F AE           	xor (hl)
160+  90A0 77           	ld (hl),a
161+  90A1 24           	inc h
162+  90A2 7C               ld a,h
163+  90A3 E6 07            and 7
164+  90A5 20 0C            jr nz,2F
165+  90A7 7D               ld a,l
166+  90A8 C6 20            add a,$20
167+  90AA 6F               ld l,a
168+  90AB 38 06            jr c,2F
169+  90AD 7C               ld a,h
170+  90AE D6 08            sub 8
171+  90B0 67               ld h,a
172+  90B1 18 00            jr 2F
173+  90B3 7C           2 ld a,h
174+  90B4 FE 58            cp $58
175+  90B6 28 02            jr z,3F
176+  90B8 10 E3            djnz 1B
177+  90BA ED 7B DF 85  3 ld sp,(Stack)
178+  90BE C9           	ret
179+  90BF
180+  90BF              ; ---------------------------------------------------
181+  90BF
182+  90BF ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  90C3 FD F9        	ld sp,iy
184+  90C5 06 08            ld b,8
185+  90C7 D1           1 pop de
186+  90C8 7A           	ld a,d
187+  90C9 AE           	xor (hl)
188+  90CA 77           	ld (hl),a
189+  90CB 23           	inc hl
190+  90CC D1           	pop de
191+  90CD 7B           	ld a,e
192+  90CE AE           	xor (hl)
193+  90CF 77           	ld (hl),a
194+  90D0 2B           	dec hl
195+  90D1 24            	inc h
196+  90D2 7C               ld a,h
197+  90D3 E6 07            and 7
198+  90D5 20 0A            jr nz,2F
199+  90D7 7D               ld a,l
200+  90D8 C6 20            add a,$20
201+  90DA 6F               ld l,a
202+  90DB 38 04            jr c,2F
203+  90DD 7C               ld a,h
204+  90DE D6 08            sub 8
205+  90E0 67               ld h,a
206+  90E1 7C           2 ld a,h
207+  90E2 FE 58            cp $58
208+  90E4 28 20            jr z,4F
209+  90E6 D1               pop de
210+  90E7 7B           	ld a,e
211+  90E8 AE           	xor (hl)
212+  90E9 77           	ld (hl),a
213+  90EA 23           	inc hl
214+  90EB 7A           	ld a,d
215+  90EC AE           	xor (hl)
216+  90ED 77           	ld (hl),a
217+  90EE 2B           	dec hl
218+  90EF 24           	inc h
219+  90F0 7C               ld a,h
220+  90F1 E6 07            and 7
221+  90F3 20 0A            jr nz,3F
222+  90F5 7D               ld a,l
223+  90F6 C6 20            add a,$20
224+  90F8 6F               ld l,a
225+  90F9 38 04            jr c,3F
226+  90FB 7C               ld a,h
227+  90FC D6 08            sub 8
228+  90FE 67               ld h,a
229+  90FF 7C           3 ld a,h
230+  9100 FE 58            cp $58
231+  9102 28 02            jr z,4F
232+  9104 10 C1            djnz 1B
233+  9106 ED 7B DF 85  4 ld sp,(Stack)
234+  910A C9           	ret
235+  910B
236+  910B ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  910F FD F9        	ld sp,iy
238+  9111 06 08            ld b,8
239+  9113 D1           1 pop de
240+  9114 D1           	pop de
241+  9115 7B           	ld a,e
242+  9116 AE           	xor (hl)
243+  9117 77           	ld (hl),a
244+  9118 24            	inc h
245+  9119 7C               ld a,h
246+  911A E6 07            and 7
247+  911C 20 0A            jr nz,2F
248+  911E 7D               ld a,l
249+  911F C6 20            add a,$20
250+  9121 6F               ld l,a
251+  9122 38 04            jr c,2F
252+  9124 7C               ld a,h
253+  9125 D6 08            sub 8
254+  9127 67               ld h,a
255+  9128 7C           2 ld a,h
256+  9129 FE 58            cp $58
257+  912B 28 1B            jr z,4F
258+  912D D1               pop de
259+  912E 7A           	ld a,d
260+  912F AE           	xor (hl)
261+  9130 77           	ld (hl),a
262+  9131 24           	inc h
263+  9132 7C               ld a,h
264+  9133 E6 07            and 7
265+  9135 20 0A            jr nz,3F
266+  9137 7D               ld a,l
267+  9138 C6 20            add a,$20
268+  913A 6F               ld l,a
269+  913B 38 04            jr c,3F
270+  913D 7C               ld a,h
271+  913E D6 08            sub 8
272+  9140 67               ld h,a
273+  9141 7C           3 ld a,h
274+  9142 FE 58            cp $58
275+  9144 28 02            jr z,4F
276+  9146 10 CB            djnz 1B
277+  9148 ED 7B DF 85  4 ld sp,(Stack)
278+  914C C9           	ret
279+  914D
280+  914D ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  9151 FD F9        	ld sp,iy
282+  9153 06 08            ld b,8
283+  9155 D1           1 pop de
284+  9156 7B           	ld a,e
285+  9157 AE           	xor (hl)
286+  9158 77           	ld (hl),a
287+  9159 23           	inc hl
288+  915A 7A           	ld a,d
289+  915B AE           	xor (hl)
290+  915C 77           	ld (hl),a
291+  915D 2B           	dec hl
292+  915E 24             	inc h
293+  915F 7C               ld a,h
294+  9160 E6 07            and 7
295+  9162 20 0A            jr nz,2F
296+  9164 7D               ld a,l
297+  9165 C6 20            add a,$20
298+  9167 6F               ld l,a
299+  9168 38 04            jr c,2F
300+  916A 7C               ld a,h
301+  916B D6 08            sub 8
302+  916D 67               ld h,a
303+  916E 7C           2 ld a,h
304+  916F FE 58            cp $58
305+  9171 28 21            jr z,4F
306+  9173 D1               pop de
307+  9174 7A           	ld a,d
308+  9175 AE           	xor (hl)
309+  9176 77           	ld (hl),a
310+  9177 23           	inc hl
311+  9178 D1               pop de
312+  9179 7B           	ld a,e
313+  917A AE           	xor (hl)
314+  917B 77           	ld (hl),a
315+  917C 2B           	dec hl
316+  917D 24           	inc h
317+  917E 7C               ld a,h
318+  917F E6 07            and 7
319+  9181 20 0A            jr nz,3F
320+  9183 7D               ld a,l
321+  9184 C6 20            add a,$20
322+  9186 6F               ld l,a
323+  9187 38 04            jr c,3F
324+  9189 7C               ld a,h
325+  918A D6 08            sub 8
326+  918C 67               ld h,a
327+  918D 7C           3 ld a,h
328+  918E FE 58            cp $58
329+  9190 28 02            jr z,4F
330+  9192 10 C1            djnz 1B
331+  9194 ED 7B DF 85  4 ld sp,(Stack)
332+  9198 C9           	ret
333+  9199
334+  9199 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  919D FD F9        	ld sp,iy
336+  919F 06 08            ld b,8
337+  91A1 D1           1 pop de
338+  91A2 7B           	ld a,e
339+  91A3 AE           	xor (hl)
340+  91A4 77           	ld (hl),a
341+  91A5 24            	inc h
342+  91A6 7C               ld a,h
343+  91A7 E6 07            and 7
344+  91A9 20 0A            jr nz,2F
345+  91AB 7D               ld a,l
346+  91AC C6 20            add a,$20
347+  91AE 6F               ld l,a
348+  91AF 38 04            jr c,2F
349+  91B1 7C               ld a,h
350+  91B2 D6 08            sub 8
351+  91B4 67               ld h,a
352+  91B5 7C           2 ld a,h
353+  91B6 FE 58            cp $58
354+  91B8 28 1C            jr z,4F
355+  91BA D1               pop de
356+  91BB 7A           	ld a,d
357+  91BC AE           	xor (hl)
358+  91BD 77           	ld (hl),a
359+  91BE 24           	inc h
360+  91BF 7C               ld a,h
361+  91C0 E6 07            and 7
362+  91C2 20 0A            jr nz,3F
363+  91C4 7D               ld a,l
364+  91C5 C6 20            add a,$20
365+  91C7 6F               ld l,a
366+  91C8 38 04            jr c,3F
367+  91CA 7C               ld a,h
368+  91CB D6 08            sub 8
369+  91CD 67               ld h,a
370+  91CE 7C           3 ld a,h
371+  91CF FE 58            cp $58
372+  91D1 28 03            jr z,4F
373+  91D3 D1               pop de
374+  91D4 10 CB            djnz 1B
375+  91D6 ED 7B DF 85  4 ld sp,(Stack)
376+  91DA C9           	ret
377+  91DB
378+  91DB              ; ---------------------------------------------------
379+  91DB              ;
380+  91DB              ;   27/02/23
381+  91DB              ;
382+  91DB              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  91DB              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  91DB              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  91DB
386+  91DB ED 73 DF 85  Pinta_Disparo ld (Stack),sp
387+  91DF FD F9            ld sp,iy
388+  91E1 06 02            ld b,2
389+  91E3 D1           1 pop de
390+  91E4 7B               ld a,e
391+  91E5 AE               xor (hl)
392+  91E6 77               ld (hl),a
393+  91E7 23               inc hl
394+  91E8 7A               ld a,d
395+  91E9 AE               xor (hl)
396+  91EA 77               ld (hl),a
397+  91EB 2B               dec hl
398+  91EC
399+  91EC 24               inc h
400+  91ED 7C               ld a,h
401+  91EE E6 07            and 7
402+  91F0 20 0A            jr nz,2F
403+  91F2 7D               ld a,l
404+  91F3 C6 20            add a,$20
405+  91F5 6F               ld l,a
406+  91F6 38 04            jr c,2F
407+  91F8 7C               ld a,h
408+  91F9 D6 08            sub 8
409+  91FB 67               ld h,a
410+  91FC 7C           2 ld a,h
411+  91FD FE 58            cp $58
412+  91FF 28 02            jr z,3F
413+  9201
414+  9201 10 E0            djnz 1B
415+  9203 ED 7B DF 85  3 ld sp,(Stack)
416+  9207 C9               ret
417+  9208
# file closed: Rutinas_de_impresion_sprites.asm
902   9208              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  9208              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  9208              ;
  3+  9208              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  9208              ;
  5+  9208              ; *****************************************************************************************************************************************************************************************
  6+  9208              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  9208
  8+  9208 7C           calcula_tercio ld a,h
  9+  9209 E6 18        	and $18
 10+  920B CB 2F        	sra a
 11+  920D CB 2F        	sra a
 12+  920F CB 2F        	sra a
 13+  9211 C9           	ret
 14+  9212
# file closed: calcula_tercio.asm
903   9212              	include "Cls.asm"
# file opened: Cls.asm
  1+  9212              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  9212              ;
  3+  9212              ;
  4+  9212              ;	CLS.
  5+  9212              ;
  6+  9212              ;	Limpia la pantalla y define sus atributos.
  7+  9212              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  9212              ;
  9+  9212              ;	COLORES: 0 ..... NEGRO
 10+  9212              ;    		 1 ..... AZUL
 11+  9212              ; 			 2 ..... ROJO
 12+  9212              ;			 3 ..... MAGENTA
 13+  9212              ; 			 4 ..... VERDE
 14+  9212              ; 			 5 ..... CIAN
 15+  9212              ;			 6 ..... AMARILLO
 16+  9212              ; 			 7 ..... BLANCO
 17+  9212              ;
 18+  9212              ;	INPUT: A contiene los atributos de pantalla.
 19+  9212              ;
 20+  9212              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  9212
 22+  9212
 23+  9212 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  9215 11 01 40     	LD DE,$4001
 25+  9218 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  921B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  921D ED B0        	LDIR
 28+  921F 01 FF 02     	LD BC,767
 29+  9222 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  9223 ED B0        	LDIR
 31+  9225 C9           	ret
 32+  9226
# file closed: Cls.asm
904   9226              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  9226              ; ******************************************************************************************************************************************************************************************
  2+  9226              ;
  3+  9226              ;   22/01/23
  4+  9226              ;
  5+  9226              ;	Mov_down
  6+  9226              ;
  7+  9226              ; 	Mueve el Sprite X px hacia abajo.
  8+  9226              ;
  9+  9226              ;
 10+  9226 21 C9 85     Mov_down ld hl,Ctrl_0
 11+  9229 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  922B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  922B              ; 																	; _ en el caso de que no lo haya.
 14+  922B 3A B3 85     	ld a,(Vel_down)
 15+  922E 47           	ld b,a
 16+  922F 2A 9D 85         ld hl,(Posicion_actual)
 17+  9232 CD 08 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  9235 E6 02        	and 2
 19+  9237 28 0F        	jr z,1F
 20+  9239
 21+  9239              ; Nos encontramos en el último tercio de pantalla.
 22+  9239              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  9239
 24+  9239 7C           	ld a,h
 25+  923A FE 57        	cp $57
 26+  923C 20 0A        	jr nz,1F
 27+  923E 7D           	ld a,l
 28+  923F C6 20        	add $20
 29+  9241 30 05        	jr nc,1F
 30+  9243
 31+  9243              ; ------------------------------
 32+  9243 CD 1E 95     	call Reaparece_arriba
 33+  9246              ;	call Reinicio
 34+  9246              ; ------------------------------
 35+  9246
 36+  9246 18 08        	jr 3F
 37+  9248 CD 48 8F     1 call NextScan
 38+  924B 22 9D 85     	ld (Posicion_actual),hl
 39+  924E 10 E2            djnz 2B
 40+  9250 CD 34 95     3 call Genera_coordenadas
 41+  9253 C9           	ret
 42+  9254
 43+  9254              ; ******************************************************************************************************************************************************************************************
 44+  9254              ;
 45+  9254              ;   22/01/23
 46+  9254              ;
 47+  9254              ;	Mov_up
 48+  9254              ;
 49+  9254              ; 	Mueve el Sprite hacia arriba.
 50+  9254              ;
 51+  9254              ;
 52+  9254 21 C9 85     Mov_up ld hl,Ctrl_0
 53+  9257 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  9259              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  9259              ; 																		; _ en el caso de que no lo haya.
 56+  9259 3A B2 85     	ld a,(Vel_up)
 57+  925C 47           	ld b,a
 58+  925D 2A 9D 85     	ld hl,(Posicion_actual)
 59+  9260 CD 08 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  9263 A7           	and a
 61+  9264 20 10        	jr nz,1F
 62+  9266
 63+  9266              ; Nos encontramos en el 1er tercio de pantalla.
 64+  9266              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  9266
 66+  9266 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  9267 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  9269 20 0B            jr nz,1F
 69+  926B 7D               ld a,l
 70+  926C D6 20            sub $20
 71+  926E 30 06            jr nc,1F
 72+  9270 25               dec h
 73+  9271
 74+  9271              ; -----------------------------
 75+  9271 CD 0E 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  9274              ;	call Reinicio
 77+  9274              ; -----------------------------
 78+  9274
 79+  9274 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  9276 CD 57 8F     1 call PreviousScan
 81+  9279 22 9D 85     	ld (Posicion_actual),hl
 82+  927C 10 E2            djnz 3B
 83+  927E CD 34 95     2 call Genera_coordenadas
 84+  9281 C9           	ret
 85+  9282
 86+  9282              ; ******************************************************************************************************************************************************************************************
 87+  9282              ;
 88+  9282              ;	19/10/22
 89+  9282              ;
 90+  9282              ;	Mov_right.
 91+  9282              ;
 92+  9282              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  9282              ;
 94+  9282
 95+  9282 21 C9 85     Mov_right ld hl,Ctrl_0
 96+  9285 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  9287              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  9287              ; 																	; _ en el caso de que no lo haya.
 99+  9287 3A C9 85     	ld a,(Ctrl_0)
100+  928A CB 77        	bit 6,a
101+  928C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  928E
103+  928E CD BC 94     	call Stop_Amadeus_right
104+  9291 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  9292 18 4D        	jr 8F
106+  9294
107+  9294 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  9297 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9299 20 46        	jr nz,8F
110+  929B
111+  929B 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  929E A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  929F 28 40        	jr z,8F
114+  92A1
115+  92A1              ; ---------- ---------- ----------
116+  92A1              ;
117+  92A1              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  92A1
119+  92A1 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  92A4 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  92A6 28 11        	jr z,1F
122+  92A8 38 06        	jr c,6F
123+  92AA FE 04        	cp 4
124+  92AC 28 14        	jr z,7F
125+  92AE 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  92B0
127+  92B0              ; ---------- ---------- ----------
128+  92B0              ;
129+  92B0              ; Perfiles de velocidad
130+  92B0              ;
131+  92B0
132+  92B0 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
133+  92B3 FE FE        	cp $fe
134+  92B5 20 2A        	jr nz,8F
135+  92B7 18 10        	jr 3F
136+  92B9 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
137+  92BC FE FD        	cp $fd
138+  92BE 20 21        	jr nz,8F
139+  92C0 18 07        	jr 3F
140+  92C2 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
141+  92C5 FE FB        	cp $fb
142+  92C7 20 18        	jr nz,8F
143+  92C9
144+  92C9              ; ---------- ---------- ----------
145+  92C9
146+  92C9              3
147+  92C9 CD FC 94     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  92CC              ;	call Reinicio
149+  92CC
150+  92CC              ; ---------- ---------- ----------
151+  92CC              ;
152+  92CC              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  92CC
154+  92CC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  92CE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  92CF CD E8 92     	call DESPLZ_DER
157+  92D2 C1           	pop bc
158+  92D3 10 F9        	djnz 5B
159+  92D5 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  92D8 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  92D9 22 9D 85     	ld (Posicion_actual),hl
162+  92DC CD 34 95     	call Genera_coordenadas
163+  92DF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  92E1
165+  92E1              ; ---------- ---------- ----------
166+  92E1
167+  92E1 2A 9D 85     8 ld hl,(Posicion_actual)
168+  92E4 CD E8 92     	call DESPLZ_DER
169+  92E7 C9           2 ret
170+  92E8
171+  92E8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  92E8              ;
173+  92E8              ;	22/9/22
174+  92E8              ;
175+  92E8
176+  92E8 CD F7 92     DESPLZ_DER call Desplaza_derecha
177+  92EB CD 43 93         call modifica_parametros_1er_DESPLZ_2
178+  92EE CD 6C 93         call Ciclo_completo
179+  92F1 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  92F4 CB FE        	set 7,(hl)
181+  92F6 C9           	ret
182+  92F7
183+  92F7              ; ******************************************************************************************************************************************************************************************
184+  92F7              ;	15/02/23
185+  92F7              ;
186+  92F7
187+  92F7 3A B1 85     Desplaza_derecha ld a,(Vel_right)
188+  92FA 47           	ld b,a
189+  92FB 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
190+  92FE 23           1 inc hl
191+  92FF 23           	inc hl
192+  9300 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9302 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9305 CD B2 87     	call Extrae_address
195+  9308 22 9F 85     	ld (Puntero_objeto),hl
196+  930B
197+  930B              ; Modifica (Puntero_DESPLZ_izq).
198+  930B
199+  930B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  930B              ; Cuántos movimientos hemos hecho ??
201+  930B              ; DE contiene (Puntero_DESPLZ_der).
202+  930B
203+  930B 2A A5 85     7 ld hl,(Indice_Sprite_der)
204+  930E EB           	ex de,hl
205+  930F A7           	and a
206+  9310 ED 52        	sbc hl,de
207+  9312 CB 3D        	srl l
208+  9314 3E 08        6 ld a,8
209+  9316 95           	sub l
210+  9317 30 1E        	jr nc,3F
211+  9319
212+  9319              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  9319              ; B="0".
214+  9319
215+  9319 04           4 inc b
216+  931A 3C           	inc a
217+  931B 20 FC        	jr nz,4B
218+  931D 78           	ld a,b
219+  931E 08           	ex af,af
220+  931F 2A A5 85     	ld hl,(Indice_Sprite_der)
221+  9322 23           5 inc hl
222+  9323 23           	inc hl
223+  9324 10 FC        	djnz 5B
224+  9326 22 A9 85     	ld (Puntero_DESPLZ_der),hl
225+  9329 CD B2 87     	call Extrae_address
226+  932C 22 9F 85     	ld (Puntero_objeto),hl
227+  932F
228+  932F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  932F              ; _(Posicion_actual).
230+  932F
231+  932F 21 9D 85     	ld hl,Posicion_actual
232+  9332 34           	inc (hl)
233+  9333 08               ex af,af
234+  9334 6F           	ld l,a
235+  9335 18 DD        	jr 6B
236+  9337
237+  9337              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  9337
239+  9337 47           3 ld b,a
240+  9338 2A A7 85     	ld hl,(Indice_Sprite_izq)
241+  933B 23           2 inc hl
242+  933C 23           	inc hl
243+  933D 10 FC        	djnz 2B
244+  933F 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
245+  9342 C9           8 ret
246+  9343
247+  9343              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  9343              ;
249+  9343              ;	24/7/22
250+  9343              ;
251+  9343              ;	modifica_parametros_1er_DESPLZ_2
252+  9343              ;
253+  9343              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  9343              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  9343              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  9343
257+  9343 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  9346 A7           	and a
259+  9347 20 1F        	jr nz,1F
260+  9349 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  934B 32 A3 85         ld (CTRL_DESPLZ),a
262+  934E
263+  934E 21 9C 85     	ld hl,Columns
264+  9351 34           	inc (hl)
265+  9352 3A AF 85     	ld a,(Cuad_objeto)
266+  9355 E6 01        	and 1
267+  9357 28 0F        	jr z,1F
268+  9359 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  935C 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  935D 22 9D 85     	ld (Posicion_actual),hl
271+  9360 CD 34 95     	call Genera_coordenadas
272+  9363 CD C8 94     	call Inc_CTRL_DESPLZ
273+  9366 18 03        	jr 2F
274+  9368 CD C8 94     1 call Inc_CTRL_DESPLZ
275+  936B C9           2 ret
276+  936C
277+  936C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  936C              ;
279+  936C              ;	24/7/22
280+  936C              ;
281+  936C              ;	Ciclo_completo.
282+  936C              ;
283+  936C              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  936C              ;
285+  936C              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  936C              ; 	Decrementamos (Columns).
287+  936C              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  936C              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  936C
290+  936C
291+  936C 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  936F FE FF        	cp $ff
293+  9371 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  9373 E6 F0        	and $f0
295+  9375 20 28        	jr nz,3F
296+  9377
297+  9377              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  9377
299+  9377 3A A3 85     	ld a,(CTRL_DESPLZ)
300+  937A 47           	ld b,a
301+  937B 3E F8        	ld a,$f8
302+  937D 80           	add b
303+  937E 32 A3 85     	ld (CTRL_DESPLZ),a
304+  9381 18 1C        	jr 3F
305+  9383 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9386 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9387 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9388 32 A3 85     	ld (CTRL_DESPLZ),a
309+  938B 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  938E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9390 20 0A        	jr nz,2F
312+  9392 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9395 23           	inc hl
314+  9396 22 9D 85     	ld (Posicion_actual),hl
315+  9399 CD 34 95     	call Genera_coordenadas
316+  939C
317+  939C              ; Inicia el puntero de Sprite.
318+  939C
319+  939C CD C9 87     2 call Inicia_puntero_objeto_der
320+  939F C9           3 ret
321+  93A0
322+  93A0              ; ******************************************************************************************************************************************************************************************
323+  93A0              ;
324+  93A0              ;	15/02/23
325+  93A0              ;
326+  93A0              ;	Mov_left.
327+  93A0              ;
328+  93A0              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  93A0              ;
330+  93A0              Mov_left
331+  93A0
332+  93A0 21 C9 85     	ld hl,Ctrl_0
333+  93A3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  93A5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  93A5              ; 																	; _ en el caso de que no lo haya.
336+  93A5 3A C9 85     	ld a,(Ctrl_0)
337+  93A8 CB 77        	bit 6,a
338+  93AA 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  93AC
340+  93AC CD C2 94     	call Stop_Amadeus_left
341+  93AF C8           	ret z
342+  93B0 20 4A        	jr nz,8F
343+  93B2
344+  93B2 3A A1 85     11 ld a,(Coordenada_X)
345+  93B5 A7           	and a
346+  93B6 20 44        	jr nz,8F
347+  93B8
348+  93B8 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  93BB A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  93BC 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  93BE
352+  93BE              ; ---------- ---------- ----------
353+  93BE
354+  93BE 3A B0 85     	ld a,(Vel_left)
355+  93C1 FE 02        	cp 2
356+  93C3 28 0F        	jr z,1F
357+  93C5 38 04        	jr c,6F
358+  93C7 FE 04        	cp 4
359+  93C9 28 12        	jr z,7F
360+  93CB
361+  93CB              ; ---------- ---------- ----------
362+  93CB
363+  93CB 3A A3 85     6 ld a,(CTRL_DESPLZ)
364+  93CE FE F9        	cp $f9
365+  93D0 20 2A        	jr nz,8F
366+  93D2 18 10        	jr 4F
367+  93D4 3A A3 85     1 ld a,(CTRL_DESPLZ)
368+  93D7 FE FA        	cp $fa
369+  93D9 20 21        	jr nz,8F
370+  93DB 18 07        	jr 4F
371+  93DD 3A A3 85     7 ld a,(CTRL_DESPLZ)
372+  93E0 FE FC        	cp $fc
373+  93E2 20 18        	jr nz,8F
374+  93E4
375+  93E4              ; ---------- ---------- ----------
376+  93E4
377+  93E4              4
378+  93E4 CD EA 94     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  93E7              ;	call Reinicio
380+  93E7
381+  93E7              ; ---------- ---------- ----------
382+  93E7
383+  93E7 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  93E9 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  93EA
386+  93EA              ;	ld hl,(Indice_Sprite_izq)
387+  93EA              ;	ld (Puntero_DESPLZ_izq),hl
388+  93EA
389+  93EA CD 03 94     	call DESPLZ_IZQ
390+  93ED C1           	pop bc
391+  93EE 10 F9        	djnz 5B
392+  93F0 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  93F3 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  93F4 22 9D 85     	ld (Posicion_actual),hl
395+  93F7 CD 34 95     	call Genera_coordenadas
396+  93FA 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  93FC
398+  93FC              ; ---------- ---------- ----------
399+  93FC
400+  93FC              ; Movemos, no hay recolocación.
401+  93FC
402+  93FC 2A 9D 85     8 ld hl,(Posicion_actual)
403+  93FF CD 03 94     	call DESPLZ_IZQ
404+  9402 C9           2 ret
405+  9403
406+  9403              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
407+  9403              ;
408+  9403              ;	22/9/22
409+  9403
410+  9403              DESPLZ_IZQ
411+  9403
412+  9403 CD 12 94     	call Desplaza_izquierda
413+  9406 CD 5E 94         call modifica_parametros_1er_DESPLZ
414+  9409 CD 86 94     	call Ciclo_completo_2
415+  940C 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
416+  940F CB BE        	res 7,(hl)
417+  9411 C9           	ret
418+  9412
419+  9412              Desplaza_izquierda
420+  9412
421+  9412 3A B0 85     	ld a,(Vel_left)
422+  9415 47           	ld b,a
423+  9416 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
424+  9419 23           1 inc hl
425+  941A 23           	inc hl
426+  941B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
427+  941D 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
428+  9420 CD B2 87     	call Extrae_address
429+  9423 22 9F 85     	ld (Puntero_objeto),hl
430+  9426
431+  9426              ; Modifica (Puntero_DESPLZ_der).
432+  9426
433+  9426              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
434+  9426              ; Cuántos movimientos hemos hecho ??
435+  9426              ; DE contiene (Puntero_DESPLZ_izq).
436+  9426
437+  9426 2A A7 85     7 ld hl,(Indice_Sprite_izq)
438+  9429 EB           	ex de,hl
439+  942A A7           	and a
440+  942B ED 52        	sbc hl,de
441+  942D CB 3D        	srl l
442+  942F 3E 08        6 ld a,8
443+  9431 95           	sub l
444+  9432 30 1E        	jr nc,3F
445+  9434
446+  9434              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
447+  9434              ; B="0".
448+  9434
449+  9434 04           4 inc b
450+  9435 3C           	inc a
451+  9436 20 FC        	jr nz,4B
452+  9438 78           	ld a,b
453+  9439 08           	ex af,af
454+  943A 2A A7 85     	ld hl,(Indice_Sprite_izq)
455+  943D 23           5 inc hl
456+  943E 23           	inc hl
457+  943F 10 FC        	djnz 5B
458+  9441 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
459+  9444 CD B2 87     	call Extrae_address
460+  9447 22 9F 85     	ld (Puntero_objeto),hl
461+  944A
462+  944A              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
463+  944A              ; _(Posicion_actual).
464+  944A
465+  944A 21 9D 85     	ld hl,Posicion_actual
466+  944D 35           	dec (hl)
467+  944E 08           	ex af,af
468+  944F 6F           	ld l,a
469+  9450 18 DD        	jr 6B
470+  9452
471+  9452              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
472+  9452
473+  9452 47           3 ld b,a
474+  9453 2A A5 85     	ld hl,(Indice_Sprite_der)
475+  9456 23           2 inc hl
476+  9457 23           	inc hl
477+  9458 10 FC        	djnz 2B
478+  945A 22 A9 85     	ld (Puntero_DESPLZ_der),hl
479+  945D C9           8 ret
480+  945E
481+  945E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
482+  945E              ;
483+  945E              ;	modifica_parametros_1er_DESPLZ
484+  945E              ;
485+  945E              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
486+  945E              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
487+  945E              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
488+  945E
489+  945E 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
490+  9461 A7           	and a
491+  9462 20 1E        	jr nz,1F
492+  9464 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
493+  9465 32 A3 85         ld (CTRL_DESPLZ),a
494+  9468 21 9C 85     	ld hl,Columns
495+  946B 34           	inc (hl)
496+  946C 3A AF 85     	ld a,(Cuad_objeto)
497+  946F E6 01        	and 1
498+  9471 20 0F        	jr nz,1F
499+  9473 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
500+  9476 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
501+  9477 22 9D 85     	ld (Posicion_actual),hl
502+  947A CD 34 95     	call Genera_coordenadas
503+  947D CD D9 94     	call Dec_CTRL_DESPLZ
504+  9480 18 03        	jr 2F
505+  9482 CD D9 94     1 call Dec_CTRL_DESPLZ
506+  9485 C9           2 ret
507+  9486
508+  9486              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
509+  9486
510+  9486 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
511+  9489 FE F7        	cp $f7
512+  948B 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
513+  948D 30 2C        	jr nc,3F
514+  948F
515+  948F              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
516+  948F
517+  948F 06 00        	ld b,0
518+  9491 04           4 inc b
519+  9492 3C           	inc a
520+  9493 FE F7        	cp $f7
521+  9495 20 FA        	jr nz,4B
522+  9497 3E FF        	ld a,$ff
523+  9499 90           	sub b
524+  949A 32 A3 85     	ld (CTRL_DESPLZ),a
525+  949D 18 1C        	jr 3F
526+  949F
527+  949F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
528+  949F
529+  949F 21 9C 85     1 ld hl,Columns
530+  94A2 35           	dec (hl)
531+  94A3 AF           	xor a
532+  94A4 32 A3 85     	ld (CTRL_DESPLZ),a
533+  94A7 3A AF 85     	ld a,(Cuad_objeto)
534+  94AA E6 01        	and 1
535+  94AC 28 0A        	jr z,2F
536+  94AE 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
537+  94B1 2B           	dec hl
538+  94B2 22 9D 85     	ld (Posicion_actual),hl
539+  94B5 CD 34 95     	call Genera_coordenadas
540+  94B8
541+  94B8              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
542+  94B8
543+  94B8 CD DC 87     2 call Inicia_puntero_objeto_izq
544+  94BB C9           3 ret
545+  94BC
546+  94BC              ; ---------- ---------- ---------- ---------- ---------- ----------
547+  94BC              ;
548+  94BC              ;	19/10/22
549+  94BC              ;
550+  94BC              ;	(cp 29) para un Amadeus de 3 Columns.
551+  94BC              ;	(cp 30)   ""  ""    ""     2 Columns.
552+  94BC
553+  94BC 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
554+  94BF FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
555+  94C1 C9           	ret
556+  94C2
557+  94C2              ; ---------- ---------- ---------- ---------- ---------- ----------
558+  94C2              ;
559+  94C2              ;	19/10/22
560+  94C2              ;
561+  94C2              ;	(cp 2) para un Amadeus de 3 Columns.
562+  94C2              ;	(cp 1)   ""  ""    ""     2 Columns.
563+  94C2
564+  94C2 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
565+  94C5 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
566+  94C7 C9           	ret
567+  94C8
568+  94C8              ; ---------- ---------- ---------- ---------- ---------- ----------
569+  94C8              ;
570+  94C8              ;	24/7/22
571+  94C8              ;
572+  94C8              ;	Inc_CTRL_DESPLZ
573+  94C8              ;
574+  94C8              ;
575+  94C8              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
576+  94C8
577+  94C8 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
578+  94CB 3A B1 85     	ld a,(Vel_right)
579+  94CE A7           	and a
580+  94CF 28 06        	jr z,1F
581+  94D1 47           	ld b,a
582+  94D2 34           3 inc (hl)
583+  94D3 10 FD        	djnz 3B
584+  94D5 18 01        	jr 2F
585+  94D7 34           1 inc (hl)
586+  94D8 C9           2 ret
587+  94D9
588+  94D9              ; ---------- ---------- ---------- ---------- ---------- ----------
589+  94D9              ;
590+  94D9              ;	5/2/23
591+  94D9              ;
592+  94D9              ;	Dec_CTRL_DESPLZ
593+  94D9              ;
594+  94D9              ;
595+  94D9              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
596+  94D9
597+  94D9 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
598+  94DC 3A B0 85     	ld a,(Vel_left)
599+  94DF A7           	and a
600+  94E0 28 06        	jr z,1F
601+  94E2 47           	ld b,a
602+  94E3 35           3 dec (hl)
603+  94E4 10 FD        	djnz 3B
604+  94E6 18 01        	jr 2F
605+  94E8 35           1 dec (hl)
606+  94E9 C9           2 ret
607+  94EA
608+  94EA              ; ---------- ---------- ---------- ---------- ---------- ----------
609+  94EA
610+  94EA 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
611+  94ED 01 1F 00     	ld bc,31
612+  94F0 A7           	and a
613+  94F1 ED 4A        	adc hl,bc
614+  94F3 22 9D 85     	ld (Posicion_actual),hl
615+  94F6 21 C9 85     	ld hl,Ctrl_0														; $xxx1
616+  94F9 CB C6        	set 0,(hl)
617+  94FB C9           	ret
618+  94FC
619+  94FC              ; ---------- ---------- ---------- ---------- ---------- ----------
620+  94FC
621+  94FC 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
622+  94FF 01 1F 00     	ld bc,31
623+  9502 A7           	and a
624+  9503 ED 42        	sbc hl,bc
625+  9505 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
626+  9508 21 C9 85     	ld hl,Ctrl_0
627+  950B CB CE        	set 1,(hl)
628+  950D C9           	ret
629+  950E
630+  950E              ; ---------- ---------- ---------- ---------- ---------- ----------
631+  950E
632+  950E 24           Reaparece_abajo inc h
633+  950F 01 E0 17     	ld bc,$17e0
634+  9512 A7           	and a
635+  9513 ED 4A        	adc hl,bc
636+  9515 22 9D 85     	ld (Posicion_actual),hl
637+  9518 21 C9 85     	ld hl,Ctrl_0
638+  951B CB D6        	set 2,(hl)
639+  951D C9           	ret
640+  951E
641+  951E              ; ---------- ---------- ---------- ---------- ---------- ----------
642+  951E
643+  951E 01 E0 17     Reaparece_arriba ld bc,$17e0
644+  9521 A7           	and a
645+  9522 ED 42        	sbc hl,bc
646+  9524 22 9D 85     	ld (Posicion_actual),hl
647+  9527 21 C9 85     	ld hl,Ctrl_0
648+  952A CB DE        	set 3,(hl)
649+  952C C9           	ret
650+  952D
651+  952D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
652+  952D
653+  952D 2A AD 85     Reinicio ld hl,(Posicion_inicio)
654+  9530 22 9D 85     	ld (Posicion_actual),hl
655+  9533 C9           	ret
# file closed: Direcciones.asm
905   9534              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9534              ; ------------------------------------------------------------------------
  2+  9534              ;
  3+  9534              ;	02/04/23
  4+  9534              ;
  5+  9534              ;	Proporciona las coordenadas del objeto a imprimir.
  6+  9534              ;	Fila superior "0", Columna izquierda "0".
  7+  9534              ;
  8+  9534              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  9+  9534              ;
 10+  9534              ;	Modifica: A,BC y DE.
 11+  9534
 12+  9534 C5           Genera_coordenadas push bc
 13+  9535 E5           	push hl
 14+  9536 D5           	push de
 15+  9537
 16+  9537 2A 9D 85     	ld hl,(Posicion_actual)
 17+  953A
 18+  953A 7D           	ld a,l
 19+  953B E6 1F        	and $1f
 20+  953D 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
 21+  9540
 22+  9540 CD 08 92     	call calcula_tercio
 23+  9543 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
 24+  9544
 25+  9544 1E 00        	ld e,0
 26+  9546 7D           	ld a,l
 27+  9547 E6 E0        	and $e0
 28+  9549 28 01        	jr z,1F
 29+  954B 04           	inc b
 30+  954C
 31+  954C 04           1 inc b
 32+  954D 05           	dec b
 33+  954E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
 34+  9550              ;														; _ , salimos.
 35+  9550 1C           3 inc e
 36+  9551 D6 20        	sub 32
 37+  9553 20 FB        	jr nz,3B
 38+  9555 10 F5        	djnz 1B
 39+  9557
 40+  9557 7B           2 ld a,e
 41+  9558 32 A2 85     	ld (Coordenada_y),a
 42+  955B
 43+  955B D1           	pop de
 44+  955C E1           	pop hl
 45+  955D C1           	pop bc
 46+  955E
 47+  955E C9           	ret
 48+  955F
 49+  955F              ; ------------------------------------------------------------------------
 50+  955F              ;	28/03/23
 51+  955F              ;
 52+  955F              ;	Proporciona las coordenadas del disparo a imprimir.
 53+  955F              ;	Fila superior "0", Columna izquierda "0".
 54+  955F              ;
 55+  955F              ;	Input: HL contendrá la posición del proyectil en pantalla.
 56+  955F              ;	Output: DE contendrá las coordenadas del disparo:
 57+  955F              ;
 58+  955F              ;		DE="$120d"
 59+  955F              ;
 60+  955F              ;		D, (Coordenada_X), Columnas, $12
 61+  955F              ;		E, (Coordenada_y), Filas, $0d
 62+  955F              ;
 63+  955F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
 64+  955F
 65+  955F              ;	Modifica: A,BC y DE.
 66+  955F
 67+  955F
 68+  955F              Genera_coordenadas_disparo
 69+  955F
 70+  955F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
 71+  955F
 72+  955F 7D           	ld a,l
 73+  9560 E6 1F        	and $1f
 74+  9562 57           	ld d,a 												; Columnas en D. Coordenada_X.
 75+  9563 CD 08 92     	call calcula_tercio
 76+  9566 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 77+  9567 1E 00        	ld e,0
 78+  9569 7D           	ld a,l
 79+  956A E6 E0        	and $e0
 80+  956C 28 01        	jr z,1F
 81+  956E 04           	inc b
 82+  956F 1C           1 inc e
 83+  9570 D6 20        	sub 32
 84+  9572 20 FB        	jr nz,1B
 85+  9574 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
 86+  9576 C9           	ret
 87+  9577
# file closed: Genera_coordenadas.asm
906   9577              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  9577
  2+  9577
  3+  9577              ;   11/8/22
  4+  9577              ;
  5+  9577              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  9577              ;
  7+  9577              ;   Mov_obj.asm
  8+  9577              ;
  9+  9577              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  9577              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  9577              ;
 12+  9577              ;   Codificación:
 13+  9577              ;
 14+  9577              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  9577
 16+  9577              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  9577
 18+  9577 02 40 00     Arriba db 2,%01000000,0
 19+  957A 02 80 00     Abajo db 2,%10000000,0
 20+  957D 02 20 00     Derecha db 2,%00100000,0
 21+  9580 02 10 00     Izquierda db 2,%00010000,0
 22+  9583 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  9587 60 42 60 40
 22+  958B 63
 23+  958C 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9590 22 A3 80 A0
 24+  9594 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9598 84 A0 83 A0
 25+  959C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  95A0 80 A3 22 A0
 26+  95A4 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  95A8 40 60 42 60
 27+  95AC 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  95B0
 29+  95B0 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 30+  95B4 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 31+  95B8 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
 31+  95BC 84 00
 32+  95BE 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 32+  95C2 84 00
 33+  95C4 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 34+  95C8 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  95CC 1F 1F 1F 1F
 35+  95D0 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 35+  95D4 1F 1F 1F 1F
 35+  95D8 1F
 36+  95D9 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 36+  95DD 2F 2F 2F 2F
 36+  95E1 2F 2F
 37+  95E3 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 37+  95E7 2F 2F 00
 38+  95EA
 39+  95EA              ; ----- ----- ----- ----- -----
 40+  95EA
 41+  95EA C8 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  95EC C4 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  95EE 80 95        Indice_mov_Izquierda defw Izquierda
 44+  95F0 7D 95        Indice_mov_Derecha defw Derecha
 45+  95F2 7A 95        Indice_mov_Abajo defw Abajo
 46+  95F4 77 95        Indice_mov_Arriba defw Arriba
 47+  95F6 B4 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  95F8 B8 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  95FA B0 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  95FC BE 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  95FE 83 95        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9600              ; ----- ----- ----- ----- -----
 53+  9600
 54+  9600 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9603 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  9604 28 02            jr z,1F
 57+  9606 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  9608 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  960B C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  960D 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9610              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9610 2A CD 85         ld hl,(Puntero_mov)
 63+  9613 7E               ld a,(hl)
 64+  9614 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  9617 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  9618 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  961B
 68+  961B 3A D1 85     Decoder ld a,(Repetimos_db)
 69+  961E A7               and a
 70+  961F 20 0C            jr nz,12F
 71+  9621 2A CD 85         ld hl,(Puntero_mov)
 72+  9624 7E               ld a,(hl)
 73+  9625 A7               and a
 74+  9626 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  9628 E6 0F            and $0f
 76+  962A 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  962D              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  962D 2A CD 85     12 ld hl,(Puntero_mov)
 79+  9630 CB 7E            bit 7,(hl)
 80+  9632 28 03            jr z,2F
 81+  9634 CD 26 92         call Mov_down
 82+  9637 2A CD 85     2 ld hl, (Puntero_mov)
 83+  963A CB 76            bit 6,(hl)
 84+  963C 28 03            jr z,3F
 85+  963E CD 54 92         call Mov_up
 86+  9641 2A CD 85     3 ld hl, (Puntero_mov)
 87+  9644 CB 6E            bit 5,(hl)
 88+  9646 28 03            jr z,4F
 89+  9648 CD 82 92         call Mov_right
 90+  964B 2A CD 85     4 ld hl, (Puntero_mov)
 91+  964E CB 66            bit 4,(hl)
 92+  9650 28 03            jr z,5F
 93+  9652 CD A0 93         call Mov_left
 94+  9655
 95+  9655              ; ---------- --------- --------- ---------- ----------
 96+  9655
 97+  9655 3A D1 85     5 ld a,(Repetimos_db)
 98+  9658 A7               and a
 99+  9659 28 07            jr z,6F
100+  965B 3D               dec a
101+  965C 32 D1 85         ld (Repetimos_db),a
102+  965F 28 01            jr z,6f
103+  9661 C9           11 ret
104+  9662 21 CF 85     6 ld hl,Contador_db_mov
105+  9665 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  9666 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  9669 23               inc hl
108+  966A 22 CD 85         ld (Puntero_mov),hl
109+  966D 18 F2            jr 11B
110+  966F 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  9672 3A D0 85         ld a,(Incrementa_puntero)
112+  9675 47               ld b,a
113+  9676 23           8 inc hl
114+  9677 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  9679 5E               ld e,(hl)
116+  967A 23               inc hl
117+  967B 56               ld d,(hl)
118+  967C EB               ex de,hl
119+  967D 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9680 18 DF            jr 11B
121+  9682
122+  9682              ; ---------- --------- --------- ---------- ----------
123+  9682              ;
124+  9682              ;   11/8/22
125+  9682              ;
126+  9682              ;   Prepara_Puntero_mov
127+  9682
128+  9682 E5           Prepara_Puntero_mov push hl
129+  9683 D5               push de
130+  9684 2A CB 85         ld hl,(Puntero_indice_mov)
131+  9687 5E               ld e,(hl)
132+  9688 23               inc hl
133+  9689 56               ld d,(hl)
134+  968A EB               ex de,hl
135+  968B 22 CD 85         ld (Puntero_mov),hl
136+  968E D1               pop de
137+  968F E1               pop hl
138+  9690 C9               ret
139+  9691
140+  9691              ; ---------- --------- --------- ---------- ----------
141+  9691              ;
142+  9691              ;   11/8/22
143+  9691              ;
144+  9691              ;   Reinicia_el_movimiento
145+  9691
146+  9691 CD 82 96     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  9694 AF               xor a
148+  9695 32 CF 85         ld (Contador_db_mov),a
149+  9698 32 D0 85         ld (Incrementa_puntero),a
150+  969B C3 00 96         jp Movimiento
151+  969E C9               ret
152+  969F              ; ---------- --------- --------- ---------- ----------
153+  969F
154+  969F
155+  969F
156+  969F
157+  969F
158+  969F
159+  969F
160+  969F
161+  969F
162+  969F
163+  969F
164+  969F
165+  969F
166+  969F
167+  969F
168+  969F
169+  969F
170+  969F
# file closed: Patrones_de_mov.asm
907   969F              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  969F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  969F              ;
  3+  969F              ;	3/1/23
  4+  969F              ;
  5+  969F              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  969F
  7+  969F              ;	ADC HL,SP	LD (addr),SP
  8+  969F              ;	ADD HL,SP	LD SP,(addr)
  9+  969F              ;	ADD IX,SP	LD SP,nn
 10+  969F              ; 	ADD IY,SP	LD SP,HL
 11+  969F              ;				LD SP,IX
 12+  969F              ;	DEC SP		LD SP,IY
 13+  969F
 14+  969F              ;	EX (SP),HL
 15+  969F              ;	EX (SP),IX
 16+  969F              ;	EX (SP),IY
 17+  969F
 18+  969F              ;	INC SP
 19+  969F
 20+  969F
 21+  969F                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D6 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 E3 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B DF 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
908   7FD4
909   7FD4              	SAVESNA "Pruebas.sna", START
910   7FD4
911   7FD4
912   7FD4
# file closed: Banco_de_pruebas.asm
