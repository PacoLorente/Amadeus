# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A1 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD CF 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD DF 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 AB 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B A1 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 107  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 39 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 04           Nivel_1 db 4									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8939
  19+ 8939 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 893E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8942 01 02
  22+ 8944 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8948 01 02
  23+ 894A
# file closed: Niveles.asm
 108  894A
 109  894A              ; ******************************************************************************************************************************************************************************************
 110  894A              ; Constantes.
 111  894A              ; ******************************************************************************************************************************************************************************************
 112  894A              ;
 113  894A              ; 25/12/23
 114  894A
 115  894A              ;
 116  894A              ; Constantes.
 117  894A              ;
 118  894A
 119  894A              Sprite_vacio equ $eae0
 120  894A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  894A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  894A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  894A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  894A
 125  894A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 126  894A              ;														;
 127  894A              Almacen_de_movimientos_masticados_Amadeus equ $e700
 128  894A
 129  894A              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 130  894A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 131  894A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 132  894A              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 133  894A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 134  894A              ;														; 55 Bytes.
 135  894A
 136  894A              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 137  894A              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 138  894A
 139  894A              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 140  894A
 141  894A              ; ******************************************************************************************************************************************************************************************
 142  894A              ; Variables.
 143  894A              ; ******************************************************************************************************************************************************************************************
 144  894A              ;
 145  894A              ; 18/01/24
 146  894A              ;
 147  894A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 148  894A              ;
 149  894A
 150  894A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 151  894A
 152  894A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 153  894B              ;															- Patrón de movimiento.
 154  894B              ;															- Aspecto
 155  894B 00           Filas db 0												; Filas. [DRAW]
 156  894C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 157  894D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 158  894F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 159  8951 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 160  8952 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 161  8953
 162  8953              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 163  8953
 164  8953 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 165  8954              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 166  8954              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 167  8954 00           Attr db 0												; Atributos de la entidad:
 168  8955
 169  8955              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 170  8955              ;
 171  8955              ;	COLORES: 0 ..... NEGRO
 172  8955              ;    		 1 ..... AZUL
 173  8955              ; 			 2 ..... ROJO
 174  8955              ;			 3 ..... MAGENTA
 175  8955              ; 			 4 ..... VERDE
 176  8955              ; 			 5 ..... CIAN
 177  8955              ;			 6 ..... AMARILLO
 178  8955              ; 			 7 ..... BLANCO
 179  8955
 180  8955 00 00        Indice_Sprite_der defw 0
 181  8957 00 00        Indice_Sprite_izq defw 0
 182  8959 00 00        Puntero_DESPLZ_der defw 0
 183  895B 00 00        Puntero_DESPLZ_izq defw 0
 184  895D
 185  895D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 186  895F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 187  8960
 188  8960              ; Variables de objeto. (Características).
 189  8960
 190  8960 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 191  8961              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 192  8961              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 193  8961 00 00 00...  Variables_de_borrado ds 6
 194  8967
 195  8967 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 196  8969              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 197  8969
 198  8969 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 199  896B
 200  896B              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 201  896B              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 202  896B
 203  896B 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 204  896D              ;														; _palabras que componen el "movimiento_masticado".
 205  896D
 206  896D              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 207  896D
 208  896D 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 209  896E              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 210  896E              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 211  896E              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 212  896E              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 213  896E              ;
 214  896E              ; 														DESCRIPCIÖN:
 215  896E              ;
 216  896E              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 217  896E              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 218  896E              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 219  896E              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 220  896E              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 221  896E              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 222  896E              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 223  896E              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 224  896E              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 225  896E              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 226  896E              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 227  896E              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 228  896E              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 229  896E              ;
 230  896E              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 231  896E              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 232  896E              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 233  896E
 234  896E              ; Variables de funcionamiento. [DRAW].
 235  896E
 236  896E 00           Columnas db 0
 237  896F 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 238  8971              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8971 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 240  8972
 241  8972              ; variables de control general.
 242  8972
 243  8972 00           Ctrl_2 db 0
 244  8973              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 245  8973              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 246  8973              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 247  8973              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 248  8973              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 249  8973              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 250  8973              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 251  8973              ;
 252  8973              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 253  8973              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 254  8973              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 255  8973              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 256  8973              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 257  8973              ;														BIT 4, ???
 258  8973              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 259  8973
 260  8973 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 261  8974
 262  8974              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 263  8974
 264  8974              ;					         		---------;      ;---------
 265  8974
 266  8974              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 267  8974
 268  8974              Perfiles_de_velocidad
 269  8974
 270  8974 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 271  8975 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 272  8976 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 273  8977 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 274  8978
 275  8978              ; Contadores de 16 bits.
 276  8978
 277  8978 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 278  897A 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 279  897C 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 280  897E 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 281  8980
 282  8980              ; Movimiento. ------------------------------------------------------------------------------------------------------
 283  8980
 284  8980 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 285  8982 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 286  8984 00 00        Puntero_indice_mov_bucle defw 0							;
 287  8986              ;
 288  8986              ;
 289  8986 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 290  8987              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 291  8987              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 292  8987 00           Incrementa_puntero_backup db 0
 293  8988 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 294  8989              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 295  8989 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 296  898A 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 297  898B 00           Cola_de_desplazamiento db 0								; Este byte indica:
 298  898C              ;
 299  898C              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 300  898C              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 301  898C              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 302  898C              ;
 303  898C              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 304  898C              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 305  898C              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 306  898C              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 307  898C              ;
 308  898C              ;														;	"$ff" ..... Bucle infinito de repetición.
 309  898C              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 310  898C              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 311  898C              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 312  898C
 313  898C 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 314  898D
 315  898D              ;														DESCRIPCIÓN:
 316  898D              ;
 317  898D              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 318  898D              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 319  898D              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 320  898D              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 321  898D              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 322  898D              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 323  898D
 324  898D              ;														BIT 3, Recarga de nueva oleada.
 325  898D              ;														BIT 4, Recarga de nueva oleada.
 326  898D              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 327  898D              ;														BIT 6, **** Frame completo.
 328  898D              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 329  898D
 330  898D 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 331  898F              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 332  898F              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 333  898F              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 334  898F
 335  898F              ; Gestión de ENTIDADES y CAJAS.
 336  898F
 337  898F 00 00        Puntero_store_caja defw 0
 338  8991 00 00        Puntero_restore_caja defw 0
 339  8993 00 00        Indice_restore_caja defw 0
 340  8995 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 341  8996 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 342  8997 00           Entidades_en_curso db 0									; ..... ..... .....
 343  8998 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 344  8999              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 345  8999              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 346  8999              ;														; _ (Numero_de_malotes)="0".
 347  8999 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 348  899B 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 349  899D              ;														; _ puntero (Indice_entidades).
 350  899D
 351  899D              ;---------------------------------------------------------------------------------------------------------------
 352  899D              ;
 353  899D              ;	11/01/24
 354  899D              ;
 355  899D              ;	Álbumes.
 356  899D
 357  899D 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 358  899F              ;														; _variable para almacenar lo posición del puntero_
 359  899F              ; 														; _de pila, SP.
 360  899F 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 361  89A1              ;														; La utiliza la rutina [Extrae_foto_registros].
 362  89A1 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 363  89A3 00 80        Stack_snapshot defw Album_de_fotos
 364  89A5 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 365  89A7
 366  89A7              ;End_Snapshot defw Album_de_fotos
 367  89A7              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 368  89A7 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 369  89A9              ;														; _el snapshot de los registros del siguiente disparo.
 370  89A9              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 371  89A9 AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 372  89AB
 373  89AB 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 374  89AC              ;
 375  89AC              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 376  89AC              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 377  89AC              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 378  89AC
 379  89AC 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 380  89AD              ;
 381  89AD              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 382  89AD              ;
 383  89AD              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 384  89AD              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 385  89AD              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 386  89AD              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 387  89AD              ;
 388  89AD              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 389  89AD              ;															_ masticados ya generados.
 390  89AD              ;
 391  89AD              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 392  89AD              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 393  89AD              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 394  89AD              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 395  89AD
 396  89AD
 397  89AD              ; Gestión de Disparos.
 398  89AD
 399  89AD 00           Numero_de_disparotes db 0
 400  89AE 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 401  89B0 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 402  89B2 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 403  89B3              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 404  89B3              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 405  89B3 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 406  89B5              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 407  89B5              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 408  89B5              ;														; _produzca colisión.
 409  89B5 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 410  89B7              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 411  89B7 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 412  89BA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 413  89BA 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 414  89BD              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 415  89BD 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 416  89BE
 417  89BE              ;---------------------------------------------------------------------------------------------------------------
 418  89BE
 419  89BE              ; Relojes y temporizaciones.
 420  89BE
 421  89BE 00           Contador_de_frames db 0
 422  89BF 00           Contador_de_frames_2 db 0
 423  89C0
 424  89C0 04           Clock_explosion db 4
 425  89C1 14           Clock_Entidades_en_curso db 20
 426  89C2 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 427  89C3              ;														; Repite la oleada de entidades.
 428  89C3 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 429  89C4 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 430  89C5 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 431  89C6
 432  89C6 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 433  89C7 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 434  89C8 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 435  89C9
 436  89C9              ;---------------------------------------------------------------------------------------------------------------
 437  89C9
 438  89C9              ; Gestión de NIVELES.
 439  89C9
 440  89C9 00           Nivel db 0												; Nivel actual del juego.
 441  89CA 00 00        Puntero_indice_NIVELES defw 0
 442  89CC 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 443  89CE              ; 														; _ que definen el NIVEL.
 444  89CE              ; Y todo comienza aquí .....
 445  89CE              ;
 446  89CE              ; 	INICIO  *************************************************************************************************************************************************************************
 447  89CE              ;
 448  89CE              ;	5/1/24
 449  89CE
 450  89CE              START
 451  89CE
 452  89CE 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 453  89D1 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 454  89D3 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 455  89D5 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 456  89D7 F3           	DI
 457  89D8
 458  89D8 3E 07        	ld a,%00000111
 459  89DA CD 91 9E     	call Cls
 460  89DD CD 40 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 461  89E0
 462  89E0              ; INICIALIZACIÓN.
 463  89E0
 464  89E0              ;	Inicializa 1er Nivel.
 465  89E0
 466  89E0 21 28 89     	ld hl,Indice_de_niveles
 467  89E3 22 CA 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 468  89E6 CD F1 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 469  89E9
 470  89E9              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 471  89E9              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 472  89E9              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 473  89E9
 474  89E9              ;	Provisional, (para desarrollo).
 475  89E9
 476  89E9              	;-
 477  89E9              ;	ld hl,Numero_parcial_de_entidades
 478  89E9              ;	ld b,(hl)
 479  89E9              ;	inc b
 480  89E9              ;	dec b
 481  89E9              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 482  89E9
 483  89E9 CD 20 8D     4 call Inicia_Entidades
 484  89EC
 485  89EC CD 03 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 486  89EF
 487  89EF              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 488  89EF              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 489  89EF              ; (Esto se dá cuando se inicia una nueva oleada).
 490  89EF
 491  89EF              ;	ld a,(Ctrl_1)
 492  89EF              ;	bit 3,a
 493  89EF              ;	jr nz,5F											; Loop
 494  89EF
 495  89EF              ; 	INICIA AMADEUS !!!!!
 496  89EF
 497  89EF              ;3 call Restore_Amadeus
 498  89EF              ;	call Inicia_Puntero_objeto
 499  89EF              ;	call Draw
 500  89EF
 501  89EF              ;	call Guarda_movimiento_masticado	;! Provisional
 502  89EF
 503  89EF              ;	call Guarda_foto_registros
 504  89EF              ;	call Guarda_datos_de_borrado_Amadeus
 505  89EF
 506  89EF              ;	ld de,Amadeus_db
 507  89EF              ;	call Store_Amadeus
 508  89EF
 509  89EF              ; 	INICIA DISPAROS !!!!!
 510  89EF
 511  89EF              ;	call Inicia_Puntero_Disparo_Entidades
 512  89EF              ;	call Inicia_Puntero_Disparo_Amadeus
 513  89EF
 514  89EF              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 515  89EF
 516  89EF              ;5 call Inicia_punteros_de_cajas
 517  89EF              ;	call Restore_entidad
 518  89EF
 519  89EF              ;	ld a,(Ctrl_1)
 520  89EF              ;	bit 3,a
 521  89EF              ;	jr z,6F
 522  89EF
 523  89EF              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 524  89EF
 525  89EF              ;	ld hl,Ctrl_1
 526  89EF              ;	res 3,(hl)
 527  89EF              ;	jr Main
 528  89EF
 529  89EF              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 530  89EF
 531  89EF 21 AB 89     6 ld hl,Ctrl_3
 532  89F2 CB C6        	set 0,(hl)											; Frame completo.
 533  89F4 FB           	ei
 534  89F5 76           	halt
 535  89F6
 536  89F6              ; ------------------------------------
 537  89F6
 538  89F6              Main
 539  89F6              ;
 540  89F6              ;	11/12/23
 541  89F6
 542  89F6              ; Aparece nueva entidad ???
 543  89F6
 544  89F6              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 545  89F6              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 546  89F6              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 547  89F6              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 548  89F6              ;														; _un 2º bloque.
 549  89F6
 550  89F6              ;	ld a,1
 551  89F6              ;	out ($fe),a
 552  89F6
 553  89F6 3A C1 89     	ld a,(Clock_Entidades_en_curso)
 554  89F9 47           	ld b,a
 555  89FA 3A BE 89     	ld a,(Contador_de_frames)
 556  89FD B8           	cp b
 557  89FE 20 18        	jr nz,13F
 558  8A00
 559  8A00              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 560  8A00              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 561  8A00
 562  8A00 3A 96 89     21 ld a,(Numero_parcial_de_entidades)
 563  8A03 47           	ld b,a
 564  8A04 3A 97 89     	ld a,(Entidades_en_curso)
 565  8A07 B8           	cp b
 566  8A08 28 0E        	jr z,13F
 567  8A0A 30 0C        	jr nc,13F
 568  8A0C
 569  8A0C 3C           	inc a
 570  8A0D 32 97 89     	ld (Entidades_en_curso),a
 571  8A10
 572  8A10              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 573  8A10
 574  8A10 3A C1 89     	ld a,(Clock_Entidades_en_curso)
 575  8A13              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 576  8A13              ;! _ IMPREDECIBLE !!!!
 577  8A13 C6 64        	add 100
 578  8A15 32 C1 89     	ld (Clock_Entidades_en_curso),a
 579  8A18
 580  8A18              ; -------------------------------------------------------------------------------------------------------------
 581  8A18
 582  8A18              ; Habilita disparos.
 583  8A18
 584  8A18              13
 585  8A18
 586  8A18              ;	ld hl,Disparo_Amadeus
 587  8A18              ;	ld de,CLOCK_repone_disparo_Amadeus
 588  8A18              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 589  8A18
 590  8A18              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 591  8A18              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 592  8A18              ;	call Habilita_disparos
 593  8A18
 594  8A18              ; COLISIONES.
 595  8A18
 596  8A18              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 597  8A18
 598  8A18              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 599  8A18              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 600  8A18              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 601  8A18
 602  8A18              ;	xor a
 603  8A18              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 604  8A18
 605  8A18              ;	call Inicia_punteros_de_cajas
 606  8A18              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 607  8A18              ; 														; _ en DRAW.
 608  8A18
 609  8A18              ;	ld a,(Filas)
 610  8A18              ;	and a
 611  8A18              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 612  8A18              ;	call Incrementa_punteros_de_cajas
 613  8A18              ;	jr 12B
 614  8A18
 615  8A18              ; ---------------------------------------------------------------------------------------
 616  8A18
 617  8A18 3A 96 89     10 ld a,(Numero_parcial_de_entidades)
 618  8A1B 47               ld b,a
 619  8A1C A7           	and a
 620  8A1D 20 00        	jr nz,11F
 621  8A1F
 622  8A1F              ;	ld hl,Ctrl_1;
 623  8A1F              ;	bit 4,(hl)
 624  8A1F              ;	jp nz,16F
 625  8A1F
 626  8A1F              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 627  8A1F
 628  8A1F              ;	ld hl,Ctrl_1
 629  8A1F              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 630  8A1F
 631  8A1F              ;	ld a,(Contador_de_frames)
 632  8A1F              ;	inc a
 633  8A1F              ;	ld (Activa_recarga_cajas),a
 634  8A1F
 635  8A1F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 636  8A1F
 637  8A1F 3A 97 89     11 ld a,(Entidades_en_curso)
 638  8A22 A7           	and a
 639  8A23 28 14        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 640  8A25 47           	ld b,a												; No hay entidades que gestionar.
 641  8A26
 642  8A26              ; ( Código que ejecutamos con cada entidad: ).
 643  8A26
 644  8A26              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 645  8A26
 646  8A26 C5           15 push bc 												; Nº de entidades en curso.
 647  8A27
 648  8A27 CD D6 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 649  8A2A
 650  8A2A              ; Existe "Entidad_guía" ???.
 651  8A2A              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 652  8A2A
 653  8A2A              ;	ld a,(Ctrl_3)
 654  8A2A              ;	bit 1,a
 655  8A2A              ;	jr nz,22F
 656  8A2A
 657  8A2A              ; Almacén de "Movimientos_masticados" lleno ???
 658  8A2A              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 659  8A2A              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 660  8A2A
 661  8A2A              ;;	ld a,(Ctrl_3)
 662  8A2A              ;;	bit 3,a
 663  8A2A              ;;	jr nz,22F
 664  8A2A
 665  8A2A              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 666  8A2A
 667  8A2A              ;	ld hl,Ctrl_2
 668  8A2A              ;	set 5,(hl)
 669  8A2A              ;	ld hl,Ctrl_3
 670  8A2A              ;	set 1,(hl)
 671  8A2A
 672  8A2A              ; Impacto ???
 673  8A2A
 674  8A2A              ;22 ld a,(Impacto)
 675  8A2A              ;	and a
 676  8A2A              ;	jr z,8F
 677  8A2A
 678  8A2A              ; Hay Impacto en esta entidad.
 679  8A2A
 680  8A2A              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 681  8A2A              ;	dec (hl)
 682  8A2A              ;	jp nz,17F
 683  8A2A
 684  8A2A              ;! Velocidad de la animación de la explosión.
 685  8A2A
 686  8A2A              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 687  8A2A              ;														; _,(velocidad de la explosión).
 688  8A2A              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 689  8A2A
 690  8A2A              ;	call Repone_datos_de_borrado
 691  8A2A              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 692  8A2A
 693  8A2A              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 694  8A2A
 695  8A2A              ;	ld a,(Ctrl_2)
 696  8A2A              ;	bit 1,a
 697  8A2A              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 698  8A2A
 699  8A2A              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 700  8A2A
 701  8A2A              ;	ld a,(CTRL_DESPLZ)
 702  8A2A              ;	and a
 703  8A2A              ;	jr nz,18F
 704  8A2A
 705  8A2A              ;	ld hl,Indice_Explosion_2x2-2
 706  8A2A              ;	ld (Puntero_DESPLZ_der),hl
 707  8A2A              ;	jr 19F
 708  8A2A
 709  8A2A              ;18 ld hl,Indice_Explosion_2x3-2
 710  8A2A              ;	ld (Puntero_DESPLZ_der),hl
 711  8A2A
 712  8A2A              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 713  8A2A              ;	set 1,(hl)
 714  8A2A              ;	jr 7F
 715  8A2A
 716  8A2A              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 717  8A2A              ; _con las coordenadas de la entidad almacenada en DRAW.
 718  8A2A
 719  8A2A              ;8 ld a,(Ctrl_1)
 720  8A2A              ;	bit 2,a
 721  8A2A              ;	jr z,7F
 722  8A2A
 723  8A2A              ;	ld hl,(Coordenadas_disparo_certero)
 724  8A2A              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 725  8A2A              ;														; E contiene la coordenada_X del disparo.
 726  8A2A              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 727  8A2A              ;														; H FILA, (Coordenada_y de la entidad).
 728  8A2A              ;	and a
 729  8A2A              ;	sbc hl,de
 730  8A2A
 731  8A2A              ;	call Determina_resultado_comparativa
 732  8A2A
 733  8A2A              ;	ld a,b
 734  8A2A              ;	and a
 735  8A2A              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 736  8A2A
 737  8A2A              ; ----- ----- -----
 738  8A2A
 739  8A2A              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 740  8A2A              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 741  8A2A
 742  8A2A              ;	ld hl,Ctrl_1
 743  8A2A              ;	res 2,(hl)
 744  8A2A
 745  8A2A CD 46 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 746  8A2D
 747  8A2D              ;	ld a,(Ctrl_0)
 748  8A2D              ;	bit 4,a
 749  8A2D              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 750  8A2D
 751  8A2D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 752  8A2D              ; [[[
 753  8A2D              ;	call Detecta_disparo_entidad
 754  8A2D              ; ]]]
 755  8A2D
 756  8A2D CD 86 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 757  8A30
 758  8A30              ;	ld hl,Ctrl_0
 759  8A30              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 760  8A30
 761  8A30 CD 76 8D     17 call Store_Restore_cajas
 762  8A33
 763  8A33 C1           	pop bc
 764  8A34
 765  8A34 10 F0        	djnz 15B
 766  8A36
 767  8A36 CD 03 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 768  8A39
 769  8A39              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 770  8A39              ; Hemos gestionado todas las unidades.
 771  8A39              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 772  8A39
 773  8A39              ;	ld hl,Ctrl_1
 774  8A39              ;	res 2,(hl)
 775  8A39
 776  8A39 21 AB 89     16 ld hl,Ctrl_3
 777  8A3C CB C6        	set 0,(hl)											; Frame completo.
 778  8A3E
 779  8A3E AF           	xor a
 780  8A3F D3 FE        	out ($fe),a
 781  8A41
 782  8A41 76           	halt
 783  8A42
 784  8A42              ; ----------------------------------------
 785  8A42
 786  8A42              ;	ld a,(Ctrl_1) 										; Existe Loop?
 787  8A42              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 788  8A42 CA F6 89     	jp z,Main
 789  8A45
 790  8A45              ; RECARGA DE NUEVA OLEADA.
 791  8A45
 792  8A45              ;	ld a,(Contador_de_frames)
 793  8A45              ;	ld b,a
 794  8A45              ;	ld a,(Activa_recarga_cajas)
 795  8A45              ;	cp b
 796  8A45              ;	jr z,20F
 797  8A45
 798  8A45              ;	ld hl,Ctrl_1
 799  8A45              ;	set 4,(hl)
 800  8A45              ;	jp Main
 801  8A45
 802  8A45              ;20 ld hl,Ctrl_1
 803  8A45              ;	res 4,(hl)
 804  8A45
 805  8A45              ;	ld a,(Contador_de_frames)
 806  8A45
 807  8A45              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 808  8A45              ;! _ IMPREDECIBLE !!!!
 809  8A45
 810  8A45              ;	add 10
 811  8A45              ;	ld (Clock_Entidades_en_curso),a
 812  8A45
 813  8A45              ;	jp 4B
 814  8A45
 815  8A45 C9           	ret
 816  8A46
 817  8A46              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 818  8A46              ;
 819  8A46              ;	16/11/23
 820  8A46
 821  8A46              ;;Gestiona_Amadeus
 822  8A46
 823  8A46              ;! Activa/desactiva impacto con Amadeus.
 824  8A46
 825  8A46              ;	ld a,(Impacto)
 826  8A46              ;	and a
 827  8A46              ;	jr nz,2F
 828  8A46
 829  8A46              ;;	call Mov_Amadeus
 830  8A46
 831  8A46              ;;2 ld a,(Ctrl_0)
 832  8A46              ;;	bit 4,a
 833  8A46              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 834  8A46
 835  8A46              ;;	call Guarda_foto_entidad_a_pintar
 836  8A46              ;;	call Guarda_datos_de_borrado_Amadeus
 837  8A46
 838  8A46              ;;1 ld hl,Ctrl_0
 839  8A46              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 840  8A46
 841  8A46              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 842  8A46
 843  8A46              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 844  8A46
 845  8A46              ;	call Calcula_numero_de_disparotes
 846  8A46
 847  8A46              ;;	ret
 848  8A46
 849  8A46              ; --------------------------------------------------------------------------------------------------------------
 850  8A46              ;
 851  8A46              ;	15/12/23
 852  8A46
 853  8A46              Mov_obj
 854  8A46
 855  8A46              ;	ld a,(Ctrl_2)
 856  8A46              ;	bit 1,a
 857  8A46              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 858  8A46
 859  8A46              ; Explosión:
 860  8A46
 861  8A46              ;	ld a,(Frames_explosion)
 862  8A46              ;	and a
 863  8A46              ;	jr nz,4F
 864  8A46
 865  8A46              ;!  Una alimaña menos!!!!!!!!!1
 866  8A46
 867  8A46              ; Se trataba de una Entidad_guía ???
 868  8A46
 869  8A46              ;	ld a,(Ctrl_2)
 870  8A46              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 871  8A46              ;	jr z,5F
 872  8A46
 873  8A46              ;	ld hl,Ctrl_3
 874  8A46              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 875  8A46
 876  8A46              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 877  8A46              ;!! _generado puede ser distinto, (aletoriedad).
 878  8A46
 879  8A46              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 880  8A46              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 881  8A46              ;	dec (hl)
 882  8A46              ;	ld hl,Entidades_en_curso
 883  8A46              ;	dec (hl)
 884  8A46              ;	ld hl,Numero_de_entidades
 885  8A46              ;	dec (hl)
 886  8A46              ;	jr 3F
 887  8A46
 888  8A46              ; -----
 889  8A46
 890  8A46              ;	`Movemos´ la explosión.
 891  8A46
 892  8A46              ;4 ld hl,(Puntero_DESPLZ_der)
 893  8A46              ;	inc hl
 894  8A46              ;	inc hl
 895  8A46              ;	call Extrae_address
 896  8A46              ;;	ld (Puntero_objeto),hl
 897  8A46
 898  8A46              ;;	ld hl,Frames_explosion
 899  8A46              ;;	dec (hl)
 900  8A46
 901  8A46              ;;	ld hl,Ctrl_0
 902  8A46              ;;	set 4,(hl);;
 903  8A46
 904  8A46              ;;	jr 3F
 905  8A46
 906  8A46              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 907  8A46
 908  8A46              ;2 xor a
 909  8A46              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 910  8A46
 911  8A46              ; Movemos Entidades malignas.
 912  8A46              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 913  8A46
 914  8A46              ;	ld a,(Ctrl_2)
 915  8A46              ;	bit 5,a
 916  8A46              ;	jr nz,8F
 917  8A46
 918  8A46              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 919  8A46              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 920  8A46              ;	jr 7F
 921  8A46
 922  8A46              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 923  8A46
 924  8A46              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 925  8A46              ;	bit 4,a
 926  8A46              ;	ret z
 927  8A46
 928  8A46              ; Ha habido desplazamiento de la entidad maligna.
 929  8A46              ; Ha llegado a zona de AMADEUS ???
 930  8A46
 931  8A46              ;7 ld a,(Coordenada_y)
 932  8A46              ;	cp $14
 933  8A46              ;	jr c,1F
 934  8A46
 935  8A46              ; ---------
 936  8A46
 937  8A46              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 938  8A46              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 939  8A46
 940  8A46              ;	di
 941  8A46              ;	call Genera_coordenadas_X
 942  8A46              ;	call Compara_coordenadas_X
 943  8A46              ;	ei
 944  8A46
 945  8A46              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 946  8A46
 947  8A46              ; ---------
 948  8A46
 949  8A46              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 950  8A46 CD B4 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 951  8A49 CD 41 8B     	call Limpia_Variables_de_borrado
 952  8A4C
 953  8A4C C9           3 ret
 954  8A4D
 955  8A4D              ; --------------------------------------------------------------------------------------------------------------
 956  8A4D              ;
 957  8A4D              ;	29/1/23
 958  8A4D
 959  8A4D              Mov_Amadeus
 960  8A4D
 961  8A4D              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 962  8A4D
 963  8A4D CD 54 95     	call Mov_right
 964  8A50
 965  8A50 3A 6D 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 966  8A53 CB 67        	bit 4,a
 967  8A55 C8           	ret z
 968  8A56
 969  8A56              ; ---------
 970  8A56
 971  8A56              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 972  8A56 CD A4 8C     	call Repone_datos_de_borrado_Amadeus
 973  8A59 CD 41 8B     	call Limpia_Variables_de_borrado
 974  8A5C
 975  8A5C C9           	ret
 976  8A5D
 977  8A5D              ; -----------------------------------------------------------------------------------
 978  8A5D              ;
 979  8A5D              ;	20/01/24
 980  8A5D              ;
 981  8A5D              ;
 982  8A5D
 983  8A5D              Construye_movimientos_masticados_entidad
 984  8A5D
 985  8A5D 2A 69 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 986  8A60 E5           	push hl
 987  8A61 CD A5 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 988  8A64              ;															; _ el (Contador_de_mov_masticados).
 989  8A64 CD A1 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 990  8A67              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 991  8A67 CD B0 94     	call Recompone_posicion_inicio
 992  8A6A
 993  8A6A CD A4 8E     1 call Draw
 994  8A6D CD 89 8A     	call Guarda_movimiento_masticado
 995  8A70
 996  8A70 CD 2A 98     	call Movimiento
 997  8A73
 998  8A73 3A AB 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 999  8A76 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1000  8A78 28 F0        	jr z,1B
1001  8A7A
1002  8A7A              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1003  8A7A              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1004  8A7A
1005  8A7A E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1006  8A7B 22 69 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1007  8A7E
1008  8A7E              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1009  8A7E
1010  8A7E CD 8E 99     	call Situa_en_contador_general_de_mov_masticados
1011  8A81
1012  8A81              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1013  8A81              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1014  8A81
1015  8A81 ED 4B 6B 89  	ld bc,(Contador_de_mov_masticados)
1016  8A85 71           	ld (hl),c
1017  8A86 23           	inc hl
1018  8A87 70           	ld (hl),b
1019  8A88
1020  8A88 C9           	ret
1021  8A89
1022  8A89              ; -----------------------------------------------------------------------------------
1023  8A89              ;
1024  8A89              ;	28/12/23
1025  8A89              ;
1026  8A89              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1027  8A89              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1028  8A89
1029  8A89              Guarda_movimiento_masticado
1030  8A89
1031  8A89 ED 73 9D 89  	ld (Stack),sp
1032  8A8D ED 7B 69 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1033  8A91
1034  8A91 E5           	push hl
1035  8A92 DD E5            push ix
1036  8A94 FD E5            push iy
1037  8A96
1038  8A96 ED 7B 9D 89      ld sp,(Stack)
1039  8A9A
1040  8A9A 2A 6B 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1041  8A9D 23           	inc hl
1042  8A9E 22 6B 89     	ld (Contador_de_mov_masticados),hl
1043  8AA1
1044  8AA1 CD A5 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1045  8AA4              ;															; _ el (Contador_de_mov_masticados).
1046  8AA4 C9               ret
1047  8AA5
1048  8AA5              ; --------------------------------------------------------------------------------------------------------------
1049  8AA5              ;
1050  8AA5              ;	12/1/24
1051  8AA5              ;
1052  8AA5              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1053  8AA5
1054  8AA5              Actualiza_Puntero_de_almacen_de_mov_masticados
1055  8AA5
1056  8AA5 2A 69 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1057  8AA8 01 06 00     	ld bc,6
1058  8AAB A7           	and a
1059  8AAC ED 4A        	adc hl,bc
1060  8AAE 22 69 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1061  8AB1 C9           	ret
1062  8AB2
1063  8AB2              ; --------------------------------------------------------------------------------------------------------------
1064  8AB2              ;
1065  8AB2              ;	15/01/24
1066  8AB2              ;
1067  8AB2              ;	Cargamos los registros_
1068  8AB2              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1069  8AB2              ;
1070  8AB2              ;	HL contiene la dirección de la rutina de impresión.
1071  8AB2              ;	IX contiene el puntero de impresión.
1072  8AB2              ;	IY contiene (Puntero_objeto).
1073  8AB2
1074  8AB2
1075  8AB2 ED 73 9D 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1076  8AB6 ED 7B 69 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1077  8ABA
1078  8ABA FD E1        	pop iy
1079  8ABC DD E1        	pop ix
1080  8ABE E1           	pop hl
1081  8ABF
1082  8ABF ED 73 69 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1083  8AC3
1084  8AC3 ED 7B 9D 89  	ld sp,(Stack)
1085  8AC7
1086  8AC7 C9           	ret
1087  8AC8
1088  8AC8              ; --------------------------------------------------------------------------------------------------------------
1089  8AC8              ;
1090  8AC8              ;	28/12/23
1091  8AC8              ;
1092  8AC8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1093  8AC8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1094  8AC8
1095  8AC8              Guarda_foto_entidad_a_pintar
1096  8AC8
1097  8AC8 3A 6D 89     	ld a,(Ctrl_0)
1098  8ACB CB 77        	bit 6,a
1099  8ACD 28 04        	jr z,5F
1100  8ACF
1101  8ACF              ;	Guarda la foto de Amadeus.
1102  8ACF
1103  8ACF              ;	call Draw
1104  8ACF              ;	call Guarda_movimiento_masticado	;! Provisional
1105  8ACF CD BF 80     	call Guarda_foto_registros
1106  8AD2 C9           	ret
1107  8AD3
1108  8AD3              ; ENTIDADES!
1109  8AD3              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1110  8AD3
1111  8AD3 3A AB 89     5 ld a,(Ctrl_3)
1112  8AD6 CB 5F        	bit 3,a
1113  8AD8 28 01        	jr z,1F
1114  8ADA
1115  8ADA              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1116  8ADA
1117  8ADA              4
1118  8ADA              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1119  8ADA C9           	ret
1120  8ADB
1121  8ADB              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1122  8ADB
1123  8ADB 3A AB 89     1 ld a,(Ctrl_3)
1124  8ADE CB 57        	bit 2,a
1125  8AE0 20 10        	jr nz,6F
1126  8AE2
1127  8AE2              ; Entidad guía o fantasma ???
1128  8AE2
1129  8AE2 3A 72 89     	ld a,(Ctrl_2)
1130  8AE5 CB 6F        	bit 5,a
1131  8AE7 20 10        	jr nz,3F
1132  8AE9
1133  8AE9              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1134  8AE9
1135  8AE9 18 EF        	jr 4B
1136  8AEB
1137  8AEB              ; ENTIDAD_GUÍA:
1138  8AEB              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1139  8AEB              ; _guardando "movimientos_masticados".
1140  8AEB
1141  8AEB 3A AB 89     2 ld a,(Ctrl_3)
1142  8AEE CB 57        	bit 2,a
1143  8AF0 28 07        	jr z,3F
1144  8AF2
1145  8AF2              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1146  8AF2              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1147  8AF2
1148  8AF2 CB 97        6 res 2,a
1149  8AF4 CB DF        	set 3,a
1150  8AF6 32 AB 89     	ld (Ctrl_3),a
1151  8AF9
1152  8AF9
1153  8AF9              ;	Esto sólo lo ejecuta una entidad guía.
1154  8AF9
1155  8AF9 CD A4 8E     3 	call Draw
1156  8AFC CD 89 8A     	call Guarda_movimiento_masticado
1157  8AFF CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1158  8B02
1159  8B02              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1160  8B02              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1161  8B02
1162  8B02              ;	call Convierte_guia_en_fantasma
1163  8B02 C9           	ret
1164  8B03
1165  8B03              ; *************************************************************************************************************************************************************
1166  8B03              ;
1167  8B03              ; 8/1/23
1168  8B03              ;
1169  8B03              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1170  8B03              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1171  8B03              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1172  8B03
1173  8B03              ; Destruye HL y DE !!!!!
1174  8B03
1175  8B03              Inicia_punteros_de_cajas
1176  8B03
1177  8B03 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1178  8B06 CD 9B 8B         call Extrae_address
1179  8B09 22 8F 89         ld (Puntero_store_caja),hl
1180  8B0C 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1181  8B0F 22 93 89     	ld (Indice_restore_caja),hl
1182  8B12 CD 9B 8B     	call Extrae_address
1183  8B15 22 91 89     	ld (Puntero_restore_caja),hl
1184  8B18 C9               ret
1185  8B19
1186  8B19              ; *************************************************************************************************************************************************************
1187  8B19              ;
1188  8B19              ; 8/1/23
1189  8B19              ;
1190  8B19              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1191  8B19
1192  8B19 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1193  8B1C 22 AE 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1194  8B1F C9           	ret
1195  8B20 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1196  8B23 22 B0 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1197  8B26 C9           	ret
1198  8B27
1199  8B27              ; -------------------------------------------------------------------------------------------------------------
1200  8B27              ;
1201  8B27              ; 21/9/23
1202  8B27              ;
1203  8B27
1204  8B27              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1205  8B27
1206  8B27              Limpia_album_Amadeus
1207  8B27
1208  8B27 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1209  8B2A 7E           	ld a,(hl)
1210  8B2B A7           	and a
1211  8B2C C8           	ret z
1212  8B2D
1213  8B2D 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1214  8B30 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1215  8B33 01 0B 00     	ld bc,11
1216  8B36 AF           	xor a
1217  8B37 77           	ld (hl),a
1218  8B38 ED B0        	ldir
1219  8B3A
1220  8B3A 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1221  8B3D 22 A9 89     	ld (End_Snapshot_Amadeus),hl
1222  8B40
1223  8B40 C9           	ret
1224  8B41
1225  8B41 21 61 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1226  8B44 11 62 89     	ld de,Variables_de_borrado+1
1227  8B47 01 05 00     	ld bc,5
1228  8B4A AF           	xor a
1229  8B4B 77           	ld (hl),a
1230  8B4C ED B0        	ldir
1231  8B4E C9           	ret
1232  8B4F
1233  8B4F              ; -------------------------------------------------------------------------------------------------------------
1234  8B4F              ;
1235  8B4F              ; 8/9/23
1236  8B4F              ;
1237  8B4F
1238  8B4F              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1239  8B4F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1240  8B4F
1241  8B4F              Calcula_numero_de_malotes
1242  8B4F
1243  8B4F 21 00 80     	ld hl,Album_de_fotos
1244  8B52 EB           	ex de,hl
1245  8B53 2A A3 89     	ld hl,(Stack_snapshot)
1246  8B56
1247  8B56 06 00        	ld b,0
1248  8B58 7D           	ld a,l
1249  8B59 93           	sub e
1250  8B5A 28 07        	jr z,1F
1251  8B5C
1252  8B5C              ; Nº de malotes no es "0".
1253  8B5C
1254  8B5C D6 06        2 sub 6
1255  8B5E 04           	inc b
1256  8B5F A7           	and a
1257  8B60 20 FA        	jr nz,2B
1258  8B62 78           	ld a,b
1259  8B63
1260  8B63 32 98 89     1 ld (Numero_de_malotes),a
1261  8B66 C9           	ret
1262  8B67
1263  8B67              ; -------------------------------------------------------------------------------------------------------------
1264  8B67              ;
1265  8B67              ; 8/9/23
1266  8B67              ;
1267  8B67
1268  8B67              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1269  8B67              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1270  8B67
1271  8B67              Calcula_malotes_Amadeus
1272  8B67
1273  8B67 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1274  8B6A EB           	ex de,hl
1275  8B6B 2A A9 89     	ld hl,(End_Snapshot_Amadeus)
1276  8B6E
1277  8B6E 7C           	ld a,h
1278  8B6F A7           	and a
1279  8B70 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1280  8B72
1281  8B72 06 00        	ld b,0
1282  8B74 7D           	ld a,l
1283  8B75 93           	sub e
1284  8B76 28 07        	jr z,1F
1285  8B78
1286  8B78              ; Nº de malotes no es "0".
1287  8B78
1288  8B78 D6 06        2 sub 6
1289  8B7A 04           	inc b
1290  8B7B A7           	and a
1291  8B7C 20 FA        	jr nz,2B
1292  8B7E 78           	ld a,b
1293  8B7F
1294  8B7F 32 98 89     1 ld (Numero_de_malotes),a
1295  8B82 C9           	ret
1296  8B83
1297  8B83              ; -------------------------------------------------------------------------------------------------------------
1298  8B83              ;
1299  8B83              ; 28/2/23
1300  8B83              ;
1301  8B83
1302  8B83              Calcula_numero_de_disparotes
1303  8B83
1304  8B83 21 56 80     	ld hl,Album_de_fotos_disparos
1305  8B86 EB           	ex de,hl
1306  8B87 2A A7 89     	ld hl,(End_Snapshot_disparos)
1307  8B8A
1308  8B8A 06 00        	ld b,0
1309  8B8C 7D           	ld a,l
1310  8B8D 93           	sub e
1311  8B8E 28 07        	jr z,1F
1312  8B90
1313  8B90              ; Nº de malotes no es "0".
1314  8B90
1315  8B90 D6 06        2 sub 6
1316  8B92 04           	inc b
1317  8B93 A7           	and a
1318  8B94 20 FA        	jr nz,2B
1319  8B96 78           	ld a,b
1320  8B97
1321  8B97 32 AD 89     1 ld (Numero_de_disparotes),a
1322  8B9A C9           	ret
1323  8B9B
1324  8B9B              ; *************************************************************************************************************************************************************
1325  8B9B              ;
1326  8B9B              ; 20/10/22
1327  8B9B              ;
1328  8B9B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1329  8B9B              ;
1330  8B9B              ; Destruye el puntero y DE !!!!!
1331  8B9B
1332  8B9B 5E           Extrae_address ld e,(hl)
1333  8B9C 23           	inc hl
1334  8B9D 56           	ld d,(hl)
1335  8B9E 2B           	dec hl
1336  8B9F EB           	ex de,hl
1337  8BA0 C9           	ret
1338  8BA1
1339  8BA1              ; *************************************************************************************************************************************************************
1340  8BA1              ;
1341  8BA1              ;	20/1/24
1342  8BA1              ;
1343  8BA1              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1344  8BA1              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1345  8BA1              ;
1346  8BA1              ;   Destruye HL y BC !!!!!,
1347  8BA1              ;
1348  8BA1              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1349  8BA1              ;					"0" ..... Izquierda.
1350  8BA1
1351  8BA1              Inicia_Puntero_objeto
1352  8BA1
1353  8BA1 3A 5F 89     	ld a,(Cuad_objeto)
1354  8BA4 E6 01        	and 1
1355  8BA6 F5           	push af
1356  8BA7 CC C3 8B     	call z,Inicia_puntero_objeto_izq
1357  8BAA F1           	pop af
1358  8BAB C8           	ret z
1359  8BAC CD B0 8B     	call Inicia_puntero_objeto_der
1360  8BAF C9           	ret
1361  8BB0
1362  8BB0              ; Arrancamos desde la parte izquierda de la pantalla.
1363  8BB0              ; Iniciamos (Indice_Sprite_der).
1364  8BB0
1365  8BB0 2A 55 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1366  8BB3 22 59 89     	ld (Puntero_DESPLZ_der),hl
1367  8BB6 CD 9B 8B     	call Extrae_address
1368  8BB9 22 4F 89     	ld (Puntero_objeto),hl
1369  8BBC
1370  8BBC 2A 57 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1371  8BBF 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
1372  8BC2 C9           	ret
1373  8BC3
1374  8BC3              ; Arrancamos desde la parte derecha de la pantalla.
1375  8BC3              ; Iniciamos (Indice_Sprite_izq).
1376  8BC3
1377  8BC3 2A 57 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1378  8BC6 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
1379  8BC9 CD 9B 8B     	call Extrae_address
1380  8BCC 22 4F 89     	ld (Puntero_objeto),hl
1381  8BCF
1382  8BCF 2A 55 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1383  8BD2 22 59 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1384  8BD5 C9           	ret
1385  8BD6
1386  8BD6              ; **************************************************************************************************
1387  8BD6              ;
1388  8BD6              ;	31/01/24
1389  8BD6              ;
1390  8BD6              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1391  8BD6
1392  8BD6              Restore_entidad
1393  8BD6
1394  8BD6 2A 8F 89     	ld hl,(Puntero_store_caja)
1395  8BD9 11 4A 89     	ld de,Bandeja_DRAW
1396  8BDC 7E           	ld a,(hl)
1397  8BDD 12           	ld (de),a
1398  8BDE 23           	inc hl 											; (Tipo).
1399  8BDF
1400  8BDF 11 51 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1401  8BE2 01 02 00     	ld bc,2
1402  8BE5 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1403  8BE7
1404  8BE7 13           	inc de
1405  8BE8 7E           	ld a,(hl)
1406  8BE9 12           	ld (de),a 										; Transferimos (Attr).
1407  8BEA 23           	inc hl
1408  8BEB
1409  8BEB 11 60 89     	ld de,Impacto
1410  8BEE
1411  8BEE 7E           	ld a,(hl)
1412  8BEF 12           	ld (de),a 										; Transferimos (Impacto).
1413  8BF0 23           	inc hl
1414  8BF1
1415  8BF1 13           	inc de
1416  8BF2
1417  8BF2 01 06 00     	ld bc,6
1418  8BF5 ED B0        	ldir
1419  8BF7
1420  8BF7 01 07 00     	ld bc,7
1421  8BFA ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1422  8BFC              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1423  8BFC 11 72 89     	ld de,Ctrl_2
1424  8BFF
1425  8BFF 7E           	ld a,(hl)
1426  8C00 12           	ld (de),a 										; Transferimos (Ctrl_2).
1427  8C01
1428  8C01 C9           	ret
1429  8C02
1430  8C02              ; **************************************************************************************************
1431  8C02              ;
1432  8C02              ;	08/05/23
1433  8C02              ;
1434  8C02              ;	Incrementamos los dos punteros de entidades. (+1).
1435  8C02
1436  8C02              Incrementa_punteros_de_cajas
1437  8C02
1438  8C02 2A 91 89     	ld hl,(Puntero_restore_caja)
1439  8C05 22 8F 89     	ld (Puntero_store_caja),hl
1440  8C08 2A 93 89     	ld hl,(Indice_restore_caja)
1441  8C0B 23           	inc hl
1442  8C0C 23           	inc hl
1443  8C0D 22 93 89     	ld (Indice_restore_caja),hl
1444  8C10 CD 9B 8B         call Extrae_address
1445  8C13 22 91 89         ld (Puntero_restore_caja),hl
1446  8C16 C9               ret
1447  8C17
1448  8C17              ; **************************************************************************************************
1449  8C17              ;
1450  8C17              ;	21/12/23
1451  8C17              ;
1452  8C17              ;	Restore_Amadeus
1453  8C17              ;
1454  8C17              ;	Cargamos en DRAW los parámetros de Amadeus.
1455  8C17              ;
1456  8C17
1457  8C17 E5           Restore_Amadeus	push hl
1458  8C18 D5           	push de
1459  8C19 C5            	push bc
1460  8C1A 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1461  8C1D 11 4A 89     	ld de,Bandeja_DRAW
1462  8C20 01 2A 00     	ld bc,42
1463  8C23 ED B0        	ldir
1464  8C25 C1           	pop bc
1465  8C26 D1           	pop de
1466  8C27 E1           	pop hl
1467  8C28 C9           	ret
1468  8C29
1469  8C29              ; *************************************************************************************************************************************************************
1470  8C29              ;
1471  8C29              ;	21/12/23
1472  8C29              ;
1473  8C29              ;	Store_Amadeus
1474  8C29              ;
1475  8C29              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1476  8C29              ;
1477  8C29              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1478  8C29              ;
1479  8C29              ;	DESTRUYE: HL y BC y DE.
1480  8C29
1481  8C29 21 4A 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1482  8C2C 01 2A 00     	ld bc,42
1483  8C2F ED B0        	ldir
1484  8C31 C9           	ret
1485  8C32
1486  8C32              ; -----------------------------------------------------------
1487  8C32              ;
1488  8C32              ;	21/12/23
1489  8C32              ;
1490  8C32              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1491  8C32              ;
1492  8C32              ;	Destruye: HL,BC,DE,A
1493  8C32
1494  8C32 21 4A 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1495  8C35 01 29 00     	ld bc,41
1496  8C38 AF           	xor a
1497  8C39 77           	ld (hl),a
1498  8C3A 11 4B 89     	ld de,Bandeja_DRAW+1
1499  8C3D ED B0        	ldir
1500  8C3F C9           	ret
1501  8C40
1502  8C40              ; -----------------------------------------------------------
1503  8C40
1504  8C40              ; Teclado.
1505  8C40
1506  8C40 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1507  8C42 DB FE        	in a,($fe)
1508  8C44 E6 01        	and $01
1509  8C46 28 02        	jr z,1f
1510  8C48 18 F6        	jr Pulsa_ENTER
1511  8C4A C9           1 ret
1512  8C4B
1513  8C4B              ; **************************************************************************************************
1514  8C4B              ;
1515  8C4B              ; Temporización.
1516  8C4B
1517  8C4B              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1518  8C4B              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1519  8C4B              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1520  8C4B              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1521  8C4B
1522  8C4B              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1523  8C4B              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1524  8C4B              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1525  8C4B
1526  8C4B              ; A partir de $4f61 no hace falta DELAY.
1527  8C4B
1528  8C4B              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1529  8C4B
1530  8C4B 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1531  8C4E 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1532  8C4F 78           	LD A,B
1533  8C50 A7           	AND A
1534  8C51 20 FB        	JR NZ,wait
1535  8C53 C9           	RET
1536  8C54
1537  8C54              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1538  8C54              ;
1539  8C54              ;	5/3/23
1540  8C54              ;
1541  8C54              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1542  8C54
1543  8C54              Movimiento_Amadeus
1544  8C54
1545  8C54              ; Disparo.
1546  8C54
1547  8C54 3A C3 89     	ld a,(Disparo_Amadeus)
1548  8C57 A7           	and a
1549  8C58 20 02        	jr nz,1F
1550  8C5A 18 15        	jr 2F
1551  8C5C
1552  8C5C 3E F7        1 ld a,$f7													; "5" para disparar.
1553  8C5E DB FE        	in a,($fe)
1554  8C60 E6 10        	and $10
1555  8C62
1556  8C62 F5           	push af
1557  8C63 CC A4 99     	call z,Genera_disparo
1558  8C66 F1           	pop af
1559  8C67 20 08        	jr nz,2F
1560  8C69
1561  8C69 3A C3 89     	ld a,(Disparo_Amadeus)
1562  8C6C EE 01        	xor 1
1563  8C6E 32 C3 89     	ld (Disparo_Amadeus),a
1564  8C71 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1565  8C73 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1566  8C75 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1567  8C77 CC 77 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1568  8C7A
1569  8C7A 3E F7        	ld a,$f7
1570  8C7C DB FE        	in a,($fe)
1571  8C7E E6 01        	and $01
1572  8C80 C8           	ret z
1573  8C81
1574  8C81 3E F7        	ld a,$f7
1575  8C83 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1576  8C85 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1577  8C87 CC 54 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1578  8C8A C9           	ret
1579  8C8B
1580  8C8B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1581  8C8B              ;
1582  8C8B              ;	Rutina provisional para que los malotes cagen balas.
1583  8C8B
1584  8C8B              Detecta_disparo_entidad
1585  8C8B
1586  8C8B 3A C6 89     	ld a,(Disparo_entidad)
1587  8C8E A7           	and a
1588  8C8F C8           	ret z
1589  8C90
1590  8C90              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1591  8C90
1592  8C90              ;	ld a,$7f				; Detecta SPACE.
1593  8C90              ;	in a,($fe)
1594  8C90              ;	and 1
1595  8C90              ;	ret nz
1596  8C90
1597  8C90 CD A4 99     	call Genera_disparo
1598  8C93 C9           	ret
1599  8C94
1600  8C94              ; ----------------------------------------------------------------------
1601  8C94              ;
1602  8C94              ;	8/9/23
1603  8C94
1604  8C94 2A A9 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1605  8C97 2B            	dec hl
1606  8C98 7E           	ld a,(hl)
1607  8C99 A7           	and a
1608  8C9A C8           	ret z										; Salimos si es álbum está vacío.
1609  8C9B
1610  8C9B 11 66 89     	ld de,Variables_de_borrado+5
1611  8C9E 01 06 00     	ld bc,6
1612  8CA1 ED B8        	lddr
1613  8CA3 C9           	ret
1614  8CA4
1615  8CA4              ; ----------------------------------------------------------------------
1616  8CA4              ;
1617  8CA4              ;	9/9/23
1618  8CA4
1619  8CA4              Repone_datos_de_borrado_Amadeus
1620  8CA4
1621  8CA4 21 61 89     	ld hl,Variables_de_borrado
1622  8CA7 11 AC 80     	ld de,Album_de_fotos_Amadeus
1623  8CAA 01 06 00     	ld bc,6
1624  8CAD ED B0        	ldir
1625  8CAF
1626  8CAF EB           	ex de,hl
1627  8CB0 22 A9 89     	ld (End_Snapshot_Amadeus),hl
1628  8CB3
1629  8CB3 C9           	ret
1630  8CB4
1631  8CB4              ; ----------------------------------------------------------------------
1632  8CB4              ;
1633  8CB4              ;	27/10/23
1634  8CB4              ;
1635  8CB4
1636  8CB4              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1637  8CB4              ;	_ Album_de_fotos correspondiente.
1638  8CB4
1639  8CB4              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1640  8CB4              ;	_ durante el proceso de escritura.
1641  8CB4
1642  8CB4              Repone_datos_de_borrado
1643  8CB4
1644  8CB4 ED 5B A3 89  	ld de,(Stack_snapshot)
1645  8CB8 21 61 89     	ld hl,Variables_de_borrado
1646  8CBB 01 06 00     	ld bc,6
1647  8CBE ED B0        	ldir
1648  8CC0
1649  8CC0 EB           	ex de,hl
1650  8CC1 22 A3 89     	ld (Stack_snapshot),hl
1651  8CC4
1652  8CC4 C9           	ret
1653  8CC5
1654  8CC5              ; --------------------------------------------------------------------------------------
1655  8CC5
1656  8CC5              Pinta_Amadeus
1657  8CC5
1658  8CC5 CD 67 8B        	call Calcula_malotes_Amadeus
1659  8CC8 CD 3D 92     	call Extrae_foto_Amadeus
1660  8CCB CD 27 8B     	call Limpia_album_Amadeus
1661  8CCE
1662  8CCE C9           	ret
1663  8CCF
1664  8CCF              Pinta_entidades
1665  8CCF
1666  8CCF              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1667  8CCF
1668  8CCF 3A AB 89     	ld a,(Ctrl_3)
1669  8CD2 CB 47        	bit 0,a
1670  8CD4 C8           	ret z
1671  8CD5
1672  8CD5 CD 4F 8B     	call Calcula_numero_de_malotes
1673  8CD8 CD BB 91     	call Extrae_foto_entidades
1674  8CDB CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1675  8CDE
1676  8CDE C9           	ret
1677  8CDF
1678  8CDF              ; -----------------------------------------------------------------------------------
1679  8CDF              ;
1680  8CDF              ;	10/12/23
1681  8CDF              ;
1682  8CDF              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1683  8CDF
1684  8CDF              Actualiza_relojes
1685  8CDF
1686  8CDF 3A AB 89     	ld a,(Ctrl_3)
1687  8CE2 CB 47        	bit 0,a
1688  8CE4 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1689  8CE5
1690  8CE5 21 BE 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1691  8CE8 34           	inc (hl)
1692  8CE9
1693  8CE9 34           	inc (hl)
1694  8CEA 35           	dec (hl)
1695  8CEB C0           	ret nz
1696  8CEC
1697  8CEC 21 BF 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1698  8CEF 34           	inc (hl)
1699  8CF0 C9           	ret
1700  8CF1
1701  8CF1              ; ---------------------------------------------------------------
1702  8CF1
1703  8CF1              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8CF1              ;---------------------------------------------------------------------------------------------------------------
   2+ 8CF1              ;
   3+ 8CF1              ;   19/1/24
   4+ 8CF1              ;
   5+ 8CF1              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8CF1              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8CF1              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8CF1              ;	_ de la 1ª entidad del Nivel.
   9+ 8CF1              ;
  10+ 8CF1              ;	MODIFICA: HL,DE y A.
  11+ 8CF1              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8CF1
  13+ 8CF1              Inicializa_Nivel
  14+ 8CF1
  15+ 8CF1 2A CA 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8CF4 CD 9B 8B     	call Extrae_address
  17+ 8CF7 7E           	ld a,(hl)
  18+ 8CF8 32 95 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8CFB 23           	inc hl
  20+ 8CFC CD 06 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8CFF 22 CC 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8D02 CD 0F 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D05 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D06
  25+ 8D06              ; ----------------------
  26+ 8D06
  27+ 8D06 11 74 89     Fija_velocidades ld de,Perfiles_de_velocidad
  28+ 8D09 01 04 00     	ld bc,4
  29+ 8D0C ED B0        	ldir
  30+ 8D0E C9           	ret
  31+ 8D0F
  32+ 8D0F 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  33+ 8D10 CD 20 8E         call Calcula_salto_en_BC
  34+ 8D13 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  35+ 8D16 A7               and a
  36+ 8D17 ED 4A            adc hl,bc
  37+ 8D19 CD 9B 8B         call Extrae_address
  38+ 8D1C 22 80 89         ld (Puntero_indice_mov),hl
  39+ 8D1F C9               ret
  40+ 8D20
  41+ 8D20              ;---------------------------------------------------------------------------------------------------------------
  42+ 8D20              ;
  43+ 8D20              ;   5/1/24
  44+ 8D20              ;
  45+ 8D20              ;	Destruye A,BC,HL,DE
  46+ 8D20
  47+ 8D20              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  48+ 8D20              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  49+ 8D20
  50+ 8D20              Inicia_Entidades
  51+ 8D20
  52+ 8D20              ; Preparamos los punteros de las cajas de entidades:
  53+ 8D20
  54+ 8D20 CD 03 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  55+ 8D23              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  56+ 8D23 CD 87 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  57+ 8D26
  58+ 8D26 2A CC 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  59+ 8D29
  60+ 8D29 22 CC 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  61+ 8D2C
  62+ 8D2C CD CE 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  63+ 8D2F
  64+ 8D2F 2A CC 89     	ld hl,(Datos_de_nivel)
  65+ 8D32
  66+ 8D32              ; En este punto:
  67+ 8D32              ;
  68+ 8D32              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  69+ 8D32              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  70+ 8D32
  71+ 8D32 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  72+ 8D33
  73+ 8D33 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  74+ 8D34 CD 20 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  75+ 8D37
  76+ 8D37 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
  77+ 8D3A CD 28 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
  78+ 8D3D
  79+ 8D3D CD 32 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  80+ 8D40
  81+ 8D40              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  82+ 8D40
  83+ 8D40 CD F0 8D     	call Busca_mov_masticados_segun_tipo
  84+ 8D43
  85+ 8D43 A7           	and a
  86+ 8D44 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  87+ 8D46
  88+ 8D46              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  89+ 8D46
  90+ 8D46              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  91+ 8D46              ;	_ de este tipo de entidad.
  92+ 8D46
  93+ 8D46 CD 8E 99     	call Situa_en_contador_general_de_mov_masticados
  94+ 8D49 CD 9B 99     	call Transfiere_datos_de_contadores
  95+ 8D4C
  96+ 8D4C 18 06        	jr 4F
  97+ 8D4E
  98+ 8D4E CD 5D 8A     3 call Construye_movimientos_masticados_entidad
  99+ 8D51
 100+ 8D51              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 101+ 8D51              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 102+ 8D51              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 103+ 8D51              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 104+ 8D51              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 105+ 8D51
 106+ 8D51 CD AE 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 107+ 8D54              ;																; _ Mov_masticados ya generados.
 108+ 8D54 CD 86 8D     4 call Guarda_foto_de_mov_masticado
 109+ 8D57
 110+ 8D57              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 111+ 8D57
 112+ 8D57 2A 67 89     	ld hl,(Puntero_de_impresion)
 113+ 8D5A CD A5 9E     	call Genera_coordenadas
 114+ 8D5D CD 59 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 115+ 8D60 CD 90 8D     	call Limpiamos_bandeja_DRAW
 116+ 8D63 CD 02 8C     	call Incrementa_punteros_de_cajas
 117+ 8D66
 118+ 8D66              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 119+ 8D66              ; _ entidad del Nivel.
 120+ 8D66
 121+ 8D66 3A AC 89     	ld a,(Ctrl_4)
 122+ 8D69 E6 F0        	and $f0
 123+ 8D6B 32 AC 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 124+ 8D6E
 125+ 8D6E              ; Siguiente entidad del Nivel.
 126+ 8D6E
 127+ 8D6E 2A CC 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 128+ 8D71 23           	inc hl 														; _ entidad del Nivel.
 129+ 8D72
 130+ 8D72 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 131+ 8D73
 132+ 8D73 10 B4        	djnz 2B
 133+ 8D75
 134+ 8D75 C9           	ret
 135+ 8D76
 136+ 8D76              ; ---------------------------------------------------------------------
 137+ 8D76              ;
 138+ 8D76              ;	30/01/24
 139+ 8D76
 140+ 8D76
 141+ 8D76              Store_Restore_cajas
 142+ 8D76
 143+ 8D76              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 144+ 8D76
 145+ 8D76 2A 67 89     	ld hl,(Puntero_de_impresion)
 146+ 8D79 CD A5 9E     	call Genera_coordenadas
 147+ 8D7C CD 59 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 148+ 8D7F CD 90 8D     	call Limpiamos_bandeja_DRAW
 149+ 8D82
 150+ 8D82              ; 	Entidad_sospechosa. 20/4/23
 151+ 8D82
 152+ 8D82              ;	ld a,(Impacto)
 153+ 8D82              ;	and a
 154+ 8D82              ;	jr z,1F
 155+ 8D82
 156+ 8D82              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 157+ 8D82              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 158+ 8D82              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 159+ 8D82              ;	adc hl,bc 											; _ "0" más adelante.
 160+ 8D82              ;	ld (Entidad_sospechosa_de_colision),hl
 161+ 8D82
 162+ 8D82
 163+ 8D82              ;1 ld hl,(Puntero_restore_caja)
 164+ 8D82              ;	ld a,(hl)
 165+ 8D82              ;	and a
 166+ 8D82              ;	push af
 167+ 8D82              ;	jr z,2F
 168+ 8D82
 169+ 8D82              ;	di
 170+ 8D82              ;	ld de,Bandeja_DRAW
 171+ 8D82              ;	ld bc,42
 172+ 8D82              ;	ldir
 173+ 8D82              ;	ei
 174+ 8D82
 175+ 8D82 CD 02 8C     2 call Incrementa_punteros_de_cajas
 176+ 8D85 C9           	ret
 177+ 8D86
 178+ 8D86
 179+ 8D86              ; ---------------------------------------------------------------------
 180+ 8D86              ;
 181+ 8D86              ;	29/01/24
 182+ 8D86
 183+ 8D86 CD B2 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 184+ 8D89 CD BF 80     	call Guarda_foto_registros
 185+ 8D8C              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 186+ 8D8C              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 187+ 8D8C              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 188+ 8D8C              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 189+ 8D8C
 190+ 8D8C CD 9B 8D     	call Decrementa_Contador_de_mov_masticados
 191+ 8D8F C9           	ret
 192+ 8D90
 193+ 8D90              ; ---------------------------------------------------------------------
 194+ 8D90              ;
 195+ 8D90              ;	25/01/24
 196+ 8D90
 197+ 8D90 21 4A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 198+ 8D93 06 2A        	ld b,42
 199+ 8D95 AF           	xor a
 200+ 8D96
 201+ 8D96 77           1 ld (hl),a
 202+ 8D97 23           	inc hl
 203+ 8D98 10 FC        	djnz 1B
 204+ 8D9A
 205+ 8D9A C9           	ret
 206+ 8D9B
 207+ 8D9B              ; ---------------------------------------------------------------------
 208+ 8D9B              ;
 209+ 8D9B              ;	22/01/24
 210+ 8D9B
 211+ 8D9B 2A 6B 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 212+ 8D9E 2B           	dec hl
 213+ 8D9F
 214+ 8D9F 24           	inc h
 215+ 8DA0 25           	dec h
 216+ 8DA1 20 05        	jr nz,1F
 217+ 8DA3
 218+ 8DA3 7D           	ld a,l
 219+ 8DA4 A7           	and a
 220+ 8DA5 CC AC 8D     	call z,Reinicia_entidad_maliciosa
 221+ 8DA8
 222+ 8DA8 22 6B 89     1 ld (Contador_de_mov_masticados),hl
 223+ 8DAB C9           	ret
 224+ 8DAC
 225+ 8DAC              ; ---------------------------------------------------------------------
 226+ 8DAC              ;
 227+ 8DAC              ;	9/2/24
 228+ 8DAC
 229+ 8DAC 18 FE        Reinicia_entidad_maliciosa jr $
 230+ 8DAE
 231+ 8DAE              ; ---------------------------------------------------------------------
 232+ 8DAE              ;
 233+ 8DAE              ;	22/01/24
 234+ 8DAE
 235+ 8DAE 21 AC 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 236+ 8DB1 CB 46        	bit 0,(hl)
 237+ 8DB3 20 0D        	jr nz,1F
 238+ 8DB5 CB 4E        	bit 1,(hl)
 239+ 8DB7 20 0C        	jr nz,2F
 240+ 8DB9 CB 56        	bit 2,(hl)
 241+ 8DBB 20 0B        	jr nz,3F
 242+ 8DBD CB 5E        	bit 3,(hl)
 243+ 8DBF 20 0A        	jr nz,4F
 244+ 8DC1 C9           	ret
 245+ 8DC2
 246+ 8DC2 CB E6        1 set 4,(hl)
 247+ 8DC4 C9           	ret
 248+ 8DC5 CB EE        2 set 5,(hl)
 249+ 8DC7 C9           	ret
 250+ 8DC8 CB F6        3 set 6,(hl)
 251+ 8DCA C9           	ret
 252+ 8DCB CB FE        4 set 7,(hl)
 253+ 8DCD C9           	ret
 254+ 8DCE
 255+ 8DCE              ; ---------------------------------------------------------------------
 256+ 8DCE              ;
 257+ 8DCE              ;	23/01/24
 258+ 8DCE              ;
 259+ 8DCE              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 260+ 8DCE              ;
 261+ 8DCE              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 262+ 8DCE              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 263+ 8DCE              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 264+ 8DCE              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 265+ 8DCE
 266+ 8DCE              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 267+ 8DCE
 268+ 8DCE 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 269+ 8DCF 3D           	dec a
 270+ 8DD0 20 06        	jr nz,1F
 271+ 8DD2
 272+ 8DD2              ; --- Tipo_1
 273+ 8DD2
 274+ 8DD2 21 AC 89     	ld hl,Ctrl_4
 275+ 8DD5 CB C6        	set 0,(hl)
 276+ 8DD7 C9           	ret
 277+ 8DD8
 278+ 8DD8 3D           1 dec a
 279+ 8DD9 20 06        	jr nz,2F
 280+ 8DDB
 281+ 8DDB              ; --- Tipo_2
 282+ 8DDB
 283+ 8DDB 21 AC 89     	ld hl,Ctrl_4
 284+ 8DDE CB CE        	set 1,(hl)
 285+ 8DE0 C9           	ret
 286+ 8DE1
 287+ 8DE1 3D           2 dec a
 288+ 8DE2 20 06        	jr nz,3F
 289+ 8DE4
 290+ 8DE4              ; --- Tipo_3
 291+ 8DE4
 292+ 8DE4 21 AC 89     	ld hl,Ctrl_4
 293+ 8DE7 CB D6        	set 2,(hl)
 294+ 8DE9 C9           	ret
 295+ 8DEA
 296+ 8DEA              ; --- Tipo_3
 297+ 8DEA
 298+ 8DEA 21 AC 89     3 ld hl,Ctrl_4
 299+ 8DED CB D6        	set 2,(hl)
 300+ 8DEF C9           	ret
 301+ 8DF0
 302+ 8DF0              ; ---------------------------------------------------------------------
 303+ 8DF0              ;
 304+ 8DF0              ;	22/01/24
 305+ 8DF0
 306+ 8DF0 21 AC 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 307+ 8DF3 CB 46        	bit 0,(hl)
 308+ 8DF5 20 0E        	jr nz,1F
 309+ 8DF7
 310+ 8DF7 CB 4E        	bit 1,(hl)
 311+ 8DF9 20 10        	jr nz,2F
 312+ 8DFB
 313+ 8DFB CB 56        	bit 2,(hl)
 314+ 8DFD 20 12        	jr nz,3F
 315+ 8DFF
 316+ 8DFF CB 5E        	bit 3,(hl)
 317+ 8E01 20 14        	jr nz,4F
 318+ 8E03 18 19        	jr 6F
 319+ 8E05
 320+ 8E05              ; Entidad_de_Tipo_1.
 321+ 8E05
 322+ 8E05 CB 66        1 bit 4,(hl)
 323+ 8E07 28 15        	jr z,6F
 324+ 8E09 18 10        	jr 5F
 325+ 8E0B
 326+ 8E0B              ; Entidad_de_Tipo_2.
 327+ 8E0B
 328+ 8E0B CB 6E        2 bit 5,(hl)
 329+ 8E0D 28 0F        	jr z,6F
 330+ 8E0F 18 0A        	jr 5F
 331+ 8E11
 332+ 8E11              ; Entidad_de_Tipo_3.
 333+ 8E11
 334+ 8E11 CB 76        3 bit 6,(hl)
 335+ 8E13 28 09        	jr z,6F
 336+ 8E15 18 04        	jr 5F
 337+ 8E17
 338+ 8E17              ; Entidad_de_Tipo_4.
 339+ 8E17
 340+ 8E17 CB 7E        4 bit 7,(hl)
 341+ 8E19 28 03        	jr z,6F
 342+ 8E1B
 343+ 8E1B              ; Esta entidad TIENE MOV_MASTICADOS.
 344+ 8E1B
 345+ 8E1B AF           5 xor a
 346+ 8E1C 3C           	inc a
 347+ 8E1D C9           	ret
 348+ 8E1E
 349+ 8E1E              ; Esta entidad NO TIENE MOV_MASTICADOS.
 350+ 8E1E
 351+ 8E1E AF           6 xor a
 352+ 8E1F C9           	ret
 353+ 8E20
 354+ 8E20              ;	------------------------------------------------------------------------------------
 355+ 8E20              ;
 356+ 8E20              ;	12/01/24
 357+ 8E20              ;
 358+ 8E20              ;	INPUTS:	A contiene el (Tipo) de entidad.
 359+ 8E20              ;
 360+ 8E20              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 361+ 8E20              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 362+ 8E20
 363+ 8E20 CB 27        Calcula_salto_en_BC sla a
 364+ 8E22 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 365+ 8E24 4F           	ld c,a
 366+ 8E25 06 00        	ld b,0
 367+ 8E27 C9           	ret
 368+ 8E28
 369+ 8E28              ; ------------------------------------------------------------------
 370+ 8E28              ;
 371+ 8E28              ;	19/1/24
 372+ 8E28              ;
 373+ 8E28              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 374+ 8E28              ;	Actualiza (Datos_de_entidad) con esa dirección.
 375+ 8E28
 376+ 8E28 A7           Situa_en_datos_de_definicion and a
 377+ 8E29 ED 4A        	adc hl,bc
 378+ 8E2B CD 9B 8B     	call Extrae_address
 379+ 8E2E 22 9B 89         ld (Datos_de_entidad),hl
 380+ 8E31 C9           	ret
 381+ 8E32
 382+ 8E32              ; ------------------------------------------------------------------
 383+ 8E32
 384+ 8E32              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 385+ 8E32              ; 	inc de
 386+ 8E32              ; 	inc de
 387+ 8E32              ; 	ex de,hl
 388+ 8E32              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 389+ 8E32              ; 	ret
 390+ 8E32
 391+ 8E32              ; ----------------------------------------------------------------------------------------------------------
 392+ 8E32              ;
 393+ 8E32              ;	31/1/24
 394+ 8E32              ;
 395+ 8E32              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 396+ 8E32              ;	_ de entidad.
 397+ 8E32              ;
 398+ 8E32              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 399+ 8E32              ;
 400+ 8E32              ;
 401+ 8E32              ;	MODIFICA: HL,DE y BC
 402+ 8E32
 403+ 8E32
 404+ 8E32              Definicion_de_entidad_a_bandeja_DRAW
 405+ 8E32
 406+ 8E32 11 4A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 407+ 8E35 01 03 00     	ld bc,3
 408+ 8E38 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 409+ 8E3A              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 410+ 8E3A 11 54 89     	ld de,Attr									; DE en (Attr).
 411+ 8E3D 01 05 00     	ld bc,5
 412+ 8E40 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 413+ 8E42              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 414+ 8E42 11 5D 89     	ld de,Posicion_inicio
 415+ 8E45 01 03 00     	ld bc,3
 416+ 8E48 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 417+ 8E4A              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 418+ 8E4A 11 69 89     	ld de,Puntero_de_almacen_de_mov_masticados
 419+ 8E4D 01 02 00     	ld bc,2
 420+ 8E50 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 421+ 8E52
 422+ 8E52 11 73 89     	ld de,Frames_explosion
 423+ 8E55 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 424+ 8E57 12           	ld (de),a 									; Vuelco (Frames_explosion).
 425+ 8E58
 426+ 8E58 C9           	ret
 427+ 8E59
 428+ 8E59              ; ----------------------------------------------------------------------------------------------------------
 429+ 8E59              ;
 430+ 8E59              ;	22/01/24
 431+ 8E59              ;
 432+ 8E59              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 433+ 8E59              ;
 434+ 8E59              ;	Las cajas contienen entidades iniciadas:
 435+ 8E59              ;
 436+ 8E59              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 437+ 8E59              ;
 438+ 8E59              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 439+ 8E59              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 440+ 8E59              ;
 441+ 8E59              ;	MODIFICA: HL,DE y BC
 442+ 8E59
 443+ 8E59 21 4A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 444+ 8E5C ED 5B 8F 89  	ld de,(Puntero_store_caja)
 445+ 8E60 7E           	ld a,(hl)
 446+ 8E61 12           	ld (de),a
 447+ 8E62 13           	inc de 													; (Tipo).
 448+ 8E63
 449+ 8E63 21 51 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 450+ 8E66 01 02 00     	ld bc,2
 451+ 8E69 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 452+ 8E6B              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 453+ 8E6B 23           	inc hl
 454+ 8E6C 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 455+ 8E6D 12           	ld (de),a
 456+ 8E6E 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 457+ 8E6F
 458+ 8E6F 21 60 89     	ld hl,Impacto
 459+ 8E72 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 460+ 8E73 12           	ld (de),a
 461+ 8E74 13           	inc de 													; (Impacto), volcado a la caja.
 462+ 8E75              ;															; DE situado ahora en (Variables_de_borrado).
 463+ 8E75 23           	inc hl
 464+ 8E76 01 06 00     	ld bc,6
 465+ 8E79 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 466+ 8E7B              ; 															; DE situado ahora en (Puntero_de_impresión).
 467+ 8E7B 01 07 00     	ld bc,7
 468+ 8E7E ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 469+ 8E80              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 470+ 8E80              ;															; HL apunta ahora a (Columnas).
 471+ 8E80 21 72 89     	ld hl,Ctrl_2
 472+ 8E83 7E           	ld a,(hl)
 473+ 8E84 12           	ld (de),a 												; Volcamos (Ctrl_2).
 474+ 8E85 13           	inc de
 475+ 8E86
 476+ 8E86 C9           	ret
 477+ 8E87
 478+ 8E87              ;---------------------------------------------------------------------------------------------------------------
 479+ 8E87              ;
 480+ 8E87              ;	5/1/24
 481+ 8E87              ;
 482+ 8E87              ;	INICIALIZA (Numero_parcial_de_entidades).
 483+ 8E87              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 484+ 8E87              ;
 485+ 8E87              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 486+ 8E87              ;
 487+ 8E87              ;	(Numero_parcial_de_entidades)="7".
 488+ 8E87              ;
 489+ 8E87              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 490+ 8E87              ;
 491+ 8E87              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 492+ 8E87              ;
 493+ 8E87              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 494+ 8E87              ;	MODIFICA: A y B.
 495+ 8E87              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 496+ 8E87
 497+ 8E87              Inicializa_Numero_parcial_de_entidades
 498+ 8E87
 499+ 8E87              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 500+ 8E87
 501+ 8E87 3A 95 89     	ld a,(Numero_de_entidades)
 502+ 8E8A A7           	and a
 503+ 8E8B
 504+ 8E8B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 505+ 8E8B              ;	jr z,$
 506+ 8E8B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 507+ 8E8B
 508+ 8E8B 20 03        	jr nz,3F
 509+ 8E8D
 510+ 8E8D              ; ---------- ---------- ----------
 511+ 8E8D
 512+ 8E8D              ;! RESET para pruebas. Omitir esta línea en modo normal.
 513+ 8E8D              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 514+ 8E8D
 515+ 8E8D CD F1 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 516+ 8E90
 517+ 8E90              ; ---------- ---------- ----------
 518+ 8E90
 519+ 8E90 3A 95 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 520+ 8E93 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 521+ 8E95 38 08        	jr c,1F
 522+ 8E97
 523+ 8E97              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 524+ 8E97              ; Actualizamos variables.
 525+ 8E97
 526+ 8E97 3E 07        	ld a,7
 527+ 8E99 32 96 89     	ld (Numero_parcial_de_entidades),a
 528+ 8E9C 47           	ld b,a
 529+ 8E9D 18 04        	jr 2F
 530+ 8E9F
 531+ 8E9F              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 532+ 8E9F              ; (Numero_de_entidades)="0".
 533+ 8E9F
 534+ 8E9F 32 96 89     1 ld (Numero_parcial_de_entidades),a
 535+ 8EA2 47           	ld b,a
 536+ 8EA3 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1704  8EA4              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8EA4              ; ******************************************************************************************************************************************************************************************
   2+ 8EA4              ;
   3+ 8EA4              ; 26/06/23
   4+ 8EA4              ;
   5+ 8EA4              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8EA4
   7+ 8EA4              Draw
   8+ 8EA4
   9+ 8EA4 CD 91 91     	call Prepara_draw
  10+ 8EA7 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8EA8 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8EA9 28 05        	jr z,2F
  13+ 8EAB
  14+ 8EAB 3A 5F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8EAE 18 0C        	jr 1F
  16+ 8EB0
  17+ 8EB0 2A 5D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8EB3 22 4D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8EB6 CD 45 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8EB9              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8EB9
  22+ 8EB9 CD F2 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8EBC
  24+ 8EBC 3A 6D 89     1 ld a,(Ctrl_0)
  25+ 8EBF CB 6F        	bit 5,a
  26+ 8EC1 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8EC3
  28+ 8EC3 CD DB 8E     	call Comprueba_limite_horizontal
  29+ 8EC6 CD 6B 8F     	call Comprueba_limite_vertical
  30+ 8EC9
  31+ 8EC9              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8EC9              ; -----------------------
  33+ 8EC9              ; -----------------------
  34+ 8EC9              ; -----------------------
  35+ 8EC9
  36+ 8EC9 CD C1 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8ECC CD F8 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8ECF CD 57 91     	call Define_rutina_de_impresion
  39+ 8ED2
  40+ 8ED2 3A 6D 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8ED5 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8ED7 32 6D 89     	ld (Ctrl_0),a
  43+ 8EDA
  44+ 8EDA C9           	ret
  45+ 8EDB
  46+ 8EDB              ; *******************************************************************************************************************************************************************************************
  47+ 8EDB              ;	21/01/23
  48+ 8EDB              ;
  49+ 8EDB              ; 	Comprueba_limite_horizontal.
  50+ 8EDB              ;
  51+ 8EDB              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8EDB              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8EDB              ;
  54+ 8EDB              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8EDB              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8EDB              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8EDB              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8EDB
  59+ 8EDB
  60+ 8EDB
  61+ 8EDB 3A 6D 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8EDE CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8EE0 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8EE2 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8EE4 32 6D 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8EE7 18 09            jr 6F
  67+ 8EE9 CB 5F        1 bit 3,a
  68+ 8EEB 28 0A            jr z,2F
  69+ 8EED E6 F7            and $f7
  70+ 8EEF 32 6D 89         ld (Ctrl_0),a
  71+ 8EF2 CD 45 90     6 call Inicializacion
  72+ 8EF5 18 5B            jr 5F
  73+ 8EF7 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8EF8
  75+ 8EF8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8EF8              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8EF8
  78+ 8EF8 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8EF9 2A 6F 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8EFC CD 87 9E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8EFF 67           	ld h,a
  82+ 8F00 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F01 CD 87 9E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F04 67           	ld h,a
  85+ 8F05 A7           	and a
  86+ 8F06 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F08 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F09 3A 5F 89     	ld a,(Cuad_objeto)
  89+ 8F0C FE 02        	cp 2
  90+ 8F0E 38 1E        	jr c,3F
  91+ 8F10 28 1C        	jr z,3F
  92+ 8F12 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8F13 28 23            jr z,7F
  94+ 8F15 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8F17 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8F19 E1           	pop hl
  97+ 8F1A
  98+ 8F1A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8F1A              ; _para indicar con E="2" en caso necesario.
 100+ 8F1A
 101+ 8F1A E5               push hl
 102+ 8F1B C5               push bc
 103+ 8F1C CD 87 9E     	call calcula_tercio
 104+ 8F1F FE 01        	cp 1
 105+ 8F21 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8F23 CD 53 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8F26 28 26            jr z,9F
 108+ 8F28 38 24            jr c,9F
 109+ 8F2A 1E 00        11 ld e,0
 110+ 8F2C 18 22            jr 8F
 111+ 8F2E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8F2F 28 07        	jr z, 7F
 113+ 8F31 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8F33 1E 00         	ld e,0
 115+ 8F35 E1           	pop hl
 116+ 8F36 18 04        	jr 4F
 117+ 8F38 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8F3A 18 15            jr 10F
 119+ 8F3C
 120+ 8F3C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8F3C              ; _para indicar con E="2" en caso necesario.
 122+ 8F3C
 123+ 8F3C E5           4 push hl
 124+ 8F3D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8F3E CD 87 9E     	call calcula_tercio
 126+ 8F41 FE 01        	cp 1
 127+ 8F43 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8F45 CD 53 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8F48 28 04            jr z,9F
 130+ 8F4A 30 02            jr nc,9F
 131+ 8F4C 18 02        	jr 8F
 132+ 8F4E 1E 02        9 ld e,2
 133+ 8F50 C1           8 pop bc
 134+ 8F51 E1           10 pop hl
 135+ 8F52 C9           5 ret
 136+ 8F53
 137+ 8F53              ; --------------------
 138+ 8F53              ;
 139+ 8F53              ; 25/08/22
 140+ 8F53
 141+ 8F53 CD 87 9E     Comprueba_centro call calcula_tercio
 142+ 8F56 67               ld h,a
 143+ 8F57 08           	ex af,af
 144+ 8F58 FE 02        	cp 2
 145+ 8F5A 38 07        	jr c,1F
 146+ 8F5C 28 05        	jr z,1F
 147+ 8F5E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8F61 18 03        	jr 2F
 149+ 8F63 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8F66 08           2 ex af,af
 151+ 8F67 A7               and a
 152+ 8F68 ED 42            sbc hl,bc
 153+ 8F6A C9               ret
 154+ 8F6B
 155+ 8F6B              ; *********************************************************************************************************************************************************************************************
 156+ 8F6B              ;
 157+ 8F6B              ;   16/8/22
 158+ 8F6B              ;
 159+ 8F6B              ;	Comprueba_limite_vertical
 160+ 8F6B              ;
 161+ 8F6B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8F6B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8F6B              ;
 164+ 8F6B
 165+ 8F6B 2A 4D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8F6E 7D           	ld a,l
 167+ 8F6F E6 1F        	and $1F
 168+ 8F71 57           	ld d,a
 169+ 8F72 3A 71 89     	ld a,(Limite_vertical)
 170+ 8F75 BA           	cp d 											; Límite - Posición.
 171+ 8F76 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8F77 3A 5F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8F7A CB 47        	bit 0,a
 174+ 8F7C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8F7E
 176+ 8F7E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8F7E
 178+ 8F7E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8F7F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8F81
 181+ 8F81              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8F81              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8F81
 184+ 8F81 3A 51 89         ld a,(Coordenada_X)
 185+ 8F84 16 0F            ld d,Centro_izquierda
 186+ 8F86 A7               and a
 187+ 8F87 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8F88 28 1E            jr z,3F
 189+ 8F8A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8F8C              ;                                                    ; _salimos sin modificar nada.
 191+ 8F8C 18 0E            jr 2F
 192+ 8F8E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8F8F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8F91
 195+ 8F91              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8F91              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8F91
 198+ 8F91 3A 51 89         ld a,(Coordenada_X)
 199+ 8F94 16 10            ld d,Centro_derecha
 200+ 8F96 A7               and a
 201+ 8F97 92               sub d
 202+ 8F98 28 0E            jr z,3F
 203+ 8F9A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8F9C              ;                                                    ; _salimos sin modificar nada.
 205+ 8F9C CB 43        2 bit 0,e
 206+ 8F9E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8FA0 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8FA1 CD 35 90         call Modificaccionne
 209+ 8FA4 C1           	pop bc
 210+ 8FA5 CD 45 90         call Inicializacion
 211+ 8FA8 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8FA9
 213+ 8FA9              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8FA9
 215+ 8FA9 C5           4 push bc
 216+ 8FAA 01 4C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8FAD 0A           	ld a,(bc)
 218+ 8FAE 3D           	dec a
 219+ 8FAF 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8FB0 7D           	ld a,l
 221+ 8FB1 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8FB2 CB 47        	bit 0,a
 223+ 8FB4 28 03        	jr z,5F
 224+ 8FB6 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8FB7 18 2E        	jr 7F
 226+ 8FB9
 227+ 8FB9              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8FB9
 229+ 8FB9 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8FBA F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8FBB 3A 6D 89     	ld a,(Ctrl_0)
 232+ 8FBE CB 4F        	bit 1,a
 233+ 8FC0 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8FC2 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8FC3
 236+ 8FC3              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8FC3
 238+ 8FC3 1C               inc e
 239+ 8FC4 1D               dec e
 240+ 8FC5 20 07            jr nz,12F
 241+ 8FC7 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8FC8 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8FC9 22 4D 89     	ld (Posicion_actual),hl
 244+ 8FCC 18 44        13 jr 9F
 245+ 8FCE CB 43        12 bit 0,e
 246+ 8FD0 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8FD2              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8FD2 C1           	pop bc
 249+ 8FD3 18 D3        	jr 3B
 250+ 8FD5 80           14 add b
 251+ 8FD6 6F               ld l,a
 252+ 8FD7 22 4D 89     	ld (Posicion_actual),hl
 253+ 8FDA CD 35 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8FDD 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8FDF E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8FE1 32 6D 89         ld (Ctrl_0),a
 257+ 8FE4 F1           	pop af
 258+ 8FE5 18 2B        	jr 9F
 259+ 8FE7
 260+ 8FE7              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8FE7
 262+ 8FE7 F5           7 push af
 263+ 8FE8 3A 6D 89     	ld a,(Ctrl_0)
 264+ 8FEB CB 47        	bit 0,a
 265+ 8FED 20 1D        	jr nz,8F
 266+ 8FEF F1           	pop af
 267+ 8FF0
 268+ 8FF0              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8FF0
 270+ 8FF0 1C           	inc e
 271+ 8FF1 1D               dec e
 272+ 8FF2 20 07            jr nz,10F
 273+ 8FF4 90           	sub b
 274+ 8FF5 6F               ld l,a
 275+ 8FF6 22 4D 89     	ld (Posicion_actual),hl
 276+ 8FF9 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8FFB              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8FFB CB 43        10 bit 0,e
 279+ 8FFD 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8FFF              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8FFF C1           	pop bc
 282+ 9000 18 A6        	jr 3B
 283+ 9002 90           16 sub b
 284+ 9003 6F               ld l,a
 285+ 9004 22 4D 89     	ld (Posicion_actual),hl
 286+ 9007 CD 35 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 900A 18 06            jr 9F
 288+ 900C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 900E 32 6D 89         ld (Ctrl_0),a
 290+ 9011 F1           	pop af
 291+ 9012 C1           9 pop bc
 292+ 9013 1E 00        	ld e,0
 293+ 9015 CD 45 90         call Inicializacion
 294+ 9018 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9019 08           	ex af,af
 296+ 901A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 901B 18 8B            jr 3B
 298+ 901D
 299+ 901D              ; --------------------
 300+ 901D
 301+ 901D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 901F CD AC 91     1 call PreviousScan
 303+ 9022 10 FB            djnz 1B
 304+ 9024 22 4D 89     	ld (Posicion_actual),hl
 305+ 9027 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9028 C9           	ret
 307+ 9029
 308+ 9029              ; --------------------
 309+ 9029
 310+ 9029 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 902B CD 9D 91     1 call NextScan
 312+ 902E 10 FB            djnz 1B
 313+ 9030 22 4D 89     	ld (Posicion_actual),hl
 314+ 9033 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9034 C9           	ret
 316+ 9035
 317+ 9035              ; --------------------
 318+ 9035              ;
 319+ 9035              ;	22/01/23
 320+ 9035              ;
 321+ 9035              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9035              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9035              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9035
 325+ 9035
 326+ 9035              Modificaccionne
 327+ 9035
 328+ 9035 3A 5F 89     	ld a,(Cuad_objeto)
 329+ 9038 FE 02        	cp 2
 330+ 903A CC 1D 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 903D DC 1D 90         call c,Modifica_Pos_actual
 332+ 9040 C8           	ret z
 333+ 9041 CD 29 90         call Modifica_Pos_actual2
 334+ 9044 C9               ret
 335+ 9045
 336+ 9045              ; *************************************************************************************************************************************************************************************************
 337+ 9045              ;
 338+ 9045              ;	13/8/22
 339+ 9045              ;
 340+ 9045              ;	Inicializacion
 341+ 9045              ;
 342+ 9045              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9045              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9045              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9045              ;
 346+ 9045              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9045              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9045              ;	_ desaparece/aparece.
 349+ 9045
 350+ 9045              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9045              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9045              ;
 353+ 9045              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9045              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9045              ; 		   [E] ="0"
 356+ 9045
 357+ 9045              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9045
 359+ 9045 CD 87 9E     Inicializacion call calcula_tercio
 360+ 9048 28 36        	jr z,primit
 361+ 904A E6 02        	and 2
 362+ 904C 20 07        	jr nz,segmit
 363+ 904E 7D           	ld a,l
 364+ 904F FE 7F        	cp $7f
 365+ 9051 38 2D        	jr c,primit
 366+ 9053 28 2B        	jr z,primit
 367+ 9055 CD BB 90     segmit call column
 368+ 9058 38 13        	jr c,tercuad
 369+ 905A 3E 04        cuarcuad ld a,4
 370+ 905C 32 5F 89     	ld (Cuad_objeto),a
 371+ 905F 21 20 48     	ld hl,$4820
 372+ 9062 22 6F 89     	ld (Limite_horizontal),hl
 373+ 9065 21 71 89     	ld hl,Limite_vertical
 374+ 9068 36 0D        	ld (hl),$0d
 375+ 906A 08           	ex af,af
 376+ 906B 18 3C        	jr 1F
 377+ 906D              tercuad
 378+ 906D 3E 03        	ld a,3
 379+ 906F 32 5F 89     	ld (Cuad_objeto),a
 380+ 9072 21 20 48     	ld hl,$4820
 381+ 9075 22 6F 89     	ld (Limite_horizontal),hl
 382+ 9078 21 71 89     	ld hl,Limite_vertical
 383+ 907B 36 12        	ld (hl),$12
 384+ 907D 08           	ex af,af
 385+ 907E 18 29        	jr 1F
 386+ 9080 CD BB 90     primit call column
 387+ 9083 38 13        	jr c, primcuad
 388+ 9085              segcuad
 389+ 9085 3E 02        	ld a,2
 390+ 9087 32 5F 89     	ld (Cuad_objeto),a
 391+ 908A 21 C0 4F     	ld hl,$4fc0
 392+ 908D 22 6F 89     	ld (Limite_horizontal),hl
 393+ 9090 21 71 89     	ld hl,Limite_vertical
 394+ 9093 36 0D        	ld (hl),$0d
 395+ 9095 08           	ex af,af
 396+ 9096 18 11        	jr 1F
 397+ 9098              primcuad
 398+ 9098 3E 01        	ld a,1
 399+ 909A 32 5F 89     	ld (Cuad_objeto),a
 400+ 909D 21 C0 4F     	ld hl,$4fc0
 401+ 90A0 22 6F 89     	ld (Limite_horizontal),hl
 402+ 90A3 21 71 89     	ld hl,Limite_vertical
 403+ 90A6 36 12        	ld (hl),$12
 404+ 90A8 08           	ex af,af
 405+ 90A9
 406+ 90A9 C5           1 push bc
 407+ 90AA E5           	push hl
 408+ 90AB D5           	push de
 409+ 90AC
 410+ 90AC 2A 4D 89     	ld hl,(Posicion_actual)
 411+ 90AF CD A5 9E     	call Genera_coordenadas
 412+ 90B2
 413+ 90B2 D1           	pop de
 414+ 90B3 E1           	pop hl
 415+ 90B4 C1           	pop bc
 416+ 90B5
 417+ 90B5 21 6D 89     	ld hl,Ctrl_0
 418+ 90B8 CB EE        	set 5,(hl)
 419+ 90BA C9           	ret
 420+ 90BB
 421+ 90BB              ; ------------------------------------------------------------------------------------------------------------------
 422+ 90BB
 423+ 90BB              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 90BB              ;
 425+ 90BB              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 90BB
 427+ 90BB 7D           column ld a,l
 428+ 90BC E6 1F        	and $1f
 429+ 90BE FE 10         	cp $10
 430+ 90C0 C9            	ret
 431+ 90C1
 432+ 90C1              ; --------------------------------------------------------------------------------------------------------------------
 433+ 90C1              ;
 434+ 90C1              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 90C1              ;
 436+ 90C1              ; 14/12/22
 437+ 90C1              ;
 438+ 90C1              ;	Modifica: A y BC.
 439+ 90C1
 440+ 90C1 3A 5F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 90C4 E6 01        	and 1
 442+ 90C6 28 17        	jr z,1F
 443+ 90C8
 444+ 90C8              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 90C8
 446+ 90C8 3A 51 89     	ld a,(Coordenada_X)
 447+ 90CB 47           	ld b,a
 448+ 90CC 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 90CD 79           	ld a,c
 450+ 90CE 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 90CF 38 08        	jr c,2F
 452+ 90D1 47           	ld b,a
 453+ 90D2 79           	ld a,c
 454+ 90D3 90           	sub b
 455+ 90D4 32 6E 89     	ld (Columnas),a
 456+ 90D7 18 1B        	jr 4F
 457+ 90D9 79           2 ld a,c
 458+ 90DA 32 6E 89     	ld (Columnas),a
 459+ 90DD 18 15        	jr 4F
 460+ 90DF
 461+ 90DF              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 90DF
 463+ 90DF 3A 51 89     1 ld a,(Coordenada_X)
 464+ 90E2 81           	add c
 465+ 90E3 3D           	dec a
 466+ 90E4 D6 1F        	sub $1f
 467+ 90E6 38 08        	jr c,3F
 468+ 90E8 47           	ld b,a
 469+ 90E9 79           	ld a,c
 470+ 90EA 90           	sub b
 471+ 90EB 32 6E 89     	ld (Columnas),a
 472+ 90EE 18 04        	jr 4F
 473+ 90F0 79           3 ld a,c
 474+ 90F1 32 6E 89     	ld (Columnas),a
 475+ 90F4 D9           4 exx
 476+ 90F5 4F           	ld c,a
 477+ 90F6 D9           	exx
 478+ 90F7 C9            ret
 479+ 90F8
 480+ 90F8              ; --------------------------------------------------------------------------------------------------------------------
 481+ 90F8              ;
 482+ 90F8              ;   19/7/23
 483+ 90F8              ;
 484+ 90F8              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 90F8              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 90F8              ;
 487+ 90F8              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 90F8              ;			HL e IY Contienen (Puntero_objeto).
 489+ 90F8              ;
 490+ 90F8              ;	DESTRUYE: HL,B Y A.
 491+ 90F8
 492+ 90F8 3A 5F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 90FB FE 02        	cp 2
 494+ 90FD 38 18        	jr c,1F
 495+ 90FF 28 16        	jr z,1F
 496+ 9101 E6 01        	and 1
 497+ 9103 28 0D        	jr z,3F
 498+ 9105
 499+ 9105              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9105
 501+ 9105 CD 4B 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9108
 503+ 9108 7D           9 ld a,l
 504+ 9109 E6 1F        	and $1f
 505+ 910B 28 2A        	jr z,7F
 506+ 910D 2B           	dec hl
 507+ 910E 10 F8        	djnz 9B
 508+ 9110 18 25        	jr 7F
 509+ 9112
 510+ 9112              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9112
 512+ 9112 2A 4D 89     3 ld hl,(Posicion_actual)
 513+ 9115 18 20        	jr 7F
 514+ 9117
 515+ 9117 28 14        1 jr z,2F
 516+ 9119
 517+ 9119              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9119
 519+ 9119 CD 4B 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 911C
 521+ 911C 7D           4 ld a,l
 522+ 911D E6 1F        	and $1f
 523+ 911F 28 03        	jr z,6F
 524+ 9121 2B           	dec hl
 525+ 9122 10 F8        	djnz 4B
 526+ 9124 06 0F        6 ld b,15
 527+ 9126 CD AC 91     5 call PreviousScan
 528+ 9129 10 FB        	djnz 5B
 529+ 912B 18 0A        	jr 7F
 530+ 912D
 531+ 912D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 912D
 533+ 912D CD 4B 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9130 06 0F        	ld b,15
 535+ 9132 CD AC 91     8 call PreviousScan
 536+ 9135 10 FB        	djnz 8B
 537+ 9137
 538+ 9137 E5           7 push hl
 539+ 9138 DD E1        	pop ix
 540+ 913A
 541+ 913A 2A 4F 89     	ld hl,(Puntero_objeto)
 542+ 913D E5           	push hl
 543+ 913E FD E1        	pop iy
 544+ 9140
 545+ 9140              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9140
 547+ 9140 3A 6D 89     	ld a,(Ctrl_0)
 548+ 9143 CB 77        	bit 6,a
 549+ 9145 C8           	ret z
 550+ 9146
 551+ 9146              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9146              ; _ entidad / Amadeus´.
 553+ 9146
 554+ 9146 DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 914A
 556+ 914A C9           	ret
 557+ 914B
 558+ 914B              ; --------------------------------------------------------------------------------------------------------------------
 559+ 914B              ;
 560+ 914B              ;	2/1/23
 561+ 914B              ;
 562+ 914B              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 914B              ;
 564+ 914B              ;	Tras esta rutina tenemos:
 565+ 914B              ;
 566+ 914B              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 914B              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 914B              ;
 569+ 914B              ;	DESTRUYE!!!!! HL,B y A.
 570+ 914B
 571+ 914B 2A 4D 89     Operandos ld hl,(Posicion_actual)
 572+ 914E 3A 6E 89     	ld a,(Columnas)
 573+ 9151 3D           	dec a
 574+ 9152 20 01        	jr nz,1F
 575+ 9154 3C           	inc a
 576+ 9155 47           1 ld b,a
 577+ 9156 C9           	ret
 578+ 9157
 579+ 9157              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9157              ;
 581+ 9157              ;	3/1/23
 582+ 9157              ;
 583+ 9157              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9157              ;
 585+ 9157              ;	Destruye: A,B,HL y DE.
 586+ 9157
 587+ 9157              Define_rutina_de_impresion
 588+ 9157
 589+ 9157 3A 4C 89     	ld a,(Columns)
 590+ 915A 47           	ld b,a
 591+ 915B 3A 6E 89     	ld a,(Columnas)
 592+ 915E B8           	cp b
 593+ 915F 20 0D        	jr nz,2f
 594+ 9161
 595+ 9161              ;	La entidad se imprime entera.
 596+ 9161
 597+ 9161 21 80 92     	ld hl, Indice_entidades_completas
 598+ 9164 E6 01        	and 1
 599+ 9166 28 02        	jr z,1F
 600+ 9168
 601+ 9168 23           	inc hl
 602+ 9169 23           	inc hl
 603+ 916A
 604+ 916A CD 9B 8B     1 call Extrae_address
 605+ 916D C9           	ret		;	ret
 606+ 916E
 607+ 916E              ;	La entidad no se imprime entera en pantalla.
 608+ 916E
 609+ 916E 3A 5F 89     2 ld a,(Cuad_objeto)
 610+ 9171 E6 01        	and 1
 611+ 9173 28 17        	jr z,3F
 612+ 9175
 613+ 9175              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9175
 615+ 9175 21 84 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9178 3A 4C 89     4 ld a,(Columns)
 617+ 917B E6 01        	and 1
 618+ 917D 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 917F
 620+ 917F 23           	inc hl
 621+ 9180 23           	inc hl
 622+ 9181
 623+ 9181 3A 6E 89     	ld a,(Columnas)
 624+ 9184 E6 01        	and 1
 625+ 9186 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9188
 627+ 9188 23           	inc hl
 628+ 9189 23           	inc hl
 629+ 918A
 630+ 918A 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 918C
 632+ 918C 21 8A 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 918F 18 E7        	jr 4B
 634+ 9191
 635+ 9191              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9191              ;
 637+ 9191              ;	Prepara_draw
 638+ 9191              ;
 639+ 9191              ;	Es una rutina de carga.
 640+ 9191              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9191              ;
 642+ 9191              ;	FUNCIONAMIENTO:
 643+ 9191              ;
 644+ 9191              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9191              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9191              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9191              ;
 648+ 9191              ;	DESTRUYE:
 649+ 9191              ;
 650+ 9191              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9191
 652+ 9191 21 4B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9194 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9195 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9196 4E           	ld c,(hl)
 656+ 9197 2A 4D 89     	ld hl,(Posicion_actual)
 657+ 919A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 919C C9           	ret
 659+ 919D
 660+ 919D              ;----------------------------------------------------------------------------------------------------------------
 661+ 919D              ;
 662+ 919D              ;	5/08/22
 663+ 919D              ;
 664+ 919D              ;   NextScan.
 665+ 919D              ;
 666+ 919D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 919D              ;
 668+ 919D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 919D              ;
 670+ 919D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 919D              ;
 672+ 919D              ;       DESTRUIDOS: AF y HL !!!
 673+ 919D              ;
 674+ 919D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 919D              ;
 676+ 919D
 677+ 919D 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 919E 7C               ld a,h
 679+ 919F E6 07            and 7
 680+ 91A1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 91A2
 682+ 91A2 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 91A3 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 91A5 6F               ld l,a
 685+ 91A6 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 91A7
 687+ 91A7 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 91A8 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 91AA 67               ld h,a
 690+ 91AB C9               ret
 691+ 91AC
 692+ 91AC              ;----------------------------------------------------------------------------------------------------------------
 693+ 91AC              ;
 694+ 91AC              ;	5/08/22
 695+ 91AC              ;
 696+ 91AC              ;   PreviousScan.
 697+ 91AC              ;
 698+ 91AC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 91AC              ;
 700+ 91AC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 91AC              ;
 702+ 91AC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 91AC              ;
 704+ 91AC              ;       DESTRUIDOS: AF y HL !!!
 705+ 91AC              ;
 706+ 91AC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 91AC              ;
 708+ 91AC
 709+ 91AC 7C           PreviousScan ld a,h
 710+ 91AD 25               dec h               ; Dec H.
 711+ 91AE E6 07            and 7
 712+ 91B0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 91B1
 714+ 91B1 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 91B2 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 91B4 6F               ld l,a
 717+ 91B5 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 91B6
 719+ 91B6 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 91B7 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 91B9 67               ld h,a
 722+ 91BA C9               ret
 723+ 91BB
 724+ 91BB              ; -----------------------------------------------------------------------------------
 725+ 91BB              ;
 726+ 91BB              ;	31/7/23
 727+ 91BB              ;
 728+ 91BB              ;	Rutina principal de pintado de entidades.
 729+ 91BB              ;	Extrae la foto del frame, (entidades).
 730+ 91BB
 731+ 91BB              Extrae_foto_entidades
 732+ 91BB
 733+ 91BB 21 01 80     	ld hl,Album_de_fotos+1
 734+ 91BE 7E           	ld a,(hl)
 735+ 91BF A7           	and a
 736+ 91C0 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 91C1
 738+ 91C1              ;	No hay datos, (entidades para pintar en este frame).
 739+ 91C1
 740+ 91C1 3A 98 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 91C4 A7           	and a
 742+ 91C5 C8           	ret z
 743+ 91C6
 744+ 91C6              ; -----------------------------------
 745+ 91C6
 746+ 91C6 ED 73 9D 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 91CA 31 00 80     	ld sp,Album_de_fotos
 748+ 91CD
 749+ 91CD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 91CF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 91D0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 91D1
 753+ 91D1 ED 73 9F 89  	ld (Stack_2),sp
 754+ 91D5 ED 7B 9D 89  	ld sp,(Stack)
 755+ 91D9
 756+ 91D9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 91D9
 758+ 91D9 3E CD        	ld a,$cd
 759+ 91DB 32 E3 91     	ld (Imprime),a
 760+ 91DE EB           	ex de,hl
 761+ 91DF 22 E4 91     	ld (Imprime+1),hl
 762+ 91E2 EB           	ex de,hl
 763+ 91E3
 764+ 91E3              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 91E3
 766+ 91E3 00 00 00     Imprime db 0,0,0
 767+ 91E6
 768+ 91E6 ED 73 9D 89  	ld (Stack),sp
 769+ 91EA
 770+ 91EA 3A 98 89     	ld a,(Numero_de_malotes)
 771+ 91ED 3D           	dec a
 772+ 91EE 28 09        	jr z,1F
 773+ 91F0 32 98 89      	ld (Numero_de_malotes),a
 774+ 91F3
 775+ 91F3 ED 7B 9F 89  	ld sp,(Stack_2)
 776+ 91F7 18 D4        	jr 2B
 777+ 91F9
 778+ 91F9 AF           1 xor a
 779+ 91FA 32 9F 89     	ld (Stack_2),a
 780+ 91FD
 781+ 91FD C9           	ret
 782+ 91FE
 783+ 91FE              ; -----------------------------------------------------------------------------------
 784+ 91FE              ;
 785+ 91FE              ;	28/2/23
 786+ 91FE              ;
 787+ 91FE              ;	Pinta los disparos generados.
 788+ 91FE
 789+ 91FE              Extrae_foto_disparos
 790+ 91FE
 791+ 91FE 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9201 7E               ld a,(hl)
 793+ 9202 A7               and a
 794+ 9203 C8               ret z
 795+ 9204
 796+ 9204 3A AD 89     	ld a,(Numero_de_disparotes)
 797+ 9207 A7           	and a
 798+ 9208 C8           	ret z
 799+ 9209 ED 73 9D 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 920D 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9210
 802+ 9210 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9212 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9213 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9214
 806+ 9214 ED 73 9F 89  	ld (Stack_2),sp
 807+ 9218 ED 7B 9D 89  	ld sp,(Stack)
 808+ 921C
 809+ 921C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 921C
 811+ 921C 3E CD        	ld a,$cd
 812+ 921E 32 26 92     	ld (Imprime2),a
 813+ 9221 EB           	ex de,hl
 814+ 9222 22 27 92     	ld (Imprime2+1),hl
 815+ 9225 EB           	ex de,hl
 816+ 9226
 817+ 9226              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9226
 819+ 9226 00 00 00     Imprime2 db 0,0,0
 820+ 9229
 821+ 9229 3A AD 89     	ld a,(Numero_de_disparotes)
 822+ 922C 3D           	dec a
 823+ 922D 28 09        	jr z,1F
 824+ 922F 32 AD 89      	ld (Numero_de_disparotes),a
 825+ 9232
 826+ 9232 ED 7B 9F 89  	ld sp,(Stack_2)
 827+ 9236 18 D8        	jr 2B
 828+ 9238
 829+ 9238 AF           1 xor a
 830+ 9239 32 9F 89     	ld (Stack_2),a
 831+ 923C C9           	ret
 832+ 923D
 833+ 923D              ; -----------------------------------------------------------------------------------
 834+ 923D              ;
 835+ 923D              ;	4/9/23
 836+ 923D              ;
 837+ 923D              ;	Rutina principal de pintado de Amadeus.
 838+ 923D              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 923D
 840+ 923D 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9240 7E           	ld a,(hl)
 842+ 9241 A7           	and a
 843+ 9242 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9243
 845+ 9243 3A 98 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9246 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9247 C8           	ret z
 848+ 9248
 849+ 9248              ; -----------------------------------
 850+ 9248
 851+ 9248 ED 73 9D 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 924C 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 924F
 854+ 924F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9251 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9252 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9253
 858+ 9253 ED 73 9F 89  	ld (Stack_2),sp
 859+ 9257 ED 7B 9D 89  	ld sp,(Stack)
 860+ 925B
 861+ 925B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 925B
 863+ 925B 3E CD        	ld a,$cd
 864+ 925D 32 65 92     	ld (Imprime_Amadeus),a
 865+ 9260 EB           	ex de,hl
 866+ 9261 22 66 92     	ld (Imprime_Amadeus+1),hl
 867+ 9264 EB           	ex de,hl
 868+ 9265
 869+ 9265              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9265
 871+ 9265 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9268
 873+ 9268 ED 73 9D 89  	ld (Stack),sp
 874+ 926C
 875+ 926C 3A 98 89     	ld a,(Numero_de_malotes)
 876+ 926F 3D           	dec a
 877+ 9270 28 09        	jr z,1F
 878+ 9272 32 98 89      	ld (Numero_de_malotes),a
 879+ 9275
 880+ 9275 ED 7B 9F 89  	ld sp,(Stack_2)
 881+ 9279 18 D4        	jr 2B
 882+ 927B
 883+ 927B AF           1 xor a
 884+ 927C 32 9F 89     	ld (Stack_2),a
 885+ 927F
 886+ 927F C9           	ret
# file closed: Draw_XOR.asm
1705  9280              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9280              ;   índices de Rutinas de impresión.
   2+ 9280
   3+ 9280 90 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9282 BD 92            defw Pinta_Amadeus_3x2
   5+ 9284
   6+ 9284 13 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9286 B3 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9288 67 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 928A
  10+ 928A 3D 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 928C 41 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 928E F5 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9290
  14+ 9290
  15+ 9290              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9290              ;
  17+ 9290              ;   12/12/22
  18+ 9290              ;
  19+ 9290              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9290              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9290              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9290              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9290              ;
  24+ 9290              ;   Modifica: DE y HL.
  25+ 9290
  26+ 9290 ED 73 9D 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9294 FD F9        	ld sp,iy
  28+ 9296 06 10            ld b,16
  29+ 9298 D1           1 pop de
  30+ 9299 7B               ld a,e
  31+ 929A AE               xor (hl)
  32+ 929B 77           	ld (hl),a
  33+ 929C 23           	inc hl
  34+ 929D 7A               ld a,d
  35+ 929E AE               xor (hl)
  36+ 929F 77           	ld (hl),a
  37+ 92A0 2B           	dec hl
  38+ 92A1 24           	inc h
  39+ 92A2 7C               ld a,h
  40+ 92A3 E6 07            and 7
  41+ 92A5 20 0A            jr nz,2F
  42+ 92A7 7D               ld a,l
  43+ 92A8 C6 20            add a,$20
  44+ 92AA 6F               ld l,a
  45+ 92AB 38 04            jr c,2F
  46+ 92AD 7C               ld a,h
  47+ 92AE D6 08            sub 8
  48+ 92B0 67               ld h,a
  49+ 92B1 7C           2 ld a,h
  50+ 92B2 FE 58            cp $58
  51+ 92B4 28 02            jr z,3F
  52+ 92B6 10 E0            djnz 1B
  53+ 92B8 ED 7B 9D 89  3 ld sp,(Stack)
  54+ 92BC C9           	ret
  55+ 92BD
  56+ 92BD ED 73 9D 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 92C1 FD F9        	ld sp,iy
  58+ 92C3 06 08            ld b,8
  59+ 92C5 D1           1 pop de
  60+ 92C6 7B               ld a,e
  61+ 92C7 AE               xor (hl)
  62+ 92C8 77           	ld (hl),a
  63+ 92C9 23           	inc hl
  64+ 92CA 7A               ld a,d
  65+ 92CB AE               xor (hl)
  66+ 92CC 77           	ld (hl),a
  67+ 92CD 23           	inc hl
  68+ 92CE D1           	pop de
  69+ 92CF 7B               ld a,e
  70+ 92D0 AE               xor (hl)
  71+ 92D1 77           	ld (hl),a
  72+ 92D2 2B           	dec hl
  73+ 92D3 2B           	dec hl
  74+ 92D4 24           	inc h
  75+ 92D5 7C               ld a,h
  76+ 92D6 E6 07            and 7
  77+ 92D8 20 0A            jr nz,2F
  78+ 92DA 7D               ld a,l
  79+ 92DB C6 20            add a,$20
  80+ 92DD 6F               ld l,a
  81+ 92DE 38 04            jr c,2F
  82+ 92E0 7C               ld a,h
  83+ 92E1 D6 08            sub 8
  84+ 92E3 67               ld h,a
  85+ 92E4 7C           2 ld a,h
  86+ 92E5 FE 58            cp $58
  87+ 92E7 28 25            jr z,4F
  88+ 92E9 7A               ld a,d
  89+ 92EA AE               xor (hl)
  90+ 92EB 77               ld (hl),a
  91+ 92EC D1           	pop de
  92+ 92ED 23           	inc hl
  93+ 92EE 7B               ld a,e
  94+ 92EF AE               xor (hl)
  95+ 92F0 77           	ld (hl),a
  96+ 92F1 23           	inc hl
  97+ 92F2 7A               ld a,d
  98+ 92F3 AE               xor (hl)
  99+ 92F4 77           	ld (hl),a
 100+ 92F5 2B           	dec hl
 101+ 92F6 2B           	dec hl
 102+ 92F7 24           	inc h
 103+ 92F8 7C               ld a,h
 104+ 92F9 E6 07            and 7
 105+ 92FB 20 0A            jr nz,3F
 106+ 92FD 7D               ld a,l
 107+ 92FE C6 20            add a,$20
 108+ 9300 6F               ld l,a
 109+ 9301 38 04            jr c,3F
 110+ 9303 7C               ld a,h
 111+ 9304 D6 08            sub 8
 112+ 9306 67               ld h,a
 113+ 9307 7C           3 ld a,h
 114+ 9308 FE 58            cp $58
 115+ 930A 28 02            jr z,4F
 116+ 930C 10 B7            djnz 1B
 117+ 930E ED 7B 9D 89  4 ld sp,(Stack)
 118+ 9312 C9           	ret
 119+ 9313
 120+ 9313              ; ---------------------------------------------------
 121+ 9313
 122+ 9313 ED 73 9D 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9317 FD F9        	ld sp,iy
 124+ 9319
 125+ 9319              ; >>>
 126+ 9319
 127+ 9319 06 10            ld b,16
 128+ 931B D1           1 pop de
 129+ 931C 7A           	ld a,d
 130+ 931D AE           	xor (hl)
 131+ 931E 77           	ld (hl),a
 132+ 931F 24           	inc h
 133+ 9320 7C               ld a,h
 134+ 9321 E6 07            and 7
 135+ 9323 20 0C            jr nz,2F
 136+ 9325 7D               ld a,l
 137+ 9326 C6 20            add a,$20
 138+ 9328 6F               ld l,a
 139+ 9329 38 06            jr c,2F
 140+ 932B 7C               ld a,h
 141+ 932C D6 08            sub 8
 142+ 932E 67               ld h,a
 143+ 932F 18 00            jr 2F
 144+ 9331 7C           2 ld a,h
 145+ 9332 FE 58            cp $58
 146+ 9334 28 02            jr z,3F
 147+ 9336 10 E3            djnz 1B
 148+ 9338 ED 7B 9D 89  3 ld sp,(Stack)
 149+ 933C C9           	ret
 150+ 933D
 151+ 933D ED 73 9D 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9341 FD F9        	ld sp,iy
 153+ 9343
 154+ 9343              ; >>>
 155+ 9343
 156+ 9343 06 10            ld b,16
 157+ 9345 D1           1 pop de
 158+ 9346 7B           	ld a,e
 159+ 9347 AE           	xor (hl)
 160+ 9348 77           	ld (hl),a
 161+ 9349 24           	inc h
 162+ 934A 7C               ld a,h
 163+ 934B E6 07            and 7
 164+ 934D 20 0C            jr nz,2F
 165+ 934F 7D               ld a,l
 166+ 9350 C6 20            add a,$20
 167+ 9352 6F               ld l,a
 168+ 9353 38 06            jr c,2F
 169+ 9355 7C               ld a,h
 170+ 9356 D6 08            sub 8
 171+ 9358 67               ld h,a
 172+ 9359 18 00            jr 2F
 173+ 935B 7C           2 ld a,h
 174+ 935C FE 58            cp $58
 175+ 935E 28 02            jr z,3F
 176+ 9360 10 E3            djnz 1B
 177+ 9362 ED 7B 9D 89  3 ld sp,(Stack)
 178+ 9366 C9           	ret
 179+ 9367
 180+ 9367              ; ---------------------------------------------------
 181+ 9367
 182+ 9367 ED 73 9D 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 936B FD F9        	ld sp,iy
 184+ 936D 06 08            ld b,8
 185+ 936F D1           1 pop de
 186+ 9370 7A           	ld a,d
 187+ 9371 AE           	xor (hl)
 188+ 9372 77           	ld (hl),a
 189+ 9373 23           	inc hl
 190+ 9374 D1           	pop de
 191+ 9375 7B           	ld a,e
 192+ 9376 AE           	xor (hl)
 193+ 9377 77           	ld (hl),a
 194+ 9378 2B           	dec hl
 195+ 9379 24            	inc h
 196+ 937A 7C               ld a,h
 197+ 937B E6 07            and 7
 198+ 937D 20 0A            jr nz,2F
 199+ 937F 7D               ld a,l
 200+ 9380 C6 20            add a,$20
 201+ 9382 6F               ld l,a
 202+ 9383 38 04            jr c,2F
 203+ 9385 7C               ld a,h
 204+ 9386 D6 08            sub 8
 205+ 9388 67               ld h,a
 206+ 9389 7C           2 ld a,h
 207+ 938A FE 58            cp $58
 208+ 938C 28 20            jr z,4F
 209+ 938E D1               pop de
 210+ 938F 7B           	ld a,e
 211+ 9390 AE           	xor (hl)
 212+ 9391 77           	ld (hl),a
 213+ 9392 23           	inc hl
 214+ 9393 7A           	ld a,d
 215+ 9394 AE           	xor (hl)
 216+ 9395 77           	ld (hl),a
 217+ 9396 2B           	dec hl
 218+ 9397 24           	inc h
 219+ 9398 7C               ld a,h
 220+ 9399 E6 07            and 7
 221+ 939B 20 0A            jr nz,3F
 222+ 939D 7D               ld a,l
 223+ 939E C6 20            add a,$20
 224+ 93A0 6F               ld l,a
 225+ 93A1 38 04            jr c,3F
 226+ 93A3 7C               ld a,h
 227+ 93A4 D6 08            sub 8
 228+ 93A6 67               ld h,a
 229+ 93A7 7C           3 ld a,h
 230+ 93A8 FE 58            cp $58
 231+ 93AA 28 02            jr z,4F
 232+ 93AC 10 C1            djnz 1B
 233+ 93AE ED 7B 9D 89  4 ld sp,(Stack)
 234+ 93B2 C9           	ret
 235+ 93B3
 236+ 93B3 ED 73 9D 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 93B7 FD F9        	ld sp,iy
 238+ 93B9 06 08            ld b,8
 239+ 93BB D1           1 pop de
 240+ 93BC D1           	pop de
 241+ 93BD 7B           	ld a,e
 242+ 93BE AE           	xor (hl)
 243+ 93BF 77           	ld (hl),a
 244+ 93C0 24            	inc h
 245+ 93C1 7C               ld a,h
 246+ 93C2 E6 07            and 7
 247+ 93C4 20 0A            jr nz,2F
 248+ 93C6 7D               ld a,l
 249+ 93C7 C6 20            add a,$20
 250+ 93C9 6F               ld l,a
 251+ 93CA 38 04            jr c,2F
 252+ 93CC 7C               ld a,h
 253+ 93CD D6 08            sub 8
 254+ 93CF 67               ld h,a
 255+ 93D0 7C           2 ld a,h
 256+ 93D1 FE 58            cp $58
 257+ 93D3 28 1B            jr z,4F
 258+ 93D5 D1               pop de
 259+ 93D6 7A           	ld a,d
 260+ 93D7 AE           	xor (hl)
 261+ 93D8 77           	ld (hl),a
 262+ 93D9 24           	inc h
 263+ 93DA 7C               ld a,h
 264+ 93DB E6 07            and 7
 265+ 93DD 20 0A            jr nz,3F
 266+ 93DF 7D               ld a,l
 267+ 93E0 C6 20            add a,$20
 268+ 93E2 6F               ld l,a
 269+ 93E3 38 04            jr c,3F
 270+ 93E5 7C               ld a,h
 271+ 93E6 D6 08            sub 8
 272+ 93E8 67               ld h,a
 273+ 93E9 7C           3 ld a,h
 274+ 93EA FE 58            cp $58
 275+ 93EC 28 02            jr z,4F
 276+ 93EE 10 CB            djnz 1B
 277+ 93F0 ED 7B 9D 89  4 ld sp,(Stack)
 278+ 93F4 C9           	ret
 279+ 93F5
 280+ 93F5 ED 73 9D 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 93F9 FD F9        	ld sp,iy
 282+ 93FB 06 08            ld b,8
 283+ 93FD D1           1 pop de
 284+ 93FE 7B           	ld a,e
 285+ 93FF AE           	xor (hl)
 286+ 9400 77           	ld (hl),a
 287+ 9401 23           	inc hl
 288+ 9402 7A           	ld a,d
 289+ 9403 AE           	xor (hl)
 290+ 9404 77           	ld (hl),a
 291+ 9405 2B           	dec hl
 292+ 9406 24             	inc h
 293+ 9407 7C               ld a,h
 294+ 9408 E6 07            and 7
 295+ 940A 20 0A            jr nz,2F
 296+ 940C 7D               ld a,l
 297+ 940D C6 20            add a,$20
 298+ 940F 6F               ld l,a
 299+ 9410 38 04            jr c,2F
 300+ 9412 7C               ld a,h
 301+ 9413 D6 08            sub 8
 302+ 9415 67               ld h,a
 303+ 9416 7C           2 ld a,h
 304+ 9417 FE 58            cp $58
 305+ 9419 28 21            jr z,4F
 306+ 941B D1               pop de
 307+ 941C 7A           	ld a,d
 308+ 941D AE           	xor (hl)
 309+ 941E 77           	ld (hl),a
 310+ 941F 23           	inc hl
 311+ 9420 D1               pop de
 312+ 9421 7B           	ld a,e
 313+ 9422 AE           	xor (hl)
 314+ 9423 77           	ld (hl),a
 315+ 9424 2B           	dec hl
 316+ 9425 24           	inc h
 317+ 9426 7C               ld a,h
 318+ 9427 E6 07            and 7
 319+ 9429 20 0A            jr nz,3F
 320+ 942B 7D               ld a,l
 321+ 942C C6 20            add a,$20
 322+ 942E 6F               ld l,a
 323+ 942F 38 04            jr c,3F
 324+ 9431 7C               ld a,h
 325+ 9432 D6 08            sub 8
 326+ 9434 67               ld h,a
 327+ 9435 7C           3 ld a,h
 328+ 9436 FE 58            cp $58
 329+ 9438 28 02            jr z,4F
 330+ 943A 10 C1            djnz 1B
 331+ 943C ED 7B 9D 89  4 ld sp,(Stack)
 332+ 9440 C9           	ret
 333+ 9441
 334+ 9441 ED 73 9D 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9445 FD F9        	ld sp,iy
 336+ 9447 06 08            ld b,8
 337+ 9449 D1           1 pop de
 338+ 944A 7B           	ld a,e
 339+ 944B AE           	xor (hl)
 340+ 944C 77           	ld (hl),a
 341+ 944D 24            	inc h
 342+ 944E 7C               ld a,h
 343+ 944F E6 07            and 7
 344+ 9451 20 0A            jr nz,2F
 345+ 9453 7D               ld a,l
 346+ 9454 C6 20            add a,$20
 347+ 9456 6F               ld l,a
 348+ 9457 38 04            jr c,2F
 349+ 9459 7C               ld a,h
 350+ 945A D6 08            sub 8
 351+ 945C 67               ld h,a
 352+ 945D 7C           2 ld a,h
 353+ 945E FE 58            cp $58
 354+ 9460 28 1C            jr z,4F
 355+ 9462 D1               pop de
 356+ 9463 7A           	ld a,d
 357+ 9464 AE           	xor (hl)
 358+ 9465 77           	ld (hl),a
 359+ 9466 24           	inc h
 360+ 9467 7C               ld a,h
 361+ 9468 E6 07            and 7
 362+ 946A 20 0A            jr nz,3F
 363+ 946C 7D               ld a,l
 364+ 946D C6 20            add a,$20
 365+ 946F 6F               ld l,a
 366+ 9470 38 04            jr c,3F
 367+ 9472 7C               ld a,h
 368+ 9473 D6 08            sub 8
 369+ 9475 67               ld h,a
 370+ 9476 7C           3 ld a,h
 371+ 9477 FE 58            cp $58
 372+ 9479 28 03            jr z,4F
 373+ 947B D1               pop de
 374+ 947C 10 CB            djnz 1B
 375+ 947E ED 7B 9D 89  4 ld sp,(Stack)
 376+ 9482 C9           	ret
 377+ 9483
 378+ 9483              ; ---------------------------------------------------
 379+ 9483              ;
 380+ 9483              ;   27/02/23
 381+ 9483              ;
 382+ 9483              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9483              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9483              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9483
 386+ 9483 ED 73 9D 89  Pinta_Disparo ld (Stack),sp
 387+ 9487 FD F9            ld sp,iy
 388+ 9489 06 03            ld b,3
 389+ 948B D1           1 pop de
 390+ 948C 7B               ld a,e
 391+ 948D AE               xor (hl)
 392+ 948E 77               ld (hl),a
 393+ 948F 23               inc hl
 394+ 9490 7A               ld a,d
 395+ 9491 AE               xor (hl)
 396+ 9492 77               ld (hl),a
 397+ 9493 2B               dec hl
 398+ 9494
 399+ 9494 24               inc h
 400+ 9495 7C               ld a,h
 401+ 9496 E6 07            and 7
 402+ 9498 20 0A            jr nz,2F
 403+ 949A 7D               ld a,l
 404+ 949B C6 20            add a,$20
 405+ 949D 6F               ld l,a
 406+ 949E 38 04            jr c,2F
 407+ 94A0 7C               ld a,h
 408+ 94A1 D6 08            sub 8
 409+ 94A3 67               ld h,a
 410+ 94A4 7C           2 ld a,h
 411+ 94A5 FE 58            cp $58
 412+ 94A7 28 02            jr z,3F
 413+ 94A9
 414+ 94A9 10 E0            djnz 1B
 415+ 94AB ED 7B 9D 89  3 ld sp,(Stack)
 416+ 94AF C9               ret
 417+ 94B0
# file closed: Rutinas_de_impresion_sprites.asm
1706  94B0              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94B0
   2+ 94B0              ; ******************************************************************************************************************************************************************************************
   3+ 94B0              ;
   4+ 94B0              ;   20/05/23
   5+ 94B0              ;
   6+ 94B0              ;	Recompone_posicion_inicio
   7+ 94B0              ;
   8+ 94B0              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 94B0              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 94B0              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 94B0              ;	_ a una u otra rutina.
  12+ 94B0
  13+ 94B0              Recompone_posicion_inicio
  14+ 94B0
  15+ 94B0 2A 5D 89     	ld hl,(Posicion_inicio)
  16+ 94B3 7D           	ld a,l
  17+ 94B4 E6 1F        	and $1f
  18+ 94B6 28 16        	jr z,1F
  19+ 94B8
  20+ 94B8 FE 1F        	cp $1f
  21+ 94BA 28 0D        	jr z,3F
  22+ 94BC
  23+ 94BC 21 72 89     	ld hl,Ctrl_2
  24+ 94BF CB C6        	set 0,(hl)
  25+ 94C1 2A 4F 89     	ld hl,(Puntero_objeto)
  26+ 94C4 22 8D 89     	ld (Repone_puntero_objeto),hl
  27+ 94C7 18 08        	jr 2F
  28+ 94C9
  29+ 94C9 CD 77 96     3 call Mov_left
  30+ 94CC 18 03        	jr 2F
  31+ 94CE
  32+ 94CE CD 54 95     1 call Mov_right
  33+ 94D1 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 94D4 22 4F 89     	ld (Puntero_objeto),hl
  35+ 94D7 C9           	ret
  36+ 94D8
  37+ 94D8              ; ******************************************************************************************************************************************************************************************
  38+ 94D8              ;
  39+ 94D8              ;   27/05/23
  40+ 94D8              ;
  41+ 94D8              ;	Mov_down
  42+ 94D8              ;
  43+ 94D8              ; 	Mueve el Sprite X px hacia abajo.
  44+ 94D8              ;
  45+ 94D8              ;
  46+ 94D8              Mov_down
  47+ 94D8
  48+ 94D8 CD 42 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 94DB              ;																	; _ repone (Puntero_objeto).
  50+ 94DB 21 6D 89     	ld hl,Ctrl_0
  51+ 94DE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 94E0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 94E0              ; 																	; _ en el caso de que no lo haya.
  54+ 94E0 3A 77 89     	ld a,(Vel_down)
  55+ 94E3 47           	ld b,a
  56+ 94E4 2A 4D 89         ld hl,(Posicion_actual)
  57+ 94E7 CD 87 9E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 94EA E6 02        	and 2
  59+ 94EC 28 17        	jr z,1F
  60+ 94EE
  61+ 94EE              ; Nos encontramos en el último tercio de pantalla.
  62+ 94EE              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 94EE
  64+ 94EE 7C           	ld a,h
  65+ 94EF FE 57        	cp $57
  66+ 94F1 20 12        	jr nz,1F
  67+ 94F3
  68+ 94F3 7D           	ld a,l
  69+ 94F4 C6 20        	add $20
  70+ 94F6 30 0D        	jr nc,1F
  71+ 94F8
  72+ 94F8              ; ------------------------------
  73+ 94F8              ;
  74+ 94F8              ;	12/01/24
  75+ 94F8
  76+ 94F8              ;	call Reaparece_arriba
  77+ 94F8 CD 04 98     	call Reinicio
  78+ 94FB
  79+ 94FB              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 94FB
  81+ 94FB 3A AB 89     	ld a,(Ctrl_3)
  82+ 94FE CB CF        	set 1,a
  83+ 9500 32 AB 89     	ld (Ctrl_3),a
  84+ 9503
  85+ 9503 18 08        	jr 3F
  86+ 9505              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9505              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9505              ; ------------------------------
  89+ 9505
  90+ 9505 CD 9D 91     1 call NextScan
  91+ 9508 22 4D 89     	ld (Posicion_actual),hl
  92+ 950B 10 DA            djnz 2B
  93+ 950D CD A5 9E     3 call Genera_coordenadas
  94+ 9510 C9           	ret
  95+ 9511
  96+ 9511              ; ******************************************************************************************************************************************************************************************
  97+ 9511              ;
  98+ 9511              ;   27/05/23
  99+ 9511              ;
 100+ 9511              ;	Mov_up
 101+ 9511              ;
 102+ 9511              ; 	Mueve el Sprite hacia arriba.
 103+ 9511              ;
 104+ 9511              ;
 105+ 9511              Mov_up
 106+ 9511
 107+ 9511 CD 42 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9514              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9514 21 6D 89     	ld hl,Ctrl_0
 110+ 9517 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9519              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9519              ; 																		; _ en el caso de que no lo haya.
 113+ 9519 3A 76 89     	ld a,(Vel_up)
 114+ 951C 47           	ld b,a
 115+ 951D 2A 4D 89     	ld hl,(Posicion_actual)
 116+ 9520 CD 87 9E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9523 A7           	and a
 118+ 9524 20 10        	jr nz,1F
 119+ 9526
 120+ 9526              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9526              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9526
 123+ 9526 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9527 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9529 20 0B            jr nz,1F
 126+ 952B 7D               ld a,l
 127+ 952C D6 20            sub $20
 128+ 952E 30 06            jr nc,1F
 129+ 9530 25               dec h
 130+ 9531
 131+ 9531              ; -----------------------------
 132+ 9531 CD E5 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9534              ;	call Reinicio
 134+ 9534              ; -----------------------------
 135+ 9534
 136+ 9534 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9536 CD AC 91     1 call PreviousScan
 138+ 9539 22 4D 89     	ld (Posicion_actual),hl
 139+ 953C 10 E2            djnz 3B
 140+ 953E CD A5 9E     2 call Genera_coordenadas
 141+ 9541 C9           	ret
 142+ 9542
 143+ 9542              ; -----------------------------
 144+ 9542              ;
 145+ 9542              ;	27/5/23
 146+ 9542              ;
 147+ 9542              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9542              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9542              ;
 150+ 9542              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9542              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9542              ;
 153+ 9542              ;	Modifica: A y (Puntero_objeto).
 154+ 9542
 155+ 9542 3A 72 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9545 CB 47        	bit 0,a
 157+ 9547 C8           	ret z
 158+ 9548 CB 87        	res 0,a
 159+ 954A 32 72 89     	ld (Ctrl_2),a
 160+ 954D 2A 8D 89     	ld hl,(Repone_puntero_objeto)
 161+ 9550 22 4F 89     	ld (Puntero_objeto),hl
 162+ 9553 C9           	ret
 163+ 9554
 164+ 9554              ; ******************************************************************************************************************************************************************************************
 165+ 9554              ;
 166+ 9554              ;	19/10/22
 167+ 9554              ;
 168+ 9554              ;	Mov_right.
 169+ 9554              ;
 170+ 9554              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9554              ;
 172+ 9554
 173+ 9554 3A 6D 89     Mov_right ld a,(Ctrl_0)
 174+ 9557 CB 77        	bit 6,a
 175+ 9559 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 955B
 177+ 955B CD 93 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 955E C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 955F
 180+ 955F 21 6D 89     	ld hl,Ctrl_0
 181+ 9562 CB E6        	set 4,(hl)
 182+ 9564 18 52        	jr 8F
 183+ 9566
 184+ 9566 21 6D 89     10 ld hl,Ctrl_0
 185+ 9569 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 956B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 956B              ; 																	; _ en el caso de que no lo haya.
 188+ 956B 3A 51 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 956E FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9570 20 46        	jr nz,8F
 191+ 9572
 192+ 9572 3A 53 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9575 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9576 28 40        	jr z,8F
 195+ 9578
 196+ 9578              ; ---------- ---------- ----------
 197+ 9578              ;
 198+ 9578              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9578
 200+ 9578 3A 75 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 957B FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 957D 28 11        	jr z,1F
 203+ 957F 38 06        	jr c,6F
 204+ 9581 FE 04        	cp 4
 205+ 9583 28 14        	jr z,7F
 206+ 9585 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9587
 208+ 9587              ; ---------- ---------- ----------
 209+ 9587              ;
 210+ 9587              ; Perfiles de velocidad
 211+ 9587              ;
 212+ 9587
 213+ 9587 3A 53 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 958A FE FE        	cp $fe
 215+ 958C 20 2A        	jr nz,8F
 216+ 958E 18 10        	jr 3F
 217+ 9590 3A 53 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9593 FE FD        	cp $fd
 219+ 9595 20 21        	jr nz,8F
 220+ 9597 18 07        	jr 3F
 221+ 9599 3A 53 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 959C FE FB        	cp $fb
 223+ 959E 20 18        	jr nz,8F
 224+ 95A0
 225+ 95A0              ; ---------- ---------- ----------
 226+ 95A0
 227+ 95A0              3
 228+ 95A0 CD D3 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95A3              ;	call Reinicio
 230+ 95A3
 231+ 95A3              ; ---------- ---------- ----------
 232+ 95A3              ;
 233+ 95A3              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95A3
 235+ 95A3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 95A5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 95A6 CD BF 95     	call DESPLZ_DER
 238+ 95A9 C1           	pop bc
 239+ 95AA 10 F9        	djnz 5B
 240+ 95AC 2A 4D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 95AF 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 95B0 22 4D 89     	ld (Posicion_actual),hl
 243+ 95B3 CD A5 9E     	call Genera_coordenadas
 244+ 95B6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 95B8
 246+ 95B8              ; ---------- ---------- ----------
 247+ 95B8
 248+ 95B8 2A 4D 89     8 ld hl,(Posicion_actual)
 249+ 95BB CD BF 95     	call DESPLZ_DER
 250+ 95BE C9           2 ret
 251+ 95BF
 252+ 95BF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 95BF              ;
 254+ 95BF              ;	22/9/22
 255+ 95BF              ;
 256+ 95BF
 257+ 95BF CD CE 95     DESPLZ_DER call Desplaza_derecha
 258+ 95C2 CD 1A 96         call modifica_parametros_1er_DESPLZ_2
 259+ 95C5 CD 43 96         call Ciclo_completo
 260+ 95C8 21 6D 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 95CB CB FE        	set 7,(hl)
 262+ 95CD C9           	ret
 263+ 95CE
 264+ 95CE              ; ******************************************************************************************************************************************************************************************
 265+ 95CE              ;	15/02/23
 266+ 95CE              ;
 267+ 95CE
 268+ 95CE 3A 75 89     Desplaza_derecha ld a,(Vel_right)
 269+ 95D1 47           	ld b,a
 270+ 95D2 2A 59 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 95D5 23           1 inc hl
 272+ 95D6 23           	inc hl
 273+ 95D7 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 95D9 22 59 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 95DC CD 9B 8B     	call Extrae_address
 276+ 95DF 22 4F 89     	ld (Puntero_objeto),hl
 277+ 95E2
 278+ 95E2              ; Modifica (Puntero_DESPLZ_izq).
 279+ 95E2
 280+ 95E2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 95E2              ; Cuántos movimientos hemos hecho ??
 282+ 95E2              ; DE contiene (Puntero_DESPLZ_der).
 283+ 95E2
 284+ 95E2 2A 55 89     7 ld hl,(Indice_Sprite_der)
 285+ 95E5 EB           	ex de,hl
 286+ 95E6 A7           	and a
 287+ 95E7 ED 52        	sbc hl,de
 288+ 95E9 CB 3D        	srl l
 289+ 95EB 3E 08        6 ld a,8
 290+ 95ED 95           	sub l
 291+ 95EE 30 1E        	jr nc,3F
 292+ 95F0
 293+ 95F0              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 95F0              ; B="0".
 295+ 95F0
 296+ 95F0 04           4 inc b
 297+ 95F1 3C           	inc a
 298+ 95F2 20 FC        	jr nz,4B
 299+ 95F4 78           	ld a,b
 300+ 95F5 08           	ex af,af
 301+ 95F6 2A 55 89     	ld hl,(Indice_Sprite_der)
 302+ 95F9 23           5 inc hl
 303+ 95FA 23           	inc hl
 304+ 95FB 10 FC        	djnz 5B
 305+ 95FD 22 59 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9600 CD 9B 8B     	call Extrae_address
 307+ 9603 22 4F 89     	ld (Puntero_objeto),hl
 308+ 9606
 309+ 9606              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9606              ; _(Posicion_actual).
 311+ 9606
 312+ 9606 21 4D 89     	ld hl,Posicion_actual
 313+ 9609 34           	inc (hl)
 314+ 960A 08               ex af,af
 315+ 960B 6F           	ld l,a
 316+ 960C 18 DD        	jr 6B
 317+ 960E
 318+ 960E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 960E
 320+ 960E 47           3 ld b,a
 321+ 960F 2A 57 89     	ld hl,(Indice_Sprite_izq)
 322+ 9612 23           2 inc hl
 323+ 9613 23           	inc hl
 324+ 9614 10 FC        	djnz 2B
 325+ 9616 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9619 C9           8 ret
 327+ 961A
 328+ 961A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 961A              ;
 330+ 961A              ;	24/7/22
 331+ 961A              ;
 332+ 961A              ;	modifica_parametros_1er_DESPLZ_2
 333+ 961A              ;
 334+ 961A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 961A              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 961A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 961A
 338+ 961A 3A 53 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 961D A7           	and a
 340+ 961E 20 1F        	jr nz,1F
 341+ 9620 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9622 32 53 89         ld (CTRL_DESPLZ),a
 343+ 9625
 344+ 9625 21 4C 89     	ld hl,Columns
 345+ 9628 34           	inc (hl)
 346+ 9629 3A 5F 89     	ld a,(Cuad_objeto)
 347+ 962C E6 01        	and 1
 348+ 962E 28 0F        	jr z,1F
 349+ 9630 2A 4D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9633 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9634 22 4D 89     	ld (Posicion_actual),hl
 352+ 9637 CD A5 9E     	call Genera_coordenadas
 353+ 963A CD 9F 97     	call Inc_CTRL_DESPLZ
 354+ 963D 18 03        	jr 2F
 355+ 963F CD 9F 97     1 call Inc_CTRL_DESPLZ
 356+ 9642 C9           2 ret
 357+ 9643
 358+ 9643              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9643              ;
 360+ 9643              ;	24/7/22
 361+ 9643              ;
 362+ 9643              ;	Ciclo_completo.
 363+ 9643              ;
 364+ 9643              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9643              ;
 366+ 9643              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9643              ; 	Decrementamos (Columns).
 368+ 9643              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9643              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9643
 371+ 9643
 372+ 9643 3A 53 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9646 FE FF        	cp $ff
 374+ 9648 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 964A E6 F0        	and $f0
 376+ 964C 20 28        	jr nz,3F
 377+ 964E
 378+ 964E              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 964E
 380+ 964E 3A 53 89     	ld a,(CTRL_DESPLZ)
 381+ 9651 47           	ld b,a
 382+ 9652 3E F8        	ld a,$f8
 383+ 9654 80           	add b
 384+ 9655 32 53 89     	ld (CTRL_DESPLZ),a
 385+ 9658 18 1C        	jr 3F
 386+ 965A 21 4C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 965D 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 965E AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 965F 32 53 89     	ld (CTRL_DESPLZ),a
 390+ 9662 3A 5F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9665 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9667 20 0A        	jr nz,2F
 393+ 9669 2A 4D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 966C 23           	inc hl
 395+ 966D 22 4D 89     	ld (Posicion_actual),hl
 396+ 9670 CD A5 9E     	call Genera_coordenadas
 397+ 9673
 398+ 9673              ; Inicia el puntero de Sprite.
 399+ 9673
 400+ 9673 CD B0 8B     2 call Inicia_puntero_objeto_der
 401+ 9676 C9           3 ret
 402+ 9677
 403+ 9677              ; ******************************************************************************************************************************************************************************************
 404+ 9677              ;
 405+ 9677              ;	15/02/23
 406+ 9677              ;
 407+ 9677              ;	Mov_left.
 408+ 9677              ;
 409+ 9677              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9677              ;
 411+ 9677              Mov_left
 412+ 9677
 413+ 9677 21 6D 89     	ld hl,Ctrl_0
 414+ 967A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 967C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 967C              ; 																	; _ en el caso de que no lo haya.
 417+ 967C 3A 6D 89     	ld a,(Ctrl_0)
 418+ 967F CB 77        	bit 6,a
 419+ 9681 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9683
 421+ 9683 CD 99 97     	call Stop_Amadeus_left
 422+ 9686 C8           	ret z
 423+ 9687 20 4A        	jr nz,8F
 424+ 9689
 425+ 9689 3A 51 89     11 ld a,(Coordenada_X)
 426+ 968C A7           	and a
 427+ 968D 20 44        	jr nz,8F
 428+ 968F
 429+ 968F 3A 53 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9692 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9693 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9695
 433+ 9695              ; ---------- ---------- ----------
 434+ 9695
 435+ 9695 3A 74 89     	ld a,(Vel_left)
 436+ 9698 FE 02        	cp 2
 437+ 969A 28 0F        	jr z,1F
 438+ 969C 38 04        	jr c,6F
 439+ 969E FE 04        	cp 4
 440+ 96A0 28 12        	jr z,7F
 441+ 96A2
 442+ 96A2              ; ---------- ---------- ----------
 443+ 96A2
 444+ 96A2 3A 53 89     6 ld a,(CTRL_DESPLZ)
 445+ 96A5 FE F8        	cp $f8
 446+ 96A7 20 2A        	jr nz,8F
 447+ 96A9 18 10        	jr 4F
 448+ 96AB 3A 53 89     1 ld a,(CTRL_DESPLZ)
 449+ 96AE FE F9        	cp $f9
 450+ 96B0 20 21        	jr nz,8F
 451+ 96B2 18 07        	jr 4F
 452+ 96B4 3A 53 89     7 ld a,(CTRL_DESPLZ)
 453+ 96B7 FE FB        	cp $fb
 454+ 96B9 20 18        	jr nz,8F
 455+ 96BB
 456+ 96BB              ; ---------- ---------- ----------
 457+ 96BB
 458+ 96BB              4
 459+ 96BB CD C1 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 96BE              ;	call Reinicio
 461+ 96BE
 462+ 96BE              ; ---------- ---------- ----------
 463+ 96BE
 464+ 96BE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 96C0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 96C1
 467+ 96C1              ;	ld hl,(Indice_Sprite_izq)
 468+ 96C1              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 96C1
 470+ 96C1 CD DA 96     	call DESPLZ_IZQ
 471+ 96C4 C1           	pop bc
 472+ 96C5 10 F9        	djnz 5B
 473+ 96C7 2A 4D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 96CA 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 96CB 22 4D 89     	ld (Posicion_actual),hl
 476+ 96CE CD A5 9E     	call Genera_coordenadas
 477+ 96D1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 96D3
 479+ 96D3              ; ---------- ---------- ----------
 480+ 96D3
 481+ 96D3              ; Movemos, no hay recolocación.
 482+ 96D3
 483+ 96D3 2A 4D 89     8 ld hl,(Posicion_actual)
 484+ 96D6 CD DA 96     	call DESPLZ_IZQ
 485+ 96D9 C9           2 ret
 486+ 96DA
 487+ 96DA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 96DA              ;
 489+ 96DA              ;	22/9/22
 490+ 96DA
 491+ 96DA              DESPLZ_IZQ
 492+ 96DA
 493+ 96DA CD E9 96     	call Desplaza_izquierda
 494+ 96DD CD 35 97         call modifica_parametros_1er_DESPLZ
 495+ 96E0 CD 5D 97     	call Ciclo_completo_2
 496+ 96E3 21 6D 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 96E6 CB BE        	res 7,(hl)
 498+ 96E8 C9           	ret
 499+ 96E9
 500+ 96E9              Desplaza_izquierda
 501+ 96E9
 502+ 96E9 3A 74 89     	ld a,(Vel_left)
 503+ 96EC 47           	ld b,a
 504+ 96ED 2A 5B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 96F0 23           1 inc hl
 506+ 96F1 23           	inc hl
 507+ 96F2 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 96F4 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 96F7 CD 9B 8B     	call Extrae_address
 510+ 96FA 22 4F 89     	ld (Puntero_objeto),hl
 511+ 96FD
 512+ 96FD              ; Modifica (Puntero_DESPLZ_der).
 513+ 96FD
 514+ 96FD              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96FD              ; Cuántos movimientos hemos hecho ??
 516+ 96FD              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96FD
 518+ 96FD 2A 57 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9700 EB           	ex de,hl
 520+ 9701 A7           	and a
 521+ 9702 ED 52        	sbc hl,de
 522+ 9704 CB 3D        	srl l
 523+ 9706 3E 08        6 ld a,8
 524+ 9708 95           	sub l
 525+ 9709 30 1E        	jr nc,3F
 526+ 970B
 527+ 970B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 970B              ; B="0".
 529+ 970B
 530+ 970B 04           4 inc b
 531+ 970C 3C           	inc a
 532+ 970D 20 FC        	jr nz,4B
 533+ 970F 78           	ld a,b
 534+ 9710 08           	ex af,af
 535+ 9711 2A 57 89     	ld hl,(Indice_Sprite_izq)
 536+ 9714 23           5 inc hl
 537+ 9715 23           	inc hl
 538+ 9716 10 FC        	djnz 5B
 539+ 9718 22 5B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 971B CD 9B 8B     	call Extrae_address
 541+ 971E 22 4F 89     	ld (Puntero_objeto),hl
 542+ 9721
 543+ 9721              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9721              ; _(Posicion_actual).
 545+ 9721
 546+ 9721 21 4D 89     	ld hl,Posicion_actual
 547+ 9724 35           	dec (hl)
 548+ 9725 08           	ex af,af
 549+ 9726 6F           	ld l,a
 550+ 9727 18 DD        	jr 6B
 551+ 9729
 552+ 9729              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9729
 554+ 9729 47           3 ld b,a
 555+ 972A 2A 55 89     	ld hl,(Indice_Sprite_der)
 556+ 972D 23           2 inc hl
 557+ 972E 23           	inc hl
 558+ 972F 10 FC        	djnz 2B
 559+ 9731 22 59 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9734 C9           8 ret
 561+ 9735
 562+ 9735              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9735              ;
 564+ 9735              ;	modifica_parametros_1er_DESPLZ
 565+ 9735              ;
 566+ 9735              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9735              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9735              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9735
 570+ 9735 3A 53 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9738 A7           	and a
 572+ 9739 20 1E        	jr nz,1F
 573+ 973B 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 973C 32 53 89         ld (CTRL_DESPLZ),a
 575+ 973F 21 4C 89     	ld hl,Columns
 576+ 9742 34           	inc (hl)
 577+ 9743 3A 5F 89     	ld a,(Cuad_objeto)
 578+ 9746 E6 01        	and 1
 579+ 9748 20 0F        	jr nz,1F
 580+ 974A 2A 4D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 974D 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 974E 22 4D 89     	ld (Posicion_actual),hl
 583+ 9751 CD A5 9E     	call Genera_coordenadas
 584+ 9754 CD B0 97     	call Dec_CTRL_DESPLZ
 585+ 9757 18 03        	jr 2F
 586+ 9759 CD B0 97     1 call Dec_CTRL_DESPLZ
 587+ 975C C9           2 ret
 588+ 975D
 589+ 975D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 975D
 591+ 975D 3A 53 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9760 FE F7        	cp $f7
 593+ 9762 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9764 30 2C        	jr nc,3F
 595+ 9766
 596+ 9766              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9766
 598+ 9766 06 00        	ld b,0
 599+ 9768 04           4 inc b
 600+ 9769 3C           	inc a
 601+ 976A FE F7        	cp $f7
 602+ 976C 20 FA        	jr nz,4B
 603+ 976E 3E FF        	ld a,$ff
 604+ 9770 90           	sub b
 605+ 9771 32 53 89     	ld (CTRL_DESPLZ),a
 606+ 9774 18 1C        	jr 3F
 607+ 9776
 608+ 9776              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9776
 610+ 9776 21 4C 89     1 ld hl,Columns
 611+ 9779 35           	dec (hl)
 612+ 977A AF           	xor a
 613+ 977B 32 53 89     	ld (CTRL_DESPLZ),a
 614+ 977E 3A 5F 89     	ld a,(Cuad_objeto)
 615+ 9781 E6 01        	and 1
 616+ 9783 28 0A        	jr z,2F
 617+ 9785 2A 4D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9788 2B           	dec hl
 619+ 9789 22 4D 89     	ld (Posicion_actual),hl
 620+ 978C CD A5 9E     	call Genera_coordenadas
 621+ 978F
 622+ 978F              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 978F
 624+ 978F CD C3 8B     2 call Inicia_puntero_objeto_izq
 625+ 9792 C9           3 ret
 626+ 9793
 627+ 9793              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9793              ;
 629+ 9793              ;	19/10/22
 630+ 9793              ;
 631+ 9793              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9793              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9793
 634+ 9793 3A 51 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9796 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9798 C9           	ret
 637+ 9799
 638+ 9799              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9799              ;
 640+ 9799              ;	19/10/22
 641+ 9799              ;
 642+ 9799              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9799              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9799
 645+ 9799 3A 51 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 979C FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 979E C9           	ret
 648+ 979F
 649+ 979F              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 979F              ;
 651+ 979F              ;	24/7/22
 652+ 979F              ;
 653+ 979F              ;	Inc_CTRL_DESPLZ
 654+ 979F              ;
 655+ 979F              ;
 656+ 979F              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 979F
 658+ 979F 21 53 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 97A2 3A 75 89     	ld a,(Vel_right)
 660+ 97A5 A7           	and a
 661+ 97A6 28 06        	jr z,1F
 662+ 97A8 47           	ld b,a
 663+ 97A9 34           3 inc (hl)
 664+ 97AA 10 FD        	djnz 3B
 665+ 97AC 18 01        	jr 2F
 666+ 97AE 34           1 inc (hl)
 667+ 97AF C9           2 ret
 668+ 97B0
 669+ 97B0              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 97B0              ;
 671+ 97B0              ;	5/2/23
 672+ 97B0              ;
 673+ 97B0              ;	Dec_CTRL_DESPLZ
 674+ 97B0              ;
 675+ 97B0              ;
 676+ 97B0              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 97B0
 678+ 97B0 21 53 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 97B3 3A 74 89     	ld a,(Vel_left)
 680+ 97B6 A7           	and a
 681+ 97B7 28 06        	jr z,1F
 682+ 97B9 47           	ld b,a
 683+ 97BA 35           3 dec (hl)
 684+ 97BB 10 FD        	djnz 3B
 685+ 97BD 18 01        	jr 2F
 686+ 97BF 35           1 dec (hl)
 687+ 97C0 C9           2 ret
 688+ 97C1
 689+ 97C1              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 97C1
 691+ 97C1 2A 4D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 97C4 01 1F 00     	ld bc,31
 693+ 97C7 A7           	and a
 694+ 97C8 ED 4A        	adc hl,bc
 695+ 97CA 22 4D 89     	ld (Posicion_actual),hl
 696+ 97CD 21 6D 89     	ld hl,Ctrl_0														; $xxx1
 697+ 97D0 CB C6        	set 0,(hl)
 698+ 97D2 C9           	ret
 699+ 97D3
 700+ 97D3              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 97D3
 702+ 97D3 2A 4D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 97D6 01 1F 00     	ld bc,31
 704+ 97D9 A7           	and a
 705+ 97DA ED 42        	sbc hl,bc
 706+ 97DC 22 4D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 97DF 21 6D 89     	ld hl,Ctrl_0
 708+ 97E2 CB CE        	set 1,(hl)
 709+ 97E4 C9           	ret
 710+ 97E5
 711+ 97E5              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 97E5
 713+ 97E5 24           Reaparece_abajo inc h
 714+ 97E6 01 E0 17     	ld bc,$17e0
 715+ 97E9 A7           	and a
 716+ 97EA ED 4A        	adc hl,bc
 717+ 97EC 22 4D 89     	ld (Posicion_actual),hl
 718+ 97EF 21 6D 89     	ld hl,Ctrl_0
 719+ 97F2 CB D6        	set 2,(hl)
 720+ 97F4 C9           	ret
 721+ 97F5
 722+ 97F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 97F5
 724+ 97F5 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 97F8 A7           	and a
 726+ 97F9 ED 42        	sbc hl,bc
 727+ 97FB 22 4D 89     	ld (Posicion_actual),hl
 728+ 97FE 21 6D 89     	ld hl,Ctrl_0
 729+ 9801 CB DE        	set 3,(hl)
 730+ 9803 C9           	ret
 731+ 9804
 732+ 9804              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9804              ;
 734+ 9804              ;	15/07/23
 735+ 9804
 736+ 9804              Reinicio
 737+ 9804
 738+ 9804              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9804
 740+ 9804 AF           	xor a
 741+ 9805 21 84 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9808 CD 26 98     	call Limpia_contenido_hl
 743+ 980B
 744+ 980B 21 4D 89     	ld hl,Posicion_actual
 745+ 980E CD 26 98     	call Limpia_contenido_hl
 746+ 9811
 747+ 9811 CD 0F 8D     	call Inicializa_Puntero_indice_mov
 748+ 9814 CD F2 98     	call Inicia_Puntero_mov
 749+ 9817
 750+ 9817 21 86 89     	ld hl,Incrementa_puntero
 751+ 981A 06 05        	ld b,5
 752+ 981C 77           1 ld (hl),a
 753+ 981D 23           	inc hl
 754+ 981E 10 FC        	djnz 1B
 755+ 9820
 756+ 9820 21 72 89     	ld hl,Ctrl_2
 757+ 9823 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9825
 759+ 9825 C9           	ret
 760+ 9826
 761+ 9826 77           Limpia_contenido_hl	ld (hl),a
 762+ 9827 23           	inc hl
 763+ 9828 77           	ld (hl),a
 764+ 9829 C9           	ret
 765+ 982A
 766+ 982A
# file closed: Direcciones.asm
1707  982A              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 982A              ; ----- ----- ----- ----- -----
   2+ 982A              ;
   3+ 982A              ;   28/12/23
   4+ 982A
   5+ 982A              Movimiento
   6+ 982A
   7+ 982A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 982A
   9+ 982A 3A 72 89         ld a,(Ctrl_2)
  10+ 982D CB 57            bit 2,a
  11+ 982F 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9831
  13+ 9831 2A 82 89         ld hl,(Puntero_mov)
  14+ 9834 7E               ld a,(hl)
  15+ 9835
  16+ 9835              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9835
  18+ 9835              Inicia_desplazamiento.
  19+ 9835
  20+ 9835              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9835
  22+ 9835 CD 28 99         call Ajusta_velocidad_desplazamiento
  23+ 9838
  24+ 9838              ; Iniciamos (Repetimos_mov).
  25+ 9838
  26+ 9838 7E               ld a,(hl)
  27+ 9839 E6 0F            and $0f
  28+ 983B 32 88 89         ld (Repetimos_desplazamiento),a
  29+ 983E 32 89 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9841
  31+ 9841              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9841
  33+ 9841 23               inc hl
  34+ 9842 7E               ld a,(hl)
  35+ 9843 32 8B 89         ld (Cola_de_desplazamiento),a
  36+ 9846 2B               dec hl
  37+ 9847
  38+ 9847 21 72 89         ld hl,Ctrl_2
  39+ 984A CB D6            set 2,(hl)
  40+ 984C
  41+ 984C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 984C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 984C
  44+ 984C              Desplazamiento_iniciado
  45+ 984C
  46+ 984C CD FC 98         call Aplica_desplazamiento
  47+ 984F
  48+ 984F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 984F
  50+ 984F 3A AB 89         ld a,(Ctrl_3)
  51+ 9852 CB 4F            bit 1,a
  52+ 9854 C0               ret nz
  53+ 9855
  54+ 9855 21 88 89     3 ld hl,Repetimos_desplazamiento
  55+ 9858 35               dec (hl)
  56+ 9859 C0               ret nz
  57+ 985A
  58+ 985A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 985A              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 985A              ; Analiza (Cola_de_desplazamiento).
  61+ 985A
  62+ 985A 3A 8B 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 985D A7               and a
  64+ 985E CC 51 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9861 28 30            jr z,Reinicia_el_movimiento
  66+ 9863
  67+ 9863 FE FF            cp $ff
  68+ 9865 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9867
  70+ 9867 FE FE            cp $fe
  71+ 9869 CC D6 98         call z,Fijamos_bucle
  72+ 986C 28 25            jr z,Reinicia_el_movimiento
  73+ 986E
  74+ 986E FE FD            cp $fd
  75+ 9870 20 11            jr nz,1F
  76+ 9872
  77+ 9872              ; ---
  78+ 9872              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9872
  80+ 9872 3A 72 89         ld a,(Ctrl_2)
  81+ 9875 CB 5F            bit 3,a
  82+ 9877 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9879
  84+ 9879              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9879
  86+ 9879 21 72 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 987C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 987E
  89+ 987E CD E7 98         call Inicia_Repetimos_movimiento
  90+ 9881 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9883              ; ---
  92+ 9883
  93+ 9883 FE 01        1 cp 1
  94+ 9885 CA C0 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9888
  96+ 9888 3D               dec a
  97+ 9889 32 8B 89         ld (Cola_de_desplazamiento),a
  98+ 988C
  99+ 988C 3A 89 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 988F 32 88 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9892              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9892 C9               ret
 103+ 9893
 104+ 9893              Reinicia_el_movimiento
 105+ 9893
 106+ 9893 3A 72 89         ld a,(Ctrl_2)
 107+ 9896 CB 5F            bit 3,a
 108+ 9898 28 1B            jr z,2F
 109+ 989A
 110+ 989A              ; (Cola_de_desplazamiento)="254".
 111+ 989A
 112+ 989A 21 8A 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 989D 35               dec (hl)
 114+ 989E 20 15            jr nz,2F
 115+ 98A0
 116+ 98A0              ; Fin de las repeticiones del último movimiento.
 117+ 98A0
 118+ 98A0 21 72 89         ld hl,Ctrl_2
 119+ 98A3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 98A5
 121+ 98A5 2A 82 89         ld hl,(Puntero_mov)
 122+ 98A8 23               inc hl
 123+ 98A9 23               inc hl
 124+ 98AA 23               inc hl
 125+ 98AB 22 82 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 98AE              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 98AE 7E               ld a,(hl)
 128+ 98AF 32 8B 89         ld (Cola_de_desplazamiento),a
 129+ 98B2
 130+ 98B2 C3 5A 98         jp Cola
 131+ 98B5
 132+ 98B5 CD F2 98     2 call Inicia_Puntero_mov
 133+ 98B8
 134+ 98B8 21 72 89         ld hl,Ctrl_2
 135+ 98BB CB 96            res 2,(hl)
 136+ 98BD
 137+ 98BD C3 2A 98         jp Movimiento
 138+ 98C0
 139+ 98C0              Siguiente_desplazamiento
 140+ 98C0
 141+ 98C0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 98C0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 98C0
 144+ 98C0 21 72 89         ld hl,Ctrl_2
 145+ 98C3 CB 96            res 2,(hl)
 146+ 98C5
 147+ 98C5 2A 82 89         ld hl,(Puntero_mov)
 148+ 98C8 23               inc hl
 149+ 98C9 23               inc hl
 150+ 98CA 22 82 89         ld (Puntero_mov),hl
 151+ 98CD
 152+ 98CD 7E               ld a,(hl)
 153+ 98CE A7               and a
 154+ 98CF CC 51 99         call z,Incrementa_Puntero_indice_mov
 155+ 98D2 CA 93 98         jp z,Reinicia_el_movimiento
 156+ 98D5
 157+ 98D5 C9               ret
 158+ 98D6
 159+ 98D6              ; Subrutinas -----------------------------------------
 160+ 98D6              ; ---------- --------- --------- ---------- ----------
 161+ 98D6              ;
 162+ 98D6              ;   24/07/23
 163+ 98D6              ;
 164+ 98D6              ;   Fijamos_bucle
 165+ 98D6              ;
 166+ 98D6              ;
 167+ 98D6
 168+ 98D6              Fijamos_bucle
 169+ 98D6
 170+ 98D6 3A 86 89         ld a,(Incrementa_puntero)
 171+ 98D9 3C               inc a
 172+ 98DA 32 87 89         ld (Incrementa_puntero_backup),a
 173+ 98DD
 174+ 98DD CD 51 99         call Incrementa_Puntero_indice_mov
 175+ 98E0 2A 80 89         ld hl,(Puntero_indice_mov)
 176+ 98E3 22 84 89         ld (Puntero_indice_mov_bucle),hl
 177+ 98E6 C9               ret
 178+ 98E7
 179+ 98E7              ; ---------- --------- --------- ---------- ----------
 180+ 98E7              ;
 181+ 98E7              ;   07/7/23
 182+ 98E7              ;
 183+ 98E7              ;   Inicia_Repetimos_movimiento
 184+ 98E7              ;
 185+ 98E7              ;
 186+ 98E7
 187+ 98E7              Inicia_Repetimos_movimiento
 188+ 98E7
 189+ 98E7              ; Iniciamos (Repetimos_movimiento).
 190+ 98E7
 191+ 98E7 DD 2A 82 89      ld ix,(Puntero_mov)
 192+ 98EB DD 7E 02         ld a,(ix+2)
 193+ 98EE 32 8A 89         ld (Repetimos_movimiento),a
 194+ 98F1
 195+ 98F1 C9               ret
 196+ 98F2
 197+ 98F2              ; ---------- --------- --------- ---------- ----------
 198+ 98F2              ;
 199+ 98F2              ;   26/6/23
 200+ 98F2              ;
 201+ 98F2              ;   Inicia_Puntero_mov
 202+ 98F2              ;
 203+ 98F2              ;
 204+ 98F2
 205+ 98F2 2A 80 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 98F5 CD 9B 8B         call Extrae_address
 207+ 98F8 22 82 89         ld (Puntero_mov),hl
 208+ 98FB C9               ret
 209+ 98FC
 210+ 98FC              ; ---------- --------- --------- ---------- ----------
 211+ 98FC              ;
 212+ 98FC              ;   27/06/23
 213+ 98FC              ;
 214+ 98FC              ;   Aplica_movimiento.
 215+ 98FC
 216+ 98FC              Aplica_desplazamiento
 217+ 98FC
 218+ 98FC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98FC
 220+ 98FC 2A 82 89         ld hl, (Puntero_mov)
 221+ 98FF
 222+ 98FF 7E               ld a,(hl)
 223+ 9900 E6 F0            and $f0
 224+ 9902 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9903
 226+ 9903 CB 7E            bit 7,(hl)
 227+ 9905 28 03            jr z,1F
 228+ 9907 CD 11 95         call Mov_up
 229+ 990A 2A 82 89     1 ld hl, (Puntero_mov)
 230+ 990D CB 76            bit 6,(hl)
 231+ 990F 28 03            jr z,2F
 232+ 9911 CD D8 94         call Mov_down
 233+ 9914
 234+ 9914              ; Se ha aplicado reinicio ???
 235+ 9914              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9914
 237+ 9914              ;    ld a,(Ctrl_3)
 238+ 9914              ;    bit 1,a
 239+ 9914              ;    ret nz
 240+ 9914
 241+ 9914 2A 82 89     2 ld hl, (Puntero_mov)
 242+ 9917 CB 6E            bit 5,(hl)
 243+ 9919 28 03            jr z,3F
 244+ 991B CD 77 96         call Mov_left
 245+ 991E 2A 82 89     3 ld hl, (Puntero_mov)
 246+ 9921 CB 66            bit 4,(hl)
 247+ 9923 C8               ret z
 248+ 9924 CD 54 95         call Mov_right
 249+ 9927 C9               ret
 250+ 9928
 251+ 9928              ; ---------- --------- --------- ---------- ----------
 252+ 9928              ;
 253+ 9928              ;   26/06/23
 254+ 9928              ;
 255+ 9928              ;   Ajusta_velocidad_desplazamiento.
 256+ 9928
 257+ 9928              Ajusta_velocidad_desplazamiento
 258+ 9928
 259+ 9928              ; 1er byte de la cadena de movimiento.
 260+ 9928              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9928
 262+ 9928 CD 46 99         call Extrae_nibble_alto
 263+ 992B
 264+ 992B 32 76 89         ld (Vel_up),a
 265+ 992E 79               ld a,c
 266+ 992F E6 0F            and $0f
 267+ 9931 32 77 89         ld (Vel_down),a
 268+ 9934
 269+ 9934              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9934              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9934
 272+ 9934 23               inc hl
 273+ 9935 CD 46 99         call Extrae_nibble_alto
 274+ 9938
 275+ 9938 32 74 89         ld (Vel_left),a
 276+ 993B 79               ld a,c
 277+ 993C E6 0F            and $0f
 278+ 993E 32 75 89         ld (Vel_right),a
 279+ 9941
 280+ 9941              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9941
 282+ 9941 23               inc hl
 283+ 9942 22 82 89         ld (Puntero_mov),hl
 284+ 9945 C9               ret
 285+ 9946
 286+ 9946 06 04        Extrae_nibble_alto ld b,4
 287+ 9948 7E               ld a,(hl)
 288+ 9949 4F               ld c,a
 289+ 994A E6 F0            and $f0
 290+ 994C CB 3F        1 srl a
 291+ 994E 10 FC            djnz 1B
 292+ 9950 C9               ret
 293+ 9951
 294+ 9951              ; ---------- --------- --------- ---------- ----------
 295+ 9951              ;
 296+ 9951              ;   5/7/23
 297+ 9951              ;
 298+ 9951              ;   Incrementa_Puntero_indice_mov
 299+ 9951
 300+ 9951              Incrementa_Puntero_indice_mov
 301+ 9951
 302+ 9951 21 86 89         ld hl,Incrementa_puntero
 303+ 9954 34               inc (hl)
 304+ 9955
 305+ 9955 2A 80 89         ld hl,(Puntero_indice_mov)
 306+ 9958 01 02 00         ld bc,2
 307+ 995B A7               and a
 308+ 995C 09               add hl,bc
 309+ 995D 22 80 89         ld (Puntero_indice_mov),hl
 310+ 9960
 311+ 9960 7E               ld a,(hl)
 312+ 9961 A7               and a
 313+ 9962
 314+ 9962              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9962
 316+ 9962              ;    jr z,$
 317+ 9962
 318+ 9962              ;! Reinicia el Patrón de movimiento.
 319+ 9962
 320+ 9962 CC 67 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 9965
 322+ 9965 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9966
 324+ 9966 C9               ret
 325+ 9967
 326+ 9967              ; ---------- --------- --------- ---------- ----------
 327+ 9967              ;
 328+ 9967              ;   15/01/24
 329+ 9967              ;
 330+ 9967              ;   Inicializa_Puntero_indice_mov
 331+ 9967
 332+ 9967              Inicializa_Puntero_indice_mov_2
 333+ 9967
 334+ 9967              ; Existe etiqueta de bucle principal???
 335+ 9967
 336+ 9967 2A 84 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 996A 24               inc h
 338+ 996B 25               dec h
 339+ 996C 28 05            jr z,2F
 340+ 996E
 341+ 996E 22 80 89         ld (Puntero_indice_mov),hl
 342+ 9971 18 14            jr 3F
 343+ 9973
 344+ 9973              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9973
 346+ 9973 3A 86 89     2 ld a,(Incrementa_puntero)
 347+ 9976 47               ld b,a
 348+ 9977
 349+ 9977 2A 80 89         ld hl,(Puntero_indice_mov)
 350+ 997A 2B           1 dec hl
 351+ 997B 2B               dec hl
 352+ 997C 10 FC            djnz 1B
 353+ 997E 22 80 89         ld (Puntero_indice_mov),hl
 354+ 9981
 355+ 9981 AF               xor a
 356+ 9982 32 86 89         ld (Incrementa_puntero),a
 357+ 9985 18 06            jr 4F
 358+ 9987
 359+ 9987 3A 87 89     3 ld a,(Incrementa_puntero_backup)
 360+ 998A 32 86 89         ld (Incrementa_puntero),a
 361+ 998D C9           4 ret
 362+ 998E
 363+ 998E              ; ----------------------------------------------------------------------
 364+ 998E              ;
 365+ 998E              ;   30/01/24
 366+ 998E              ;
 367+ 998E              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 998E
 369+ 998E 3A 4A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9991 CD 20 8E         call Calcula_salto_en_BC
 371+ 9994 21 78 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9997 A7               and a
 373+ 9998 ED 4A            adc hl,bc
 374+ 999A C9               ret
 375+ 999B
 376+ 999B              ; ----------------------------------------------------------------------
 377+ 999B              ;
 378+ 999B              ;   30/01/24
 379+ 999B              ;
 380+ 999B              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 999B              ;
 382+ 999B              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 999B
 384+ 999B 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 999C 23               inc hl
 386+ 999D 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 999E 69               ld l,c
 388+ 999F 60               ld h,b
 389+ 99A0 22 6B 89         ld (Contador_de_mov_masticados),hl
 390+ 99A3 C9               ret
 391+ 99A4
# file closed: Movimiento.asm
1708  99A4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 99A4              ; ******************************************************************************************************************************************************************************************
   2+ 99A4              ;
   3+ 99A4              ;   21/07/23
   4+ 99A4              ;
   5+ 99A4              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 99A4              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 99A4              ;
   8+ 99A4              ;
   9+ 99A4              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 99A4              ;
  11+ 99A4              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 99A4              ;               _ hacen las entidades hacia abajo.
  13+ 99A4              ;
  14+ 99A4              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 99A4              ;
  16+ 99A4              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 99A4              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 99A4              ;
  19+ 99A4              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 99A4              ;           _ la bala.
  21+ 99A4              ;
  22+ 99A4              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 99A4              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 99A4              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 99A4              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 99A4              ;           _ en el momento de generarse la bala)).
  27+ 99A4
  28+ 99A4              Genera_disparo
  29+ 99A4
  30+ 99A4              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 99A4              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 99A4              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 99A4              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 99A4              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 99A4              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 99A4              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 99A4
  38+ 99A4              ; Exclusiones:
  39+ 99A4
  40+ 99A4 3A 77 89         ld a,(Vel_down)
  41+ 99A7 47               ld b,a
  42+ 99A8 3A BD 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 99AB B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 99AC D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 99AD 3A 6E 89         ld a,(Columnas)
  46+ 99B0 47               ld b,a
  47+ 99B1 3A 4C 89         ld a,(Columns)
  48+ 99B4 B8               cp b
  49+ 99B5 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 99B6
  51+ 99B6              ; ----- ----- -----
  52+ 99B6
  53+ 99B6 3A 6D 89         ld a,(Ctrl_0)
  54+ 99B9 CB 77            bit 6,a
  55+ 99BB 20 06            jr nz,14F
  56+ 99BD
  57+ 99BD 3A 52 89         ld a,(Coordenada_y)
  58+ 99C0 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 99C2 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 99C3
  61+ 99C3 21 31 81     14 ld hl,Indice_disparo
  62+ 99C6 3A 53 89         ld a,(CTRL_DESPLZ)
  63+ 99C9 4F               ld c,a
  64+ 99CA 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 99CC              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 99CC              ;                                            ""        ""       "f9", B="1"
  67+ 99CC              ;                                            ""        ""       "fb", B="2"
  68+ 99CC              ;                                            ""        ""       "fb", B="3"
  69+ 99CC A7               and a
  70+ 99CD 28 10            jr z,1F
  71+ 99CF E6 01            and 1
  72+ 99D1 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 99D2
  74+ 99D2 79               ld a,c
  75+ 99D3 16 F9            ld d,$f9
  76+ 99D5 23           2 inc hl
  77+ 99D6 23               inc hl
  78+ 99D7 04               inc b
  79+ 99D8 BA               cp d
  80+ 99D9 28 04            jr z,1F
  81+ 99DB 14               inc d
  82+ 99DC 14               inc d
  83+ 99DD 18 F6            jr 2B
  84+ 99DF
  85+ 99DF CD 9B 8B     1 call Extrae_address
  86+ 99E2 E5               push hl
  87+ 99E3 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 99E5 DD 21 83 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 99E9
  90+ 99E9              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 99E9              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 99E9
  93+ 99E9 3A 6D 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 99EC CB 77            bit 6,a
  95+ 99EE 20 04            jr nz,19F
  96+ 99F0
  97+ 99F0 AF               xor a
  98+ 99F1 32 C6 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 99F4
 100+ 99F4 3A 5F 89     19 ld a,(Cuad_objeto)
 101+ 99F7 FE 02            cp 2
 102+ 99F9 38 66            jr c,3F
 103+ 99FB 28 64            jr z,3F
 104+ 99FD
 105+ 99FD              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 99FD
 107+ 99FD E6 01            and 1
 108+ 99FF 28 30            jr z,4F
 109+ 9A01
 110+ 9A01              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A01              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A01              ;
 113+ 9A01              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A01              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A01              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A01
 117+ 9A01 2A 4D 89     	ld hl,(Posicion_actual)
 118+ 9A04
 119+ 9A04              ;   Amadeus o entidad ???.
 120+ 9A04
 121+ 9A04 3A 6D 89         ld a,(Ctrl_0)
 122+ 9A07 CB 77            bit 6,a
 123+ 9A09 28 0A            jr z,8F
 124+ 9A0B
 125+ 9A0B              ; 	Dispara Amadeus.
 126+ 9A0B
 127+ 9A0B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A0D CD AC 91         call PreviousScan
 129+ 9A10 CD AC 91         call PreviousScan
 130+ 9A13
 131+ 9A13              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9A13              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9A13              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9A13              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9A13
 136+ 9A13 18 11            jr 10F
 137+ 9A15
 138+ 9A15              ; 	Dispara Entidad.
 139+ 9A15
 140+ 9A15 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9A18              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9A18
 143+ 9A18              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9A18              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9A18
 146+ 9A18 C5               push bc
 147+ 9A19 06 10            ld b,16
 148+ 9A1B CD 9D 91     9 call NextScan
 149+ 9A1E 10 FB            djnz 9B
 150+ 9A20 C1               pop bc
 151+ 9A21 CD 8B 9A         call Ajusta_disparo_parte_izquierda
 152+ 9A24 18 06            jr 17F
 153+ 9A26
 154+ 9A26              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9A26              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9A26              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9A26              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9A26
 159+ 9A26 CD 8B 9A     10 call Ajusta_disparo_parte_izquierda
 160+ 9A29 CD 00 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9A2C              ;                                                      ; _al generar el disparo.
 162+ 9A2C
 163+ 9A2C              ; 	LLegados a este punto tendremos:
 164+ 9A2C              ;
 165+ 9A2C              ;       Puntero_objeto_disparo en IY.
 166+ 9A2C              ;       Rutinas_de_impresion en IX.
 167+ 9A2C              ;       Puntero_de_impresion en HL.
 168+ 9A2C              ;       Impacto/Dirección en BC.
 169+ 9A2C
 170+ 9A2C CD 93 9A     17 call Almacena_disparo
 171+ 9A2F 18 52            jr 6F                                             ; RET.
 172+ 9A31
 173+ 9A31              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9A31              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9A31              ;
 176+ 9A31              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9A31              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9A31              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9A31
 180+ 9A31 2A 4D 89     4 ld hl,(Posicion_actual)
 181+ 9A34
 182+ 9A34              ;   Amadeus o entidad ???.
 183+ 9A34
 184+ 9A34 3A 6D 89         ld a,(Ctrl_0)
 185+ 9A37 CB 77            bit 6,a
 186+ 9A39 28 0A            jr z,11F
 187+ 9A3B
 188+ 9A3B              ; 	Dispara Amadeus.
 189+ 9A3B
 190+ 9A3B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9A3D CD AC 91         call PreviousScan
 192+ 9A40 CD AC 91         call PreviousScan
 193+ 9A43
 194+ 9A43              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9A43              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9A43              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9A43              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9A43
 199+ 9A43 18 11            jr 13F
 200+ 9A45
 201+ 9A45              ; 	Dispara Entidad.
 202+ 9A45
 203+ 9A45 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9A48              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9A48
 206+ 9A48              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9A48              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9A48
 209+ 9A48 C5               push bc
 210+ 9A49 06 10            ld b,16
 211+ 9A4B CD 9D 91     12 call NextScan
 212+ 9A4E 10 FB            djnz 12B
 213+ 9A50 C1               pop bc
 214+ 9A51
 215+ 9A51 CD 84 9A         call Ajusta_disparo_parte_derecha
 216+ 9A54 18 06            jr 18F
 217+ 9A56
 218+ 9A56              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9A56              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9A56              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9A56              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9A56
 223+ 9A56 CD 84 9A     13 call Ajusta_disparo_parte_derecha
 224+ 9A59 CD 00 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9A5C              ;                                                       ; _al generar el disparo.
 226+ 9A5C
 227+ 9A5C              ; LLegados a este punto tendremos:
 228+ 9A5C              ;
 229+ 9A5C              ;       Puntero_objeto_disparo en IY.
 230+ 9A5C              ;       Rutinas_de_impresion en IX.
 231+ 9A5C              ;       Puntero_de_impresion en HL.
 232+ 9A5C              ;       Impacto/Dirección en BC.
 233+ 9A5C
 234+ 9A5C CD 93 9A     18 call Almacena_disparo
 235+ 9A5F 18 22            jr 6F                                               ; RET.
 236+ 9A61
 237+ 9A61              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9A61
 239+ 9A61 28 11        3 jr z,5F
 240+ 9A63
 241+ 9A63              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9A63              ;
 243+ 9A63              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9A63              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9A63              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9A63              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9A63
 248+ 9A63              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9A63              ;	   ""        ""       "f9", B="1"
 250+ 9A63              ;	   ""        ""       "fb", B="2"
 251+ 9A63              ; 	   ""        ""       "fb", B="3"
 252+ 9A63
 253+ 9A63 2A 4D 89     	ld hl,(Posicion_actual)
 254+ 9A66 CD 9D 91     	call NextScan
 255+ 9A69
 256+ 9A69              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9A69              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9A69              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9A69              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9A69
 261+ 9A69 CD 8B 9A         call Ajusta_disparo_parte_izquierda
 262+ 9A6C
 263+ 9A6C              ; 	No se produce impacto. B="$80"
 264+ 9A6C              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9A6C
 266+ 9A6C 01 80 80         ld bc,$8080
 267+ 9A6F
 268+ 9A6F              ; 	LLegados a este punto tendremos:
 269+ 9A6F              ;
 270+ 9A6F              ;       Puntero_objeto_disparo en IY.
 271+ 9A6F              ;       Rutinas_de_impresion en IX.
 272+ 9A6F              ;       Puntero_de_impresion en HL.
 273+ 9A6F              ;       Impacto/Dirección en BC.
 274+ 9A6F
 275+ 9A6F CD 93 9A         call Almacena_disparo
 276+ 9A72 18 0F            jr 6F                                           ; RET.
 277+ 9A74
 278+ 9A74              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9A74              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9A74              ;
 281+ 9A74              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9A74              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9A74              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9A74              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9A74
 286+ 9A74 2A 4D 89     5 ld hl,(Posicion_actual)
 287+ 9A77 CD 9D 91     	call NextScan
 288+ 9A7A
 289+ 9A7A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9A7A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9A7A              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9A7A              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9A7A
 294+ 9A7A CD 84 9A         call Ajusta_disparo_parte_derecha
 295+ 9A7D
 296+ 9A7D              ; 	No se produce impacto. B="$80"
 297+ 9A7D              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9A7D
 299+ 9A7D 01 80 80     15 ld bc,$8080
 300+ 9A80
 301+ 9A80              ; 	LLegados a este punto tendremos:
 302+ 9A80              ;
 303+ 9A80              ;       Puntero_objeto_disparo en IY.
 304+ 9A80              ;       Rutinas_de_impresion en IX.
 305+ 9A80              ;       Puntero_de_impresion en HL.
 306+ 9A80              ;       Impacto/Dirección en BC.
 307+ 9A80
 308+ 9A80 CD 93 9A         call Almacena_disparo
 309+ 9A83
 310+ 9A83 C9           6 ret
 311+ 9A84
 312+ 9A84              ; ----------------------------------------------------------------
 313+ 9A84              ;
 314+ 9A84              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9A84              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9A84              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9A84
 318+ 9A84 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9A85 FE 02            cp 2
 320+ 9A87 38 01            jr c,1F
 321+ 9A89 23               inc hl
 322+ 9A8A C9           1 ret
 323+ 9A8B
 324+ 9A8B 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9A8C FE 01        	cp 1
 326+ 9A8E 20 01        	jr nz,1F
 327+ 9A90 2B           	dec hl
 328+ 9A91 2B           1 dec hl
 329+ 9A92 C9               ret
 330+ 9A93
 331+ 9A93              ; ----------------------------------------------------------------
 332+ 9A93              ;
 333+ 9A93              ;   25/02/23
 334+ 9A93              ;
 335+ 9A93              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9A93              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9A93              ;
 338+ 9A93              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9A93              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9A93
 341+ 9A93              Almacena_disparo
 342+ 9A93
 343+ 9A93 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9A94 F1               pop af
 345+ 9A95 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9A96
 347+ 9A96 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9A97 E6 01            and 1
 349+ 9A99 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9A9B              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9A9B              ; 	Dispara AMADEUS.
 352+ 9A9B
 353+ 9A9B              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9A9B              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9A9B              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9A9B              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9A9B
 358+ 9A9B C5               push bc
 359+ 9A9C 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9A9F 2A B0 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9AA2 A7               and a
 362+ 9AA3 ED 42            sbc hl,bc
 363+ 9AA5 CC 20 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9AA8 C1               pop bc
 365+ 9AA9 28 54            jr z,4F
 366+ 9AAB
 367+ 9AAB 2A B0 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9AAE 23               inc hl
 369+ 9AAF 23               inc hl
 370+ 9AB0 22 B0 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9AB3              ;                                                   ; _ Disparo_(+1).
 372+ 9AB3 18 18            jr 2F
 373+ 9AB5
 374+ 9AB5              ; Dispara una entidad.
 375+ 9AB5
 376+ 9AB5 C5           1 push bc
 377+ 9AB6 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9AB9 2A AE 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9ABC A7               and a
 380+ 9ABD ED 42            sbc hl,bc
 381+ 9ABF CC 19 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9AC2 C1               pop bc
 383+ 9AC3 28 3A            jr z,4F
 384+ 9AC5
 385+ 9AC5 2A AE 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9AC8 23               inc hl
 387+ 9AC9 23               inc hl
 388+ 9ACA 22 AE 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9ACD              ;                                                   ; _ Disparo_(+1).
 390+ 9ACD CD 9B 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9AD0              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9AD0              ;
 393+ 9AD0              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9AD0              ;                                                     Rutinas_de_impresion en IX.
 395+ 9AD0              ;                                                     Puntero_de_impresion en HL.
 396+ 9AD0              ;                                                     Impacto/Dirección en BC.
 397+ 9AD0
 398+ 9AD0 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9AD1 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9AD2 23               inc hl                                          ; _ al siguiente.
 401+ 9AD3 A7               and a
 402+ 9AD4 20 C0            jr nz,3B
 403+ 9AD6
 404+ 9AD6 08               ex af,af
 405+ 9AD7 ED 73 9D 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9ADB F9               ld sp,hl
 407+ 9ADC
 408+ 9ADC DD E5            push ix                                         ; Rutina de impresión.
 409+ 9ADE F5               push af                                         ; Puntero de impresión.
 410+ 9ADF FD E5            push iy                                         ; Puntero objeto.
 411+ 9AE1 C5               push bc                                         ; Control.
 412+ 9AE2
 413+ 9AE2 ED 7B 9D 89      ld sp,(Stack)
 414+ 9AE6
 415+ 9AE6              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9AE6
 417+ 9AE6 21 8C 89     	ld hl,Ctrl_1
 418+ 9AE9 CB C6        	set 0,(hl)
 419+ 9AEB
 420+ 9AEB DD E5        	push ix
 421+ 9AED E1               pop hl
 422+ 9AEE F5               push af
 423+ 9AEF DD E1            pop ix
 424+ 9AF1
 425+ 9AF1 CD BF 80     	call Guarda_foto_registros
 426+ 9AF4
 427+ 9AF4 21 8C 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9AF7 CB 86        	res 0,(hl)
 429+ 9AF9
 430+ 9AF9              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9AF9              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9AF9
 433+ 9AF9 CD 20 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9AFC CD 19 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9AFF
 436+ 9AFF C9           4 ret
 437+ 9B00
 438+ 9B00              ; ----------------------------------------------------------------
 439+ 9B00              ;
 440+ 9B00              ;   4/3/23
 441+ 9B00              ;
 442+ 9B00              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B00              ;   _ al generarse el disparo.
 444+ 9B00              ;
 445+ 9B00              ;       "$80" ..... No se produce colisión.
 446+ 9B00              ;       "$81" ..... Se produce colisión.
 447+ 9B00              ;
 448+ 9B00              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B00              ;         _ que forman el disparo.
 450+ 9B00
 451+ 9B00
 452+ 9B00              Comprueba_Colision
 453+ 9B00
 454+ 9B00              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B00
 456+ 9B00 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B02 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B03
 459+ 9B03 CD 39 9B         call Modifica_H_Velocidad_disparo
 460+ 9B06
 461+ 9B06 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B07 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B09 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B0B
 465+ 9B0B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B0D CD 29 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9B10
 468+ 9B10 7B               ld a,e
 469+ 9B11 E6 01            and 1
 470+ 9B13 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9B15              ;                                                  ; _ para activar IMPACTO.
 472+ 9B15 E1               pop hl
 473+ 9B16 E5               push hl
 474+ 9B17 CD 9D 91         call NextScan
 475+ 9B1A
 476+ 9B1A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9B1B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9B1D 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9B1F              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9B1F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9B21 CD 29 9B         call Bucle_2
 482+ 9B24
 483+ 9B24 43           1 ld b,e
 484+ 9B25 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9B26 FD E1            pop iy
 486+ 9B28 C9               ret
 487+ 9B29
 488+ 9B29              ; ---------- ----------
 489+ 9B29
 490+ 9B29 06 02        Bucle_2 ld b,2
 491+ 9B2B FD 7E 00     2 ld a,(iy)
 492+ 9B2E A6               and (hl)
 493+ 9B2F 28 02            jr z,1F
 494+ 9B31 1E 81            ld e,$81
 495+ 9B33 23           1 inc hl
 496+ 9B34 FD 23            inc iy
 497+ 9B36 10 F3            djnz 2B
 498+ 9B38 C9               ret
 499+ 9B39
 500+ 9B39              ; ---------- ----------
 501+ 9B39              ;
 502+ 9B39              ;   21/7/23
 503+ 9B39
 504+ 9B39              Modifica_H_Velocidad_disparo
 505+ 9B39
 506+ 9B39 3A BD 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9B3C FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9B3E D0               ret nc                                         ; _ incrementamos H.
 509+ 9B3F 24               inc h
 510+ 9B40
 511+ 9B40 C9               ret
 512+ 9B41
 513+ 9B41              ; -------------------------------------------------------------------------------------------------------------
 514+ 9B41              ;
 515+ 9B41              ;   04/12/23
 516+ 9B41              ;
 517+ 9B41              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9B41              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9B41              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9B41              ;
 521+ 9B41              ;   MODIFICA: HL,DE,B y A.
 522+ 9B41
 523+ 9B41              Genera_coordenadas_X
 524+ 9B41
 525+ 9B41              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9B41              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9B41
 528+ 9B41              ;   Limpiamos almacenes.
 529+ 9B41
 530+ 9B41 CD 72 9B         call Limpia_Coordenadas_X
 531+ 9B44
 532+ 9B44              ;   Almacenamos coordenadas X.
 533+ 9B44
 534+ 9B44              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9B44
 536+ 9B44 2A 67 89         ld hl,(Puntero_de_impresion)
 537+ 9B47 11 BA 89         ld de,Coordenadas_X_Entidad
 538+ 9B4A 06 02            ld b,2
 539+ 9B4C
 540+ 9B4C 3A 53 89         ld a,(CTRL_DESPLZ)
 541+ 9B4F A7               and a
 542+ 9B50 28 01            jr z,1F
 543+ 9B52 04               inc b
 544+ 9B53
 545+ 9B53 CD 69 9B     1 call Guarda_coordenadas_X
 546+ 9B56
 547+ 9B56              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9B56
 549+ 9B56 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9B59 11 B7 89         ld de,Coordenadas_X_Amadeus
 551+ 9B5C 06 02            ld b,2
 552+ 9B5E
 553+ 9B5E 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9B61 A7               and a
 555+ 9B62 28 01            jr z,2F
 556+ 9B64 04               inc b
 557+ 9B65
 558+ 9B65 CD 69 9B     2 call Guarda_coordenadas_X
 559+ 9B68
 560+ 9B68              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9B68
 562+ 9B68 C9               ret
 563+ 9B69
 564+ 9B69              ; ----- ----- ----- ----- -----
 565+ 9B69
 566+ 9B69 7D           Guarda_coordenadas_X  ld a,l
 567+ 9B6A E6 1F            and $1f
 568+ 9B6C 12           1 ld (de),a
 569+ 9B6D 3C               inc a
 570+ 9B6E 13               inc de
 571+ 9B6F 10 FB            djnz 1B
 572+ 9B71 C9               ret
 573+ 9B72
 574+ 9B72 AF           Limpia_Coordenadas_X xor a
 575+ 9B73 06 06            ld b,6
 576+ 9B75 21 B7 89         ld hl,Coordenadas_X_Amadeus
 577+ 9B78 77           1 ld (hl),a
 578+ 9B79 23               inc hl
 579+ 9B7A 10 FC            djnz 1B
 580+ 9B7C C9               ret
 581+ 9B7D
 582+ 9B7D              ; ----- ----- ----- ----- -----
 583+ 9B7D
 584+ 9B7D              Compara_coordenadas_X
 585+ 9B7D
 586+ 9B7D 06 03            ld b,3
 587+ 9B7F 11 BC 89         ld de,Coordenadas_X_Entidad+2
 588+ 9B82
 589+ 9B82 1A               ld a,(de)
 590+ 9B83 A7               and a
 591+ 9B84 20 01            jr nz,2F
 592+ 9B86 05               dec b
 593+ 9B87
 594+ 9B87 1B           2 dec de
 595+ 9B88 1B               dec de
 596+ 9B89 21 B7 89         ld hl,Coordenadas_X_Amadeus
 597+ 9B8C
 598+ 9B8C D5           1 push de
 599+ 9B8D E5               push hl
 600+ 9B8E C5               push bc
 601+ 9B8F
 602+ 9B8F CD 99 9B         call Comparando
 603+ 9B92
 604+ 9B92 C1               pop bc
 605+ 9B93 E1               pop hl
 606+ 9B94 D1               pop de
 607+ 9B95
 608+ 9B95 13               inc de
 609+ 9B96 10 F4            djnz 1B
 610+ 9B98
 611+ 9B98 C9               ret
 612+ 9B99
 613+ 9B99              ; ----- ----- ----- ----- -----
 614+ 9B99              ;
 615+ 9B99              ;   4/12/23
 616+ 9B99              ;
 617+ 9B99              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9B99
 619+ 9B99 06 03        Comparando ld b,3
 620+ 9B9B 1A               ld a,(de)
 621+ 9B9C 4E           2 ld c,(hl)
 622+ 9B9D B9               cp c
 623+ 9B9E 28 04            jr z,1F
 624+ 9BA0 23               inc hl
 625+ 9BA1 10 F9            djnz 2B
 626+ 9BA3 C9               ret
 627+ 9BA4
 628+ 9BA4 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9BA6 32 60 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9BA9 21 B2 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9BAC CB D6            set 2,(hl)
 632+ 9BAE C9               ret
 633+ 9BAF
 634+ 9BAF              ; -----------------------------------------------------------------------
 635+ 9BAF              ;
 636+ 9BAF              ;   7/12/23
 637+ 9BAF              ;
 638+ 9BAF
 639+ 9BAF              Detecta_colision_nave_entidad
 640+ 9BAF
 641+ 9BAF              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9BAF
 643+ 9BAF FD 2A 4F 89      ld iy,(Puntero_objeto)
 644+ 9BB3 2A 67 89         ld hl,(Puntero_de_impresion)
 645+ 9BB6
 646+ 9BB6 E5               push hl
 647+ 9BB7
 648+ 9BB7              ; ----- ----- -----
 649+ 9BB7 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9BB9 06 0A            ld b,10
 651+ 9BBB CD EB 9B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9BBE 7B               ld a,e
 653+ 9BBF FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9BC1 38 0E            jr c,3F
 655+ 9BC3
 656+ 9BC3              ; LLegados a este punto:
 657+ 9BC3              ;
 658+ 9BC3              ;   HAY COLISIÓN !!!!!.
 659+ 9BC3              ;
 660+ 9BC3              ;   .db (Impacto) de Amadeus a "1".
 661+ 9BC3              ;   SET el bit3 de (Impacto2).
 662+ 9BC3              ;
 663+ 9BC3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9BC3
 665+ 9BC3 21 60 89         ld hl,Impacto
 666+ 9BC6 36 01            ld (hl),1
 667+ 9BC8 21 B2 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9BCB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9BCD CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9BCF
 671+ 9BCF 18 18            jr 1F
 672+ 9BD1
 673+ 9BD1              ; -----
 674+ 9BD1
 675+ 9BD1 E1           3 pop hl
 676+ 9BD2 CD 9D 91         call NextScan
 677+ 9BD5 E5               push hl
 678+ 9BD6 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9BD7 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9BD9 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9BDB 30 0C            jr nc,1F
 682+ 9BDD              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9BDD 10 DC            djnz 2B
 684+ 9BDF
 685+ 9BDF              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9BDF
 687+ 9BDF              ; LLegados a este punto:
 688+ 9BDF              ;
 689+ 9BDF              ;   NO HAY COLISIÓN !!!!!.
 690+ 9BDF              ;
 691+ 9BDF              ;   .db (Impacto) de Amadeus a "0".
 692+ 9BDF              ;   RES el bit2 de (Impacto2).
 693+ 9BDF              ;
 694+ 9BDF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9BDF              ;   Lo colocamos a "0".
 696+ 9BDF
 697+ 9BDF 21 B2 89         ld hl,Impacto2
 698+ 9BE2 CB 96            res 2,(hl)
 699+ 9BE4 2A B3 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9BE7 36 00            ld (hl),0
 701+ 9BE9
 702+ 9BE9 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9BEA C9               ret
 704+ 9BEB
 705+ 9BEB               ; ---------- ----------
 706+ 9BEB
 707+ 9BEB C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9BEC 3A 4C 89         ld a,(Columns)
 709+ 9BEF 47               ld b,a
 710+ 9BF0 FD 7E 00     2 ld a,(iy)
 711+ 9BF3 BE               cp (hl)
 712+ 9BF4 28 01            jr z,1F
 713+ 9BF6
 714+ 9BF6 1C               inc e
 715+ 9BF7
 716+ 9BF7 23           1 inc hl
 717+ 9BF8 FD 23            inc iy
 718+ 9BFA 10 F4            djnz 2B
 719+ 9BFC C1               pop bc
 720+ 9BFD C9               ret
 721+ 9BFE
 722+ 9BFE              ; -------------------------------------------------------------------------------------------------------------
 723+ 9BFE              ;
 724+ 9BFE              ;   13/03/23
 725+ 9BFE              ;
 726+ 9BFE              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9BFE              ;
 728+ 9BFE              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9BFE
 730+ 9BFE 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C01 7E               ld a,(hl)
 732+ 9C02 A7               and a
 733+ 9C03 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C04
 735+ 9C04 44               ld b,h
 736+ 9C05 4D               ld c,l
 737+ 9C06 2A A5 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C09 E5               push hl
 739+ 9C0A A7               and a
 740+ 9C0B ED 42            sbc hl,bc
 741+ 9C0D E5               push hl
 742+ 9C0E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C0F
 744+ 9C0F E1               pop hl
 745+ 9C10 54               ld d,h
 746+ 9C11 5D               ld e,l
 747+ 9C12 1B               dec de
 748+ 9C13 ED B8            lddr                                                ; Limpiamos.
 749+ 9C15
 750+ 9C15 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9C18 22 A5 89         ld (Stack_snapshot_disparos),hl
 752+ 9C1B
 753+ 9C1B C9               ret
 754+ 9C1C
 755+ 9C1C              ; -------------------------------------------------------------------------------------------------------------
 756+ 9C1C              ;
 757+ 9C1C              ;   18/07/23
 758+ 9C1C              ;
 759+ 9C1C
 760+ 9C1C              Motor_de_disparos
 761+ 9C1C
 762+ 9C1C              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9C1C
 764+ 9C1C 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9C1F 2A B0 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9C22
 767+ 9C22 CD 9B 8B     2 call Extrae_address
 768+ 9C25 7E               ld a,(hl)
 769+ 9C26 A7               and a
 770+ 9C27 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9C29
 772+ 9C29              ; ----- ----- ----- ----- ----- -----
 773+ 9C29
 774+ 9C29 C5               push bc
 775+ 9C2A CD EE 9C         call foto_disparo_a_borrar
 776+ 9C2D
 777+ 9C2D              ; Existe colisión con este disparo???
 778+ 9C2D
 779+ 9C2D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9C2E 7E               ld a,(hl)
 781+ 9C2F 2B               dec hl
 782+ 9C30 E6 01            and 1
 783+ 9C32 28 1D            jr z,9F
 784+ 9C34
 785+ 9C34              ;   En este punto:
 786+ 9C34              ;
 787+ 9C34              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9C34              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9C34              ;   _con la entidad).
 790+ 9C34              ;
 791+ 9C34              ;   Disparo_2A defw 0                                ; Control.
 792+ 9C34              ;    defw 0                                          ; Puntero objeto.
 793+ 9C34              ;    defw 0                                          ; Puntero de impresión.
 794+ 9C34              ;    defw 0                                          ; Rutina de impresión.
 795+ 9C34
 796+ 9C34 E5               push hl
 797+ 9C35
 798+ 9C35 06 04            ld b,4
 799+ 9C37 23           19 inc hl
 800+ 9C38 10 FD            djnz 19B
 801+ 9C3A
 802+ 9C3A CD 9B 8B         call Extrae_address
 803+ 9C3D CD D1 9E         call Genera_coordenadas_disparo
 804+ 9C40
 805+ 9C40              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9C40
 807+ 9C40 21 B5 89         ld hl,Coordenadas_disparo_certero
 808+ 9C43 72               ld (hl),d
 809+ 9C44 23               inc hl
 810+ 9C45 73               ld (hl),e
 811+ 9C46
 812+ 9C46              ; Elimino el disparo de la base de datos.
 813+ 9C46
 814+ 9C46 E1               pop hl
 815+ 9C47 CD 6D 9D         call Elimina_disparo_de_base_de_datos
 816+ 9C4A 21 B2 89         ld hl,Impacto2
 817+ 9C4D CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9C4F
 819+ 9C4F 18 06            jr 11F
 820+ 9C51
 821+ 9C51 CD 17 9D     9 call Mueve_disparo
 822+ 9C54 CD EE 9C         call foto_disparo_a_borrar
 823+ 9C57
 824+ 9C57 C1           11 pop bc
 825+ 9C58 18 04            jr 7F
 826+ 9C5A
 827+ 9C5A              ; ----- ----- ----- ----- ----- -----
 828+ 9C5A
 829+ 9C5A ED 42        1 sbc hl,bc
 830+ 9C5C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9C5E
 832+ 9C5E 2A B0 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9C61 23               inc hl
 834+ 9C62 23               inc hl
 835+ 9C63 22 B0 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9C66 18 BA            jr 2B
 837+ 9C68
 838+ 9C68 CD 20 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9C6B              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9C6B
 841+ 9C6B              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9C6B
 843+ 9C6B 01 9F 86         ld bc,Disparo_11
 844+ 9C6E 2A AE 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9C71
 846+ 9C71 CD 9B 8B     5 call Extrae_address
 847+ 9C74 7E               ld a,(hl)
 848+ 9C75 A7               and a
 849+ 9C76 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9C78
 851+ 9C78              ; ----- ----- ----- ----- ----- -----
 852+ 9C78
 853+ 9C78 C5               push bc
 854+ 9C79 CD EE 9C         call foto_disparo_a_borrar
 855+ 9C7C
 856+ 9C7C              ; Existe colisión con este disparo???
 857+ 9C7C
 858+ 9C7C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9C7D 7E               ld a,(hl)
 860+ 9C7E 2B               dec hl
 861+ 9C7F E6 01            and 1
 862+ 9C81 28 4D            jr z,10F
 863+ 9C83
 864+ 9C83              ;! La colisión se produce con Amadeus???
 865+ 9C83              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9C83
 867+ 9C83 E5               push hl
 868+ 9C84
 869+ 9C84 06 04            ld b,4
 870+ 9C86 23           16 inc hl
 871+ 9C87 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9C89
 873+ 9C89 CD 9B 8B         call Extrae_address
 874+ 9C8C CD D1 9E         call Genera_coordenadas_disparo
 875+ 9C8F
 876+ 9C8F 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9C90 FE 16            cp $16
 878+ 9C92 38 2A            jr c,15F
 879+ 9C94
 880+ 9C94
 881+ 9C94              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9C94
 883+ 9C94 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9C95
 885+ 9C95              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9C95
 887+ 9C95 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9C98
 889+ 9C98              ; Coordenada X de Amadeus en D.
 890+ 9C98
 891+ 9C98 7D               ld a,l
 892+ 9C99 E6 1F            and $1F
 893+ 9C9B 57               ld d,a
 894+ 9C9C
 895+ 9C9C 21 BB 86         ld hl,Amadeus_db+8
 896+ 9C9F 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9CA0
 898+ 9CA0 21 B7 89         ld hl,Coordenadas_X_Amadeus
 899+ 9CA3 CD 69 9B         call Guarda_coordenadas_X
 900+ 9CA6
 901+ 9CA6 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9CA7
 903+ 9CA7              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9CA7
 905+ 9CA7 06 02            ld b,2
 906+ 9CA9 C5           20 push bc
 907+ 9CAA
 908+ 9CAA 06 03            ld b,3
 909+ 9CAC 21 B7 89         ld hl,Coordenadas_X_Amadeus
 910+ 9CAF 7E           18 ld a,(hl)
 911+ 9CB0 BA               cp d
 912+ 9CB1 20 04            jr nz,17F
 913+ 9CB3
 914+ 9CB3              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9CB3
 916+ 9CB3 C1               pop bc
 917+ 9CB4 E1               pop hl
 918+ 9CB5 18 0D            jr 14F
 919+ 9CB7
 920+ 9CB7 23           17 inc hl
 921+ 9CB8 10 F5            djnz 18B
 922+ 9CBA
 923+ 9CBA 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9CBB
 925+ 9CBB C1               pop bc
 926+ 9CBC 10 EB            djnz 20B
 927+ 9CBE
 928+ 9CBE
 929+ 9CBE              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9CBE              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9CBE
 932+ 9CBE E1           15 pop hl
 933+ 9CBF 23               inc hl
 934+ 9CC0 35               dec (hl)
 935+ 9CC1 2B               dec hl
 936+ 9CC2 18 0C            jr 10F
 937+ 9CC4
 938+ 9CC4              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9CC4              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9CC4
 941+ 9CC4 E5           14 push hl
 942+ 9CC5 CD 6D 9D         call Elimina_disparo_de_base_de_datos
 943+ 9CC8 21 B2 89         ld hl,Impacto2
 944+ 9CCB CB CE            set 1,(hl)
 945+ 9CCD E1               pop hl
 946+ 9CCE 18 06            jr 12F
 947+ 9CD0
 948+ 9CD0              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9CD0
 950+ 9CD0 CD 17 9D     10 call Mueve_disparo
 951+ 9CD3 CD EE 9C         call foto_disparo_a_borrar
 952+ 9CD6 C1           12 pop bc
 953+ 9CD7
 954+ 9CD7 18 04            jr 8F
 955+ 9CD9
 956+ 9CD9              ; ----- ----- ----- ----- ----- -----
 957+ 9CD9
 958+ 9CD9 ED 42        4 sbc hl,bc
 959+ 9CDB 28 0A            jr z,6F
 960+ 9CDD
 961+ 9CDD 2A AE 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9CE0 23               inc hl
 963+ 9CE1 23               inc hl
 964+ 9CE2 22 AE 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9CE5 18 8A            jr 5B
 966+ 9CE7
 967+ 9CE7 CD 19 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9CEA CD 72 9B         call Limpia_Coordenadas_X
 969+ 9CED C9               ret
 970+ 9CEE
 971+ 9CEE              ; ------------------------------------------------------------------
 972+ 9CEE
 973+ 9CEE              foto_disparo_a_borrar
 974+ 9CEE
 975+ 9CEE 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9CEF A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9CF0 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9CF1
 979+ 9CF1 E5               push hl
 980+ 9CF2 23               inc hl
 981+ 9CF3 23               inc hl
 982+ 9CF4 ED 73 9D 89      ld (Stack),sp
 983+ 9CF8 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9CF9 FD E1            pop iy
 985+ 9CFB DD E1            pop ix
 986+ 9CFD E1               pop hl
 987+ 9CFE ED 7B 9D 89      ld sp,(Stack)
 988+ 9D02 3A 8C 89         ld a,(Ctrl_1)
 989+ 9D05 CB C7            set 0,a
 990+ 9D07 32 8C 89         ld (Ctrl_1),a
 991+ 9D0A CD BF 80         call Guarda_foto_registros
 992+ 9D0D 3A 8C 89         ld a,(Ctrl_1)
 993+ 9D10 CB 87            res 0,a
 994+ 9D12 32 8C 89         ld (Ctrl_1),a
 995+ 9D15 E1               pop hl
 996+ 9D16 C9               ret
 997+ 9D17
 998+ 9D17              ;---------------------------------------------------
 999+ 9D17              ;
1000+ 9D17              ;   18/07/23
1001+ 9D17              ;
1002+ 9D17
1003+ 9D17              Mueve_disparo
1004+ 9D17
1005+ 9D17              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9D17              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9D17              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9D17
1009+ 9D17 E5               push hl
1010+ 9D18
1011+ 9D18 7E               ld a,(hl)
1012+ 9D19
1013+ 9D19 06 04            ld b,4
1014+ 9D1B 23           1 inc hl
1015+ 9D1C 10 FD            djnz 1B
1016+ 9D1E
1017+ 9D1E              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9D1E
1019+ 9D1E CD 9B 8B         call Extrae_address
1020+ 9D21
1021+ 9D21 E6 01            and 1
1022+ 9D23 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9D25
1024+ 9D25              ; Disparo hacia arriba, (Amadeus).
1025+ 9D25
1026+ 9D25              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9D25              ; _ de la dificultad.
1028+ 9D25
1029+ 9D25 CD AC 91         call PreviousScan
1030+ 9D28 CD AC 91         call PreviousScan
1031+ 9D2B CD AC 91         call PreviousScan
1032+ 9D2E CD AC 91         call PreviousScan
1033+ 9D31
1034+ 9D31              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9D31
1036+ 9D31 7C               ld a,h
1037+ 9D32 FE 40            cp $40
1038+ 9D34 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9D36
1040+ 9D36              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9D36
1042+ 9D36 EB               ex de,hl
1043+ 9D37 06 04            ld b,4
1044+ 9D39 2B           6 dec hl
1045+ 9D3A 10 FD            djnz 6B
1046+ 9D3C
1047+ 9D3C CD 6D 9D         call Elimina_disparo_de_base_de_datos
1048+ 9D3F E1               pop hl
1049+ 9D40 18 10            jr 7F
1050+ 9D42
1051+ 9D42              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9D42              ; HL contiene el puntero de impresión del disparo.
1053+ 9D42              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9D42
1055+ 9D42 D5           3 push de
1056+ 9D43 C5               push bc
1057+ 9D44
1058+ 9D44 CD 00 9B         call Comprueba_Colision
1059+ 9D47
1060+ 9D47              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9D47
1062+ 9D47 78               ld a,b
1063+ 9D48
1064+ 9D48 C1               pop bc
1065+ 9D49 D1               pop de
1066+ 9D4A
1067+ 9D4A EB               ex de,hl
1068+ 9D4B
1069+ 9D4B 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9D4C 23               inc hl                                      ; _ movimiento.
1071+ 9D4D 72               ld (hl),d
1072+ 9D4E
1073+ 9D4E E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9D4F
1075+ 9D4F 23               inc hl                                      ; _ en curso.
1076+ 9D50 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9D51 2B               dec hl
1078+ 9D52
1079+ 9D52 C9           7 ret
1080+ 9D53
1081+ 9D53              ; Disparo hacia abajo, (Entidad).
1082+ 9D53
1083+ 9D53 3A BD 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9D56 47               ld b,a
1085+ 9D57
1086+ 9D57 CD 9D 91     4 call NextScan
1087+ 9D5A 10 FB            djnz 4B
1088+ 9D5C
1089+ 9D5C              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9D5C
1091+ 9D5C 7C               ld a,h
1092+ 9D5D FE 58            cp $58
1093+ 9D5F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9D61
1095+ 9D61 EB               ex de,hl
1096+ 9D62 06 04            ld b,4
1097+ 9D64 2B           5 dec hl
1098+ 9D65 10 FD            djnz 5B
1099+ 9D67
1100+ 9D67 CD 6D 9D         call Elimina_disparo_de_base_de_datos
1101+ 9D6A E1               pop hl
1102+ 9D6B 18 E5            jr 7B
1103+ 9D6D
1104+ 9D6D              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9D6D
1106+ 9D6D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9D70 AF               xor a
1108+ 9D71 77               ld (hl),a
1109+ 9D72 54               ld d,h
1110+ 9D73 5D               ld e,l
1111+ 9D74 13               inc de
1112+ 9D75 ED B0            ldir
1113+ 9D77 C9               ret
1114+ 9D78
1115+ 9D78              ; -----------------------------------------------------------------
1116+ 9D78              ;
1117+ 9D78              ;   7/12/23
1118+ 9D78              ;
1119+ 9D78
1120+ 9D78 3A B2 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9D7B A7               and a
1122+ 9D7C C8               ret z
1123+ 9D7D
1124+ 9D7D              ; Analizamos si hay impacto por disparos.
1125+ 9D7D
1126+ 9D7D              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9D7D
1128+ 9D7D CB 4F            bit 1,a
1129+ 9D7F 28 07            jr z,1F
1130+ 9D81
1131+ 9D81 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9D84 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9D86 18 08            jr 2F
1134+ 9D88
1135+ 9D88 CB 47        1 bit 0,a
1136+ 9D8A C8               ret z
1137+ 9D8B
1138+ 9D8B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9D8B
1140+ 9D8B 21 8C 89         ld hl,Ctrl_1
1141+ 9D8E CB D6            set 2,(hl)
1142+ 9D90
1143+ 9D90 C9           2 ret
1144+ 9D91
1145+ 9D91              ; -----------------------------------------------------------------
1146+ 9D91              ;
1147+ 9D91              ;   25/04/23
1148+ 9D91              ;
1149+ 9D91
1150+ 9D91              Determina_resultado_comparativa
1151+ 9D91
1152+ 9D91              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9D91              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9D91              ;
1155+ 9D91              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9D91              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9D91              ;
1158+ 9D91              ;   SBC HL,DE
1159+ 9D91
1160+ 9D91              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9D91              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9D91
1163+ 9D91              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9D91              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9D91
1166+ 9D91
1167+ 9D91 3A 5F 89         ld a,(Cuad_objeto)
1168+ 9D94 FE 02            cp 2
1169+ 9D96 28 26            jr z,2F
1170+ 9D98 38 24            jr c,2F
1171+ 9D9A
1172+ 9D9A              ; Cuadrantes 3º y 4º
1173+ 9D9A
1174+ 9D9A E6 01            and 1
1175+ 9D9C 28 10            jr z,4F
1176+ 9D9E
1177+ 9D9E              ; Cuadrante 3º
1178+ 9D9E
1179+ 9D9E 7C               ld a,h
1180+ 9D9F 06 00            ld b,0
1181+ 9DA1
1182+ 9DA1 CD 2C 9E         call Compara_cositas_H3
1183+ 9DA4
1184+ 9DA4 04               inc b
1185+ 9DA5 05               dec b
1186+ 9DA6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9DA7
1188+ 9DA7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9DA8 06 00            ld b,0
1190+ 9DAA
1191+ 9DAA CD 3E 9E         call Compara_cositas_L3
1192+ 9DAD C9               ret
1193+ 9DAE
1194+ 9DAE              ; Cuadrante 4º
1195+ 9DAE
1196+ 9DAE 7C           4 ld a,h
1197+ 9DAF 06 00            ld b,0
1198+ 9DB1
1199+ 9DB1 CD 50 9E         call Compara_cositas_H4
1200+ 9DB4
1201+ 9DB4 04               inc b
1202+ 9DB5 05               dec b
1203+ 9DB6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9DB7
1205+ 9DB7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9DB8 06 00            ld b,0
1207+ 9DBA
1208+ 9DBA CD 66 9E         call Compara_cositas_L4
1209+ 9DBD C9               ret
1210+ 9DBE
1211+ 9DBE              ; Cuadrantes 1º y 2º.
1212+ 9DBE
1213+ 9DBE 28 10        2 jr z,3F
1214+ 9DC0
1215+ 9DC0              ; 1er Cuadrante
1216+ 9DC0
1217+ 9DC0 7C               ld a,h
1218+ 9DC1 06 00            ld b,0
1219+ 9DC3
1220+ 9DC3 CD 04 9E         call Compara_cositas_H1
1221+ 9DC6
1222+ 9DC6 04               inc b
1223+ 9DC7 05               dec b
1224+ 9DC8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9DC9
1226+ 9DC9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9DCA 06 00            ld b,0
1228+ 9DCC
1229+ 9DCC CD 1A 9E         call Compara_cositas_L1
1230+ 9DCF C9               ret
1231+ 9DD0
1232+ 9DD0
1233+ 9DD0              ; 2º Cuadrante
1234+ 9DD0
1235+ 9DD0 7C           3 ld a,h
1236+ 9DD1 06 00            ld b,0
1237+ 9DD3
1238+ 9DD3 CD E0 9D         call Compara_cositas_H2
1239+ 9DD6
1240+ 9DD6 04               inc b
1241+ 9DD7 05               dec b
1242+ 9DD8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9DD9
1244+ 9DD9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9DDA 06 00            ld b,0
1246+ 9DDC
1247+ 9DDC CD F2 9D         call Compara_cositas_L2
1248+ 9DDF C9               ret
1249+ 9DE0
1250+ 9DE0 A7           Compara_cositas_H2 and a
1251+ 9DE1 28 0D            jr z,1F
1252+ 9DE3              ;    cp $fd
1253+ 9DE3              ;    jr z,1F
1254+ 9DE3              ;    cp $fe
1255+ 9DE3              ;    jr z,1F
1256+ 9DE3 FE FF            cp $ff
1257+ 9DE5 28 09            jr z,1F
1258+ 9DE7 FE 01            cp $01
1259+ 9DE9 28 05            jr z,1F
1260+ 9DEB FE 02            cp $02
1261+ 9DED 28 01            jr z,1F
1262+ 9DEF C0               ret nz
1263+ 9DF0 04           1 inc b
1264+ 9DF1 C9               ret
1265+ 9DF2
1266+ 9DF2 A7           Compara_cositas_L2 and a
1267+ 9DF3 28 0D            jr z,1F
1268+ 9DF5              ;    cp $fd
1269+ 9DF5              ;    jr z,1F
1270+ 9DF5 FE FE            cp $fe
1271+ 9DF7 28 09            jr z,1F
1272+ 9DF9 FE FF            cp $ff
1273+ 9DFB 28 05            jr z,1F
1274+ 9DFD FE 01            cp $01
1275+ 9DFF 28 01            jr z,1F
1276+ 9E01              ;    cp $02
1277+ 9E01              ;    jr z,1F
1278+ 9E01 C0               ret nz
1279+ 9E02 04           1 inc b
1280+ 9E03 C9               ret
1281+ 9E04
1282+ 9E04 A7           Compara_cositas_H1 and a
1283+ 9E05 28 11            jr z,1F
1284+ 9E07              ;    cp $fd
1285+ 9E07              ;    jr z,1F
1286+ 9E07              ;    cp $fe
1287+ 9E07              ;    jr z,1F
1288+ 9E07 FE FF            cp $ff
1289+ 9E09 28 0D            jr z,1F
1290+ 9E0B FE 01            cp $01
1291+ 9E0D 28 09            jr z,1F
1292+ 9E0F FE 02            cp $02
1293+ 9E11 28 05            jr z,1F
1294+ 9E13 FE 03            cp $03
1295+ 9E15 28 01            jr z,1F
1296+ 9E17 C0               ret nz
1297+ 9E18 04           1 inc b
1298+ 9E19 C9               ret
1299+ 9E1A
1300+ 9E1A A7           Compara_cositas_L1 and a
1301+ 9E1B 28 0D            jr z,1F
1302+ 9E1D              ;    cp $fd
1303+ 9E1D              ;    jr z,1F
1304+ 9E1D              ;    cp $fe
1305+ 9E1D              ;    jr z,1F
1306+ 9E1D              ;    cp $ff
1307+ 9E1D              ;    jr z,1F
1308+ 9E1D FE 01            cp $01
1309+ 9E1F 28 09            jr z,1F
1310+ 9E21 FE 02            cp $02
1311+ 9E23 28 05            jr z,1F
1312+ 9E25 FE 03            cp $03
1313+ 9E27 28 01            jr z,1F
1314+ 9E29 C0               ret nz
1315+ 9E2A 04           1 inc b
1316+ 9E2B C9               ret
1317+ 9E2C
1318+ 9E2C A7           Compara_cositas_H3 and a
1319+ 9E2D 28 0D            jr z,1F
1320+ 9E2F              ;    cp $fd
1321+ 9E2F              ;    jr z,1F
1322+ 9E2F FE FE            cp $fe
1323+ 9E31 28 09            jr z,1F
1324+ 9E33 FE FF            cp $ff
1325+ 9E35 28 05            jr z,1F
1326+ 9E37 FE 01            cp $01
1327+ 9E39 28 01            jr z,1F
1328+ 9E3B              ;    cp $02
1329+ 9E3B              ;    jr z,1F
1330+ 9E3B              ;    cp $03
1331+ 9E3B              ;    jr z,1F
1332+ 9E3B C0               ret nz
1333+ 9E3C 04           1 inc b
1334+ 9E3D C9               ret
1335+ 9E3E
1336+ 9E3E A7           Compara_cositas_L3 and a
1337+ 9E3F 28 0D            jr z,1F
1338+ 9E41              ;    cp $fd
1339+ 9E41              ;    jr z,1F
1340+ 9E41              ;    cp $fe
1341+ 9E41              ;    jr z,1F
1342+ 9E41              ;    cp $ff
1343+ 9E41              ;    jr z,1F
1344+ 9E41 FE 01            cp $01
1345+ 9E43 28 09            jr z,1F
1346+ 9E45 FE 02            cp $02
1347+ 9E47 28 05            jr z,1F
1348+ 9E49 FE 03            cp $03
1349+ 9E4B 28 01            jr z,1F
1350+ 9E4D C0               ret nz
1351+ 9E4E 04           1 inc b
1352+ 9E4F C9               ret
1353+ 9E50
1354+ 9E50 A7           Compara_cositas_H4 and a
1355+ 9E51 28 11            jr z,1F
1356+ 9E53 FE FD            cp $fd
1357+ 9E55 28 0D            jr z,1F
1358+ 9E57 FE FE            cp $fe
1359+ 9E59 28 09            jr z,1F
1360+ 9E5B FE FF            cp $ff
1361+ 9E5D 28 05            jr z,1F
1362+ 9E5F FE 01            cp $01
1363+ 9E61 28 01            jr z,1F
1364+ 9E63              ;    cp $02
1365+ 9E63              ;    jr z,1F
1366+ 9E63              ;    cp $03
1367+ 9E63              ;    jr z,1F
1368+ 9E63 C0               ret nz
1369+ 9E64 04           1 inc b
1370+ 9E65 C9               ret
1371+ 9E66
1372+ 9E66 A7           Compara_cositas_L4 and a
1373+ 9E67 28 0D            jr z,1F
1374+ 9E69              ;    cp $fd
1375+ 9E69              ;    jr z,1F
1376+ 9E69 FE FE            cp $fe
1377+ 9E6B 28 09            jr z,1F
1378+ 9E6D FE FF            cp $ff
1379+ 9E6F 28 05            jr z,1F
1380+ 9E71 FE 01            cp $01
1381+ 9E73 28 01            jr z,1F
1382+ 9E75              ;    cp $02
1383+ 9E75              ;    jr z,1F
1384+ 9E75              ;    cp $03
1385+ 9E75              ;    jr z,1F
1386+ 9E75 C0               ret nz
1387+ 9E76 04           1 inc b
1388+ 9E77 C9               ret
# file closed: Disparo.asm
1709  9E78              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9E78              ; Relojes y temporizaciones.
   2+ 9E78
   3+ 9E78              ; ------------------------------------------------------
   4+ 9E78              ;
   5+ 9E78              ;	16/7/23
   6+ 9E78              ;
   7+ 9E78              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9E78              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9E78              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9E78              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9E78              ;
  12+ 9E78              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9E78              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9E78
  15+ 9E78              ; Disparo_entidad db 1
  16+ 9E78              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9E78              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9E78
  19+ 9E78              Habilita_disparos
  20+ 9E78
  21+ 9E78 7E           	ld a,(hl)
  22+ 9E79 A7           	and a
  23+ 9E7A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9E7B
  25+ 9E7B EB           	ex de,hl
  26+ 9E7C
  27+ 9E7C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9E7D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9E7E
  30+ 9E7E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9E7E
  32+ 9E7E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9E7F 7E           	ld a,(hl)
  34+ 9E80 23           	inc hl
  35+ 9E81 77           	ld (hl),a
  36+ 9E82
  37+ 9E82 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9E83 3E 01        	ld a,1
  39+ 9E85 77           	ld (hl),a
  40+ 9E86 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1710  9E87              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9E87              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9E87              ;
   3+ 9E87              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9E87              ;
   5+ 9E87              ; *****************************************************************************************************************************************************************************************
   6+ 9E87              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9E87
   8+ 9E87 7C           calcula_tercio ld a,h
   9+ 9E88 E6 18        	and $18
  10+ 9E8A CB 2F        	sra a
  11+ 9E8C CB 2F        	sra a
  12+ 9E8E CB 2F        	sra a
  13+ 9E90 C9           	ret
  14+ 9E91
# file closed: calcula_tercio.asm
1711  9E91              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9E91              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9E91              ;
   3+ 9E91              ;
   4+ 9E91              ;	CLS.
   5+ 9E91              ;
   6+ 9E91              ;	Limpia la pantalla y define sus atributos.
   7+ 9E91              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9E91              ;
   9+ 9E91              ;	COLORES: 0 ..... NEGRO
  10+ 9E91              ;    		 1 ..... AZUL
  11+ 9E91              ; 			 2 ..... ROJO
  12+ 9E91              ;			 3 ..... MAGENTA
  13+ 9E91              ; 			 4 ..... VERDE
  14+ 9E91              ; 			 5 ..... CIAN
  15+ 9E91              ;			 6 ..... AMARILLO
  16+ 9E91              ; 			 7 ..... BLANCO
  17+ 9E91              ;
  18+ 9E91              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9E91              ;
  20+ 9E91              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9E91
  22+ 9E91
  23+ 9E91 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9E94 11 01 40     	LD DE,$4001
  25+ 9E97 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9E9A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9E9C ED B0        	LDIR
  28+ 9E9E 01 FF 02     	LD BC,767
  29+ 9EA1 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9EA2 ED B0        	LDIR
  31+ 9EA4 C9           	ret
  32+ 9EA5
# file closed: Cls.asm
1712  9EA5              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9EA5              ; ------------------------------------------------------------------------
   2+ 9EA5              ;
   3+ 9EA5              ;	30/1/24
   4+ 9EA5              ;
   5+ 9EA5              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9EA5              ;	Fila superior "0", Columna izquierda "0".
   7+ 9EA5              ;
   8+ 9EA5              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9EA5              ;
  10+ 9EA5              ;	Modifica: A,BC y DE.
  11+ 9EA5
  12+ 9EA5 7D           Genera_coordenadas ld a,l
  13+ 9EA6 E6 1F        	and $1f
  14+ 9EA8 32 51 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9EAB
  16+ 9EAB 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9EAC FE 40        	cp $40
  18+ 9EAE 38 1C        	jr c,4F
  19+ 9EB0
  20+ 9EB0 CD 87 9E     	call calcula_tercio
  21+ 9EB3 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9EB4
  23+ 9EB4 1E 00        	ld e,0
  24+ 9EB6 7D           	ld a,l
  25+ 9EB7 E6 E0        	and $e0
  26+ 9EB9 28 01        	jr z,1F
  27+ 9EBB 04           	inc b
  28+ 9EBC
  29+ 9EBC 04           1 inc b
  30+ 9EBD 05           	dec b
  31+ 9EBE 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9EC0              ;														; _ , salimos.
  33+ 9EC0 1C           3 inc e
  34+ 9EC1 D6 20        	sub 32
  35+ 9EC3 20 FB        	jr nz,3B
  36+ 9EC5 10 F5        	djnz 1B
  37+ 9EC7
  38+ 9EC7 7B           2 ld a,e
  39+ 9EC8 32 52 89     	ld (Coordenada_y),a
  40+ 9ECB C9           	ret
  41+ 9ECC
  42+ 9ECC AF           4 xor a
  43+ 9ECD 32 52 89     	ld (Coordenada_y),a
  44+ 9ED0 C9           	ret
  45+ 9ED1
  46+ 9ED1              ; ------------------------------------------------------------------------
  47+ 9ED1              ;	28/05/23
  48+ 9ED1              ;
  49+ 9ED1              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9ED1              ;	Fila superior "0", Columna izquierda "0".
  51+ 9ED1              ;
  52+ 9ED1              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9ED1              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9ED1              ;
  55+ 9ED1              ;		DE="$120d"
  56+ 9ED1              ;
  57+ 9ED1              ;		D, (Coordenada_X), Columnas, $12
  58+ 9ED1              ;		E, (Coordenada_y), Filas, $0d
  59+ 9ED1              ;
  60+ 9ED1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9ED1
  62+ 9ED1              ;	Modifica: A,BC y DE.
  63+ 9ED1
  64+ 9ED1
  65+ 9ED1              Genera_coordenadas_disparo
  66+ 9ED1
  67+ 9ED1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9ED1
  69+ 9ED1 7D           	ld a,l
  70+ 9ED2 E6 1F        	and $1f
  71+ 9ED4 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9ED5 CD 87 9E     	call calcula_tercio
  73+ 9ED8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9ED9 1E 00        	ld e,0
  75+ 9EDB 7D           	ld a,l
  76+ 9EDC E6 E0        	and $e0
  77+ 9EDE 28 01        	jr z,1F
  78+ 9EE0 04           	inc b
  79+ 9EE1 1C           1 inc e
  80+ 9EE2 D6 20        	sub 32
  81+ 9EE4 20 FB        	jr nz,1B
  82+ 9EE6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9EE8 C9           	ret
  84+ 9EE9
# file closed: Genera_coordenadas.asm
1713  9EE9              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9EE9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9EE9              ;
   3+ 9EE9              ;	12/12/23
   4+ 9EE9              ;
   5+ 9EE9              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9EE9
   7+ 9EE9              ;	ADC HL,SP	LD (addr),SP
   8+ 9EE9              ;	ADD HL,SP	LD SP,(addr)
   9+ 9EE9              ;	ADD IX,SP	LD SP,nn
  10+ 9EE9              ; 	ADD IY,SP	LD SP,HL
  11+ 9EE9              ;				LD SP,IX
  12+ 9EE9              ;	DEC SP		LD SP,IY
  13+ 9EE9
  14+ 9EE9              ;	EX (SP),HL
  15+ 9EE9              ;	EX (SP),IX
  16+ 9EE9              ;	EX (SP),IY
  17+ 9EE9
  18+ 9EE9              ;	INC SP
  19+ 9EE9
  20+ 9EE9                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 9D 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 67 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 69 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 8C 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A A5 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 6D 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A A9 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A3 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 8C 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 A5 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 6D 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 A9 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B 9D 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A3 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B 9D 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A3 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A3 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1714  8131
1715  8131              	SAVESNA "Pruebas.sna", START
1716  8131
1717  8131
1718  8131
1719  8131
# file closed: Banco_de_pruebas.asm
