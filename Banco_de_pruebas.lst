# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 9A 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD DD 8B     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD ED 8B     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 A4 88     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B 9A 88  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 105  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC E2 9A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 CB 85        	defw Caja_2
 110+ 8574 DE 85        	defw Caja_3
 111+ 8576 F1 85        	defw Caja_4
 112+ 8578 04 86        	defw Caja_5
 113+ 857A 17 86        	defw Caja_6
 114+ 857C 2A 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 19 bytes !!!
 155+ 85B8
 156+ 85B8 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 85BB 00           	db %00000000										; (Attr).
 158+ 85BC              ;	db 0												; (Cuad_objeto).
 159+ 85BC 00           	db 0												; (Impacto).
 160+ 85BD 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 85C3 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 85C5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 85C7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 85C9 00           	db 0												; (Ctrl_0).
 165+ 85CA 00           	db 0												; (Ctrl_2).
 166+ 85CB
 167+ 85CB              ; ---------- ---------- ---------- ---------- ----------
 168+ 85CB
 169+ 85CB 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 85CE 00           	db %00000000										; (Attr).
 171+ 85CF              ;	db 0												; (Cuad_objeto).
 172+ 85CF 00           	db 0												; (Impacto).
 173+ 85D0 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 85D6 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 85D8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 85DA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 85DC 00           	db 0												; (Ctrl_0).
 178+ 85DD 00           	db 0												; (Ctrl_2).
 179+ 85DE
 180+ 85DE              ; ---------- ---------- ---------- ---------- ----------
 181+ 85DE
 182+ 85DE 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 85E1 00           	db %00000000										; (Attr).
 184+ 85E2              ;	db 0												; (Cuad_objeto).
 185+ 85E2 00           	db 0												; (Impacto).
 186+ 85E3 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 85E9 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 85EB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 85ED 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 85EF 00           	db 0												; (Ctrl_0).
 191+ 85F0 00           	db 0												; (Ctrl_2).
 192+ 85F1
 193+ 85F1              ; ---------- ---------- ---------- ---------- ----------
 194+ 85F1
 195+ 85F1 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 85F4 00           	db %00000000										; (Attr).
 197+ 85F5              ;	db 0												; (Cuad_objeto).
 198+ 85F5 00           	db 0												; (Impacto).
 199+ 85F6 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 85FC 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 85FE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8600 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8602 00           	db 0												; (Ctrl_0).
 204+ 8603 00           	db 0												; (Ctrl_2).
 205+ 8604
 206+ 8604              ; ---------- ---------- ---------- ---------- ----------
 207+ 8604
 208+ 8604 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8607 00           	db %00000000										; (Attr).
 210+ 8608              ;	db 0												; (Cuad_objeto).
 211+ 8608 00           	db 0												; (Impacto).
 212+ 8609 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 860F 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8611 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8613 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8615 00           	db 0												; (Ctrl_0).
 217+ 8616 00           	db 0												; (Ctrl_2).
 218+ 8617
 219+ 8617              ; ---------- ---------- ---------- ---------- ----------
 220+ 8617
 221+ 8617 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 861A 00           	db %00000000										; (Attr).
 223+ 861B              ;	db 0												; (Cuad_objeto).
 224+ 861B 00           	db 0												; (Impacto).
 225+ 861C 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8622 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8624 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8626 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8628 00           	db 0												; (Ctrl_0).
 230+ 8629 00           	db 0												; (Ctrl_2).
 231+ 862A
 232+ 862A              ; ---------- ---------- ---------- ---------- ----------
 233+ 862A
 234+ 862A 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 862D 00           	db %00000000										; (Attr).
 236+ 862E              ;	db 0												; (Cuad_objeto).
 237+ 862E 00           	db 0												; (Impacto).
 238+ 862F 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8635 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8637 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 8639 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 863B 00           	db 0												; (Ctrl_0).
 243+ 863C 00           	db 0												; (Ctrl_2).
 244+ 863D
 245+ 863D              ; -------------------------------------------------------------------------------------
 246+ 863D              ;
 247+ 863D              ;	11/1/24
 248+ 863D              ;
 249+ 863D              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 863D              ;
 251+ 863D              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 863D              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 863D              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 863D              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 863D
 256+ 863D              Indice_de_definiciones_de_entidades
 257+ 863D
 258+ 863D 41 86        	defw Entidad_1
 259+ 863F 4E 86        	defw Entidad_2
 260+ 8641
 261+ 8641              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8641
 263+ 8641              ;	BADSAT, (Satélite malvado).
 264+ 8641
 265+ 8641 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8644 04           	db %00000100										; (Attr).
 267+ 8645 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8647 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 8649 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 864B 01           	db 1												; (Cuad_objeto).
 271+ 864C 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 864E
 273+ 864E 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8651 02           	db %00000010										; (Attr).
 275+ 8652 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8654 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8656 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8658 01           	db 1												; (Cuad_objeto).
 279+ 8659 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 865B
# file closed: Cajas_y_disparos.asm
 106  865B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 865B              ; 19/1/24
   2+ 865B
   3+ 865B              Indice_de_niveles
   4+ 865B
   5+ 865B 63 86        	defw Nivel_1
   6+ 865D 6B 86        	defw Nivel_2
   7+ 865F
   8+ 865F              ;	...
   9+ 865F              ;	...
  10+ 865F              ;	+ Niveles ...
  11+ 865F
  12+ 865F 00 00        	defw 0
  13+ 8661 00 00        	defw 0
  14+ 8663
  15+ 8663 03           Nivel_1 db 3									; Nº de entidades.
  16+ 8664 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8668 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 866B
  19+ 866B 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 866C 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8670 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8674 01 02
  22+ 8676 02 01 01 01  	db 2,1,1,1,1,2
  22+ 867A 01 02
  23+ 867C
  24+ 867C              ;---------------------------------------------------------------------------------------------------------------
  25+ 867C              ;
  26+ 867C              ;   19/1/24
  27+ 867C              ;
  28+ 867C              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 867C              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 867C              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 867C              ;	_ de la 1ª entidad del Nivel.
  32+ 867C              ;
  33+ 867C              ;	MODIFICA: HL,DE y A.
  34+ 867C              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 867C
  36+ 867C              Inicializa_Nivel
  37+ 867C
  38+ 867C 2A C3 88     	ld hl,(Puntero_indice_NIVELES)
  39+ 867F CD A7 8A     	call Extrae_address
  40+ 8682 7E           	ld a,(hl)
  41+ 8683 32 8E 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 8686 23           	inc hl
  43+ 8687 CD 91 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 868A 22 C5 88     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 868D CD 9A 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 8690 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 8691
  48+ 8691              ; ----------------------
  49+ 8691
  50+ 8691 11 6D 88     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8694 01 04 00     	ld bc,4
  52+ 8697 ED B0        	ldir
  53+ 8699 C9           	ret
  54+ 869A
  55+ 869A 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 869B CD A9 87         call Calcula_salto_en_BC
  57+ 869E 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 86A1 A7               and a
  59+ 86A2 ED 4A            adc hl,bc
  60+ 86A4 CD A7 8A         call Extrae_address
  61+ 86A7 22 79 88         ld (Puntero_indice_mov),hl
  62+ 86AA C9               ret
  63+ 86AB
  64+ 86AB              ;---------------------------------------------------------------------------------------------------------------
  65+ 86AB              ;
  66+ 86AB              ;   5/1/24
  67+ 86AB              ;
  68+ 86AB              ;	Destruye A,BC,HL,DE
  69+ 86AB
  70+ 86AB              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 86AB              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 86AB
  73+ 86AB              Inicia_Entidades
  74+ 86AB
  75+ 86AB              ; Preparamos los punteros de las cajas de entidades:
  76+ 86AB
  77+ 86AB CD 0F 8A     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 86AE              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 86AE CD 26 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 86B1
  81+ 86B1 2A C5 88     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 86B4
  83+ 86B4 22 C5 88     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 86B7
  85+ 86B7 CD 57 87     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 86BA
  87+ 86BA 2A C5 88     	ld hl,(Datos_de_nivel)
  88+ 86BD
  89+ 86BD              ; En este punto:
  90+ 86BD              ;
  91+ 86BD              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 86BD              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 86BD
  94+ 86BD C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 86BE
  96+ 86BE 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 86BF CD A9 87     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 86C2
  99+ 86C2 21 3D 86     	ld hl,Indice_de_definiciones_de_entidades
 100+ 86C5 CD B1 87     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 86C8
 102+ 86C8 CD BB 87     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 86CB
 104+ 86CB              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 86CB
 106+ 86CB CD 79 87     	call Busca_mov_masticados_segun_tipo
 107+ 86CE
 108+ 86CE A7           	and a
 109+ 86CF 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 86D1
 111+ 86D1              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 86D1
 113+ 86D1              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 86D1              ;	_ de este tipo de entidad.
 115+ 86D1
 116+ 86D1 CD EF 9D     	call Situa_en_contador_general_de_mov_masticados
 117+ 86D4 CD FC 9D     	call Transfiere_datos_de_contadores
 118+ 86D7
 119+ 86D7 18 06        	jr 4F
 120+ 86D9
 121+ 86D9 CD 69 89     3 call Construye_movimientos_masticados_entidad
 122+ 86DC
 123+ 86DC              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 124+ 86DC              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 125+ 86DC              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 126+ 86DC              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 127+ 86DC              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 128+ 86DC
 129+ 86DC CD 37 87     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 130+ 86DF              ;																; _ Mov_masticados ya generados.
 131+ 86DF CD 11 87     4 call Guarda_foto_de_mov_masticado
 132+ 86E2
 133+ 86E2              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 134+ 86E2
 135+ 86E2 2A 60 88     	ld hl,(Puntero_de_impresion)
 136+ 86E5 CD 8F 9A     	call Genera_coordenadas
 137+ 86E8 CD EE 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 138+ 86EB CD 1C 87     	call Limpiamos_bandeja_DRAW
 139+ 86EE CD 0E 8B     	call Incrementa_punteros_de_cajas
 140+ 86F1
 141+ 86F1              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 142+ 86F1              ; _ entidad del Nivel.
 143+ 86F1
 144+ 86F1 3A A5 88     	ld a,(Ctrl_4)
 145+ 86F4 E6 F0        	and $f0
 146+ 86F6 32 A5 88     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 147+ 86F9
 148+ 86F9              ; Siguiente entidad del Nivel.
 149+ 86F9
 150+ 86F9 2A C5 88     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 151+ 86FC 23           	inc hl 														; _ entidad del Nivel.
 152+ 86FD
 153+ 86FD C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 154+ 86FE 10 B4        	djnz 2B
 155+ 8700
 156+ 8700 C9           	ret
 157+ 8701
 158+ 8701              ; ---------------------------------------------------------------------
 159+ 8701              ;
 160+ 8701              ;	30/01/24
 161+ 8701
 162+ 8701
 163+ 8701              Store_Restore_cajas
 164+ 8701
 165+ 8701              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 166+ 8701
 167+ 8701 2A 60 88     	ld hl,(Puntero_de_impresion)
 168+ 8704 CD 8F 9A     	call Genera_coordenadas
 169+ 8707 CD EE 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 170+ 870A CD 1C 87     	call Limpiamos_bandeja_DRAW
 171+ 870D
 172+ 870D              ; 	Entidad_sospechosa. 20/4/23
 173+ 870D
 174+ 870D              ;	ld a,(Impacto)
 175+ 870D              ;	and a
 176+ 870D              ;	jr z,1F
 177+ 870D
 178+ 870D              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 179+ 870D              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 180+ 870D              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 181+ 870D              ;	adc hl,bc 											; _ "0" más adelante.
 182+ 870D              ;	ld (Entidad_sospechosa_de_colision),hl
 183+ 870D
 184+ 870D
 185+ 870D              ;1 ld hl,(Puntero_restore_caja)
 186+ 870D              ;	ld a,(hl)
 187+ 870D              ;	and a
 188+ 870D              ;	push af
 189+ 870D              ;	jr z,2F
 190+ 870D
 191+ 870D              ;	di
 192+ 870D              ;	ld de,Bandeja_DRAW
 193+ 870D              ;	ld bc,42
 194+ 870D              ;	ldir
 195+ 870D              ;	ei
 196+ 870D
 197+ 870D CD 0E 8B     2 call Incrementa_punteros_de_cajas
 198+ 8710 C9           	ret
 199+ 8711
 200+ 8711
 201+ 8711              ; ---------------------------------------------------------------------
 202+ 8711              ;
 203+ 8711              ;	29/01/24
 204+ 8711
 205+ 8711 CD BE 89     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 206+ 8714 CD 16 71     	call Guarda_foto_registros
 207+ 8717 F3           	di
 208+ 8718              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 209+ 8718              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 210+ 8718              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 211+ 8718              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 212+ 8718
 213+ 8718 CD 27 87     	call Decrementa_Contador_de_mov_masticados
 214+ 871B C9           	ret
 215+ 871C
 216+ 871C              ; ---------------------------------------------------------------------
 217+ 871C              ;
 218+ 871C              ;	25/01/24
 219+ 871C
 220+ 871C 21 43 88     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 221+ 871F 06 2A        	ld b,42
 222+ 8721 AF           	xor a
 223+ 8722
 224+ 8722 77           1 ld (hl),a
 225+ 8723 23           	inc hl
 226+ 8724 10 FC        	djnz 1B
 227+ 8726
 228+ 8726 C9           	ret
 229+ 8727
 230+ 8727              ; ---------------------------------------------------------------------
 231+ 8727              ;
 232+ 8727              ;	22/01/24
 233+ 8727
 234+ 8727 2A 64 88     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 235+ 872A 2B           	dec hl
 236+ 872B
 237+ 872B 24           	inc h
 238+ 872C 25           	dec h
 239+ 872D 20 04        	jr nz,1F
 240+ 872F
 241+ 872F 7D           	ld a,l
 242+ 8730 A7           	and a
 243+ 8731 28 FE        	jr z,$
 244+ 8733
 245+ 8733 22 64 88     1 ld (Contador_de_mov_masticados),hl
 246+ 8736 C9           	ret
 247+ 8737
 248+ 8737              ; ---------------------------------------------------------------------
 249+ 8737              ;
 250+ 8737              ;	22/01/24
 251+ 8737
 252+ 8737 21 A5 88     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 253+ 873A CB 46        	bit 0,(hl)
 254+ 873C 20 0D        	jr nz,1F
 255+ 873E CB 4E        	bit 1,(hl)
 256+ 8740 20 0C        	jr nz,2F
 257+ 8742 CB 56        	bit 2,(hl)
 258+ 8744 20 0B        	jr nz,3F
 259+ 8746 CB 5E        	bit 3,(hl)
 260+ 8748 20 0A        	jr nz,4F
 261+ 874A C9           	ret
 262+ 874B
 263+ 874B CB E6        1 set 4,(hl)
 264+ 874D C9           	ret
 265+ 874E CB EE        2 set 5,(hl)
 266+ 8750 C9           	ret
 267+ 8751 CB F6        3 set 6,(hl)
 268+ 8753 C9           	ret
 269+ 8754 CB FE        4 set 7,(hl)
 270+ 8756 C9           	ret
 271+ 8757
 272+ 8757              ; ---------------------------------------------------------------------
 273+ 8757              ;
 274+ 8757              ;	23/01/24
 275+ 8757              ;
 276+ 8757              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 277+ 8757              ;
 278+ 8757              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 279+ 8757              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 280+ 8757              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 281+ 8757              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 282+ 8757
 283+ 8757              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 284+ 8757
 285+ 8757 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 286+ 8758 3D           	dec a
 287+ 8759 20 06        	jr nz,1F
 288+ 875B
 289+ 875B              ; --- Tipo_1
 290+ 875B
 291+ 875B 21 A5 88     	ld hl,Ctrl_4
 292+ 875E CB C6        	set 0,(hl)
 293+ 8760 C9           	ret
 294+ 8761
 295+ 8761 3D           1 dec a
 296+ 8762 20 06        	jr nz,2F
 297+ 8764
 298+ 8764              ; --- Tipo_2
 299+ 8764
 300+ 8764 21 A5 88     	ld hl,Ctrl_4
 301+ 8767 CB CE        	set 1,(hl)
 302+ 8769 C9           	ret
 303+ 876A
 304+ 876A 3D           2 dec a
 305+ 876B 20 06        	jr nz,3F
 306+ 876D
 307+ 876D              ; --- Tipo_3
 308+ 876D
 309+ 876D 21 A5 88     	ld hl,Ctrl_4
 310+ 8770 CB D6        	set 2,(hl)
 311+ 8772 C9           	ret
 312+ 8773
 313+ 8773              ; --- Tipo_3
 314+ 8773
 315+ 8773 21 A5 88     3 ld hl,Ctrl_4
 316+ 8776 CB D6        	set 2,(hl)
 317+ 8778 C9           	ret
 318+ 8779
 319+ 8779              ; ---------------------------------------------------------------------
 320+ 8779              ;
 321+ 8779              ;	22/01/24
 322+ 8779
 323+ 8779 21 A5 88     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 324+ 877C CB 46        	bit 0,(hl)
 325+ 877E 20 0E        	jr nz,1F
 326+ 8780
 327+ 8780 CB 4E        	bit 1,(hl)
 328+ 8782 20 10        	jr nz,2F
 329+ 8784
 330+ 8784 CB 56        	bit 2,(hl)
 331+ 8786 20 12        	jr nz,3F
 332+ 8788
 333+ 8788 CB 5E        	bit 3,(hl)
 334+ 878A 20 14        	jr nz,4F
 335+ 878C 18 19        	jr 6F
 336+ 878E
 337+ 878E              ; Entidad_de_Tipo_1.
 338+ 878E
 339+ 878E CB 66        1 bit 4,(hl)
 340+ 8790 28 15        	jr z,6F
 341+ 8792 18 10        	jr 5F
 342+ 8794
 343+ 8794              ; Entidad_de_Tipo_2.
 344+ 8794
 345+ 8794 CB 6E        2 bit 5,(hl)
 346+ 8796 28 0F        	jr z,6F
 347+ 8798 18 0A        	jr 5F
 348+ 879A
 349+ 879A              ; Entidad_de_Tipo_3.
 350+ 879A
 351+ 879A CB 76        3 bit 6,(hl)
 352+ 879C 28 09        	jr z,6F
 353+ 879E 18 04        	jr 5F
 354+ 87A0
 355+ 87A0              ; Entidad_de_Tipo_4.
 356+ 87A0
 357+ 87A0 CB 7E        4 bit 7,(hl)
 358+ 87A2 28 03        	jr z,6F
 359+ 87A4
 360+ 87A4              ; Esta entidad TIENE MOV_MASTICADOS.
 361+ 87A4
 362+ 87A4 AF           5 xor a
 363+ 87A5 3C           	inc a
 364+ 87A6 C9           	ret
 365+ 87A7
 366+ 87A7              ; Esta entidad NO TIENE MOV_MASTICADOS.
 367+ 87A7
 368+ 87A7 AF           6 xor a
 369+ 87A8 C9           	ret
 370+ 87A9
 371+ 87A9              ;	------------------------------------------------------------------------------------
 372+ 87A9              ;
 373+ 87A9              ;	12/01/24
 374+ 87A9              ;
 375+ 87A9              ;	INPUTS:	A contiene el (Tipo) de entidad.
 376+ 87A9              ;
 377+ 87A9              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 378+ 87A9              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 379+ 87A9
 380+ 87A9 CB 27        Calcula_salto_en_BC sla a
 381+ 87AB D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 382+ 87AD 4F           	ld c,a
 383+ 87AE 06 00        	ld b,0
 384+ 87B0 C9           	ret
 385+ 87B1
 386+ 87B1              ; ------------------------------------------------------------------
 387+ 87B1              ;
 388+ 87B1              ;	19/1/24
 389+ 87B1              ;
 390+ 87B1              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 391+ 87B1              ;	Actualiza (Datos_de_entidad) con esa dirección.
 392+ 87B1
 393+ 87B1 A7           Situa_en_datos_de_definicion and a
 394+ 87B2 ED 4A        	adc hl,bc
 395+ 87B4 CD A7 8A     	call Extrae_address
 396+ 87B7 22 94 88         ld (Datos_de_entidad),hl
 397+ 87BA C9           	ret
 398+ 87BB
 399+ 87BB              ; ------------------------------------------------------------------
 400+ 87BB
 401+ 87BB              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 402+ 87BB              ; 	inc de
 403+ 87BB              ; 	inc de
 404+ 87BB              ; 	ex de,hl
 405+ 87BB              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 406+ 87BB              ; 	ret
 407+ 87BB
 408+ 87BB              ; ----------------------------------------------------------------------------------------------------------
 409+ 87BB              ;
 410+ 87BB              ;	19/1/24
 411+ 87BB              ;
 412+ 87BB              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 413+ 87BB              ;	_ de entidad.
 414+ 87BB              ;
 415+ 87BB              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 416+ 87BB              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 417+ 87BB              ;
 418+ 87BB              ;	MODIFICA: HL,DE y BC
 419+ 87BB
 420+ 87BB
 421+ 87BB              Definicion_de_entidad_a_bandeja_DRAW
 422+ 87BB
 423+ 87BB 11 43 88     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW
 424+ 87BE
 425+ 87BE 01 03 00     	ld bc,3
 426+ 87C1 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 427+ 87C3              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 428+ 87C3 01 07 00     	ld bc,7
 429+ 87C6 CD 1C 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 430+ 87C9
 431+ 87C9 01 05 00     	ld bc,5
 432+ 87CC ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 433+ 87CE              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 434+ 87CE 01 04 00     	ld bc,4
 435+ 87D1 CD 1C 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 436+ 87D4
 437+ 87D4 01 03 00     	ld bc,3
 438+ 87D7 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 439+ 87D9              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 440+ 87D9
 441+ 87D9 01 09 00     	ld bc,9
 442+ 87DC CD 1C 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 443+ 87DF
 444+ 87DF 01 02 00     	ld bc,2
 445+ 87E2 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 446+ 87E4
 447+ 87E4 01 08 00     	ld bc,8
 448+ 87E7 CD 1C 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 449+ 87EA
 450+ 87EA 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 451+ 87EC 12           	ld (de),a 									; Vuelco (Frames_explosion).
 452+ 87ED
 453+ 87ED C9           	ret
 454+ 87EE
 455+ 87EE              ; ----------------------------------------------------------------------------------------------------------
 456+ 87EE              ;
 457+ 87EE              ;	22/01/24
 458+ 87EE              ;
 459+ 87EE              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 460+ 87EE              ;
 461+ 87EE              ;	Las cajas contienen entidades iniciadas:
 462+ 87EE              ;
 463+ 87EE              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 464+ 87EE              ;
 465+ 87EE              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 466+ 87EE              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 467+ 87EE              ;
 468+ 87EE              ;	MODIFICA: HL,DE y BC
 469+ 87EE
 470+ 87EE 21 43 88     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 471+ 87F1 ED 5B 88 88  	ld de,(Puntero_store_caja)
 472+ 87F5 7E           	ld a,(hl)
 473+ 87F6 12           	ld (de),a
 474+ 87F7 13           	inc de 													; (Tipo).
 475+ 87F8
 476+ 87F8 21 4A 88     	ld hl,Bandeja_DRAW+7									; HL situado en (Coordenada_X) de la bandeja DRAW.
 477+ 87FB 01 02 00     	ld bc,2
 478+ 87FE ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 479+ 8800              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 480+ 8800 23           	inc hl
 481+ 8801 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 482+ 8802 12           	ld (de),a
 483+ 8803 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 484+ 8804
 485+ 8804 21 59 88     	ld hl,Bandeja_DRAW+22
 486+ 8807 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 487+ 8808 12           	ld (de),a
 488+ 8809 13           	inc de 													; (Impacto), volcado a la caja.
 489+ 880A              ;															; DE situado ahora en (Variables_de_borrado).
 490+ 880A 23           	inc hl
 491+ 880B 01 06 00     	ld bc,6
 492+ 880E ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 493+ 8810              ; 															; DE situado ahora en (Puntero_de_impresión).
 494+ 8810 01 07 00     	ld bc,7
 495+ 8813 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 496+ 8815              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 497+ 8815              ;															; HL apunta ahora a (Columnas).
 498+ 8815 21 6B 88     	ld hl,Bandeja_DRAW+40
 499+ 8818 7E           	ld a,(hl)
 500+ 8819 12           	ld (de),a 												; Volcamos (Ctrl_2).
 501+ 881A 13           	inc de
 502+ 881B
 503+ 881B C9           	ret
 504+ 881C
 505+ 881C              ; -------------------------------------------------------------
 506+ 881C
 507+ 881C EB           Situa_DE ex de,hl
 508+ 881D A7           	and a
 509+ 881E ED 4A        	adc hl,bc
 510+ 8820 EB           	ex de,hl
 511+ 8821 C9           	ret
 512+ 8822
 513+ 8822 A7           Situa_HL and a
 514+ 8823 ED 4A        	adc hl,bc
 515+ 8825 C9           	ret
 516+ 8826
 517+ 8826              ;---------------------------------------------------------------------------------------------------------------
 518+ 8826              ;
 519+ 8826              ;	5/1/24
 520+ 8826              ;
 521+ 8826              ;	INICIALIZA (Numero_parcial_de_entidades).
 522+ 8826              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 523+ 8826              ;
 524+ 8826              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 525+ 8826              ;
 526+ 8826              ;	(Numero_parcial_de_entidades)="7".
 527+ 8826              ;
 528+ 8826              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 529+ 8826              ;
 530+ 8826              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 531+ 8826              ;
 532+ 8826              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 533+ 8826              ;	MODIFICA: A y B.
 534+ 8826              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 535+ 8826
 536+ 8826              Inicializa_Numero_parcial_de_entidades
 537+ 8826
 538+ 8826              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 539+ 8826
 540+ 8826 3A 8E 88     	ld a,(Numero_de_entidades)
 541+ 8829 A7           	and a
 542+ 882A
 543+ 882A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 544+ 882A              ;	jr z,$
 545+ 882A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 546+ 882A
 547+ 882A 20 03        	jr nz,3F
 548+ 882C
 549+ 882C              ; ---------- ---------- ----------
 550+ 882C
 551+ 882C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 552+ 882C              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 553+ 882C
 554+ 882C CD 7C 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 555+ 882F
 556+ 882F              ; ---------- ---------- ----------
 557+ 882F
 558+ 882F 3A 8E 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 559+ 8832 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 560+ 8834 38 08        	jr c,1F
 561+ 8836
 562+ 8836              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 563+ 8836              ; Actualizamos variables.
 564+ 8836
 565+ 8836 3E 07        	ld a,7
 566+ 8838 32 8F 88     	ld (Numero_parcial_de_entidades),a
 567+ 883B 47           	ld b,a
 568+ 883C 18 04        	jr 2F
 569+ 883E
 570+ 883E              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 571+ 883E              ; (Numero_de_entidades)="0".
 572+ 883E
 573+ 883E 32 8F 88     1 ld (Numero_parcial_de_entidades),a
 574+ 8841 47           	ld b,a
 575+ 8842 C9           2 ret
# file closed: Niveles.asm
 107  8843
 108  8843              ; ******************************************************************************************************************************************************************************************
 109  8843              ; Constantes.
 110  8843              ; ******************************************************************************************************************************************************************************************
 111  8843              ;
 112  8843              ; 25/12/23
 113  8843
 114  8843              ;
 115  8843              ; Constantes.
 116  8843              ;
 117  8843
 118  8843              Sprite_vacio equ $eae0
 119  8843              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  8843              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  8843              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  8843              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  8843
 124  8843              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  8843              ;														;
 126  8843              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  8843
 128  8843              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  8843              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  8843              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  8843              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  8843              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  8843
 134  8843              ;														; 55 Bytes.
 135  8843              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 136  8843              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 137  8843
 138  8843              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  8843
 140  8843              ; ******************************************************************************************************************************************************************************************
 141  8843              ; Variables.
 142  8843              ; ******************************************************************************************************************************************************************************************
 143  8843              ;
 144  8843              ; 18/01/24
 145  8843              ;
 146  8843              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  8843              ;
 148  8843
 149  8843              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  8843
 151  8843 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  8844              ;															- Patrón de movimiento.
 153  8844              ;															- Aspecto
 154  8844 00           Filas db 0												; Filas. [DRAW]
 155  8845 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  8846 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8848 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  884A 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  884B 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  884C
 161  884C              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  884C
 163  884C 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  884D              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  884D              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  884D 00           Attr db 0												; Atributos de la entidad:
 167  884E
 168  884E              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  884E              ;
 170  884E              ;	COLORES: 0 ..... NEGRO
 171  884E              ;    		 1 ..... AZUL
 172  884E              ; 			 2 ..... ROJO
 173  884E              ;			 3 ..... MAGENTA
 174  884E              ; 			 4 ..... VERDE
 175  884E              ; 			 5 ..... CIAN
 176  884E              ;			 6 ..... AMARILLO
 177  884E              ; 			 7 ..... BLANCO
 178  884E
 179  884E 00 00        Indice_Sprite_der defw 0
 180  8850 00 00        Indice_Sprite_izq defw 0
 181  8852 00 00        Puntero_DESPLZ_der defw 0
 182  8854 00 00        Puntero_DESPLZ_izq defw 0
 183  8856
 184  8856 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8858 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8859
 187  8859              ; Variables de objeto. (Características).
 188  8859
 189  8859 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  885A              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  885A              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  885A 00 00 00...  Variables_de_borrado ds 6
 193  8860
 194  8860 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  8862              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  8862
 197  8862 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  8864
 199  8864              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  8864              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  8864
 202  8864 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  8866              ;														; _palabras que componen el "movimiento_masticado".
 204  8866
 205  8866              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  8866
 207  8866 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8867              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8867              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8867              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8867              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8867              ;
 213  8867              ; 														DESCRIPCIÖN:
 214  8867              ;
 215  8867              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8867              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8867              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8867              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8867              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8867              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8867              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8867              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8867              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8867              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8867              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8867              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8867              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8867              ;
 229  8867              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8867              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8867              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8867
 233  8867              ; Variables de funcionamiento. [DRAW].
 234  8867
 235  8867 00           Columnas db 0
 236  8868 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  886A              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  886A 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  886B
 240  886B              ; variables de control general.
 241  886B
 242  886B 00           Ctrl_2 db 0
 243  886C              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  886C              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  886C              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  886C              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  886C              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  886C              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  886C              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  886C              ;
 251  886C              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  886C              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  886C              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  886C              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  886C              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  886C              ;														BIT 4, ???
 257  886C              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  886C
 259  886C 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  886D
 261  886D              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  886D
 263  886D              ;					         		---------;      ;---------
 264  886D
 265  886D              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  886D
 267  886D              Perfiles_de_velocidad
 268  886D
 269  886D 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  886E 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  886F 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  8870 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  8871
 274  8871              ; Contadores de 16 bits.
 275  8871
 276  8871 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  8873 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  8875 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8877 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8879
 281  8879              ; Movimiento. ------------------------------------------------------------------------------------------------------
 282  8879
 283  8879 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 284  887B 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 285  887D 00 00        Puntero_indice_mov_bucle defw 0							;
 286  887F              ;
 287  887F              ;
 288  887F 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 289  8880              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 290  8880              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 291  8880 00           Incrementa_puntero_backup db 0
 292  8881 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 293  8882              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 294  8882 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 295  8883 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 296  8884 00           Cola_de_desplazamiento db 0								; Este byte indica:
 297  8885              ;
 298  8885              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 299  8885              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 300  8885              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 301  8885              ;
 302  8885              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 303  8885              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 304  8885              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 305  8885              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 306  8885              ;
 307  8885              ;														;	"$ff" ..... Bucle infinito de repetición.
 308  8885              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 309  8885              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 310  8885              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 311  8885
 312  8885 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 313  8886
 314  8886              ;														DESCRIPCIÓN:
 315  8886              ;
 316  8886              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 317  8886              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 318  8886              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 319  8886              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 320  8886              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 321  8886              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 322  8886
 323  8886              ;														BIT 3, Recarga de nueva oleada.
 324  8886              ;														BIT 4, Recarga de nueva oleada.
 325  8886              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 326  8886              ;														BIT 6, **** Frame completo.
 327  8886              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 328  8886
 329  8886 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 330  8888              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 331  8888              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 332  8888              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 333  8888
 334  8888              ; Gestión de ENTIDADES y CAJAS.
 335  8888
 336  8888 00 00        Puntero_store_caja defw 0
 337  888A 00 00        Puntero_restore_caja defw 0
 338  888C 00 00        Indice_restore_caja defw 0
 339  888E 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 340  888F 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 341  8890 00           Entidades_en_curso db 0									; ..... ..... .....
 342  8891 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 343  8892              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 344  8892              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 345  8892              ;														; _ (Numero_de_malotes)="0".
 346  8892 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 347  8894 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 348  8896              ;														; _ puntero (Indice_entidades).
 349  8896
 350  8896              ;---------------------------------------------------------------------------------------------------------------
 351  8896              ;
 352  8896              ;	11/01/24
 353  8896              ;
 354  8896              ;	Álbumes.
 355  8896
 356  8896 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 357  8898              ;														; _variable para almacenar lo posición del puntero_
 358  8898              ; 														; _de pila, SP.
 359  8898 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 360  889A              ;														; La utiliza la rutina [Extrae_foto_registros].
 361  889A 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 362  889C 00 70        Stack_snapshot defw Album_de_fotos
 363  889E 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 364  88A0
 365  88A0              ;End_Snapshot defw Album_de_fotos
 366  88A0              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 367  88A0 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 368  88A2              ;														; _el snapshot de los registros del siguiente disparo.
 369  88A2              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 370  88A2 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 371  88A4
 372  88A4 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 373  88A5              ;
 374  88A5              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 375  88A5              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 376  88A5              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 377  88A5
 378  88A5 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 379  88A6              ;
 380  88A6              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 381  88A6              ;
 382  88A6              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383  88A6              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384  88A6              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385  88A6              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386  88A6              ;
 387  88A6              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 388  88A6              ;															_ masticados ya generados.
 389  88A6              ;
 390  88A6              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 391  88A6              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 392  88A6              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 393  88A6              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 394  88A6
 395  88A6
 396  88A6              ; Gestión de Disparos.
 397  88A6
 398  88A6 00           Numero_de_disparotes db 0
 399  88A7 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 400  88A9 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 401  88AB 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 402  88AC              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 403  88AC              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 404  88AC 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 405  88AE              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 406  88AE              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 407  88AE              ;														; _produzca colisión.
 408  88AE 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 409  88B0              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 410  88B0 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  88B3              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 412  88B3 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 413  88B6              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 414  88B6 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 415  88B7
 416  88B7              ;---------------------------------------------------------------------------------------------------------------
 417  88B7
 418  88B7              ; Relojes y temporizaciones.
 419  88B7
 420  88B7 00           Contador_de_frames db 0
 421  88B8 00           Contador_de_frames_2 db 0
 422  88B9
 423  88B9 04           Clock_explosion db 4
 424  88BA 14           Clock_Entidades_en_curso db 20
 425  88BB 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 426  88BC              ;														; Repite la oleada de entidades.
 427  88BC 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 428  88BD 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 429  88BE 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 430  88BF
 431  88BF 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 432  88C0 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 433  88C1 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 434  88C2
 435  88C2              ;---------------------------------------------------------------------------------------------------------------
 436  88C2
 437  88C2              ; Gestión de NIVELES.
 438  88C2
 439  88C2 00           Nivel db 0												; Nivel actual del juego.
 440  88C3 00 00        Puntero_indice_NIVELES defw 0
 441  88C5 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 442  88C7              ; 														; _ que definen el NIVEL.
 443  88C7              ; Y todo comienza aquí .....
 444  88C7              ;
 445  88C7              ; 	INICIO  *************************************************************************************************************************************************************************
 446  88C7              ;
 447  88C7              ;	5/1/24
 448  88C7
 449  88C7              START
 450  88C7
 451  88C7 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 452  88CA 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 453  88CC ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 454  88CE ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 455  88D0 F3           	DI
 456  88D1
 457  88D1 3E 07        	ld a,%00000111
 458  88D3 CD 01 97     	call Cls
 459  88D6 CD 4C 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  88D9
 461  88D9              ; INICIALIZACIÓN.
 462  88D9
 463  88D9              ;	Inicializa 1er Nivel.
 464  88D9
 465  88D9 21 5B 86     	ld hl,Indice_de_niveles
 466  88DC 22 C3 88     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 467  88DF CD 7C 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 468  88E2              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 469  88E2              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 470  88E2              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 471  88E2
 472  88E2              ;	Provisional, (para desarrollo).
 473  88E2
 474  88E2              	;-
 475  88E2              ;	ld hl,Numero_parcial_de_entidades
 476  88E2              ;	ld b,(hl)
 477  88E2              ;	inc b
 478  88E2              ;	dec b
 479  88E2              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 480  88E2
 481  88E2 CD AB 86     4 call Inicia_Entidades
 482  88E5
 483  88E5 CD 0F 8A     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 484  88E8              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 485  88E8
 486  88E8              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 487  88E8              ; (Esto se dá cuando se inicia una nueva oleada).
 488  88E8
 489  88E8              ;	ld a,(Ctrl_1)
 490  88E8              ;	bit 3,a
 491  88E8              ;	jr nz,5F											; Loop
 492  88E8
 493  88E8              ; 	INICIA AMADEUS !!!!!
 494  88E8
 495  88E8              ;3 call Restore_Amadeus
 496  88E8              ;	call Inicia_Puntero_objeto
 497  88E8              ;	call Draw
 498  88E8
 499  88E8              ;	call Guarda_movimiento_masticado	;! Provisional
 500  88E8
 501  88E8              ;	call Guarda_foto_registros
 502  88E8              ;	call Guarda_datos_de_borrado_Amadeus
 503  88E8
 504  88E8              ;	ld de,Amadeus_db
 505  88E8              ;	call Store_Amadeus
 506  88E8
 507  88E8              ; 	INICIA DISPAROS !!!!!
 508  88E8
 509  88E8              ;	call Inicia_Puntero_Disparo_Entidades
 510  88E8              ;	call Inicia_Puntero_Disparo_Amadeus
 511  88E8
 512  88E8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 513  88E8
 514  88E8              ;5 call Inicia_punteros_de_cajas
 515  88E8              ;	call Restore_entidad
 516  88E8
 517  88E8              ;	ld a,(Ctrl_1)
 518  88E8              ;	bit 3,a
 519  88E8              ;	jr z,6F
 520  88E8
 521  88E8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 522  88E8
 523  88E8              ;	ld hl,Ctrl_1
 524  88E8              ;	res 3,(hl)
 525  88E8              ;	jr Main
 526  88E8
 527  88E8              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 528  88E8
 529  88E8 21 A4 88     6 ld hl,Ctrl_3
 530  88EB CB C6        	set 0,(hl)											; Frame completo.
 531  88ED FB           	ei
 532  88EE 76           	halt
 533  88EF
 534  88EF              ; ------------------------------------
 535  88EF
 536  88EF              Main
 537  88EF              ;
 538  88EF              ;	11/12/23
 539  88EF
 540  88EF              ; Aparece nueva entidad ???
 541  88EF
 542  88EF              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 543  88EF              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 544  88EF              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 545  88EF              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 546  88EF              ;														; _un 2º bloque.
 547  88EF
 548  88EF              ;	ld a,1
 549  88EF              ;	out ($fe),a
 550  88EF
 551  88EF 3A BA 88     	ld a,(Clock_Entidades_en_curso)
 552  88F2 47           	ld b,a
 553  88F3 3A B7 88     	ld a,(Contador_de_frames)
 554  88F6 B8           	cp b
 555  88F7 20 18        	jr nz,13F
 556  88F9
 557  88F9              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 558  88F9              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 559  88F9
 560  88F9 3A 8F 88     21 ld a,(Numero_parcial_de_entidades)
 561  88FC 47           	ld b,a
 562  88FD 3A 90 88     	ld a,(Entidades_en_curso)
 563  8900 B8           	cp b
 564  8901 28 0E        	jr z,13F
 565  8903 30 0C        	jr nc,13F
 566  8905
 567  8905 3C           	inc a
 568  8906 32 90 88     	ld (Entidades_en_curso),a
 569  8909
 570  8909              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 571  8909
 572  8909 3A BA 88     	ld a,(Clock_Entidades_en_curso)
 573  890C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 574  890C              ;! _ IMPREDECIBLE !!!!
 575  890C C6 64        	add 100
 576  890E 32 BA 88     	ld (Clock_Entidades_en_curso),a
 577  8911
 578  8911              ; -------------------------------------------------------------------------------------------------------------
 579  8911
 580  8911              ; Habilita disparos.
 581  8911
 582  8911              13
 583  8911
 584  8911              ;	ld hl,Disparo_Amadeus
 585  8911              ;	ld de,CLOCK_repone_disparo_Amadeus
 586  8911              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 587  8911
 588  8911              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 589  8911              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 590  8911              ;	call Habilita_disparos
 591  8911
 592  8911              ; COLISIONES.
 593  8911
 594  8911              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 595  8911
 596  8911              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 597  8911              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 598  8911              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 599  8911
 600  8911              ;	xor a
 601  8911              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 602  8911
 603  8911              ;	call Inicia_punteros_de_cajas
 604  8911              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 605  8911              ; 														; _ en DRAW.
 606  8911
 607  8911              ;	ld a,(Filas)
 608  8911              ;	and a
 609  8911              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 610  8911              ;	call Incrementa_punteros_de_cajas
 611  8911              ;	jr 12B
 612  8911
 613  8911              ; ---------------------------------------------------------------------------------------
 614  8911
 615  8911 3A 8F 88     10 ld a,(Numero_parcial_de_entidades)
 616  8914 47               ld b,a
 617  8915 A7           	and a
 618  8916 20 00        	jr nz,11F
 619  8918
 620  8918              ;	ld hl,Ctrl_1;
 621  8918              ;	bit 4,(hl)
 622  8918              ;	jp nz,16F
 623  8918
 624  8918              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 625  8918
 626  8918              ;	ld hl,Ctrl_1
 627  8918              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 628  8918
 629  8918              ;	ld a,(Contador_de_frames)
 630  8918              ;	inc a
 631  8918              ;	ld (Activa_recarga_cajas),a
 632  8918
 633  8918              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 634  8918
 635  8918 3A 90 88     11 ld a,(Entidades_en_curso)
 636  891B A7           	and a
 637  891C CA 3D 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 638  891F 47           	ld b,a												; No hay entidades que gestionar.
 639  8920
 640  8920              ; ( Código que ejecutamos con cada entidad: ).
 641  8920
 642  8920              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 643  8920
 644  8920 C5           15 push bc 												; Nº de entidades en curso.
 645  8921
 646  8921 CD E2 8A     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 647  8924
 648  8924              ; Existe "Entidad_guía" ???.
 649  8924              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 650  8924
 651  8924              ;	ld a,(Ctrl_3)
 652  8924              ;	bit 1,a
 653  8924              ;	jr nz,22F
 654  8924
 655  8924              ; Almacén de "Movimientos_masticados" lleno ???
 656  8924              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 657  8924              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 658  8924
 659  8924              ;;	ld a,(Ctrl_3)
 660  8924              ;;	bit 3,a
 661  8924              ;;	jr nz,22F
 662  8924
 663  8924              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 664  8924
 665  8924              ;	ld hl,Ctrl_2
 666  8924              ;	set 5,(hl)
 667  8924              ;	ld hl,Ctrl_3
 668  8924              ;	set 1,(hl)
 669  8924
 670  8924              ; Impacto ???
 671  8924
 672  8924              ;22 ld a,(Impacto)
 673  8924              ;	and a
 674  8924              ;	jr z,8F
 675  8924
 676  8924              ; Hay Impacto en esta entidad.
 677  8924
 678  8924              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 679  8924              ;	dec (hl)
 680  8924              ;	jp nz,17F
 681  8924
 682  8924              ;! Velocidad de la animación de la explosión.
 683  8924
 684  8924              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 685  8924              ;														; _,(velocidad de la explosión).
 686  8924              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 687  8924
 688  8924              ;	call Repone_datos_de_borrado
 689  8924              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 690  8924
 691  8924              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 692  8924
 693  8924              ;	ld a,(Ctrl_2)
 694  8924              ;	bit 1,a
 695  8924              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 696  8924
 697  8924              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 698  8924
 699  8924              ;	ld a,(CTRL_DESPLZ)
 700  8924              ;	and a
 701  8924              ;	jr nz,18F
 702  8924
 703  8924              ;	ld hl,Indice_Explosion_2x2-2
 704  8924              ;	ld (Puntero_DESPLZ_der),hl
 705  8924              ;	jr 19F
 706  8924
 707  8924              ;18 ld hl,Indice_Explosion_2x3-2
 708  8924              ;	ld (Puntero_DESPLZ_der),hl
 709  8924
 710  8924              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 711  8924              ;	set 1,(hl)
 712  8924              ;	jr 7F
 713  8924
 714  8924              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 715  8924              ; _con las coordenadas de la entidad almacenada en DRAW.
 716  8924
 717  8924              ;8 ld a,(Ctrl_1)
 718  8924              ;	bit 2,a
 719  8924              ;	jr z,7F
 720  8924
 721  8924              ;	ld hl,(Coordenadas_disparo_certero)
 722  8924              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 723  8924              ;														; E contiene la coordenada_X del disparo.
 724  8924              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 725  8924              ;														; H FILA, (Coordenada_y de la entidad).
 726  8924              ;	and a
 727  8924              ;	sbc hl,de
 728  8924
 729  8924              ;	call Determina_resultado_comparativa
 730  8924
 731  8924              ;	ld a,b
 732  8924              ;	and a
 733  8924              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 734  8924
 735  8924              ; ----- ----- -----
 736  8924
 737  8924 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 738  8926 32 59 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 739  8929
 740  8929 21 85 88     	ld hl,Ctrl_1
 741  892C CB 96        	res 2,(hl)
 742  892E
 743  892E CD 4B 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 744  8931
 745  8931              ;	ld a,(Ctrl_0)
 746  8931              ;	bit 4,a
 747  8931              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 748  8931
 749  8931              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 750  8931              ; [[[
 751  8931              ;	call Detecta_disparo_entidad
 752  8931              ; ]]]
 753  8931
 754  8931 CD 11 87     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 755  8934
 756  8934              ;	ld hl,Ctrl_0
 757  8934              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 758  8934
 759  8934 CD 01 87     17 call Store_Restore_cajas
 760  8937
 761  8937 C1           	pop bc
 762  8938
 763  8938 10 E6        	djnz 15B
 764  893A              	;
 765  893A CD 0F 8A     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 766  893D
 767  893D              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 768  893D              ; Hemos gestionado todas las unidades.
 769  893D              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 770  893D
 771  893D              ;	ld hl,Ctrl_1
 772  893D              ;	res 2,(hl)
 773  893D
 774  893D 21 A4 88     16 ld hl,Ctrl_3
 775  8940 CB C6        	set 0,(hl)											; Frame completo.
 776  8942
 777  8942 AF           	xor a
 778  8943 D3 FE        	out ($fe),a
 779  8945
 780  8945 FB           	ei
 781  8946 76           	halt
 782  8947
 783  8947              ; ----------------------------------------
 784  8947
 785  8947              ;	ld a,(Ctrl_1) 										; Existe Loop?
 786  8947              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 787  8947 CA EF 88     	jp z,Main
 788  894A
 789  894A              ; RECARGA DE NUEVA OLEADA.
 790  894A
 791  894A              ;	ld a,(Contador_de_frames)
 792  894A              ;	ld b,a
 793  894A              ;	ld a,(Activa_recarga_cajas)
 794  894A              ;	cp b
 795  894A              ;	jr z,20F
 796  894A
 797  894A              ;	ld hl,Ctrl_1
 798  894A              ;	set 4,(hl)
 799  894A              ;	jp Main
 800  894A
 801  894A              ;20 ld hl,Ctrl_1
 802  894A              ;	res 4,(hl)
 803  894A
 804  894A              ;	ld a,(Contador_de_frames)
 805  894A
 806  894A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 807  894A              ;! _ IMPREDECIBLE !!!!
 808  894A
 809  894A              ;	add 10
 810  894A              ;	ld (Clock_Entidades_en_curso),a
 811  894A
 812  894A              ;	jp 4B
 813  894A
 814  894A C9           	ret
 815  894B
 816  894B              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 817  894B              ;
 818  894B              ;	16/11/23
 819  894B
 820  894B              ;;Gestiona_Amadeus
 821  894B
 822  894B              ;! Activa/desactiva impacto con Amadeus.
 823  894B
 824  894B              ;	ld a,(Impacto)
 825  894B              ;	and a
 826  894B              ;	jr nz,2F
 827  894B
 828  894B              ;;	call Mov_Amadeus
 829  894B
 830  894B              ;;2 ld a,(Ctrl_0)
 831  894B              ;;	bit 4,a
 832  894B              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 833  894B
 834  894B              ;;	call Guarda_foto_entidad_a_pintar
 835  894B              ;;	call Guarda_datos_de_borrado_Amadeus
 836  894B
 837  894B              ;;1 ld hl,Ctrl_0
 838  894B              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 839  894B
 840  894B              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 841  894B
 842  894B              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 843  894B
 844  894B              ;	call Calcula_numero_de_disparotes
 845  894B
 846  894B              ;;	ret
 847  894B
 848  894B              ; --------------------------------------------------------------------------------------------------------------
 849  894B              ;
 850  894B              ;	15/12/23
 851  894B
 852  894B              Mov_obj
 853  894B
 854  894B              ;	ld a,(Ctrl_2)
 855  894B              ;	bit 1,a
 856  894B              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 857  894B
 858  894B              ; Explosión:
 859  894B
 860  894B              ;	ld a,(Frames_explosion)
 861  894B              ;	and a
 862  894B              ;	jr nz,4F
 863  894B
 864  894B              ;!  Una alimaña menos!!!!!!!!!1
 865  894B
 866  894B              ; Se trataba de una Entidad_guía ???
 867  894B
 868  894B              ;	ld a,(Ctrl_2)
 869  894B              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 870  894B              ;	jr z,5F
 871  894B
 872  894B              ;	ld hl,Ctrl_3
 873  894B              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 874  894B
 875  894B              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 876  894B              ;!! _generado puede ser distinto, (aletoriedad).
 877  894B
 878  894B              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 879  894B              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 880  894B              ;	dec (hl)
 881  894B              ;	ld hl,Entidades_en_curso
 882  894B              ;	dec (hl)
 883  894B              ;	ld hl,Numero_de_entidades
 884  894B              ;	dec (hl)
 885  894B              ;	jr 3F
 886  894B
 887  894B              ; -----
 888  894B
 889  894B              ;	`Movemos´ la explosión.
 890  894B
 891  894B              ;4 ld hl,(Puntero_DESPLZ_der)
 892  894B              ;	inc hl
 893  894B              ;	inc hl
 894  894B              ;	call Extrae_address
 895  894B              ;;	ld (Puntero_objeto),hl
 896  894B
 897  894B              ;;	ld hl,Frames_explosion
 898  894B              ;;	dec (hl)
 899  894B
 900  894B              ;;	ld hl,Ctrl_0
 901  894B              ;;	set 4,(hl);;
 902  894B
 903  894B              ;;	jr 3F
 904  894B
 905  894B              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 906  894B
 907  894B              ;2 xor a
 908  894B              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 909  894B
 910  894B              ; Movemos Entidades malignas.
 911  894B              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 912  894B
 913  894B              ;	ld a,(Ctrl_2)
 914  894B              ;	bit 5,a
 915  894B              ;	jr nz,8F
 916  894B
 917  894B              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 918  894B              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 919  894B              ;	jr 7F
 920  894B
 921  894B              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 922  894B
 923  894B              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 924  894B              ;	bit 4,a
 925  894B              ;	ret z
 926  894B
 927  894B              ; Ha habido desplazamiento de la entidad maligna.
 928  894B              ; Ha llegado a zona de AMADEUS ???
 929  894B
 930  894B 3A 4B 88     7 ld a,(Coordenada_y)
 931  894E FE 14        	cp $14
 932  8950 38 00        	jr c,1F
 933  8952
 934  8952              ; ---------
 935  8952
 936  8952              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 937  8952              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 938  8952
 939  8952              ;	di
 940  8952              ;	call Genera_coordenadas_X
 941  8952              ;	call Compara_coordenadas_X
 942  8952              ;	ei
 943  8952
 944  8952              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 945  8952
 946  8952              ; ---------
 947  8952
 948  8952              1
 949  8952              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 950  8952 CD C0 8B     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 951  8955 CD 4D 8A     	call Limpia_Variables_de_borrado
 952  8958
 953  8958 C9           3 ret
 954  8959
 955  8959              ; --------------------------------------------------------------------------------------------------------------
 956  8959              ;
 957  8959              ;	29/1/23
 958  8959
 959  8959              Mov_Amadeus
 960  8959
 961  8959              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 962  8959
 963  8959 CD B9 97     	call Mov_right
 964  895C
 965  895C 3A 66 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 966  895F CB 67        	bit 4,a
 967  8961 C8           	ret z
 968  8962
 969  8962              ; ---------
 970  8962
 971  8962              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 972  8962 CD B0 8B     	call Repone_datos_de_borrado_Amadeus
 973  8965 CD 4D 8A     	call Limpia_Variables_de_borrado
 974  8968
 975  8968 C9           	ret
 976  8969
 977  8969              ; -----------------------------------------------------------------------------------
 978  8969              ;
 979  8969              ;	20/01/24
 980  8969              ;
 981  8969              ;
 982  8969
 983  8969              Construye_movimientos_masticados_entidad
 984  8969
 985  8969 2A 62 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 986  896C E5           	push hl
 987  896D
 988  896D CD B1 89     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 989  8970              ;															; _ el (Contador_de_mov_masticados).
 990  8970 CD AD 8A     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 991  8973              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 992  8973 CD 15 97     	call Recompone_posicion_inicio
 993  8976
 994  8976 CD EB 90     1 call Draw
 995  8979 CD 95 89     	call Guarda_movimiento_masticado
 996  897C CD 7E 9C     	call Movimiento
 997  897F
 998  897F 3A A4 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 999  8982 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1000  8984 28 F0        	jr z,1B
1001  8986
1002  8986              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1003  8986              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1004  8986
1005  8986 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1006  8987 22 62 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1007  898A
1008  898A
1009  898A              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1010  898A
1011  898A CD EF 9D     	call Situa_en_contador_general_de_mov_masticados
1012  898D
1013  898D              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1014  898D              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1015  898D
1016  898D ED 4B 64 88  	ld bc,(Contador_de_mov_masticados)
1017  8991 71           	ld (hl),c
1018  8992 23           	inc hl
1019  8993 70           	ld (hl),b
1020  8994
1021  8994 C9           	ret
1022  8995
1023  8995              ; -----------------------------------------------------------------------------------
1024  8995              ;
1025  8995              ;	28/12/23
1026  8995              ;
1027  8995              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1028  8995              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1029  8995
1030  8995              Guarda_movimiento_masticado
1031  8995
1032  8995 ED 73 96 88  	ld (Stack),sp
1033  8999 ED 7B 62 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1034  899D
1035  899D E5           	push hl
1036  899E DD E5            push ix
1037  89A0 FD E5            push iy
1038  89A2
1039  89A2 ED 7B 96 88      ld sp,(Stack)
1040  89A6
1041  89A6              ;    push hl
1042  89A6
1043  89A6 2A 64 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1044  89A9 23           	inc hl
1045  89AA 22 64 88     	ld (Contador_de_mov_masticados),hl
1046  89AD
1047  89AD              ;	pop hl
1048  89AD
1049  89AD CD B1 89         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1050  89B0              ;															; _ el (Contador_de_mov_masticados).
1051  89B0 C9               ret
1052  89B1
1053  89B1              ; --------------------------------------------------------------------------------------------------------------
1054  89B1              ;
1055  89B1              ;	12/1/24
1056  89B1              ;
1057  89B1              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1058  89B1
1059  89B1              Actualiza_Puntero_de_almacen_de_mov_masticados
1060  89B1
1061  89B1              ;	push hl
1062  89B1              ;	push bc
1063  89B1
1064  89B1 2A 62 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1065  89B4 01 06 00     	ld bc,6
1066  89B7 A7           	and a
1067  89B8 ED 4A        	adc hl,bc
1068  89BA 22 62 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1069  89BD
1070  89BD              ;	pop bc
1071  89BD              ;	pop hl
1072  89BD
1073  89BD C9           	ret
1074  89BE
1075  89BE              ; --------------------------------------------------------------------------------------------------------------
1076  89BE              ;
1077  89BE              ;	15/01/24
1078  89BE              ;
1079  89BE              ;	Cargamos los registros_
1080  89BE              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1081  89BE              ;
1082  89BE              ;	HL contiene la dirección de la rutina de impresión.
1083  89BE              ;	IX contiene el puntero de impresión.
1084  89BE              ;	IY contiene (Puntero_objeto).
1085  89BE
1086  89BE
1087  89BE ED 73 96 88  Cargamos_registros_con_mov_masticado ld (Stack),sp
1088  89C2 ED 7B 62 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1089  89C6
1090  89C6 FD E1        	pop iy
1091  89C8 DD E1        	pop ix
1092  89CA E1           	pop hl
1093  89CB
1094  89CB ED 73 62 88  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1095  89CF
1096  89CF ED 7B 96 88  	ld sp,(Stack)
1097  89D3
1098  89D3 C9           	ret
1099  89D4
1100  89D4              ; --------------------------------------------------------------------------------------------------------------
1101  89D4              ;
1102  89D4              ;	28/12/23
1103  89D4              ;
1104  89D4              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1105  89D4              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1106  89D4
1107  89D4              Guarda_foto_entidad_a_pintar
1108  89D4
1109  89D4 3A 66 88     	ld a,(Ctrl_0)
1110  89D7 CB 77        	bit 6,a
1111  89D9 28 04        	jr z,5F
1112  89DB
1113  89DB              ;	Guarda la foto de Amadeus.
1114  89DB
1115  89DB              ;	call Draw
1116  89DB              ;	call Guarda_movimiento_masticado	;! Provisional
1117  89DB CD 16 71     	call Guarda_foto_registros
1118  89DE C9           	ret
1119  89DF
1120  89DF              ; ENTIDADES!
1121  89DF              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1122  89DF
1123  89DF 3A A4 88     5 ld a,(Ctrl_3)
1124  89E2 CB 5F        	bit 3,a
1125  89E4 28 01        	jr z,1F
1126  89E6
1127  89E6              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1128  89E6
1129  89E6              4
1130  89E6              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1131  89E6 C9           	ret
1132  89E7
1133  89E7              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1134  89E7
1135  89E7 3A A4 88     1 ld a,(Ctrl_3)
1136  89EA CB 57        	bit 2,a
1137  89EC 20 10        	jr nz,6F
1138  89EE
1139  89EE              ; Entidad guía o fantasma ???
1140  89EE
1141  89EE 3A 6B 88     	ld a,(Ctrl_2)
1142  89F1 CB 6F        	bit 5,a
1143  89F3 20 10        	jr nz,3F
1144  89F5
1145  89F5              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1146  89F5
1147  89F5 18 EF        	jr 4B
1148  89F7
1149  89F7              ; ENTIDAD_GUÍA:
1150  89F7              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1151  89F7              ; _guardando "movimientos_masticados".
1152  89F7
1153  89F7 3A A4 88     2 ld a,(Ctrl_3)
1154  89FA CB 57        	bit 2,a
1155  89FC 28 07        	jr z,3F
1156  89FE
1157  89FE              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1158  89FE              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1159  89FE
1160  89FE CB 97        6 res 2,a
1161  8A00 CB DF        	set 3,a
1162  8A02 32 A4 88     	ld (Ctrl_3),a
1163  8A05
1164  8A05
1165  8A05              ;	Esto sólo lo ejecuta una entidad guía.
1166  8A05
1167  8A05 CD EB 90     3 	call Draw
1168  8A08 CD 95 89     	call Guarda_movimiento_masticado
1169  8A0B CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1170  8A0E
1171  8A0E              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1172  8A0E              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1173  8A0E
1174  8A0E              ;	call Convierte_guia_en_fantasma
1175  8A0E C9           	ret
1176  8A0F
1177  8A0F              ; --------------------------------------------------------------------------------------------------------------
1178  8A0F              ;
1179  8A0F              ;	19/9/23
1180  8A0F
1181  8A0F              ;Prepara_var_pintado
1182  8A0F
1183  8A0F              ;	ld hl,Filas
1184  8A0F              ;	ld de,Variables_de_pintado
1185  8A0F              ;	ld bc,8
1186  8A0F              ;	ldir
1187  8A0F              ;	ret
1188  8A0F
1189  8A0F              ; --------------------------------------------------------------------------------------------------------------
1190  8A0F
1191  8A0F              ;Repone_pintar
1192  8A0F
1193  8A0F              ;	ld hl,Variables_de_pintado
1194  8A0F              ;	ld de,Filas
1195  8A0F              ;	ld bc,8
1196  8A0F              ;	ldir
1197  8A0F              ;	ret
1198  8A0F
1199  8A0F              ; *************************************************************************************************************************************************************
1200  8A0F              ;
1201  8A0F              ; 8/1/23
1202  8A0F              ;
1203  8A0F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1204  8A0F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1205  8A0F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1206  8A0F
1207  8A0F              ; Destruye HL y DE !!!!!
1208  8A0F
1209  8A0F              Inicia_punteros_de_cajas
1210  8A0F
1211  8A0F 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1212  8A12 CD A7 8A         call Extrae_address
1213  8A15 22 88 88         ld (Puntero_store_caja),hl
1214  8A18 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1215  8A1B 22 8C 88     	ld (Indice_restore_caja),hl
1216  8A1E CD A7 8A     	call Extrae_address
1217  8A21 22 8A 88     	ld (Puntero_restore_caja),hl
1218  8A24 C9               ret
1219  8A25
1220  8A25              ; *************************************************************************************************************************************************************
1221  8A25              ;
1222  8A25              ; 8/1/23
1223  8A25              ;
1224  8A25              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1225  8A25
1226  8A25 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1227  8A28 22 A7 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1228  8A2B C9           	ret
1229  8A2C 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1230  8A2F 22 A9 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1231  8A32 C9           	ret
1232  8A33
1233  8A33              ; -------------------------------------------------------------------------------------------------------------
1234  8A33              ;
1235  8A33              ; 21/9/23
1236  8A33              ;
1237  8A33
1238  8A33              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1239  8A33
1240  8A33              Limpia_album_Amadeus
1241  8A33
1242  8A33 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1243  8A36 7E           	ld a,(hl)
1244  8A37 A7           	and a
1245  8A38 C8           	ret z
1246  8A39
1247  8A39 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1248  8A3C 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1249  8A3F 01 0B 00     	ld bc,11
1250  8A42 AF           	xor a
1251  8A43 77           	ld (hl),a
1252  8A44 ED B0        	ldir
1253  8A46
1254  8A46 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1255  8A49 22 A2 88     	ld (End_Snapshot_Amadeus),hl
1256  8A4C
1257  8A4C C9           	ret
1258  8A4D
1259  8A4D 21 5A 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1260  8A50 11 5B 88     	ld de,Variables_de_borrado+1
1261  8A53 01 05 00     	ld bc,5
1262  8A56 AF           	xor a
1263  8A57 77           	ld (hl),a
1264  8A58 ED B0        	ldir
1265  8A5A C9           	ret
1266  8A5B
1267  8A5B              ; -------------------------------------------------------------------------------------------------------------
1268  8A5B              ;
1269  8A5B              ; 8/9/23
1270  8A5B              ;
1271  8A5B
1272  8A5B              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1273  8A5B              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1274  8A5B
1275  8A5B              Calcula_numero_de_malotes
1276  8A5B
1277  8A5B 21 00 70     	ld hl,Album_de_fotos
1278  8A5E EB           	ex de,hl
1279  8A5F 2A 9C 88     	ld hl,(Stack_snapshot)
1280  8A62
1281  8A62 06 00        	ld b,0
1282  8A64 7D           	ld a,l
1283  8A65 93           	sub e
1284  8A66 28 07        	jr z,1F
1285  8A68
1286  8A68              ; Nº de malotes no es "0".
1287  8A68
1288  8A68 D6 06        2 sub 6
1289  8A6A 04           	inc b
1290  8A6B A7           	and a
1291  8A6C 20 FA        	jr nz,2B
1292  8A6E 78           	ld a,b
1293  8A6F
1294  8A6F 32 91 88     1 ld (Numero_de_malotes),a
1295  8A72 C9           	ret
1296  8A73
1297  8A73              ; -------------------------------------------------------------------------------------------------------------
1298  8A73              ;
1299  8A73              ; 8/9/23
1300  8A73              ;
1301  8A73
1302  8A73              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1303  8A73              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1304  8A73
1305  8A73              Calcula_malotes_Amadeus
1306  8A73
1307  8A73 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1308  8A76 EB           	ex de,hl
1309  8A77 2A A2 88     	ld hl,(End_Snapshot_Amadeus)
1310  8A7A
1311  8A7A 7C           	ld a,h
1312  8A7B A7           	and a
1313  8A7C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1314  8A7E
1315  8A7E 06 00        	ld b,0
1316  8A80 7D           	ld a,l
1317  8A81 93           	sub e
1318  8A82 28 07        	jr z,1F
1319  8A84
1320  8A84              ; Nº de malotes no es "0".
1321  8A84
1322  8A84 D6 06        2 sub 6
1323  8A86 04           	inc b
1324  8A87 A7           	and a
1325  8A88 20 FA        	jr nz,2B
1326  8A8A 78           	ld a,b
1327  8A8B
1328  8A8B 32 91 88     1 ld (Numero_de_malotes),a
1329  8A8E C9           	ret
1330  8A8F
1331  8A8F              ; -------------------------------------------------------------------------------------------------------------
1332  8A8F              ;
1333  8A8F              ; 28/2/23
1334  8A8F              ;
1335  8A8F
1336  8A8F              Calcula_numero_de_disparotes
1337  8A8F
1338  8A8F 21 56 70     	ld hl,Album_de_fotos_disparos
1339  8A92 EB           	ex de,hl
1340  8A93 2A A0 88     	ld hl,(End_Snapshot_disparos)
1341  8A96
1342  8A96 06 00        	ld b,0
1343  8A98 7D           	ld a,l
1344  8A99 93           	sub e
1345  8A9A 28 07        	jr z,1F
1346  8A9C
1347  8A9C              ; Nº de malotes no es "0".
1348  8A9C
1349  8A9C D6 06        2 sub 6
1350  8A9E 04           	inc b
1351  8A9F A7           	and a
1352  8AA0 20 FA        	jr nz,2B
1353  8AA2 78           	ld a,b
1354  8AA3
1355  8AA3 32 A6 88     1 ld (Numero_de_disparotes),a
1356  8AA6 C9           	ret
1357  8AA7
1358  8AA7              ; *************************************************************************************************************************************************************
1359  8AA7              ;
1360  8AA7              ; 20/10/22
1361  8AA7              ;
1362  8AA7              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1363  8AA7              ;
1364  8AA7              ; Destruye el puntero y DE !!!!!
1365  8AA7
1366  8AA7 5E           Extrae_address ld e,(hl)
1367  8AA8 23           	inc hl
1368  8AA9 56           	ld d,(hl)
1369  8AAA 2B           	dec hl
1370  8AAB EB           	ex de,hl
1371  8AAC C9           	ret
1372  8AAD
1373  8AAD              ; *************************************************************************************************************************************************************
1374  8AAD              ;
1375  8AAD              ;	20/1/24
1376  8AAD              ;
1377  8AAD              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1378  8AAD              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1379  8AAD              ;
1380  8AAD              ;   Destruye HL y BC !!!!!,
1381  8AAD              ;
1382  8AAD              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1383  8AAD              ;					"0" ..... Izquierda.
1384  8AAD
1385  8AAD              Inicia_Puntero_objeto
1386  8AAD
1387  8AAD 3A 58 88     	ld a,(Cuad_objeto)
1388  8AB0 E6 01        	and 1
1389  8AB2 F5           	push af
1390  8AB3 CC CF 8A     	call z,Inicia_puntero_objeto_izq
1391  8AB6 F1           	pop af
1392  8AB7 C8           	ret z
1393  8AB8 CD BC 8A     	call Inicia_puntero_objeto_der
1394  8ABB C9           	ret
1395  8ABC
1396  8ABC              ; Arrancamos desde la parte izquierda de la pantalla.
1397  8ABC              ; Iniciamos (Indice_Sprite_der).
1398  8ABC
1399  8ABC 2A 4E 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1400  8ABF 22 52 88     	ld (Puntero_DESPLZ_der),hl
1401  8AC2 CD A7 8A     	call Extrae_address
1402  8AC5 22 48 88     	ld (Puntero_objeto),hl
1403  8AC8
1404  8AC8 2A 50 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1405  8ACB 22 54 88     	ld (Puntero_DESPLZ_izq),hl
1406  8ACE C9           	ret
1407  8ACF
1408  8ACF              ; Arrancamos desde la parte derecha de la pantalla.
1409  8ACF              ; Iniciamos (Indice_Sprite_izq).
1410  8ACF
1411  8ACF 2A 50 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1412  8AD2 22 54 88     	ld (Puntero_DESPLZ_izq),hl
1413  8AD5 CD A7 8A     	call Extrae_address
1414  8AD8 22 48 88     	ld (Puntero_objeto),hl
1415  8ADB
1416  8ADB 2A 4E 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1417  8ADE 22 52 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1418  8AE1 C9           	ret
1419  8AE2
1420  8AE2              ; **************************************************************************************************
1421  8AE2              ;
1422  8AE2              ;	26/01/24
1423  8AE2              ;
1424  8AE2              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1425  8AE2
1426  8AE2              Restore_entidad
1427  8AE2
1428  8AE2 2A 88 88     	ld hl,(Puntero_store_caja)
1429  8AE5 11 43 88     	ld de,Bandeja_DRAW
1430  8AE8 7E           	ld a,(hl)
1431  8AE9 12           	ld (de),a
1432  8AEA 23           	inc hl 											; (Tipo).
1433  8AEB
1434  8AEB 11 4A 88     	ld de,Bandeja_DRAW+7							; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1435  8AEE 01 02 00     	ld bc,2
1436  8AF1 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1437  8AF3
1438  8AF3 13           	inc de
1439  8AF4 7E           	ld a,(hl)
1440  8AF5 12           	ld (de),a 										; Transferimos (Attr).
1441  8AF6 23           	inc hl
1442  8AF7
1443  8AF7 11 59 88     	ld de,Bandeja_DRAW+22
1444  8AFA
1445  8AFA 7E           	ld a,(hl)
1446  8AFB 12           	ld (de),a 										; Transferimos (Impacto).
1447  8AFC 23           	inc hl
1448  8AFD
1449  8AFD 13           	inc de
1450  8AFE
1451  8AFE 01 06 00     	ld bc,6
1452  8B01 ED B0        	ldir
1453  8B03
1454  8B03 01 07 00     	ld bc,7
1455  8B06 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1456  8B08              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1457  8B08 11 6B 88     	ld de,Bandeja_DRAW+40
1458  8B0B
1459  8B0B 7E           	ld a,(hl)
1460  8B0C 12           	ld (de),a 										; Transferimos (Ctrl_2).
1461  8B0D
1462  8B0D C9           	ret
1463  8B0E
1464  8B0E              ; **************************************************************************************************
1465  8B0E              ;
1466  8B0E              ;	08/05/23
1467  8B0E              ;
1468  8B0E              ;	Incrementamos los dos punteros de entidades. (+1).
1469  8B0E
1470  8B0E              Incrementa_punteros_de_cajas
1471  8B0E
1472  8B0E 2A 8A 88     	ld hl,(Puntero_restore_caja)
1473  8B11 22 88 88     	ld (Puntero_store_caja),hl
1474  8B14 2A 8C 88     	ld hl,(Indice_restore_caja)
1475  8B17 23           	inc hl
1476  8B18 23           	inc hl
1477  8B19 22 8C 88     	ld (Indice_restore_caja),hl
1478  8B1C CD A7 8A         call Extrae_address
1479  8B1F 22 8A 88         ld (Puntero_restore_caja),hl
1480  8B22 C9               ret
1481  8B23
1482  8B23              ; **************************************************************************************************
1483  8B23              ;
1484  8B23              ;	21/12/23
1485  8B23              ;
1486  8B23              ;	Restore_Amadeus
1487  8B23              ;
1488  8B23              ;	Cargamos en DRAW los parámetros de Amadeus.
1489  8B23              ;
1490  8B23
1491  8B23 E5           Restore_Amadeus	push hl
1492  8B24 D5           	push de
1493  8B25 C5            	push bc
1494  8B26 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1495  8B29 11 43 88     	ld de,Bandeja_DRAW
1496  8B2C 01 2A 00     	ld bc,42
1497  8B2F ED B0        	ldir
1498  8B31 C1           	pop bc
1499  8B32 D1           	pop de
1500  8B33 E1           	pop hl
1501  8B34 C9           	ret
1502  8B35
1503  8B35              ; *************************************************************************************************************************************************************
1504  8B35              ;
1505  8B35              ;	21/12/23
1506  8B35              ;
1507  8B35              ;	Store_Amadeus
1508  8B35              ;
1509  8B35              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1510  8B35              ;
1511  8B35              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1512  8B35              ;
1513  8B35              ;	DESTRUYE: HL y BC y DE.
1514  8B35
1515  8B35 21 43 88     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1516  8B38 01 2A 00     	ld bc,42
1517  8B3B ED B0        	ldir
1518  8B3D C9           	ret
1519  8B3E
1520  8B3E              ; -----------------------------------------------------------
1521  8B3E              ;
1522  8B3E              ;	21/12/23
1523  8B3E              ;
1524  8B3E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1525  8B3E              ;
1526  8B3E              ;	Destruye: HL,BC,DE,A
1527  8B3E
1528  8B3E 21 43 88     Borra_datos_entidad ld hl,Bandeja_DRAW
1529  8B41 01 29 00     	ld bc,41
1530  8B44 AF           	xor a
1531  8B45 77           	ld (hl),a
1532  8B46 11 44 88     	ld de,Bandeja_DRAW+1
1533  8B49 ED B0        	ldir
1534  8B4B C9           	ret
1535  8B4C
1536  8B4C              ; -----------------------------------------------------------
1537  8B4C
1538  8B4C              ; Teclado.
1539  8B4C
1540  8B4C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1541  8B4E DB FE        	in a,($fe)
1542  8B50 E6 01        	and $01
1543  8B52 28 02        	jr z,1f
1544  8B54 18 F6        	jr Pulsa_ENTER
1545  8B56 C9           1 ret
1546  8B57
1547  8B57              ; **************************************************************************************************
1548  8B57              ;
1549  8B57              ; Temporización.
1550  8B57
1551  8B57              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1552  8B57              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1553  8B57              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1554  8B57              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1555  8B57
1556  8B57              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1557  8B57              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1558  8B57              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1559  8B57
1560  8B57              ; A partir de $4f61 no hace falta DELAY.
1561  8B57
1562  8B57              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1563  8B57
1564  8B57 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1565  8B5A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1566  8B5B 78           	LD A,B
1567  8B5C A7           	AND A
1568  8B5D 20 FB        	JR NZ,wait
1569  8B5F C9           	RET
1570  8B60
1571  8B60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1572  8B60              ;
1573  8B60              ;	5/3/23
1574  8B60              ;
1575  8B60              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1576  8B60
1577  8B60              Movimiento_Amadeus
1578  8B60
1579  8B60              ; Disparo.
1580  8B60
1581  8B60 3A BC 88     	ld a,(Disparo_Amadeus)
1582  8B63 A7           	and a
1583  8B64 20 02        	jr nz,1F
1584  8B66 18 15        	jr 2F
1585  8B68
1586  8B68 3E F7        1 ld a,$f7													; "5" para disparar.
1587  8B6A DB FE        	in a,($fe)
1588  8B6C E6 10        	and $10
1589  8B6E
1590  8B6E F5           	push af
1591  8B6F CC 17 8C     	call z,Genera_disparo
1592  8B72 F1           	pop af
1593  8B73 20 08        	jr nz,2F
1594  8B75
1595  8B75 3A BC 88     	ld a,(Disparo_Amadeus)
1596  8B78 EE 01        	xor 1
1597  8B7A 32 BC 88     	ld (Disparo_Amadeus),a
1598  8B7D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1599  8B7F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1600  8B81 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1601  8B83 CC DC 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1602  8B86
1603  8B86 3E F7        	ld a,$f7
1604  8B88 DB FE        	in a,($fe)
1605  8B8A E6 01        	and $01
1606  8B8C C8           	ret z
1607  8B8D
1608  8B8D 3E F7        	ld a,$f7
1609  8B8F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1610  8B91 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1611  8B93 CC B9 97     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1612  8B96 C9           	ret
1613  8B97
1614  8B97              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1615  8B97              ;
1616  8B97              ;	Rutina provisional para que los malotes cagen balas.
1617  8B97
1618  8B97              Detecta_disparo_entidad
1619  8B97
1620  8B97 3A BF 88     	ld a,(Disparo_entidad)
1621  8B9A A7           	and a
1622  8B9B C8           	ret z
1623  8B9C
1624  8B9C              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1625  8B9C
1626  8B9C              ;	ld a,$7f				; Detecta SPACE.
1627  8B9C              ;	in a,($fe)
1628  8B9C              ;	and 1
1629  8B9C              ;	ret nz
1630  8B9C
1631  8B9C CD 17 8C     	call Genera_disparo
1632  8B9F C9           	ret
1633  8BA0
1634  8BA0              ; ----------------------------------------------------------------------
1635  8BA0              ;
1636  8BA0              ;	8/9/23
1637  8BA0
1638  8BA0 2A A2 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1639  8BA3 2B            	dec hl
1640  8BA4 7E           	ld a,(hl)
1641  8BA5 A7           	and a
1642  8BA6 C8           	ret z										; Salimos si es álbum está vacío.
1643  8BA7
1644  8BA7 11 5F 88     	ld de,Variables_de_borrado+5
1645  8BAA 01 06 00     	ld bc,6
1646  8BAD ED B8        	lddr
1647  8BAF C9           	ret
1648  8BB0
1649  8BB0              ; ----------------------------------------------------------------------
1650  8BB0              ;
1651  8BB0              ;	9/9/23
1652  8BB0
1653  8BB0              Repone_datos_de_borrado_Amadeus
1654  8BB0
1655  8BB0 21 5A 88     	ld hl,Variables_de_borrado
1656  8BB3 11 AC 70     	ld de,Album_de_fotos_Amadeus
1657  8BB6 01 06 00     	ld bc,6
1658  8BB9 ED B0        	ldir
1659  8BBB
1660  8BBB EB           	ex de,hl
1661  8BBC 22 A2 88     	ld (End_Snapshot_Amadeus),hl
1662  8BBF
1663  8BBF C9           	ret
1664  8BC0
1665  8BC0              ; ----------------------------------------------------------------------
1666  8BC0              ;
1667  8BC0              ;	27/10/23
1668  8BC0              ;
1669  8BC0
1670  8BC0              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1671  8BC0              ;	_ Album_de_fotos correspondiente.
1672  8BC0
1673  8BC0              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1674  8BC0              ;	_ durante el proceso de escritura.
1675  8BC0
1676  8BC0              Repone_datos_de_borrado
1677  8BC0
1678  8BC0 F3           	di
1679  8BC1 ED 5B 9C 88  	ld de,(Stack_snapshot)
1680  8BC5 21 5A 88     	ld hl,Variables_de_borrado
1681  8BC8 01 06 00     	ld bc,6
1682  8BCB ED B0        	ldir
1683  8BCD FB           	ei
1684  8BCE
1685  8BCE EB           	ex de,hl
1686  8BCF 22 9C 88     	ld (Stack_snapshot),hl
1687  8BD2
1688  8BD2 C9           	ret
1689  8BD3
1690  8BD3              ; --------------------------------------------------------------------------------------
1691  8BD3
1692  8BD3              Pinta_Amadeus
1693  8BD3
1694  8BD3 CD 73 8A        	call Calcula_malotes_Amadeus
1695  8BD6 CD 84 94     	call Extrae_foto_Amadeus
1696  8BD9 CD 33 8A     	call Limpia_album_Amadeus
1697  8BDC
1698  8BDC C9           	ret
1699  8BDD
1700  8BDD              Pinta_entidades
1701  8BDD
1702  8BDD              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1703  8BDD
1704  8BDD 3A A4 88     	ld a,(Ctrl_3)
1705  8BE0 CB 47        	bit 0,a
1706  8BE2 C8           	ret z
1707  8BE3
1708  8BE3 CD 5B 8A     	call Calcula_numero_de_malotes
1709  8BE6 CD 02 94     	call Extrae_foto_entidades
1710  8BE9 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1711  8BEC
1712  8BEC C9           	ret
1713  8BED
1714  8BED              ; -----------------------------------------------------------------------------------
1715  8BED              ;
1716  8BED              ;	10/12/23
1717  8BED              ;
1718  8BED              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1719  8BED
1720  8BED              Actualiza_relojes
1721  8BED
1722  8BED 3A A4 88     	ld a,(Ctrl_3)
1723  8BF0 CB 47        	bit 0,a
1724  8BF2 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1725  8BF3
1726  8BF3 21 B7 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1727  8BF6 34           	inc (hl)
1728  8BF7
1729  8BF7 34           	inc (hl)
1730  8BF8 35           	dec (hl)
1731  8BF9 C0           	ret nz
1732  8BFA
1733  8BFA 21 B8 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1734  8BFD 34           	inc (hl)
1735  8BFE C9           	ret
1736  8BFF
1737  8BFF              ; ---------------------------------------------------------------
1738  8BFF              ;
1739  8BFF              ;	21/12/23
1740  8BFF
1741  8BFF              Guarda_parametros_DRAW
1742  8BFF
1743  8BFF 21 43 88     	ld hl,Bandeja_DRAW
1744  8C02 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1745  8C05 01 2A 00     	ld bc,42
1746  8C08 ED B0        	ldir
1747  8C0A C9           	ret
1748  8C0B
1749  8C0B              Recupera_parametros_DRAW
1750  8C0B
1751  8C0B 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1752  8C0E 11 43 88     	ld de,Bandeja_DRAW
1753  8C11 01 2A 00     	ld bc,42
1754  8C14 ED B0        	ldir
1755  8C16 C9           	ret
1756  8C17
1757  8C17              ; ---------------------------------------------------------------
1758  8C17
1759  8C17              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8C17              ; ******************************************************************************************************************************************************************************************
   2+ 8C17              ;
   3+ 8C17              ;   21/07/23
   4+ 8C17              ;
   5+ 8C17              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8C17              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8C17              ;
   8+ 8C17              ;
   9+ 8C17              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8C17              ;
  11+ 8C17              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8C17              ;               _ hacen las entidades hacia abajo.
  13+ 8C17              ;
  14+ 8C17              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8C17              ;
  16+ 8C17              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8C17              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8C17              ;
  19+ 8C17              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8C17              ;           _ la bala.
  21+ 8C17              ;
  22+ 8C17              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8C17              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8C17              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8C17              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8C17              ;           _ en el momento de generarse la bala)).
  27+ 8C17
  28+ 8C17              Genera_disparo
  29+ 8C17
  30+ 8C17              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8C17              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8C17              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8C17              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8C17              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8C17              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8C17              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8C17
  38+ 8C17              ; Exclusiones:
  39+ 8C17
  40+ 8C17 3A 70 88         ld a,(Vel_down)
  41+ 8C1A 47               ld b,a
  42+ 8C1B 3A B6 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8C1E B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8C1F D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8C20 3A 67 88         ld a,(Columnas)
  46+ 8C23 47               ld b,a
  47+ 8C24 3A 45 88         ld a,(Columns)
  48+ 8C27 B8               cp b
  49+ 8C28 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8C29
  51+ 8C29              ; ----- ----- -----
  52+ 8C29
  53+ 8C29 3A 66 88         ld a,(Ctrl_0)
  54+ 8C2C CB 77            bit 6,a
  55+ 8C2E 20 06            jr nz,14F
  56+ 8C30
  57+ 8C30 3A 4B 88         ld a,(Coordenada_y)
  58+ 8C33 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8C35 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8C36
  61+ 8C36 21 00 80     14 ld hl,Indice_disparo
  62+ 8C39 3A 4C 88         ld a,(CTRL_DESPLZ)
  63+ 8C3C 4F               ld c,a
  64+ 8C3D 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8C3F              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8C3F              ;                                            ""        ""       "f9", B="1"
  67+ 8C3F              ;                                            ""        ""       "fb", B="2"
  68+ 8C3F              ;                                            ""        ""       "fb", B="3"
  69+ 8C3F A7               and a
  70+ 8C40 28 10            jr z,1F
  71+ 8C42 E6 01            and 1
  72+ 8C44 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8C45
  74+ 8C45 79               ld a,c
  75+ 8C46 16 F9            ld d,$f9
  76+ 8C48 23           2 inc hl
  77+ 8C49 23               inc hl
  78+ 8C4A 04               inc b
  79+ 8C4B BA               cp d
  80+ 8C4C 28 04            jr z,1F
  81+ 8C4E 14               inc d
  82+ 8C4F 14               inc d
  83+ 8C50 18 F6            jr 2B
  84+ 8C52
  85+ 8C52 CD A7 8A     1 call Extrae_address
  86+ 8C55 E5               push hl
  87+ 8C56 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8C58 DD 21 CA 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8C5C
  90+ 8C5C              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8C5C              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8C5C
  93+ 8C5C 3A 66 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8C5F CB 77            bit 6,a
  95+ 8C61 20 04            jr nz,19F
  96+ 8C63
  97+ 8C63 AF               xor a
  98+ 8C64 32 BF 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8C67
 100+ 8C67 3A 58 88     19 ld a,(Cuad_objeto)
 101+ 8C6A FE 02            cp 2
 102+ 8C6C 38 66            jr c,3F
 103+ 8C6E 28 64            jr z,3F
 104+ 8C70
 105+ 8C70              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8C70
 107+ 8C70 E6 01            and 1
 108+ 8C72 28 30            jr z,4F
 109+ 8C74
 110+ 8C74              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8C74              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8C74              ;
 113+ 8C74              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8C74              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8C74              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8C74
 117+ 8C74 2A 46 88     	ld hl,(Posicion_actual)
 118+ 8C77
 119+ 8C77              ;   Amadeus o entidad ???.
 120+ 8C77
 121+ 8C77 3A 66 88         ld a,(Ctrl_0)
 122+ 8C7A CB 77            bit 6,a
 123+ 8C7C 28 0A            jr z,8F
 124+ 8C7E
 125+ 8C7E              ; 	Dispara Amadeus.
 126+ 8C7E
 127+ 8C7E 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8C80 CD F3 93         call PreviousScan
 129+ 8C83 CD F3 93         call PreviousScan
 130+ 8C86
 131+ 8C86              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8C86              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8C86              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8C86              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8C86
 136+ 8C86 18 11            jr 10F
 137+ 8C88
 138+ 8C88              ; 	Dispara Entidad.
 139+ 8C88
 140+ 8C88 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8C8B              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8C8B
 143+ 8C8B              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8C8B              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8C8B
 146+ 8C8B C5               push bc
 147+ 8C8C 06 10            ld b,16
 148+ 8C8E CD E4 93     9 call NextScan
 149+ 8C91 10 FB            djnz 9B
 150+ 8C93 C1               pop bc
 151+ 8C94 CD FE 8C         call Ajusta_disparo_parte_izquierda
 152+ 8C97 18 06            jr 17F
 153+ 8C99
 154+ 8C99              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8C99              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8C99              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8C99              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8C99
 159+ 8C99 CD FE 8C     10 call Ajusta_disparo_parte_izquierda
 160+ 8C9C CD 73 8D         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8C9F              ;                                                      ; _al generar el disparo.
 162+ 8C9F
 163+ 8C9F              ; 	LLegados a este punto tendremos:
 164+ 8C9F              ;
 165+ 8C9F              ;       Puntero_objeto_disparo en IY.
 166+ 8C9F              ;       Rutinas_de_impresion en IX.
 167+ 8C9F              ;       Puntero_de_impresion en HL.
 168+ 8C9F              ;       Impacto/Dirección en BC.
 169+ 8C9F
 170+ 8C9F CD 06 8D     17 call Almacena_disparo
 171+ 8CA2 18 52            jr 6F                                             ; RET.
 172+ 8CA4
 173+ 8CA4              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8CA4              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8CA4              ;
 176+ 8CA4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8CA4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8CA4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8CA4
 180+ 8CA4 2A 46 88     4 ld hl,(Posicion_actual)
 181+ 8CA7
 182+ 8CA7              ;   Amadeus o entidad ???.
 183+ 8CA7
 184+ 8CA7 3A 66 88         ld a,(Ctrl_0)
 185+ 8CAA CB 77            bit 6,a
 186+ 8CAC 28 0A            jr z,11F
 187+ 8CAE
 188+ 8CAE              ; 	Dispara Amadeus.
 189+ 8CAE
 190+ 8CAE 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8CB0 CD F3 93         call PreviousScan
 192+ 8CB3 CD F3 93         call PreviousScan
 193+ 8CB6
 194+ 8CB6              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8CB6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8CB6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8CB6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8CB6
 199+ 8CB6 18 11            jr 13F
 200+ 8CB8
 201+ 8CB8              ; 	Dispara Entidad.
 202+ 8CB8
 203+ 8CB8 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8CBB              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8CBB
 206+ 8CBB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8CBB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8CBB
 209+ 8CBB C5               push bc
 210+ 8CBC 06 10            ld b,16
 211+ 8CBE CD E4 93     12 call NextScan
 212+ 8CC1 10 FB            djnz 12B
 213+ 8CC3 C1               pop bc
 214+ 8CC4
 215+ 8CC4 CD F7 8C         call Ajusta_disparo_parte_derecha
 216+ 8CC7 18 06            jr 18F
 217+ 8CC9
 218+ 8CC9              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8CC9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8CC9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8CC9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8CC9
 223+ 8CC9 CD F7 8C     13 call Ajusta_disparo_parte_derecha
 224+ 8CCC CD 73 8D         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8CCF              ;                                                       ; _al generar el disparo.
 226+ 8CCF
 227+ 8CCF              ; LLegados a este punto tendremos:
 228+ 8CCF              ;
 229+ 8CCF              ;       Puntero_objeto_disparo en IY.
 230+ 8CCF              ;       Rutinas_de_impresion en IX.
 231+ 8CCF              ;       Puntero_de_impresion en HL.
 232+ 8CCF              ;       Impacto/Dirección en BC.
 233+ 8CCF
 234+ 8CCF CD 06 8D     18 call Almacena_disparo
 235+ 8CD2 18 22            jr 6F                                               ; RET.
 236+ 8CD4
 237+ 8CD4              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8CD4
 239+ 8CD4 28 11        3 jr z,5F
 240+ 8CD6
 241+ 8CD6              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8CD6              ;
 243+ 8CD6              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8CD6              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8CD6              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8CD6              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8CD6
 248+ 8CD6              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8CD6              ;	   ""        ""       "f9", B="1"
 250+ 8CD6              ;	   ""        ""       "fb", B="2"
 251+ 8CD6              ; 	   ""        ""       "fb", B="3"
 252+ 8CD6
 253+ 8CD6 2A 46 88     	ld hl,(Posicion_actual)
 254+ 8CD9 CD E4 93     	call NextScan
 255+ 8CDC
 256+ 8CDC              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8CDC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8CDC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8CDC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8CDC
 261+ 8CDC CD FE 8C         call Ajusta_disparo_parte_izquierda
 262+ 8CDF
 263+ 8CDF              ; 	No se produce impacto. B="$80"
 264+ 8CDF              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8CDF
 266+ 8CDF 01 80 80         ld bc,$8080
 267+ 8CE2
 268+ 8CE2              ; 	LLegados a este punto tendremos:
 269+ 8CE2              ;
 270+ 8CE2              ;       Puntero_objeto_disparo en IY.
 271+ 8CE2              ;       Rutinas_de_impresion en IX.
 272+ 8CE2              ;       Puntero_de_impresion en HL.
 273+ 8CE2              ;       Impacto/Dirección en BC.
 274+ 8CE2
 275+ 8CE2 CD 06 8D         call Almacena_disparo
 276+ 8CE5 18 0F            jr 6F                                           ; RET.
 277+ 8CE7
 278+ 8CE7              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8CE7              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8CE7              ;
 281+ 8CE7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8CE7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8CE7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8CE7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8CE7
 286+ 8CE7 2A 46 88     5 ld hl,(Posicion_actual)
 287+ 8CEA CD E4 93     	call NextScan
 288+ 8CED
 289+ 8CED              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8CED              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8CED              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8CED              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8CED
 294+ 8CED CD F7 8C         call Ajusta_disparo_parte_derecha
 295+ 8CF0
 296+ 8CF0              ; 	No se produce impacto. B="$80"
 297+ 8CF0              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8CF0
 299+ 8CF0 01 80 80     15 ld bc,$8080
 300+ 8CF3
 301+ 8CF3              ; 	LLegados a este punto tendremos:
 302+ 8CF3              ;
 303+ 8CF3              ;       Puntero_objeto_disparo en IY.
 304+ 8CF3              ;       Rutinas_de_impresion en IX.
 305+ 8CF3              ;       Puntero_de_impresion en HL.
 306+ 8CF3              ;       Impacto/Dirección en BC.
 307+ 8CF3
 308+ 8CF3 CD 06 8D         call Almacena_disparo
 309+ 8CF6
 310+ 8CF6 C9           6 ret
 311+ 8CF7
 312+ 8CF7              ; ----------------------------------------------------------------
 313+ 8CF7              ;
 314+ 8CF7              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8CF7              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8CF7              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8CF7
 318+ 8CF7 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8CF8 FE 02            cp 2
 320+ 8CFA 38 01            jr c,1F
 321+ 8CFC 23               inc hl
 322+ 8CFD C9           1 ret
 323+ 8CFE
 324+ 8CFE 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8CFF FE 01        	cp 1
 326+ 8D01 20 01        	jr nz,1F
 327+ 8D03 2B           	dec hl
 328+ 8D04 2B           1 dec hl
 329+ 8D05 C9               ret
 330+ 8D06
 331+ 8D06              ; ----------------------------------------------------------------
 332+ 8D06              ;
 333+ 8D06              ;   25/02/23
 334+ 8D06              ;
 335+ 8D06              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8D06              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8D06              ;
 338+ 8D06              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8D06              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8D06
 341+ 8D06              Almacena_disparo
 342+ 8D06
 343+ 8D06 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8D07 F1               pop af
 345+ 8D08 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8D09
 347+ 8D09 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8D0A E6 01            and 1
 349+ 8D0C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8D0E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8D0E              ; 	Dispara AMADEUS.
 352+ 8D0E
 353+ 8D0E              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8D0E              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8D0E              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8D0E              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8D0E
 358+ 8D0E C5               push bc
 359+ 8D0F 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8D12 2A A9 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8D15 A7               and a
 362+ 8D16 ED 42            sbc hl,bc
 363+ 8D18 CC 2C 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8D1B C1               pop bc
 365+ 8D1C 28 54            jr z,4F
 366+ 8D1E
 367+ 8D1E 2A A9 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8D21 23               inc hl
 369+ 8D22 23               inc hl
 370+ 8D23 22 A9 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8D26              ;                                                   ; _ Disparo_(+1).
 372+ 8D26 18 18            jr 2F
 373+ 8D28
 374+ 8D28              ; Dispara una entidad.
 375+ 8D28
 376+ 8D28 C5           1 push bc
 377+ 8D29 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8D2C 2A A7 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8D2F A7               and a
 380+ 8D30 ED 42            sbc hl,bc
 381+ 8D32 CC 25 8A         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8D35 C1               pop bc
 383+ 8D36 28 3A            jr z,4F
 384+ 8D38
 385+ 8D38 2A A7 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8D3B 23               inc hl
 387+ 8D3C 23               inc hl
 388+ 8D3D 22 A7 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8D40              ;                                                   ; _ Disparo_(+1).
 390+ 8D40 CD A7 8A     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8D43              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8D43              ;
 393+ 8D43              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8D43              ;                                                     Rutinas_de_impresion en IX.
 395+ 8D43              ;                                                     Puntero_de_impresion en HL.
 396+ 8D43              ;                                                     Impacto/Dirección en BC.
 397+ 8D43
 398+ 8D43 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8D44 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8D45 23               inc hl                                          ; _ al siguiente.
 401+ 8D46 A7               and a
 402+ 8D47 20 C0            jr nz,3B
 403+ 8D49
 404+ 8D49 08               ex af,af
 405+ 8D4A ED 73 96 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8D4E F9               ld sp,hl
 407+ 8D4F
 408+ 8D4F DD E5            push ix                                         ; Rutina de impresión.
 409+ 8D51 F5               push af                                         ; Puntero de impresión.
 410+ 8D52 FD E5            push iy                                         ; Puntero objeto.
 411+ 8D54 C5               push bc                                         ; Control.
 412+ 8D55
 413+ 8D55 ED 7B 96 88      ld sp,(Stack)
 414+ 8D59
 415+ 8D59              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8D59
 417+ 8D59 21 85 88     	ld hl,Ctrl_1
 418+ 8D5C CB C6        	set 0,(hl)
 419+ 8D5E
 420+ 8D5E DD E5        	push ix
 421+ 8D60 E1               pop hl
 422+ 8D61 F5               push af
 423+ 8D62 DD E1            pop ix
 424+ 8D64
 425+ 8D64 CD 16 71     	call Guarda_foto_registros
 426+ 8D67
 427+ 8D67 21 85 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8D6A CB 86        	res 0,(hl)
 429+ 8D6C
 430+ 8D6C              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8D6C              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8D6C
 433+ 8D6C CD 2C 8A         call Inicia_Puntero_Disparo_Amadeus
 434+ 8D6F CD 25 8A         call Inicia_Puntero_Disparo_Entidades
 435+ 8D72
 436+ 8D72 C9           4 ret
 437+ 8D73
 438+ 8D73              ; ----------------------------------------------------------------
 439+ 8D73              ;
 440+ 8D73              ;   4/3/23
 441+ 8D73              ;
 442+ 8D73              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8D73              ;   _ al generarse el disparo.
 444+ 8D73              ;
 445+ 8D73              ;       "$80" ..... No se produce colisión.
 446+ 8D73              ;       "$81" ..... Se produce colisión.
 447+ 8D73              ;
 448+ 8D73              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8D73              ;         _ que forman el disparo.
 450+ 8D73
 451+ 8D73
 452+ 8D73              Comprueba_Colision
 453+ 8D73
 454+ 8D73              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8D73
 456+ 8D73 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8D75 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8D76
 459+ 8D76 CD AC 8D         call Modifica_H_Velocidad_disparo
 460+ 8D79
 461+ 8D79 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8D7A FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8D7C 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8D7E
 465+ 8D7E 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8D80 CD 9C 8D         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8D83
 468+ 8D83 7B               ld a,e
 469+ 8D84 E6 01            and 1
 470+ 8D86 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8D88              ;                                                  ; _ para activar IMPACTO.
 472+ 8D88 E1               pop hl
 473+ 8D89 E5               push hl
 474+ 8D8A CD E4 93         call NextScan
 475+ 8D8D
 476+ 8D8D 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8D8E FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8D90 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8D92              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8D92 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8D94 CD 9C 8D         call Bucle_2
 482+ 8D97
 483+ 8D97 43           1 ld b,e
 484+ 8D98 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8D99 FD E1            pop iy
 486+ 8D9B C9               ret
 487+ 8D9C
 488+ 8D9C              ; ---------- ----------
 489+ 8D9C
 490+ 8D9C 06 02        Bucle_2 ld b,2
 491+ 8D9E FD 7E 00     2 ld a,(iy)
 492+ 8DA1 A6               and (hl)
 493+ 8DA2 28 02            jr z,1F
 494+ 8DA4 1E 81            ld e,$81
 495+ 8DA6 23           1 inc hl
 496+ 8DA7 FD 23            inc iy
 497+ 8DA9 10 F3            djnz 2B
 498+ 8DAB C9               ret
 499+ 8DAC
 500+ 8DAC              ; ---------- ----------
 501+ 8DAC              ;
 502+ 8DAC              ;   21/7/23
 503+ 8DAC
 504+ 8DAC              Modifica_H_Velocidad_disparo
 505+ 8DAC
 506+ 8DAC 3A B6 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8DAF FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8DB1 D0               ret nc                                         ; _ incrementamos H.
 509+ 8DB2 24               inc h
 510+ 8DB3
 511+ 8DB3 C9               ret
 512+ 8DB4
 513+ 8DB4              ; -------------------------------------------------------------------------------------------------------------
 514+ 8DB4              ;
 515+ 8DB4              ;   04/12/23
 516+ 8DB4              ;
 517+ 8DB4              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8DB4              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8DB4              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8DB4              ;
 521+ 8DB4              ;   MODIFICA: HL,DE,B y A.
 522+ 8DB4
 523+ 8DB4              Genera_coordenadas_X
 524+ 8DB4
 525+ 8DB4              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8DB4              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8DB4
 528+ 8DB4              ;   Limpiamos almacenes.
 529+ 8DB4
 530+ 8DB4 CD E5 8D         call Limpia_Coordenadas_X
 531+ 8DB7
 532+ 8DB7              ;   Almacenamos coordenadas X.
 533+ 8DB7
 534+ 8DB7              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8DB7
 536+ 8DB7 2A 60 88         ld hl,(Puntero_de_impresion)
 537+ 8DBA 11 B3 88         ld de,Coordenadas_X_Entidad
 538+ 8DBD 06 02            ld b,2
 539+ 8DBF
 540+ 8DBF 3A 4C 88         ld a,(CTRL_DESPLZ)
 541+ 8DC2 A7               and a
 542+ 8DC3 28 01            jr z,1F
 543+ 8DC5 04               inc b
 544+ 8DC6
 545+ 8DC6 CD DC 8D     1 call Guarda_coordenadas_X
 546+ 8DC9
 547+ 8DC9              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8DC9
 549+ 8DC9 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8DCC 11 B0 88         ld de,Coordenadas_X_Amadeus
 551+ 8DCF 06 02            ld b,2
 552+ 8DD1
 553+ 8DD1 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8DD4 A7               and a
 555+ 8DD5 28 01            jr z,2F
 556+ 8DD7 04               inc b
 557+ 8DD8
 558+ 8DD8 CD DC 8D     2 call Guarda_coordenadas_X
 559+ 8DDB
 560+ 8DDB              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8DDB
 562+ 8DDB C9               ret
 563+ 8DDC
 564+ 8DDC              ; ----- ----- ----- ----- -----
 565+ 8DDC
 566+ 8DDC 7D           Guarda_coordenadas_X  ld a,l
 567+ 8DDD E6 1F            and $1f
 568+ 8DDF 12           1 ld (de),a
 569+ 8DE0 3C               inc a
 570+ 8DE1 13               inc de
 571+ 8DE2 10 FB            djnz 1B
 572+ 8DE4 C9               ret
 573+ 8DE5
 574+ 8DE5 AF           Limpia_Coordenadas_X xor a
 575+ 8DE6 06 06            ld b,6
 576+ 8DE8 21 B0 88         ld hl,Coordenadas_X_Amadeus
 577+ 8DEB 77           1 ld (hl),a
 578+ 8DEC 23               inc hl
 579+ 8DED 10 FC            djnz 1B
 580+ 8DEF C9               ret
 581+ 8DF0
 582+ 8DF0              ; ----- ----- ----- ----- -----
 583+ 8DF0
 584+ 8DF0              Compara_coordenadas_X
 585+ 8DF0
 586+ 8DF0 06 03            ld b,3
 587+ 8DF2 11 B5 88         ld de,Coordenadas_X_Entidad+2
 588+ 8DF5
 589+ 8DF5 1A               ld a,(de)
 590+ 8DF6 A7               and a
 591+ 8DF7 20 01            jr nz,2F
 592+ 8DF9 05               dec b
 593+ 8DFA
 594+ 8DFA 1B           2 dec de
 595+ 8DFB 1B               dec de
 596+ 8DFC 21 B0 88         ld hl,Coordenadas_X_Amadeus
 597+ 8DFF
 598+ 8DFF D5           1 push de
 599+ 8E00 E5               push hl
 600+ 8E01 C5               push bc
 601+ 8E02
 602+ 8E02 CD 0C 8E         call Comparando
 603+ 8E05
 604+ 8E05 C1               pop bc
 605+ 8E06 E1               pop hl
 606+ 8E07 D1               pop de
 607+ 8E08
 608+ 8E08 13               inc de
 609+ 8E09 10 F4            djnz 1B
 610+ 8E0B
 611+ 8E0B C9               ret
 612+ 8E0C
 613+ 8E0C              ; ----- ----- ----- ----- -----
 614+ 8E0C              ;
 615+ 8E0C              ;   4/12/23
 616+ 8E0C              ;
 617+ 8E0C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8E0C
 619+ 8E0C 06 03        Comparando ld b,3
 620+ 8E0E 1A               ld a,(de)
 621+ 8E0F 4E           2 ld c,(hl)
 622+ 8E10 B9               cp c
 623+ 8E11 28 04            jr z,1F
 624+ 8E13 23               inc hl
 625+ 8E14 10 F9            djnz 2B
 626+ 8E16 C9               ret
 627+ 8E17
 628+ 8E17 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8E19 32 59 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8E1C 21 AB 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8E1F CB D6            set 2,(hl)
 632+ 8E21 C9               ret
 633+ 8E22
 634+ 8E22              ; -----------------------------------------------------------------------
 635+ 8E22              ;
 636+ 8E22              ;   7/12/23
 637+ 8E22              ;
 638+ 8E22
 639+ 8E22              Detecta_colision_nave_entidad
 640+ 8E22
 641+ 8E22              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8E22
 643+ 8E22 FD 2A 48 88      ld iy,(Puntero_objeto)
 644+ 8E26 2A 60 88         ld hl,(Puntero_de_impresion)
 645+ 8E29
 646+ 8E29 E5               push hl
 647+ 8E2A
 648+ 8E2A              ; ----- ----- -----
 649+ 8E2A 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8E2C 06 0A            ld b,10
 651+ 8E2E CD 5E 8E     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8E31 7B               ld a,e
 653+ 8E32 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8E34 38 0E            jr c,3F
 655+ 8E36
 656+ 8E36              ; LLegados a este punto:
 657+ 8E36              ;
 658+ 8E36              ;   HAY COLISIÓN !!!!!.
 659+ 8E36              ;
 660+ 8E36              ;   .db (Impacto) de Amadeus a "1".
 661+ 8E36              ;   SET el bit3 de (Impacto2).
 662+ 8E36              ;
 663+ 8E36              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8E36
 665+ 8E36 21 59 88         ld hl,Impacto
 666+ 8E39 36 01            ld (hl),1
 667+ 8E3B 21 AB 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8E3E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8E40 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8E42
 671+ 8E42 18 18            jr 1F
 672+ 8E44
 673+ 8E44              ; -----
 674+ 8E44
 675+ 8E44 E1           3 pop hl
 676+ 8E45 CD E4 93         call NextScan
 677+ 8E48 E5               push hl
 678+ 8E49 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8E4A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8E4C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8E4E 30 0C            jr nc,1F
 682+ 8E50              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8E50 10 DC            djnz 2B
 684+ 8E52
 685+ 8E52              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8E52
 687+ 8E52              ; LLegados a este punto:
 688+ 8E52              ;
 689+ 8E52              ;   NO HAY COLISIÓN !!!!!.
 690+ 8E52              ;
 691+ 8E52              ;   .db (Impacto) de Amadeus a "0".
 692+ 8E52              ;   RES el bit2 de (Impacto2).
 693+ 8E52              ;
 694+ 8E52              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8E52              ;   Lo colocamos a "0".
 696+ 8E52
 697+ 8E52 21 AB 88         ld hl,Impacto2
 698+ 8E55 CB 96            res 2,(hl)
 699+ 8E57 2A AC 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8E5A 36 00            ld (hl),0
 701+ 8E5C
 702+ 8E5C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8E5D C9               ret
 704+ 8E5E
 705+ 8E5E               ; ---------- ----------
 706+ 8E5E
 707+ 8E5E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8E5F 3A 45 88         ld a,(Columns)
 709+ 8E62 47               ld b,a
 710+ 8E63 FD 7E 00     2 ld a,(iy)
 711+ 8E66 BE               cp (hl)
 712+ 8E67 28 01            jr z,1F
 713+ 8E69
 714+ 8E69 1C               inc e
 715+ 8E6A
 716+ 8E6A 23           1 inc hl
 717+ 8E6B FD 23            inc iy
 718+ 8E6D 10 F4            djnz 2B
 719+ 8E6F C1               pop bc
 720+ 8E70 C9               ret
 721+ 8E71
 722+ 8E71              ; -------------------------------------------------------------------------------------------------------------
 723+ 8E71              ;
 724+ 8E71              ;   13/03/23
 725+ 8E71              ;
 726+ 8E71              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8E71              ;
 728+ 8E71              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8E71
 730+ 8E71 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8E74 7E               ld a,(hl)
 732+ 8E75 A7               and a
 733+ 8E76 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8E77
 735+ 8E77 44               ld b,h
 736+ 8E78 4D               ld c,l
 737+ 8E79 2A 9E 88         ld hl,(Stack_snapshot_disparos)
 738+ 8E7C E5               push hl
 739+ 8E7D A7               and a
 740+ 8E7E ED 42            sbc hl,bc
 741+ 8E80 E5               push hl
 742+ 8E81 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8E82
 744+ 8E82 E1               pop hl
 745+ 8E83 54               ld d,h
 746+ 8E84 5D               ld e,l
 747+ 8E85 1B               dec de
 748+ 8E86 ED B8            lddr                                                ; Limpiamos.
 749+ 8E88
 750+ 8E88 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8E8B 22 9E 88         ld (Stack_snapshot_disparos),hl
 752+ 8E8E
 753+ 8E8E C9               ret
 754+ 8E8F
 755+ 8E8F              ; -------------------------------------------------------------------------------------------------------------
 756+ 8E8F              ;
 757+ 8E8F              ;   18/07/23
 758+ 8E8F              ;
 759+ 8E8F
 760+ 8E8F              Motor_de_disparos
 761+ 8E8F
 762+ 8E8F              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8E8F
 764+ 8E8F 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8E92 2A A9 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8E95
 767+ 8E95 CD A7 8A     2 call Extrae_address
 768+ 8E98 7E               ld a,(hl)
 769+ 8E99 A7               and a
 770+ 8E9A 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8E9C
 772+ 8E9C              ; ----- ----- ----- ----- ----- -----
 773+ 8E9C
 774+ 8E9C C5               push bc
 775+ 8E9D CD 61 8F         call foto_disparo_a_borrar
 776+ 8EA0
 777+ 8EA0              ; Existe colisión con este disparo???
 778+ 8EA0
 779+ 8EA0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8EA1 7E               ld a,(hl)
 781+ 8EA2 2B               dec hl
 782+ 8EA3 E6 01            and 1
 783+ 8EA5 28 1D            jr z,9F
 784+ 8EA7
 785+ 8EA7              ;   En este punto:
 786+ 8EA7              ;
 787+ 8EA7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8EA7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8EA7              ;   _con la entidad).
 790+ 8EA7              ;
 791+ 8EA7              ;   Disparo_2A defw 0                                ; Control.
 792+ 8EA7              ;    defw 0                                          ; Puntero objeto.
 793+ 8EA7              ;    defw 0                                          ; Puntero de impresión.
 794+ 8EA7              ;    defw 0                                          ; Rutina de impresión.
 795+ 8EA7
 796+ 8EA7 E5               push hl
 797+ 8EA8
 798+ 8EA8 06 04            ld b,4
 799+ 8EAA 23           19 inc hl
 800+ 8EAB 10 FD            djnz 19B
 801+ 8EAD
 802+ 8EAD CD A7 8A         call Extrae_address
 803+ 8EB0 CD BB 9A         call Genera_coordenadas_disparo
 804+ 8EB3
 805+ 8EB3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8EB3
 807+ 8EB3 21 AE 88         ld hl,Coordenadas_disparo_certero
 808+ 8EB6 72               ld (hl),d
 809+ 8EB7 23               inc hl
 810+ 8EB8 73               ld (hl),e
 811+ 8EB9
 812+ 8EB9              ; Elimino el disparo de la base de datos.
 813+ 8EB9
 814+ 8EB9 E1               pop hl
 815+ 8EBA CD E0 8F         call Elimina_disparo_de_base_de_datos
 816+ 8EBD 21 AB 88         ld hl,Impacto2
 817+ 8EC0 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8EC2
 819+ 8EC2 18 06            jr 11F
 820+ 8EC4
 821+ 8EC4 CD 8A 8F     9 call Mueve_disparo
 822+ 8EC7 CD 61 8F         call foto_disparo_a_borrar
 823+ 8ECA
 824+ 8ECA C1           11 pop bc
 825+ 8ECB 18 04            jr 7F
 826+ 8ECD
 827+ 8ECD              ; ----- ----- ----- ----- ----- -----
 828+ 8ECD
 829+ 8ECD ED 42        1 sbc hl,bc
 830+ 8ECF 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8ED1
 832+ 8ED1 2A A9 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8ED4 23               inc hl
 834+ 8ED5 23               inc hl
 835+ 8ED6 22 A9 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8ED9 18 BA            jr 2B
 837+ 8EDB
 838+ 8EDB CD 2C 8A     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8EDE              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8EDE
 841+ 8EDE              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8EDE
 843+ 8EDE 01 6E 85         ld bc,Disparo_11
 844+ 8EE1 2A A7 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8EE4
 846+ 8EE4 CD A7 8A     5 call Extrae_address
 847+ 8EE7 7E               ld a,(hl)
 848+ 8EE8 A7               and a
 849+ 8EE9 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8EEB
 851+ 8EEB              ; ----- ----- ----- ----- ----- -----
 852+ 8EEB
 853+ 8EEB C5               push bc
 854+ 8EEC CD 61 8F         call foto_disparo_a_borrar
 855+ 8EEF
 856+ 8EEF              ; Existe colisión con este disparo???
 857+ 8EEF
 858+ 8EEF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8EF0 7E               ld a,(hl)
 860+ 8EF1 2B               dec hl
 861+ 8EF2 E6 01            and 1
 862+ 8EF4 28 4D            jr z,10F
 863+ 8EF6
 864+ 8EF6              ;! La colisión se produce con Amadeus???
 865+ 8EF6              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8EF6
 867+ 8EF6 E5               push hl
 868+ 8EF7
 869+ 8EF7 06 04            ld b,4
 870+ 8EF9 23           16 inc hl
 871+ 8EFA 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8EFC
 873+ 8EFC CD A7 8A         call Extrae_address
 874+ 8EFF CD BB 9A         call Genera_coordenadas_disparo
 875+ 8F02
 876+ 8F02 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8F03 FE 16            cp $16
 878+ 8F05 38 2A            jr c,15F
 879+ 8F07
 880+ 8F07
 881+ 8F07              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8F07
 883+ 8F07 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8F08
 885+ 8F08              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8F08
 887+ 8F08 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 8F0B
 889+ 8F0B              ; Coordenada X de Amadeus en D.
 890+ 8F0B
 891+ 8F0B 7D               ld a,l
 892+ 8F0C E6 1F            and $1F
 893+ 8F0E 57               ld d,a
 894+ 8F0F
 895+ 8F0F 21 8A 85         ld hl,Amadeus_db+8
 896+ 8F12 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 8F13
 898+ 8F13 21 B0 88         ld hl,Coordenadas_X_Amadeus
 899+ 8F16 CD DC 8D         call Guarda_coordenadas_X
 900+ 8F19
 901+ 8F19 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 8F1A
 903+ 8F1A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 8F1A
 905+ 8F1A 06 02            ld b,2
 906+ 8F1C C5           20 push bc
 907+ 8F1D
 908+ 8F1D 06 03            ld b,3
 909+ 8F1F 21 B0 88         ld hl,Coordenadas_X_Amadeus
 910+ 8F22 7E           18 ld a,(hl)
 911+ 8F23 BA               cp d
 912+ 8F24 20 04            jr nz,17F
 913+ 8F26
 914+ 8F26              ;! Colisión Amadeus !!!!!!!!!!
 915+ 8F26
 916+ 8F26 C1               pop bc
 917+ 8F27 E1               pop hl
 918+ 8F28 18 0D            jr 14F
 919+ 8F2A
 920+ 8F2A 23           17 inc hl
 921+ 8F2B 10 F5            djnz 18B
 922+ 8F2D
 923+ 8F2D 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 8F2E
 925+ 8F2E C1               pop bc
 926+ 8F2F 10 EB            djnz 20B
 927+ 8F31
 928+ 8F31
 929+ 8F31              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 8F31              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 8F31
 932+ 8F31 E1           15 pop hl
 933+ 8F32 23               inc hl
 934+ 8F33 35               dec (hl)
 935+ 8F34 2B               dec hl
 936+ 8F35 18 0C            jr 10F
 937+ 8F37
 938+ 8F37              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 8F37              ; _ almacén de coordenadas_X de Amadeus.
 940+ 8F37
 941+ 8F37 E5           14 push hl
 942+ 8F38 CD E0 8F         call Elimina_disparo_de_base_de_datos
 943+ 8F3B 21 AB 88         ld hl,Impacto2
 944+ 8F3E CB CE            set 1,(hl)
 945+ 8F40 E1               pop hl
 946+ 8F41 18 06            jr 12F
 947+ 8F43
 948+ 8F43              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 8F43
 950+ 8F43 CD 8A 8F     10 call Mueve_disparo
 951+ 8F46 CD 61 8F         call foto_disparo_a_borrar
 952+ 8F49 C1           12 pop bc
 953+ 8F4A
 954+ 8F4A 18 04            jr 8F
 955+ 8F4C
 956+ 8F4C              ; ----- ----- ----- ----- ----- -----
 957+ 8F4C
 958+ 8F4C ED 42        4 sbc hl,bc
 959+ 8F4E 28 0A            jr z,6F
 960+ 8F50
 961+ 8F50 2A A7 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 8F53 23               inc hl
 963+ 8F54 23               inc hl
 964+ 8F55 22 A7 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 8F58 18 8A            jr 5B
 966+ 8F5A
 967+ 8F5A CD 25 8A     6 call Inicia_Puntero_Disparo_Entidades
 968+ 8F5D CD E5 8D         call Limpia_Coordenadas_X
 969+ 8F60 C9               ret
 970+ 8F61
 971+ 8F61              ; ------------------------------------------------------------------
 972+ 8F61
 973+ 8F61              foto_disparo_a_borrar
 974+ 8F61
 975+ 8F61 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 8F62 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 8F63 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 8F64
 979+ 8F64 E5               push hl
 980+ 8F65 23               inc hl
 981+ 8F66 23               inc hl
 982+ 8F67 ED 73 96 88      ld (Stack),sp
 983+ 8F6B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 8F6C FD E1            pop iy
 985+ 8F6E DD E1            pop ix
 986+ 8F70 E1               pop hl
 987+ 8F71 ED 7B 96 88      ld sp,(Stack)
 988+ 8F75 3A 85 88         ld a,(Ctrl_1)
 989+ 8F78 CB C7            set 0,a
 990+ 8F7A 32 85 88         ld (Ctrl_1),a
 991+ 8F7D CD 16 71         call Guarda_foto_registros
 992+ 8F80 3A 85 88         ld a,(Ctrl_1)
 993+ 8F83 CB 87            res 0,a
 994+ 8F85 32 85 88         ld (Ctrl_1),a
 995+ 8F88 E1               pop hl
 996+ 8F89 C9               ret
 997+ 8F8A
 998+ 8F8A              ;---------------------------------------------------
 999+ 8F8A              ;
1000+ 8F8A              ;   18/07/23
1001+ 8F8A              ;
1002+ 8F8A
1003+ 8F8A              Mueve_disparo
1004+ 8F8A
1005+ 8F8A              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 8F8A              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 8F8A              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 8F8A
1009+ 8F8A E5               push hl
1010+ 8F8B
1011+ 8F8B 7E               ld a,(hl)
1012+ 8F8C
1013+ 8F8C 06 04            ld b,4
1014+ 8F8E 23           1 inc hl
1015+ 8F8F 10 FD            djnz 1B
1016+ 8F91
1017+ 8F91              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 8F91
1019+ 8F91 CD A7 8A         call Extrae_address
1020+ 8F94
1021+ 8F94 E6 01            and 1
1022+ 8F96 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 8F98
1024+ 8F98              ; Disparo hacia arriba, (Amadeus).
1025+ 8F98
1026+ 8F98              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 8F98              ; _ de la dificultad.
1028+ 8F98
1029+ 8F98 CD F3 93         call PreviousScan
1030+ 8F9B CD F3 93         call PreviousScan
1031+ 8F9E CD F3 93         call PreviousScan
1032+ 8FA1 CD F3 93         call PreviousScan
1033+ 8FA4
1034+ 8FA4              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 8FA4
1036+ 8FA4 7C               ld a,h
1037+ 8FA5 FE 40            cp $40
1038+ 8FA7 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 8FA9
1040+ 8FA9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 8FA9
1042+ 8FA9 EB               ex de,hl
1043+ 8FAA 06 04            ld b,4
1044+ 8FAC 2B           6 dec hl
1045+ 8FAD 10 FD            djnz 6B
1046+ 8FAF
1047+ 8FAF CD E0 8F         call Elimina_disparo_de_base_de_datos
1048+ 8FB2 E1               pop hl
1049+ 8FB3 18 10            jr 7F
1050+ 8FB5
1051+ 8FB5              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 8FB5              ; HL contiene el puntero de impresión del disparo.
1053+ 8FB5              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 8FB5
1055+ 8FB5 D5           3 push de
1056+ 8FB6 C5               push bc
1057+ 8FB7
1058+ 8FB7 CD 73 8D         call Comprueba_Colision
1059+ 8FBA
1060+ 8FBA              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 8FBA
1062+ 8FBA 78               ld a,b
1063+ 8FBB
1064+ 8FBB C1               pop bc
1065+ 8FBC D1               pop de
1066+ 8FBD
1067+ 8FBD EB               ex de,hl
1068+ 8FBE
1069+ 8FBE 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 8FBF 23               inc hl                                      ; _ movimiento.
1071+ 8FC0 72               ld (hl),d
1072+ 8FC1
1073+ 8FC1 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 8FC2
1075+ 8FC2 23               inc hl                                      ; _ en curso.
1076+ 8FC3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 8FC4 2B               dec hl
1078+ 8FC5
1079+ 8FC5 C9           7 ret
1080+ 8FC6
1081+ 8FC6              ; Disparo hacia abajo, (Entidad).
1082+ 8FC6
1083+ 8FC6 3A B6 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 8FC9 47               ld b,a
1085+ 8FCA
1086+ 8FCA CD E4 93     4 call NextScan
1087+ 8FCD 10 FB            djnz 4B
1088+ 8FCF
1089+ 8FCF              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 8FCF
1091+ 8FCF 7C               ld a,h
1092+ 8FD0 FE 58            cp $58
1093+ 8FD2 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 8FD4
1095+ 8FD4 EB               ex de,hl
1096+ 8FD5 06 04            ld b,4
1097+ 8FD7 2B           5 dec hl
1098+ 8FD8 10 FD            djnz 5B
1099+ 8FDA
1100+ 8FDA CD E0 8F         call Elimina_disparo_de_base_de_datos
1101+ 8FDD E1               pop hl
1102+ 8FDE 18 E5            jr 7B
1103+ 8FE0
1104+ 8FE0              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 8FE0
1106+ 8FE0 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 8FE3 AF               xor a
1108+ 8FE4 77               ld (hl),a
1109+ 8FE5 54               ld d,h
1110+ 8FE6 5D               ld e,l
1111+ 8FE7 13               inc de
1112+ 8FE8 ED B0            ldir
1113+ 8FEA C9               ret
1114+ 8FEB
1115+ 8FEB              ; -----------------------------------------------------------------
1116+ 8FEB              ;
1117+ 8FEB              ;   7/12/23
1118+ 8FEB              ;
1119+ 8FEB
1120+ 8FEB 3A AB 88     Selector_de_impactos ld a,(Impacto2)
1121+ 8FEE A7               and a
1122+ 8FEF C8               ret z
1123+ 8FF0
1124+ 8FF0              ; Analizamos si hay impacto por disparos.
1125+ 8FF0
1126+ 8FF0              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 8FF0
1128+ 8FF0 CB 4F            bit 1,a
1129+ 8FF2 28 07            jr z,1F
1130+ 8FF4
1131+ 8FF4 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 8FF7 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 8FF9 18 08            jr 2F
1134+ 8FFB
1135+ 8FFB CB 47        1 bit 0,a
1136+ 8FFD C8               ret z
1137+ 8FFE
1138+ 8FFE              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 8FFE
1140+ 8FFE 21 85 88         ld hl,Ctrl_1
1141+ 9001 CB D6            set 2,(hl)
1142+ 9003
1143+ 9003 C9           2 ret
1144+ 9004
1145+ 9004              ; -----------------------------------------------------------------
1146+ 9004              ;
1147+ 9004              ;   25/04/23
1148+ 9004              ;
1149+ 9004
1150+ 9004              Determina_resultado_comparativa
1151+ 9004
1152+ 9004              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9004              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9004              ;
1155+ 9004              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9004              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9004              ;
1158+ 9004              ;   SBC HL,DE
1159+ 9004
1160+ 9004              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9004              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9004
1163+ 9004              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9004              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9004
1166+ 9004
1167+ 9004 3A 58 88         ld a,(Cuad_objeto)
1168+ 9007 FE 02            cp 2
1169+ 9009 28 26            jr z,2F
1170+ 900B 38 24            jr c,2F
1171+ 900D
1172+ 900D              ; Cuadrantes 3º y 4º
1173+ 900D
1174+ 900D E6 01            and 1
1175+ 900F 28 10            jr z,4F
1176+ 9011
1177+ 9011              ; Cuadrante 3º
1178+ 9011
1179+ 9011 7C               ld a,h
1180+ 9012 06 00            ld b,0
1181+ 9014
1182+ 9014 CD 9F 90         call Compara_cositas_H3
1183+ 9017
1184+ 9017 04               inc b
1185+ 9018 05               dec b
1186+ 9019 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 901A
1188+ 901A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 901B 06 00            ld b,0
1190+ 901D
1191+ 901D CD B1 90         call Compara_cositas_L3
1192+ 9020 C9               ret
1193+ 9021
1194+ 9021              ; Cuadrante 4º
1195+ 9021
1196+ 9021 7C           4 ld a,h
1197+ 9022 06 00            ld b,0
1198+ 9024
1199+ 9024 CD C3 90         call Compara_cositas_H4
1200+ 9027
1201+ 9027 04               inc b
1202+ 9028 05               dec b
1203+ 9029 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 902A
1205+ 902A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 902B 06 00            ld b,0
1207+ 902D
1208+ 902D CD D9 90         call Compara_cositas_L4
1209+ 9030 C9               ret
1210+ 9031
1211+ 9031              ; Cuadrantes 1º y 2º.
1212+ 9031
1213+ 9031 28 10        2 jr z,3F
1214+ 9033
1215+ 9033              ; 1er Cuadrante
1216+ 9033
1217+ 9033 7C               ld a,h
1218+ 9034 06 00            ld b,0
1219+ 9036
1220+ 9036 CD 77 90         call Compara_cositas_H1
1221+ 9039
1222+ 9039 04               inc b
1223+ 903A 05               dec b
1224+ 903B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 903C
1226+ 903C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 903D 06 00            ld b,0
1228+ 903F
1229+ 903F CD 8D 90         call Compara_cositas_L1
1230+ 9042 C9               ret
1231+ 9043
1232+ 9043
1233+ 9043              ; 2º Cuadrante
1234+ 9043
1235+ 9043 7C           3 ld a,h
1236+ 9044 06 00            ld b,0
1237+ 9046
1238+ 9046 CD 53 90         call Compara_cositas_H2
1239+ 9049
1240+ 9049 04               inc b
1241+ 904A 05               dec b
1242+ 904B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 904C
1244+ 904C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 904D 06 00            ld b,0
1246+ 904F
1247+ 904F CD 65 90         call Compara_cositas_L2
1248+ 9052 C9               ret
1249+ 9053
1250+ 9053 A7           Compara_cositas_H2 and a
1251+ 9054 28 0D            jr z,1F
1252+ 9056              ;    cp $fd
1253+ 9056              ;    jr z,1F
1254+ 9056              ;    cp $fe
1255+ 9056              ;    jr z,1F
1256+ 9056 FE FF            cp $ff
1257+ 9058 28 09            jr z,1F
1258+ 905A FE 01            cp $01
1259+ 905C 28 05            jr z,1F
1260+ 905E FE 02            cp $02
1261+ 9060 28 01            jr z,1F
1262+ 9062 C0               ret nz
1263+ 9063 04           1 inc b
1264+ 9064 C9               ret
1265+ 9065
1266+ 9065 A7           Compara_cositas_L2 and a
1267+ 9066 28 0D            jr z,1F
1268+ 9068              ;    cp $fd
1269+ 9068              ;    jr z,1F
1270+ 9068 FE FE            cp $fe
1271+ 906A 28 09            jr z,1F
1272+ 906C FE FF            cp $ff
1273+ 906E 28 05            jr z,1F
1274+ 9070 FE 01            cp $01
1275+ 9072 28 01            jr z,1F
1276+ 9074              ;    cp $02
1277+ 9074              ;    jr z,1F
1278+ 9074 C0               ret nz
1279+ 9075 04           1 inc b
1280+ 9076 C9               ret
1281+ 9077
1282+ 9077 A7           Compara_cositas_H1 and a
1283+ 9078 28 11            jr z,1F
1284+ 907A              ;    cp $fd
1285+ 907A              ;    jr z,1F
1286+ 907A              ;    cp $fe
1287+ 907A              ;    jr z,1F
1288+ 907A FE FF            cp $ff
1289+ 907C 28 0D            jr z,1F
1290+ 907E FE 01            cp $01
1291+ 9080 28 09            jr z,1F
1292+ 9082 FE 02            cp $02
1293+ 9084 28 05            jr z,1F
1294+ 9086 FE 03            cp $03
1295+ 9088 28 01            jr z,1F
1296+ 908A C0               ret nz
1297+ 908B 04           1 inc b
1298+ 908C C9               ret
1299+ 908D
1300+ 908D A7           Compara_cositas_L1 and a
1301+ 908E 28 0D            jr z,1F
1302+ 9090              ;    cp $fd
1303+ 9090              ;    jr z,1F
1304+ 9090              ;    cp $fe
1305+ 9090              ;    jr z,1F
1306+ 9090              ;    cp $ff
1307+ 9090              ;    jr z,1F
1308+ 9090 FE 01            cp $01
1309+ 9092 28 09            jr z,1F
1310+ 9094 FE 02            cp $02
1311+ 9096 28 05            jr z,1F
1312+ 9098 FE 03            cp $03
1313+ 909A 28 01            jr z,1F
1314+ 909C C0               ret nz
1315+ 909D 04           1 inc b
1316+ 909E C9               ret
1317+ 909F
1318+ 909F A7           Compara_cositas_H3 and a
1319+ 90A0 28 0D            jr z,1F
1320+ 90A2              ;    cp $fd
1321+ 90A2              ;    jr z,1F
1322+ 90A2 FE FE            cp $fe
1323+ 90A4 28 09            jr z,1F
1324+ 90A6 FE FF            cp $ff
1325+ 90A8 28 05            jr z,1F
1326+ 90AA FE 01            cp $01
1327+ 90AC 28 01            jr z,1F
1328+ 90AE              ;    cp $02
1329+ 90AE              ;    jr z,1F
1330+ 90AE              ;    cp $03
1331+ 90AE              ;    jr z,1F
1332+ 90AE C0               ret nz
1333+ 90AF 04           1 inc b
1334+ 90B0 C9               ret
1335+ 90B1
1336+ 90B1 A7           Compara_cositas_L3 and a
1337+ 90B2 28 0D            jr z,1F
1338+ 90B4              ;    cp $fd
1339+ 90B4              ;    jr z,1F
1340+ 90B4              ;    cp $fe
1341+ 90B4              ;    jr z,1F
1342+ 90B4              ;    cp $ff
1343+ 90B4              ;    jr z,1F
1344+ 90B4 FE 01            cp $01
1345+ 90B6 28 09            jr z,1F
1346+ 90B8 FE 02            cp $02
1347+ 90BA 28 05            jr z,1F
1348+ 90BC FE 03            cp $03
1349+ 90BE 28 01            jr z,1F
1350+ 90C0 C0               ret nz
1351+ 90C1 04           1 inc b
1352+ 90C2 C9               ret
1353+ 90C3
1354+ 90C3 A7           Compara_cositas_H4 and a
1355+ 90C4 28 11            jr z,1F
1356+ 90C6 FE FD            cp $fd
1357+ 90C8 28 0D            jr z,1F
1358+ 90CA FE FE            cp $fe
1359+ 90CC 28 09            jr z,1F
1360+ 90CE FE FF            cp $ff
1361+ 90D0 28 05            jr z,1F
1362+ 90D2 FE 01            cp $01
1363+ 90D4 28 01            jr z,1F
1364+ 90D6              ;    cp $02
1365+ 90D6              ;    jr z,1F
1366+ 90D6              ;    cp $03
1367+ 90D6              ;    jr z,1F
1368+ 90D6 C0               ret nz
1369+ 90D7 04           1 inc b
1370+ 90D8 C9               ret
1371+ 90D9
1372+ 90D9 A7           Compara_cositas_L4 and a
1373+ 90DA 28 0D            jr z,1F
1374+ 90DC              ;    cp $fd
1375+ 90DC              ;    jr z,1F
1376+ 90DC FE FE            cp $fe
1377+ 90DE 28 09            jr z,1F
1378+ 90E0 FE FF            cp $ff
1379+ 90E2 28 05            jr z,1F
1380+ 90E4 FE 01            cp $01
1381+ 90E6 28 01            jr z,1F
1382+ 90E8              ;    cp $02
1383+ 90E8              ;    jr z,1F
1384+ 90E8              ;    cp $03
1385+ 90E8              ;    jr z,1F
1386+ 90E8 C0               ret nz
1387+ 90E9 04           1 inc b
1388+ 90EA C9               ret
# file closed: Disparo.asm
1760  90EB              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 90EB              ; ******************************************************************************************************************************************************************************************
   2+ 90EB              ;
   3+ 90EB              ; 26/06/23
   4+ 90EB              ;
   5+ 90EB              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 90EB
   7+ 90EB              Draw
   8+ 90EB
   9+ 90EB CD D8 93     	call Prepara_draw
  10+ 90EE 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 90EF A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 90F0 28 05        	jr z,2F
  13+ 90F2
  14+ 90F2 3A 58 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 90F5 18 0C        	jr 1F
  16+ 90F7
  17+ 90F7 2A 56 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 90FA 22 46 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 90FD CD 8C 92     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9100              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9100
  22+ 9100 CD 4C 9D     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9103
  24+ 9103 3A 66 88     1 ld a,(Ctrl_0)
  25+ 9106 CB 6F        	bit 5,a
  26+ 9108 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 910A
  28+ 910A CD 22 91     	call Comprueba_limite_horizontal
  29+ 910D CD B2 91     	call Comprueba_limite_vertical
  30+ 9110
  31+ 9110              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9110              ; -----------------------
  33+ 9110              ; -----------------------
  34+ 9110              ; -----------------------
  35+ 9110
  36+ 9110 CD 08 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9113 CD 3F 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9116 CD 9E 93     	call Define_rutina_de_impresion
  39+ 9119
  40+ 9119 3A 66 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 911C CB AF        	res 5,a											; _a ser de utilidad.
  42+ 911E 32 66 88     	ld (Ctrl_0),a
  43+ 9121
  44+ 9121 C9           	ret
  45+ 9122
  46+ 9122              ; *******************************************************************************************************************************************************************************************
  47+ 9122              ;	21/01/23
  48+ 9122              ;
  49+ 9122              ; 	Comprueba_limite_horizontal.
  50+ 9122              ;
  51+ 9122              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9122              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9122              ;
  54+ 9122              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9122              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9122              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9122              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9122
  59+ 9122
  60+ 9122
  61+ 9122 3A 66 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9125 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9127 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9129 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 912B 32 66 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 912E 18 09            jr 6F
  67+ 9130 CB 5F        1 bit 3,a
  68+ 9132 28 0A            jr z,2F
  69+ 9134 E6 F7            and $f7
  70+ 9136 32 66 88         ld (Ctrl_0),a
  71+ 9139 CD 8C 92     6 call Inicializacion
  72+ 913C 18 5B            jr 5F
  73+ 913E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 913F
  75+ 913F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 913F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 913F
  78+ 913F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9140 2A 68 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9143 CD F7 96     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9146 67           	ld h,a
  82+ 9147 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9148 CD F7 96     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 914B 67           	ld h,a
  85+ 914C A7           	and a
  86+ 914D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 914F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9150 3A 58 88     	ld a,(Cuad_objeto)
  89+ 9153 FE 02        	cp 2
  90+ 9155 38 1E        	jr c,3F
  91+ 9157 28 1C        	jr z,3F
  92+ 9159 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 915A 28 23            jr z,7F
  94+ 915C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 915E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9160 E1           	pop hl
  97+ 9161
  98+ 9161              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9161              ; _para indicar con E="2" en caso necesario.
 100+ 9161
 101+ 9161 E5               push hl
 102+ 9162 C5               push bc
 103+ 9163 CD F7 96     	call calcula_tercio
 104+ 9166 FE 01        	cp 1
 105+ 9168 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 916A CD 9A 91         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 916D 28 26            jr z,9F
 108+ 916F 38 24            jr c,9F
 109+ 9171 1E 00        11 ld e,0
 110+ 9173 18 22            jr 8F
 111+ 9175 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9176 28 07        	jr z, 7F
 113+ 9178 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 917A 1E 00         	ld e,0
 115+ 917C E1           	pop hl
 116+ 917D 18 04        	jr 4F
 117+ 917F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9181 18 15            jr 10F
 119+ 9183
 120+ 9183              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9183              ; _para indicar con E="2" en caso necesario.
 122+ 9183
 123+ 9183 E5           4 push hl
 124+ 9184 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9185 CD F7 96     	call calcula_tercio
 126+ 9188 FE 01        	cp 1
 127+ 918A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 918C CD 9A 91         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 918F 28 04            jr z,9F
 130+ 9191 30 02            jr nc,9F
 131+ 9193 18 02        	jr 8F
 132+ 9195 1E 02        9 ld e,2
 133+ 9197 C1           8 pop bc
 134+ 9198 E1           10 pop hl
 135+ 9199 C9           5 ret
 136+ 919A
 137+ 919A              ; --------------------
 138+ 919A              ;
 139+ 919A              ; 25/08/22
 140+ 919A
 141+ 919A CD F7 96     Comprueba_centro call calcula_tercio
 142+ 919D 67               ld h,a
 143+ 919E 08           	ex af,af
 144+ 919F FE 02        	cp 2
 145+ 91A1 38 07        	jr c,1F
 146+ 91A3 28 05        	jr z,1F
 147+ 91A5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 91A8 18 03        	jr 2F
 149+ 91AA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 91AD 08           2 ex af,af
 151+ 91AE A7               and a
 152+ 91AF ED 42            sbc hl,bc
 153+ 91B1 C9               ret
 154+ 91B2
 155+ 91B2              ; *********************************************************************************************************************************************************************************************
 156+ 91B2              ;
 157+ 91B2              ;   16/8/22
 158+ 91B2              ;
 159+ 91B2              ;	Comprueba_limite_vertical
 160+ 91B2              ;
 161+ 91B2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 91B2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 91B2              ;
 164+ 91B2
 165+ 91B2 2A 46 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 91B5 7D           	ld a,l
 167+ 91B6 E6 1F        	and $1F
 168+ 91B8 57           	ld d,a
 169+ 91B9 3A 6A 88     	ld a,(Limite_vertical)
 170+ 91BC BA           	cp d 											; Límite - Posición.
 171+ 91BD 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 91BE 3A 58 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 91C1 CB 47        	bit 0,a
 174+ 91C3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 91C5
 176+ 91C5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 91C5
 178+ 91C5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 91C6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 91C8
 181+ 91C8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 91C8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 91C8
 184+ 91C8 3A 4A 88         ld a,(Coordenada_X)
 185+ 91CB 16 0F            ld d,Centro_izquierda
 186+ 91CD A7               and a
 187+ 91CE 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 91CF 28 1E            jr z,3F
 189+ 91D1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 91D3              ;                                                    ; _salimos sin modificar nada.
 191+ 91D3 18 0E            jr 2F
 192+ 91D5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 91D6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 91D8
 195+ 91D8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 91D8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 91D8
 198+ 91D8 3A 4A 88         ld a,(Coordenada_X)
 199+ 91DB 16 10            ld d,Centro_derecha
 200+ 91DD A7               and a
 201+ 91DE 92               sub d
 202+ 91DF 28 0E            jr z,3F
 203+ 91E1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 91E3              ;                                                    ; _salimos sin modificar nada.
 205+ 91E3 CB 43        2 bit 0,e
 206+ 91E5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 91E7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 91E8 CD 7C 92         call Modificaccionne
 209+ 91EB C1           	pop bc
 210+ 91EC CD 8C 92         call Inicializacion
 211+ 91EF C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 91F0
 213+ 91F0              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 91F0
 215+ 91F0 C5           4 push bc
 216+ 91F1 01 45 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 91F4 0A           	ld a,(bc)
 218+ 91F5 3D           	dec a
 219+ 91F6 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 91F7 7D           	ld a,l
 221+ 91F8 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 91F9 CB 47        	bit 0,a
 223+ 91FB 28 03        	jr z,5F
 224+ 91FD 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 91FE 18 2E        	jr 7F
 226+ 9200
 227+ 9200              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9200
 229+ 9200 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9201 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9202 3A 66 88     	ld a,(Ctrl_0)
 232+ 9205 CB 4F        	bit 1,a
 233+ 9207 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9209 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 920A
 236+ 920A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 920A
 238+ 920A 1C               inc e
 239+ 920B 1D               dec e
 240+ 920C 20 07            jr nz,12F
 241+ 920E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 920F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9210 22 46 88     	ld (Posicion_actual),hl
 244+ 9213 18 44        13 jr 9F
 245+ 9215 CB 43        12 bit 0,e
 246+ 9217 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9219              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9219 C1           	pop bc
 249+ 921A 18 D3        	jr 3B
 250+ 921C 80           14 add b
 251+ 921D 6F               ld l,a
 252+ 921E 22 46 88     	ld (Posicion_actual),hl
 253+ 9221 CD 7C 92         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9224 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9226 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9228 32 66 88         ld (Ctrl_0),a
 257+ 922B F1           	pop af
 258+ 922C 18 2B        	jr 9F
 259+ 922E
 260+ 922E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 922E
 262+ 922E F5           7 push af
 263+ 922F 3A 66 88     	ld a,(Ctrl_0)
 264+ 9232 CB 47        	bit 0,a
 265+ 9234 20 1D        	jr nz,8F
 266+ 9236 F1           	pop af
 267+ 9237
 268+ 9237              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9237
 270+ 9237 1C           	inc e
 271+ 9238 1D               dec e
 272+ 9239 20 07            jr nz,10F
 273+ 923B 90           	sub b
 274+ 923C 6F               ld l,a
 275+ 923D 22 46 88     	ld (Posicion_actual),hl
 276+ 9240 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9242              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9242 CB 43        10 bit 0,e
 279+ 9244 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9246              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9246 C1           	pop bc
 282+ 9247 18 A6        	jr 3B
 283+ 9249 90           16 sub b
 284+ 924A 6F               ld l,a
 285+ 924B 22 46 88     	ld (Posicion_actual),hl
 286+ 924E CD 7C 92         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9251 18 06            jr 9F
 288+ 9253 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9255 32 66 88         ld (Ctrl_0),a
 290+ 9258 F1           	pop af
 291+ 9259 C1           9 pop bc
 292+ 925A 1E 00        	ld e,0
 293+ 925C CD 8C 92         call Inicializacion
 294+ 925F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9260 08           	ex af,af
 296+ 9261 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9262 18 8B            jr 3B
 298+ 9264
 299+ 9264              ; --------------------
 300+ 9264
 301+ 9264 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9266 CD F3 93     1 call PreviousScan
 303+ 9269 10 FB            djnz 1B
 304+ 926B 22 46 88     	ld (Posicion_actual),hl
 305+ 926E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 926F C9           	ret
 307+ 9270
 308+ 9270              ; --------------------
 309+ 9270
 310+ 9270 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9272 CD E4 93     1 call NextScan
 312+ 9275 10 FB            djnz 1B
 313+ 9277 22 46 88     	ld (Posicion_actual),hl
 314+ 927A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 927B C9           	ret
 316+ 927C
 317+ 927C              ; --------------------
 318+ 927C              ;
 319+ 927C              ;	22/01/23
 320+ 927C              ;
 321+ 927C              ;	E="1". Hemos cambiado de cuadrante.
 322+ 927C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 927C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 927C
 325+ 927C
 326+ 927C              Modificaccionne
 327+ 927C
 328+ 927C 3A 58 88     	ld a,(Cuad_objeto)
 329+ 927F FE 02        	cp 2
 330+ 9281 CC 64 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9284 DC 64 92         call c,Modifica_Pos_actual
 332+ 9287 C8           	ret z
 333+ 9288 CD 70 92         call Modifica_Pos_actual2
 334+ 928B C9               ret
 335+ 928C
 336+ 928C              ; *************************************************************************************************************************************************************************************************
 337+ 928C              ;
 338+ 928C              ;	13/8/22
 339+ 928C              ;
 340+ 928C              ;	Inicializacion
 341+ 928C              ;
 342+ 928C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 928C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 928C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 928C              ;
 346+ 928C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 928C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 928C              ;	_ desaparece/aparece.
 349+ 928C
 350+ 928C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 928C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 928C              ;
 353+ 928C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 928C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 928C              ; 		   [E] ="0"
 356+ 928C
 357+ 928C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 928C
 359+ 928C CD F7 96     Inicializacion call calcula_tercio
 360+ 928F 28 36        	jr z,primit
 361+ 9291 E6 02        	and 2
 362+ 9293 20 07        	jr nz,segmit
 363+ 9295 7D           	ld a,l
 364+ 9296 FE 7F        	cp $7f
 365+ 9298 38 2D        	jr c,primit
 366+ 929A 28 2B        	jr z,primit
 367+ 929C CD 02 93     segmit call column
 368+ 929F 38 13        	jr c,tercuad
 369+ 92A1 3E 04        cuarcuad ld a,4
 370+ 92A3 32 58 88     	ld (Cuad_objeto),a
 371+ 92A6 21 20 48     	ld hl,$4820
 372+ 92A9 22 68 88     	ld (Limite_horizontal),hl
 373+ 92AC 21 6A 88     	ld hl,Limite_vertical
 374+ 92AF 36 0D        	ld (hl),$0d
 375+ 92B1 08           	ex af,af
 376+ 92B2 18 3C        	jr 1F
 377+ 92B4              tercuad
 378+ 92B4 3E 03        	ld a,3
 379+ 92B6 32 58 88     	ld (Cuad_objeto),a
 380+ 92B9 21 20 48     	ld hl,$4820
 381+ 92BC 22 68 88     	ld (Limite_horizontal),hl
 382+ 92BF 21 6A 88     	ld hl,Limite_vertical
 383+ 92C2 36 12        	ld (hl),$12
 384+ 92C4 08           	ex af,af
 385+ 92C5 18 29        	jr 1F
 386+ 92C7 CD 02 93     primit call column
 387+ 92CA 38 13        	jr c, primcuad
 388+ 92CC              segcuad
 389+ 92CC 3E 02        	ld a,2
 390+ 92CE 32 58 88     	ld (Cuad_objeto),a
 391+ 92D1 21 C0 4F     	ld hl,$4fc0
 392+ 92D4 22 68 88     	ld (Limite_horizontal),hl
 393+ 92D7 21 6A 88     	ld hl,Limite_vertical
 394+ 92DA 36 0D        	ld (hl),$0d
 395+ 92DC 08           	ex af,af
 396+ 92DD 18 11        	jr 1F
 397+ 92DF              primcuad
 398+ 92DF 3E 01        	ld a,1
 399+ 92E1 32 58 88     	ld (Cuad_objeto),a
 400+ 92E4 21 C0 4F     	ld hl,$4fc0
 401+ 92E7 22 68 88     	ld (Limite_horizontal),hl
 402+ 92EA 21 6A 88     	ld hl,Limite_vertical
 403+ 92ED 36 12        	ld (hl),$12
 404+ 92EF 08           	ex af,af
 405+ 92F0
 406+ 92F0 C5           1 push bc
 407+ 92F1 E5           	push hl
 408+ 92F2 D5           	push de
 409+ 92F3
 410+ 92F3 2A 46 88     	ld hl,(Posicion_actual)
 411+ 92F6 CD 8F 9A     	call Genera_coordenadas
 412+ 92F9
 413+ 92F9 D1           	pop de
 414+ 92FA E1           	pop hl
 415+ 92FB C1           	pop bc
 416+ 92FC
 417+ 92FC 21 66 88     	ld hl,Ctrl_0
 418+ 92FF CB EE        	set 5,(hl)
 419+ 9301 C9           	ret
 420+ 9302
 421+ 9302              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9302
 423+ 9302              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9302              ;
 425+ 9302              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9302
 427+ 9302 7D           column ld a,l
 428+ 9303 E6 1F        	and $1f
 429+ 9305 FE 10         	cp $10
 430+ 9307 C9            	ret
 431+ 9308
 432+ 9308              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9308              ;
 434+ 9308              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9308              ;
 436+ 9308              ; 14/12/22
 437+ 9308              ;
 438+ 9308              ;	Modifica: A y BC.
 439+ 9308
 440+ 9308 3A 58 88     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 930B E6 01        	and 1
 442+ 930D 28 17        	jr z,1F
 443+ 930F
 444+ 930F              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 930F
 446+ 930F 3A 4A 88     	ld a,(Coordenada_X)
 447+ 9312 47           	ld b,a
 448+ 9313 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9314 79           	ld a,c
 450+ 9315 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9316 38 08        	jr c,2F
 452+ 9318 47           	ld b,a
 453+ 9319 79           	ld a,c
 454+ 931A 90           	sub b
 455+ 931B 32 67 88     	ld (Columnas),a
 456+ 931E 18 1B        	jr 4F
 457+ 9320 79           2 ld a,c
 458+ 9321 32 67 88     	ld (Columnas),a
 459+ 9324 18 15        	jr 4F
 460+ 9326
 461+ 9326              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9326
 463+ 9326 3A 4A 88     1 ld a,(Coordenada_X)
 464+ 9329 81           	add c
 465+ 932A 3D           	dec a
 466+ 932B D6 1F        	sub $1f
 467+ 932D 38 08        	jr c,3F
 468+ 932F 47           	ld b,a
 469+ 9330 79           	ld a,c
 470+ 9331 90           	sub b
 471+ 9332 32 67 88     	ld (Columnas),a
 472+ 9335 18 04        	jr 4F
 473+ 9337 79           3 ld a,c
 474+ 9338 32 67 88     	ld (Columnas),a
 475+ 933B D9           4 exx
 476+ 933C 4F           	ld c,a
 477+ 933D D9           	exx
 478+ 933E C9            ret
 479+ 933F
 480+ 933F              ; --------------------------------------------------------------------------------------------------------------------
 481+ 933F              ;
 482+ 933F              ;   19/7/23
 483+ 933F              ;
 484+ 933F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 933F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 933F              ;
 487+ 933F              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 933F              ;			HL e IY Contienen (Puntero_objeto).
 489+ 933F              ;
 490+ 933F              ;	DESTRUYE: HL,B Y A.
 491+ 933F
 492+ 933F 3A 58 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9342 FE 02        	cp 2
 494+ 9344 38 18        	jr c,1F
 495+ 9346 28 16        	jr z,1F
 496+ 9348 E6 01        	and 1
 497+ 934A 28 0D        	jr z,3F
 498+ 934C
 499+ 934C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 934C
 501+ 934C CD 92 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 934F
 503+ 934F 7D           9 ld a,l
 504+ 9350 E6 1F        	and $1f
 505+ 9352 28 2A        	jr z,7F
 506+ 9354 2B           	dec hl
 507+ 9355 10 F8        	djnz 9B
 508+ 9357 18 25        	jr 7F
 509+ 9359
 510+ 9359              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9359
 512+ 9359 2A 46 88     3 ld hl,(Posicion_actual)
 513+ 935C 18 20        	jr 7F
 514+ 935E
 515+ 935E 28 14        1 jr z,2F
 516+ 9360
 517+ 9360              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9360
 519+ 9360 CD 92 93     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9363
 521+ 9363 7D           4 ld a,l
 522+ 9364 E6 1F        	and $1f
 523+ 9366 28 03        	jr z,6F
 524+ 9368 2B           	dec hl
 525+ 9369 10 F8        	djnz 4B
 526+ 936B 06 0F        6 ld b,15
 527+ 936D CD F3 93     5 call PreviousScan
 528+ 9370 10 FB        	djnz 5B
 529+ 9372 18 0A        	jr 7F
 530+ 9374
 531+ 9374              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9374
 533+ 9374 CD 92 93     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9377 06 0F        	ld b,15
 535+ 9379 CD F3 93     8 call PreviousScan
 536+ 937C 10 FB        	djnz 8B
 537+ 937E
 538+ 937E E5           7 push hl
 539+ 937F DD E1        	pop ix
 540+ 9381
 541+ 9381 2A 48 88     	ld hl,(Puntero_objeto)
 542+ 9384 E5           	push hl
 543+ 9385 FD E1        	pop iy
 544+ 9387
 545+ 9387              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9387
 547+ 9387 3A 66 88     	ld a,(Ctrl_0)
 548+ 938A CB 77        	bit 6,a
 549+ 938C C8           	ret z
 550+ 938D
 551+ 938D              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 938D              ; _ entidad / Amadeus´.
 553+ 938D
 554+ 938D DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 9391
 556+ 9391 C9           	ret
 557+ 9392
 558+ 9392              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9392              ;
 560+ 9392              ;	2/1/23
 561+ 9392              ;
 562+ 9392              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9392              ;
 564+ 9392              ;	Tras esta rutina tenemos:
 565+ 9392              ;
 566+ 9392              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9392              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9392              ;
 569+ 9392              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9392
 571+ 9392 2A 46 88     Operandos ld hl,(Posicion_actual)
 572+ 9395 3A 67 88     	ld a,(Columnas)
 573+ 9398 3D           	dec a
 574+ 9399 20 01        	jr nz,1F
 575+ 939B 3C           	inc a
 576+ 939C 47           1 ld b,a
 577+ 939D C9           	ret
 578+ 939E
 579+ 939E              ; --------------------------------------------------------------------------------------------------------------------
 580+ 939E              ;
 581+ 939E              ;	3/1/23
 582+ 939E              ;
 583+ 939E              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 939E              ;
 585+ 939E              ;	Destruye: A,B,HL y DE.
 586+ 939E
 587+ 939E              Define_rutina_de_impresion
 588+ 939E
 589+ 939E 3A 45 88     	ld a,(Columns)
 590+ 93A1 47           	ld b,a
 591+ 93A2 3A 67 88     	ld a,(Columnas)
 592+ 93A5 B8           	cp b
 593+ 93A6 20 0D        	jr nz,2f
 594+ 93A8
 595+ 93A8              ;	La entidad se imprime entera.
 596+ 93A8
 597+ 93A8 21 C7 94     	ld hl, Indice_entidades_completas
 598+ 93AB E6 01        	and 1
 599+ 93AD 28 02        	jr z,1F
 600+ 93AF
 601+ 93AF 23           	inc hl
 602+ 93B0 23           	inc hl
 603+ 93B1
 604+ 93B1 CD A7 8A     1 call Extrae_address
 605+ 93B4 C9           	ret		;	ret
 606+ 93B5
 607+ 93B5              ;	La entidad no se imprime entera en pantalla.
 608+ 93B5
 609+ 93B5 3A 58 88     2 ld a,(Cuad_objeto)
 610+ 93B8 E6 01        	and 1
 611+ 93BA 28 17        	jr z,3F
 612+ 93BC
 613+ 93BC              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 93BC
 615+ 93BC 21 CB 94     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 93BF 3A 45 88     4 ld a,(Columns)
 617+ 93C2 E6 01        	and 1
 618+ 93C4 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 93C6
 620+ 93C6 23           	inc hl
 621+ 93C7 23           	inc hl
 622+ 93C8
 623+ 93C8 3A 67 88     	ld a,(Columnas)
 624+ 93CB E6 01        	and 1
 625+ 93CD 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 93CF
 627+ 93CF 23           	inc hl
 628+ 93D0 23           	inc hl
 629+ 93D1
 630+ 93D1 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 93D3
 632+ 93D3 21 D1 94     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 93D6 18 E7        	jr 4B
 634+ 93D8
 635+ 93D8              ; --------------------------------------------------------------------------------------------------------------------
 636+ 93D8              ;
 637+ 93D8              ;	Prepara_draw
 638+ 93D8              ;
 639+ 93D8              ;	Es una rutina de carga.
 640+ 93D8              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 93D8              ;
 642+ 93D8              ;	FUNCIONAMIENTO:
 643+ 93D8              ;
 644+ 93D8              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 93D8              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 93D8              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 93D8              ;
 648+ 93D8              ;	DESTRUYE:
 649+ 93D8              ;
 650+ 93D8              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 93D8
 652+ 93D8 21 44 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 93DB 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 93DC 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 93DD 4E           	ld c,(hl)
 656+ 93DE 2A 46 88     	ld hl,(Posicion_actual)
 657+ 93E1 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 93E3 C9           	ret
 659+ 93E4
 660+ 93E4              ;----------------------------------------------------------------------------------------------------------------
 661+ 93E4              ;
 662+ 93E4              ;	5/08/22
 663+ 93E4              ;
 664+ 93E4              ;   NextScan.
 665+ 93E4              ;
 666+ 93E4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 93E4              ;
 668+ 93E4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 93E4              ;
 670+ 93E4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 93E4              ;
 672+ 93E4              ;       DESTRUIDOS: AF y HL !!!
 673+ 93E4              ;
 674+ 93E4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 93E4              ;
 676+ 93E4
 677+ 93E4 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 93E5 7C               ld a,h
 679+ 93E6 E6 07            and 7
 680+ 93E8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 93E9
 682+ 93E9 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 93EA C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 93EC 6F               ld l,a
 685+ 93ED D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 93EE
 687+ 93EE 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 93EF D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 93F1 67               ld h,a
 690+ 93F2 C9               ret
 691+ 93F3
 692+ 93F3              ;----------------------------------------------------------------------------------------------------------------
 693+ 93F3              ;
 694+ 93F3              ;	5/08/22
 695+ 93F3              ;
 696+ 93F3              ;   PreviousScan.
 697+ 93F3              ;
 698+ 93F3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 93F3              ;
 700+ 93F3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 93F3              ;
 702+ 93F3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 93F3              ;
 704+ 93F3              ;       DESTRUIDOS: AF y HL !!!
 705+ 93F3              ;
 706+ 93F3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 93F3              ;
 708+ 93F3
 709+ 93F3 7C           PreviousScan ld a,h
 710+ 93F4 25               dec h               ; Dec H.
 711+ 93F5 E6 07            and 7
 712+ 93F7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 93F8
 714+ 93F8 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 93F9 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 93FB 6F               ld l,a
 717+ 93FC D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 93FD
 719+ 93FD 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 93FE C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9400 67               ld h,a
 722+ 9401 C9               ret
 723+ 9402
 724+ 9402              ; -----------------------------------------------------------------------------------
 725+ 9402              ;
 726+ 9402              ;	31/7/23
 727+ 9402              ;
 728+ 9402              ;	Rutina principal de pintado de entidades.
 729+ 9402              ;	Extrae la foto del frame, (entidades).
 730+ 9402
 731+ 9402              Extrae_foto_entidades
 732+ 9402
 733+ 9402 21 01 70     	ld hl,Album_de_fotos+1
 734+ 9405 7E           	ld a,(hl)
 735+ 9406 A7           	and a
 736+ 9407 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9408
 738+ 9408              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9408
 740+ 9408 3A 91 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 940B A7           	and a
 742+ 940C C8           	ret z
 743+ 940D
 744+ 940D              ; -----------------------------------
 745+ 940D
 746+ 940D ED 73 96 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9411 31 00 70     	ld sp,Album_de_fotos
 748+ 9414
 749+ 9414 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9416 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9417 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9418
 753+ 9418 ED 73 98 88  	ld (Stack_2),sp
 754+ 941C ED 7B 96 88  	ld sp,(Stack)
 755+ 9420
 756+ 9420              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9420
 758+ 9420 3E CD        	ld a,$cd
 759+ 9422 32 2A 94     	ld (Imprime),a
 760+ 9425 EB           	ex de,hl
 761+ 9426 22 2B 94     	ld (Imprime+1),hl
 762+ 9429 EB           	ex de,hl
 763+ 942A
 764+ 942A              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 942A
 766+ 942A 00 00 00     Imprime db 0,0,0
 767+ 942D
 768+ 942D ED 73 96 88  	ld (Stack),sp
 769+ 9431
 770+ 9431 3A 91 88     	ld a,(Numero_de_malotes)
 771+ 9434 3D           	dec a
 772+ 9435 28 09        	jr z,1F
 773+ 9437 32 91 88      	ld (Numero_de_malotes),a
 774+ 943A
 775+ 943A ED 7B 98 88  	ld sp,(Stack_2)
 776+ 943E 18 D4        	jr 2B
 777+ 9440
 778+ 9440 AF           1 xor a
 779+ 9441 32 98 88     	ld (Stack_2),a
 780+ 9444
 781+ 9444 C9           	ret
 782+ 9445
 783+ 9445              ; -----------------------------------------------------------------------------------
 784+ 9445              ;
 785+ 9445              ;	28/2/23
 786+ 9445              ;
 787+ 9445              ;	Pinta los disparos generados.
 788+ 9445
 789+ 9445              Extrae_foto_disparos
 790+ 9445
 791+ 9445 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 9448 7E               ld a,(hl)
 793+ 9449 A7               and a
 794+ 944A C8               ret z
 795+ 944B
 796+ 944B 3A A6 88     	ld a,(Numero_de_disparotes)
 797+ 944E A7           	and a
 798+ 944F C8           	ret z
 799+ 9450 ED 73 96 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9454 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 9457
 802+ 9457 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9459 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 945A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 945B
 806+ 945B ED 73 98 88  	ld (Stack_2),sp
 807+ 945F ED 7B 96 88  	ld sp,(Stack)
 808+ 9463
 809+ 9463              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9463
 811+ 9463 3E CD        	ld a,$cd
 812+ 9465 32 6D 94     	ld (Imprime2),a
 813+ 9468 EB           	ex de,hl
 814+ 9469 22 6E 94     	ld (Imprime2+1),hl
 815+ 946C EB           	ex de,hl
 816+ 946D
 817+ 946D              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 946D
 819+ 946D 00 00 00     Imprime2 db 0,0,0
 820+ 9470
 821+ 9470 3A A6 88     	ld a,(Numero_de_disparotes)
 822+ 9473 3D           	dec a
 823+ 9474 28 09        	jr z,1F
 824+ 9476 32 A6 88      	ld (Numero_de_disparotes),a
 825+ 9479
 826+ 9479 ED 7B 98 88  	ld sp,(Stack_2)
 827+ 947D 18 D8        	jr 2B
 828+ 947F
 829+ 947F AF           1 xor a
 830+ 9480 32 98 88     	ld (Stack_2),a
 831+ 9483 C9           	ret
 832+ 9484
 833+ 9484              ; -----------------------------------------------------------------------------------
 834+ 9484              ;
 835+ 9484              ;	4/9/23
 836+ 9484              ;
 837+ 9484              ;	Rutina principal de pintado de Amadeus.
 838+ 9484              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9484
 840+ 9484 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9487 7E           	ld a,(hl)
 842+ 9488 A7           	and a
 843+ 9489 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 948A
 845+ 948A 3A 91 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 948D A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 948E C8           	ret z
 848+ 948F
 849+ 948F              ; -----------------------------------
 850+ 948F
 851+ 948F ED 73 96 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9493 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 9496
 854+ 9496 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9498 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9499 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 949A
 858+ 949A ED 73 98 88  	ld (Stack_2),sp
 859+ 949E ED 7B 96 88  	ld sp,(Stack)
 860+ 94A2
 861+ 94A2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 94A2
 863+ 94A2 3E CD        	ld a,$cd
 864+ 94A4 32 AC 94     	ld (Imprime_Amadeus),a
 865+ 94A7 EB           	ex de,hl
 866+ 94A8 22 AD 94     	ld (Imprime_Amadeus+1),hl
 867+ 94AB EB           	ex de,hl
 868+ 94AC
 869+ 94AC              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 94AC
 871+ 94AC 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 94AF
 873+ 94AF ED 73 96 88  	ld (Stack),sp
 874+ 94B3
 875+ 94B3 3A 91 88     	ld a,(Numero_de_malotes)
 876+ 94B6 3D           	dec a
 877+ 94B7 28 09        	jr z,1F
 878+ 94B9 32 91 88      	ld (Numero_de_malotes),a
 879+ 94BC
 880+ 94BC ED 7B 98 88  	ld sp,(Stack_2)
 881+ 94C0 18 D4        	jr 2B
 882+ 94C2
 883+ 94C2 AF           1 xor a
 884+ 94C3 32 98 88     	ld (Stack_2),a
 885+ 94C6
 886+ 94C6 C9           	ret
# file closed: Draw_XOR.asm
1761  94C7              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 94C7              ;   índices de Rutinas de impresión.
   2+ 94C7
   3+ 94C7 D7 94        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 94C9 04 95            defw Pinta_Amadeus_3x2
   5+ 94CB
   6+ 94CB 5A 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 94CD FA 95            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 94CF AE 95            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 94D1
  10+ 94D1 84 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 94D3 88 96            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 94D5 3C 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 94D7
  14+ 94D7
  15+ 94D7              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 94D7              ;
  17+ 94D7              ;   12/12/22
  18+ 94D7              ;
  19+ 94D7              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 94D7              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 94D7              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 94D7              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 94D7              ;
  24+ 94D7              ;   Modifica: DE y HL.
  25+ 94D7
  26+ 94D7 ED 73 96 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 94DB FD F9        	ld sp,iy
  28+ 94DD 06 10            ld b,16
  29+ 94DF D1           1 pop de
  30+ 94E0 7B               ld a,e
  31+ 94E1 AE               xor (hl)
  32+ 94E2 77           	ld (hl),a
  33+ 94E3 23           	inc hl
  34+ 94E4 7A               ld a,d
  35+ 94E5 AE               xor (hl)
  36+ 94E6 77           	ld (hl),a
  37+ 94E7 2B           	dec hl
  38+ 94E8 24           	inc h
  39+ 94E9 7C               ld a,h
  40+ 94EA E6 07            and 7
  41+ 94EC 20 0A            jr nz,2F
  42+ 94EE 7D               ld a,l
  43+ 94EF C6 20            add a,$20
  44+ 94F1 6F               ld l,a
  45+ 94F2 38 04            jr c,2F
  46+ 94F4 7C               ld a,h
  47+ 94F5 D6 08            sub 8
  48+ 94F7 67               ld h,a
  49+ 94F8 7C           2 ld a,h
  50+ 94F9 FE 58            cp $58
  51+ 94FB 28 02            jr z,3F
  52+ 94FD 10 E0            djnz 1B
  53+ 94FF ED 7B 96 88  3 ld sp,(Stack)
  54+ 9503 C9           	ret
  55+ 9504
  56+ 9504 ED 73 96 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9508 FD F9        	ld sp,iy
  58+ 950A 06 08            ld b,8
  59+ 950C D1           1 pop de
  60+ 950D 7B               ld a,e
  61+ 950E AE               xor (hl)
  62+ 950F 77           	ld (hl),a
  63+ 9510 23           	inc hl
  64+ 9511 7A               ld a,d
  65+ 9512 AE               xor (hl)
  66+ 9513 77           	ld (hl),a
  67+ 9514 23           	inc hl
  68+ 9515 D1           	pop de
  69+ 9516 7B               ld a,e
  70+ 9517 AE               xor (hl)
  71+ 9518 77           	ld (hl),a
  72+ 9519 2B           	dec hl
  73+ 951A 2B           	dec hl
  74+ 951B 24           	inc h
  75+ 951C 7C               ld a,h
  76+ 951D E6 07            and 7
  77+ 951F 20 0A            jr nz,2F
  78+ 9521 7D               ld a,l
  79+ 9522 C6 20            add a,$20
  80+ 9524 6F               ld l,a
  81+ 9525 38 04            jr c,2F
  82+ 9527 7C               ld a,h
  83+ 9528 D6 08            sub 8
  84+ 952A 67               ld h,a
  85+ 952B 7C           2 ld a,h
  86+ 952C FE 58            cp $58
  87+ 952E 28 25            jr z,4F
  88+ 9530 7A               ld a,d
  89+ 9531 AE               xor (hl)
  90+ 9532 77               ld (hl),a
  91+ 9533 D1           	pop de
  92+ 9534 23           	inc hl
  93+ 9535 7B               ld a,e
  94+ 9536 AE               xor (hl)
  95+ 9537 77           	ld (hl),a
  96+ 9538 23           	inc hl
  97+ 9539 7A               ld a,d
  98+ 953A AE               xor (hl)
  99+ 953B 77           	ld (hl),a
 100+ 953C 2B           	dec hl
 101+ 953D 2B           	dec hl
 102+ 953E 24           	inc h
 103+ 953F 7C               ld a,h
 104+ 9540 E6 07            and 7
 105+ 9542 20 0A            jr nz,3F
 106+ 9544 7D               ld a,l
 107+ 9545 C6 20            add a,$20
 108+ 9547 6F               ld l,a
 109+ 9548 38 04            jr c,3F
 110+ 954A 7C               ld a,h
 111+ 954B D6 08            sub 8
 112+ 954D 67               ld h,a
 113+ 954E 7C           3 ld a,h
 114+ 954F FE 58            cp $58
 115+ 9551 28 02            jr z,4F
 116+ 9553 10 B7            djnz 1B
 117+ 9555 ED 7B 96 88  4 ld sp,(Stack)
 118+ 9559 C9           	ret
 119+ 955A
 120+ 955A              ; ---------------------------------------------------
 121+ 955A
 122+ 955A ED 73 96 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 955E FD F9        	ld sp,iy
 124+ 9560
 125+ 9560              ; >>>
 126+ 9560
 127+ 9560 06 10            ld b,16
 128+ 9562 D1           1 pop de
 129+ 9563 7A           	ld a,d
 130+ 9564 AE           	xor (hl)
 131+ 9565 77           	ld (hl),a
 132+ 9566 24           	inc h
 133+ 9567 7C               ld a,h
 134+ 9568 E6 07            and 7
 135+ 956A 20 0C            jr nz,2F
 136+ 956C 7D               ld a,l
 137+ 956D C6 20            add a,$20
 138+ 956F 6F               ld l,a
 139+ 9570 38 06            jr c,2F
 140+ 9572 7C               ld a,h
 141+ 9573 D6 08            sub 8
 142+ 9575 67               ld h,a
 143+ 9576 18 00            jr 2F
 144+ 9578 7C           2 ld a,h
 145+ 9579 FE 58            cp $58
 146+ 957B 28 02            jr z,3F
 147+ 957D 10 E3            djnz 1B
 148+ 957F ED 7B 96 88  3 ld sp,(Stack)
 149+ 9583 C9           	ret
 150+ 9584
 151+ 9584 ED 73 96 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9588 FD F9        	ld sp,iy
 153+ 958A
 154+ 958A              ; >>>
 155+ 958A
 156+ 958A 06 10            ld b,16
 157+ 958C D1           1 pop de
 158+ 958D 7B           	ld a,e
 159+ 958E AE           	xor (hl)
 160+ 958F 77           	ld (hl),a
 161+ 9590 24           	inc h
 162+ 9591 7C               ld a,h
 163+ 9592 E6 07            and 7
 164+ 9594 20 0C            jr nz,2F
 165+ 9596 7D               ld a,l
 166+ 9597 C6 20            add a,$20
 167+ 9599 6F               ld l,a
 168+ 959A 38 06            jr c,2F
 169+ 959C 7C               ld a,h
 170+ 959D D6 08            sub 8
 171+ 959F 67               ld h,a
 172+ 95A0 18 00            jr 2F
 173+ 95A2 7C           2 ld a,h
 174+ 95A3 FE 58            cp $58
 175+ 95A5 28 02            jr z,3F
 176+ 95A7 10 E3            djnz 1B
 177+ 95A9 ED 7B 96 88  3 ld sp,(Stack)
 178+ 95AD C9           	ret
 179+ 95AE
 180+ 95AE              ; ---------------------------------------------------
 181+ 95AE
 182+ 95AE ED 73 96 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 95B2 FD F9        	ld sp,iy
 184+ 95B4 06 08            ld b,8
 185+ 95B6 D1           1 pop de
 186+ 95B7 7A           	ld a,d
 187+ 95B8 AE           	xor (hl)
 188+ 95B9 77           	ld (hl),a
 189+ 95BA 23           	inc hl
 190+ 95BB D1           	pop de
 191+ 95BC 7B           	ld a,e
 192+ 95BD AE           	xor (hl)
 193+ 95BE 77           	ld (hl),a
 194+ 95BF 2B           	dec hl
 195+ 95C0 24            	inc h
 196+ 95C1 7C               ld a,h
 197+ 95C2 E6 07            and 7
 198+ 95C4 20 0A            jr nz,2F
 199+ 95C6 7D               ld a,l
 200+ 95C7 C6 20            add a,$20
 201+ 95C9 6F               ld l,a
 202+ 95CA 38 04            jr c,2F
 203+ 95CC 7C               ld a,h
 204+ 95CD D6 08            sub 8
 205+ 95CF 67               ld h,a
 206+ 95D0 7C           2 ld a,h
 207+ 95D1 FE 58            cp $58
 208+ 95D3 28 20            jr z,4F
 209+ 95D5 D1               pop de
 210+ 95D6 7B           	ld a,e
 211+ 95D7 AE           	xor (hl)
 212+ 95D8 77           	ld (hl),a
 213+ 95D9 23           	inc hl
 214+ 95DA 7A           	ld a,d
 215+ 95DB AE           	xor (hl)
 216+ 95DC 77           	ld (hl),a
 217+ 95DD 2B           	dec hl
 218+ 95DE 24           	inc h
 219+ 95DF 7C               ld a,h
 220+ 95E0 E6 07            and 7
 221+ 95E2 20 0A            jr nz,3F
 222+ 95E4 7D               ld a,l
 223+ 95E5 C6 20            add a,$20
 224+ 95E7 6F               ld l,a
 225+ 95E8 38 04            jr c,3F
 226+ 95EA 7C               ld a,h
 227+ 95EB D6 08            sub 8
 228+ 95ED 67               ld h,a
 229+ 95EE 7C           3 ld a,h
 230+ 95EF FE 58            cp $58
 231+ 95F1 28 02            jr z,4F
 232+ 95F3 10 C1            djnz 1B
 233+ 95F5 ED 7B 96 88  4 ld sp,(Stack)
 234+ 95F9 C9           	ret
 235+ 95FA
 236+ 95FA ED 73 96 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 95FE FD F9        	ld sp,iy
 238+ 9600 06 08            ld b,8
 239+ 9602 D1           1 pop de
 240+ 9603 D1           	pop de
 241+ 9604 7B           	ld a,e
 242+ 9605 AE           	xor (hl)
 243+ 9606 77           	ld (hl),a
 244+ 9607 24            	inc h
 245+ 9608 7C               ld a,h
 246+ 9609 E6 07            and 7
 247+ 960B 20 0A            jr nz,2F
 248+ 960D 7D               ld a,l
 249+ 960E C6 20            add a,$20
 250+ 9610 6F               ld l,a
 251+ 9611 38 04            jr c,2F
 252+ 9613 7C               ld a,h
 253+ 9614 D6 08            sub 8
 254+ 9616 67               ld h,a
 255+ 9617 7C           2 ld a,h
 256+ 9618 FE 58            cp $58
 257+ 961A 28 1B            jr z,4F
 258+ 961C D1               pop de
 259+ 961D 7A           	ld a,d
 260+ 961E AE           	xor (hl)
 261+ 961F 77           	ld (hl),a
 262+ 9620 24           	inc h
 263+ 9621 7C               ld a,h
 264+ 9622 E6 07            and 7
 265+ 9624 20 0A            jr nz,3F
 266+ 9626 7D               ld a,l
 267+ 9627 C6 20            add a,$20
 268+ 9629 6F               ld l,a
 269+ 962A 38 04            jr c,3F
 270+ 962C 7C               ld a,h
 271+ 962D D6 08            sub 8
 272+ 962F 67               ld h,a
 273+ 9630 7C           3 ld a,h
 274+ 9631 FE 58            cp $58
 275+ 9633 28 02            jr z,4F
 276+ 9635 10 CB            djnz 1B
 277+ 9637 ED 7B 96 88  4 ld sp,(Stack)
 278+ 963B C9           	ret
 279+ 963C
 280+ 963C ED 73 96 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9640 FD F9        	ld sp,iy
 282+ 9642 06 08            ld b,8
 283+ 9644 D1           1 pop de
 284+ 9645 7B           	ld a,e
 285+ 9646 AE           	xor (hl)
 286+ 9647 77           	ld (hl),a
 287+ 9648 23           	inc hl
 288+ 9649 7A           	ld a,d
 289+ 964A AE           	xor (hl)
 290+ 964B 77           	ld (hl),a
 291+ 964C 2B           	dec hl
 292+ 964D 24             	inc h
 293+ 964E 7C               ld a,h
 294+ 964F E6 07            and 7
 295+ 9651 20 0A            jr nz,2F
 296+ 9653 7D               ld a,l
 297+ 9654 C6 20            add a,$20
 298+ 9656 6F               ld l,a
 299+ 9657 38 04            jr c,2F
 300+ 9659 7C               ld a,h
 301+ 965A D6 08            sub 8
 302+ 965C 67               ld h,a
 303+ 965D 7C           2 ld a,h
 304+ 965E FE 58            cp $58
 305+ 9660 28 21            jr z,4F
 306+ 9662 D1               pop de
 307+ 9663 7A           	ld a,d
 308+ 9664 AE           	xor (hl)
 309+ 9665 77           	ld (hl),a
 310+ 9666 23           	inc hl
 311+ 9667 D1               pop de
 312+ 9668 7B           	ld a,e
 313+ 9669 AE           	xor (hl)
 314+ 966A 77           	ld (hl),a
 315+ 966B 2B           	dec hl
 316+ 966C 24           	inc h
 317+ 966D 7C               ld a,h
 318+ 966E E6 07            and 7
 319+ 9670 20 0A            jr nz,3F
 320+ 9672 7D               ld a,l
 321+ 9673 C6 20            add a,$20
 322+ 9675 6F               ld l,a
 323+ 9676 38 04            jr c,3F
 324+ 9678 7C               ld a,h
 325+ 9679 D6 08            sub 8
 326+ 967B 67               ld h,a
 327+ 967C 7C           3 ld a,h
 328+ 967D FE 58            cp $58
 329+ 967F 28 02            jr z,4F
 330+ 9681 10 C1            djnz 1B
 331+ 9683 ED 7B 96 88  4 ld sp,(Stack)
 332+ 9687 C9           	ret
 333+ 9688
 334+ 9688 ED 73 96 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 968C FD F9        	ld sp,iy
 336+ 968E 06 08            ld b,8
 337+ 9690 D1           1 pop de
 338+ 9691 7B           	ld a,e
 339+ 9692 AE           	xor (hl)
 340+ 9693 77           	ld (hl),a
 341+ 9694 24            	inc h
 342+ 9695 7C               ld a,h
 343+ 9696 E6 07            and 7
 344+ 9698 20 0A            jr nz,2F
 345+ 969A 7D               ld a,l
 346+ 969B C6 20            add a,$20
 347+ 969D 6F               ld l,a
 348+ 969E 38 04            jr c,2F
 349+ 96A0 7C               ld a,h
 350+ 96A1 D6 08            sub 8
 351+ 96A3 67               ld h,a
 352+ 96A4 7C           2 ld a,h
 353+ 96A5 FE 58            cp $58
 354+ 96A7 28 1C            jr z,4F
 355+ 96A9 D1               pop de
 356+ 96AA 7A           	ld a,d
 357+ 96AB AE           	xor (hl)
 358+ 96AC 77           	ld (hl),a
 359+ 96AD 24           	inc h
 360+ 96AE 7C               ld a,h
 361+ 96AF E6 07            and 7
 362+ 96B1 20 0A            jr nz,3F
 363+ 96B3 7D               ld a,l
 364+ 96B4 C6 20            add a,$20
 365+ 96B6 6F               ld l,a
 366+ 96B7 38 04            jr c,3F
 367+ 96B9 7C               ld a,h
 368+ 96BA D6 08            sub 8
 369+ 96BC 67               ld h,a
 370+ 96BD 7C           3 ld a,h
 371+ 96BE FE 58            cp $58
 372+ 96C0 28 03            jr z,4F
 373+ 96C2 D1               pop de
 374+ 96C3 10 CB            djnz 1B
 375+ 96C5 ED 7B 96 88  4 ld sp,(Stack)
 376+ 96C9 C9           	ret
 377+ 96CA
 378+ 96CA              ; ---------------------------------------------------
 379+ 96CA              ;
 380+ 96CA              ;   27/02/23
 381+ 96CA              ;
 382+ 96CA              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 96CA              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 96CA              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 96CA
 386+ 96CA ED 73 96 88  Pinta_Disparo ld (Stack),sp
 387+ 96CE FD F9            ld sp,iy
 388+ 96D0 06 03            ld b,3
 389+ 96D2 D1           1 pop de
 390+ 96D3 7B               ld a,e
 391+ 96D4 AE               xor (hl)
 392+ 96D5 77               ld (hl),a
 393+ 96D6 23               inc hl
 394+ 96D7 7A               ld a,d
 395+ 96D8 AE               xor (hl)
 396+ 96D9 77               ld (hl),a
 397+ 96DA 2B               dec hl
 398+ 96DB
 399+ 96DB 24               inc h
 400+ 96DC 7C               ld a,h
 401+ 96DD E6 07            and 7
 402+ 96DF 20 0A            jr nz,2F
 403+ 96E1 7D               ld a,l
 404+ 96E2 C6 20            add a,$20
 405+ 96E4 6F               ld l,a
 406+ 96E5 38 04            jr c,2F
 407+ 96E7 7C               ld a,h
 408+ 96E8 D6 08            sub 8
 409+ 96EA 67               ld h,a
 410+ 96EB 7C           2 ld a,h
 411+ 96EC FE 58            cp $58
 412+ 96EE 28 02            jr z,3F
 413+ 96F0
 414+ 96F0 10 E0            djnz 1B
 415+ 96F2 ED 7B 96 88  3 ld sp,(Stack)
 416+ 96F6 C9               ret
 417+ 96F7
# file closed: Rutinas_de_impresion_sprites.asm
1762  96F7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 96F7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 96F7              ;
   3+ 96F7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 96F7              ;
   5+ 96F7              ; *****************************************************************************************************************************************************************************************
   6+ 96F7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 96F7
   8+ 96F7 7C           calcula_tercio ld a,h
   9+ 96F8 E6 18        	and $18
  10+ 96FA CB 2F        	sra a
  11+ 96FC CB 2F        	sra a
  12+ 96FE CB 2F        	sra a
  13+ 9700 C9           	ret
  14+ 9701
# file closed: calcula_tercio.asm
1763  9701              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9701              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9701              ;
   3+ 9701              ;
   4+ 9701              ;	CLS.
   5+ 9701              ;
   6+ 9701              ;	Limpia la pantalla y define sus atributos.
   7+ 9701              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9701              ;
   9+ 9701              ;	COLORES: 0 ..... NEGRO
  10+ 9701              ;    		 1 ..... AZUL
  11+ 9701              ; 			 2 ..... ROJO
  12+ 9701              ;			 3 ..... MAGENTA
  13+ 9701              ; 			 4 ..... VERDE
  14+ 9701              ; 			 5 ..... CIAN
  15+ 9701              ;			 6 ..... AMARILLO
  16+ 9701              ; 			 7 ..... BLANCO
  17+ 9701              ;
  18+ 9701              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9701              ;
  20+ 9701              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9701
  22+ 9701
  23+ 9701 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9704 11 01 40     	LD DE,$4001
  25+ 9707 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 970A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 970C ED B0        	LDIR
  28+ 970E 01 FF 02     	LD BC,767
  29+ 9711 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9712 ED B0        	LDIR
  31+ 9714 C9           	ret
  32+ 9715
# file closed: Cls.asm
1764  9715              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9715
   2+ 9715              ; ******************************************************************************************************************************************************************************************
   3+ 9715              ;
   4+ 9715              ;   20/05/23
   5+ 9715              ;
   6+ 9715              ;	Recompone_posicion_inicio
   7+ 9715              ;
   8+ 9715              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9715              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9715              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9715              ;	_ a una u otra rutina.
  12+ 9715
  13+ 9715              Recompone_posicion_inicio
  14+ 9715
  15+ 9715 2A 56 88     	ld hl,(Posicion_inicio)
  16+ 9718 7D           	ld a,l
  17+ 9719 E6 1F        	and $1f
  18+ 971B 28 16        	jr z,1F
  19+ 971D
  20+ 971D FE 1F        	cp $1f
  21+ 971F 28 0D        	jr z,3F
  22+ 9721
  23+ 9721 21 6B 88     	ld hl,Ctrl_2
  24+ 9724 CB C6        	set 0,(hl)
  25+ 9726 2A 48 88     	ld hl,(Puntero_objeto)
  26+ 9729 22 86 88     	ld (Repone_puntero_objeto),hl
  27+ 972C 18 08        	jr 2F
  28+ 972E
  29+ 972E CD DC 98     3 call Mov_left
  30+ 9731 18 03        	jr 2F
  31+ 9733
  32+ 9733 CD B9 97     1 call Mov_right
  33+ 9736 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9739 22 48 88     	ld (Puntero_objeto),hl
  35+ 973C C9           	ret
  36+ 973D
  37+ 973D              ; ******************************************************************************************************************************************************************************************
  38+ 973D              ;
  39+ 973D              ;   27/05/23
  40+ 973D              ;
  41+ 973D              ;	Mov_down
  42+ 973D              ;
  43+ 973D              ; 	Mueve el Sprite X px hacia abajo.
  44+ 973D              ;
  45+ 973D              ;
  46+ 973D              Mov_down
  47+ 973D
  48+ 973D CD A7 97     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9740              ;																	; _ repone (Puntero_objeto).
  50+ 9740 21 66 88     	ld hl,Ctrl_0
  51+ 9743 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9745              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9745              ; 																	; _ en el caso de que no lo haya.
  54+ 9745 3A 70 88     	ld a,(Vel_down)
  55+ 9748 47           	ld b,a
  56+ 9749 2A 46 88         ld hl,(Posicion_actual)
  57+ 974C CD F7 96     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 974F E6 02        	and 2
  59+ 9751 28 17        	jr z,1F
  60+ 9753
  61+ 9753              ; Nos encontramos en el último tercio de pantalla.
  62+ 9753              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9753
  64+ 9753 7C           	ld a,h
  65+ 9754 FE 57        	cp $57
  66+ 9756 20 12        	jr nz,1F
  67+ 9758
  68+ 9758 7D           	ld a,l
  69+ 9759 C6 20        	add $20
  70+ 975B 30 0D        	jr nc,1F
  71+ 975D
  72+ 975D              ; ------------------------------
  73+ 975D              ;
  74+ 975D              ;	12/01/24
  75+ 975D
  76+ 975D              ;	call Reaparece_arriba
  77+ 975D CD 69 9A     	call Reinicio
  78+ 9760
  79+ 9760              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9760
  81+ 9760 3A A4 88     	ld a,(Ctrl_3)
  82+ 9763 CB CF        	set 1,a
  83+ 9765 32 A4 88     	ld (Ctrl_3),a
  84+ 9768
  85+ 9768 18 08        	jr 3F
  86+ 976A              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 976A              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 976A              ; ------------------------------
  89+ 976A
  90+ 976A CD E4 93     1 call NextScan
  91+ 976D 22 46 88     	ld (Posicion_actual),hl
  92+ 9770 10 DA            djnz 2B
  93+ 9772 CD 8F 9A     3 call Genera_coordenadas
  94+ 9775 C9           	ret
  95+ 9776
  96+ 9776              ; ******************************************************************************************************************************************************************************************
  97+ 9776              ;
  98+ 9776              ;   27/05/23
  99+ 9776              ;
 100+ 9776              ;	Mov_up
 101+ 9776              ;
 102+ 9776              ; 	Mueve el Sprite hacia arriba.
 103+ 9776              ;
 104+ 9776              ;
 105+ 9776              Mov_up
 106+ 9776
 107+ 9776 CD A7 97     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9779              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9779 21 66 88     	ld hl,Ctrl_0
 110+ 977C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 977E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 977E              ; 																		; _ en el caso de que no lo haya.
 113+ 977E 3A 6F 88     	ld a,(Vel_up)
 114+ 9781 47           	ld b,a
 115+ 9782 2A 46 88     	ld hl,(Posicion_actual)
 116+ 9785 CD F7 96     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9788 A7           	and a
 118+ 9789 20 10        	jr nz,1F
 119+ 978B
 120+ 978B              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 978B              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 978B
 123+ 978B 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 978C FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 978E 20 0B            jr nz,1F
 126+ 9790 7D               ld a,l
 127+ 9791 D6 20            sub $20
 128+ 9793 30 06            jr nc,1F
 129+ 9795 25               dec h
 130+ 9796
 131+ 9796              ; -----------------------------
 132+ 9796 CD 4A 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9799              ;	call Reinicio
 134+ 9799              ; -----------------------------
 135+ 9799
 136+ 9799 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 979B CD F3 93     1 call PreviousScan
 138+ 979E 22 46 88     	ld (Posicion_actual),hl
 139+ 97A1 10 E2            djnz 3B
 140+ 97A3 CD 8F 9A     2 call Genera_coordenadas
 141+ 97A6 C9           	ret
 142+ 97A7
 143+ 97A7              ; -----------------------------
 144+ 97A7              ;
 145+ 97A7              ;	27/5/23
 146+ 97A7              ;
 147+ 97A7              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 97A7              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 97A7              ;
 150+ 97A7              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 97A7              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 97A7              ;
 153+ 97A7              ;	Modifica: A y (Puntero_objeto).
 154+ 97A7
 155+ 97A7 3A 6B 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 97AA CB 47        	bit 0,a
 157+ 97AC C8           	ret z
 158+ 97AD CB 87        	res 0,a
 159+ 97AF 32 6B 88     	ld (Ctrl_2),a
 160+ 97B2 2A 86 88     	ld hl,(Repone_puntero_objeto)
 161+ 97B5 22 48 88     	ld (Puntero_objeto),hl
 162+ 97B8 C9           	ret
 163+ 97B9
 164+ 97B9              ; ******************************************************************************************************************************************************************************************
 165+ 97B9              ;
 166+ 97B9              ;	19/10/22
 167+ 97B9              ;
 168+ 97B9              ;	Mov_right.
 169+ 97B9              ;
 170+ 97B9              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 97B9              ;
 172+ 97B9
 173+ 97B9 3A 66 88     Mov_right ld a,(Ctrl_0)
 174+ 97BC CB 77        	bit 6,a
 175+ 97BE 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 97C0
 177+ 97C0 CD F8 99     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 97C3 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 97C4
 180+ 97C4 21 66 88     	ld hl,Ctrl_0
 181+ 97C7 CB E6        	set 4,(hl)
 182+ 97C9 18 52        	jr 8F
 183+ 97CB
 184+ 97CB 21 66 88     10 ld hl,Ctrl_0
 185+ 97CE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 97D0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 97D0              ; 																	; _ en el caso de que no lo haya.
 188+ 97D0 3A 4A 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 97D3 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 97D5 20 46        	jr nz,8F
 191+ 97D7
 192+ 97D7 3A 4C 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 97DA A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 97DB 28 40        	jr z,8F
 195+ 97DD
 196+ 97DD              ; ---------- ---------- ----------
 197+ 97DD              ;
 198+ 97DD              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 97DD
 200+ 97DD 3A 6E 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 97E0 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 97E2 28 11        	jr z,1F
 203+ 97E4 38 06        	jr c,6F
 204+ 97E6 FE 04        	cp 4
 205+ 97E8 28 14        	jr z,7F
 206+ 97EA 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 97EC
 208+ 97EC              ; ---------- ---------- ----------
 209+ 97EC              ;
 210+ 97EC              ; Perfiles de velocidad
 211+ 97EC              ;
 212+ 97EC
 213+ 97EC 3A 4C 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 97EF FE FE        	cp $fe
 215+ 97F1 20 2A        	jr nz,8F
 216+ 97F3 18 10        	jr 3F
 217+ 97F5 3A 4C 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 97F8 FE FD        	cp $fd
 219+ 97FA 20 21        	jr nz,8F
 220+ 97FC 18 07        	jr 3F
 221+ 97FE 3A 4C 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9801 FE FB        	cp $fb
 223+ 9803 20 18        	jr nz,8F
 224+ 9805
 225+ 9805              ; ---------- ---------- ----------
 226+ 9805
 227+ 9805              3
 228+ 9805 CD 38 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9808              ;	call Reinicio
 230+ 9808
 231+ 9808              ; ---------- ---------- ----------
 232+ 9808              ;
 233+ 9808              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9808
 235+ 9808 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 980A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 980B CD 24 98     	call DESPLZ_DER
 238+ 980E C1           	pop bc
 239+ 980F 10 F9        	djnz 5B
 240+ 9811 2A 46 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9814 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9815 22 46 88     	ld (Posicion_actual),hl
 243+ 9818 CD 8F 9A     	call Genera_coordenadas
 244+ 981B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 981D
 246+ 981D              ; ---------- ---------- ----------
 247+ 981D
 248+ 981D 2A 46 88     8 ld hl,(Posicion_actual)
 249+ 9820 CD 24 98     	call DESPLZ_DER
 250+ 9823 C9           2 ret
 251+ 9824
 252+ 9824              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9824              ;
 254+ 9824              ;	22/9/22
 255+ 9824              ;
 256+ 9824
 257+ 9824 CD 33 98     DESPLZ_DER call Desplaza_derecha
 258+ 9827 CD 7F 98         call modifica_parametros_1er_DESPLZ_2
 259+ 982A CD A8 98         call Ciclo_completo
 260+ 982D 21 66 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9830 CB FE        	set 7,(hl)
 262+ 9832 C9           	ret
 263+ 9833
 264+ 9833              ; ******************************************************************************************************************************************************************************************
 265+ 9833              ;	15/02/23
 266+ 9833              ;
 267+ 9833
 268+ 9833 3A 6E 88     Desplaza_derecha ld a,(Vel_right)
 269+ 9836 47           	ld b,a
 270+ 9837 2A 52 88     	ld hl,(Puntero_DESPLZ_der)
 271+ 983A 23           1 inc hl
 272+ 983B 23           	inc hl
 273+ 983C 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 983E 22 52 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9841 CD A7 8A     	call Extrae_address
 276+ 9844 22 48 88     	ld (Puntero_objeto),hl
 277+ 9847
 278+ 9847              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9847
 280+ 9847              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9847              ; Cuántos movimientos hemos hecho ??
 282+ 9847              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9847
 284+ 9847 2A 4E 88     7 ld hl,(Indice_Sprite_der)
 285+ 984A EB           	ex de,hl
 286+ 984B A7           	and a
 287+ 984C ED 52        	sbc hl,de
 288+ 984E CB 3D        	srl l
 289+ 9850 3E 08        6 ld a,8
 290+ 9852 95           	sub l
 291+ 9853 30 1E        	jr nc,3F
 292+ 9855
 293+ 9855              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9855              ; B="0".
 295+ 9855
 296+ 9855 04           4 inc b
 297+ 9856 3C           	inc a
 298+ 9857 20 FC        	jr nz,4B
 299+ 9859 78           	ld a,b
 300+ 985A 08           	ex af,af
 301+ 985B 2A 4E 88     	ld hl,(Indice_Sprite_der)
 302+ 985E 23           5 inc hl
 303+ 985F 23           	inc hl
 304+ 9860 10 FC        	djnz 5B
 305+ 9862 22 52 88     	ld (Puntero_DESPLZ_der),hl
 306+ 9865 CD A7 8A     	call Extrae_address
 307+ 9868 22 48 88     	ld (Puntero_objeto),hl
 308+ 986B
 309+ 986B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 986B              ; _(Posicion_actual).
 311+ 986B
 312+ 986B 21 46 88     	ld hl,Posicion_actual
 313+ 986E 34           	inc (hl)
 314+ 986F 08               ex af,af
 315+ 9870 6F           	ld l,a
 316+ 9871 18 DD        	jr 6B
 317+ 9873
 318+ 9873              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9873
 320+ 9873 47           3 ld b,a
 321+ 9874 2A 50 88     	ld hl,(Indice_Sprite_izq)
 322+ 9877 23           2 inc hl
 323+ 9878 23           	inc hl
 324+ 9879 10 FC        	djnz 2B
 325+ 987B 22 54 88     	ld (Puntero_DESPLZ_izq),hl
 326+ 987E C9           8 ret
 327+ 987F
 328+ 987F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 987F              ;
 330+ 987F              ;	24/7/22
 331+ 987F              ;
 332+ 987F              ;	modifica_parametros_1er_DESPLZ_2
 333+ 987F              ;
 334+ 987F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 987F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 987F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 987F
 338+ 987F 3A 4C 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9882 A7           	and a
 340+ 9883 20 1F        	jr nz,1F
 341+ 9885 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9887 32 4C 88         ld (CTRL_DESPLZ),a
 343+ 988A
 344+ 988A 21 45 88     	ld hl,Columns
 345+ 988D 34           	inc (hl)
 346+ 988E 3A 58 88     	ld a,(Cuad_objeto)
 347+ 9891 E6 01        	and 1
 348+ 9893 28 0F        	jr z,1F
 349+ 9895 2A 46 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9898 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9899 22 46 88     	ld (Posicion_actual),hl
 352+ 989C CD 8F 9A     	call Genera_coordenadas
 353+ 989F CD 04 9A     	call Inc_CTRL_DESPLZ
 354+ 98A2 18 03        	jr 2F
 355+ 98A4 CD 04 9A     1 call Inc_CTRL_DESPLZ
 356+ 98A7 C9           2 ret
 357+ 98A8
 358+ 98A8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 98A8              ;
 360+ 98A8              ;	24/7/22
 361+ 98A8              ;
 362+ 98A8              ;	Ciclo_completo.
 363+ 98A8              ;
 364+ 98A8              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 98A8              ;
 366+ 98A8              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 98A8              ; 	Decrementamos (Columns).
 368+ 98A8              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 98A8              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 98A8
 371+ 98A8
 372+ 98A8 3A 4C 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 98AB FE FF        	cp $ff
 374+ 98AD 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 98AF E6 F0        	and $f0
 376+ 98B1 20 28        	jr nz,3F
 377+ 98B3
 378+ 98B3              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 98B3
 380+ 98B3 3A 4C 88     	ld a,(CTRL_DESPLZ)
 381+ 98B6 47           	ld b,a
 382+ 98B7 3E F8        	ld a,$f8
 383+ 98B9 80           	add b
 384+ 98BA 32 4C 88     	ld (CTRL_DESPLZ),a
 385+ 98BD 18 1C        	jr 3F
 386+ 98BF 21 45 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 98C2 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 98C3 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 98C4 32 4C 88     	ld (CTRL_DESPLZ),a
 390+ 98C7 3A 58 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 98CA E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 98CC 20 0A        	jr nz,2F
 393+ 98CE 2A 46 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 98D1 23           	inc hl
 395+ 98D2 22 46 88     	ld (Posicion_actual),hl
 396+ 98D5 CD 8F 9A     	call Genera_coordenadas
 397+ 98D8
 398+ 98D8              ; Inicia el puntero de Sprite.
 399+ 98D8
 400+ 98D8 CD BC 8A     2 call Inicia_puntero_objeto_der
 401+ 98DB C9           3 ret
 402+ 98DC
 403+ 98DC              ; ******************************************************************************************************************************************************************************************
 404+ 98DC              ;
 405+ 98DC              ;	15/02/23
 406+ 98DC              ;
 407+ 98DC              ;	Mov_left.
 408+ 98DC              ;
 409+ 98DC              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 98DC              ;
 411+ 98DC              Mov_left
 412+ 98DC
 413+ 98DC 21 66 88     	ld hl,Ctrl_0
 414+ 98DF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 98E1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 98E1              ; 																	; _ en el caso de que no lo haya.
 417+ 98E1 3A 66 88     	ld a,(Ctrl_0)
 418+ 98E4 CB 77        	bit 6,a
 419+ 98E6 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 98E8
 421+ 98E8 CD FE 99     	call Stop_Amadeus_left
 422+ 98EB C8           	ret z
 423+ 98EC 20 4A        	jr nz,8F
 424+ 98EE
 425+ 98EE 3A 4A 88     11 ld a,(Coordenada_X)
 426+ 98F1 A7           	and a
 427+ 98F2 20 44        	jr nz,8F
 428+ 98F4
 429+ 98F4 3A 4C 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 98F7 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 98F8 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 98FA
 433+ 98FA              ; ---------- ---------- ----------
 434+ 98FA
 435+ 98FA 3A 6D 88     	ld a,(Vel_left)
 436+ 98FD FE 02        	cp 2
 437+ 98FF 28 0F        	jr z,1F
 438+ 9901 38 04        	jr c,6F
 439+ 9903 FE 04        	cp 4
 440+ 9905 28 12        	jr z,7F
 441+ 9907
 442+ 9907              ; ---------- ---------- ----------
 443+ 9907
 444+ 9907 3A 4C 88     6 ld a,(CTRL_DESPLZ)
 445+ 990A FE F8        	cp $f8
 446+ 990C 20 2A        	jr nz,8F
 447+ 990E 18 10        	jr 4F
 448+ 9910 3A 4C 88     1 ld a,(CTRL_DESPLZ)
 449+ 9913 FE F9        	cp $f9
 450+ 9915 20 21        	jr nz,8F
 451+ 9917 18 07        	jr 4F
 452+ 9919 3A 4C 88     7 ld a,(CTRL_DESPLZ)
 453+ 991C FE FB        	cp $fb
 454+ 991E 20 18        	jr nz,8F
 455+ 9920
 456+ 9920              ; ---------- ---------- ----------
 457+ 9920
 458+ 9920              4
 459+ 9920 CD 26 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9923              ;	call Reinicio
 461+ 9923
 462+ 9923              ; ---------- ---------- ----------
 463+ 9923
 464+ 9923 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9925 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9926
 467+ 9926              ;	ld hl,(Indice_Sprite_izq)
 468+ 9926              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9926
 470+ 9926 CD 3F 99     	call DESPLZ_IZQ
 471+ 9929 C1           	pop bc
 472+ 992A 10 F9        	djnz 5B
 473+ 992C 2A 46 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 992F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9930 22 46 88     	ld (Posicion_actual),hl
 476+ 9933 CD 8F 9A     	call Genera_coordenadas
 477+ 9936 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9938
 479+ 9938              ; ---------- ---------- ----------
 480+ 9938
 481+ 9938              ; Movemos, no hay recolocación.
 482+ 9938
 483+ 9938 2A 46 88     8 ld hl,(Posicion_actual)
 484+ 993B CD 3F 99     	call DESPLZ_IZQ
 485+ 993E C9           2 ret
 486+ 993F
 487+ 993F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 993F              ;
 489+ 993F              ;	22/9/22
 490+ 993F
 491+ 993F              DESPLZ_IZQ
 492+ 993F
 493+ 993F CD 4E 99     	call Desplaza_izquierda
 494+ 9942 CD 9A 99         call modifica_parametros_1er_DESPLZ
 495+ 9945 CD C2 99     	call Ciclo_completo_2
 496+ 9948 21 66 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 994B CB BE        	res 7,(hl)
 498+ 994D C9           	ret
 499+ 994E
 500+ 994E              Desplaza_izquierda
 501+ 994E
 502+ 994E 3A 6D 88     	ld a,(Vel_left)
 503+ 9951 47           	ld b,a
 504+ 9952 2A 54 88     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9955 23           1 inc hl
 506+ 9956 23           	inc hl
 507+ 9957 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9959 22 54 88     	ld (Puntero_DESPLZ_izq),hl
 509+ 995C CD A7 8A     	call Extrae_address
 510+ 995F 22 48 88     	ld (Puntero_objeto),hl
 511+ 9962
 512+ 9962              ; Modifica (Puntero_DESPLZ_der).
 513+ 9962
 514+ 9962              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9962              ; Cuántos movimientos hemos hecho ??
 516+ 9962              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9962
 518+ 9962 2A 50 88     7 ld hl,(Indice_Sprite_izq)
 519+ 9965 EB           	ex de,hl
 520+ 9966 A7           	and a
 521+ 9967 ED 52        	sbc hl,de
 522+ 9969 CB 3D        	srl l
 523+ 996B 3E 08        6 ld a,8
 524+ 996D 95           	sub l
 525+ 996E 30 1E        	jr nc,3F
 526+ 9970
 527+ 9970              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9970              ; B="0".
 529+ 9970
 530+ 9970 04           4 inc b
 531+ 9971 3C           	inc a
 532+ 9972 20 FC        	jr nz,4B
 533+ 9974 78           	ld a,b
 534+ 9975 08           	ex af,af
 535+ 9976 2A 50 88     	ld hl,(Indice_Sprite_izq)
 536+ 9979 23           5 inc hl
 537+ 997A 23           	inc hl
 538+ 997B 10 FC        	djnz 5B
 539+ 997D 22 54 88     	ld (Puntero_DESPLZ_izq),hl
 540+ 9980 CD A7 8A     	call Extrae_address
 541+ 9983 22 48 88     	ld (Puntero_objeto),hl
 542+ 9986
 543+ 9986              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9986              ; _(Posicion_actual).
 545+ 9986
 546+ 9986 21 46 88     	ld hl,Posicion_actual
 547+ 9989 35           	dec (hl)
 548+ 998A 08           	ex af,af
 549+ 998B 6F           	ld l,a
 550+ 998C 18 DD        	jr 6B
 551+ 998E
 552+ 998E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 998E
 554+ 998E 47           3 ld b,a
 555+ 998F 2A 4E 88     	ld hl,(Indice_Sprite_der)
 556+ 9992 23           2 inc hl
 557+ 9993 23           	inc hl
 558+ 9994 10 FC        	djnz 2B
 559+ 9996 22 52 88     	ld (Puntero_DESPLZ_der),hl
 560+ 9999 C9           8 ret
 561+ 999A
 562+ 999A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 999A              ;
 564+ 999A              ;	modifica_parametros_1er_DESPLZ
 565+ 999A              ;
 566+ 999A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 999A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 999A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 999A
 570+ 999A 3A 4C 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 999D A7           	and a
 572+ 999E 20 1E        	jr nz,1F
 573+ 99A0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 99A1 32 4C 88         ld (CTRL_DESPLZ),a
 575+ 99A4 21 45 88     	ld hl,Columns
 576+ 99A7 34           	inc (hl)
 577+ 99A8 3A 58 88     	ld a,(Cuad_objeto)
 578+ 99AB E6 01        	and 1
 579+ 99AD 20 0F        	jr nz,1F
 580+ 99AF 2A 46 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 99B2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 99B3 22 46 88     	ld (Posicion_actual),hl
 583+ 99B6 CD 8F 9A     	call Genera_coordenadas
 584+ 99B9 CD 15 9A     	call Dec_CTRL_DESPLZ
 585+ 99BC 18 03        	jr 2F
 586+ 99BE CD 15 9A     1 call Dec_CTRL_DESPLZ
 587+ 99C1 C9           2 ret
 588+ 99C2
 589+ 99C2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 99C2
 591+ 99C2 3A 4C 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 99C5 FE F7        	cp $f7
 593+ 99C7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 99C9 30 2C        	jr nc,3F
 595+ 99CB
 596+ 99CB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 99CB
 598+ 99CB 06 00        	ld b,0
 599+ 99CD 04           4 inc b
 600+ 99CE 3C           	inc a
 601+ 99CF FE F7        	cp $f7
 602+ 99D1 20 FA        	jr nz,4B
 603+ 99D3 3E FF        	ld a,$ff
 604+ 99D5 90           	sub b
 605+ 99D6 32 4C 88     	ld (CTRL_DESPLZ),a
 606+ 99D9 18 1C        	jr 3F
 607+ 99DB
 608+ 99DB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 99DB
 610+ 99DB 21 45 88     1 ld hl,Columns
 611+ 99DE 35           	dec (hl)
 612+ 99DF AF           	xor a
 613+ 99E0 32 4C 88     	ld (CTRL_DESPLZ),a
 614+ 99E3 3A 58 88     	ld a,(Cuad_objeto)
 615+ 99E6 E6 01        	and 1
 616+ 99E8 28 0A        	jr z,2F
 617+ 99EA 2A 46 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 99ED 2B           	dec hl
 619+ 99EE 22 46 88     	ld (Posicion_actual),hl
 620+ 99F1 CD 8F 9A     	call Genera_coordenadas
 621+ 99F4
 622+ 99F4              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 99F4
 624+ 99F4 CD CF 8A     2 call Inicia_puntero_objeto_izq
 625+ 99F7 C9           3 ret
 626+ 99F8
 627+ 99F8              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 99F8              ;
 629+ 99F8              ;	19/10/22
 630+ 99F8              ;
 631+ 99F8              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 99F8              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 99F8
 634+ 99F8 3A 4A 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 99FB FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 99FD C9           	ret
 637+ 99FE
 638+ 99FE              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 99FE              ;
 640+ 99FE              ;	19/10/22
 641+ 99FE              ;
 642+ 99FE              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 99FE              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 99FE
 645+ 99FE 3A 4A 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9A01 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9A03 C9           	ret
 648+ 9A04
 649+ 9A04              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9A04              ;
 651+ 9A04              ;	24/7/22
 652+ 9A04              ;
 653+ 9A04              ;	Inc_CTRL_DESPLZ
 654+ 9A04              ;
 655+ 9A04              ;
 656+ 9A04              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9A04
 658+ 9A04 21 4C 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9A07 3A 6E 88     	ld a,(Vel_right)
 660+ 9A0A A7           	and a
 661+ 9A0B 28 06        	jr z,1F
 662+ 9A0D 47           	ld b,a
 663+ 9A0E 34           3 inc (hl)
 664+ 9A0F 10 FD        	djnz 3B
 665+ 9A11 18 01        	jr 2F
 666+ 9A13 34           1 inc (hl)
 667+ 9A14 C9           2 ret
 668+ 9A15
 669+ 9A15              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9A15              ;
 671+ 9A15              ;	5/2/23
 672+ 9A15              ;
 673+ 9A15              ;	Dec_CTRL_DESPLZ
 674+ 9A15              ;
 675+ 9A15              ;
 676+ 9A15              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9A15
 678+ 9A15 21 4C 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9A18 3A 6D 88     	ld a,(Vel_left)
 680+ 9A1B A7           	and a
 681+ 9A1C 28 06        	jr z,1F
 682+ 9A1E 47           	ld b,a
 683+ 9A1F 35           3 dec (hl)
 684+ 9A20 10 FD        	djnz 3B
 685+ 9A22 18 01        	jr 2F
 686+ 9A24 35           1 dec (hl)
 687+ 9A25 C9           2 ret
 688+ 9A26
 689+ 9A26              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9A26
 691+ 9A26 2A 46 88     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9A29 01 1F 00     	ld bc,31
 693+ 9A2C A7           	and a
 694+ 9A2D ED 4A        	adc hl,bc
 695+ 9A2F 22 46 88     	ld (Posicion_actual),hl
 696+ 9A32 21 66 88     	ld hl,Ctrl_0														; $xxx1
 697+ 9A35 CB C6        	set 0,(hl)
 698+ 9A37 C9           	ret
 699+ 9A38
 700+ 9A38              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9A38
 702+ 9A38 2A 46 88     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9A3B 01 1F 00     	ld bc,31
 704+ 9A3E A7           	and a
 705+ 9A3F ED 42        	sbc hl,bc
 706+ 9A41 22 46 88     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9A44 21 66 88     	ld hl,Ctrl_0
 708+ 9A47 CB CE        	set 1,(hl)
 709+ 9A49 C9           	ret
 710+ 9A4A
 711+ 9A4A              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9A4A
 713+ 9A4A 24           Reaparece_abajo inc h
 714+ 9A4B 01 E0 17     	ld bc,$17e0
 715+ 9A4E A7           	and a
 716+ 9A4F ED 4A        	adc hl,bc
 717+ 9A51 22 46 88     	ld (Posicion_actual),hl
 718+ 9A54 21 66 88     	ld hl,Ctrl_0
 719+ 9A57 CB D6        	set 2,(hl)
 720+ 9A59 C9           	ret
 721+ 9A5A
 722+ 9A5A              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9A5A
 724+ 9A5A 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9A5D A7           	and a
 726+ 9A5E ED 42        	sbc hl,bc
 727+ 9A60 22 46 88     	ld (Posicion_actual),hl
 728+ 9A63 21 66 88     	ld hl,Ctrl_0
 729+ 9A66 CB DE        	set 3,(hl)
 730+ 9A68 C9           	ret
 731+ 9A69
 732+ 9A69              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9A69              ;
 734+ 9A69              ;	15/07/23
 735+ 9A69
 736+ 9A69              Reinicio
 737+ 9A69
 738+ 9A69              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9A69
 740+ 9A69 AF           	xor a
 741+ 9A6A 21 7D 88     	ld hl,Puntero_indice_mov_bucle
 742+ 9A6D CD 8B 9A     	call Limpia_contenido_hl
 743+ 9A70
 744+ 9A70 21 46 88     	ld hl,Posicion_actual
 745+ 9A73 CD 8B 9A     	call Limpia_contenido_hl
 746+ 9A76
 747+ 9A76 CD 9A 86     	call Inicializa_Puntero_indice_mov
 748+ 9A79 CD 4C 9D     	call Inicia_Puntero_mov
 749+ 9A7C
 750+ 9A7C 21 7F 88     	ld hl,Incrementa_puntero
 751+ 9A7F 06 05        	ld b,5
 752+ 9A81 77           1 ld (hl),a
 753+ 9A82 23           	inc hl
 754+ 9A83 10 FC        	djnz 1B
 755+ 9A85
 756+ 9A85 21 6B 88     	ld hl,Ctrl_2
 757+ 9A88 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9A8A
 759+ 9A8A C9           	ret
 760+ 9A8B
 761+ 9A8B 77           Limpia_contenido_hl	ld (hl),a
 762+ 9A8C 23           	inc hl
 763+ 9A8D 77           	ld (hl),a
 764+ 9A8E C9           	ret
 765+ 9A8F
 766+ 9A8F
# file closed: Direcciones.asm
1765  9A8F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9A8F              ; ------------------------------------------------------------------------
   2+ 9A8F              ;
   3+ 9A8F              ;	30/1/24
   4+ 9A8F              ;
   5+ 9A8F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9A8F              ;	Fila superior "0", Columna izquierda "0".
   7+ 9A8F              ;
   8+ 9A8F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9A8F              ;
  10+ 9A8F              ;	Modifica: A,BC y DE.
  11+ 9A8F
  12+ 9A8F 7D           Genera_coordenadas ld a,l
  13+ 9A90 E6 1F        	and $1f
  14+ 9A92 32 4A 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9A95
  16+ 9A95 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9A96 FE 40        	cp $40
  18+ 9A98 38 1C        	jr c,4F
  19+ 9A9A
  20+ 9A9A CD F7 96     	call calcula_tercio
  21+ 9A9D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9A9E
  23+ 9A9E 1E 00        	ld e,0
  24+ 9AA0 7D           	ld a,l
  25+ 9AA1 E6 E0        	and $e0
  26+ 9AA3 28 01        	jr z,1F
  27+ 9AA5 04           	inc b
  28+ 9AA6
  29+ 9AA6 04           1 inc b
  30+ 9AA7 05           	dec b
  31+ 9AA8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9AAA              ;														; _ , salimos.
  33+ 9AAA 1C           3 inc e
  34+ 9AAB D6 20        	sub 32
  35+ 9AAD 20 FB        	jr nz,3B
  36+ 9AAF 10 F5        	djnz 1B
  37+ 9AB1
  38+ 9AB1 7B           2 ld a,e
  39+ 9AB2 32 4B 88     	ld (Coordenada_y),a
  40+ 9AB5 C9           	ret
  41+ 9AB6
  42+ 9AB6 AF           4 xor a
  43+ 9AB7 32 4B 88     	ld (Coordenada_y),a
  44+ 9ABA C9           	ret
  45+ 9ABB
  46+ 9ABB              ; ------------------------------------------------------------------------
  47+ 9ABB              ;	28/05/23
  48+ 9ABB              ;
  49+ 9ABB              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9ABB              ;	Fila superior "0", Columna izquierda "0".
  51+ 9ABB              ;
  52+ 9ABB              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9ABB              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9ABB              ;
  55+ 9ABB              ;		DE="$120d"
  56+ 9ABB              ;
  57+ 9ABB              ;		D, (Coordenada_X), Columnas, $12
  58+ 9ABB              ;		E, (Coordenada_y), Filas, $0d
  59+ 9ABB              ;
  60+ 9ABB              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9ABB
  62+ 9ABB              ;	Modifica: A,BC y DE.
  63+ 9ABB
  64+ 9ABB
  65+ 9ABB              Genera_coordenadas_disparo
  66+ 9ABB
  67+ 9ABB              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9ABB
  69+ 9ABB 7D           	ld a,l
  70+ 9ABC E6 1F        	and $1f
  71+ 9ABE 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9ABF CD F7 96     	call calcula_tercio
  73+ 9AC2 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9AC3 1E 00        	ld e,0
  75+ 9AC5 7D           	ld a,l
  76+ 9AC6 E6 E0        	and $e0
  77+ 9AC8 28 01        	jr z,1F
  78+ 9ACA 04           	inc b
  79+ 9ACB 1C           1 inc e
  80+ 9ACC D6 20        	sub 32
  81+ 9ACE 20 FB        	jr nz,1B
  82+ 9AD0 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9AD2 C9           	ret
  84+ 9AD3
# file closed: Genera_coordenadas.asm
1766  9AD3              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9AD3              ; Relojes y temporizaciones.
   2+ 9AD3
   3+ 9AD3              ; ------------------------------------------------------
   4+ 9AD3              ;
   5+ 9AD3              ;	16/7/23
   6+ 9AD3              ;
   7+ 9AD3              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9AD3              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9AD3              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9AD3              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9AD3              ;
  12+ 9AD3              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9AD3              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9AD3
  15+ 9AD3              ; Disparo_entidad db 1
  16+ 9AD3              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9AD3              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9AD3
  19+ 9AD3              Habilita_disparos
  20+ 9AD3
  21+ 9AD3 7E           	ld a,(hl)
  22+ 9AD4 A7           	and a
  23+ 9AD5 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9AD6
  25+ 9AD6 EB           	ex de,hl
  26+ 9AD7
  27+ 9AD7 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9AD8 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9AD9
  30+ 9AD9              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9AD9
  32+ 9AD9 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9ADA 7E           	ld a,(hl)
  34+ 9ADB 23           	inc hl
  35+ 9ADC 77           	ld (hl),a
  36+ 9ADD
  37+ 9ADD EB           	ex de,hl						; Habilitamos disparo.
  38+ 9ADE 3E 01        	ld a,1
  39+ 9AE0 77           	ld (hl),a
  40+ 9AE1 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1767  9AE2              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9AE2
   2+ 9AE2
   3+ 9AE2              ;   07/07/23
   4+ 9AE2              ;
   5+ 9AE2              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9AE2              ;
   7+ 9AE2              ;   Codificación:
   8+ 9AE2              ;
   9+ 9AE2              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9AE2              ;
  11+ 9AE2              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9AE2              ;
  13+ 9AE2              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9AE2              ;
  15+ 9AE2              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9AE2              ;
  17+ 9AE2              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9AE2              ;                               ..... %01000010 Vel_up 4
  19+ 9AE2              ;                                               Vel_down 2
  20+ 9AE2              ;                               ..... $42
  21+ 9AE2              ;
  22+ 9AE2              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9AE2              ;
  24+ 9AE2              ;                               ..... %01000010 Vel_left 4
  25+ 9AE2              ;                                               Vel_right 2
  26+ 9AE2              ;                               ..... $42
  27+ 9AE2              ;
  28+ 9AE2              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9AE2              ;
  30+ 9AE2              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9AE2              ;
  32+ 9AE2              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9AE2              ;
  34+ 9AE2              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9AE2              ;                                     $53
  36+ 9AE2              ;
  37+ 9AE2              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9AE2              ;
  39+ 9AE2              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9AE2              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9AE2              ;
  42+ 9AE2              ;                       Arriba ..... $81
  43+ 9AE2              ;                       Arriba - izquierda ..... $a1
  44+ 9AE2              ;                       Arriba - derecha ..... $91
  45+ 9AE2              ;
  46+ 9AE2              ;                       Abajo ..... $41
  47+ 9AE2              ;                       Abajo - izquierda ..... $61
  48+ 9AE2              ;                       Abajo - derecha ..... $51
  49+ 9AE2              ;
  50+ 9AE2              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9AE2              ;
  52+ 9AE2              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9AE2              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9AE2              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9AE2              ;
  56+ 9AE2              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9AE2              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9AE2              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9AE2              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9AE2              ;
  61+ 9AE2              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9AE2              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9AE2              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9AE2              ;
  65+ 9AE2              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9AE2              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9AE2              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9AE2              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9AE2
  70+ 9AE2              ; ----- ----- ----- ----- -----
  71+ 9AE2
  72+ 9AE2 0E 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9AE4 16 9B            defw F_1
  74+ 9AE6 20 9B            defw F_2
  75+ 9AE8 2A 9B            defw Codo_abajo_derecha
  76+ 9AEA 5E 9B            defw Derecha_y_subiendo
  77+ 9AEC 68 9B            defw Derecha_y_subiendo_1
  78+ 9AEE 72 9B            defw F_3
  79+ 9AF0 7C 9B            defw F_4
  80+ 9AF2 86 9B            defw Derecha_y_bajando
  81+ 9AF4 90 9B            defw Derecha_y_bajando_1
  82+ 9AF6 9A 9B            defw Derecha_y_bajando_2
  83+ 9AF8 A4 9B            defw Codo_derecha_abajo
  84+ 9AFA D4 9B            defw Codo_abajo_izq.
  85+ 9AFC 08 9C            defw Izquierda_y_subiendo
  86+ 9AFE 12 9C            defw Izquierda_y_subiendo_1
  87+ 9B00 1C 9C            defw F_5
  88+ 9B02 26 9C            defw F_6
  89+ 9B04 30 9C            defw Izquierda_y_bajando
  90+ 9B06 3A 9C            defw Izquierda_y_bajando_1
  91+ 9B08 44 9C            defw Izquierda_y_bajando_2
  92+ 9B0A 4E 9C            defw Codo_izquierda_abajo
  93+ 9B0C 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9B0E
  95+ 9B0E 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9B12 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9B16
  98+ 9B16 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9B1A 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9B1E 08 00
 100+ 9B20 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9B24 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9B28 0F FE
 102+ 9B2A
 103+ 9B2A 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9B2E 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9B32 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9B36 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9B3A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9B3E 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9B42 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9B46 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9B4A 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9B4E 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9B52 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9B56 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9B5A 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9B5E
 117+ 9B5E 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9B62 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9B66 06 00
 119+ 9B68
 120+ 9B68 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9B6C 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9B70 02 00
 122+ 9B72
 123+ 9B72 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9B76 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9B7A 04 00
 125+ 9B7C 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9B80 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9B84 08 00
 127+ 9B86
 128+ 9B86 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9B8A 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9B8E 02 00
 130+ 9B90
 131+ 9B90 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9B94 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9B98 06 00
 133+ 9B9A
 134+ 9B9A 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9B9E 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9BA2 06 00
 136+ 9BA4
 137+ 9BA4              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9BA4
 139+ 9BA4 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9BA8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9BAC 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9BB0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9BB4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9BB8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9BBC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9BC0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9BC4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9BC8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9BCC 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9BD0 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9BD4
 152+ 9BD4 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9BD8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9BDC 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9BE0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9BE4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9BE8 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9BEC 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9BF0 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9BF4 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9BF8 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9BFC 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9C00 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9C04 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9C08
 166+ 9C08 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9C0C 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9C10 06 00
 168+ 9C12
 169+ 9C12 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9C16 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9C1A 02 00
 171+ 9C1C
 172+ 9C1C 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9C20 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9C24 04 00
 174+ 9C26 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9C2A 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9C2E 08 00
 176+ 9C30
 177+ 9C30 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9C34 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9C38 02 00
 179+ 9C3A
 180+ 9C3A 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9C3E 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9C42 06 00
 182+ 9C44
 183+ 9C44 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9C48 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9C4C 06 00
 185+ 9C4E
 186+ 9C4E 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9C52 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9C56 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9C5A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9C5E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9C62 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9C66 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9C6A 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9C6E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9C72 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9C76 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9C7A 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9C7E
 199+ 9C7E              ; ----- ----- ----- ----- -----
 200+ 9C7E              ;
 201+ 9C7E              ;   28/12/23
 202+ 9C7E
 203+ 9C7E              Movimiento
 204+ 9C7E
 205+ 9C7E              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9C7E
 207+ 9C7E 3A 6B 88         ld a,(Ctrl_2)
 208+ 9C81 CB 57            bit 2,a
 209+ 9C83 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9C85
 211+ 9C85 2A 7B 88         ld hl,(Puntero_mov)
 212+ 9C88 7E               ld a,(hl)
 213+ 9C89
 214+ 9C89              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9C89
 216+ 9C89              Inicia_desplazamiento.
 217+ 9C89
 218+ 9C89              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9C89
 220+ 9C89 CD 89 9D         call Ajusta_velocidad_desplazamiento
 221+ 9C8C
 222+ 9C8C              ; Iniciamos (Repetimos_mov).
 223+ 9C8C
 224+ 9C8C 7E               ld a,(hl)
 225+ 9C8D E6 0F            and $0f
 226+ 9C8F 32 81 88         ld (Repetimos_desplazamiento),a
 227+ 9C92 32 82 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9C95
 229+ 9C95              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9C95
 231+ 9C95 23               inc hl
 232+ 9C96 7E               ld a,(hl)
 233+ 9C97 32 84 88         ld (Cola_de_desplazamiento),a
 234+ 9C9A 2B               dec hl
 235+ 9C9B
 236+ 9C9B 21 6B 88         ld hl,Ctrl_2
 237+ 9C9E CB D6            set 2,(hl)
 238+ 9CA0
 239+ 9CA0              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9CA0              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9CA0
 242+ 9CA0              Desplazamiento_iniciado
 243+ 9CA0
 244+ 9CA0 CD 57 9D         call Aplica_desplazamiento
 245+ 9CA3
 246+ 9CA3              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9CA3
 248+ 9CA3 3A A4 88         ld a,(Ctrl_3)
 249+ 9CA6 CB 57            bit 2,a
 250+ 9CA8 C0               ret nz
 251+ 9CA9
 252+ 9CA9 3A 6B 88         ld a,(Ctrl_2)
 253+ 9CAC CB 67            bit 4,a
 254+ 9CAE C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9CAF
 256+ 9CAF 21 81 88     3 ld hl,Repetimos_desplazamiento
 257+ 9CB2 35               dec (hl)
 258+ 9CB3 C0               ret nz
 259+ 9CB4
 260+ 9CB4              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9CB4              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9CB4              ; Analiza (Cola_de_desplazamiento).
 263+ 9CB4
 264+ 9CB4 3A 84 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9CB7 A7               and a
 266+ 9CB8 CC B2 9D         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9CBB 28 30            jr z,Reinicia_el_movimiento
 268+ 9CBD
 269+ 9CBD FE FF            cp $ff
 270+ 9CBF 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9CC1
 272+ 9CC1 FE FE            cp $fe
 273+ 9CC3 CC 30 9D         call z,Fijamos_bucle
 274+ 9CC6 28 25            jr z,Reinicia_el_movimiento
 275+ 9CC8
 276+ 9CC8 FE FD            cp $fd
 277+ 9CCA 20 11            jr nz,1F
 278+ 9CCC
 279+ 9CCC              ; ---
 280+ 9CCC              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9CCC
 282+ 9CCC 3A 6B 88         ld a,(Ctrl_2)
 283+ 9CCF CB 5F            bit 3,a
 284+ 9CD1 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9CD3
 286+ 9CD3              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9CD3
 288+ 9CD3 21 6B 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9CD6 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9CD8
 291+ 9CD8 CD 41 9D         call Inicia_Repetimos_movimiento
 292+ 9CDB 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9CDD              ; ---
 294+ 9CDD
 295+ 9CDD FE 01        1 cp 1
 296+ 9CDF CA 1A 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9CE2
 298+ 9CE2 3D               dec a
 299+ 9CE3 32 84 88         ld (Cola_de_desplazamiento),a
 300+ 9CE6
 301+ 9CE6 3A 82 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9CE9 32 81 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9CEC              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9CEC C9               ret
 305+ 9CED
 306+ 9CED              Reinicia_el_movimiento
 307+ 9CED
 308+ 9CED 3A 6B 88         ld a,(Ctrl_2)
 309+ 9CF0 CB 5F            bit 3,a
 310+ 9CF2 28 1B            jr z,2F
 311+ 9CF4
 312+ 9CF4              ; (Cola_de_desplazamiento)="254".
 313+ 9CF4
 314+ 9CF4 21 83 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9CF7 35               dec (hl)
 316+ 9CF8 20 15            jr nz,2F
 317+ 9CFA
 318+ 9CFA              ; Fin de las repeticiones del último movimiento.
 319+ 9CFA
 320+ 9CFA 21 6B 88         ld hl,Ctrl_2
 321+ 9CFD CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9CFF
 323+ 9CFF 2A 7B 88         ld hl,(Puntero_mov)
 324+ 9D02 23               inc hl
 325+ 9D03 23               inc hl
 326+ 9D04 23               inc hl
 327+ 9D05 22 7B 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9D08              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9D08 7E               ld a,(hl)
 330+ 9D09 32 84 88         ld (Cola_de_desplazamiento),a
 331+ 9D0C
 332+ 9D0C C3 B4 9C         jp Cola
 333+ 9D0F
 334+ 9D0F CD 4C 9D     2 call Inicia_Puntero_mov
 335+ 9D12
 336+ 9D12 21 6B 88         ld hl,Ctrl_2
 337+ 9D15 CB 96            res 2,(hl)
 338+ 9D17
 339+ 9D17 C3 7E 9C         jp Movimiento
 340+ 9D1A
 341+ 9D1A              Siguiente_desplazamiento
 342+ 9D1A
 343+ 9D1A              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9D1A              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9D1A
 346+ 9D1A 21 6B 88         ld hl,Ctrl_2
 347+ 9D1D CB 96            res 2,(hl)
 348+ 9D1F
 349+ 9D1F 2A 7B 88         ld hl,(Puntero_mov)
 350+ 9D22 23               inc hl
 351+ 9D23 23               inc hl
 352+ 9D24 22 7B 88         ld (Puntero_mov),hl
 353+ 9D27
 354+ 9D27 7E               ld a,(hl)
 355+ 9D28 A7               and a
 356+ 9D29 CC B2 9D         call z,Incrementa_Puntero_indice_mov
 357+ 9D2C CA ED 9C         jp z,Reinicia_el_movimiento
 358+ 9D2F
 359+ 9D2F C9               ret
 360+ 9D30
 361+ 9D30              ; Subrutinas -----------------------------------------
 362+ 9D30              ; ---------- --------- --------- ---------- ----------
 363+ 9D30              ;
 364+ 9D30              ;   24/07/23
 365+ 9D30              ;
 366+ 9D30              ;   Fijamos_bucle
 367+ 9D30              ;
 368+ 9D30              ;
 369+ 9D30
 370+ 9D30              Fijamos_bucle
 371+ 9D30
 372+ 9D30 3A 7F 88         ld a,(Incrementa_puntero)
 373+ 9D33 3C               inc a
 374+ 9D34 32 80 88         ld (Incrementa_puntero_backup),a
 375+ 9D37
 376+ 9D37 CD B2 9D         call Incrementa_Puntero_indice_mov
 377+ 9D3A 2A 79 88         ld hl,(Puntero_indice_mov)
 378+ 9D3D 22 7D 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9D40 C9               ret
 380+ 9D41
 381+ 9D41              ; ---------- --------- --------- ---------- ----------
 382+ 9D41              ;
 383+ 9D41              ;   07/7/23
 384+ 9D41              ;
 385+ 9D41              ;   Inicia_Repetimos_movimiento
 386+ 9D41              ;
 387+ 9D41              ;
 388+ 9D41
 389+ 9D41              Inicia_Repetimos_movimiento
 390+ 9D41
 391+ 9D41              ; Iniciamos (Repetimos_movimiento).
 392+ 9D41
 393+ 9D41 DD 2A 7B 88      ld ix,(Puntero_mov)
 394+ 9D45 DD 7E 02         ld a,(ix+2)
 395+ 9D48 32 83 88         ld (Repetimos_movimiento),a
 396+ 9D4B
 397+ 9D4B C9               ret
 398+ 9D4C
 399+ 9D4C              ; ---------- --------- --------- ---------- ----------
 400+ 9D4C              ;
 401+ 9D4C              ;   26/6/23
 402+ 9D4C              ;
 403+ 9D4C              ;   Inicia_Puntero_mov
 404+ 9D4C              ;
 405+ 9D4C              ;
 406+ 9D4C
 407+ 9D4C 2A 79 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9D4F 5E               ld e,(hl)
 409+ 9D50 23               inc hl
 410+ 9D51 56               ld d,(hl)
 411+ 9D52 EB               ex de,hl
 412+ 9D53 22 7B 88         ld (Puntero_mov),hl
 413+ 9D56 C9               ret
 414+ 9D57
 415+ 9D57              ; ---------- --------- --------- ---------- ----------
 416+ 9D57              ;
 417+ 9D57              ;   27/06/23
 418+ 9D57              ;
 419+ 9D57              ;   Aplica_movimiento.
 420+ 9D57
 421+ 9D57              Aplica_desplazamiento
 422+ 9D57
 423+ 9D57              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9D57
 425+ 9D57 2A 7B 88         ld hl, (Puntero_mov)
 426+ 9D5A
 427+ 9D5A 7E               ld a,(hl)
 428+ 9D5B E6 F0            and $f0
 429+ 9D5D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9D5E
 431+ 9D5E CB 7E            bit 7,(hl)
 432+ 9D60 28 03            jr z,1F
 433+ 9D62 CD 76 97         call Mov_up
 434+ 9D65 2A 7B 88     1 ld hl, (Puntero_mov)
 435+ 9D68 CB 76            bit 6,(hl)
 436+ 9D6A 28 09            jr z,2F
 437+ 9D6C CD 3D 97         call Mov_down
 438+ 9D6F
 439+ 9D6F              ; Se ha aplicado reinicio ???
 440+ 9D6F              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9D6F
 442+ 9D6F 3A A4 88         ld a,(Ctrl_3)
 443+ 9D72 CB 57            bit 2,a
 444+ 9D74 C0               ret nz
 445+ 9D75
 446+ 9D75 2A 7B 88     2 ld hl, (Puntero_mov)
 447+ 9D78 CB 6E            bit 5,(hl)
 448+ 9D7A 28 03            jr z,3F
 449+ 9D7C CD DC 98         call Mov_left
 450+ 9D7F 2A 7B 88     3 ld hl, (Puntero_mov)
 451+ 9D82 CB 66            bit 4,(hl)
 452+ 9D84 C8               ret z
 453+ 9D85 CD B9 97         call Mov_right
 454+ 9D88 C9               ret
 455+ 9D89
 456+ 9D89              ; ---------- --------- --------- ---------- ----------
 457+ 9D89              ;
 458+ 9D89              ;   26/06/23
 459+ 9D89              ;
 460+ 9D89              ;   Ajusta_velocidad_desplazamiento.
 461+ 9D89
 462+ 9D89              Ajusta_velocidad_desplazamiento
 463+ 9D89
 464+ 9D89              ; 1er byte de la cadena de movimiento.
 465+ 9D89              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9D89
 467+ 9D89 CD A7 9D         call Extrae_nibble_alto
 468+ 9D8C
 469+ 9D8C 32 6F 88         ld (Vel_up),a
 470+ 9D8F 79               ld a,c
 471+ 9D90 E6 0F            and $0f
 472+ 9D92 32 70 88         ld (Vel_down),a
 473+ 9D95
 474+ 9D95              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9D95              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9D95
 477+ 9D95 23               inc hl
 478+ 9D96 CD A7 9D         call Extrae_nibble_alto
 479+ 9D99
 480+ 9D99 32 6D 88         ld (Vel_left),a
 481+ 9D9C 79               ld a,c
 482+ 9D9D E6 0F            and $0f
 483+ 9D9F 32 6E 88         ld (Vel_right),a
 484+ 9DA2
 485+ 9DA2              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9DA2
 487+ 9DA2 23               inc hl
 488+ 9DA3 22 7B 88         ld (Puntero_mov),hl
 489+ 9DA6 C9               ret
 490+ 9DA7
 491+ 9DA7 06 04        Extrae_nibble_alto ld b,4
 492+ 9DA9 7E               ld a,(hl)
 493+ 9DAA 4F               ld c,a
 494+ 9DAB E6 F0            and $f0
 495+ 9DAD CB 3F        1 srl a
 496+ 9DAF 10 FC            djnz 1B
 497+ 9DB1 C9               ret
 498+ 9DB2
 499+ 9DB2              ; ---------- --------- --------- ---------- ----------
 500+ 9DB2              ;
 501+ 9DB2              ;   5/7/23
 502+ 9DB2              ;
 503+ 9DB2              ;   Incrementa_Puntero_indice_mov
 504+ 9DB2
 505+ 9DB2              Incrementa_Puntero_indice_mov
 506+ 9DB2
 507+ 9DB2 21 7F 88         ld hl,Incrementa_puntero
 508+ 9DB5 34               inc (hl)
 509+ 9DB6
 510+ 9DB6 2A 79 88         ld hl,(Puntero_indice_mov)
 511+ 9DB9 01 02 00         ld bc,2
 512+ 9DBC A7               and a
 513+ 9DBD 09               add hl,bc
 514+ 9DBE 22 79 88         ld (Puntero_indice_mov),hl
 515+ 9DC1
 516+ 9DC1 7E               ld a,(hl)
 517+ 9DC2 A7               and a
 518+ 9DC3
 519+ 9DC3              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9DC3
 521+ 9DC3              ;    jr z,$
 522+ 9DC3
 523+ 9DC3              ;! Reinicia el Patrón de movimiento.
 524+ 9DC3
 525+ 9DC3 CC C8 9D         call z,Inicializa_Puntero_indice_mov_2
 526+ 9DC6
 527+ 9DC6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9DC7
 529+ 9DC7 C9               ret
 530+ 9DC8
 531+ 9DC8              ; ---------- --------- --------- ---------- ----------
 532+ 9DC8              ;
 533+ 9DC8              ;   15/01/24
 534+ 9DC8              ;
 535+ 9DC8              ;   Inicializa_Puntero_indice_mov
 536+ 9DC8
 537+ 9DC8              Inicializa_Puntero_indice_mov_2
 538+ 9DC8
 539+ 9DC8              ; Existe etiqueta de bucle principal???
 540+ 9DC8
 541+ 9DC8 2A 7D 88         ld hl,(Puntero_indice_mov_bucle)
 542+ 9DCB 24               inc h
 543+ 9DCC 25               dec h
 544+ 9DCD 28 05            jr z,2F
 545+ 9DCF
 546+ 9DCF 22 79 88         ld (Puntero_indice_mov),hl
 547+ 9DD2 18 14            jr 3F
 548+ 9DD4
 549+ 9DD4              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9DD4
 551+ 9DD4 3A 7F 88     2 ld a,(Incrementa_puntero)
 552+ 9DD7 47               ld b,a
 553+ 9DD8
 554+ 9DD8 2A 79 88         ld hl,(Puntero_indice_mov)
 555+ 9DDB 2B           1 dec hl
 556+ 9DDC 2B               dec hl
 557+ 9DDD 10 FC            djnz 1B
 558+ 9DDF 22 79 88         ld (Puntero_indice_mov),hl
 559+ 9DE2
 560+ 9DE2 AF               xor a
 561+ 9DE3 32 7F 88         ld (Incrementa_puntero),a
 562+ 9DE6 18 06            jr 4F
 563+ 9DE8
 564+ 9DE8 3A 80 88     3 ld a,(Incrementa_puntero_backup)
 565+ 9DEB 32 7F 88         ld (Incrementa_puntero),a
 566+ 9DEE C9           4 ret
 567+ 9DEF
 568+ 9DEF              ; ----------------------------------------------------------------------
 569+ 9DEF              ;
 570+ 9DEF              ;   30/01/24
 571+ 9DEF              ;
 572+ 9DEF              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 573+ 9DEF
 574+ 9DEF 3A 43 88     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 575+ 9DF2 CD A9 87         call Calcula_salto_en_BC
 576+ 9DF5 21 71 88         ld hl,Contador_general_de_mov_masticados_Entidad_1
 577+ 9DF8 A7               and a
 578+ 9DF9 ED 4A            adc hl,bc
 579+ 9DFB C9               ret
 580+ 9DFC
 581+ 9DFC              ; ----------------------------------------------------------------------
 582+ 9DFC              ;
 583+ 9DFC              ;   30/01/24
 584+ 9DFC              ;
 585+ 9DFC              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 586+ 9DFC              ;
 587+ 9DFC              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 588+ 9DFC
 589+ 9DFC 4E           Transfiere_datos_de_contadores ld c,(hl)
 590+ 9DFD 23               inc hl
 591+ 9DFE 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 592+ 9DFF 69               ld l,c
 593+ 9E00 60               ld h,b
 594+ 9E01 22 64 88         ld (Contador_de_mov_masticados),hl
 595+ 9E04 C9               ret
 596+ 9E05
 597+ 9E05
# file closed: Patrones_de_mov.asm
1768  9E05              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9E05              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9E05              ;
   3+ 9E05              ;	12/12/23
   4+ 9E05              ;
   5+ 9E05              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9E05
   7+ 9E05              ;	ADC HL,SP	LD (addr),SP
   8+ 9E05              ;	ADD HL,SP	LD SP,(addr)
   9+ 9E05              ;	ADD IX,SP	LD SP,nn
  10+ 9E05              ; 	ADD IY,SP	LD SP,HL
  11+ 9E05              ;				LD SP,IX
  12+ 9E05              ;	DEC SP		LD SP,IY
  13+ 9E05
  14+ 9E05              ;	EX (SP),HL
  15+ 9E05              ;	EX (SP),IX
  16+ 9E05              ;	EX (SP),IY
  17+ 9E05
  18+ 9E05              ;	INC SP
  19+ 9E05
  20+ 9E05                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 96 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 60 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 62 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 85 88         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 9E 88         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 66 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A A2 88         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 9C 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 85 88         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 9E 88         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 66 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 A2 88         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 96 88      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 9C 88     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 96 88  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 9C 88         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 9C 88         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1769  718B
1770  718B              	SAVESNA "Pruebas.sna", START
1771  718B
1772  718B
1773  718B
1774  718B
# file closed: Banco_de_pruebas.asm
