# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  40  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  41  FE01
  42  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  43  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  44  FE01
  45  FE01              ;																		; Scanlines_album.
  46  FE01
  47  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  48  FE01
  49  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  50  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  51  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  52  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  53  FE01
  54  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  55  FE01              ;
  56  FE01              ;	13/08/24
  57  FE01              ;
  58  FE01
  59  FE01              	org $82ea
  60  82EA
  61  82EA F5           	push af
  62  82EB E5           	push hl
  63  82EC
  64  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  65  82EC 21 2D 8C     	ld hl,Ctrl_3
  66  82EF CB 46        	bit 0,(hl)
  67  82F1 28 FE        	jr z,$
  68  82F3              ;! -------------------
  69  82F3
  70  82F3              ; Disparos.
  71  82F3
  72  82F3 CD 28 A2     	call Pinta_disparos_Amadeus
  73  82F6 CD 22 9F     	call Pinta_disparos_Entidades
  74  82F9
  75  82F9              ; Shield -----------------------
  76  82F9
  77  82F9              Temporizacion_shield
  78  82F9
  79  82F9 21 57 8C     	ld hl,Shield
  80  82FC 7E           	ld a,(hl)
  81  82FD A7           	and a
  82  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  83  8300
  84  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  85  8301
  86  8301 23           	inc hl
  87  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  88  8303
  89  8303 20 17        	jr nz,Incrementa_FRAMES
  90  8305
  91  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  92  8305
  93  8305              Cambio_de_estado
  94  8305
  95  8305              ;	Indica cambio de estado.
  96  8305
  97  8305 23           	inc hl						;	Sitúa en (Shield_3).
  98  8306
  99  8306 CB 5E        	bit 3,(hl)
 100  8308 28 05        	jr z,2F
 101  830A
 102  830A CD 32 91     	call Inicia_Shield
 103  830D
 104  830D 18 0D        	jr Incrementa_FRAMES
 105  830F
 106  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 107  8311
 108  8311              ;	Carga en (Shield_2) la siguiente temporización.
 109  8311
 110  8311 2A 55 8C     	ld hl,(Puntero_datos_shield)
 111  8314 23           	inc hl
 112  8315 22 55 8C     	ld (Puntero_datos_shield),hl
 113  8318 7E           	ld a,(hl)
 114  8319 32 58 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 115  831C
 116  831C              Incrementa_FRAMES
 117  831C
 118  831C 2A 78 5C     	ld hl,(FRAMES)
 119  831F 23           	inc hl
 120  8320 22 78 5C     	ld (FRAMES),hl
 121  8323
 122  8323 7C           	ld a,h
 123  8324 B5           	or l
 124  8325 20 04        	jr nz,1F
 125  8327
 126  8327 21 7A 5C     	ld hl,FRAMES_3
 127  832A 34           	inc (hl)
 128  832B
 129  832B D5           1 push de
 130  832C C5           	push bc
 131  832D
 132  832D CD 42 91     	call Actualiza_pantalla
 133  8330
 134  8330 C1           	pop bc
 135  8331 D1           	pop de
 136  8332 E1           	pop hl
 137  8333 F1           	pop af
 138  8334
 139  8334 FB           	ei
 140  8335
 141  8335 C9           	ret
 142  8336
 143  8336              ; --------------------------------------------------------------------------------
 144  8336
 145  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 146  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 5A 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 54 89        	defw Disparo_2
  40+ 8927 4E 89        	defw Disparo_3
  41+ 8929 48 89        	defw Disparo_4
  42+ 892B 42 89        	defw Disparo_5
  43+ 892D 3C 89        	defw Disparo_6
  44+ 892F 36 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00 00     	db 0,0,0								; Puntero objeto.
  47+ 8934 00 00        	defw 0									; Puntero de impresión.
  48+ 8936 00           Disparo_7 db 0	     						; Control.
  49+ 8937
  50+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  51+ 893A 00 00        	defw 0									; Puntero de impresión.
  52+ 893C 00           Disparo_6 db 0		    					; Control.
  53+ 893D
  54+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  55+ 8940 00 00        	defw 0									; Puntero de impresión.
  56+ 8942 00           Disparo_5 db 0			    				; Control.
  57+ 8943
  58+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  59+ 8946 00 00        	defw 0									; Puntero de impresión.
  60+ 8948 00           Disparo_4 db 0				     			; Control.
  61+ 8949
  62+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  63+ 894C 00 00        	defw 0									; Puntero de impresión.
  64+ 894E 00           Disparo_3 db 0					    		; Control.
  65+ 894F
  66+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  67+ 8952 00 00        	defw 0									; Puntero de impresión.
  68+ 8954 00           Disparo_2 db 0						    	; Control.
  69+ 8955
  70+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  71+ 8958 00 00        	defw 0									; Puntero de impresión.
  72+ 895A 00           Disparo_1 db 0							    ; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 147  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 148  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A7 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01 01 01 01  	db 1,1,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA5 01 01
  18+ 8BA7
  19+ 8BA7 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA8 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB0 01 02
  22+ 8BB2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB6 01 02
  23+ 8BB8
# file closed: Niveles.asm
 149  8BB8
 150  8BB8              ; --------------------------------------------------------------------------------
 151  8BB8              ;
 152  8BB8              ; 12/05/24
 153  8BB8              ;
 154  8BB8              ; Parámetros DRAW.
 155  8BB8              ;
 156  8BB8
 157  8BB8              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 158  8BB8
 159  8BB8 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 160  8BB9              ;															- Patrón de movimiento.
 161  8BB9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 162  8BBA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 163  8BBB
 164  8BBB 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 165  8BBC              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 166  8BBC
 167  8BBC              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 168  8BBC              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 169  8BBC              ; Ejemplos.
 170  8BBC
 171  8BBC              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 172  8BBC              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 173  8BBC              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 174  8BBC              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 175  8BBC              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 176  8BBC
 177  8BBC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 178  8BBD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 179  8BBD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 180  8BBD
 181  8BBD 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 182  8BBF              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 183  8BBF
 184  8BBF 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 185  8BC1
 186  8BC1              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 187  8BC1
 188  8BC1 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 189  8BC3              ;														; _palabras que componen el "movimiento_masticado".
 190  8BC3
 191  8BC3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  8BC3
 193  8BC3 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 194  8BC4              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 195  8BC4              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 196  8BC4              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 197  8BC4              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 198  8BC4
 199  8BC4 00           Ctrl_2 db 0
 200  8BC5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 201  8BC5              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 202  8BC5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 203  8BC5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 204  8BC5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 205  8BC5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 206  8BC5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 207  8BC5              ;
 208  8BC5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 209  8BC5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 210  8BC5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 211  8BC5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 212  8BC5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 213  8BC5              ;														BIT 4, ???
 214  8BC5              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 215  8BC5
 216  8BC5 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8BC6              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8BC6              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8BC6              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8BC6              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8BC6              ;
 222  8BC6              ; 														DESCRIPCIÖN:
 223  8BC6              ;
 224  8BC6              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8BC6              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8BC6              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8BC6              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8BC6              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8BC6              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8BC6              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8BC6              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8BC6              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8BC6              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8BC6              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8BC6              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8BC6              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8BC6              ;
 238  8BC6              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8BC6              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8BC6              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8BC6
 242  8BC6              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 243  8BC6
 244  8BC6 00           Filas db 0												; Filas. [DRAW]
 245  8BC7 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 246  8BC8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 247  8BCA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 248  8BCC
 249  8BCC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 250  8BCC
 251  8BCC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 252  8BCD              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 253  8BCD              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 254  8BCD
 255  8BCD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 256  8BCD
 257  8BCD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 258  8BCD              ;
 259  8BCD              ;	COLORES: 0 ..... NEGRO
 260  8BCD              ;    		 1 ..... AZUL
 261  8BCD              ; 			 2 ..... ROJO
 262  8BCD              ;			 3 ..... MAGENTA
 263  8BCD              ; 			 4 ..... VERDE
 264  8BCD              ; 			 5 ..... CIAN
 265  8BCD              ;			 6 ..... AMARILLO
 266  8BCD              ; 			 7 ..... BLANCO
 267  8BCD
 268  8BCD 00 00        Indice_Sprite_der defw 0
 269  8BCF 00 00        Indice_Sprite_izq defw 0
 270  8BD1 00 00        Puntero_DESPLZ_der defw 0
 271  8BD3 00 00        Puntero_DESPLZ_izq defw 0
 272  8BD5
 273  8BD5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 274  8BD7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 275  8BD8 00           Columnas db 0
 276  8BD9 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8BDB              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8BDB 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8BDC
 280  8BDC              ; variables de control general.
 281  8BDC
 282  8BDC 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  8BDD
 284  8BDD              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  8BDD
 286  8BDD              Perfiles_de_velocidad
 287  8BDD
 288  8BDD 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  8BDE 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  8BDF 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  8BE0 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  8BE1
 293  8BE1              ; Contadores de 16 bits.
 294  8BE1
 295  8BE1 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  8BE3 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  8BE5 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  8BE7 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  8BE9
 300  8BE9              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  8BE9
 302  8BE9 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  8BEB 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  8BED 00 00        Puntero_indice_mov_bucle defw 0							;
 305  8BEF              ;
 306  8BEF              ;
 307  8BEF 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  8BF0              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  8BF0              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  8BF0 00           Incrementa_puntero_backup db 0
 311  8BF1 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  8BF2              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  8BF2 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  8BF3 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  8BF4 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  8BF5              ;
 317  8BF5              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  8BF5              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  8BF5              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  8BF5              ;
 321  8BF5              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  8BF5              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  8BF5              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  8BF5              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  8BF5              ;
 326  8BF5              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  8BF5              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  8BF5              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  8BF5
 330  8BF5 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  8BF6
 332  8BF6              ;														DESCRIPCIÓN:
 333  8BF6              ;
 334  8BF6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  8BF6              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  8BF6              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  8BF6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  8BF6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  8BF6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  8BF6
 341  8BF6              ;														BIT 3, Recarga de nueva oleada.
 342  8BF6              ;														BIT 4, Recarga de nueva oleada.
 343  8BF6              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  8BF6              ;														BIT 6, **** Frame completo.
 345  8BF6              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  8BF6
 347  8BF6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  8BF8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  8BF8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  8BF8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  8BF8
 352  8BF8              ; Gestión de ENTIDADES y CAJAS.
 353  8BF8
 354  8BF8 00 00        Puntero_store_caja defw 0
 355  8BFA 00 00        Puntero_restore_caja defw 0
 356  8BFC 00 00        Indice_restore_caja defw 0
 357  8BFE 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  8BFF 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  8C00 00           Entidades_en_curso db 0									; ..... ..... .....
 360  8C01
 361  8C01 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C03 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C05              ;														; _ puntero (Indice_entidades).
 364  8C05
 365  8C05              ;---------------------------------------------------------------------------------------------------------------
 366  8C05              ;
 367  8C05              ;	13/10/24
 368  8C05              ;
 369  8C05              ;	Álbumes.
 370  8C05
 371  8C05 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C07              ;														; _variable para almacenar lo posición del puntero_
 373  8C07              ; 														; _de pila, SP.
 374  8C07 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C09              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C09
 377  8C09              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C09
 379  8C09 00 00        Album_de_pintado defw 0
 380  8C0B 00 00        Album_de_borrado defw 0
 381  8C0D 00 00        Album_de_pintado_Amadeus defw 0
 382  8C0F 00 00        Album_de_borrado_Amadeus defw 0
 383  8C11
 384  8C11 00 00        Album_de_pintado_disparos_Amadeus defw 0
 385  8C13 00 00        Album_de_borrado_disparos_Amadeus defw 0
 386  8C15
 387  8C15 00 00        Album_de_pintado_disparos_Entidades defw 0
 388  8C17 00 00        Album_de_borrado_disparos_Entidades defw 0
 389  8C19
 390  8C19
 391  8C19 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 392  8C1B
 393  8C1B 00           Num_de_bytes_album_de_disparos db 0
 394  8C1C 00           Num_de_bytes_album_de_disparos_borrado db 0
 395  8C1D
 396  8C1D 07           Numero_de_disparos_de_entidades db 7
 397  8C1E
 398  8C1E 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 399  8C1F 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 400  8C20
 401  8C20 00 00        Techo_Scanlines_album defw 0
 402  8C22 00 00        Techo_Scanlines_album_2 defw 0
 403  8C24 00           Switch db 0
 404  8C25 00 00        Techo defw 0
 405  8C27 00 00        Scanlines_album_SP defw 0
 406  8C29 00 89        India_SP defw Tabla_de_pintado
 407  8C2B 03 89        India_2_SP defw Tabla_de_pintado+3
 408  8C2D
 409  8C2D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 410  8C2E              ;
 411  8C2E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 412  8C2E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 413  8C2E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 414  8C2E              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 415  8C2E              ;																Habilita el borrado/pintado de sprites.
 416  8C2E              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 417  8C2E              ;																_ a la baja.
 418  8C2E              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 419  8C2E              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 420  8C2E              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 421  8C2E              ; 																_ el último frame de la explosión de nuestra nave.
 422  8C2E              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 423  8C2E              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 424  8C2E
 425  8C2E 00           Ctrl_4 db 0 											;   3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 426  8C2F              ;
 427  8C2F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 428  8C2F              ;
 429  8C2F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 430  8C2F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 431  8C2F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 432  8C2F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 433  8C2F              ;
 434  8C2F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 435  8C2F              ;															_ masticados ya generados.
 436  8C2F              ;
 437  8C2F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 438  8C2F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 439  8C2F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 440  8C2F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 441  8C2F
 442  8C2F 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 443  8C30              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 444  8C30              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 445  8C30
 446  8C30              ; Gestión de Disparos.
 447  8C30
 448  8C30 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 449  8C32 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 450  8C34 00           Impacto2 db 0											; Byte de control de impactos.
 451  8C35
 452  8C35              ;
 453  8C35              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 454  8C35              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 455  8C35              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 456  8C35              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 457  8C35
 458  8C35
 459  8C35
 460  8C35
 461  8C35
 462  8C35
 463  8C35
 464  8C35 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 465  8C37              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 466  8C37              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 467  8C37
 468  8C37 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 469  8C39              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 470  8C39 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 471  8C3C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 472  8C3C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 473  8C3F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 474  8C3F
 475  8C3F              ;---------------------------------------------------------------------------------------------------------------
 476  8C3F
 477  8C3F              ; Relojes y temporizaciones.
 478  8C3F
 479  8C3F 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 480  8C40 05           Clock_explosion_Amadeus db 5
 481  8C41 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 482  8C42
 483  8C42 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 484  8C44 F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 485  8C46 00           Numero_rnd_disparos db 0
 486  8C47
 487  8C47 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 488  8C49 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 489  8C4A              ;														; Repite la oleada de entidades.
 490  8C4A A0           Repone_CLOCK_disparos db $a0							; Reloj, decreciente.
 491  8C4B A0           CLOCK_disparos_de_entidades db $a0
 492  8C4C
 493  8C4C              ;---------------------------------------------------------------------------------------------------------------
 494  8C4C
 495  8C4C              ; Gestión de NIVELES.
 496  8C4C
 497  8C4C 00           Nivel db 0												; Nivel actual del juego.
 498  8C4D 00 00        Puntero_indice_NIVELES defw 0
 499  8C4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 500  8C51              ; 														; _ que definen el NIVEL.
 501  8C51
 502  8C51              ; ---------------------------------------------------------------------------------------------------------------
 503  8C51
 504  8C51              ; Temporizaciones Shield.
 505  8C51
 506  8C51 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 507  8C55 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 508  8C57 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 509  8C58 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 510  8C59 00           Shield_3 db 0
 511  8C5A
 512  8C5A 06           Lives db 6
 513  8C5B
 514  8C5B              ; 	INICIO  *************************************************************************************************************************************************************************
 515  8C5B              ;
 516  8C5B              ;	5/1/24
 517  8C5B
 518  8C5B              START
 519  8C5B
 520  8C5B 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 521  8C5E 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 522  8C60 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 523  8C62 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 524  8C64 F3           	DI
 525  8C65
 526  8C65              ; Limpiamos pantalla.
 527  8C65
 528  8C65 3E 07        	ld a,%00000111
 529  8C67 CD CF 94     	call Cls
 530  8C6A CD 27 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 531  8C6D
 532  8C6D              ; INICIALIZACIÓN.
 533  8C6D
 534  8C6D 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 535  8C6F CD 74 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 536  8C72
 537  8C72 CD BC 8E     	call Extrae_numero_aleatorio_y_avanza
 538  8C75
 539  8C75 6F           	ld l,a
 540  8C76 26 00        	ld h,0
 541  8C78 22 47 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 542  8C7B
 543  8C7B              ;	Inicializa 1er Nivel.
 544  8C7B
 545  8C7B 21 94 8B     	ld hl,Indice_de_niveles
 546  8C7E 22 4D 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 547  8C81 CD A4 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 548  8C84              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 549  8C84              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 550  8C84              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 551  8C84
 552  8C84              ;	Inicia los álbumes de líneas.
 553  8C84
 554  8C84 CD 75 90     	call Inicia_albumes_de_lineas
 555  8C87              ;
 556  8C87 CD 85 90     	call Inicia_albumes_de_lineas_Amadeus
 557  8C8A CD 92 90     	call Inicia_albumes_de_disparos
 558  8C8D
 559  8C8D CD E9 92     4 call Inicia_Entidades
 560  8C90 CD 4C 93     	call Inicia_Amadeus
 561  8C93
 562  8C93              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 563  8C93              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 564  8C93              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 565  8C93
 566  8C93 11 6D 89     	ld de,Amadeus_BOX
 567  8C96 CD 9F 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 568  8C99 CD 8F 93     	call Limpiamos_bandeja_DRAW
 569  8C9C
 570  8C9C              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 571  8C9C
 572  8C9C 06 3C        	ld b,60
 573  8C9E CD 75 9D     2 call Amadeus_a_izquierda
 574  8CA1 10 FB        	djnz 2B
 575  8CA3
 576  8CA3 CD 53 90     	call Genera_datos_de_impresion_Amadeus
 577  8CA6
 578  8CA6              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 579  8CA6
 580  8CA6 CD AE 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 581  8CA9
 582  8CA9 CD 32 91     	call Inicia_Shield
 583  8CAC
 584  8CAC 2A 27 8C     6 ld hl,(Scanlines_album_SP)
 585  8CAF 22 20 8C     	ld (Techo_Scanlines_album),hl
 586  8CB2
 587  8CB2 2A 0B 8C     	ld hl,(Album_de_borrado)
 588  8CB5 22 27 8C     	ld (Scanlines_album_SP),hl
 589  8CB8
 590  8CB8 21 00 89     	ld hl,Tabla_de_pintado
 591  8CBB 22 29 8C     	ld (India_SP),hl
 592  8CBE
 593  8CBE 21 2D 8C     	ld hl,Ctrl_3
 594  8CC1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 595  8CC3 CB D6        	set 2,(hl)
 596  8CC5 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 597  8CC7
 598  8CC7 FB           	ei 													; Ha de apuntar a $5c3a.
 599  8CC8
 600  8CC8 76           	halt
 601  8CC9
 602  8CC9              ; ------------------------------------
 603  8CC9
 604  8CC9              Main
 605  8CC9              ;
 606  8CC9              ; 25/10/24
 607  8CC9
 608  8CC9              ; Gestión de disparos.
 609  8CC9
 610  8CC9 21 2F 8C     	ld hl,Ctrl_5
 611  8CCC CB 66        	bit 4,(hl)
 612  8CCE F3           	di
 613  8CCF 20 FE        	jr nz,$
 614  8CD1 FB           	ei
 615  8CD2
 616  8CD2 CD 91 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 617  8CD5 CD 68 9F     	call Motor_de_disparos_entidades
 618  8CD8 CD D4 A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 619  8CDB
 620  8CDB              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 621  8CDB              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 622  8CDB              ; Este hecho lo indica el bit2 de (Impacto2).
 623  8CDB
 624  8CDB CD 71 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 625  8CDE
 626  8CDE              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 627  8CDE
 628  8CDE 21 4B 8C     	ld hl,CLOCK_disparos_de_entidades
 629  8CE1 35           	dec (hl)
 630  8CE2 CC DA 8D     	call z,Autoriza_disparo_de_entidades
 631  8CE5
 632  8CE5 2A 47 8C     	ld hl,(Clock_next_entity)
 633  8CE8 ED 4B 78 5C  	ld bc,(FRAMES)
 634  8CEC A7           	and a
 635  8CED ED 42        	sbc hl,bc
 636  8CEF 20 16        	jr nz,1F
 637  8CF1
 638  8CF1              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 639  8CF1              ; _ (Clock_next_entity) para la siguiente entidad.
 640  8CF1
 641  8CF1 3A FF 8B     	ld a,(Numero_parcial_de_entidades)
 642  8CF4 47           	ld b,a
 643  8CF5 3A 00 8C     	ld a,(Entidades_en_curso)
 644  8CF8 B8           	cp b
 645  8CF9 28 0C        	jr z,1F
 646  8CFB 30 0A        	jr nc,1F
 647  8CFD
 648  8CFD 3C           	inc a
 649  8CFE 32 00 8C     	ld (Entidades_en_curso),a
 650  8D01
 651  8D01              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 652  8D01
 653  8D01 CD BC 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 654  8D04 CD D8 8E     	call Define_Clock_next_entity
 655  8D07
 656  8D07 3A 00 8C     1 ld a,(Entidades_en_curso)
 657  8D0A A7           	and a
 658  8D0B CA 85 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 659  8D0E 47           	ld b,a												; No hay entidades que gestionar.
 660  8D0F
 661  8D0F              ; ( Código que ejecutamos con cada entidad: ).
 662  8D0F
 663  8D0F              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 664  8D0F              ;
 665  8D0F              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 666  8D0F
 667  8D0F 21 00 89     	ld hl,Tabla_de_pintado
 668  8D12 22 29 8C     	ld (India_SP),hl
 669  8D15
 670  8D15 21 2D 8C     	ld hl,Ctrl_3
 671  8D18 CB D6        	set 2,(hl)
 672  8D1A CD 66 8E     	call Change
 673  8D1D
 674  8D1D C5           2 push bc 												; Nº de entidades en curso.
 675  8D1E
 676  8D1E CD FF 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 677  8D21 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 678  8D25
 679  8D25              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 680  8D25
 681  8D25              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 682  8D25              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 683  8D25
 684  8D25 3A 34 8C     	ld a,(Impacto2)
 685  8D28 CB 5F        	bit 3,a
 686  8D2A C4 6B A1     	call nz,Compara_con_coordenadas_de_disparo
 687  8D2D
 688  8D2D 3A BC 8B     	ld a,(Impacto)
 689  8D30 CB 4F        	bit 1,a
 690  8D32 C4 0F 92     	call nz,Genera_explosion
 691  8D35 20 31        	jr nz,Gestiona_siguiente_entidad
 692  8D37
 693  8D37 3A BC 8B     	ld a,(Impacto)
 694  8D3A A7           	and a
 695  8D3B 28 0C        	jr z,3F
 696  8D3D
 697  8D3D              ; IMPACTO en entidad por colisión con Amadeus.
 698  8D3D
 699  8D3D              ; 5/7/24
 700  8D3D              ; Nota importante:
 701  8D3D              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 702  8D3D              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 703  8D3D              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 704  8D3D
 705  8D3D 3A 71 89     	ld a,(Impacto_Amadeus)
 706  8D40 A7           	and a
 707  8D41 C4 0F 92     	call nz,Genera_explosion
 708  8D44 20 22        	jr nz,Gestiona_siguiente_entidad
 709  8D46
 710  8D46              ; Falsa colisión !!!
 711  8D46
 712  8D46 32 BC 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 713  8D49
 714  8D49              ; -------------------------------------------
 715  8D49
 716  8D49 CD 1C 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 717  8D4C CD 46 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 718  8D4F CD 0C 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 719  8D52 CD 0F 95     	call Genera_datos_de_impresion
 720  8D55 CD B2 93     	call Decrementa_Contador_de_mov_masticados
 721  8D58
 722  8D58              ; -------------------------------------------
 723  8D58
 724  8D58              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 725  8D58
 726  8D58 2A BD 8B     	ld hl,(Puntero_de_impresion)
 727  8D5B CD E3 94     	call Genera_coordenadas
 728  8D5E
 729  8D5E              ; TODO: Generamos disparo ???
 730  8D5E
 731  8D5E 3A 1F 8C     	ld a,(Permiso_de_disparo_Entidades)
 732  8D61 A7           	and a
 733  8D62 C4 EF 8D     	call nz,Entidad_genera_disparo_si_procede
 734  8D65
 735  8D65 CD EF A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 736  8D68
 737  8D68              Gestiona_siguiente_entidad
 738  8D68
 739  8D68 CD 84 93      	call Store_Restore_cajas
 740  8D6B C1           	pop bc
 741  8D6C 10 AF        	djnz 2B
 742  8D6E
 743  8D6E              ; Hemos gestionado todas las entidades.
 744  8D6E              ; ----- ----- -----
 745  8D6E
 746  8D6E CD 30 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 747  8D71 CD 47 8F     	call Ordena_tabla_de_impresion
 748  8D74 CD AE 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 749  8D77
 750  8D77 CD ED 8E     	call Borra_diferencia
 751  8D7A
 752  8D7A 3A 2D 8C     	ld a,(Ctrl_3)
 753  8D7D CB 5F        	bit 3,a
 754  8D7F 20 04        	jr nz,Gestion_de_Amadeus
 755  8D81
 756  8D81 EB           	ex de,hl
 757  8D82 71           	ld (hl),c
 758  8D83 2C           	inc l
 759  8D84 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 760  8D85
 761  8D85              ;! GESTIONA AMADEUS !!!!!!!!!!
 762  8D85
 763  8D85              Gestion_de_Amadeus
 764  8D85
 765  8D85 21 2D 8C     	ld hl,Ctrl_3
 766  8D88 CB 76        	bit 6,(hl)
 767  8D8A 28 13        	jr z,Amadeus_vivo
 768  8D8C
 769  8D8C              ; Amadeus ha sido destruido.
 770  8D8C              ; Decrementa (Temp_new_live).
 771  8D8C
 772  8D8C 21 41 8C     	ld hl,Temp_new_live
 773  8D8F 35           	dec (hl)
 774  8D90 20 26        	jr nz,End_frame
 775  8D92
 776  8D92              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 777  8D92
 778  8D92 21 5A 8C     	ld hl,Lives
 779  8D95 35           	dec (hl)
 780  8D96
 781  8D96              ;! Fin del juego
 782  8D96
 783  8D96 F3           	di
 784  8D97 28 FE        	jr z,$
 785  8D99 FB           	ei
 786  8D9A
 787  8D9A              ; Nueva nave.
 788  8D9A
 789  8D9A CD 0C 8E     	call Reinicia_Amadeus
 790  8D9D 18 19        	jr End_frame
 791  8D9F
 792  8D9F              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 793  8D9F
 794  8D9F              Amadeus_vivo
 795  8D9F
 796  8D9F 3A 71 89     	ld a,(Impacto_Amadeus)
 797  8DA2 A7           	and a
 798  8DA3 C4 3F 92     	call nz, Genera_explosion_Amadeus
 799  8DA6 20 10        	jr nz, End_frame
 800  8DA8
 801  8DA8 CD EC 91     	call Teclado
 802  8DAB 21 2D 8C     	ld hl,Ctrl_3
 803  8DAE
 804  8DAE CB 6E        	bit 5,(hl)
 805  8DB0 28 06        	jr z,End_frame
 806  8DB2
 807  8DB2              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 808  8DB2
 809  8DB2 CD 81 8E     	call Change_Amadeus
 810  8DB5 CD 53 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 811  8DB8
 812  8DB8              End_frame
 813  8DB8
 814  8DB8              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 815  8DB8              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 816  8DB8
 817  8DB8 CD 96 A0     	call Genera_datos_de_impresion_disparos_Entidades
 818  8DBB CD 5A A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 819  8DBE CD B0 A1     	call Calcula_bytes_pintado_disparos
 820  8DC1 CD BD A1     	call Limpia_album_de_pintado_disparos_entidades
 821  8DC4
 822  8DC4              ; ------------ ------------- --------------
 823  8DC4
 824  8DC4 2A 0B 8C     	ld hl,(Album_de_borrado)
 825  8DC7 22 27 8C     	ld (Scanlines_album_SP),hl
 826  8DCA
 827  8DCA 21 2D 8C     	ld hl,Ctrl_3
 828  8DCD CB C6        	set 0,(hl) 											; Indica Frame completo.
 829  8DCF CB 9E        	res 3,(hl)
 830  8DD1 CB A6        	res 4,(hl)
 831  8DD3
 832  8DD3 AF           	xor a
 833  8DD4 D3 FE        	out ($fe),a
 834  8DD6
 835  8DD6 76           	halt
 836  8DD7
 837  8DD7              ; ----------------------------------------
 838  8DD7
 839  8DD7              ;	ld a,(Ctrl_1) 										; Existe Loop?
 840  8DD7              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 841  8DD7 CA C9 8C     	jp z,Main
 842  8DDA
 843  8DDA              ;------------------------------------------
 844  8DDA              ;
 845  8DDA              ;	2/10/24
 846  8DDA
 847  8DDA              Autoriza_disparo_de_entidades
 848  8DDA
 849  8DDA 3E 01        	ld a,1
 850  8DDC 32 1F 8C     	ld (Permiso_de_disparo_Entidades),a
 851  8DDF
 852  8DDF 3A 4A 8C     	ld a,(Repone_CLOCK_disparos)
 853  8DE2 FE 19        	cp 25
 854  8DE4 38 02        	jr c,1F
 855  8DE6
 856  8DE6 D6 0A        	sub 10
 857  8DE8
 858  8DE8 32 4A 8C     1 ld (Repone_CLOCK_disparos),a
 859  8DEB 32 4B 8C     	ld (CLOCK_disparos_de_entidades),a
 860  8DEE
 861  8DEE C9           	ret
 862  8DEF
 863  8DEF              ;------------------------------------------
 864  8DEF              ;
 865  8DEF              ;	14/09/24
 866  8DEF              ;
 867  8DEF              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 868  8DEF
 869  8DEF              Entidad_genera_disparo_si_procede
 870  8DEF
 871  8DEF 2A 44 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 872  8DF2 CB 06        	rlc (hl)
 873  8DF4
 874  8DF4 DC E6 A0     	call c,Genera_disparo_de_entidad_maldosa
 875  8DF7
 876  8DF7 C9           	ret
 877  8DF8
 878  8DF8              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 879  8DF8              ;
 880  8DF8              ;	30/09/24
 881  8DF8
 882  8DF8              Actuaiza_sp_de_disparos_de_entidades
 883  8DF8
 884  8DF8 2A 44 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 885  8DFB 23           	inc hl
 886  8DFC 22 44 8C     	ld (Puntero_num_aleatorios_disparos),hl
 887  8DFF
 888  8DFF 11 FD 88     	ld de,Numeros_aleatorios+7
 889  8E02 7B           	ld a,e
 890  8E03 95           	sub l
 891  8E04 C0           	ret nz
 892  8E05
 893  8E05 21 F6 88     1 ld hl,Numeros_aleatorios
 894  8E08 22 44 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 895  8E0B C9           	ret
 896  8E0C
 897  8E0C              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 898  8E0C              ;
 899  8E0C              ;	24/07/24
 900  8E0C
 901  8E0C              Reinicia_Amadeus
 902  8E0C
 903  8E0C              ;	Reinicia posición y estado.
 904  8E0C
 905  8E0C 21 CF 50     	ld hl,$50cf
 906  8E0F 22 72 89     	ld (p.imp.amadeus),hl
 907  8E12 21 F0 E0     	ld hl,$e0f0
 908  8E15 22 74 89     	ld (Pamm_Amadeus),hl
 909  8E18 21 3D 00     	ld hl,$003d
 910  8E1B 22 76 89     	ld (Comm_Amadeus),hl
 911  8E1E
 912  8E1E              ;	limpiamos el álbum de borrado.
 913  8E1E
 914  8E1E 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
 915  8E21
 916  8E21 AF           	xor a
 917  8E22 77           	ld (hl),a
 918  8E23
 919  8E23 E5           	push hl
 920  8E24 D1           	pop de
 921  8E25 13           	inc de
 922  8E26
 923  8E26 01 23 00     	ld bc,35
 924  8E29 ED B0        	ldir
 925  8E2B
 926  8E2B CD 53 90     	call Genera_datos_de_impresion_Amadeus
 927  8E2E
 928  8E2E              ;	Reinicia temporizaciones.
 929  8E2E
 930  8E2E CD 32 91     	call Inicia_Shield
 931  8E31
 932  8E31 3E 5A        	ld a,90
 933  8E33 32 57 8C     	ld (Shield),a
 934  8E36
 935  8E36 3E 64        	ld a,100
 936  8E38 32 41 8C     	ld (Temp_new_live),a
 937  8E3B
 938  8E3B              ; 	Restauramos el FLAG: Amadeus vivo.
 939  8E3B
 940  8E3B 21 2D 8C     	ld hl,Ctrl_3
 941  8E3E CB B6        	res 6,(hl)
 942  8E40
 943  8E40              ;	Fuerza la impresión de la nave en el siguiente frame.
 944  8E40
 945  8E40 21 2D 8C      	ld hl,Ctrl_3
 946  8E43 CB EE        	set 5,(hl)
 947  8E45
 948  8E45 C9           	ret
 949  8E46
 950  8E46              ; --------------------------------------------------------------------------------------------------------------
 951  8E46              ;
 952  8E46              ;	12/05/24
 953  8E46
 954  8E46 3A C3 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
 955  8E49 CB 27        	sla a
 956  8E4B 32 C3 8B     	ld (Velocidad),a
 957  8E4E E6 10        	and $10
 958  8E50 C8           	ret z
 959  8E51
 960  8E51              ; Restaura (Velocidad) a razón del nº de vueltas.
 961  8E51
 962  8E51 3A BB 8B     	ld a,(Contador_de_vueltas)
 963  8E54 CB 2F        	sra a
 964  8E56 CB 2F        	sra a
 965  8E58 32 C3 8B     	ld (Velocidad),a
 966  8E5B
 967  8E5B 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 968  8E5E 23           	inc hl
 969  8E5F 23           	inc hl
 970  8E60 23           	inc hl
 971  8E61 23           	inc hl
 972  8E62 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 973  8E65
 974  8E65 C9           	ret
 975  8E66
 976  8E66              ; --------------------------------------------------------------------------------------------------------------
 977  8E66              ;
 978  8E66              ;	25/08/24
 979  8E66
 980  8E66              Change
 981  8E66
 982  8E66 3A 24 8C     	ld a,(Switch)
 983  8E69 EE 01        	xor 1
 984  8E6B 32 24 8C     	ld (Switch),a
 985  8E6E 2A 09 8C     	ld hl,(Album_de_pintado)
 986  8E71 ED 5B 0B 8C  	ld de,(Album_de_borrado)
 987  8E75 EB           	ex de,hl
 988  8E76 22 09 8C     	ld (Album_de_pintado),hl
 989  8E79 22 27 8C     	ld (Scanlines_album_SP),hl
 990  8E7C ED 53 0B 8C  	ld (Album_de_borrado),de
 991  8E80 C9           	ret
 992  8E81
 993  8E81              Change_Amadeus
 994  8E81
 995  8E81 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
 996  8E84 ED 5B 0F 8C  	ld de,(Album_de_borrado_Amadeus)
 997  8E88 EB           	ex de,hl
 998  8E89 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
 999  8E8C ED 53 0F 8C  	ld (Album_de_borrado_Amadeus),de
1000  8E90 C9           	ret
1001  8E91
1002  8E91              Change_Disparos
1003  8E91
1004  8E91              ; Álbumes de Amadeus.
1005  8E91
1006  8E91 2A 11 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1007  8E94 ED 5B 13 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1008  8E98 EB           	ex de,hl
1009  8E99 22 11 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1010  8E9C ED 53 13 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1011  8EA0 CD A5 A1     	call Limpia_album_de_pintado_disparos_Amadeus
1012  8EA3
1013  8EA3              ; Álbumes de entidades.
1014  8EA3
1015  8EA3 2A 15 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1016  8EA6 ED 5B 17 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1017  8EAA EB           	ex de,hl
1018  8EAB 22 15 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1019  8EAE ED 53 17 8C  	ld (Album_de_borrado_disparos_Entidades),de
1020  8EB2 22 19 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1021  8EB5
1022  8EB5 3A 1B 8C     	ld a,(Num_de_bytes_album_de_disparos)
1023  8EB8 32 1C 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1024  8EBB
1025  8EBB C9           	ret
1026  8EBC
1027  8EBC              ; ------------------------------------
1028  8EBC              ;
1029  8EBC              ; 1/05/24
1030  8EBC
1031  8EBC              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1032  8EBC              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1033  8EBC
1034  8EBC              ;	DESTRUYE: HL,DE,A
1035  8EBC              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1036  8EBC
1037  8EBC              ;	Variables implicadas: (RND_SP).
1038  8EBC
1039  8EBC              Extrae_numero_aleatorio_y_avanza
1040  8EBC
1041  8EBC 21 00 89     	ld hl,Tabla_de_pintado
1042  8EBF EB           	ex de,hl
1043  8EC0 2A 42 8C     	ld hl,(RND_SP)
1044  8EC3 EB           	ex de,hl
1045  8EC4 A7           	and a
1046  8EC5 ED 52        	sbc hl,de
1047  8EC7
1048  8EC7 2A 42 8C     	ld hl,(RND_SP)
1049  8ECA 20 06        	jr nz,1F
1050  8ECC
1051  8ECC              ; Sitúa HL al principio de la tabla de nº aleatorios.
1052  8ECC
1053  8ECC 21 F6 88     	ld hl,Numeros_aleatorios
1054  8ECF 22 42 8C     	ld (RND_SP),HL
1055  8ED2
1056  8ED2              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1057  8ED2
1058  8ED2 7E           1 ld a,(hl)
1059  8ED3 23           	inc hl
1060  8ED4 22 42 8C     	ld (RND_SP),hl
1061  8ED7 C9           	ret
1062  8ED8
1063  8ED8              ; ------------------------------------
1064  8ED8              ;
1065  8ED8              ; 1/05/24
1066  8ED8
1067  8ED8              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1068  8ED8              ; (1 a 4 segundos).
1069  8ED8              ; Actualizamos (Clock_next_entity) con A.
1070  8ED8
1071  8ED8              ;	DESTRUYE: A y B.
1072  8ED8              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1073  8ED8              ;			 Actualiza (Clock_next_entity) con A.
1074  8ED8
1075  8ED8              ;	Variables implicadas: (Clock_next_entity).
1076  8ED8
1077  8ED8              ; Notas:
1078  8ED8
1079  8ED8              ; 	$32 1 seg.
1080  8ED8              ; 	$64 2 seg.
1081  8ED8              ; 	$96 3 seg.
1082  8ED8              ; 	$c8 4 seg.
1083  8ED8              ; 	$fa 5 seg.
1084  8ED8
1085  8ED8              ; $ffff 1310,7 seg, 22 minutos.
1086  8ED8
1087  8ED8              ;	$0100  5 seg. aproximadamente.
1088  8ED8              ;	$0200 10 seg. aproximadamente.
1089  8ED8              ;	$0300 15 seg. aproximadamente.
1090  8ED8              ;	$0400 20 seg. aproximadamente.
1091  8ED8              ;	$0500 25 seg. aproximadamente.
1092  8ED8              ;	$0600 30 seg. aproximadamente.
1093  8ED8
1094  8ED8              Define_Clock_next_entity
1095  8ED8
1096  8ED8 FE 34        	cp $34
1097  8EDA 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1098  8EDC
1099  8EDC              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1100  8EDC
1101  8EDC 4F           3 ld c,a
1102  8EDD 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1103  8EDF 2A 78 5C     	ld hl,(FRAMES)
1104  8EE2 A7           	and a
1105  8EE3 ED 4A        	adc hl,bc
1106  8EE5 22 47 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1107  8EE8 C9           	ret
1108  8EE9
1109  8EE9 3E 34        1 ld a,$34
1110  8EEB 18 EF        	jr 3B
1111  8EED
1112  8EED              ; ------------------------------------
1113  8EED              ;
1114  8EED              ; 18/03/24
1115  8EED
1116  8EED              Borra_diferencia
1117  8EED
1118  8EED ED 4B 27 8C  	ld bc,(Scanlines_album_SP)
1119  8EF1
1120  8EF1 3A 24 8C     	ld a,(Switch)
1121  8EF4 A7           	and a
1122  8EF5 28 08        	jr z,2F
1123  8EF7
1124  8EF7 2A 22 8C     	ld hl,(Techo_Scanlines_album_2)
1125  8EFA 11 22 8C     	ld de,Techo_Scanlines_album_2
1126  8EFD 18 06        	jr 3F
1127  8EFF
1128  8EFF 2A 20 8C     2 ld hl,(Techo_Scanlines_album)
1129  8F02 11 20 8C     	ld de,Techo_Scanlines_album
1130  8F05
1131  8F05              ; Diferencia.
1132  8F05
1133  8F05 ED 42        3 sbc hl,bc
1134  8F07
1135  8F07 C8           	ret z
1136  8F08 D8           	ret c
1137  8F09
1138  8F09              ; Nuevo techo, (más bajo que el anterior).
1139  8F09              ; Fijamos nuevo techo y borramos bytes sobrantes.
1140  8F09
1141  8F09 EB           	ex de,hl
1142  8F0A
1143  8F0A 71           	ld (hl),c
1144  8F0B 2C           	inc l
1145  8F0C 70           	ld (hl),b
1146  8F0D
1147  8F0D AF           	xor a
1148  8F0E 43           	ld b,e
1149  8F0F
1150  8F0F 2A 27 8C     	ld hl,(Scanlines_album_SP)
1151  8F12
1152  8F12 77           1 ld (hl),a
1153  8F13 23           	inc hl
1154  8F14 10 FC        	djnz 1B
1155  8F16
1156  8F16              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1157  8F16
1158  8F16 21 2D 8C     	ld hl,Ctrl_3
1159  8F19 CB DE        	set 3,(hl)
1160  8F1B
1161  8F1B C9           	ret
1162  8F1C
1163  8F1C              ; --------------------------------------------------------------------------------------------------------------
1164  8F1C              ;
1165  8F1C              ;	26/3/24
1166  8F1C
1167  8F1C              Recauda_informacion_de_entidad_en_curso
1168  8F1C
1169  8F1C              ; Almacena la Coordenada Y de la entidad en curso.
1170  8F1C
1171  8F1C              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1172  8F1C
1173  8F1C 3A BA 8B     	ld a,(Coordenada_y)
1174  8F1F 2A 29 8C     	ld hl,(India_SP)
1175  8F22 77           	ld (hl),a
1176  8F23 2C           	inc l
1177  8F24
1178  8F24              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1179  8F24
1180  8F24 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
1181  8F28
1182  8F28 73           	ld (hl),e
1183  8F29 2C           	inc l
1184  8F2A 72           	ld (hl),d
1185  8F2B 2C           	inc l
1186  8F2C
1187  8F2C 22 29 8C     	ld (India_SP),hl
1188  8F2F
1189  8F2F C9           	ret
1190  8F30
1191  8F30              ; --------------------------------------------------------------------------------------------------------------
1192  8F30              ;
1193  8F30              ;	27/03/24
1194  8F30              ;
1195  8F30
1196  8F30              Inicializa_India_y_limpia_Tabla_de_impresion
1197  8F30
1198  8F30 2A 29 8C     	ld hl,(India_SP)
1199  8F33 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1200  8F36
1201  8F36 79           	ld a,c
1202  8F37 95           	sub l
1203  8F38 28 06        	jr z,2F
1204  8F3A 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1205  8F3B              ;														; _ y pasamos a inicializar (India_SP).
1206  8F3B AF           	xor a
1207  8F3C
1208  8F3C 77           1 ld (hl),a
1209  8F3D 2C           	inc l
1210  8F3E 10 FC        	djnz 1B												; Limpia Tabla.
1211  8F40
1212  8F40 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1213  8F43 22 29 8C     	ld (India_SP),hl
1214  8F46
1215  8F46 C9           	ret
1216  8F47
1217  8F47              ; --------------------------------------------------------------------------------------------------------------
1218  8F47              ;
1219  8F47              ;	31/3/24
1220  8F47
1221  8F47              Ordena_tabla_de_impresion
1222  8F47
1223  8F47              ; 5794 T/states.
1224  8F47              ; 6278 T/states.
1225  8F47              ; 5310 T/states.
1226  8F47
1227  8F47              ; Inicializamos punteros (India_SP) e (India_2_SP).
1228  8F47              ; Inicializamos contador de comparaciones, [C].
1229  8F47              ; Cargamos los registros A y B para efectuar comparación.
1230  8F47
1231  8F47 FD 2E 00     	ld iyl,0
1232  8F4A
1233  8F4A 3A 00 8C     	ld a,(Entidades_en_curso)
1234  8F4D FE 04        	cp 4 	;	4
1235  8F4F D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1236  8F50
1237  8F50 3D           	dec a
1238  8F51 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1239  8F52 51           	ld d,c 										; Copia de respaldo.
1240  8F53
1241  8F53 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1242  8F54
1243  8F54 21 03 89     	ld hl,Tabla_de_pintado+3
1244  8F57 46           	ld b,(hl)
1245  8F58 22 2B 8C     	ld (India_2_SP),hl
1246  8F5B
1247  8F5B B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1248  8F5C DC 84 8F     	call c, Avanza_India_2_SP
1249  8F5F CC 84 8F     	call z, Avanza_India_2_SP
1250  8F62
1251  8F62 FD 2D        	dec iyl
1252  8F64 28 18        	jr z,2F
1253  8F66
1254  8F66
1255  8F66              ; --------------------------------------------------------------------------------------------------------------
1256  8F66              ;
1257  8F66              ;	7/4/24
1258  8F66
1259  8F66              Trueque
1260  8F66
1261  8F66              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1262  8F66              ;  			A contiene en nº de fila de (India_SP).
1263  8F66              ;			HL contiene (India_2_SP).
1264  8F66
1265  8F66 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1266  8F67 E5           	push hl										; Preservo (India_2_SP).
1267  8F68
1268  8F68 ED 5B 29 8C  	ld de,(India_SP)
1269  8F6C EB           	ex de,hl
1270  8F6D 70           	ld (hl),b
1271  8F6E 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1272  8F6F
1273  8F6F CD B0 8F     	call Intercambia_1_byte
1274  8F72 CD B0 8F     	call Intercambia_1_byte
1275  8F75
1276  8F75
1277  8F75              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1278  8F75              ; Recuperamos (India_2_SP) en HL.
1279  8F75
1280  8F75 2A 29 8C     	ld hl,(India_SP)
1281  8F78 7E           	ld a,(hl)
1282  8F79
1283  8F79 E1           	pop hl
1284  8F7A D1           	pop de
1285  8F7B
1286  8F7B              ; --------------------------------------------------------------------------------------------------------------
1287  8F7B
1288  8F7B CD 84 8F     	call Avanza_India_2_SP
1289  8F7E
1290  8F7E 14           2 inc d
1291  8F7F 15           	dec d
1292  8F80 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1293  8F81 18 D8        	jr 1B
1294  8F83
1295  8F83 C9           	ret
1296  8F84
1297  8F84              ; ----- ----- ----- ----- -----
1298  8F84
1299  8F84              Avanza_India_2_SP
1300  8F84
1301  8F84 0D           	dec c
1302  8F85 28 0A        	jr z,Avanza_punteros_indios
1303  8F87
1304  8F87 FD 2C        	inc iyl
1305  8F89
1306  8F89 2C           	inc l
1307  8F8A 2C           	inc l
1308  8F8B 2C           	inc l
1309  8F8C
1310  8F8C 46           	ld b,(hl)
1311  8F8D 22 2B 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1312  8F90
1313  8F90 C9           	ret
1314  8F91
1315  8F91              ; ----- ----- ----- ----- -----
1316  8F91
1317  8F91              Avanza_punteros_indios
1318  8F91
1319  8F91 15           	dec d
1320  8F92 28 15        	jr z,Prepara_salida
1321  8F94
1322  8F94 4A           	ld c,d
1323  8F95
1324  8F95 2A 29 8C     	ld hl,(India_SP)
1325  8F98 2C           	inc l
1326  8F99 2C           	inc l
1327  8F9A 2C           	inc l
1328  8F9B 7E           	ld a,(hl)
1329  8F9C 22 29 8C     	ld (India_SP),hl
1330  8F9F
1331  8F9F 2C           	inc l
1332  8FA0 2C           	inc l
1333  8FA1 2C           	inc l
1334  8FA2 46           	ld b,(hl)
1335  8FA3 22 2B 8C     	ld (India_2_SP),hl
1336  8FA6
1337  8FA6 FD 2C        	inc iyl
1338  8FA8
1339  8FA8 C9           	ret
1340  8FA9
1341  8FA9              Prepara_salida
1342  8FA9
1343  8FA9 21 00 89     	ld hl,Tabla_de_pintado
1344  8FAC 22 29 8C     	ld (India_SP),hl
1345  8FAF C9           	ret
1346  8FB0
1347  8FB0
1348  8FB0 2C           Intercambia_1_byte inc l
1349  8FB1 1C           	inc e
1350  8FB2 46           	ld b,(hl)
1351  8FB3 1A           	ld a,(de)
1352  8FB4 EB           	ex de,hl
1353  8FB5 70           	ld (hl),b
1354  8FB6 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1355  8FB7 C9           	ret
1356  8FB8
1357  8FB8              ; -----------------------------------------------------------------------------------
1358  8FB8              ;
1359  8FB8              ;	20/01/24
1360  8FB8              ;
1361  8FB8              ;
1362  8FB8
1363  8FB8              Construye_movimientos_masticados_entidad
1364  8FB8
1365  8FB8 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1366  8FBB E5           	push hl
1367  8FBC CD FF 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1368  8FBF              ;															; _ el (Contador_de_mov_masticados).
1369  8FBF CD CA 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1370  8FC2              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1371  8FC2 CD FB 99     	call Recompone_posicion_inicio
1372  8FC5
1373  8FC5 CD 2B 97     1 call Draw
1374  8FC8 CD E4 8F     	call Guarda_movimiento_masticado
1375  8FCB
1376  8FCB CD A8 9D     	call Movimiento
1377  8FCE
1378  8FCE 3A 2D 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1379  8FD1 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1380  8FD3 28 F0        	jr z,1B
1381  8FD5
1382  8FD5              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1383  8FD5              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1384  8FD5
1385  8FD5 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1386  8FD6 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1387  8FD9
1388  8FD9              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1389  8FD9
1390  8FD9 CD 0C 9F     	call Situa_en_contador_general_de_mov_masticados
1391  8FDC
1392  8FDC              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1393  8FDC              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1394  8FDC
1395  8FDC ED 4B C1 8B  	ld bc,(Contador_de_mov_masticados)
1396  8FE0
1397  8FE0 71           	ld (hl),c
1398  8FE1 23           	inc hl
1399  8FE2 70           	ld (hl),b
1400  8FE3
1401  8FE3 C9           	ret
1402  8FE4
1403  8FE4              ; -----------------------------------------------------------------------------------
1404  8FE4              ;
1405  8FE4              ;	28/12/23
1406  8FE4              ;
1407  8FE4              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1408  8FE4              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1409  8FE4
1410  8FE4              Guarda_movimiento_masticado
1411  8FE4
1412  8FE4 ED 73 05 8C  	ld (Stack),sp
1413  8FE8 ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1414  8FEC
1415  8FEC DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1416  8FEE FD E5            push iy 												; Pushea Puntero_objeto.
1417  8FF0
1418  8FF0 ED 7B 05 8C      ld sp,(Stack)
1419  8FF4
1420  8FF4 2A C1 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1421  8FF7 23           	inc hl
1422  8FF8 22 C1 8B     	ld (Contador_de_mov_masticados),hl
1423  8FFB
1424  8FFB CD FF 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1425  8FFE              ;															; _ el (Contador_de_mov_masticados).
1426  8FFE C9               ret
1427  8FFF
1428  8FFF              ; --------------------------------------------------------------------------------------------------------------
1429  8FFF              ;
1430  8FFF              ;	12/1/24
1431  8FFF              ;
1432  8FFF              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1433  8FFF
1434  8FFF              Actualiza_Puntero_de_almacen_de_mov_masticados
1435  8FFF
1436  8FFF 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1437  9002 01 04 00     	ld bc,4
1438  9005 A7           	and a
1439  9006 ED 4A        	adc hl,bc
1440  9008 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1441  900B C9           	ret
1442  900C
1443  900C              ; --------------------------------------------------------------------------------------------------------------
1444  900C              ;
1445  900C              ;	24/03/24
1446  900C              ;
1447  900C              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1448  900C              ;
1449  900C              ;	IX contiene el puntero de impresión.
1450  900C              ;	DE contiene (Puntero_objeto).
1451  900C
1452  900C
1453  900C              Cargamos_registros_con_mov_masticado
1454  900C
1455  900C ED 73 05 8C  	ld (Stack),sp
1456  9010 ED 7B BF 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1457  9014
1458  9014 D1           	pop de 															; DE contiene Puntero_objeto
1459  9015 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1460  9017
1461  9017 ED 73 BF 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1462  901B ED 7B 05 8C  	ld sp,(Stack)
1463  901F
1464  901F 7B           	ld a,e
1465  9020 82           	add d															; Comprueba si ya no hay datos en el almacén.
1466  9021
1467  9021 CC BA 93     	call z,Reinicia_entidad_maliciosa
1468  9024
1469  9024 C9           	ret
1470  9025
1471  9025              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1472  9025              ;
1473  9025              ;	22/7/24
1474  9025
1475  9025              Cargamos_registros_con_explosion
1476  9025
1477  9025
1478  9025 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1479  9028 CD C4 90     	call Extrae_address
1480  902B
1481  902B 5D           	ld e,l
1482  902C 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1483  902D
1484  902D DD 2A BD 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1485  9031
1486  9031 C9           	ret
1487  9032
1488  9032
1489  9032              Cargamos_registros_con_explosion_Amadeus
1490  9032
1491  9032 2A 74 89     	ld hl,(Pamm_Amadeus)
1492  9035 CD C4 90     	call Extrae_address
1493  9038
1494  9038 5D           	ld e,l
1495  9039 54           	ld d,h
1496  903A
1497  903A DD 2A 72 89  	ld ix,(p.imp.amadeus)
1498  903E
1499  903E C9           	ret
1500  903F
1501  903F              ; --------------------------------------------------------------------------------------------------------------
1502  903F              ;
1503  903F              ;	17/06/24
1504  903F              ;
1505  903F              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1506  903F              ;
1507  903F              ;	IX contiene el puntero de impresión.
1508  903F              ;	DE contiene (Puntero_objeto).
1509  903F
1510  903F
1511  903F              Cargamos_registros_con_mov_masticado_Amadeus
1512  903F
1513  903F ED 73 05 8C  	ld (Stack),sp
1514  9043 ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1515  9047 D1           	pop de 															; DE contiene Puntero_objeto
1516  9048 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1517  904A DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1518  904E ED 7B 05 8C  	ld sp,(Stack)
1519  9052 C9           	ret
1520  9053
1521  9053              ; ---------------------------------------------------------------------------------------------------------------------
1522  9053              ;
1523  9053              ;	18/6/24
1524  9053              ;
1525  9053              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1526  9053
1527  9053              Genera_datos_de_impresion_Amadeus
1528  9053
1529  9053 3A 71 89     	ld a,(Impacto_Amadeus)
1530  9056 A7           	and a
1531  9057 20 03        	jr nz,1F
1532  9059
1533  9059              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1534  9059              ; _apuntando a la correspondiente explosión.
1535  9059
1536  9059 CD 3F 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1537  905C
1538  905C DD 7D        1 ld a,ixl
1539  905E E6 1F        	and $1f
1540  9060 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1541  9063
1542  9063 2A 27 8C     	ld hl,(Scanlines_album_SP)
1543  9066 E5           	push hl
1544  9067
1545  9067 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1546  906A 22 27 8C     	ld (Scanlines_album_SP),hl
1547  906D
1548  906D CD 0F 95     	call Genera_datos_de_impresion
1549  9070
1550  9070 E1           	pop hl
1551  9071 22 27 8C     	ld (Scanlines_album_SP),hl
1552  9074
1553  9074 C9           	ret
1554  9075
1555  9075              ; ---------------------------------------------------------------------------------------------------------------------
1556  9075              ;
1557  9075              ;	13/03/24
1558  9075              ;
1559  9075              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1560  9075
1561  9075              Inicia_albumes_de_lineas
1562  9075
1563  9075 21 00 80     	ld hl,Scanlines_album
1564  9078 22 09 8C     	ld (Album_de_pintado),hl
1565  907B 22 27 8C     	ld (Scanlines_album_SP),hl
1566  907E
1567  907E 21 1A 81     	ld hl,Scanlines_album_2
1568  9081 22 0B 8C     	ld (Album_de_borrado),hl
1569  9084
1570  9084 C9           	ret
1571  9085
1572  9085              Inicia_albumes_de_lineas_Amadeus
1573  9085
1574  9085 21 34 82     	ld hl,Amadeus_scanlines_album
1575  9088 22 0D 8C     	ld (Album_de_pintado_Amadeus),hl
1576  908B 21 58 82     	ld hl,Amadeus_scanlines_album_2
1577  908E 22 0F 8C     	ld (Album_de_borrado_Amadeus),hl
1578  9091
1579  9091 C9           	ret
1580  9092
1581  9092              Inicia_albumes_de_disparos
1582  9092
1583  9092 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1584  9095 22 11 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1585  9098 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1586  909B 22 13 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1587  909E
1588  909E 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1589  90A1 22 15 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1590  90A4 22 19 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1591  90A7
1592  90A7 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1593  90AA 22 17 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1594  90AD
1595  90AD C9           	ret
1596  90AE
1597  90AE              ; ---------------------------------------------------------------------------------------------------------------------
1598  90AE              ;
1599  90AE              ; 8/1/23
1600  90AE              ;
1601  90AE              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1602  90AE              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1603  90AE              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1604  90AE
1605  90AE              ; Destruye HL y DE !!!!!
1606  90AE
1607  90AE              Inicia_punteros_de_cajas
1608  90AE
1609  90AE 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1610  90B1 CD C4 90         call Extrae_address
1611  90B4 22 F8 8B         ld (Puntero_store_caja),hl
1612  90B7 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1613  90BA 22 FC 8B     	ld (Indice_restore_caja),hl
1614  90BD CD C4 90     	call Extrae_address
1615  90C0 22 FA 8B     	ld (Puntero_restore_caja),hl
1616  90C3 C9               ret
1617  90C4
1618  90C4              ; *************************************************************************************************************************************************************
1619  90C4
1620  90C4              ;
1621  90C4              ; 20/10/22
1622  90C4              ;
1623  90C4              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1624  90C4              ;
1625  90C4              ; Destruye el puntero y DE !!!!!
1626  90C4
1627  90C4 5E           Extrae_address ld e,(hl)
1628  90C5 23           	inc hl
1629  90C6 56           	ld d,(hl)
1630  90C7 2B           	dec hl
1631  90C8 EB           	ex de,hl
1632  90C9 C9           	ret
1633  90CA
1634  90CA              ; *************************************************************************************************************************************************************
1635  90CA              ;
1636  90CA              ;	20/1/24
1637  90CA              ;
1638  90CA              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1639  90CA              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1640  90CA              ;
1641  90CA              ;   Destruye HL y BC !!!!!,
1642  90CA              ;
1643  90CA              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1644  90CA              ;					"0" ..... Izquierda.
1645  90CA
1646  90CA              Inicia_Puntero_objeto
1647  90CA
1648  90CA 3A D7 8B     	ld a,(Cuad_objeto)
1649  90CD E6 01        	and 1
1650  90CF F5           	push af
1651  90D0 CC EC 90     	call z,Inicia_puntero_objeto_izq
1652  90D3 F1           	pop af
1653  90D4 C8           	ret z
1654  90D5 CD D9 90     	call Inicia_puntero_objeto_der
1655  90D8 C9           	ret
1656  90D9
1657  90D9              ; Arrancamos desde la parte izquierda de la pantalla.
1658  90D9              ; Iniciamos (Indice_Sprite_der).
1659  90D9
1660  90D9 2A CD 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1661  90DC 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
1662  90DF CD C4 90     	call Extrae_address
1663  90E2 22 CA 8B     	ld (Puntero_objeto),hl
1664  90E5
1665  90E5 2A CF 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1666  90E8 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1667  90EB C9           	ret
1668  90EC
1669  90EC              ; Arrancamos desde la parte derecha de la pantalla.
1670  90EC              ; Iniciamos (Indice_Sprite_izq).
1671  90EC
1672  90EC 2A CF 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1673  90EF 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
1674  90F2 CD C4 90     	call Extrae_address
1675  90F5 22 CA 8B     	ld (Puntero_objeto),hl
1676  90F8
1677  90F8 2A CD 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1678  90FB 22 D1 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1679  90FE C9           	ret
1680  90FF
1681  90FF              ; **************************************************************************************************
1682  90FF              ;
1683  90FF              ;	06/07/24
1684  90FF              ;
1685  90FF              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1686  90FF
1687  90FF              Restore_entidad
1688  90FF
1689  90FF 2A F8 8B     	ld hl,(Puntero_store_caja)
1690  9102 7E           	ld a,(hl)
1691  9103 A7           	and a
1692  9104 CC 12 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1693  9107 28 F6        	jr z,Restore_entidad
1694  9109
1695  9109 11 B8 8B     	ld de,Bandeja_DRAW
1696  910C 01 0C 00     	ld bc,12
1697  910F ED B0        	ldir
1698  9111 C9           	ret
1699  9112
1700  9112              ; **************************************************************************************************
1701  9112              ;
1702  9112              ;	08/05/23
1703  9112              ;
1704  9112              ;	Incrementamos los dos punteros de entidades. (+1).
1705  9112
1706  9112              Incrementa_punteros_de_cajas
1707  9112
1708  9112 2A FA 8B     	ld hl,(Puntero_restore_caja)
1709  9115 22 F8 8B     	ld (Puntero_store_caja),hl
1710  9118 2A FC 8B     	ld hl,(Indice_restore_caja)
1711  911B 23           	inc hl
1712  911C 23           	inc hl
1713  911D 22 FC 8B     	ld (Indice_restore_caja),hl
1714  9120 CD C4 90         call Extrae_address
1715  9123 22 FA 8B         ld (Puntero_restore_caja),hl
1716  9126 C9               ret
1717  9127
1718  9127              ; -----------------------------------------------------------
1719  9127
1720  9127              ; Teclado.
1721  9127
1722  9127 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1723  9129 DB FE        	in a,($fe)
1724  912B E6 01        	and $01
1725  912D 28 02        	jr z,1f
1726  912F 18 F6        	jr Pulsa_ENTER
1727  9131 C9           1 ret
1728  9132
1729  9132              ; **************************************************************************************************
1730  9132              ;
1731  9132              ; Temporización.
1732  9132
1733  9132              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1734  9132              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1735  9132              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1736  9132              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1737  9132
1738  9132              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1739  9132              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1740  9132              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1741  9132
1742  9132              ; A partir de $4f61 no hace falta DELAY.
1743  9132
1744  9132              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1745  9132
1746  9132              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1747  9132              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1748  9132              ;	LD A,B
1749  9132              ;	AND A
1750  9132              ;	JR NZ,wait
1751  9132              ;	RET
1752  9132
1753  9132              ; ---------------------------------------------------------------------------------------------------------------
1754  9132              ;
1755  9132              ;	13/07/24
1756  9132              ;
1757  9132
1758  9132              Inicia_Shield
1759  9132
1760  9132 21 51 8C     	ld hl,Datos_Shield
1761  9135 22 55 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1762  9138
1763  9138 7E           	ld a,(hl)
1764  9139 32 58 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1765  913C
1766  913C 3E 01        	ld a,1
1767  913E 32 59 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1768  9141
1769  9141 C9           	ret
1770  9142
1771  9142              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1772  9142              ;
1773  9142              ;	4/6/24
1774  9142              ;
1775  9142              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1776  9142              ;
1777  9142              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1778  9142              ;
1779  9142
1780  9142              Actualiza_pantalla
1781  9142
1782  9142 3E 02        	ld a,2
1783  9144 D3 FE        	out ($fe),a
1784  9146
1785  9146 3A 2D 8C     	ld a,(Ctrl_3)
1786  9149 CB 57        	bit 2,a
1787  914B 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1788  914D
1789  914D              Borrando_entidades
1790  914D
1791  914D 2A 27 8C     	ld hl,(Scanlines_album_SP)
1792  9150 CD C4 90     	call Extrae_address
1793  9153 24           	inc h
1794  9154 25           	dec h
1795  9155 28 05        	jr z,Pintando_entidades
1796  9157 CD 08 96     	call Pinta_Sprites
1797  915A 18 F1        	jr Borrando_entidades
1798  915C
1799  915C              Pintando_entidades
1800  915C
1801  915C 2A 29 8C     	ld hl,(India_SP)
1802  915F 2C           	inc l
1803  9160 CD C4 90     	call Extrae_address
1804  9163 24           	inc h
1805  9164 25           	dec h
1806  9165 28 0E        	jr z,Ejecuta_escudo
1807  9167 1C           	inc e
1808  9168 1C           	inc e
1809  9169 ED 53 29 8C  	ld (India_SP),de
1810  916D CD C4 90     	call Extrae_address
1811  9170 CD 08 96     	call Pinta_Sprites
1812  9173 18 E7        	jr Pintando_entidades
1813  9175
1814  9175              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1815  9175
1816  9175              Ejecuta_escudo
1817  9175
1818  9175 3A 57 8C     	ld a,(Shield)
1819  9178 A7           	and a
1820  9179 20 2F        	jr nz,Aplica_Shield
1821  917B
1822  917B              Borrando_Amadeus
1823  917B
1824  917B 21 2D 8C     	ld hl,Ctrl_3
1825  917E CB 6E        	bit 5,(hl)
1826  9180 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1827  9182
1828  9182 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1829  9185 CD C4 90     	call Extrae_address
1830  9188 24           	inc h
1831  9189 25           	dec h
1832  918A 28 03        	jr z,Pintando_Amadeus
1833  918C CD 08 96     	call Pinta_Sprites
1834  918F
1835  918F              Pintando_Amadeus
1836  918F
1837  918F 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1838  9192 CD C4 90     	call Extrae_address
1839  9195 24           	inc h
1840  9196 25           	dec h
1841  9197 28 03        	jr z,1F
1842  9199 CD 08 96     	call Pinta_Sprites
1843  919C
1844  919C              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1845  919C
1846  919C 21 2D 8C     1 ld hl,Ctrl_3
1847  919F CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1848  91A1 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1849  91A3 CB AE        	res 5,(hl)
1850  91A5
1851  91A5 3E 01        	ld a,1												; Borde azul.
1852  91A7 D3 FE        	out ($fe),a
1853  91A9
1854  91A9 C9           	ret
1855  91AA
1856  91AA              Aplica_Shield
1857  91AA
1858  91AA              ;	Bit 1 "1" (Shield_3) Sólo borra.
1859  91AA              ;		  "0"     ""     Borra/Pinta.
1860  91AA              ;	Bit 2    ""  RET.	 No borra, no pinta.
1861  91AA
1862  91AA 21 59 8C     	ld hl,Shield_3
1863  91AD
1864  91AD CB 5E        	bit 3,(hl)
1865  91AF 20 DE        	jr nz,Pintando_Amadeus
1866  91B1
1867  91B1 CB 56        	bit 2,(hl)
1868  91B3 20 E7        	jr nz,1B
1869  91B5
1870  91B5 CB 4E        	bit 1,(hl)
1871  91B7 C4 BE 91     	call nz,Borra_Amadeus_shield
1872  91BA
1873  91BA 28 BF        	jr z,Borrando_Amadeus
1874  91BC 18 DE        	jr 1B
1875  91BE
1876  91BE              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1877  91BE
1878  91BE              Borra_Amadeus_shield
1879  91BE
1880  91BE 3A 2D 8C     	ld a,(Ctrl_3)
1881  91C1 CB 6F        	bit 5,a
1882  91C3 28 08        	jr z,1F
1883  91C5
1884  91C5 2A 0F 8C     	ld hl,(Album_de_borrado_Amadeus)
1885  91C8 CD C4 90     	call Extrae_address
1886  91CB 18 06        	jr 2F
1887  91CD
1888  91CD 2A 0D 8C     1 ld hl,(Album_de_pintado_Amadeus)
1889  91D0 CD C4 90     	call Extrae_address
1890  91D3
1891  91D3 CD 08 96     2 call Pinta_Sprites
1892  91D6
1893  91D6 AF           	xor a
1894  91D7 3C           	inc a											; Asegura NZ en la salida de la rutina.
1895  91D8
1896  91D8 C9           	ret
1897  91D9
1898  91D9              Pinta_Amadeus_shield
1899  91D9
1900  91D9 2A 0D 8C     	ld hl,(Album_de_pintado_Amadeus)
1901  91DC CD C4 90     	call Extrae_address
1902  91DF CD 08 96     	call Pinta_Sprites
1903  91E2
1904  91E2 AF           	xor a
1905  91E3 3C           	inc a											; Asegura NZ en la salida de la rutina.
1906  91E4
1907  91E4 C9           	ret
1908  91E5
1909  91E5              Borra_Pinta_Amadeus_shield
1910  91E5
1911  91E5 CD BE 91     	call Borra_Amadeus_shield
1912  91E8 CD D9 91     	call Pinta_Amadeus_shield
1913  91EB C9           	ret
1914  91EC
1915  91EC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1916  91EC              ;
1917  91EC              ;	19/6/24
1918  91EC              ;
1919  91EC
1920  91EC              Teclado
1921  91EC
1922  91EC              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1923  91EC
1924  91EC 3E F7        	ld a,$f7												; "5" para disparar.
1925  91EE DB FE        	in a,($fe)
1926  91F0 E6 10        	and $10
1927  91F2
1928  91F2 CC 79 A2     	call z,Genera_disparo_Amadeus
1929  91F5
1930  91F5 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1931  91F7 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1932  91F9 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1933  91FB CC 75 9D         call z,Amadeus_a_izquierda
1934  91FE
1935  91FE 3E F7        	ld a,$f7
1936  9200 DB FE        	in a,($fe)
1937  9202 E6 01        	and $01
1938  9204 C8           	ret z
1939  9205
1940  9205 3E F7        	ld a,$f7
1941  9207 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1942  9209 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1943  920B CC 8D 9D     	call z,Amadeus_a_derecha
1944  920E
1945  920E C9           	ret
1946  920F
1947  920F              ; ------------------------------------------------------------------------------------------------------------------------
1948  920F              ;
1949  920F              ;	06/07/24
1950  920F              ;
1951  920F
1952  920F              Genera_explosion
1953  920F
1954  920F 21 3F 8C     	ld hl,Clock_explosion
1955  9212 35           	dec (hl)
1956  9213 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1957  9215
1958  9215              Borra_entidad_colisionada
1959  9215
1960  9215 CD 1C 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1961  9218 CD 25 90     	call Cargamos_registros_con_explosion
1962  921B CD 0F 95     	call Genera_datos_de_impresion
1963  921E
1964  921E AF           	xor a
1965  921F 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1966  9220
1967  9220 C9           	ret
1968  9221
1969  9221              Siguiente_frame_explosion
1970  9221
1971  9221 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1972  9223
1973  9223              ; Avanza Frame de explosión.
1974  9223
1975  9223 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1976  9226 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1977  9229
1978  9229 79           	ld a,c
1979  922A 95           	sub l
1980  922B 20 0B        	jr nz,1F
1981  922D
1982  922D              ; Fín de la entidad !!!!!!!!!!!!!
1983  922D
1984  922D 21 FF 8B     	ld hl,Numero_parcial_de_entidades
1985  9230 35           	dec (hl)
1986  9231 23           	inc hl
1987  9232 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1988  9233
1989  9233 CD 8F 93     	call Limpiamos_bandeja_DRAW
1990  9236 18 DD        	jr Borra_entidad_colisionada
1991  9238
1992  9238 23           1 inc hl
1993  9239 23           	inc hl
1994  923A 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1995  923D 18 D6        	jr Borra_entidad_colisionada
1996  923F
1997  923F              ; ----- ----- ----- ----- -----
1998  923F
1999  923F              Genera_explosion_Amadeus
2000  923F
2001  923F 21 40 8C     	ld hl,Clock_explosion_Amadeus
2002  9242 35           	dec (hl)
2003  9243 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2004  9245
2005  9245              Borra_Amadeus_impactado
2006  9245
2007  9245 CD 81 8E     	call Change_Amadeus
2008  9248 CD 32 90     	call Cargamos_registros_con_explosion_Amadeus
2009  924B CD 53 90     	call Genera_datos_de_impresion_Amadeus
2010  924E
2011  924E 21 2D 8C     	ld hl,Ctrl_3
2012  9251 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2013  9253
2014  9253 AF           	xor a
2015  9254 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2016  9255
2017  9255 C9           	ret
2018  9256
2019  9256              Siguiente_frame_explosion_Amadeus
2020  9256
2021  9256 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2022  9258
2023  9258              ; Avanza Frame de explosión.
2024  9258
2025  9258 2A 74 89     	ld hl,(Pamm_Amadeus)
2026  925B 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2027  925E
2028  925E 79           	ld a,c
2029  925F 95           	sub l
2030  9260 20 0B        	jr nz,1F
2031  9262
2032  9262              ; Fín de Amadeus !!!!!!!!!!!!!
2033  9262              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2034  9262
2035  9262 AF           	xor a
2036  9263 32 71 89     	ld (Impacto_Amadeus),a
2037  9266 21 2D 8C     	ld hl,Ctrl_3
2038  9269 CB F6        	set 6,(hl)
2039  926B
2040  926B 18 D8        	jr Borra_Amadeus_impactado
2041  926D
2042  926D 23           1 inc hl
2043  926E 23           	inc hl
2044  926F 22 74 89     	ld (Pamm_Amadeus),hl
2045  9272 18 D1        	jr Borra_Amadeus_impactado
2046  9274
2047  9274              ; ---------------------------------------------------------------
2048  9274
2049  9274              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9274              ; ******************************************************************************************************************************************************************************************
   2+ 9274              ;
   3+ 9274              ;   21/04/24
   4+ 9274              ;
   5+ 9274              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9274              ;   (XOR) bit a bit.
   7+ 9274              ;
   8+ 9274              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9274
  10+ 9274              Derivando_RND
  11+ 9274
  12+ 9274 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9277
  14+ 9277 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9279 C5               push bc
  16+ 927A              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 927A 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 927D              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 927D
  20+ 927D A7           6 and a                                 ; Carry a "0".
  21+ 927E CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9280 30 02            jr nc,1F
  23+ 9282
  24+ 9282 CB C1            set 0,c
  25+ 9284
  26+ 9284 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9285 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9287 5F               ld e,a
  29+ 9288
  30+ 9288 7A               ld a,d
  31+ 9289 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 928B 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 928D
  34+ 928D CB 3F            srl a
  35+ 928F
  36+ 928F AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9290
  38+ 9290 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9291 28 04            jr z,4F
  40+ 9293
  41+ 9293 CB FF            set 7,a
  42+ 9295 18 02            jr 5F
  43+ 9297
  44+ 9297 CB BF        4 res 7,a
  45+ 9299
  46+ 9299 CB 21        5 sla c
  47+ 929B 10 E0            djnz 6B
  48+ 929D
  49+ 929D 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 929E
  51+ 929E 77               ld (hl),a
  52+ 929F 23               inc hl
  53+ 92A0 C1               pop bc
  54+ 92A1 10 D4            djnz 3B
  55+ 92A3
  56+ 92A3 C9               ret
  57+ 92A4
  58+ 92A4
  59+ 92A4
# file closed: RND_Derivando.asm
2050  92A4              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92A4              ;---------------------------------------------------------------------------------------------------------------
   2+ 92A4              ;
   3+ 92A4              ;   8/3/24
   4+ 92A4              ;
   5+ 92A4              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 92A4              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 92A4              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 92A4              ;	_ de la 1ª entidad del Nivel.
   9+ 92A4              ;
  10+ 92A4              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 92A4
  12+ 92A4              ;	MODIFICA: HL,DE y A.
  13+ 92A4              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 92A4
  15+ 92A4              Inicializa_Nivel
  16+ 92A4
  17+ 92A4 2A 4D 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 92A7 CD C4 90     	call Extrae_address
  19+ 92AA 7E           	ld a,(hl)
  20+ 92AB 32 FE 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 92AE 23           	inc hl
  22+ 92AF CD BC 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 92B2 22 4F 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 92B5 CD C5 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92B8
  26+ 92B8 CD D6 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92BB C9           	ret
  28+ 92BC
  29+ 92BC              ; ----------------------
  30+ 92BC
  31+ 92BC 11 DD 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92BF 01 04 00     	ld bc,4
  33+ 92C2 ED B0        	ldir
  34+ 92C4 C9           	ret
  35+ 92C5
  36+ 92C5 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92C6 CD 60 94         call Calcula_salto_en_BC
  38+ 92C9 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92CC A7               and a
  40+ 92CD ED 4A            adc hl,bc
  41+ 92CF CD C4 90         call Extrae_address
  42+ 92D2 22 E9 8B         ld (Puntero_indice_mov),hl
  43+ 92D5 C9               ret
  44+ 92D6
  45+ 92D6 3A B8 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92D9 CD 60 94     	call Calcula_salto_en_BC
  47+ 92DC 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92DF A7               and a
  49+ 92E0 ED 4A            adc hl,bc
  50+ 92E2 CD C4 90         call Extrae_address
  51+ 92E5 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92E8 C9           	ret
  53+ 92E9
  54+ 92E9              ;---------------------------------------------------------------------------------------------------------------
  55+ 92E9              ;
  56+ 92E9              ;   5/1/24
  57+ 92E9              ;
  58+ 92E9              ;	Destruye A,BC,HL,DE
  59+ 92E9
  60+ 92E9              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92E9              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92E9
  63+ 92E9              Inicia_Entidades
  64+ 92E9
  65+ 92E9              ; Preparamos los punteros de las cajas de entidades:
  66+ 92E9
  67+ 92E9 CD AE 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92EC              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92EC CD A8 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92EF
  71+ 92EF 2A 4F 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92F2
  73+ 92F2 22 4F 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92F5
  75+ 92F5 CD 0E 94     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92F8
  77+ 92F8 2A 4F 8C     	ld hl,(Datos_de_nivel)
  78+ 92FB
  79+ 92FB              ; En este punto:
  80+ 92FB              ;
  81+ 92FB              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92FB              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92FB
  84+ 92FB C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92FC
  86+ 92FC 7E           	ld a,(hl)
  87+ 92FD CD 7A 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9300
  89+ 9300 CD 72 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9303
  91+ 9303              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9303
  93+ 9303 CD 30 94     	call Busca_mov_masticados_segun_tipo
  94+ 9306
  95+ 9306 A7           	and a
  96+ 9307 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9309
  98+ 9309              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9309
 100+ 9309              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9309              ;	_ de este tipo de entidad.
 102+ 9309
 103+ 9309 CD 0C 9F     	call Situa_en_contador_general_de_mov_masticados
 104+ 930C CD 19 9F     	call Transfiere_datos_de_contadores
 105+ 930F
 106+ 930F 18 06        	jr 4F
 107+ 9311
 108+ 9311 CD B8 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9314
 110+ 9314              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9314              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9314              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9314              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9314              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9314
 116+ 9314 CD EE 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9317              ;																; _ Mov_masticados ya generados.
 118+ 9317
 119+ 9317 CD 0C 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 931A
 121+ 931A DD E5        	push ix
 122+ 931C E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 931D
 124+ 931D D5           	push de
 125+ 931E CD E3 94     	call Genera_coordenadas
 126+ 9321
 127+ 9321 ED 5B 27 8C  	ld de,(Scanlines_album_SP)
 128+ 9325 CD 1C 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9328 D1           	pop de
 130+ 9329
 131+ 9329 CD 0F 95     	call Genera_datos_de_impresion
 132+ 932C              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 932C              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 932C              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 932C              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 932C
 137+ 932C CD B2 93     	call Decrementa_Contador_de_mov_masticados
 138+ 932F
 139+ 932F              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 932F
 141+ 932F ED 5B F8 8B  	ld de,(Puntero_store_caja)
 142+ 9333 CD 9F 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 9336
 144+ 9336 CD 8F 93     	call Limpiamos_bandeja_DRAW
 145+ 9339 CD 12 91     	call Incrementa_punteros_de_cajas
 146+ 933C
 147+ 933C              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 933C              ; _ entidad del Nivel.
 149+ 933C
 150+ 933C 3A 2E 8C     	ld a,(Ctrl_4)
 151+ 933F E6 F0        	and $f0
 152+ 9341 32 2E 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 9344
 154+ 9344              ; Siguiente entidad del Nivel.
 155+ 9344
 156+ 9344 2A 4F 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9347 23           	inc hl 														; _ entidad del Nivel.
 158+ 9348
 159+ 9348 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9349
 161+ 9349 10 A7        	djnz 2B
 162+ 934B
 163+ 934B C9           	ret
 164+ 934C
 165+ 934C              ; -------------------------------------------------------------------------------------------------------------------
 166+ 934C              ;
 167+ 934C              ;	27/5/24
 168+ 934C              ;
 169+ 934C              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 934C              ;
 171+ 934C
 172+ 934C              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 934C              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 934C
 175+ 934C 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 934F CD 72 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9352
 178+ 9352
 179+ 9352              Construye_movimientos_masticados_Amadeus
 180+ 9352
 181+ 9352 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9355 CD FF 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9358              ;															; _ el (Contador_de_mov_masticados).
 184+ 9358 CD CA 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 935B              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 935B
 187+ 935B              ; Generamos movimientos masticados de Amadeus.
 188+ 935B
 189+ 935B 06 79        	ld b,121												; $0079, 121d.
 190+ 935D
 191+ 935D C5           1 push bc
 192+ 935E CD 2B 97     	call Draw
 193+ 9361 CD E4 8F     	call Guarda_movimiento_masticado
 194+ 9364
 195+ 9364 CD 9F 9A     	call Mov_right
 196+ 9367 CD 9F 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 936A
 198+ 936A C1           	pop bc
 199+ 936B 10 F0        	djnz 1B
 200+ 936D
 201+ 936D              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 936D
 203+ 936D              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 936D              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 936D
 206+ 936D 2A BF 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9370 01 08 00     	ld bc,8
 208+ 9373 A7           	and a
 209+ 9374 ED 42        	sbc hl,bc
 210+ 9376 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9379
 212+ 9379 C9           	ret
 213+ 937A
 214+ 937A              ; ---------------------------------------------------------------------
 215+ 937A              ;
 216+ 937A              ;	10/02/24
 217+ 937A              ;
 218+ 937A              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 937A              ;
 220+ 937A              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 937A
 222+ 937A              Definicion_segun_tipo
 223+ 937A
 224+ 937A CD 60 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 937D 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9380 CD 68 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9383 C9           	ret
 228+ 9384
 229+ 9384              ; ---------------------------------------------------------------------
 230+ 9384              ;
 231+ 9384              ;	6/7/24
 232+ 9384
 233+ 9384
 234+ 9384              Store_Restore_cajas
 235+ 9384
 236+ 9384 ED 5B F8 8B  	ld de,(Puntero_store_caja)
 237+ 9388 CD 9F 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 938B CD 12 91     	call Incrementa_punteros_de_cajas
 239+ 938E C9           	ret
 240+ 938F
 241+ 938F              ; ---------------------------------------------------------------------
 242+ 938F              ;
 243+ 938F              ;	23/6/24
 244+ 938F              ;
 245+ 938F              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 938F              ;
 247+ 938F              ;	MODIFY: HL
 248+ 938F
 249+ 938F              Limpiamos_bandeja_DRAW
 250+ 938F
 251+ 938F ED 73 05 8C  	ld (Stack),sp
 252+ 9393 31 DD 8B     	ld sp,Vel_left
 253+ 9396
 254+ 9396 AF           	xor a
 255+ 9397 67           	ld h,a
 256+ 9398 6F           	ld l,a
 257+ 9399
 258+ 9399 E5           	push hl
 259+ 939A E5           	push hl
 260+ 939B E5           	push hl
 261+ 939C E5           	push hl
 262+ 939D E5           	push hl
 263+ 939E E5           	push hl
 264+ 939F E5           	push hl
 265+ 93A0 E5           	push hl
 266+ 93A1 E5           	push hl
 267+ 93A2 E5           	push hl
 268+ 93A3 E5           	push hl
 269+ 93A4 E5           	push hl
 270+ 93A5 E5           	push hl
 271+ 93A6 E5           	push hl
 272+ 93A7 E5           	push hl
 273+ 93A8 E5           	push hl
 274+ 93A9 E5           	push hl
 275+ 93AA E5           	push hl
 276+ 93AB
 277+ 93AB 33           	inc sp
 278+ 93AC
 279+ 93AC E5           	push hl
 280+ 93AD ED 7B 05 8C  	ld sp,(Stack)
 281+ 93B1
 282+ 93B1 C9           	ret
 283+ 93B2
 284+ 93B2              ; ---------------------------------------------------------------------
 285+ 93B2              ;
 286+ 93B2              ;	24/03/24
 287+ 93B2
 288+ 93B2 2A C1 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 93B5 2B           	dec hl
 290+ 93B6 22 C1 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93B9 C9           	ret
 292+ 93BA
 293+ 93BA              ; ---------------------------------------------------------------------
 294+ 93BA              ;
 295+ 93BA              ;	8/5/24
 296+ 93BA
 297+ 93BA              Reinicia_entidad_maliciosa
 298+ 93BA
 299+ 93BA              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93BA
 301+ 93BA CD 0C 9F     	call Situa_en_contador_general_de_mov_masticados
 302+ 93BD CD 19 9F     	call Transfiere_datos_de_contadores
 303+ 93C0
 304+ 93C0              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93C0
 306+ 93C0 3A B8 8B     	ld a,(Tipo)
 307+ 93C3 CD 7A 93     	call Definicion_segun_tipo
 308+ 93C6
 309+ 93C6 E5           	push hl
 310+ 93C7 DD E1        	pop ix
 311+ 93C9
 312+ 93C9 DD 6E 0B     	ld l,(ix+11)
 313+ 93CC DD 66 0C     	ld h,(ix+12)
 314+ 93CF
 315+ 93CF 22 BF 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93D2
 317+ 93D2 CD 0C 90     	call Cargamos_registros_con_mov_masticado
 318+ 93D5
 319+ 93D5              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93D5              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93D5              ; Ejemplos.
 322+ 93D5
 323+ 93D5              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93D5              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93D5              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93D5              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93D5              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93D5
 329+ 93D5 21 BB 8B     	ld hl,Contador_de_vueltas
 330+ 93D8 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93DA
 332+ 93DA 7E           	ld a,(hl)
 333+ 93DB CB 2F        	sra a
 334+ 93DD CB 2F        	sra a
 335+ 93DF
 336+ 93DF 32 C3 8B     	ld (Velocidad),a
 337+ 93E2
 338+ 93E2 3E 40        	ld a,$40
 339+ 93E4 BE           	cp (hl)
 340+ 93E5 C0           	ret nz
 341+ 93E6
 342+ 93E6              ; Límitador.
 343+ 93E6
 344+ 93E6              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93E6
 346+ 93E6 CB 2E        	sra (hl)
 347+ 93E8 21 C3 8B     	ld hl,Velocidad
 348+ 93EB CB 2E        	sra (hl)
 349+ 93ED
 350+ 93ED C9           	ret
 351+ 93EE
 352+ 93EE              ; ---------------------------------------------------------------------
 353+ 93EE              ;
 354+ 93EE              ;	22/01/24
 355+ 93EE
 356+ 93EE 21 2E 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93F1 CB 46        	bit 0,(hl)
 358+ 93F3 20 0D        	jr nz,1F
 359+ 93F5 CB 4E        	bit 1,(hl)
 360+ 93F7 20 0C        	jr nz,2F
 361+ 93F9 CB 56        	bit 2,(hl)
 362+ 93FB 20 0B        	jr nz,3F
 363+ 93FD CB 5E        	bit 3,(hl)
 364+ 93FF 20 0A        	jr nz,4F
 365+ 9401 C9           	ret
 366+ 9402
 367+ 9402 CB E6        1 set 4,(hl)
 368+ 9404 C9           	ret
 369+ 9405 CB EE        2 set 5,(hl)
 370+ 9407 C9           	ret
 371+ 9408 CB F6        3 set 6,(hl)
 372+ 940A C9           	ret
 373+ 940B CB FE        4 set 7,(hl)
 374+ 940D C9           	ret
 375+ 940E
 376+ 940E              ; ---------------------------------------------------------------------
 377+ 940E              ;
 378+ 940E              ;	23/01/24
 379+ 940E              ;
 380+ 940E              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 940E              ;
 382+ 940E              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 940E              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 940E              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 940E              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 940E
 387+ 940E              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 940E
 389+ 940E 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 940F 3D           	dec a
 391+ 9410 20 06        	jr nz,1F
 392+ 9412
 393+ 9412              ; --- Tipo_1
 394+ 9412
 395+ 9412 21 2E 8C     	ld hl,Ctrl_4
 396+ 9415 CB C6        	set 0,(hl)
 397+ 9417 C9           	ret
 398+ 9418
 399+ 9418 3D           1 dec a
 400+ 9419 20 06        	jr nz,2F
 401+ 941B
 402+ 941B              ; --- Tipo_2
 403+ 941B
 404+ 941B 21 2E 8C     	ld hl,Ctrl_4
 405+ 941E CB CE        	set 1,(hl)
 406+ 9420 C9           	ret
 407+ 9421
 408+ 9421 3D           2 dec a
 409+ 9422 20 06        	jr nz,3F
 410+ 9424
 411+ 9424              ; --- Tipo_3
 412+ 9424
 413+ 9424 21 2E 8C     	ld hl,Ctrl_4
 414+ 9427 CB D6        	set 2,(hl)
 415+ 9429 C9           	ret
 416+ 942A
 417+ 942A              ; --- Tipo_3
 418+ 942A
 419+ 942A 21 2E 8C     3 ld hl,Ctrl_4
 420+ 942D CB D6        	set 2,(hl)
 421+ 942F C9           	ret
 422+ 9430
 423+ 9430              ; ---------------------------------------------------------------------
 424+ 9430              ;
 425+ 9430              ;	22/01/24
 426+ 9430
 427+ 9430 21 2E 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 9433 CB 46        	bit 0,(hl)
 429+ 9435 20 0E        	jr nz,1F
 430+ 9437
 431+ 9437 CB 4E        	bit 1,(hl)
 432+ 9439 20 10        	jr nz,2F
 433+ 943B
 434+ 943B CB 56        	bit 2,(hl)
 435+ 943D 20 12        	jr nz,3F
 436+ 943F
 437+ 943F CB 5E        	bit 3,(hl)
 438+ 9441 20 14        	jr nz,4F
 439+ 9443 18 19        	jr 6F
 440+ 9445
 441+ 9445              ; Entidad_de_Tipo_1.
 442+ 9445
 443+ 9445 CB 66        1 bit 4,(hl)
 444+ 9447 28 15        	jr z,6F
 445+ 9449 18 10        	jr 5F
 446+ 944B
 447+ 944B              ; Entidad_de_Tipo_2.
 448+ 944B
 449+ 944B CB 6E        2 bit 5,(hl)
 450+ 944D 28 0F        	jr z,6F
 451+ 944F 18 0A        	jr 5F
 452+ 9451
 453+ 9451              ; Entidad_de_Tipo_3.
 454+ 9451
 455+ 9451 CB 76        3 bit 6,(hl)
 456+ 9453 28 09        	jr z,6F
 457+ 9455 18 04        	jr 5F
 458+ 9457
 459+ 9457              ; Entidad_de_Tipo_4.
 460+ 9457
 461+ 9457 CB 7E        4 bit 7,(hl)
 462+ 9459 28 03        	jr z,6F
 463+ 945B
 464+ 945B              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 945B
 466+ 945B AF           5 xor a
 467+ 945C 3C           	inc a
 468+ 945D C9           	ret
 469+ 945E
 470+ 945E              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 945E
 472+ 945E AF           6 xor a
 473+ 945F C9           	ret
 474+ 9460
 475+ 9460              ;	------------------------------------------------------------------------------------
 476+ 9460              ;
 477+ 9460              ;	12/01/24
 478+ 9460              ;
 479+ 9460              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9460              ;
 481+ 9460              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9460              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9460
 484+ 9460 CB 27        Calcula_salto_en_BC sla a
 485+ 9462 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9464 4F           	ld c,a
 487+ 9465 06 00        	ld b,0
 488+ 9467 C9           	ret
 489+ 9468
 490+ 9468              ; ------------------------------------------------------------------
 491+ 9468              ;
 492+ 9468              ;	19/1/24
 493+ 9468              ;
 494+ 9468              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9468              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9468
 497+ 9468 A7           Situa_en_datos_de_definicion and a
 498+ 9469 ED 4A        	adc hl,bc
 499+ 946B CD C4 90     	call Extrae_address
 500+ 946E 22 03 8C         ld (Datos_de_entidad),hl
 501+ 9471 C9           	ret
 502+ 9472
 503+ 9472              ; ------------------------------------------------------------------
 504+ 9472
 505+ 9472              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9472              ; 	inc de
 507+ 9472              ; 	inc de
 508+ 9472              ; 	ex de,hl
 509+ 9472              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9472              ; 	ret
 511+ 9472
 512+ 9472              ; ----------------------------------------------------------------------------------------------------------
 513+ 9472              ;
 514+ 9472              ;	24/6/24
 515+ 9472              ;
 516+ 9472              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9472              ;	_ de entidad.
 518+ 9472              ;
 519+ 9472              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9472              ;
 521+ 9472              ;
 522+ 9472              ;	MODIFICA: HL,DE y BC
 523+ 9472
 524+ 9472
 525+ 9472              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9472
 527+ 9472 11 B8 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9475 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9476 12           	ld (de),a
 530+ 9477 23           	inc hl
 531+ 9478              ;
 532+ 9478 11 C6 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 947B 01 02 00     	ld bc,2
 534+ 947E ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9480              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9480 11 BB 8B     	ld de,Contador_de_vueltas
 537+ 9483 7E           	ld a,(hl)
 538+ 9484 12           	ld (de),a
 539+ 9485 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9486
 541+ 9486 11 CD 8B     	ld de,Indice_Sprite_der
 542+ 9489 01 04 00     	ld bc,4
 543+ 948C ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 948E
 545+ 948E 11 D5 8B     	ld de,Posicion_inicio
 546+ 9491 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9494 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9496
 549+ 9496 11 BF 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9499 01 02 00     	ld bc,2
 551+ 949C ED B0        	ldir
 552+ 949E
 553+ 949E C9           	ret
 554+ 949F
 555+ 949F              ; ----------------------------------------------------------------------------------------------------------
 556+ 949F              ;
 557+ 949F              ;	1/8/24
 558+ 949F              ;
 559+ 949F
 560+ 949F              Parametros_de_bandeja_DRAW_a_caja
 561+ 949F
 562+ 949F 21 B8 8B     	ld hl,Bandeja_DRAW
 563+ 94A2 01 0C 00     	ld bc,12
 564+ 94A5 ED B0        	ldir
 565+ 94A7 C9           	ret
 566+ 94A8
 567+ 94A8              ;---------------------------------------------------------------------------------------------------------------
 568+ 94A8              ;
 569+ 94A8              ;	5/1/24
 570+ 94A8              ;
 571+ 94A8              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 94A8              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 94A8              ;
 574+ 94A8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 94A8              ;
 576+ 94A8              ;	(Numero_parcial_de_entidades)="7".
 577+ 94A8              ;
 578+ 94A8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 94A8              ;
 580+ 94A8              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 94A8              ;
 582+ 94A8              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 94A8              ;	MODIFICA: A y B.
 584+ 94A8              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 94A8
 586+ 94A8              Inicializa_Numero_parcial_de_entidades
 587+ 94A8
 588+ 94A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 94A8
 590+ 94A8 3A FE 8B     	ld a,(Numero_de_entidades)
 591+ 94AB A7           	and a
 592+ 94AC
 593+ 94AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 94AC              ;	jr z,$
 595+ 94AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 94AC
 597+ 94AC 20 03        	jr nz,3F
 598+ 94AE
 599+ 94AE              ; ---------- ---------- ----------
 600+ 94AE
 601+ 94AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 94AE              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 94AE
 604+ 94AE CD A4 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 94B1
 606+ 94B1              ; ---------- ---------- ----------
 607+ 94B1
 608+ 94B1 3A FE 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 94B4 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 94B6 38 08        	jr c,1F
 611+ 94B8
 612+ 94B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94B8              ; Actualizamos variables.
 614+ 94B8
 615+ 94B8 3E 07        	ld a,7
 616+ 94BA 32 FF 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94BD 47           	ld b,a
 618+ 94BE 18 04        	jr 2F
 619+ 94C0
 620+ 94C0              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94C0              ; (Numero_de_entidades)="0".
 622+ 94C0
 623+ 94C0 32 FF 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94C3 47           	ld b,a
 625+ 94C4 C9           2 ret
 626+ 94C5
# file closed: Rutinas_de_inicio_y_niveles.asm
2051  94C5              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94C5              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94C5              ;
   3+ 94C5              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94C5              ;
   5+ 94C5              ; *****************************************************************************************************************************************************************************************
   6+ 94C5              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94C5
   8+ 94C5 7C           calcula_tercio ld a,h
   9+ 94C6 E6 18        	and $18
  10+ 94C8 CB 2F        	sra a
  11+ 94CA CB 2F        	sra a
  12+ 94CC CB 2F        	sra a
  13+ 94CE C9           	ret
  14+ 94CF
# file closed: calcula_tercio.asm
2052  94CF              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94CF              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94CF              ;
   3+ 94CF              ;
   4+ 94CF              ;	CLS.
   5+ 94CF              ;
   6+ 94CF              ;	Limpia la pantalla y define sus atributos.
   7+ 94CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94CF              ;
   9+ 94CF              ;	COLORES: 0 ..... NEGRO
  10+ 94CF              ;    		 1 ..... AZUL
  11+ 94CF              ; 			 2 ..... ROJO
  12+ 94CF              ;			 3 ..... MAGENTA
  13+ 94CF              ; 			 4 ..... VERDE
  14+ 94CF              ; 			 5 ..... CIAN
  15+ 94CF              ;			 6 ..... AMARILLO
  16+ 94CF              ; 			 7 ..... BLANCO
  17+ 94CF              ;
  18+ 94CF              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94CF              ;
  20+ 94CF              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94CF
  22+ 94CF
  23+ 94CF 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94D2 11 01 40     	LD DE,$4001
  25+ 94D5 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94D8 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94DA ED B0        	LDIR
  28+ 94DC 01 FF 02     	LD BC,767
  29+ 94DF 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94E0 ED B0        	LDIR
  31+ 94E2 C9           	ret
  32+ 94E3
# file closed: Cls.asm
2053  94E3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94E3              ; ------------------------------------------------------------------------
   2+ 94E3              ;
   3+ 94E3              ;	30/1/24
   4+ 94E3              ;
   5+ 94E3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94E3              ;	Fila superior "0", Columna izquierda "0".
   7+ 94E3              ;
   8+ 94E3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94E3              ;
  10+ 94E3              ;	Modifica: A,BC y DE.
  11+ 94E3
  12+ 94E3 7D           Genera_coordenadas ld a,l
  13+ 94E4 E6 1F        	and $1f
  14+ 94E6 32 B9 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94E9
  16+ 94E9 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94EA FE 40        	cp $40
  18+ 94EC 38 1C        	jr c,4F
  19+ 94EE
  20+ 94EE CD C5 94     	call calcula_tercio
  21+ 94F1 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94F2
  23+ 94F2 1E 00        	ld e,0
  24+ 94F4 7D           	ld a,l
  25+ 94F5 E6 E0        	and $e0
  26+ 94F7 28 01        	jr z,1F
  27+ 94F9 04           	inc b
  28+ 94FA
  29+ 94FA 04           1 inc b
  30+ 94FB 05           	dec b
  31+ 94FC 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94FE              ;														; _ , salimos.
  33+ 94FE 1C           3 inc e
  34+ 94FF D6 20        	sub 32
  35+ 9501 20 FB        	jr nz,3B
  36+ 9503 10 F5        	djnz 1B
  37+ 9505
  38+ 9505 7B           2 ld a,e
  39+ 9506 32 BA 8B     	ld (Coordenada_y),a
  40+ 9509 C9           	ret
  41+ 950A
  42+ 950A AF           4 xor a
  43+ 950B 32 BA 8B     	ld (Coordenada_y),a
  44+ 950E C9           	ret
  45+ 950F
# file closed: Genera_coordenadas.asm
2054  950F              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 950F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 950F              ;
   3+ 950F              ;	20/09/24
   4+ 950F              ;
   5+ 950F              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 950F              ;   DE contiene Puntero_objeto.
   7+ 950F              ;   IX contiene el Puntero de impresión.
   8+ 950F
   9+ 950F              Genera_datos_de_impresion
  10+ 950F
  11+ 950F ED 73 05 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9513
  13+ 9513 31 BF 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9516 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9518
  16+ 9518 2A 27 8C         ld hl,(Scanlines_album_SP)
  17+ 951B
  18+ 951B 3E 05            ld a,5
  19+ 951D 85               add l
  20+ 951E 6F               ld l,a
  21+ 951F
  22+ 951F F9               ld sp,hl
  23+ 9520 22 27 8C         ld (Scanlines_album_SP),hl
  24+ 9523
  25+ 9523 21 00 00         ld hl,0
  26+ 9526
  27+ 9526 DD E5            push ix
  28+ 9528 3B               dec sp
  29+ 9529 ED 7A            adc hl,sp
  30+ 952B D5               push de
  31+ 952C
  32+ 952C              ; Recuperamos SP.
  33+ 952C
  34+ 952C ED 7B 05 8C      ld sp,(Stack)
  35+ 9530
  36+ 9530 E5               push hl
  37+ 9531 F1               pop af
  38+ 9532 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9533
  40+ 9533              ; Tenemos el encabezado listo.
  41+ 9533              ; Preparamos registros para generar los scanlines.
  42+ 9533
  43+ 9533 DD E5            push ix
  44+ 9535 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9536
  46+ 9536 ED 5B 27 8C      ld de,(Scanlines_album_SP)
  47+ 953A
  48+ 953A              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 953A              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 953A
  51+ 953A 7C               ld a,h
  52+ 953B FE 50            cp $50
  53+ 953D 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 953F
  55+ 953F 20 05            jr nz,2F
  56+ 9541
  57+ 9541 7D               ld a,l
  58+ 9542 FE E0            cp $e0
  59+ 9544 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9546
  61+ 9546 7D           2 ld a,l
  62+ 9547 FE C0            cp $c0
  63+ 9549 D2 DF 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 954C
  65+ 954C              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 954C
  67+ 954C CD DD 99         call NextScan
  68+ 954F EB               ex de,hl
  69+ 9550
  70+ 9550 73               ld (hl),e
  71+ 9551 23               inc hl
  72+ 9552 72               ld (hl),d
  73+ 9553 23               inc hl
  74+ 9554
  75+ 9554 EB               ex de,hl
  76+ 9555
  77+ 9555 CD DD 99         call NextScan
  78+ 9558 EB               ex de,hl
  79+ 9559
  80+ 9559 73               ld (hl),e
  81+ 955A 23               inc hl
  82+ 955B 72               ld (hl),d
  83+ 955C 23               inc hl
  84+ 955D
  85+ 955D EB               ex de,hl
  86+ 955E
  87+ 955E CD DD 99         call NextScan
  88+ 9561 EB               ex de,hl
  89+ 9562
  90+ 9562 73               ld (hl),e
  91+ 9563 23               inc hl
  92+ 9564 72               ld (hl),d
  93+ 9565 23               inc hl
  94+ 9566
  95+ 9566 EB               ex de,hl
  96+ 9567
  97+ 9567 CD DD 99         call NextScan
  98+ 956A EB               ex de,hl
  99+ 956B
 100+ 956B 73               ld (hl),e
 101+ 956C 23               inc hl
 102+ 956D 72               ld (hl),d
 103+ 956E 23               inc hl
 104+ 956F
 105+ 956F EB               ex de,hl
 106+ 9570
 107+ 9570 CD DD 99         call NextScan
 108+ 9573 EB               ex de,hl
 109+ 9574
 110+ 9574 73               ld (hl),e
 111+ 9575 23               inc hl
 112+ 9576 72               ld (hl),d
 113+ 9577 23               inc hl
 114+ 9578
 115+ 9578 EB               ex de,hl
 116+ 9579
 117+ 9579 CD DD 99         call NextScan
 118+ 957C EB               ex de,hl
 119+ 957D
 120+ 957D 73               ld (hl),e
 121+ 957E 23               inc hl
 122+ 957F 72               ld (hl),d
 123+ 9580 23               inc hl
 124+ 9581
 125+ 9581 EB               ex de,hl
 126+ 9582
 127+ 9582 CD DD 99         call NextScan
 128+ 9585 EB               ex de,hl
 129+ 9586
 130+ 9586 73               ld (hl),e
 131+ 9587 23               inc hl
 132+ 9588 72               ld (hl),d
 133+ 9589 23               inc hl
 134+ 958A
 135+ 958A EB               ex de,hl
 136+ 958B
 137+ 958B CD DD 99         call NextScan
 138+ 958E EB               ex de,hl
 139+ 958F
 140+ 958F 73               ld (hl),e
 141+ 9590 23               inc hl
 142+ 9591 72               ld (hl),d
 143+ 9592 23               inc hl
 144+ 9593
 145+ 9593 EB               ex de,hl
 146+ 9594
 147+ 9594 CD DD 99         call NextScan
 148+ 9597 EB               ex de,hl
 149+ 9598
 150+ 9598 73               ld (hl),e
 151+ 9599 23               inc hl
 152+ 959A 72               ld (hl),d
 153+ 959B 23               inc hl
 154+ 959C
 155+ 959C EB               ex de,hl
 156+ 959D
 157+ 959D CD DD 99         call NextScan
 158+ 95A0 EB               ex de,hl
 159+ 95A1
 160+ 95A1 73               ld (hl),e
 161+ 95A2 23               inc hl
 162+ 95A3 72               ld (hl),d
 163+ 95A4 23               inc hl
 164+ 95A5
 165+ 95A5 EB               ex de,hl
 166+ 95A6
 167+ 95A6 CD DD 99         call NextScan
 168+ 95A9 EB               ex de,hl
 169+ 95AA
 170+ 95AA 73               ld (hl),e
 171+ 95AB 23               inc hl
 172+ 95AC 72               ld (hl),d
 173+ 95AD 23               inc hl
 174+ 95AE
 175+ 95AE EB               ex de,hl
 176+ 95AF
 177+ 95AF CD DD 99         call NextScan
 178+ 95B2 EB               ex de,hl
 179+ 95B3
 180+ 95B3 73               ld (hl),e
 181+ 95B4 23               inc hl
 182+ 95B5 72               ld (hl),d
 183+ 95B6 23               inc hl
 184+ 95B7
 185+ 95B7 EB               ex de,hl
 186+ 95B8
 187+ 95B8 CD DD 99         call NextScan
 188+ 95BB EB               ex de,hl
 189+ 95BC
 190+ 95BC 73               ld (hl),e
 191+ 95BD 23               inc hl
 192+ 95BE 72               ld (hl),d
 193+ 95BF 23               inc hl
 194+ 95C0
 195+ 95C0 EB               ex de,hl
 196+ 95C1
 197+ 95C1 CD DD 99         call NextScan
 198+ 95C4 EB               ex de,hl
 199+ 95C5
 200+ 95C5 73               ld (hl),e
 201+ 95C6 23               inc hl
 202+ 95C7 72               ld (hl),d
 203+ 95C8 23               inc hl
 204+ 95C9
 205+ 95C9 EB               ex de,hl
 206+ 95CA
 207+ 95CA CD DD 99         call NextScan
 208+ 95CD EB               ex de,hl
 209+ 95CE
 210+ 95CE              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95CE              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95CE              ;   _ generar sus scanlines.
 213+ 95CE
 214+ 95CE              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95CE
 216+ 95CE 73               ld (hl),e
 217+ 95CF 23               inc hl
 218+ 95D0 72               ld (hl),d
 219+ 95D1 23               inc hl
 220+ 95D2
 221+ 95D2              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95D2
 223+ 95D2 22 27 8C         ld (Scanlines_album_SP),hl
 224+ 95D5
 225+ 95D5 EB               ex de,hl
 226+ 95D6
 227+ 95D6              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95D6
 229+ 95D6              ;    call NextScan
 230+ 95D6              ;    call NextScan
 231+ 95D6
 232+ 95D6 22 32 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95D9
 234+ 95D9              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95D9
 236+ 95D9 08               ex af,af
 237+ 95DA
 238+ 95DA F5               push af
 239+ 95DB E1               pop hl
 240+ 95DC
 241+ 95DC 36 10            ld (hl),16
 242+ 95DE
 243+ 95DE C9               ret
 244+ 95DF
 245+ 95DF              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95DF
 247+ 95DF              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95DF
 249+ 95DF 3E 57            ld a,$57
 250+ 95E1 94               sub h
 251+ 95E2 47               ld b,a
 252+ 95E3
 253+ 95E3 3E DF            ld a,$df
 254+ 95E5 BD               cp l
 255+ 95E6 38 04            jr c,1F
 256+ 95E8
 257+ 95E8 3E 08            ld a,8
 258+ 95EA 80               add b
 259+ 95EB 47               ld b,a
 260+ 95EC
 261+ 95EC              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95EC              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95EC
 264+ 95EC 48           1 ld c,b
 265+ 95ED 0C               inc c
 266+ 95EE
 267+ 95EE 04               inc b
 268+ 95EF 05               dec b
 269+ 95F0 20 02            jr nz,3F
 270+ 95F2
 271+ 95F2 18 0B            jr 6F
 272+ 95F4
 273+ 95F4 CD DD 99     3 call NextScan
 274+ 95F7 EB               ex de,hl
 275+ 95F8
 276+ 95F8 73               ld (hl),e
 277+ 95F9 23               inc hl
 278+ 95FA 72               ld (hl),d
 279+ 95FB 23               inc hl
 280+ 95FC
 281+ 95FC EB               ex de,hl
 282+ 95FD 10 F5            djnz 3B
 283+ 95FF
 284+ 95FF ED 53 27 8C  6 ld (Scanlines_album_SP),de
 285+ 9603
 286+ 9603 08           5 ex af,af
 287+ 9604 F5               push af
 288+ 9605 E1               pop hl
 289+ 9606
 290+ 9606 71               ld (hl),c
 291+ 9607
 292+ 9607 C9               ret
 293+ 9608
# file closed: Genera_datos_de_impresion.asm
2055  9608              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9608              ; -----------------------------------------------------------------------------
   2+ 9608              ;
   3+ 9608              ;   11/03/24
   4+ 9608              ;
   5+ 9608
   6+ 9608              Pinta_Sprites
   7+ 9608
   8+ 9608              ;    ld hl,(Scanlines_album_SP)
   9+ 9608              ;    call Extrae_address
  10+ 9608
  11+ 9608              ;    inc h
  12+ 9608              ;    dec h
  13+ 9608              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9608
  15+ 9608 ED 73 05 8C      ld (Stack),sp
  16+ 960C
  17+ 960C EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 960D              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 960D 2C               inc l
  20+ 960E 2C               inc l
  21+ 960F
  22+ 960F 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9610
  24+ 9610 2C               inc l
  25+ 9611 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9612
  27+ 9612              ;   Seleccionamos rutina de impresión:
  28+ 9612
  29+ 9612 3E 10            ld a,16
  30+ 9614 B8               cp b
  31+ 9615 C2 11 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9618
  33+ 9618              ;   Rutinas:
  34+ 9618
  35+ 9618              Pinta_rapido    ;   1520 t/states.
  36+ 9618
  37+ 9618 E1               pop hl
  38+ 9619
  39+ 9619 1A               ld a,(de)
  40+ 961A AE               xor (hl)
  41+ 961B 77               ld (hl),a
  42+ 961C 2C               inc l
  43+ 961D 1C               inc e
  44+ 961E 1A               ld a,(de)
  45+ 961F AE               xor (hl)
  46+ 9620 77               ld (hl),a
  47+ 9621 2C               inc l
  48+ 9622 1C               inc e
  49+ 9623 1A               ld a,(de)
  50+ 9624 AE               xor (hl)
  51+ 9625 77               ld (hl),a
  52+ 9626 13               inc de
  53+ 9627
  54+ 9627 E1               pop hl
  55+ 9628
  56+ 9628 1A               ld a,(de)
  57+ 9629 AE               xor (hl)
  58+ 962A 77               ld (hl),a
  59+ 962B 2C               inc l
  60+ 962C 1C               inc e
  61+ 962D 1A               ld a,(de)
  62+ 962E AE               xor (hl)
  63+ 962F 77               ld (hl),a
  64+ 9630 2C               inc l
  65+ 9631 1C               inc e
  66+ 9632 1A               ld a,(de)
  67+ 9633 AE               xor (hl)
  68+ 9634 77               ld (hl),a
  69+ 9635 13               inc de
  70+ 9636
  71+ 9636 E1               pop hl
  72+ 9637
  73+ 9637 1A               ld a,(de)
  74+ 9638 AE               xor (hl)
  75+ 9639 77               ld (hl),a
  76+ 963A 2C               inc l
  77+ 963B 1C               inc e
  78+ 963C 1A               ld a,(de)
  79+ 963D AE               xor (hl)
  80+ 963E 77               ld (hl),a
  81+ 963F 2C               inc l
  82+ 9640 1C               inc e
  83+ 9641 1A               ld a,(de)
  84+ 9642 AE               xor (hl)
  85+ 9643 77               ld (hl),a
  86+ 9644 13               inc de
  87+ 9645
  88+ 9645 E1               pop hl
  89+ 9646
  90+ 9646 1A               ld a,(de)
  91+ 9647 AE               xor (hl)
  92+ 9648 77               ld (hl),a
  93+ 9649 2C               inc l
  94+ 964A 1C               inc e
  95+ 964B 1A               ld a,(de)
  96+ 964C AE               xor (hl)
  97+ 964D 77               ld (hl),a
  98+ 964E 2C               inc l
  99+ 964F 1C               inc e
 100+ 9650 1A               ld a,(de)
 101+ 9651 AE               xor (hl)
 102+ 9652 77               ld (hl),a
 103+ 9653 13               inc de
 104+ 9654
 105+ 9654 E1               pop hl
 106+ 9655
 107+ 9655 1A               ld a,(de)
 108+ 9656 AE               xor (hl)
 109+ 9657 77               ld (hl),a
 110+ 9658 2C               inc l
 111+ 9659 1C               inc e
 112+ 965A 1A               ld a,(de)
 113+ 965B AE               xor (hl)
 114+ 965C 77               ld (hl),a
 115+ 965D 2C               inc l
 116+ 965E 1C               inc e
 117+ 965F 1A               ld a,(de)
 118+ 9660 AE               xor (hl)
 119+ 9661 77               ld (hl),a
 120+ 9662 13               inc de
 121+ 9663
 122+ 9663 E1               pop hl
 123+ 9664
 124+ 9664 1A               ld a,(de)
 125+ 9665 AE               xor (hl)
 126+ 9666 77               ld (hl),a
 127+ 9667 2C               inc l
 128+ 9668 1C               inc e
 129+ 9669 1A               ld a,(de)
 130+ 966A AE               xor (hl)
 131+ 966B 77               ld (hl),a
 132+ 966C 2C               inc l
 133+ 966D 1C               inc e
 134+ 966E 1A               ld a,(de)
 135+ 966F AE               xor (hl)
 136+ 9670 77               ld (hl),a
 137+ 9671 13               inc de
 138+ 9672
 139+ 9672 E1               pop hl
 140+ 9673
 141+ 9673 1A               ld a,(de)
 142+ 9674 AE               xor (hl)
 143+ 9675 77               ld (hl),a
 144+ 9676 2C               inc l
 145+ 9677 1C               inc e
 146+ 9678 1A               ld a,(de)
 147+ 9679 AE               xor (hl)
 148+ 967A 77               ld (hl),a
 149+ 967B 2C               inc l
 150+ 967C 1C               inc e
 151+ 967D 1A               ld a,(de)
 152+ 967E AE               xor (hl)
 153+ 967F 77               ld (hl),a
 154+ 9680 13               inc de
 155+ 9681
 156+ 9681 E1               pop hl
 157+ 9682
 158+ 9682 1A               ld a,(de)
 159+ 9683 AE               xor (hl)
 160+ 9684 77               ld (hl),a
 161+ 9685 2C               inc l
 162+ 9686 1C               inc e
 163+ 9687 1A               ld a,(de)
 164+ 9688 AE               xor (hl)
 165+ 9689 77               ld (hl),a
 166+ 968A 2C               inc l
 167+ 968B 1C               inc e
 168+ 968C 1A               ld a,(de)
 169+ 968D AE               xor (hl)
 170+ 968E 77               ld (hl),a
 171+ 968F 13               inc de
 172+ 9690
 173+ 9690 E1               pop hl
 174+ 9691
 175+ 9691 1A               ld a,(de)
 176+ 9692 AE               xor (hl)
 177+ 9693 77               ld (hl),a
 178+ 9694 2C               inc l
 179+ 9695 1C               inc e
 180+ 9696 1A               ld a,(de)
 181+ 9697 AE               xor (hl)
 182+ 9698 77               ld (hl),a
 183+ 9699 2C               inc l
 184+ 969A 1C               inc e
 185+ 969B 1A               ld a,(de)
 186+ 969C AE               xor (hl)
 187+ 969D 77               ld (hl),a
 188+ 969E 13               inc de
 189+ 969F
 190+ 969F E1               pop hl
 191+ 96A0
 192+ 96A0 1A               ld a,(de)
 193+ 96A1 AE               xor (hl)
 194+ 96A2 77               ld (hl),a
 195+ 96A3 2C               inc l
 196+ 96A4 1C               inc e
 197+ 96A5 1A               ld a,(de)
 198+ 96A6 AE               xor (hl)
 199+ 96A7 77               ld (hl),a
 200+ 96A8 2C               inc l
 201+ 96A9 1C               inc e
 202+ 96AA 1A               ld a,(de)
 203+ 96AB AE               xor (hl)
 204+ 96AC 77               ld (hl),a
 205+ 96AD 13               inc de
 206+ 96AE
 207+ 96AE E1               pop hl
 208+ 96AF
 209+ 96AF 1A               ld a,(de)
 210+ 96B0 AE               xor (hl)
 211+ 96B1 77               ld (hl),a
 212+ 96B2 2C               inc l
 213+ 96B3 1C               inc e
 214+ 96B4 1A               ld a,(de)
 215+ 96B5 AE               xor (hl)
 216+ 96B6 77               ld (hl),a
 217+ 96B7 2C               inc l
 218+ 96B8 1C               inc e
 219+ 96B9 1A               ld a,(de)
 220+ 96BA AE               xor (hl)
 221+ 96BB 77               ld (hl),a
 222+ 96BC 13               inc de
 223+ 96BD
 224+ 96BD E1               pop hl
 225+ 96BE
 226+ 96BE 1A               ld a,(de)
 227+ 96BF AE               xor (hl)
 228+ 96C0 77               ld (hl),a
 229+ 96C1 2C               inc l
 230+ 96C2 1C               inc e
 231+ 96C3 1A               ld a,(de)
 232+ 96C4 AE               xor (hl)
 233+ 96C5 77               ld (hl),a
 234+ 96C6 2C               inc l
 235+ 96C7 1C               inc e
 236+ 96C8 1A               ld a,(de)
 237+ 96C9 AE               xor (hl)
 238+ 96CA 77               ld (hl),a
 239+ 96CB 13               inc de
 240+ 96CC
 241+ 96CC E1               pop hl
 242+ 96CD
 243+ 96CD 1A               ld a,(de)
 244+ 96CE AE               xor (hl)
 245+ 96CF 77               ld (hl),a
 246+ 96D0 2C               inc l
 247+ 96D1 1C               inc e
 248+ 96D2 1A               ld a,(de)
 249+ 96D3 AE               xor (hl)
 250+ 96D4 77               ld (hl),a
 251+ 96D5 2C               inc l
 252+ 96D6 1C               inc e
 253+ 96D7 1A               ld a,(de)
 254+ 96D8 AE               xor (hl)
 255+ 96D9 77               ld (hl),a
 256+ 96DA 13               inc de
 257+ 96DB
 258+ 96DB E1               pop hl
 259+ 96DC
 260+ 96DC 1A               ld a,(de)
 261+ 96DD AE               xor (hl)
 262+ 96DE 77               ld (hl),a
 263+ 96DF 2C               inc l
 264+ 96E0 1C               inc e
 265+ 96E1 1A               ld a,(de)
 266+ 96E2 AE               xor (hl)
 267+ 96E3 77               ld (hl),a
 268+ 96E4 2C               inc l
 269+ 96E5 1C               inc e
 270+ 96E6 1A               ld a,(de)
 271+ 96E7 AE               xor (hl)
 272+ 96E8 77               ld (hl),a
 273+ 96E9 13               inc de
 274+ 96EA
 275+ 96EA E1               pop hl
 276+ 96EB
 277+ 96EB 1A               ld a,(de)
 278+ 96EC AE               xor (hl)
 279+ 96ED 77               ld (hl),a
 280+ 96EE 2C               inc l
 281+ 96EF 1C               inc e
 282+ 96F0 1A               ld a,(de)
 283+ 96F1 AE               xor (hl)
 284+ 96F2 77               ld (hl),a
 285+ 96F3 2C               inc l
 286+ 96F4 1C               inc e
 287+ 96F5 1A               ld a,(de)
 288+ 96F6 AE               xor (hl)
 289+ 96F7 77               ld (hl),a
 290+ 96F8 13               inc de
 291+ 96F9
 292+ 96F9 E1               pop hl
 293+ 96FA
 294+ 96FA 1A               ld a,(de)
 295+ 96FB AE               xor (hl)
 296+ 96FC 77               ld (hl),a
 297+ 96FD 2C               inc l
 298+ 96FE 1C               inc e
 299+ 96FF 1A               ld a,(de)
 300+ 9700 AE               xor (hl)
 301+ 9701 77               ld (hl),a
 302+ 9702 2C               inc l
 303+ 9703 1C               inc e
 304+ 9704 1A               ld a,(de)
 305+ 9705 AE               xor (hl)
 306+ 9706 77               ld (hl),a
 307+ 9707 13               inc de
 308+ 9708
 309+ 9708 ED 73 27 8C      ld (Scanlines_album_SP),sp
 310+ 970C ED 7B 05 8C      ld sp,(Stack)
 311+ 9710 C9               ret
 312+ 9711
 313+ 9711              Pinta_lento
 314+ 9711
 315+ 9711 E1           1 pop hl
 316+ 9712
 317+ 9712 1A               ld a,(de)
 318+ 9713 AE               xor (hl)
 319+ 9714 77               ld (hl),a
 320+ 9715 2C               inc l
 321+ 9716 1C               inc e
 322+ 9717 1A               ld a,(de)
 323+ 9718 AE               xor (hl)
 324+ 9719 77               ld (hl),a
 325+ 971A 2C               inc l
 326+ 971B 1C               inc e
 327+ 971C 1A               ld a,(de)
 328+ 971D AE               xor (hl)
 329+ 971E 77               ld (hl),a
 330+ 971F 13               inc de
 331+ 9720
 332+ 9720 10 EF            djnz 1B
 333+ 9722
 334+ 9722 ED 73 27 8C      ld (Scanlines_album_SP),sp
 335+ 9726 ED 7B 05 8C      ld sp,(Stack)
 336+ 972A C9               ret
# file closed: Pinta_Sprites.asm
2056  972B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 972B              ; ******************************************************************************************************************************************************************************************
   2+ 972B              ;
   3+ 972B              ; 26/06/23
   4+ 972B              ;
   5+ 972B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 972B
   7+ 972B              Draw
   8+ 972B
   9+ 972B CD D1 99     	call Prepara_draw
  10+ 972E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 972F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9730 28 05        	jr z,2F
  13+ 9732
  14+ 9732 3A D7 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9735 18 0C        	jr 1F
  16+ 9737
  17+ 9737 2A D5 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 973A 22 C8 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 973D CD C9 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9740              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9740
  22+ 9740 CD 70 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9743
  24+ 9743 3A C5 8B     1 ld a,(Ctrl_0)
  25+ 9746 CB 6F        	bit 5,a
  26+ 9748 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 974A
  28+ 974A CD 5F 97     	call Comprueba_limite_horizontal
  29+ 974D CD EF 97     	call Comprueba_limite_vertical
  30+ 9750
  31+ 9750              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9750              ; -----------------------
  33+ 9750              ; -----------------------
  34+ 9750              ; -----------------------
  35+ 9750
  36+ 9750 CD 45 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9753 CD 7C 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9756
  39+ 9756 3A C5 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9759 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 975B 32 C5 8B     	ld (Ctrl_0),a
  42+ 975E
  43+ 975E C9           	ret
  44+ 975F
  45+ 975F              ; *******************************************************************************************************************************************************************************************
  46+ 975F              ;	21/01/23
  47+ 975F              ;
  48+ 975F              ; 	Comprueba_limite_horizontal.
  49+ 975F              ;
  50+ 975F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 975F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 975F              ;
  53+ 975F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 975F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 975F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 975F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 975F
  58+ 975F
  59+ 975F
  60+ 975F 3A C5 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9762 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9764 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9766 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9768 32 C5 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 976B 18 09            jr 6F
  66+ 976D CB 5F        1 bit 3,a
  67+ 976F 28 0A            jr z,2F
  68+ 9771 E6 F7            and $f7
  69+ 9773 32 C5 8B         ld (Ctrl_0),a
  70+ 9776 CD C9 98     6 call Inicializacion
  71+ 9779 18 5B            jr 5F
  72+ 977B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 977C
  74+ 977C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 977C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 977C
  77+ 977C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 977D 2A D9 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9780 CD C5 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9783 67           	ld h,a
  81+ 9784 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9785 CD C5 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9788 67           	ld h,a
  84+ 9789 A7           	and a
  85+ 978A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 978C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 978D 3A D7 8B     	ld a,(Cuad_objeto)
  88+ 9790 FE 02        	cp 2
  89+ 9792 38 1E        	jr c,3F
  90+ 9794 28 1C        	jr z,3F
  91+ 9796 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9797 28 23            jr z,7F
  93+ 9799 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 979B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 979D E1           	pop hl
  96+ 979E
  97+ 979E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 979E              ; _para indicar con E="2" en caso necesario.
  99+ 979E
 100+ 979E E5               push hl
 101+ 979F C5               push bc
 102+ 97A0 CD C5 94     	call calcula_tercio
 103+ 97A3 FE 01        	cp 1
 104+ 97A5 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 97A7 CD D7 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 97AA 28 26            jr z,9F
 107+ 97AC 38 24            jr c,9F
 108+ 97AE 1E 00        11 ld e,0
 109+ 97B0 18 22            jr 8F
 110+ 97B2 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97B3 28 07        	jr z, 7F
 112+ 97B5 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97B7 1E 00         	ld e,0
 114+ 97B9 E1           	pop hl
 115+ 97BA 18 04        	jr 4F
 116+ 97BC 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97BE 18 15            jr 10F
 118+ 97C0
 119+ 97C0              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97C0              ; _para indicar con E="2" en caso necesario.
 121+ 97C0
 122+ 97C0 E5           4 push hl
 123+ 97C1 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97C2 CD C5 94     	call calcula_tercio
 125+ 97C5 FE 01        	cp 1
 126+ 97C7 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97C9 CD D7 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97CC 28 04            jr z,9F
 129+ 97CE 30 02            jr nc,9F
 130+ 97D0 18 02        	jr 8F
 131+ 97D2 1E 02        9 ld e,2
 132+ 97D4 C1           8 pop bc
 133+ 97D5 E1           10 pop hl
 134+ 97D6 C9           5 ret
 135+ 97D7
 136+ 97D7              ; --------------------
 137+ 97D7              ;
 138+ 97D7              ; 25/08/22
 139+ 97D7
 140+ 97D7 CD C5 94     Comprueba_centro call calcula_tercio
 141+ 97DA 67               ld h,a
 142+ 97DB 08           	ex af,af
 143+ 97DC FE 02        	cp 2
 144+ 97DE 38 07        	jr c,1F
 145+ 97E0 28 05        	jr z,1F
 146+ 97E2 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97E5 18 03        	jr 2F
 148+ 97E7 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97EA 08           2 ex af,af
 150+ 97EB A7               and a
 151+ 97EC ED 42            sbc hl,bc
 152+ 97EE C9               ret
 153+ 97EF
 154+ 97EF              ; *********************************************************************************************************************************************************************************************
 155+ 97EF              ;
 156+ 97EF              ;   16/8/22
 157+ 97EF              ;
 158+ 97EF              ;	Comprueba_limite_vertical
 159+ 97EF              ;
 160+ 97EF              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97EF              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97EF              ;
 163+ 97EF
 164+ 97EF 2A C8 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97F2 7D           	ld a,l
 166+ 97F3 E6 1F        	and $1F
 167+ 97F5 57           	ld d,a
 168+ 97F6 3A DB 8B     	ld a,(Limite_vertical)
 169+ 97F9 BA           	cp d 											; Límite - Posición.
 170+ 97FA 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97FB 3A D7 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97FE CB 47        	bit 0,a
 173+ 9800 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9802
 175+ 9802              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9802
 177+ 9802 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9803 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9805
 180+ 9805              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9805              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9805
 183+ 9805 3A B9 8B         ld a,(Coordenada_X)
 184+ 9808 16 0F            ld d,Centro_izquierda
 185+ 980A A7               and a
 186+ 980B 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 980C 28 1E            jr z,3F
 188+ 980E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9810              ;                                                    ; _salimos sin modificar nada.
 190+ 9810 18 0E            jr 2F
 191+ 9812 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9813 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9815
 194+ 9815              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9815              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9815
 197+ 9815 3A B9 8B         ld a,(Coordenada_X)
 198+ 9818 16 10            ld d,Centro_derecha
 199+ 981A A7               and a
 200+ 981B 92               sub d
 201+ 981C 28 0E            jr z,3F
 202+ 981E 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9820              ;                                                    ; _salimos sin modificar nada.
 204+ 9820 CB 43        2 bit 0,e
 205+ 9822 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9824 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9825 CD B9 98         call Modificaccionne
 208+ 9828 C1           	pop bc
 209+ 9829 CD C9 98         call Inicializacion
 210+ 982C C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 982D
 212+ 982D              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 982D
 214+ 982D C5           4 push bc
 215+ 982E 01 C7 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9831 0A           	ld a,(bc)
 217+ 9832 3D           	dec a
 218+ 9833 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9834 7D           	ld a,l
 220+ 9835 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9836 CB 47        	bit 0,a
 222+ 9838 28 03        	jr z,5F
 223+ 983A 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 983B 18 2E        	jr 7F
 225+ 983D
 226+ 983D              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 983D
 228+ 983D 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 983E F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 983F 3A C5 8B     	ld a,(Ctrl_0)
 231+ 9842 CB 4F        	bit 1,a
 232+ 9844 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9846 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9847
 235+ 9847              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9847
 237+ 9847 1C               inc e
 238+ 9848 1D               dec e
 239+ 9849 20 07            jr nz,12F
 240+ 984B 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 984C 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 984D 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9850 18 44        13 jr 9F
 244+ 9852 CB 43        12 bit 0,e
 245+ 9854 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9856              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9856 C1           	pop bc
 248+ 9857 18 D3        	jr 3B
 249+ 9859 80           14 add b
 250+ 985A 6F               ld l,a
 251+ 985B 22 C8 8B     	ld (Posicion_actual),hl
 252+ 985E CD B9 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9861 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9863 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9865 32 C5 8B         ld (Ctrl_0),a
 256+ 9868 F1           	pop af
 257+ 9869 18 2B        	jr 9F
 258+ 986B
 259+ 986B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 986B
 261+ 986B F5           7 push af
 262+ 986C 3A C5 8B     	ld a,(Ctrl_0)
 263+ 986F CB 47        	bit 0,a
 264+ 9871 20 1D        	jr nz,8F
 265+ 9873 F1           	pop af
 266+ 9874
 267+ 9874              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9874
 269+ 9874 1C           	inc e
 270+ 9875 1D               dec e
 271+ 9876 20 07            jr nz,10F
 272+ 9878 90           	sub b
 273+ 9879 6F               ld l,a
 274+ 987A 22 C8 8B     	ld (Posicion_actual),hl
 275+ 987D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 987F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 987F CB 43        10 bit 0,e
 278+ 9881 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9883              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9883 C1           	pop bc
 281+ 9884 18 A6        	jr 3B
 282+ 9886 90           16 sub b
 283+ 9887 6F               ld l,a
 284+ 9888 22 C8 8B     	ld (Posicion_actual),hl
 285+ 988B CD B9 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 988E 18 06            jr 9F
 287+ 9890 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9892 32 C5 8B         ld (Ctrl_0),a
 289+ 9895 F1           	pop af
 290+ 9896 C1           9 pop bc
 291+ 9897 1E 00        	ld e,0
 292+ 9899 CD C9 98         call Inicializacion
 293+ 989C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 989D 08           	ex af,af
 295+ 989E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 989F 18 8B            jr 3B
 297+ 98A1
 298+ 98A1              ; --------------------
 299+ 98A1
 300+ 98A1 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 98A3 CD EC 99     1 call PreviousScan
 302+ 98A6 10 FB            djnz 1B
 303+ 98A8 22 C8 8B     	ld (Posicion_actual),hl
 304+ 98AB AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 98AC C9           	ret
 306+ 98AD
 307+ 98AD              ; --------------------
 308+ 98AD
 309+ 98AD 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 98AF CD DD 99     1 call NextScan
 311+ 98B2 10 FB            djnz 1B
 312+ 98B4 22 C8 8B     	ld (Posicion_actual),hl
 313+ 98B7 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98B8 C9           	ret
 315+ 98B9
 316+ 98B9              ; --------------------
 317+ 98B9              ;
 318+ 98B9              ;	22/01/23
 319+ 98B9              ;
 320+ 98B9              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98B9              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98B9              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98B9
 324+ 98B9
 325+ 98B9              Modificaccionne
 326+ 98B9
 327+ 98B9 3A D7 8B     	ld a,(Cuad_objeto)
 328+ 98BC FE 02        	cp 2
 329+ 98BE CC A1 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98C1 DC A1 98         call c,Modifica_Pos_actual
 331+ 98C4 C8           	ret z
 332+ 98C5 CD AD 98         call Modifica_Pos_actual2
 333+ 98C8 C9               ret
 334+ 98C9
 335+ 98C9              ; *************************************************************************************************************************************************************************************************
 336+ 98C9              ;
 337+ 98C9              ;	13/8/22
 338+ 98C9              ;
 339+ 98C9              ;	Inicializacion
 340+ 98C9              ;
 341+ 98C9              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98C9              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98C9              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98C9              ;
 345+ 98C9              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98C9              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98C9              ;	_ desaparece/aparece.
 348+ 98C9
 349+ 98C9              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98C9              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98C9              ;
 352+ 98C9              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98C9              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98C9              ; 		   [E] ="0"
 355+ 98C9
 356+ 98C9              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98C9
 358+ 98C9 CD C5 94     Inicializacion call calcula_tercio
 359+ 98CC 28 36        	jr z,primit
 360+ 98CE E6 02        	and 2
 361+ 98D0 20 07        	jr nz,segmit
 362+ 98D2 7D           	ld a,l
 363+ 98D3 FE 7F        	cp $7f
 364+ 98D5 38 2D        	jr c,primit
 365+ 98D7 28 2B        	jr z,primit
 366+ 98D9 CD 3F 99     segmit call column
 367+ 98DC 38 13        	jr c,tercuad
 368+ 98DE 3E 04        cuarcuad ld a,4
 369+ 98E0 32 D7 8B     	ld (Cuad_objeto),a
 370+ 98E3 21 20 48     	ld hl,$4820
 371+ 98E6 22 D9 8B     	ld (Limite_horizontal),hl
 372+ 98E9 21 DB 8B     	ld hl,Limite_vertical
 373+ 98EC 36 0D        	ld (hl),$0d
 374+ 98EE 08           	ex af,af
 375+ 98EF 18 3C        	jr 1F
 376+ 98F1              tercuad
 377+ 98F1 3E 03        	ld a,3
 378+ 98F3 32 D7 8B     	ld (Cuad_objeto),a
 379+ 98F6 21 20 48     	ld hl,$4820
 380+ 98F9 22 D9 8B     	ld (Limite_horizontal),hl
 381+ 98FC 21 DB 8B     	ld hl,Limite_vertical
 382+ 98FF 36 12        	ld (hl),$12
 383+ 9901 08           	ex af,af
 384+ 9902 18 29        	jr 1F
 385+ 9904 CD 3F 99     primit call column
 386+ 9907 38 13        	jr c, primcuad
 387+ 9909              segcuad
 388+ 9909 3E 02        	ld a,2
 389+ 990B 32 D7 8B     	ld (Cuad_objeto),a
 390+ 990E 21 C0 4F     	ld hl,$4fc0
 391+ 9911 22 D9 8B     	ld (Limite_horizontal),hl
 392+ 9914 21 DB 8B     	ld hl,Limite_vertical
 393+ 9917 36 0D        	ld (hl),$0d
 394+ 9919 08           	ex af,af
 395+ 991A 18 11        	jr 1F
 396+ 991C              primcuad
 397+ 991C 3E 01        	ld a,1
 398+ 991E 32 D7 8B     	ld (Cuad_objeto),a
 399+ 9921 21 C0 4F     	ld hl,$4fc0
 400+ 9924 22 D9 8B     	ld (Limite_horizontal),hl
 401+ 9927 21 DB 8B     	ld hl,Limite_vertical
 402+ 992A 36 12        	ld (hl),$12
 403+ 992C 08           	ex af,af
 404+ 992D
 405+ 992D C5           1 push bc
 406+ 992E E5           	push hl
 407+ 992F D5           	push de
 408+ 9930
 409+ 9930 2A C8 8B     	ld hl,(Posicion_actual)
 410+ 9933 CD E3 94     	call Genera_coordenadas
 411+ 9936
 412+ 9936 D1           	pop de
 413+ 9937 E1           	pop hl
 414+ 9938 C1           	pop bc
 415+ 9939
 416+ 9939 21 C5 8B     	ld hl,Ctrl_0
 417+ 993C CB EE        	set 5,(hl)
 418+ 993E C9           	ret
 419+ 993F
 420+ 993F              ; ------------------------------------------------------------------------------------------------------------------
 421+ 993F
 422+ 993F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 993F              ;
 424+ 993F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 993F
 426+ 993F 7D           column ld a,l
 427+ 9940 E6 1F        	and $1f
 428+ 9942 FE 10         	cp $10
 429+ 9944 C9            	ret
 430+ 9945
 431+ 9945              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9945              ;
 433+ 9945              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9945              ;
 435+ 9945              ; 14/12/22
 436+ 9945              ;
 437+ 9945              ;	Modifica: A y BC.
 438+ 9945
 439+ 9945 3A D7 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9948 E6 01        	and 1
 441+ 994A 28 17        	jr z,1F
 442+ 994C
 443+ 994C              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 994C
 445+ 994C 3A B9 8B     	ld a,(Coordenada_X)
 446+ 994F 47           	ld b,a
 447+ 9950 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9951 79           	ld a,c
 449+ 9952 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9953 38 08        	jr c,2F
 451+ 9955 47           	ld b,a
 452+ 9956 79           	ld a,c
 453+ 9957 90           	sub b
 454+ 9958 32 D8 8B     	ld (Columnas),a
 455+ 995B 18 1B        	jr 4F
 456+ 995D 79           2 ld a,c
 457+ 995E 32 D8 8B     	ld (Columnas),a
 458+ 9961 18 15        	jr 4F
 459+ 9963
 460+ 9963              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9963
 462+ 9963 3A B9 8B     1 ld a,(Coordenada_X)
 463+ 9966 81           	add c
 464+ 9967 3D           	dec a
 465+ 9968 D6 1F        	sub $1f
 466+ 996A 38 08        	jr c,3F
 467+ 996C 47           	ld b,a
 468+ 996D 79           	ld a,c
 469+ 996E 90           	sub b
 470+ 996F 32 D8 8B     	ld (Columnas),a
 471+ 9972 18 04        	jr 4F
 472+ 9974 79           3 ld a,c
 473+ 9975 32 D8 8B     	ld (Columnas),a
 474+ 9978 D9           4 exx
 475+ 9979 4F           	ld c,a
 476+ 997A D9           	exx
 477+ 997B C9            ret
 478+ 997C
 479+ 997C              ; --------------------------------------------------------------------------------------------------------------------
 480+ 997C              ;
 481+ 997C              ;   19/7/23
 482+ 997C              ;
 483+ 997C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 997C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 997C              ;
 486+ 997C              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 997C              ;			HL e IY Contienen (Puntero_objeto).
 488+ 997C              ;
 489+ 997C              ;	DESTRUYE: HL,B Y A.
 490+ 997C
 491+ 997C 3A D7 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 997F FE 02        	cp 2
 493+ 9981 38 18        	jr c,1F
 494+ 9983 28 16        	jr z,1F
 495+ 9985 E6 01        	and 1
 496+ 9987 28 0D        	jr z,3F
 497+ 9989
 498+ 9989              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9989
 500+ 9989 CD C5 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 998C
 502+ 998C 7D           9 ld a,l
 503+ 998D E6 1F        	and $1f
 504+ 998F 28 2A        	jr z,7F
 505+ 9991 2B           	dec hl
 506+ 9992 10 F8        	djnz 9B
 507+ 9994 18 25        	jr 7F
 508+ 9996
 509+ 9996              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9996
 511+ 9996 2A C8 8B     3 ld hl,(Posicion_actual)
 512+ 9999 18 20        	jr 7F
 513+ 999B
 514+ 999B 28 14        1 jr z,2F
 515+ 999D
 516+ 999D              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 999D
 518+ 999D CD C5 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 99A0
 520+ 99A0 7D           4 ld a,l
 521+ 99A1 E6 1F        	and $1f
 522+ 99A3 28 03        	jr z,6F
 523+ 99A5 2B           	dec hl
 524+ 99A6 10 F8        	djnz 4B
 525+ 99A8 06 0F        6 ld b,15
 526+ 99AA CD EC 99     5 call PreviousScan
 527+ 99AD 10 FB        	djnz 5B
 528+ 99AF 18 0A        	jr 7F
 529+ 99B1
 530+ 99B1              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99B1
 532+ 99B1 CD C5 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99B4 06 0F        	ld b,15
 534+ 99B6 CD EC 99     8 call PreviousScan
 535+ 99B9 10 FB        	djnz 8B
 536+ 99BB
 537+ 99BB E5           7 push hl
 538+ 99BC DD E1        	pop ix
 539+ 99BE
 540+ 99BE 2A CA 8B     	ld hl,(Puntero_objeto)
 541+ 99C1 E5           	push hl
 542+ 99C2 FD E1        	pop iy
 543+ 99C4
 544+ 99C4 C9           	ret
 545+ 99C5
 546+ 99C5              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99C5              ;
 548+ 99C5              ;	2/1/23
 549+ 99C5              ;
 550+ 99C5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99C5              ;
 552+ 99C5              ;	Tras esta rutina tenemos:
 553+ 99C5              ;
 554+ 99C5              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99C5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99C5              ;
 557+ 99C5              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99C5
 559+ 99C5 2A C8 8B     Operandos ld hl,(Posicion_actual)
 560+ 99C8 3A D8 8B     	ld a,(Columnas)
 561+ 99CB 3D           	dec a
 562+ 99CC 20 01        	jr nz,1F
 563+ 99CE 3C           	inc a
 564+ 99CF 47           1 ld b,a
 565+ 99D0 C9           	ret
 566+ 99D1
 567+ 99D1              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99D1              ;
 569+ 99D1              ;	Prepara_draw
 570+ 99D1              ;
 571+ 99D1              ;	Es una rutina de carga.
 572+ 99D1              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99D1              ;
 574+ 99D1              ;	FUNCIONAMIENTO:
 575+ 99D1              ;
 576+ 99D1              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99D1              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99D1              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99D1              ;
 580+ 99D1              ;	DESTRUYE:
 581+ 99D1              ;
 582+ 99D1              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99D1
 584+ 99D1 21 C6 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99D4 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99D5 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99D6 4E           	ld c,(hl)
 588+ 99D7 2A C8 8B     	ld hl,(Posicion_actual)
 589+ 99DA 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99DC C9           	ret
 591+ 99DD
 592+ 99DD              ;----------------------------------------------------------------------------------------------------------------
 593+ 99DD              ;
 594+ 99DD              ;	5/08/22
 595+ 99DD              ;
 596+ 99DD              ;   NextScan.
 597+ 99DD              ;
 598+ 99DD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99DD              ;
 600+ 99DD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99DD              ;
 602+ 99DD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99DD              ;
 604+ 99DD              ;       DESTRUIDOS: AF y HL !!!
 605+ 99DD              ;
 606+ 99DD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99DD              ;
 608+ 99DD
 609+ 99DD 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99DE 7C               ld a,h
 611+ 99DF E6 07            and 7
 612+ 99E1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99E2
 614+ 99E2 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99E3 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99E5 6F               ld l,a
 617+ 99E6 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99E7
 619+ 99E7 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99E8 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99EA 67               ld h,a
 622+ 99EB C9               ret
 623+ 99EC
 624+ 99EC              ;----------------------------------------------------------------------------------------------------------------
 625+ 99EC              ;
 626+ 99EC              ;	5/08/22
 627+ 99EC              ;
 628+ 99EC              ;   PreviousScan.
 629+ 99EC              ;
 630+ 99EC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99EC              ;
 632+ 99EC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99EC              ;
 634+ 99EC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99EC              ;
 636+ 99EC              ;       DESTRUIDOS: AF y HL !!!
 637+ 99EC              ;
 638+ 99EC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99EC              ;
 640+ 99EC
 641+ 99EC 7C           PreviousScan ld a,h
 642+ 99ED 25               dec h               ; Dec H.
 643+ 99EE E6 07            and 7
 644+ 99F0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99F1
 646+ 99F1 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99F2 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99F4 6F               ld l,a
 649+ 99F5 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99F6
 651+ 99F6 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99F7 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99F9 67               ld h,a
 654+ 99FA C9               ret
 655+ 99FB
 656+ 99FB
 657+ 99FB
 658+ 99FB
 659+ 99FB
 660+ 99FB
 661+ 99FB
 662+ 99FB
 663+ 99FB
 664+ 99FB
 665+ 99FB
 666+ 99FB
# file closed: Draw_XOR.asm
2057  99FB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99FB
   2+ 99FB              ; ******************************************************************************************************************************************************************************************
   3+ 99FB              ;
   4+ 99FB              ;   20/05/23
   5+ 99FB              ;
   6+ 99FB              ;	Recompone_posicion_inicio
   7+ 99FB              ;
   8+ 99FB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99FB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99FB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99FB              ;	_ a una u otra rutina.
  12+ 99FB
  13+ 99FB              Recompone_posicion_inicio
  14+ 99FB
  15+ 99FB 2A D5 8B     	ld hl,(Posicion_inicio)
  16+ 99FE 7D           	ld a,l
  17+ 99FF E6 1F        	and $1f
  18+ 9A01 28 16        	jr z,1F
  19+ 9A03
  20+ 9A03 FE 1F        	cp $1f
  21+ 9A05 28 0D        	jr z,3F
  22+ 9A07
  23+ 9A07 21 C4 8B     	ld hl,Ctrl_2
  24+ 9A0A CB C6        	set 0,(hl)
  25+ 9A0C 2A CA 8B     	ld hl,(Puntero_objeto)
  26+ 9A0F 22 F6 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A12 18 08        	jr 2F
  28+ 9A14
  29+ 9A14 CD C2 9B     3 call Mov_left
  30+ 9A17 18 03        	jr 2F
  31+ 9A19
  32+ 9A19 CD 9F 9A     1 call Mov_right
  33+ 9A1C 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A1F 22 CA 8B     	ld (Puntero_objeto),hl
  35+ 9A22 C9           	ret
  36+ 9A23
  37+ 9A23              ; ******************************************************************************************************************************************************************************************
  38+ 9A23              ;
  39+ 9A23              ;   27/05/23
  40+ 9A23              ;
  41+ 9A23              ;	Mov_down
  42+ 9A23              ;
  43+ 9A23              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A23              ;
  45+ 9A23              ;
  46+ 9A23              Mov_down
  47+ 9A23
  48+ 9A23 CD 8D 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A26              ;																	; _ repone (Puntero_objeto).
  50+ 9A26 21 C5 8B     	ld hl,Ctrl_0
  51+ 9A29 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A2B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A2B              ; 																	; _ en el caso de que no lo haya.
  54+ 9A2B 3A E0 8B     	ld a,(Vel_down)
  55+ 9A2E 47           	ld b,a
  56+ 9A2F 2A C8 8B         ld hl,(Posicion_actual)
  57+ 9A32 CD C5 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A35 E6 02        	and 2
  59+ 9A37 28 17        	jr z,1F
  60+ 9A39
  61+ 9A39              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A39              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A39
  64+ 9A39 7C           	ld a,h
  65+ 9A3A FE 57        	cp $57
  66+ 9A3C 20 12        	jr nz,1F
  67+ 9A3E
  68+ 9A3E 7D           	ld a,l
  69+ 9A3F C6 20        	add $20
  70+ 9A41 30 0D        	jr nc,1F
  71+ 9A43
  72+ 9A43              ; ------------------------------
  73+ 9A43              ;
  74+ 9A43              ;	12/01/24
  75+ 9A43
  76+ 9A43              ;	call Reaparece_arriba
  77+ 9A43 CD 4F 9D     	call Reinicio
  78+ 9A46
  79+ 9A46              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A46
  81+ 9A46 3A 2D 8C     	ld a,(Ctrl_3)
  82+ 9A49 CB CF        	set 1,a
  83+ 9A4B 32 2D 8C     	ld (Ctrl_3),a
  84+ 9A4E
  85+ 9A4E 18 08        	jr 3F
  86+ 9A50              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A50              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A50              ; ------------------------------
  89+ 9A50
  90+ 9A50 CD DD 99     1 call NextScan
  91+ 9A53 22 C8 8B     	ld (Posicion_actual),hl
  92+ 9A56 10 DA            djnz 2B
  93+ 9A58 CD E3 94     3 call Genera_coordenadas
  94+ 9A5B C9           	ret
  95+ 9A5C
  96+ 9A5C              ; ******************************************************************************************************************************************************************************************
  97+ 9A5C              ;
  98+ 9A5C              ;   27/05/23
  99+ 9A5C              ;
 100+ 9A5C              ;	Mov_up
 101+ 9A5C              ;
 102+ 9A5C              ; 	Mueve el Sprite hacia arriba.
 103+ 9A5C              ;
 104+ 9A5C              ;
 105+ 9A5C              Mov_up
 106+ 9A5C
 107+ 9A5C CD 8D 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A5F              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A5F 21 C5 8B     	ld hl,Ctrl_0
 110+ 9A62 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A64              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A64              ; 																		; _ en el caso de que no lo haya.
 113+ 9A64 3A DF 8B     	ld a,(Vel_up)
 114+ 9A67 47           	ld b,a
 115+ 9A68 2A C8 8B     	ld hl,(Posicion_actual)
 116+ 9A6B CD C5 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A6E A7           	and a
 118+ 9A6F 20 10        	jr nz,1F
 119+ 9A71
 120+ 9A71              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A71              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A71
 123+ 9A71 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A72 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A74 20 0B            jr nz,1F
 126+ 9A76 7D               ld a,l
 127+ 9A77 D6 20            sub $20
 128+ 9A79 30 06            jr nc,1F
 129+ 9A7B 25               dec h
 130+ 9A7C
 131+ 9A7C              ; -----------------------------
 132+ 9A7C CD 30 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A7F              ;	call Reinicio
 134+ 9A7F              ; -----------------------------
 135+ 9A7F
 136+ 9A7F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A81 CD EC 99     1 call PreviousScan
 138+ 9A84 22 C8 8B     	ld (Posicion_actual),hl
 139+ 9A87 10 E2            djnz 3B
 140+ 9A89 CD E3 94     2 call Genera_coordenadas
 141+ 9A8C C9           	ret
 142+ 9A8D
 143+ 9A8D              ; -----------------------------
 144+ 9A8D              ;
 145+ 9A8D              ;	27/5/23
 146+ 9A8D              ;
 147+ 9A8D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A8D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A8D              ;
 150+ 9A8D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A8D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A8D              ;
 153+ 9A8D              ;	Modifica: A y (Puntero_objeto).
 154+ 9A8D
 155+ 9A8D 3A C4 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A90 CB 47        	bit 0,a
 157+ 9A92 C8           	ret z
 158+ 9A93 CB 87        	res 0,a
 159+ 9A95 32 C4 8B     	ld (Ctrl_2),a
 160+ 9A98 2A F6 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A9B 22 CA 8B     	ld (Puntero_objeto),hl
 162+ 9A9E C9           	ret
 163+ 9A9F
 164+ 9A9F              ; ******************************************************************************************************************************************************************************************
 165+ 9A9F              ;
 166+ 9A9F              ;	19/10/22
 167+ 9A9F              ;
 168+ 9A9F              ;	Mov_right.
 169+ 9A9F              ;
 170+ 9A9F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A9F              ;
 172+ 9A9F
 173+ 9A9F 3A C5 8B     Mov_right ld a,(Ctrl_0)
 174+ 9AA2 CB 77        	bit 6,a
 175+ 9AA4 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9AA6
 177+ 9AA6 CD DE 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9AA9 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9AAA
 180+ 9AAA 21 C5 8B     	ld hl,Ctrl_0
 181+ 9AAD CB E6        	set 4,(hl)
 182+ 9AAF 18 52        	jr 8F
 183+ 9AB1
 184+ 9AB1 21 C5 8B     10 ld hl,Ctrl_0
 185+ 9AB4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AB6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AB6              ; 																	; _ en el caso de que no lo haya.
 188+ 9AB6 3A B9 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AB9 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9ABB 20 46        	jr nz,8F
 191+ 9ABD
 192+ 9ABD 3A CC 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AC0 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AC1 28 40        	jr z,8F
 195+ 9AC3
 196+ 9AC3              ; ---------- ---------- ----------
 197+ 9AC3              ;
 198+ 9AC3              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AC3
 200+ 9AC3 3A DE 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AC6 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AC8 28 11        	jr z,1F
 203+ 9ACA 38 06        	jr c,6F
 204+ 9ACC FE 04        	cp 4
 205+ 9ACE 28 14        	jr z,7F
 206+ 9AD0 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AD2
 208+ 9AD2              ; ---------- ---------- ----------
 209+ 9AD2              ;
 210+ 9AD2              ; Perfiles de velocidad
 211+ 9AD2              ;
 212+ 9AD2
 213+ 9AD2 3A CC 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AD5 FE FE        	cp $fe
 215+ 9AD7 20 2A        	jr nz,8F
 216+ 9AD9 18 10        	jr 3F
 217+ 9ADB 3A CC 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ADE FE FD        	cp $fd
 219+ 9AE0 20 21        	jr nz,8F
 220+ 9AE2 18 07        	jr 3F
 221+ 9AE4 3A CC 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AE7 FE FB        	cp $fb
 223+ 9AE9 20 18        	jr nz,8F
 224+ 9AEB
 225+ 9AEB              ; ---------- ---------- ----------
 226+ 9AEB
 227+ 9AEB              3
 228+ 9AEB CD 1E 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AEE              ;	call Reinicio
 230+ 9AEE
 231+ 9AEE              ; ---------- ---------- ----------
 232+ 9AEE              ;
 233+ 9AEE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AEE
 235+ 9AEE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AF0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AF1 CD 0A 9B     	call DESPLZ_DER
 238+ 9AF4 C1           	pop bc
 239+ 9AF5 10 F9        	djnz 5B
 240+ 9AF7 2A C8 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AFA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AFB 22 C8 8B     	ld (Posicion_actual),hl
 243+ 9AFE CD E3 94     	call Genera_coordenadas
 244+ 9B01 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9B03
 246+ 9B03              ; ---------- ---------- ----------
 247+ 9B03
 248+ 9B03 2A C8 8B     8 ld hl,(Posicion_actual)
 249+ 9B06 CD 0A 9B     	call DESPLZ_DER
 250+ 9B09 C9           2 ret
 251+ 9B0A
 252+ 9B0A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9B0A              ;
 254+ 9B0A              ;	22/9/22
 255+ 9B0A              ;
 256+ 9B0A
 257+ 9B0A CD 19 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9B0D CD 65 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9B10 CD 8E 9B         call Ciclo_completo
 260+ 9B13 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B16 CB FE        	set 7,(hl)
 262+ 9B18 C9           	ret
 263+ 9B19
 264+ 9B19              ; ******************************************************************************************************************************************************************************************
 265+ 9B19              ;	15/02/23
 266+ 9B19              ;
 267+ 9B19
 268+ 9B19 3A DE 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B1C 47           	ld b,a
 270+ 9B1D 2A D1 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B20 23           1 inc hl
 272+ 9B21 23           	inc hl
 273+ 9B22 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B24 22 D1 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B27 CD C4 90     	call Extrae_address
 276+ 9B2A 22 CA 8B     	ld (Puntero_objeto),hl
 277+ 9B2D
 278+ 9B2D              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B2D
 280+ 9B2D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B2D              ; Cuántos movimientos hemos hecho ??
 282+ 9B2D              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B2D
 284+ 9B2D 2A CD 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B30 EB           	ex de,hl
 286+ 9B31 A7           	and a
 287+ 9B32 ED 52        	sbc hl,de
 288+ 9B34 CB 3D        	srl l
 289+ 9B36 3E 08        6 ld a,8
 290+ 9B38 95           	sub l
 291+ 9B39 30 1E        	jr nc,3F
 292+ 9B3B
 293+ 9B3B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B3B              ; B="0".
 295+ 9B3B
 296+ 9B3B 04           4 inc b
 297+ 9B3C 3C           	inc a
 298+ 9B3D 20 FC        	jr nz,4B
 299+ 9B3F 78           	ld a,b
 300+ 9B40 08           	ex af,af
 301+ 9B41 2A CD 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B44 23           5 inc hl
 303+ 9B45 23           	inc hl
 304+ 9B46 10 FC        	djnz 5B
 305+ 9B48 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B4B CD C4 90     	call Extrae_address
 307+ 9B4E 22 CA 8B     	ld (Puntero_objeto),hl
 308+ 9B51
 309+ 9B51              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B51              ; _(Posicion_actual).
 311+ 9B51
 312+ 9B51 21 C8 8B     	ld hl,Posicion_actual
 313+ 9B54 34           	inc (hl)
 314+ 9B55 08               ex af,af
 315+ 9B56 6F           	ld l,a
 316+ 9B57 18 DD        	jr 6B
 317+ 9B59
 318+ 9B59              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B59
 320+ 9B59 47           3 ld b,a
 321+ 9B5A 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B5D 23           2 inc hl
 323+ 9B5E 23           	inc hl
 324+ 9B5F 10 FC        	djnz 2B
 325+ 9B61 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B64 C9           8 ret
 327+ 9B65
 328+ 9B65              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B65              ;
 330+ 9B65              ;	24/7/22
 331+ 9B65              ;
 332+ 9B65              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B65              ;
 334+ 9B65              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B65              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B65              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B65
 338+ 9B65 3A CC 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B68 A7           	and a
 340+ 9B69 20 1F        	jr nz,1F
 341+ 9B6B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B6D 32 CC 8B         ld (CTRL_DESPLZ),a
 343+ 9B70
 344+ 9B70 21 C7 8B     	ld hl,Columns
 345+ 9B73 34           	inc (hl)
 346+ 9B74 3A D7 8B     	ld a,(Cuad_objeto)
 347+ 9B77 E6 01        	and 1
 348+ 9B79 28 0F        	jr z,1F
 349+ 9B7B 2A C8 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B7E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B7F 22 C8 8B     	ld (Posicion_actual),hl
 352+ 9B82 CD E3 94     	call Genera_coordenadas
 353+ 9B85 CD EA 9C     	call Inc_CTRL_DESPLZ
 354+ 9B88 18 03        	jr 2F
 355+ 9B8A CD EA 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B8D C9           2 ret
 357+ 9B8E
 358+ 9B8E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B8E              ;
 360+ 9B8E              ;	24/7/22
 361+ 9B8E              ;
 362+ 9B8E              ;	Ciclo_completo.
 363+ 9B8E              ;
 364+ 9B8E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B8E              ;
 366+ 9B8E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B8E              ; 	Decrementamos (Columns).
 368+ 9B8E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B8E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B8E
 371+ 9B8E
 372+ 9B8E 3A CC 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B91 FE FF        	cp $ff
 374+ 9B93 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B95 E6 F0        	and $f0
 376+ 9B97 20 28        	jr nz,3F
 377+ 9B99
 378+ 9B99              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B99
 380+ 9B99 3A CC 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B9C 47           	ld b,a
 382+ 9B9D 3E F8        	ld a,$f8
 383+ 9B9F 80           	add b
 384+ 9BA0 32 CC 8B     	ld (CTRL_DESPLZ),a
 385+ 9BA3 18 1C        	jr 3F
 386+ 9BA5 21 C7 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9BA8 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9BA9 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9BAA 32 CC 8B     	ld (CTRL_DESPLZ),a
 390+ 9BAD 3A D7 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9BB0 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BB2 20 0A        	jr nz,2F
 393+ 9BB4 2A C8 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BB7 23           	inc hl
 395+ 9BB8 22 C8 8B     	ld (Posicion_actual),hl
 396+ 9BBB CD E3 94     	call Genera_coordenadas
 397+ 9BBE
 398+ 9BBE              ; Inicia el puntero de Sprite.
 399+ 9BBE
 400+ 9BBE CD D9 90     2 call Inicia_puntero_objeto_der
 401+ 9BC1 C9           3 ret
 402+ 9BC2
 403+ 9BC2              ; ******************************************************************************************************************************************************************************************
 404+ 9BC2              ;
 405+ 9BC2              ;	15/02/23
 406+ 9BC2              ;
 407+ 9BC2              ;	Mov_left.
 408+ 9BC2              ;
 409+ 9BC2              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BC2              ;
 411+ 9BC2              Mov_left
 412+ 9BC2
 413+ 9BC2 21 C5 8B     	ld hl,Ctrl_0
 414+ 9BC5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BC7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BC7              ; 																	; _ en el caso de que no lo haya.
 417+ 9BC7 3A C5 8B     	ld a,(Ctrl_0)
 418+ 9BCA CB 77        	bit 6,a
 419+ 9BCC 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BCE
 421+ 9BCE CD E4 9C     	call Stop_Amadeus_left
 422+ 9BD1 C8           	ret z
 423+ 9BD2 20 4A        	jr nz,8F
 424+ 9BD4
 425+ 9BD4 3A B9 8B     11 ld a,(Coordenada_X)
 426+ 9BD7 A7           	and a
 427+ 9BD8 20 44        	jr nz,8F
 428+ 9BDA
 429+ 9BDA 3A CC 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BDD A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BDE 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BE0
 433+ 9BE0              ; ---------- ---------- ----------
 434+ 9BE0
 435+ 9BE0 3A DD 8B     	ld a,(Vel_left)
 436+ 9BE3 FE 02        	cp 2
 437+ 9BE5 28 0F        	jr z,1F
 438+ 9BE7 38 04        	jr c,6F
 439+ 9BE9 FE 04        	cp 4
 440+ 9BEB 28 12        	jr z,7F
 441+ 9BED
 442+ 9BED              ; ---------- ---------- ----------
 443+ 9BED
 444+ 9BED 3A CC 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BF0 FE F8        	cp $f8
 446+ 9BF2 20 2A        	jr nz,8F
 447+ 9BF4 18 10        	jr 4F
 448+ 9BF6 3A CC 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BF9 FE F9        	cp $f9
 450+ 9BFB 20 21        	jr nz,8F
 451+ 9BFD 18 07        	jr 4F
 452+ 9BFF 3A CC 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9C02 FE FB        	cp $fb
 454+ 9C04 20 18        	jr nz,8F
 455+ 9C06
 456+ 9C06              ; ---------- ---------- ----------
 457+ 9C06
 458+ 9C06              4
 459+ 9C06 CD 0C 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9C09              ;	call Reinicio
 461+ 9C09
 462+ 9C09              ; ---------- ---------- ----------
 463+ 9C09
 464+ 9C09 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9C0B C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9C0C
 467+ 9C0C              ;	ld hl,(Indice_Sprite_izq)
 468+ 9C0C              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9C0C
 470+ 9C0C CD 25 9C     	call DESPLZ_IZQ
 471+ 9C0F C1           	pop bc
 472+ 9C10 10 F9        	djnz 5B
 473+ 9C12 2A C8 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C15 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C16 22 C8 8B     	ld (Posicion_actual),hl
 476+ 9C19 CD E3 94     	call Genera_coordenadas
 477+ 9C1C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C1E
 479+ 9C1E              ; ---------- ---------- ----------
 480+ 9C1E
 481+ 9C1E              ; Movemos, no hay recolocación.
 482+ 9C1E
 483+ 9C1E 2A C8 8B     8 ld hl,(Posicion_actual)
 484+ 9C21 CD 25 9C     	call DESPLZ_IZQ
 485+ 9C24 C9           2 ret
 486+ 9C25
 487+ 9C25              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C25              ;
 489+ 9C25              ;	22/9/22
 490+ 9C25
 491+ 9C25              DESPLZ_IZQ
 492+ 9C25
 493+ 9C25 CD 34 9C     	call Desplaza_izquierda
 494+ 9C28 CD 80 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C2B CD A8 9C     	call Ciclo_completo_2
 496+ 9C2E 21 C5 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C31 CB BE        	res 7,(hl)
 498+ 9C33 C9           	ret
 499+ 9C34
 500+ 9C34              Desplaza_izquierda
 501+ 9C34
 502+ 9C34 3A DD 8B     	ld a,(Vel_left)
 503+ 9C37 47           	ld b,a
 504+ 9C38 2A D3 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C3B 23           1 inc hl
 506+ 9C3C 23           	inc hl
 507+ 9C3D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C3F 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C42 CD C4 90     	call Extrae_address
 510+ 9C45 22 CA 8B     	ld (Puntero_objeto),hl
 511+ 9C48
 512+ 9C48              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C48
 514+ 9C48              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C48              ; Cuántos movimientos hemos hecho ??
 516+ 9C48              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C48
 518+ 9C48 2A CF 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C4B EB           	ex de,hl
 520+ 9C4C A7           	and a
 521+ 9C4D ED 52        	sbc hl,de
 522+ 9C4F CB 3D        	srl l
 523+ 9C51 3E 08        6 ld a,8
 524+ 9C53 95           	sub l
 525+ 9C54 30 1E        	jr nc,3F
 526+ 9C56
 527+ 9C56              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C56              ; B="0".
 529+ 9C56
 530+ 9C56 04           4 inc b
 531+ 9C57 3C           	inc a
 532+ 9C58 20 FC        	jr nz,4B
 533+ 9C5A 78           	ld a,b
 534+ 9C5B 08           	ex af,af
 535+ 9C5C 2A CF 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C5F 23           5 inc hl
 537+ 9C60 23           	inc hl
 538+ 9C61 10 FC        	djnz 5B
 539+ 9C63 22 D3 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C66 CD C4 90     	call Extrae_address
 541+ 9C69 22 CA 8B     	ld (Puntero_objeto),hl
 542+ 9C6C
 543+ 9C6C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C6C              ; _(Posicion_actual).
 545+ 9C6C
 546+ 9C6C 21 C8 8B     	ld hl,Posicion_actual
 547+ 9C6F 35           	dec (hl)
 548+ 9C70 08           	ex af,af
 549+ 9C71 6F           	ld l,a
 550+ 9C72 18 DD        	jr 6B
 551+ 9C74
 552+ 9C74              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C74
 554+ 9C74 47           3 ld b,a
 555+ 9C75 2A CD 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C78 23           2 inc hl
 557+ 9C79 23           	inc hl
 558+ 9C7A 10 FC        	djnz 2B
 559+ 9C7C 22 D1 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C7F C9           8 ret
 561+ 9C80
 562+ 9C80              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C80              ;
 564+ 9C80              ;	modifica_parametros_1er_DESPLZ
 565+ 9C80              ;
 566+ 9C80              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C80              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C80              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C80
 570+ 9C80 3A CC 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C83 A7           	and a
 572+ 9C84 20 1E        	jr nz,1F
 573+ 9C86 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C87 32 CC 8B         ld (CTRL_DESPLZ),a
 575+ 9C8A 21 C7 8B     	ld hl,Columns
 576+ 9C8D 34           	inc (hl)
 577+ 9C8E 3A D7 8B     	ld a,(Cuad_objeto)
 578+ 9C91 E6 01        	and 1
 579+ 9C93 20 0F        	jr nz,1F
 580+ 9C95 2A C8 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C98 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C99 22 C8 8B     	ld (Posicion_actual),hl
 583+ 9C9C CD E3 94     	call Genera_coordenadas
 584+ 9C9F CD FB 9C     	call Dec_CTRL_DESPLZ
 585+ 9CA2 18 03        	jr 2F
 586+ 9CA4 CD FB 9C     1 call Dec_CTRL_DESPLZ
 587+ 9CA7 C9           2 ret
 588+ 9CA8
 589+ 9CA8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9CA8
 591+ 9CA8 3A CC 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9CAB FE F7        	cp $f7
 593+ 9CAD 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9CAF 30 2C        	jr nc,3F
 595+ 9CB1
 596+ 9CB1              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CB1
 598+ 9CB1 06 00        	ld b,0
 599+ 9CB3 04           4 inc b
 600+ 9CB4 3C           	inc a
 601+ 9CB5 FE F7        	cp $f7
 602+ 9CB7 20 FA        	jr nz,4B
 603+ 9CB9 3E FF        	ld a,$ff
 604+ 9CBB 90           	sub b
 605+ 9CBC 32 CC 8B     	ld (CTRL_DESPLZ),a
 606+ 9CBF 18 1C        	jr 3F
 607+ 9CC1
 608+ 9CC1              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CC1
 610+ 9CC1 21 C7 8B     1 ld hl,Columns
 611+ 9CC4 35           	dec (hl)
 612+ 9CC5 AF           	xor a
 613+ 9CC6 32 CC 8B     	ld (CTRL_DESPLZ),a
 614+ 9CC9 3A D7 8B     	ld a,(Cuad_objeto)
 615+ 9CCC E6 01        	and 1
 616+ 9CCE 28 0A        	jr z,2F
 617+ 9CD0 2A C8 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CD3 2B           	dec hl
 619+ 9CD4 22 C8 8B     	ld (Posicion_actual),hl
 620+ 9CD7 CD E3 94     	call Genera_coordenadas
 621+ 9CDA
 622+ 9CDA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CDA
 624+ 9CDA CD EC 90     2 call Inicia_puntero_objeto_izq
 625+ 9CDD C9           3 ret
 626+ 9CDE
 627+ 9CDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CDE              ;
 629+ 9CDE              ;	19/10/22
 630+ 9CDE              ;
 631+ 9CDE              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CDE              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CDE
 634+ 9CDE 3A B9 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CE1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CE3 C9           	ret
 637+ 9CE4
 638+ 9CE4              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CE4              ;
 640+ 9CE4              ;	19/10/22
 641+ 9CE4              ;
 642+ 9CE4              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CE4              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CE4
 645+ 9CE4 3A B9 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CE7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CE9 C9           	ret
 648+ 9CEA
 649+ 9CEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CEA              ;
 651+ 9CEA              ;	24/7/22
 652+ 9CEA              ;
 653+ 9CEA              ;	Inc_CTRL_DESPLZ
 654+ 9CEA              ;
 655+ 9CEA              ;
 656+ 9CEA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CEA
 658+ 9CEA 21 CC 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CED 3A DE 8B     	ld a,(Vel_right)
 660+ 9CF0 A7           	and a
 661+ 9CF1 28 06        	jr z,1F
 662+ 9CF3 47           	ld b,a
 663+ 9CF4 34           3 inc (hl)
 664+ 9CF5 10 FD        	djnz 3B
 665+ 9CF7 18 01        	jr 2F
 666+ 9CF9 34           1 inc (hl)
 667+ 9CFA C9           2 ret
 668+ 9CFB
 669+ 9CFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CFB              ;
 671+ 9CFB              ;	5/2/23
 672+ 9CFB              ;
 673+ 9CFB              ;	Dec_CTRL_DESPLZ
 674+ 9CFB              ;
 675+ 9CFB              ;
 676+ 9CFB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CFB
 678+ 9CFB 21 CC 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CFE 3A DD 8B     	ld a,(Vel_left)
 680+ 9D01 A7           	and a
 681+ 9D02 28 06        	jr z,1F
 682+ 9D04 47           	ld b,a
 683+ 9D05 35           3 dec (hl)
 684+ 9D06 10 FD        	djnz 3B
 685+ 9D08 18 01        	jr 2F
 686+ 9D0A 35           1 dec (hl)
 687+ 9D0B C9           2 ret
 688+ 9D0C
 689+ 9D0C              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9D0C
 691+ 9D0C 2A C8 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9D0F 01 1F 00     	ld bc,31
 693+ 9D12 A7           	and a
 694+ 9D13 ED 4A        	adc hl,bc
 695+ 9D15 22 C8 8B     	ld (Posicion_actual),hl
 696+ 9D18 21 C5 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D1B CB C6        	set 0,(hl)
 698+ 9D1D C9           	ret
 699+ 9D1E
 700+ 9D1E              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D1E
 702+ 9D1E 2A C8 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D21 01 1F 00     	ld bc,31
 704+ 9D24 A7           	and a
 705+ 9D25 ED 42        	sbc hl,bc
 706+ 9D27 22 C8 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D2A 21 C5 8B     	ld hl,Ctrl_0
 708+ 9D2D CB CE        	set 1,(hl)
 709+ 9D2F C9           	ret
 710+ 9D30
 711+ 9D30              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D30
 713+ 9D30 24           Reaparece_abajo inc h
 714+ 9D31 01 E0 17     	ld bc,$17e0
 715+ 9D34 A7           	and a
 716+ 9D35 ED 4A        	adc hl,bc
 717+ 9D37 22 C8 8B     	ld (Posicion_actual),hl
 718+ 9D3A 21 C5 8B     	ld hl,Ctrl_0
 719+ 9D3D CB D6        	set 2,(hl)
 720+ 9D3F C9           	ret
 721+ 9D40
 722+ 9D40              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D40
 724+ 9D40 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D43 A7           	and a
 726+ 9D44 ED 42        	sbc hl,bc
 727+ 9D46 22 C8 8B     	ld (Posicion_actual),hl
 728+ 9D49 21 C5 8B     	ld hl,Ctrl_0
 729+ 9D4C CB DE        	set 3,(hl)
 730+ 9D4E C9           	ret
 731+ 9D4F
 732+ 9D4F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D4F              ;
 734+ 9D4F              ;	15/07/23
 735+ 9D4F
 736+ 9D4F              Reinicio
 737+ 9D4F
 738+ 9D4F              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D4F
 740+ 9D4F AF           	xor a
 741+ 9D50 21 ED 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D53 CD 71 9D     	call Limpia_contenido_hl
 743+ 9D56
 744+ 9D56 21 C8 8B     	ld hl,Posicion_actual
 745+ 9D59 CD 71 9D     	call Limpia_contenido_hl
 746+ 9D5C
 747+ 9D5C CD C5 92     	call Inicializa_Puntero_indice_mov
 748+ 9D5F CD 70 9E     	call Inicia_Puntero_mov
 749+ 9D62
 750+ 9D62 21 EF 8B     	ld hl,Incrementa_puntero
 751+ 9D65 06 05        	ld b,5
 752+ 9D67 77           1 ld (hl),a
 753+ 9D68 23           	inc hl
 754+ 9D69 10 FC        	djnz 1B
 755+ 9D6B
 756+ 9D6B 21 C4 8B     	ld hl,Ctrl_2
 757+ 9D6E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D70
 759+ 9D70 C9           	ret
 760+ 9D71
 761+ 9D71 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D72 23           	inc hl
 763+ 9D73 77           	ld (hl),a
 764+ 9D74 C9           	ret
 765+ 9D75
 766+ 9D75              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D75              ;
 768+ 9D75              ;	18/6/24
 769+ 9D75              ;
 770+ 9D75
 771+ 9D75              Amadeus_a_izquierda
 772+ 9D75
 773+ 9D75              ;	Actualiza contador de movimientos.
 774+ 9D75
 775+ 9D75 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D78 35           	dec (hl)
 777+ 9D79 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D7B
 779+ 9D7B 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D7E 2B           	dec hl
 781+ 9D7F 2B           	dec hl
 782+ 9D80 2B           	dec hl
 783+ 9D81 2B           	dec hl
 784+ 9D82 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D85
 786+ 9D85 21 2D 8C     	ld hl,Ctrl_3
 787+ 9D88 CB EE        	set 5,(hl)
 788+ 9D8A
 789+ 9D8A C9           	ret
 790+ 9D8B
 791+ 9D8B 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D8C C9           	ret
 793+ 9D8D
 794+ 9D8D
 795+ 9D8D              Amadeus_a_derecha
 796+ 9D8D
 797+ 9D8D              ;	Actualiza contador de movimientos.
 798+ 9D8D
 799+ 9D8D 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D90 34           	inc (hl)
 801+ 9D91 3E 7A        	ld a,$7a
 802+ 9D93 BE           	cp (hl)
 803+ 9D94 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D96
 805+ 9D96 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D99 23           	inc hl
 807+ 9D9A 23           	inc hl
 808+ 9D9B 23           	inc hl
 809+ 9D9C 23           	inc hl
 810+ 9D9D 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9DA0
 812+ 9DA0 21 2D 8C     	ld hl,Ctrl_3
 813+ 9DA3 CB EE        	set 5,(hl)
 814+ 9DA5 C9           	ret
 815+ 9DA6
 816+ 9DA6 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9DA7 C9           	ret
# file closed: Direcciones.asm
2058  9DA8              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9DA8              ; ----- ----- ----- ----- -----
   2+ 9DA8              ;
   3+ 9DA8              ;   28/12/23
   4+ 9DA8
   5+ 9DA8              Movimiento
   6+ 9DA8
   7+ 9DA8              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9DA8
   9+ 9DA8 3A C4 8B         ld a,(Ctrl_2)
  10+ 9DAB CB 57            bit 2,a
  11+ 9DAD 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9DAF
  13+ 9DAF 2A EB 8B         ld hl,(Puntero_mov)
  14+ 9DB2 7E               ld a,(hl)
  15+ 9DB3
  16+ 9DB3              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DB3
  18+ 9DB3              Inicia_desplazamiento.
  19+ 9DB3
  20+ 9DB3              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DB3
  22+ 9DB3 CD A6 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DB6
  24+ 9DB6              ; Iniciamos (Repetimos_mov).
  25+ 9DB6
  26+ 9DB6 7E               ld a,(hl)
  27+ 9DB7 E6 0F            and $0f
  28+ 9DB9 32 F1 8B         ld (Repetimos_desplazamiento),a
  29+ 9DBC 32 F2 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DBF
  31+ 9DBF              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DBF
  33+ 9DBF 23               inc hl
  34+ 9DC0 7E               ld a,(hl)
  35+ 9DC1 32 F4 8B         ld (Cola_de_desplazamiento),a
  36+ 9DC4 2B               dec hl
  37+ 9DC5
  38+ 9DC5 21 C4 8B         ld hl,Ctrl_2
  39+ 9DC8 CB D6            set 2,(hl)
  40+ 9DCA
  41+ 9DCA              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DCA              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DCA
  44+ 9DCA              Desplazamiento_iniciado
  45+ 9DCA
  46+ 9DCA CD 7A 9E         call Aplica_desplazamiento
  47+ 9DCD
  48+ 9DCD              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DCD
  50+ 9DCD 3A 2D 8C         ld a,(Ctrl_3)
  51+ 9DD0 CB 4F            bit 1,a
  52+ 9DD2 C0               ret nz
  53+ 9DD3
  54+ 9DD3 21 F1 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DD6 35               dec (hl)
  56+ 9DD7 C0               ret nz
  57+ 9DD8
  58+ 9DD8              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DD8              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DD8              ; Analiza (Cola_de_desplazamiento).
  61+ 9DD8
  62+ 9DD8 3A F4 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DDB A7               and a
  64+ 9DDC CC CF 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DDF 28 30            jr z,Reinicia_el_movimiento
  66+ 9DE1
  67+ 9DE1 FE FF            cp $ff
  68+ 9DE3 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DE5
  70+ 9DE5 FE FE            cp $fe
  71+ 9DE7 CC 54 9E         call z,Fijamos_bucle
  72+ 9DEA 28 25            jr z,Reinicia_el_movimiento
  73+ 9DEC
  74+ 9DEC FE FD            cp $fd
  75+ 9DEE 20 11            jr nz,1F
  76+ 9DF0
  77+ 9DF0              ; ---
  78+ 9DF0              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DF0
  80+ 9DF0 3A C4 8B         ld a,(Ctrl_2)
  81+ 9DF3 CB 5F            bit 3,a
  82+ 9DF5 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DF7
  84+ 9DF7              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DF7
  86+ 9DF7 21 C4 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DFA CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DFC
  89+ 9DFC CD 65 9E         call Inicia_Repetimos_movimiento
  90+ 9DFF 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9E01              ; ---
  92+ 9E01
  93+ 9E01 FE 01        1 cp 1
  94+ 9E03 CA 3E 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9E06
  96+ 9E06 3D               dec a
  97+ 9E07 32 F4 8B         ld (Cola_de_desplazamiento),a
  98+ 9E0A
  99+ 9E0A 3A F2 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9E0D 32 F1 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9E10              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9E10 C9               ret
 103+ 9E11
 104+ 9E11              Reinicia_el_movimiento
 105+ 9E11
 106+ 9E11 3A C4 8B         ld a,(Ctrl_2)
 107+ 9E14 CB 5F            bit 3,a
 108+ 9E16 28 1B            jr z,2F
 109+ 9E18
 110+ 9E18              ; (Cola_de_desplazamiento)="254".
 111+ 9E18
 112+ 9E18 21 F3 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E1B 35               dec (hl)
 114+ 9E1C 20 15            jr nz,2F
 115+ 9E1E
 116+ 9E1E              ; Fin de las repeticiones del último movimiento.
 117+ 9E1E
 118+ 9E1E 21 C4 8B         ld hl,Ctrl_2
 119+ 9E21 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E23
 121+ 9E23 2A EB 8B         ld hl,(Puntero_mov)
 122+ 9E26 23               inc hl
 123+ 9E27 23               inc hl
 124+ 9E28 23               inc hl
 125+ 9E29 22 EB 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E2C              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E2C 7E               ld a,(hl)
 128+ 9E2D 32 F4 8B         ld (Cola_de_desplazamiento),a
 129+ 9E30
 130+ 9E30 C3 D8 9D         jp Cola
 131+ 9E33
 132+ 9E33 CD 70 9E     2 call Inicia_Puntero_mov
 133+ 9E36
 134+ 9E36 21 C4 8B         ld hl,Ctrl_2
 135+ 9E39 CB 96            res 2,(hl)
 136+ 9E3B
 137+ 9E3B C3 A8 9D         jp Movimiento
 138+ 9E3E
 139+ 9E3E              Siguiente_desplazamiento
 140+ 9E3E
 141+ 9E3E              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E3E              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E3E
 144+ 9E3E 21 C4 8B         ld hl,Ctrl_2
 145+ 9E41 CB 96            res 2,(hl)
 146+ 9E43
 147+ 9E43 2A EB 8B         ld hl,(Puntero_mov)
 148+ 9E46 23               inc hl
 149+ 9E47 23               inc hl
 150+ 9E48 22 EB 8B         ld (Puntero_mov),hl
 151+ 9E4B
 152+ 9E4B 7E               ld a,(hl)
 153+ 9E4C A7               and a
 154+ 9E4D CC CF 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E50 CA 11 9E         jp z,Reinicia_el_movimiento
 156+ 9E53
 157+ 9E53 C9               ret
 158+ 9E54
 159+ 9E54              ; Subrutinas -----------------------------------------
 160+ 9E54              ; ---------- --------- --------- ---------- ----------
 161+ 9E54              ;
 162+ 9E54              ;   24/07/23
 163+ 9E54              ;
 164+ 9E54              ;   Fijamos_bucle
 165+ 9E54              ;
 166+ 9E54              ;
 167+ 9E54
 168+ 9E54              Fijamos_bucle
 169+ 9E54
 170+ 9E54 3A EF 8B         ld a,(Incrementa_puntero)
 171+ 9E57 3C               inc a
 172+ 9E58 32 F0 8B         ld (Incrementa_puntero_backup),a
 173+ 9E5B
 174+ 9E5B CD CF 9E         call Incrementa_Puntero_indice_mov
 175+ 9E5E 2A E9 8B         ld hl,(Puntero_indice_mov)
 176+ 9E61 22 ED 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E64 C9               ret
 178+ 9E65
 179+ 9E65              ; ---------- --------- --------- ---------- ----------
 180+ 9E65              ;
 181+ 9E65              ;   07/7/23
 182+ 9E65              ;
 183+ 9E65              ;   Inicia_Repetimos_movimiento
 184+ 9E65              ;
 185+ 9E65              ;
 186+ 9E65
 187+ 9E65              Inicia_Repetimos_movimiento
 188+ 9E65
 189+ 9E65              ; Iniciamos (Repetimos_movimiento).
 190+ 9E65
 191+ 9E65 DD 2A EB 8B      ld ix,(Puntero_mov)
 192+ 9E69 DD 7E 02         ld a,(ix+2)
 193+ 9E6C 32 F3 8B         ld (Repetimos_movimiento),a
 194+ 9E6F
 195+ 9E6F C9               ret
 196+ 9E70
 197+ 9E70              ; ---------- --------- --------- ---------- ----------
 198+ 9E70              ;
 199+ 9E70              ;   26/6/23
 200+ 9E70              ;
 201+ 9E70              ;   Inicia_Puntero_mov
 202+ 9E70              ;
 203+ 9E70              ;
 204+ 9E70
 205+ 9E70 2A E9 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E73 CD C4 90         call Extrae_address
 207+ 9E76 22 EB 8B         ld (Puntero_mov),hl
 208+ 9E79 C9               ret
 209+ 9E7A
 210+ 9E7A              ; ---------- --------- --------- ---------- ----------
 211+ 9E7A              ;
 212+ 9E7A              ;   27/06/23
 213+ 9E7A              ;
 214+ 9E7A              ;   Aplica_movimiento.
 215+ 9E7A
 216+ 9E7A              Aplica_desplazamiento
 217+ 9E7A
 218+ 9E7A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E7A
 220+ 9E7A 2A EB 8B         ld hl, (Puntero_mov)
 221+ 9E7D
 222+ 9E7D 7E               ld a,(hl)
 223+ 9E7E E6 F0            and $f0
 224+ 9E80 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E81
 226+ 9E81 CB 7E            bit 7,(hl)
 227+ 9E83 28 03            jr z,1F
 228+ 9E85 CD 5C 9A         call Mov_up
 229+ 9E88 2A EB 8B     1 ld hl, (Puntero_mov)
 230+ 9E8B CB 76            bit 6,(hl)
 231+ 9E8D 28 03            jr z,2F
 232+ 9E8F CD 23 9A         call Mov_down
 233+ 9E92
 234+ 9E92              ; Se ha aplicado reinicio ???
 235+ 9E92              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E92
 237+ 9E92              ;    ld a,(Ctrl_3)
 238+ 9E92              ;    bit 1,a
 239+ 9E92              ;    ret nz
 240+ 9E92
 241+ 9E92 2A EB 8B     2 ld hl, (Puntero_mov)
 242+ 9E95 CB 6E            bit 5,(hl)
 243+ 9E97 28 03            jr z,3F
 244+ 9E99 CD C2 9B         call Mov_left
 245+ 9E9C 2A EB 8B     3 ld hl, (Puntero_mov)
 246+ 9E9F CB 66            bit 4,(hl)
 247+ 9EA1 C8               ret z
 248+ 9EA2 CD 9F 9A         call Mov_right
 249+ 9EA5 C9               ret
 250+ 9EA6
 251+ 9EA6              ; ---------- --------- --------- ---------- ----------
 252+ 9EA6              ;
 253+ 9EA6              ;   26/06/23
 254+ 9EA6              ;
 255+ 9EA6              ;   Ajusta_velocidad_desplazamiento.
 256+ 9EA6
 257+ 9EA6              Ajusta_velocidad_desplazamiento
 258+ 9EA6
 259+ 9EA6              ; 1er byte de la cadena de movimiento.
 260+ 9EA6              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9EA6
 262+ 9EA6 CD C4 9E         call Extrae_nibble_alto
 263+ 9EA9
 264+ 9EA9 32 DF 8B         ld (Vel_up),a
 265+ 9EAC 79               ld a,c
 266+ 9EAD E6 0F            and $0f
 267+ 9EAF 32 E0 8B         ld (Vel_down),a
 268+ 9EB2
 269+ 9EB2              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EB2              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EB2
 272+ 9EB2 23               inc hl
 273+ 9EB3 CD C4 9E         call Extrae_nibble_alto
 274+ 9EB6
 275+ 9EB6 32 DD 8B         ld (Vel_left),a
 276+ 9EB9 79               ld a,c
 277+ 9EBA E6 0F            and $0f
 278+ 9EBC 32 DE 8B         ld (Vel_right),a
 279+ 9EBF
 280+ 9EBF              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EBF
 282+ 9EBF 23               inc hl
 283+ 9EC0 22 EB 8B         ld (Puntero_mov),hl
 284+ 9EC3 C9               ret
 285+ 9EC4
 286+ 9EC4 06 04        Extrae_nibble_alto ld b,4
 287+ 9EC6 7E               ld a,(hl)
 288+ 9EC7 4F               ld c,a
 289+ 9EC8 E6 F0            and $f0
 290+ 9ECA CB 3F        1 srl a
 291+ 9ECC 10 FC            djnz 1B
 292+ 9ECE C9               ret
 293+ 9ECF
 294+ 9ECF              ; ---------- --------- --------- ---------- ----------
 295+ 9ECF              ;
 296+ 9ECF              ;   5/7/23
 297+ 9ECF              ;
 298+ 9ECF              ;   Incrementa_Puntero_indice_mov
 299+ 9ECF
 300+ 9ECF              Incrementa_Puntero_indice_mov
 301+ 9ECF
 302+ 9ECF 21 EF 8B         ld hl,Incrementa_puntero
 303+ 9ED2 34               inc (hl)
 304+ 9ED3
 305+ 9ED3 2A E9 8B         ld hl,(Puntero_indice_mov)
 306+ 9ED6 01 02 00         ld bc,2
 307+ 9ED9 A7               and a
 308+ 9EDA 09               add hl,bc
 309+ 9EDB 22 E9 8B         ld (Puntero_indice_mov),hl
 310+ 9EDE
 311+ 9EDE 7E               ld a,(hl)
 312+ 9EDF A7               and a
 313+ 9EE0
 314+ 9EE0              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EE0
 316+ 9EE0              ;    jr z,$
 317+ 9EE0
 318+ 9EE0              ;! Reinicia el Patrón de movimiento.
 319+ 9EE0
 320+ 9EE0 CC E5 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EE3
 322+ 9EE3 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EE4
 324+ 9EE4 C9               ret
 325+ 9EE5
 326+ 9EE5              ; ---------- --------- --------- ---------- ----------
 327+ 9EE5              ;
 328+ 9EE5              ;   15/01/24
 329+ 9EE5              ;
 330+ 9EE5              ;   Inicializa_Puntero_indice_mov
 331+ 9EE5
 332+ 9EE5              Inicializa_Puntero_indice_mov_2
 333+ 9EE5
 334+ 9EE5              ; Existe etiqueta de bucle principal???
 335+ 9EE5
 336+ 9EE5 2A ED 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EE8 24               inc h
 338+ 9EE9 25               dec h
 339+ 9EEA 28 05            jr z,2F
 340+ 9EEC
 341+ 9EEC 22 E9 8B         ld (Puntero_indice_mov),hl
 342+ 9EEF 18 14            jr 3F
 343+ 9EF1
 344+ 9EF1              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EF1
 346+ 9EF1 3A EF 8B     2 ld a,(Incrementa_puntero)
 347+ 9EF4 47               ld b,a
 348+ 9EF5
 349+ 9EF5 2A E9 8B         ld hl,(Puntero_indice_mov)
 350+ 9EF8 2B           1 dec hl
 351+ 9EF9 2B               dec hl
 352+ 9EFA 10 FC            djnz 1B
 353+ 9EFC 22 E9 8B         ld (Puntero_indice_mov),hl
 354+ 9EFF
 355+ 9EFF AF               xor a
 356+ 9F00 32 EF 8B         ld (Incrementa_puntero),a
 357+ 9F03 18 06            jr 4F
 358+ 9F05
 359+ 9F05 3A F0 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9F08 32 EF 8B         ld (Incrementa_puntero),a
 361+ 9F0B C9           4 ret
 362+ 9F0C
 363+ 9F0C              ; ----------------------------------------------------------------------
 364+ 9F0C              ;
 365+ 9F0C              ;   30/01/24
 366+ 9F0C              ;
 367+ 9F0C              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9F0C
 369+ 9F0C 3A B8 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9F0F CD 60 94         call Calcula_salto_en_BC
 371+ 9F12 21 E1 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F15 A7               and a
 373+ 9F16 ED 4A            adc hl,bc
 374+ 9F18 C9               ret
 375+ 9F19
 376+ 9F19              ; ----------------------------------------------------------------------
 377+ 9F19              ;
 378+ 9F19              ;   30/01/24
 379+ 9F19              ;
 380+ 9F19              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F19              ;
 382+ 9F19              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F19
 384+ 9F19 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F1A 23               inc hl
 386+ 9F1B 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F1C 69               ld l,c
 388+ 9F1D 60               ld h,b
 389+ 9F1E 22 C1 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F21 C9               ret
 391+ 9F22
# file closed: Movimiento.asm
2059  9F22              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F22              ; --------------------------------------------------------------------------------------
   2+ 9F22              ;
   3+ 9F22              ;   25/10/24
   4+ 9F22              ;
   5+ 9F22
   6+ 9F22              Pinta_disparos_Entidades
   7+ 9F22
   8+ 9F22 ED 73 05 8C      ld (Stack),sp
   9+ 9F26 ED 7B 17 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F2A
  11+ 9F2A 3E 02            ld a,2
  12+ 9F2C 08               ex af,af
  13+ 9F2D
  14+ 9F2D 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F2F              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F2F              ;                                     _ No encontraría "0".
  17+ 9F2F FD E1        4 pop iy
  18+ 9F31 D1               pop de                          ; 1er .db IYL
  19+ 9F32              ;                                   ; 2º  .db IYH
  20+ 9F32              ;                                   ; 3er .db E.
  21+ 9F32              ;   Album vacío ???
  22+ 9F32
  23+ 9F32 FD 7D            ld a,iyl
  24+ 9F34 FD 84            add iyh
  25+ 9F36 83               add e
  26+ 9F37 28 1F            jr z,1F
  27+ 9F39
  28+ 9F39              ;   Imprime album, (contiene datos).
  29+ 9F39
  30+ 9F39 3B               dec sp
  31+ 9F3A
  32+ 9F3A E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F3B
  34+ 9F3B              ; Imprime el 1er scanline del disparo.
  35+ 9F3B
  36+ 9F3B FD 7D            ld a,iyl
  37+ 9F3D AE               xor (hl)
  38+ 9F3E 77               ld (hl),a
  39+ 9F3F
  40+ 9F3F 2C               inc l
  41+ 9F40
  42+ 9F40 FD 7C            ld a,iyh
  43+ 9F42 AE               xor (hl)
  44+ 9F43 77               ld (hl),a
  45+ 9F44
  46+ 9F44 2C               inc l
  47+ 9F45
  48+ 9F45 7B               ld a,e
  49+ 9F46 AE               xor (hl)
  50+ 9F47 77               ld (hl),a
  51+ 9F48
  52+ 9F48              ; Imprime el 2º scanline del disparo.
  53+ 9F48
  54+ 9F48 E1               pop hl
  55+ 9F49
  56+ 9F49 FD 7D            ld a,iyl
  57+ 9F4B AE               xor (hl)
  58+ 9F4C 77               ld (hl),a
  59+ 9F4D
  60+ 9F4D 2C               inc l
  61+ 9F4E
  62+ 9F4E FD 7C            ld a,iyh
  63+ 9F50 AE               xor (hl)
  64+ 9F51 77               ld (hl),a
  65+ 9F52
  66+ 9F52 2C               inc l
  67+ 9F53
  68+ 9F53 7B               ld a,e
  69+ 9F54 AE               xor (hl)
  70+ 9F55 77               ld (hl),a
  71+ 9F56
  72+ 9F56 10 D7            djnz 4B
  73+ 9F58
  74+ 9F58 08           1 ex af,af
  75+ 9F59 3D               dec a
  76+ 9F5A 20 05            jr nz,2F
  77+ 9F5C
  78+ 9F5C ED 7B 05 8C      ld sp,(Stack)
  79+ 9F60 C9               ret
  80+ 9F61
  81+ 9F61 ED 7B 15 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F65 08               ex af,af
  83+ 9F66 18 C5            jr 3B
  84+ 9F68
  85+ 9F68              ; --------------------------------------------------------------------------------------
  86+ 9F68              ;
  87+ 9F68              ;   30/10/24
  88+ 9F68              ;
  89+ 9F68
  90+ 9F68              Motor_de_disparos_entidades
  91+ 9F68
  92+ 9F68 3A 1D 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F6B FE 07            cp 7
  94+ 9F6D C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F6E
  96+ 9F6E 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F70 21 23 89         ld hl,Indice_de_disparos_entidades
  98+ 9F73
  99+ 9F73 CD C4 90     1 call Extrae_address
 100+ 9F76 1C               inc e
 101+ 9F77 1C               inc e
 102+ 9F78 ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F7C
 104+ 9F7C               ; Caja vacía ???
 105+ 9F7C
 106+ 9F7C 2D               dec l
 107+ 9F7D 7E               ld a,(hl)
 108+ 9F7E A7               and a
 109+ 9F7F 28 3D            jr z,3F                                                              ; Caja vacía.
 110+ 9F81
 111+ 9F81              ; --- Trabajamos con caja:
 112+ 9F81
 113+ 9F81 2C               inc l
 114+ 9F82
 115+ 9F82              ; --- Existe posibilidad de impacto ???
 116+ 9F82
 117+ 9F82 CB 46            bit 0,(hl)
 118+ 9F84 C4 C2 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F87
 120+ 9F87 CD 22 A0         call Rota_disparo_si_procede
 121+ 9F8A
 122+ 9F8A              ; ------------------------------------------------------------
 123+ 9F8A
 124+ 9F8A 2D               dec l
 125+ 9F8B 2D               dec l
 126+ 9F8C
 127+ 9F8C CD C4 90         call Extrae_address
 128+ 9F8F
 129+ 9F8F              ;   (Puntero_de_impresion) del disparo en HL
 130+ 9F8F              ;   Hay que modificar el puntero de impresión ??? ---------------------
 131+ 9F8F
 132+ 9F8F 3A 2F 8C         ld a,(Ctrl_5)
 133+ 9F92 CB 57            bit 2,a
 134+ 9F94 28 09            jr z,4F
 135+ 9F96
 136+ 9F96 CB 97            res 2,a
 137+ 9F98 32 2F 8C         ld (Ctrl_5),a
 138+ 9F9B 2C               inc l
 139+ 9F9C 2C               inc l
 140+ 9F9D 18 0C            jr 5F
 141+ 9F9F
 142+ 9F9F CB 5F        4 bit 3,a
 143+ 9FA1 28 08            jr z,5F
 144+ 9FA3
 145+ 9FA3 CB 9F            res 3,a
 146+ 9FA5 32 2F 8C         ld (Ctrl_5),a
 147+ 9FA8 2D               dec l
 148+ 9FA9 2D               dec l
 149+ 9FAA 2D               dec l
 150+ 9FAB
 151+ 9FAB              ; ---------------------------------------------------------------------
 152+ 9FAB
 153+ 9FAB              ;! Velocidad del disparo de entidades.
 154+ 9FAB
 155+ 9FAB CD DD 99     5 call NextScan
 156+ 9FAE CD DD 99         call NextScan
 157+ 9FB1
 158+ 9FB1              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 159+ 9FB1
 160+ 9FB1 CD FF 9F         call Fin_de_disparo_de_entidad
 161+ 9FB4
 162+ 9FB4 EB               ex de,hl
 163+ 9FB5
 164+ 9FB5 73               ld (hl),e
 165+ 9FB6 23               inc hl
 166+ 9FB7 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 167+ 9FB8
 168+ 9FB8 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 169+ 9FBB 18 02            jr 2F
 170+ 9FBD
 171+ 9FBD C9               ret
 172+ 9FBE
 173+ 9FBE EB           3 ex de,hl
 174+ 9FBF 10 B2        2 djnz 1B
 175+ 9FC1
 176+ 9FC1 C9               ret
 177+ 9FC2
 178+ 9FC2              ; ------------- ------------- ------------
 179+ 9FC2              ;
 180+ 9FC2              ;   1/11/24
 181+ 9FC2
 182+ 9FC2              Comprueba_impacto_con_Amadeus
 183+ 9FC2
 184+ 9FC2              ;   El disparo se encuentra en zona de Amadeus.
 185+ 9FC2              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 186+ 9FC2
 187+ 9FC2              ;   Modificamos registros, así que guardamos ...
 188+ 9FC2
 189+ 9FC2 C5               push bc
 190+ 9FC3 E5               push hl
 191+ 9FC4 D5               push de
 192+ 9FC5
 193+ 9FC5 2D               dec l
 194+ 9FC6 2D               dec l
 195+ 9FC7
 196+ 9FC7 CD C4 90         call Extrae_address
 197+ 9FCA
 198+ 9FCA 3A 6E 89         ld a,(CX_Amadeus)
 199+ 9FCD 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 200+ 9FCE
 201+ 9FCE 7D               ld a,l
 202+ 9FCF E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 203+ 9FD1
 204+ 9FD1 06 03            ld b,3
 205+ 9FD3
 206+ 9FD3 B9           1 cp c
 207+ 9FD4 28 14            jr z,Coincidencia
 208+ 9FD6 0C               inc c
 209+ 9FD7 10 FA            djnz 1B
 210+ 9FD9
 211+ 9FD9 0D               dec c
 212+ 9FDA 0D               dec c
 213+ 9FDB 0D               dec c
 214+ 9FDC
 215+ 9FDC 3C               inc a
 216+ 9FDD B9               cp c
 217+ 9FDE 28 0A            jr z,Coincidencia
 218+ 9FE0
 219+ 9FE0 3C               inc a
 220+ 9FE1 B9               cp c
 221+ 9FE2 28 06            jr z,Coincidencia
 222+ 9FE4
 223+ 9FE4 D1           2 pop de
 224+ 9FE5 E1               pop hl
 225+ 9FE6 C1               pop bc
 226+ 9FE7
 227+ 9FE7              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 228+ 9FE7
 229+ 9FE7 CB 86            res 0,(hl)
 230+ 9FE9
 231+ 9FE9 C9               ret
 232+ 9FEA
 233+ 9FEA              Coincidencia
 234+ 9FEA
 235+ 9FEA              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 236+ 9FEA              ;   Existe posibilidad de impacto.
 237+ 9FEA              ;   Vamos a averiguarlo ...
 238+ 9FEA
 239+ 9FEA 1D               dec e
 240+ 9FEB 1D               dec e
 241+ 9FEC 1D               dec e
 242+ 9FED
 243+ 9FED              ; DE en Puntero_objeto del disparo.
 244+ 9FED              ; HL en Puntero_de_impresión del disparo.
 245+ 9FED
 246+ 9FED              ; Comparador:
 247+ 9FED
 248+ 9FED 06 03            ld b,3
 249+ 9FEF
 250+ 9FEF 1A           3 ld a,(de)
 251+ 9FF0 4F               ld c,a
 252+ 9FF1 A6               and (hl)
 253+ 9FF2 B9               cp c
 254+ 9FF3 20 06            jr nz,Amadeus_impactado
 255+ 9FF5
 256+ 9FF5 2C               inc l
 257+ 9FF6 1C               inc e
 258+ 9FF7
 259+ 9FF7 10 F6            djnz 3B
 260+ 9FF9
 261+ 9FF9 18 E9            jr 2B
 262+ 9FFB
 263+ 9FFB              Amadeus_impactado
 264+ 9FFB
 265+ 9FFB F3               di
 266+ 9FFC 18 FE            jr $
 267+ 9FFE FB               ei
 268+ 9FFF
 269+ 9FFF              ; ------------- ------------- ------------
 270+ 9FFF              ;
 271+ 9FFF              ;   31/10/24
 272+ 9FFF
 273+ 9FFF              Fin_de_disparo_de_entidad
 274+ 9FFF
 275+ 9FFF              ; Estamos en zona de Amadeus ??
 276+ 9FFF
 277+ 9FFF 7C               ld a,h
 278+ A000 FE 54            cp $54
 279+ A002 38 0D            jr c,1F
 280+ A004
 281+ A004 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 282+ A005
 283+ A005 5D               ld e,l
 284+ A006 54               ld d,h
 285+ A007
 286+ A007 21 E0 57         ld hl,$57e0
 287+ A00A ED 52            sbc hl,de
 288+ A00C
 289+ A00C 38 6F            jr c,Elimina_disparo_entidad
 290+ A00E
 291+ A00E 6B               ld l,e
 292+ A00F 62               ld h,d
 293+ A010
 294+ A010 D1               pop de
 295+ A011
 296+ A011 7C           1 ld a,h
 297+ A012 FE 50            cp $50
 298+ A014 D8               ret c
 299+ A015
 300+ A015 7D               ld a,l
 301+ A016 FE C0            cp $c0
 302+ A018 D8               ret c
 303+ A019
 304+ A019              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 305+ A019              ; Así podremos comprobar si hay colisión más adelante.
 306+ A019
 307+ A019 1C               inc e
 308+ A01A 1C               inc e
 309+ A01B
 310+ A01B EB               ex de,hl
 311+ A01C CB C6            set 0,(hl)
 312+ A01E EB               ex de,hl
 313+ A01F
 314+ A01F 1D               dec e
 315+ A020 1D               dec e
 316+ A021
 317+ A021 C9               ret
 318+ A022
 319+ A022              ; ----------------------------------------------------------
 320+ A022              ;
 321+ A022              ;   08/10/24
 322+ A022
 323+ A022              ;   Estructura de un disparo de entidades.
 324+ A022
 325+ A022              ;   Disparo_1 defw 0								; Puntero objeto.
 326+ A022              ; 	defw 0											; Puntero de impresión.
 327+ A022              ;	defw 0											; Control.
 328+ A022
 329+ A022              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 330+ A022              ;   _de la entidad en el momento de disparar.
 331+ A022
 332+ A022              ;   El byte alto muestra la siguiente información:
 333+ A022              ;
 334+ A022              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 335+ A022              ;                        _antes de desplazarse a derecha/izquierda.
 336+ A022              ;
 337+ A022              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 338+ A022              ;
 339+ A022              ;                        10xx ..... Izquierda.
 340+ A022              ;                        01xx ..... Derecha.
 341+ A022              ;                        00xx ..... Recto.
 342+ A022
 343+ A022              Rota_disparo_si_procede
 344+ A022
 345+ A022              ;   Nos situamos en el byte alto de (Control).
 346+ A022
 347+ A022 CB 76            bit 6,(hl)
 348+ A024 20 2D            jr nz,Rota_a_derecha
 349+ A026 CB 7E            bit 7,(hl)
 350+ A028 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 351+ A029
 352+ A029              Rota_a_izq
 353+ A029
 354+ A029 E5               push hl
 355+ A02A
 356+ A02A 7D               ld a,l
 357+ A02B D6 05            sub 5
 358+ A02D 6F               ld l,a
 359+ A02E
 360+ A02E E5               push hl
 361+ A02F FD E1            pop iy
 362+ A031
 363+ A031 A7               and a
 364+ A032
 365+ A032 FD CB 02 16      rl (iy+02)
 366+ A036 FD CB 01 16      rl (iy+01)
 367+ A03A FD CB 00 16      rl (iy+00)
 368+ A03E
 369+ A03E 30 3B            jr nc,Exit
 370+ A040
 371+ A040              ; Desplazamiento completo hasta Carry.
 372+ A040              ; Modificamos datos y decremento (Puntero_de_impresión).
 373+ A040
 374+ A040 FD 36 02 03      ld (iy+02),$03
 375+ A044 FD 36 01 00      ld (iy+01),$00
 376+ A048 FD 36 00 00      ld (iy+00),$00
 377+ A04C
 378+ A04C 21 2F 8C         ld hl,Ctrl_5
 379+ A04F CB DE            set 3,(hl)
 380+ A051
 381+ A051 18 28            jr Exit
 382+ A053
 383+ A053              Rota_a_derecha
 384+ A053
 385+ A053 E5               push hl
 386+ A054
 387+ A054 7D               ld a,l
 388+ A055 D6 05            sub 5
 389+ A057 6F               ld l,a
 390+ A058
 391+ A058 E5               push hl
 392+ A059 FD E1            pop iy
 393+ A05B
 394+ A05B A7               and a
 395+ A05C
 396+ A05C FD CB 00 1E      rr (iy+00)
 397+ A060 FD CB 01 1E      rr (iy+01)
 398+ A064 FD CB 02 1E      rr (iy+02)
 399+ A068
 400+ A068 30 11            jr nc,Exit
 401+ A06A
 402+ A06A              ; Desplazamiento completo hasta Carry.
 403+ A06A              ; Modificamos datos e incremento (Puntero_de_impresión).
 404+ A06A
 405+ A06A FD 36 00 01      ld (iy+00),$01
 406+ A06E FD 36 01 80      ld (iy+01),$80
 407+ A072 FD 36 02 00      ld (iy+02),$00
 408+ A076
 409+ A076 21 2F 8C         ld hl,Ctrl_5
 410+ A079 CB D6            set 2,(hl)
 411+ A07B
 412+ A07B E1           Exit pop hl
 413+ A07C C9               ret
 414+ A07D
 415+ A07D              ; ------------ ----------- ------------
 416+ A07D              ;
 417+ A07D              ;   25/9/24
 418+ A07D
 419+ A07D              Elimina_disparo_entidad
 420+ A07D
 421+ A07D 21 1D 8C         ld hl,Numero_de_disparos_de_entidades
 422+ A080 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 423+ A081
 424+ A081 E1               pop hl
 425+ A082 E5               push hl
 426+ A083
 427+ A083 2C               inc l
 428+ A084 2C               inc l
 429+ A085
 430+ A085 CD 8D A0         call Borra_6_bytes
 431+ A088
 432+ A088 D1               pop de
 433+ A089
 434+ A089 21 00 00         ld hl,0
 435+ A08C
 436+ A08C C9               ret
 437+ A08D
 438+ A08D              ; ----- ----- ----- ----- -----
 439+ A08D
 440+ A08D              Borra_6_bytes
 441+ A08D
 442+ A08D 16 06            ld d,6                                                    ; Contador
 443+ A08F AF               xor a                                                     ; Borrador
 444+ A090 77           1 ld (hl),a
 445+ A091 2D               dec l
 446+ A092 15               dec d
 447+ A093 20 FB            jr nz,1B
 448+ A095
 449+ A095 C9               ret
 450+ A096
 451+ A096              ; --------------------------------------------------------------------------------------
 452+ A096              ;
 453+ A096              ;   12/10/24
 454+ A096              ;
 455+ A096
 456+ A096              Genera_datos_de_impresion_disparos_Entidades
 457+ A096
 458+ A096 3E 07            ld a,7
 459+ A098 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 460+ A099
 461+ A099              ; ---------------
 462+ A099
 463+ A099              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 464+ A099
 465+ A099 21 23 89          ld hl,Indice_de_disparos_entidades
 466+ A09C
 467+ A09C CD C4 90     1 call Extrae_address
 468+ A09F
 469+ A09F 13               inc de
 470+ A0A0 13               inc de
 471+ A0A1
 472+ A0A1 ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 473+ A0A5
 474+ A0A5 2D               dec l
 475+ A0A6 7E               ld a,(hl)
 476+ A0A7 A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 477+ A0A8 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 478+ A0AA
 479+ A0AA              ; ----- ----- ----- -----
 480+ A0AA
 481+ A0AA 2D               dec l
 482+ A0AB CD C4 90         call Extrae_address
 483+ A0AE E5               push hl
 484+ A0AF
 485+ A0AF 1D               dec e
 486+ A0B0
 487+ A0B0 EB               ex de,hl
 488+ A0B1
 489+ A0B1 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 490+ A0B2 2D               dec l
 491+ A0B3 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 492+ A0B4 2D               dec l
 493+ A0B5 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 494+ A0B6
 495+ A0B6 E1               pop hl                                                    ;? Puntero de impresión en HL.
 496+ A0B7
 497+ A0B7              Genera_scanlines_de_los_disparos_de_entidades.
 498+ A0B7
 499+ A0B7 FD 2A 19 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 500+ A0BB FD 73 00         ld (iy+0),e
 501+ A0BE FD 70 01         ld (iy+1),b
 502+ A0C1 FD 71 02         ld (iy+2),c
 503+ A0C4
 504+ A0C4 FD 75 03         ld (iy+3),l
 505+ A0C7 FD 74 04         ld (iy+4),h
 506+ A0CA
 507+ A0CA CD DD 99         call NextScan
 508+ A0CD
 509+ A0CD FD 75 05         ld (iy+5),l
 510+ A0D0 FD 74 06         ld (iy+6),h
 511+ A0D3
 512+ A0D3 FD E5            push iy
 513+ A0D5 E1               pop hl
 514+ A0D6
 515+ A0D6 3E 07            ld a,7
 516+ A0D8 85               add l
 517+ A0D9 6F               ld l,a
 518+ A0DA
 519+ A0DA 22 19 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 520+ A0DD
 521+ A0DD              ; ----- ----- ----- -----
 522+ A0DD
 523+ A0DD              Situa_en_siguiente_caja
 524+ A0DD
 525+ A0DD 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 526+ A0DE 3D               dec a
 527+ A0DF C8               ret z
 528+ A0E0
 529+ A0E0 08               ex af,af
 530+ A0E1 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 531+ A0E4 18 B6            jr 1B
 532+ A0E6
 533+ A0E6              ; --------------------------------------------------------------------------------------
 534+ A0E6              ;
 535+ A0E6              ;   12/10/24
 536+ A0E6              ;
 537+ A0E6
 538+ A0E6              Genera_disparo_de_entidad_maldosa
 539+ A0E6
 540+ A0E6              ;   Estructura de un disparo de entidades.
 541+ A0E6
 542+ A0E6              ;   Disparo_1 defw 0								; Puntero objeto.
 543+ A0E6              ; 	defw 0											; Puntero de impresión.
 544+ A0E6              ;	defw 0											; Control.
 545+ A0E6
 546+ A0E6              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 547+ A0E6              ;   _de la entidad en el momento de disparar.
 548+ A0E6
 549+ A0E6              ;   El byte de control muestra la siguiente información:
 550+ A0E6
 551+ A0E6              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 552+ A0E6              ;
 553+ A0E6              ;                        10xx ..... Izquierda.
 554+ A0E6              ;                        01xx ..... Derecha.
 555+ A0E6              ;                        00xx ..... Recto.
 556+ A0E6
 557+ A0E6              ;*  Exclusiones.
 558+ A0E6
 559+ A0E6              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 560+ A0E6              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 561+ A0E6
 562+ A0E6 3A 1D 8C         ld a,(Numero_de_disparos_de_entidades)
 563+ A0E9 A7               and a
 564+ A0EA C8               ret z
 565+ A0EB
 566+ A0EB 3A BA 8B         ld a,(Coordenada_y)
 567+ A0EE A7               and a
 568+ A0EF C8               ret z
 569+ A0F0
 570+ A0F0 3D               dec a
 571+ A0F1 C8               ret z
 572+ A0F2
 573+ A0F2 FE 10            cp 16
 574+ A0F4 D0               ret nc
 575+ A0F5
 576+ A0F5              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 577+ A0F5              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 578+ A0F5              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 579+ A0F5
 580+ A0F5 21 1F 8C         ld hl,Permiso_de_disparo_Entidades
 581+ A0F8 35               dec (hl)                                            ; No más disparos en este FRAME.
 582+ A0F9
 583+ A0F9              ;   Decrementa el numero de disparos de entidades.
 584+ A0F9
 585+ A0F9 21 1D 8C         ld hl,Numero_de_disparos_de_entidades
 586+ A0FC 35               dec (hl)
 587+ A0FD
 588+ A0FD 21 23 89         ld hl,Indice_de_disparos_entidades
 589+ A100
 590+ A100 CD C4 90     1 call Extrae_address
 591+ A103
 592+ A103 13               inc de
 593+ A104 13               inc de
 594+ A105
 595+ A105 ED 53 30 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 596+ A109
 597+ A109              ;   Comprobamos si la caja está vacía.
 598+ A109
 599+ A109 2D               dec l
 600+ A10A 7E               ld a,(hl)
 601+ A10B A7               and a
 602+ A10C 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 603+ A10E 2C               inc l
 604+ A10F
 605+ A10F              ;   Caja vacía, vamos a generar un disparo.
 606+ A10F              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 607+ A10F
 608+ A10F CD 30 A1         call Genera_byte_inclinacion
 609+ A112
 610+ A112 7E               ld a,(hl)
 611+ A113 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 612+ A114
 613+ A114 2D               dec l
 614+ A115
 615+ A115 CD 4C A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 616+ A118
 617+ A118 70               ld (hl),b
 618+ A119 2D               dec l
 619+ A11A 71               ld (hl),c
 620+ A11B
 621+ A11B 2D               dec l
 622+ A11C
 623+ A11C              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 624+ A11C
 625+ A11C FD 7E 02         ld a,(iy+02)
 626+ A11F 77               ld (hl),a
 627+ A120 2D               dec l
 628+ A121
 629+ A121 FD 7E 01         ld a,(iy+01)
 630+ A124 77               ld (hl),a
 631+ A125 2D               dec l
 632+ A126
 633+ A126 FD 7E 00         ld a,(iy+00)
 634+ A129 77               ld (hl),a
 635+ A12A
 636+ A12A C9               ret
 637+ A12B
 638+ A12B              ;   --- --- ---
 639+ A12B
 640+ A12B              Situa_en_siguiente_disparo
 641+ A12B
 642+ A12B 2A 30 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 643+ A12E 18 D0            jr 1B
 644+ A130
 645+ A130              ; --------------------------------------------------------------------------------------
 646+ A130              ;
 647+ A130              ;   09/10/24
 648+ A130              ;
 649+ A130
 650+ A130              Genera_byte_inclinacion
 651+ A130
 652+ A130              ; Determina tendencia del disparo.
 653+ A130
 654+ A130 3A 6E 89         ld a,(CX_Amadeus)
 655+ A133 47               ld b,a
 656+ A134 3A B9 8B         ld a,(Coordenada_X)
 657+ A137 90               sub b
 658+ A138 38 07            jr c,Disparo_a_derecha
 659+ A13A
 660+ A13A FE 06        Disparo_a_izquierda cp 6
 661+ A13C
 662+ A13C D8               ret c
 663+ A13D C8               ret z
 664+ A13E
 665+ A13E CB FE            set 7,(hl)
 666+ A140 C9               ret
 667+ A141
 668+ A141 47           Disparo_a_derecha ld b,a
 669+ A142 3E FF            ld a,$ff
 670+ A144 90               sub b
 671+ A145
 672+ A145 FE 05            cp 5
 673+ A147
 674+ A147 D8               ret c
 675+ A148 C8               ret z
 676+ A149
 677+ A149 CB F6            set 6,(hl)
 678+ A14B C9               ret
 679+ A14C
 680+ A14C              ; --------------------------------------------------------------------------------------
 681+ A14C              ;
 682+ A14C              ;   09/10/24
 683+ A14C              ;
 684+ A14C
 685+ A14C              Modifica_puntero_de_impresion
 686+ A14C
 687+ A14C              ;   Puntero de impresión del disparo en BC.
 688+ A14C
 689+ A14C E5               push hl
 690+ A14D
 691+ A14D 2A 32 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 692+ A150 CD DD 99         call NextScan
 693+ A153
 694+ A153 4D               ld c,l
 695+ A154 44               ld b,h
 696+ A155
 697+ A155 E1               pop hl
 698+ A156
 699+ A156 08               ex af,af
 700+ A157 CB 77            bit 6,a
 701+ A159 28 06            jr z,1F
 702+ A15B
 703+ A15B FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 704+ A15F 0C               inc c
 705+ A160 C9               ret
 706+ A161
 707+ A161 CB 7F        1 bit 7,a
 708+ A163 28 F6            jr z,2B
 709+ A165
 710+ A165 FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 711+ A169 0D               dec c
 712+ A16A
 713+ A16A C9               ret
 714+ A16B
 715+ A16B              ; --------------------------------------------------------------------------------------
 716+ A16B              ;
 717+ A16B              ;   31/08/24
 718+ A16B              ;
 719+ A16B
 720+ A16B              Compara_con_coordenadas_de_disparo
 721+ A16B
 722+ A16B 3A BA 8B         ld a,(Coordenada_y)
 723+ A16E 47               ld b,a
 724+ A16F 3A 37 8C         ld a,(Coordenadas_disparo_certero)
 725+ A172 90               sub b
 726+ A173
 727+ A173              ; A = "0" ok
 728+ A173              ; A = "1" ok
 729+ A173
 730+ A173 28 08            jr z,Comprueba_coordenada_X
 731+ A175 3D               dec a
 732+ A176 28 05            jr z,Comprueba_coordenada_X
 733+ A178
 734+ A178              ; A = "$ff" ok
 735+ A178
 736+ A178 FE FE            cp $fe
 737+ A17A 28 01            jr z,Comprueba_coordenada_X
 738+ A17C
 739+ A17C C9               ret
 740+ A17D
 741+ A17D              Comprueba_coordenada_X
 742+ A17D
 743+ A17D 3A B9 8B         ld a,(Coordenada_X)
 744+ A180 47               ld b,a
 745+ A181 21 38 8C         ld hl,Coordenadas_disparo_certero+1
 746+ A184 7E               ld a,(hl)
 747+ A185 90               sub b
 748+ A186
 749+ A186              ; A = "0" ok
 750+ A186              ; A = "1" ok
 751+ A186
 752+ A186 28 09            jr z,Activa_Impacto_en_entidad
 753+ A188 3D               dec a
 754+ A189 28 06            jr z,Activa_Impacto_en_entidad
 755+ A18B
 756+ A18B              ; A = "2" ok
 757+ A18B
 758+ A18B 3D               dec a
 759+ A18C 28 03            jr z,Activa_Impacto_en_entidad
 760+ A18E
 761+ A18E              ; A = "$ff"
 762+ A18E
 763+ A18E FE FD            cp $fd
 764+ A190 C0               ret nz
 765+ A191
 766+ A191              Activa_Impacto_en_entidad
 767+ A191
 768+ A191              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 769+ A191
 770+ A191 3E 02            ld a,2
 771+ A193 32 BC 8B         ld (Impacto),a
 772+ A196
 773+ A196              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 774+ A196
 775+ A196 11 C0 87         ld de,Indice_Explosion_entidades
 776+ A199 21 BF 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 777+ A19C
 778+ A19C 73               ld (hl),e
 779+ A19D 23               inc hl
 780+ A19E 72               ld (hl),d
 781+ A19F
 782+ A19F              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 783+ A19F
 784+ A19F 21 34 8C         ld hl,Impacto2
 785+ A1A2 CB 9E            res 3,(hl)
 786+ A1A4
 787+ A1A4 C9               ret
 788+ A1A5
 789+ A1A5              ; --------------------------------------------------------------------------------------
 790+ A1A5              ;
 791+ A1A5              ;   13/10/24
 792+ A1A5              ;
 793+ A1A5
 794+ A1A5              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 795+ A1A5
 796+ A1A5              Limpia_album_de_pintado_disparos_Amadeus
 797+ A1A5
 798+ A1A5 2A 11 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 799+ A1A8 06 06            ld b,6
 800+ A1AA AF               xor a
 801+ A1AB 77           1 ld (hl),a
 802+ A1AC 2C               inc l
 803+ A1AD 10 FC            djnz 1B
 804+ A1AF
 805+ A1AF C9               ret
 806+ A1B0
 807+ A1B0              ; --------------------------------------------------------------------------------------
 808+ A1B0              ;
 809+ A1B0              ;   29/09/24
 810+ A1B0              ;
 811+ A1B0
 812+ A1B0              Calcula_bytes_pintado_disparos
 813+ A1B0
 814+ A1B0 2A 15 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 815+ A1B3 45               ld b,l
 816+ A1B4 2A 19 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 817+ A1B7 7D               ld a,l
 818+ A1B8
 819+ A1B8 90               sub b
 820+ A1B9 32 1B 8C         ld (Num_de_bytes_album_de_disparos),a
 821+ A1BC
 822+ A1BC C9               ret
 823+ A1BD
 824+ A1BD              ; --------------------------------------------------------------------------------------
 825+ A1BD              ;
 826+ A1BD              ;   26/10/24
 827+ A1BD              ;
 828+ A1BD              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 829+ A1BD              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 830+ A1BD              ;   _disparos que el álbum del FRAME actual).
 831+ A1BD
 832+ A1BD              Limpia_album_de_pintado_disparos_entidades
 833+ A1BD
 834+ A1BD 21 1C 8C         ld hl,Num_de_bytes_album_de_disparos+1
 835+ A1C0 7E               ld a,(hl)
 836+ A1C1 2D               dec l
 837+ A1C2 46               ld b,(hl)
 838+ A1C3 90               sub b
 839+ A1C4
 840+ A1C4 D8               ret c
 841+ A1C5 C8               ret z
 842+ A1C6
 843+ A1C6 F5               push af
 844+ A1C7 80               add b
 845+ A1C8 77               ld (hl),a
 846+ A1C9 F1               pop af
 847+ A1CA
 848+ A1CA              ; Clean.
 849+ A1CA
 850+ A1CA 47           2 ld b,a
 851+ A1CB AF               xor a
 852+ A1CC 2A 19 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 853+ A1CF 77           1 ld (hl),a
 854+ A1D0 23               inc hl
 855+ A1D1 10 FC            djnz 1B
 856+ A1D3
 857+ A1D3 C9               ret
 858+ A1D4
 859+ A1D4              ; --------------------------------------------------------------------------------------
 860+ A1D4              ;
 861+ A1D4              ;   29/09/24
 862+ A1D4              ;
 863+ A1D4
 864+ A1D4              Motor_Disparos_Amadeus
 865+ A1D4
 866+ A1D4 21 20 89         ld hl,Disparo_Amad+1
 867+ A1D7
 868+ A1D7 34               inc (hl)
 869+ A1D8 35               dec (hl)
 870+ A1D9
 871+ A1D9 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 872+ A1DA
 873+ A1DA              ;   Esta caja contiene un disparo.
 874+ A1DA
 875+ A1DA CD E1 A1         call Consulta_Impacto
 876+ A1DD CC FA A1         call z,Mueve_disparo_Amadeus
 877+ A1E0
 878+ A1E0 C9               ret
 879+ A1E1
 880+ A1E1              ; ----------------------
 881+ A1E1              ;
 882+ A1E1              ;
 883+ A1E1              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 884+ A1E1              ;
 885+ A1E1              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 886+ A1E1
 887+ A1E1
 888+ A1E1              Consulta_Impacto
 889+ A1E1
 890+ A1E1              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 891+ A1E1              ;   _sea lo más coherente posible.
 892+ A1E1
 893+ A1E1 E5               push hl
 894+ A1E2 2B               dec hl
 895+ A1E3 CD D6 A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 896+ A1E6 E1               pop hl
 897+ A1E7 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 898+ A1E8
 899+ A1E8 C8               ret z
 900+ A1E9
 901+ A1E9 3A 34 8C         ld a,(Impacto2)
 902+ A1EC CB DF            set 3,a
 903+ A1EE 32 34 8C         ld (Impacto2),a
 904+ A1F1
 905+ A1F1 E5               push hl
 906+ A1F2 CD C3 A2         call Genera_coordenadas_de_disparo_Amadeus
 907+ A1F5 E1               pop hl
 908+ A1F6 CD 13 A2         call Elimina_disparo_Amadeus
 909+ A1F9
 910+ A1F9 C9               ret
 911+ A1FA
 912+ A1FA              ; ----------------------
 913+ A1FA              ;
 914+ A1FA              ;
 915+ A1FA              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 916+ A1FA
 917+ A1FA              Mueve_disparo_Amadeus
 918+ A1FA
 919+ A1FA CD C4 90         call Extrae_address
 920+ A1FD
 921+ A1FD CD EC 99         call PreviousScan
 922+ A200 CD EC 99         call PreviousScan
 923+ A203 CD EC 99         call PreviousScan
 924+ A206 CD EC 99         call PreviousScan
 925+ A209
 926+ A209              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 927+ A209
 928+ A209 7C               ld a,h
 929+ A20A D6 40            sub $40
 930+ A20C EB               ex de,hl
 931+ A20D 38 04            jr c,Elimina_disparo_Amadeus
 932+ A20F
 933+ A20F               ; Introduce nuevo puntero_de_impresión en la caja.
 934+ A20F
 935+ A20F 73               ld (hl),e
 936+ A210 23               inc hl
 937+ A211 72               ld (hl),d
 938+ A212
 939+ A212 C9               ret
 940+ A213
 941+ A213              ; ----------------------
 942+ A213              ;
 943+ A213              ;   29/9/24
 944+ A213
 945+ A213              Elimina_disparo_Amadeus
 946+ A213
 947+ A213              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 948+ A213              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 949+ A213
 950+ A213              ;   Disparo_1A defw 0									; Puntero objeto.
 951+ A213              ;   	defw 0											; Puntero de impresión.
 952+ A213
 953+ A213 2B               dec hl
 954+ A214 2B               dec hl
 955+ A215
 956+ A215 AF               xor a
 957+ A216 77               ld (hl),a
 958+ A217 23               inc hl
 959+ A218 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 960+ A219
 961+ A219 23               inc hl
 962+ A21A 77               ld (hl),a
 963+ A21B 23               inc hl
 964+ A21C 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 965+ A21D
 966+ A21D 3E 01            ld a,1
 967+ A21F 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a
 968+ A222
 969+ A222 CD A5 A1         call Limpia_album_de_pintado_disparos_Amadeus
 970+ A225
 971+ A225 AF               xor a
 972+ A226 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 973+ A227
 974+ A227 C9               ret
 975+ A228
 976+ A228              ; --------------------------------------------------------------------------------------
 977+ A228              ;
 978+ A228              ;   13/10/24
 979+ A228              ;
 980+ A228
 981+ A228              Pinta_disparos_Amadeus
 982+ A228
 983+ A228 06 02            ld b,2
 984+ A22A ED 73 05 8C      ld (Stack),sp
 985+ A22E ED 7B 13 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
 986+ A232 D1           3 pop de
 987+ A233 14               inc d
 988+ A234 15               dec d
 989+ A235 28 1C            jr z,1F
 990+ A237 E1               pop hl
 991+ A238
 992+ A238              Imprime_scanlines_en_pantalla
 993+ A238
 994+ A238              ; 1er scanline
 995+ A238
 996+ A238 1A               ld a,(de)
 997+ A239 AE               xor (hl)
 998+ A23A 77               ld (hl),a
 999+ A23B
1000+ A23B 1C               inc e
1001+ A23C 2C               inc l
1002+ A23D
1003+ A23D 1A               ld a,(de)
1004+ A23E AE               xor (hl)
1005+ A23F 77               ld (hl),a
1006+ A240
1007+ A240 1D               dec e
1008+ A241 E1               pop hl
1009+ A242
1010+ A242              ; 2º scanline
1011+ A242
1012+ A242 1A               ld a,(de)
1013+ A243 AE               xor (hl)
1014+ A244 77               ld (hl),a
1015+ A245
1016+ A245 1C               inc e
1017+ A246 2C               inc l
1018+ A247
1019+ A247 1A               ld a,(de)
1020+ A248 AE               xor (hl)
1021+ A249 77               ld (hl),a
1022+ A24A
1023+ A24A 1D               dec e
1024+ A24B
1025+ A24B 18 06            jr 1F
1026+ A24D
1027+ A24D ED 7B 11 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1028+ A251 18 DF            jr 3B
1029+ A253 10 F8        1 djnz 2B
1030+ A255 ED 7B 05 8C      ld sp,(Stack)
1031+ A259 C9               ret
1032+ A25A
1033+ A25A              ; --------------------------------------------------------------------------------------
1034+ A25A              ;
1035+ A25A              ;   13/10/24
1036+ A25A              ;
1037+ A25A              ;   Modifica: HL,BC y DE.
1038+ A25A
1039+ A25A
1040+ A25A              Genera_datos_de_impresion_disparos_Amadeus
1041+ A25A
1042+ A25A ED 73 05 8C      ld (Stack),sp
1043+ A25E 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1044+ A261 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1045+ A262
1046+ A262 14               inc d                                                     ;? Salimos si no hay disparo.
1047+ A263 15               dec d
1048+ A264
1049+ A264 28 0E            jr z,Salida
1050+ A266
1051+ A266              Genera_scanlines_de_disparo_Amadeus
1052+ A266
1053+ A266 E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1054+ A267              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1055+ A267 ED 7B 11 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1056+ A26B
1057+ A26B C1               pop bc
1058+ A26C C1               pop bc
1059+ A26D C1               pop bc
1060+ A26E
1061+ A26E E5               push hl                                                   ;? Sube 2º scanline al álbum.
1062+ A26F CD EC 99         call PreviousScan
1063+ A272 E5               push hl                                                   ;? Sube 1er scanline al álbum.
1064+ A273 D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1065+ A274
1066+ A274              Salida
1067+ A274
1068+ A274 ED 7B 05 8C      ld sp,(Stack)
1069+ A278
1070+ A278 C9               ret
1071+ A279
1072+ A279              ; --------------------------------------------------------------------------------------
1073+ A279              ;
1074+ A279              ;   12/09/24
1075+ A279              ;
1076+ A279
1077+ A279              Genera_disparo_Amadeus
1078+ A279
1079+ A279              ;*  Exclusiones.
1080+ A279
1081+ A279 3A 1E 8C         ld a,(Permiso_de_disparo_Amadeus)
1082+ A27C A7               and a
1083+ A27D C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1084+ A27E
1085+ A27E 3D               dec a
1086+ A27F 32 1E 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1087+ A282
1088+ A282              Define_puntero_objeto_disparo
1089+ A282
1090+ A282              ;   Inicializamos contador.
1091+ A282
1092+ A282 06 00            ld b,0
1093+ A284
1094+ A284 2A 72 89         ld hl,(p.imp.amadeus)
1095+ A287 2C               inc l
1096+ A288
1097+ A288 3E 80            ld a,$80
1098+ A28A BE               cp (hl)
1099+ A28B 28 0D            jr z,1F
1100+ A28D
1101+ A28D 04               inc b
1102+ A28E
1103+ A28E 3E 60            ld a,$60
1104+ A290 BE               cp (hl)
1105+ A291 28 07            jr z,1F
1106+ A293
1107+ A293
1108+ A293 04               inc b
1109+ A294
1110+ A294 3E 18            ld a,$18
1111+ A296 BE               cp (hl)
1112+ A297 28 01            jr z,1F
1113+ A299
1114+ A299 04               inc b
1115+ A29A
1116+ A29A              ;   Calcula el Puntero_de_impresión del disparo.
1117+ A29A
1118+ A29A              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1119+ A29A
1120+ A29A CD EC 99     1 call PreviousScan
1121+ A29D
1122+ A29D 78               ld a,b
1123+ A29E CB 3F            srl a
1124+ A2A0 28 03            jr z,4F
1125+ A2A2
1126+ A2A2              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1127+ A2A2 E5               push hl
1128+ A2A3 18 02            jr 5F
1129+ A2A5 2D           4 dec l
1130+ A2A6 E5               push hl
1131+ A2A7              ; ---
1132+ A2A7
1133+ A2A7              ;   Calcula el Puntero_objeto del disparo.
1134+ A2A7
1135+ A2A7 21 76 83     5 ld hl,Indice_disparo_Amadeus
1136+ A2AA 04               inc b
1137+ A2AB 05               dec b
1138+ A2AC 28 04            jr z,2F
1139+ A2AE
1140+ A2AE              ;   Nos desplazamos por el índice de disparos.
1141+ A2AE
1142+ A2AE 2C           3 inc l
1143+ A2AF 2C               inc l
1144+ A2B0 10 FC            djnz 3B
1145+ A2B2
1146+ A2B2              ; --- Guarda el Puntero_objeto del disparo en la pila.
1147+ A2B2 CD C4 90     2 call Extrae_address
1148+ A2B5 E5               push hl
1149+ A2B6              ; ---
1150+ A2B6
1151+ A2B6              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1152+ A2B6              ; HL en el 1er .db de la caja.
1153+ A2B6
1154+ A2B6 21 1F 89         ld hl,Disparo_Amad
1155+ A2B9
1156+ A2B9 06 02            ld b,2
1157+ A2BB
1158+ A2BB D1           6 pop de
1159+ A2BC 73               ld (hl),e
1160+ A2BD 23               inc hl
1161+ A2BE 72               ld (hl),d
1162+ A2BF 23               inc hl
1163+ A2C0
1164+ A2C0 10 F9            djnz 6B
1165+ A2C2
1166+ A2C2 C9               ret
1167+ A2C3
1168+ A2C3              Genera_coordenadas_de_disparo_Amadeus
1169+ A2C3
1170+ A2C3              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1171+ A2C3              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1172+ A2C3              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1173+ A2C3
1174+ A2C3 CD C4 90         call Extrae_address
1175+ A2C6 CD E3 94         call Genera_coordenadas
1176+ A2C9
1177+ A2C9 3D               dec a
1178+ A2CA
1179+ A2CA 21 37 8C         ld hl,Coordenadas_disparo_certero
1180+ A2CD 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1181+ A2CE 23               inc hl
1182+ A2CF 3A B9 8B         ld a,(Coordenada_X)
1183+ A2D2 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1184+ A2D3
1185+ A2D3 AF               xor a
1186+ A2D4 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1187+ A2D5
1188+ A2D5 C9               ret
1189+ A2D6
1190+ A2D6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1191+ A2D6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1192+ A2D6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1193+ A2D6
1194+ A2D6              ; ----------------------------------------------
1195+ A2D6              ;
1196+ A2D6              ;   27/08/24
1197+ A2D6              ;
1198+ A2D6              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1199+ A2D6              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1200+ A2D6
1201+ A2D6              Detecta_impacto_en_disparo_de_Amadeus
1202+ A2D6
1203+ A2D6              Extraccion_de_datos
1204+ A2D6
1205+ A2D6 13               inc de
1206+ A2D7 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1207+ A2D8
1208+ A2D8 5E               ld e,(hl)
1209+ A2D9 23               inc hl
1210+ A2DA 56               ld d,(hl)
1211+ A2DB
1212+ A2DB 23               inc hl
1213+ A2DC
1214+ A2DC 4E               ld c,(hl)
1215+ A2DD 23               inc hl
1216+ A2DE 46               ld b,(hl)
1217+ A2DF
1218+ A2DF C5               push bc
1219+ A2E0 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1220+ A2E1
1221+ A2E1              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1222+ A2E1
1223+ A2E1 CD EC 99         call PreviousScan
1224+ A2E4 CD EC 99         call PreviousScan
1225+ A2E7
1226+ A2E7              Detecta_impacto_
1227+ A2E7
1228+ A2E7 1A               ld a,(de)
1229+ A2E8 A6               and (hl)
1230+ A2E9 C0               ret nz
1231+ A2EA
1232+ A2EA 13               inc de
1233+ A2EB 23               inc hl
1234+ A2EC
1235+ A2EC 1A               ld a,(de)
1236+ A2ED A6               and (hl)
1237+ A2EE C9               ret
1238+ A2EF
1239+ A2EF              ; -------------------------------------------------------------------------------------------------------------
1240+ A2EF              ;
1241+ A2EF              ;   8/8/24
1242+ A2EF              ;
1243+ A2EF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1244+ A2EF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1245+ A2EF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1246+ A2EF              ;
1247+ A2EF              ;   MODIFICA: HL,DE,BC y A.
1248+ A2EF              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1249+ A2EF              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1250+ A2EF
1251+ A2EF              Colision_Entidad_Amadeus
1252+ A2EF
1253+ A2EF              ; Posible contacto de entidad con Amadeus. ?????
1254+ A2EF
1255+ A2EF              ; Exclusiones:
1256+ A2EF
1257+ A2EF 3A 57 8C         ld a,(Shield)
1258+ A2F2 A7               and a
1259+ A2F3 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1260+ A2F4
1261+ A2F4 21 2D 8C         ld hl,Ctrl_3
1262+ A2F7 CB 76            bit 6,(hl)
1263+ A2F9 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1264+ A2FA
1265+ A2FA 21 34 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1266+ A2FD CB 56            bit 2,(hl)
1267+ A2FF C0               ret nz
1268+ A300
1269+ A300 3A BA 8B     	ld a,(Coordenada_y)
1270+ A303 FE 14        	cp $14
1271+ A305 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1272+ A306
1273+ A306 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1274+ A309 A7               and a
1275+ A30A C0               ret nz
1276+ A30B
1277+ A30B              Genera_coordenadas_X
1278+ A30B
1279+ A30B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1280+ A30B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1281+ A30B
1282+ A30B              ;   Limpiamos almacenes.
1283+ A30B
1284+ A30B              ;    call Limpia_Coordenadas_X
1285+ A30B
1286+ A30B              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1287+ A30B
1288+ A30B 21 39 8C         ld hl,Coordenadas_X_Entidad
1289+ A30E 3A B9 8B         ld a,(Coordenada_X)
1290+ A311 CD 33 A3         call Guarda_coordenadas_X
1291+ A314
1292+ A314              ;   Almacenamos las coordenadas X de Amadeus.
1293+ A314
1294+ A314 3A 6E 89         ld a,(CX_Amadeus)
1295+ A317 CD 33 A3         call Guarda_coordenadas_X
1296+ A31A CD 47 A3         call Compara_coordenadas_X
1297+ A31D C0               ret nz
1298+ A31E
1299+ A31E 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1300+ A320 32 BC 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1301+ A323
1302+ A323 2A F8 8B         ld hl,(Puntero_store_caja)
1303+ A326 2C               inc l
1304+ A327 2C               inc l
1305+ A328 2C               inc l
1306+ A329 2C               inc l
1307+ A32A 22 35 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1308+ A32D
1309+ A32D 21 34 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1310+ A330 CB D6            set 2,(hl)
1311+ A332
1312+ A332 C9               ret
1313+ A333
1314+ A333               ; ----- ----- ----- ----- -----
1315+ A333
1316+ A333 77           Guarda_coordenadas_X ld (hl),a
1317+ A334 3C               inc a
1318+ A335 2C               inc l
1319+ A336 77               ld (hl),a
1320+ A337 3C               inc a
1321+ A338 2C               inc l
1322+ A339 77               ld (hl),a
1323+ A33A 2C               inc l
1324+ A33B C9               ret
1325+ A33C
1326+ A33C AF           Limpia_Coordenadas_X xor a
1327+ A33D 06 06            ld b,6
1328+ A33F 21 3C 8C         ld hl,Coordenadas_X_Amadeus
1329+ A342 77           1 ld (hl),a
1330+ A343 23               inc hl
1331+ A344 10 FC            djnz 1B
1332+ A346 C9               ret
1333+ A347
1334+ A347              ; ----- ----- ----- ----- -----
1335+ A347
1336+ A347              Compara_coordenadas_X
1337+ A347
1338+ A347 DD 21 39 8C      ld ix,Coordenadas_X_Entidad
1339+ A34B DD 7E 00         ld a,(ix+0)
1340+ A34E CD 5C A3         call Comparando
1341+ A351 C8               ret z
1342+ A352
1343+ A352 3C               inc a
1344+ A353 CD 6B A3         call Comparando_1
1345+ A356 C8               ret z
1346+ A357
1347+ A357 3C               inc a
1348+ A358 CD 6B A3         call Comparando_1
1349+ A35B C9               ret
1350+ A35C
1351+ A35C              ; ----- ----- ----- ----- -----
1352+ A35C              ;
1353+ A35C              ;   4/12/23
1354+ A35C              ;
1355+ A35C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1356+ A35C
1357+ A35C              Comparando
1358+ A35C
1359+ A35C DD 2C            inc ixl
1360+ A35E DD 2C            inc ixl
1361+ A360 DD 2C            inc ixl
1362+ A362
1363+ A362 DD 46 00         ld b,(ix+0)
1364+ A365 DD 4E 01         ld c,(ix+1)
1365+ A368 DD 56 02         ld d,(ix+2)
1366+ A36B
1367+ A36B B8           Comparando_1 cp b
1368+ A36C C8               ret z
1369+ A36D B9               cp c
1370+ A36E C8               ret z
1371+ A36F BA               cp d
1372+ A370 C9               ret
1373+ A371
1374+ A371              ; -----------------------------------------------------------------------
1375+ A371              ;
1376+ A371              ;   04/7/24
1377+ A371              ;
1378+ A371
1379+ A371              Detecta_colision_nave_entidad
1380+ A371
1381+ A371              ; Exclusiones:
1382+ A371
1383+ A371              ; Salimos de la rutina si no hay advertencia de posible colisión.
1384+ A371
1385+ A371 21 34 8C     	ld hl,Impacto2
1386+ A374 CB 56        	bit 2,(hl)
1387+ A376 C8           	ret z
1388+ A377
1389+ A377              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1390+ A377
1391+ A377 2A 74 89         ld hl,(Pamm_Amadeus)
1392+ A37A CD C4 90         call Extrae_address
1393+ A37D 54               ld d,h
1394+ A37E 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1395+ A37F
1396+ A37F 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1397+ A382 06 10            ld b,16                                        ; Contador de scanlines en B.
1398+ A384 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1399+ A387
1400+ A387 C5           1 push bc
1401+ A388 06 03            ld b,3
1402+ A38A E5               push hl
1403+ A38B
1404+ A38B              ; .db
1405+ A38B
1406+ A38B 1A           3 ld a,(de)
1407+ A38C A7               and a
1408+ A38D 20 03            jr nz,4F
1409+ A38F
1410+ A38F 2C               inc l
1411+ A390 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1412+ A392
1413+ A392 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1414+ A394 28 04            jr z,2F
1415+ A396
1416+ A396              ; Impacto.
1417+ A396 FD 2D            dec iyl
1418+ A398 28 22            jr z,5F
1419+ A39A
1420+ A39A 1C           2 inc e
1421+ A39B 10 EE            djnz 3B
1422+ A39D
1423+ A39D E1               pop hl
1424+ A39E
1425+ A39E              ; Hay salto de línea en el puntero de impresión ???
1426+ A39E
1427+ A39E 7C               ld a,h
1428+ A39F D6 57            sub $57
1429+ A3A1 20 0A            jr nz,6F
1430+ A3A3
1431+ A3A3              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1432+ A3A3
1433+ A3A3 2A 72 89         ld hl,(p.imp.amadeus)
1434+ A3A6 3E 20            ld a,$20
1435+ A3A8 A7               and a
1436+ A3A9 85               add l
1437+ A3AA 6F               ld l,a
1438+ A3AB 18 01            jr 7F
1439+ A3AD
1440+ A3AD 24           6 inc h
1441+ A3AE
1442+ A3AE C1           7 pop bc
1443+ A3AF 10 D6            djnz 1B
1444+ A3B1
1445+ A3B1              ;   Fin de la comparativa.
1446+ A3B1
1447+ A3B1              ;   NO HAY COLISIÓN !!!!!.
1448+ A3B1              ;
1449+ A3B1              ;   .db (Impacto) de Amadeus a "0".
1450+ A3B1              ;   RES el bit2 de (Impacto2).
1451+ A3B1              ;
1452+ A3B1              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1453+ A3B1              ;   Lo colocamos a "0".
1454+ A3B1
1455+ A3B1 21 34 8C         ld hl,Impacto2
1456+ A3B4 CB 96            res 2,(hl)
1457+ A3B6 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)
1458+ A3B9 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1459+ A3BB C9               ret
1460+ A3BC
1461+ A3BC              ;   COLISIÓN !!!!!.
1462+ A3BC              ;
1463+ A3BC              ;   .db (Impacto) de Amadeus a "1".
1464+ A3BC              ;   SET el bit3 de (Impacto2).
1465+ A3BC              ;
1466+ A3BC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1467+ A3BC
1468+ A3BC E1           5 pop hl
1469+ A3BD C1               pop bc
1470+ A3BE
1471+ A3BE 21 71 89         ld hl,Impacto_Amadeus
1472+ A3C1 36 01            ld (hl),1
1473+ A3C3 21 34 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1474+ A3C6 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1475+ A3C8
1476+ A3C8 11 C0 87         ld de,Indice_Explosion_entidades
1477+ A3CB 2A 35 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1478+ A3CE
1479+ A3CE 23               inc hl
1480+ A3CF 23               inc hl
1481+ A3D0 23               inc hl
1482+ A3D1
1483+ A3D1 73               ld (hl),e
1484+ A3D2 23               inc hl
1485+ A3D3 72               ld (hl),d
1486+ A3D4
1487+ A3D4              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1488+ A3D4
1489+ A3D4 11 60 88         ld de,Indice_Explosion_Amadeus
1490+ A3D7 21 74 89         ld hl,Pamm_Amadeus
1491+ A3DA
1492+ A3DA 73               ld (hl),e
1493+ A3DB 23               inc hl
1494+ A3DC 72               ld (hl),d
1495+ A3DD
1496+ A3DD C9               ret
1497+ A3DE
1498+ A3DE
1499+ A3DE
# file closed: Disparo.asm
2060  A3DE
2061  A3DE              	SAVESNA "Pruebas.sna", START
2062  A3DE
2063  A3DE
2064  A3DE
2065  A3DE
# file closed: Banco_de_pruebas.asm
