# file opened: Banco_de_pruebas.asm
   1  0000              ;	29/12/23
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 34 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ;! debuggg
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15
  36  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  37  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 02        	ld a,2
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD BB 8E     	call Pinta_entidades									; Borde rojo.
  44  AA1C
  45  AA1C              ;	ld a,6
  46  AA1C              ;	out ($fe),a
  47  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  48  AA1C
  49  AA1C 3E 07        	ld a,7
  50  AA1E D3 FE        	out ($fe),a												; Borde blanco.
  51  AA20              ;	call Guarda_parametros_DRAW
  52  AA20              ;	call Restore_Amadeus
  53  AA20
  54  AA20              ; Posible colisión Entidad-Amadeus ???
  55  AA20
  56  AA20              ;	ld a,(Impacto2)
  57  AA20              ;	bit 2,a
  58  AA20              ;	jr z,1F
  59  AA20
  60  AA20              ;	call Detecta_colision_nave_entidad
  61  AA20
  62  AA20              ;1 ld a,4
  63  AA20              ;	out ($fe),a
  64  AA20              ;	call Gestiona_Amadeus
  65  AA20
  66  AA20              ;	ld a,7
  67  AA20              ;	out ($fe),a											; Borde blanco.
  68  AA20              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  69  AA20              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  70  AA20
  71  AA20              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  72  AA20
  73  AA20              ;	call Recupera_parametros_DRAW
  74  AA20 CD CB 8E     	call Actualiza_relojes
  75  AA23
  76  AA23 21 3E 89     	ld hl,Ctrl_3
  77  AA26 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  78  AA28
  79  AA28 FD E1        	pop iy
  80  AA2A DD E1        	pop ix
  81  AA2C F1           	pop af
  82  AA2D C1           	pop bc
  83  AA2E D1           	pop de
  84  AA2F E1           	pop hl
  85  AA30 D9           	exx
  86  AA31 C1           	pop bc
  87  AA32 D1           	pop de
  88  AA33 E1           	pop hl
  89  AA34 08           	ex af,af'
  90  AA35 F1           	pop af
  91  AA36 08           	ex af,af'
  92  AA37 D9           	exx
  93  AA38
  94  AA38 ED 7B 34 89  	ld sp,(Stack_3)
  95  AA3C
  96  AA3C FB           	ei
  97  AA3D
  98  AA3D 3E 01        	ld a,1												; Borde azul.
  99  AA3F D3 FE        	out ($fe),a
 100  AA41
 101  AA41 C9           	ret
 102  AA42
 103  AA42              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 104  AA42
 105  AA42              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA42              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA42              ;
   3+ AA42              ;	17/02/23
   4+ AA42              ;
   5+ AA42              ;	Sprites e índices.
   6+ AA42
   7+ AA42              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 106  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	21/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C3 85        	defw Caja_1
 103+ 856E 08 86        	defw Caja_2
 104+ 8570 4D 86        	defw Caja_3
 105+ 8572 92 86        	defw Caja_4
 106+ 8574 D7 86        	defw Caja_5
 107+ 8576 1C 87        	defw Caja_6
 108+ 8578 61 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 											; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 148+ 85B0
 149+ 85B0 00           	db 0											; (Autoriza_movimiento).
 150+ 85B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 150+ 85B5 00 00
 151+ 85B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 152+ 85BA
 153+ 85BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 154+ 85BC 00           	db 0											; (Cola_de_desplazamiento).
 155+ 85BD
 156+ 85BD 00           	db 0 											; (Columnas).
 157+ 85BE 00 00        	defw 0											; (Limite_horizontal).
 158+ 85C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 159+ 85C3
 160+ 85C3              ; ---------- ---------- ---------- ---------- ----------
 161+ 85C3
 162+ 85C3 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 163+ 85C5 00 00        	defw 0											; (Posicion_actual).
 164+ 85C7 00 00        	defw 0 											; (Puntero_objeto).
 165+ 85C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 166+ 85CC
 167+ 85CC 00           	db %00000000 									; (Attr).
 168+ 85CD
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_der).
 170+ 85CF 00 00        	defw 0											; (Indice_Sprite_izq).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 172+ 85D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 173+ 85D5
 174+ 85D5 00 00        	defw 0											; (Posicion_inicio).
 175+ 85D7 00           	db 0											; (Cuad_objeto).
 176+ 85D8
 177+ 85D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 178+ 85DC
 179+ 85DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 180+ 85DD
 181+ 85DD 00 00 00...  	ds 6											; Variables_de_borrado
 182+ 85E3
 183+ 85E3 00 00        	db 0,0											; Variables_de_pintado
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00        	defw 0											;	" " " " " " "
 186+ 85E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 187+ 85ED
 188+ 85ED 00 00        	defw 0 											; Puntero_de_impresion.
 189+ 85EF
 190+ 85EF D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 191+ 85F1 00 00        	defw 0 											; Contador_de_mov_masticados
 192+ 85F3
 193+ 85F3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 194+ 85F5
 195+ 85F5 00           	db 0											; (Autoriza_movimiento).
 196+ 85F6 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 196+ 85FA 00 00
 197+ 85FC 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 198+ 85FF
 199+ 85FF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 200+ 8601 00           	db 0											; (Cola_de_desplazamiento).
 201+ 8602
 202+ 8602 00           	db 0 											; (Columnas).
 203+ 8603 00 00        	defw 0											; (Limite_horizontal).
 204+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 205+ 8608
 206+ 8608              ; ---------- ---------- ---------- ---------- ----------
 207+ 8608
 208+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 209+ 860A 00 00        	defw 0											; (Posicion_actual).
 210+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 211+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 212+ 8611
 213+ 8611 00           	db %00000000 									; (Attr).
 214+ 8612
 215+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 216+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 217+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 218+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 219+ 861A
 220+ 861A 00 00        	defw 0											; (Posicion_inicio).
 221+ 861C 00           	db 0											; (Cuad_objeto).
 222+ 861D
 223+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 224+ 8621
 225+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 226+ 8622
 227+ 8622 00 00 00...  	ds 6											; Variables_de_borrado
 228+ 8628
 229+ 8628 00 00        	db 0,0											; Variables_de_pintado
 230+ 862A 00 00        	defw 0											;	" " " " " " "
 231+ 862C 00 00        	defw 0											;	" " " " " " "
 232+ 862E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 233+ 8632
 234+ 8632 00 00        	defw 0 											; Puntero_de_impresion.
 235+ 8634
 236+ 8634 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 237+ 8636 00 00        	defw 0 											; Contador_de_mov_masticados
 238+ 8638
 239+ 8638 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 240+ 863A
 241+ 863A 00           	db 0											; (Autoriza_movimiento).
 242+ 863B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 242+ 863F 00 00
 243+ 8641 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 244+ 8644
 245+ 8644 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 246+ 8646 00           	db 0											; (Cola_de_desplazamiento).
 247+ 8647
 248+ 8647 00           	db 0 											; (Columnas).
 249+ 8648 00 00        	defw 0											; (Limite_horizontal).
 250+ 864A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 251+ 864D
 252+ 864D              ; ---------- ---------- ---------- ---------- ----------
 253+ 864D
 254+ 864D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 255+ 864F 00 00        	defw 0											; (Posicion_actual).
 256+ 8651 00 00        	defw 0 											; (Puntero_objeto).
 257+ 8653 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 258+ 8656
 259+ 8656 00           	db %00000000 									; (Attr).
 260+ 8657
 261+ 8657 00 00        	defw 0											; (Indice_Sprite_der).
 262+ 8659 00 00        	defw 0											; (Indice_Sprite_izq).
 263+ 865B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 264+ 865D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 265+ 865F
 266+ 865F 00 00        	defw 0											; (Posicion_inicio).
 267+ 8661 00           	db 0											; (Cuad_objeto).
 268+ 8662
 269+ 8662 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 270+ 8666
 271+ 8666 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 272+ 8667
 273+ 8667 00 00 00...  	ds 6											; Variables_de_borrado
 274+ 866D
 275+ 866D 00 00        	db 0,0											; Variables_de_pintado
 276+ 866F 00 00        	defw 0											;	" " " " " " "
 277+ 8671 00 00        	defw 0											;	" " " " " " "
 278+ 8673 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 279+ 8677
 280+ 8677 00 00        	defw 0 											; Puntero_de_impresion.
 281+ 8679
 282+ 8679 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 283+ 867B 00 00        	defw 0 											; Contador_de_mov_masticados
 284+ 867D
 285+ 867D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 286+ 867F
 287+ 867F 00           	db 0											; (Autoriza_movimiento).
 288+ 8680 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 288+ 8684 00 00
 289+ 8686 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 290+ 8689
 291+ 8689 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 292+ 868B 00           	db 0											; (Cola_de_desplazamiento).
 293+ 868C
 294+ 868C 00           	db 0 											; (Columnas).
 295+ 868D 00 00        	defw 0											; (Limite_horizontal).
 296+ 868F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 297+ 8692
 298+ 8692              ; ---------- ---------- ---------- ---------- ----------
 299+ 8692
 300+ 8692 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 301+ 8694 00 00        	defw 0											; (Posicion_actual).
 302+ 8696 00 00        	defw 0 											; (Puntero_objeto).
 303+ 8698 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 304+ 869B
 305+ 869B 00           	db %00000000 									; (Attr).
 306+ 869C
 307+ 869C 00 00        	defw 0											; (Indice_Sprite_der).
 308+ 869E 00 00        	defw 0											; (Indice_Sprite_izq).
 309+ 86A0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 310+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 311+ 86A4
 312+ 86A4 00 00        	defw 0											; (Posicion_inicio).
 313+ 86A6 00           	db 0											; (Cuad_objeto).
 314+ 86A7
 315+ 86A7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 316+ 86AB
 317+ 86AB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 318+ 86AC
 319+ 86AC 00 00 00...  	ds 6											; Variables_de_borrado
 320+ 86B2
 321+ 86B2 00 00        	db 0,0											; Variables_de_pintado
 322+ 86B4 00 00        	defw 0											;	" " " " " " "
 323+ 86B6 00 00        	defw 0											;	" " " " " " "
 324+ 86B8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 325+ 86BC
 326+ 86BC 00 00        	defw 0 											; Puntero_de_impresion.
 327+ 86BE
 328+ 86BE D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 329+ 86C0 00 00        	defw 0 											; Contador_de_mov_masticados
 330+ 86C2
 331+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 332+ 86C4
 333+ 86C4 00           	db 0											; (Autoriza_movimiento).
 334+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 334+ 86C9 00 00
 335+ 86CB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 336+ 86CE
 337+ 86CE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 338+ 86D0 00           	db 0											; (Cola_de_desplazamiento).
 339+ 86D1
 340+ 86D1 00           	db 0 											; (Columnas).
 341+ 86D2 00 00        	defw 0											; (Limite_horizontal).
 342+ 86D4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 343+ 86D7
 344+ 86D7              ; ---------- ---------- ---------- ---------- ----------
 345+ 86D7
 346+ 86D7 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 347+ 86D9 00 00        	defw 0											; (Posicion_actual).
 348+ 86DB 00 00        	defw 0 											; (Puntero_objeto).
 349+ 86DD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 350+ 86E0
 351+ 86E0 00           	db %00000000 									; (Attr).
 352+ 86E1
 353+ 86E1 00 00        	defw 0											; (Indice_Sprite_der).
 354+ 86E3 00 00        	defw 0											; (Indice_Sprite_izq).
 355+ 86E5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 356+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 357+ 86E9
 358+ 86E9 00 00        	defw 0											; (Posicion_inicio).
 359+ 86EB 00           	db 0											; (Cuad_objeto).
 360+ 86EC
 361+ 86EC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 362+ 86F0
 363+ 86F0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 364+ 86F1
 365+ 86F1 00 00 00...  	ds 6											; Variables_de_borrado
 366+ 86F7
 367+ 86F7 00 00        	db 0,0											; Variables_de_pintado
 368+ 86F9 00 00        	defw 0											;	" " " " " " "
 369+ 86FB 00 00        	defw 0											;	" " " " " " "
 370+ 86FD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 371+ 8701
 372+ 8701 00 00        	defw 0 											; Puntero_de_impresion.
 373+ 8703
 374+ 8703 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 375+ 8705 00 00        	defw 0 											; Contador_de_mov_masticados
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 378+ 8709
 379+ 8709 00           	db 0											; (Autoriza_movimiento).
 380+ 870A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 380+ 870E 00 00
 381+ 8710 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 382+ 8713
 383+ 8713 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 384+ 8715 00           	db 0											; (Cola_de_desplazamiento).
 385+ 8716
 386+ 8716 00           	db 0 											; (Columnas).
 387+ 8717 00 00        	defw 0											; (Limite_horizontal).
 388+ 8719 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 389+ 871C
 390+ 871C              ; ---------- ---------- ---------- ---------- ----------
 391+ 871C
 392+ 871C 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 393+ 871E 00 00        	defw 0											; (Posicion_actual).
 394+ 8720 00 00        	defw 0 											; (Puntero_objeto).
 395+ 8722 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 396+ 8725
 397+ 8725 00           	db %00000000 									; (Attr).
 398+ 8726
 399+ 8726 00 00        	defw 0											; (Indice_Sprite_der).
 400+ 8728 00 00        	defw 0											; (Indice_Sprite_izq).
 401+ 872A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 402+ 872C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 403+ 872E
 404+ 872E 00 00        	defw 0											; (Posicion_inicio).
 405+ 8730 00           	db 0											; (Cuad_objeto).
 406+ 8731
 407+ 8731 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 408+ 8735
 409+ 8735 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 410+ 8736
 411+ 8736 00 00 00...  	ds 6											; Variables_de_borrado
 412+ 873C
 413+ 873C 00 00        	db 0,0											; Variables_de_pintado
 414+ 873E 00 00        	defw 0											;	" " " " " " "
 415+ 8740 00 00        	defw 0											;	" " " " " " "
 416+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 417+ 8746
 418+ 8746 00 00        	defw 0 											; Puntero_de_impresion.
 419+ 8748
 420+ 8748 D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 421+ 874A 00 00        	defw 0 											; Contador_de_mov_masticados
 422+ 874C
 423+ 874C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 424+ 874E
 425+ 874E 00           	db 0											; (Autoriza_movimiento).
 426+ 874F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 426+ 8753 00 00
 427+ 8755 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 428+ 8758
 429+ 8758 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 430+ 875A 00           	db 0											; (Cola_de_desplazamiento).
 431+ 875B
 432+ 875B 00           	db 0 											; (Columnas).
 433+ 875C 00 00        	defw 0											; (Limite_horizontal).
 434+ 875E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 435+ 8761
 436+ 8761              ; ---------- ---------- ---------- ---------- ----------
 437+ 8761
 438+ 8761 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 439+ 8763 00 00        	defw 0											; (Posicion_actual).
 440+ 8765 00 00        	defw 0 											; (Puntero_objeto).
 441+ 8767 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 442+ 876A
 443+ 876A 00           	db %00000000 									; (Attr).
 444+ 876B
 445+ 876B 00 00        	defw 0											; (Indice_Sprite_der).
 446+ 876D 00 00        	defw 0											; (Indice_Sprite_izq).
 447+ 876F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 448+ 8771 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 449+ 8773
 450+ 8773 00 00        	defw 0											; (Posicion_inicio).
 451+ 8775 00           	db 0											; (Cuad_objeto).
 452+ 8776
 453+ 8776 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 454+ 877A
 455+ 877A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 456+ 877B
 457+ 877B 00 00 00...  	ds 6											; Variables_de_borrado
 458+ 8781
 459+ 8781 00 00        	db 0,0											; Variables_de_pintado
 460+ 8783 00 00        	defw 0											;	" " " " " " "
 461+ 8785 00 00        	defw 0											;	" " " " " " "
 462+ 8787 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 463+ 878B
 464+ 878B 00 00        	defw 0 											; Puntero_de_impresion.
 465+ 878D
 466+ 878D D0 5C        	defw Almacen_de_movimientos_masticados_Entidad_1; Puntero_de_almacen_de_mov_masticados
 467+ 878F 00 00        	defw 0 											; Contador_de_mov_masticados
 468+ 8791
 469+ 8791 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 470+ 8793
 471+ 8793 00           	db 0											; (Autoriza_movimiento).
 472+ 8794 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 472+ 8798 00 00
 473+ 879A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 474+ 879D
 475+ 879D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 476+ 879F 00           	db 0											; (Cola_de_desplazamiento).
 477+ 87A0
 478+ 87A0 00           	db 0 											; (Columnas).
 479+ 87A1 00 00        	defw 0											; (Limite_horizontal).
 480+ 87A3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 481+ 87A6
 482+ 87A6              ; -------------------------------------------------------------------------------------
 483+ 87A6              ;
 484+ 87A6              ;	20/05/23
 485+ 87A6              ;
 486+ 87A6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 487+ 87A6              ;
 488+ 87A6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 489+ 87A6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 490+ 87A6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 491+ 87A6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 492+ 87A6
 493+ 87A6              Indice_de_entidades
 494+ 87A6
 495+ 87A6 AA 87        	defw Entidad_1
 496+ 87A8 BA 87        	defw Entidad_2
 497+ 87AA
 498+ 87AA              ;	BADSAT, (Satélite malvado).
 499+ 87AA
 500+ 87AA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 501+ 87AC 04           	db %00000100									; (Attr).
 502+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 503+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 504+ 87B1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 505+ 87B3 01           	db 1											; (Cuad_objeto).
 506+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 507+ 87B8 B3 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 508+ 87BA
 509+ 87BA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 510+ 87BC 02           	db %00000010									; (Attr).
 511+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 512+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 513+ 87C1 40 50        	defw $5040                                      ; (Posicion_inicio).
 514+ 87C3 01           	db 1											; (Cuad_objeto).
 515+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 516+ 87C8 B3 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 517+ 87CA
# file closed: Cajas_y_disparos.asm
 107  87CA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87CA              ; 13/05/23
   2+ 87CA
   3+ 87CA              Indice_de_niveles
   4+ 87CA
   5+ 87CA D8 87        	defw Nivel_1
   6+ 87CC E0 87        	defw Nivel_2
   7+ 87CE ED 87        	defw Nivel_3
   8+ 87D0 FD 87        	defw Nivel_4
   9+ 87D2 0F 88        	defw Nivel_5
  10+ 87D4              ;	...
  11+ 87D4              ;	...
  12+ 87D4              ;	+ Niveles ...
  13+ 87D4
  14+ 87D4 00 00        	defw 0
  15+ 87D6 00 00        	defw 0
  16+ 87D8
  17+ 87D8 07           Nivel_1 db 7	                                ; Nº de entidades.
  18+ 87D9 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 87DD 01 01 01
  19+ 87E0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87E1 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87E5 01 02
  21+ 87E7 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87EB 01 02
  22+ 87ED 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87EE 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87F2 01
  24+ 87F3 03 01 01 01  	db 3,1,1,1,1
  24+ 87F7 01
  25+ 87F8 03 01 01 01  	db 3,1,1,1,1
  25+ 87FC 01
  26+ 87FD 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87FE 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 8802 01
  28+ 8803 04 01 01 01  	db 4,1,1,1,1
  28+ 8807 01
  29+ 8808 04 01 01 01  	db 4,1,1,1,1
  29+ 880C 01
  30+ 880D 02 03        	db 2,3
  31+ 880F 14           Nivel_5 db 20									; Nº de entidades.
  32+ 8810 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8814 01
  33+ 8815 05 01 01 01  	db 5,1,1,1,1
  33+ 8819 01
  34+ 881A 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 881E 01
  35+ 881F 05 01 01 01  	db 5,1,1,1,1
  35+ 8823 01
  36+ 8824
  37+ 8824              ;---------------------------------------------------------------------------------------------------------------
  38+ 8824              ;
  39+ 8824              ;   3/9/23
  40+ 8824              ;
  41+ 8824              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8824              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8824              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8824              ;	_en la caja DRAW correspondiente.
  45+ 8824              ;
  46+ 8824              ;	MODIFICA: HL,DE y A.
  47+ 8824              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8824
  49+ 8824              Inicializa_Punteros_de_nivel
  50+ 8824
  51+ 8824 21 CA 87     	ld hl,Indice_de_niveles
  52+ 8827 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 882A CD 4D 8D     	call Extrae_address
  54+ 882D 7E           	ld a,(hl)
  55+ 882E 32 28 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8831 23           	inc hl
  57+ 8832 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8835 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8836
  60+ 8836              ;---------------------------------------------------------------------------------------------------------------
  61+ 8836              ;
  62+ 8836              ;   13/5/23
  63+ 8836              ;
  64+ 8836              ;	Destruye A,BC,HL,DE
  65+ 8836
  66+ 8836              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8836              ;	_del juego.
  68+ 8836
  69+ 8836              Prepara_cajas
  70+ 8836
  71+ 8836              ; Preparamos los punteros de las cajas.
  72+ 8836
  73+ 8836 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8839 CD 4D 8D     	call Extrae_address
  75+ 883C CD 79 88     	call Avanza_caja
  76+ 883F
  77+ 883F CD BD 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8842
  79+ 8842 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8845
  81+ 8845              ; HL está en los datos del nivel correspondiente.
  82+ 8845              ; B actuará como contador de cajas.
  83+ 8845
  84+ 8845 C5           1 push bc
  85+ 8846
  86+ 8846 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8847 CD 6A 88     	call PreparaBC
  88+ 884A
  89+ 884A 21 A6 87     	ld hl,Indice_de_entidades
  90+ 884D CD 72 88     	call SBC_HL_con_BC_y_Extrae
  91+ 8850 22 2E 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8853
  93+ 8853 CD 83 88     	call Datos_de_entidad_a_caja
  94+ 8856
  95+ 8856 2A 26 89     	ld hl,(Indice_restore_caja)
  96+ 8859 CD 4D 8D     	call Extrae_address
  97+ 885C CD 79 88     	call Avanza_caja
  98+ 885F
  99+ 885F 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 8862 23           	inc hl
 101+ 8863 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8866
 103+ 8866 C1           	pop bc
 104+ 8867 10 DC        	djnz 1B
 105+ 8869 C9           	ret
 106+ 886A
 107+ 886A CB 27        PreparaBC sla a
 108+ 886C D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 886E 4F           	ld c,a
 110+ 886F 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 8871 C9           	ret
 112+ 8872
 113+ 8872 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8873 ED 4A        	adc hl,bc
 115+ 8875 CD 4D 8D     	call Extrae_address
 116+ 8878 C9           	ret
 117+ 8879
 118+ 8879 22 22 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 887C 13           	inc de
 120+ 887D 13           	inc de
 121+ 887E EB           	ex de,hl
 122+ 887F 22 26 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8882 C9           	ret
 124+ 8883
 125+ 8883              Datos_de_entidad_a_caja
 126+ 8883
 127+ 8883              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8883
 129+ 8883
 130+ 8883 ED 5B 22 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8887
 132+ 8887 01 02 00     	ld bc,2
 133+ 888A ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 888C
 135+ 888C 01 07 00     	ld bc,7
 136+ 888F CD B7 88     	call Situa_DE
 137+ 8892
 138+ 8892 01 05 00     	ld bc,5
 139+ 8895 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8897
 141+ 8897 01 04 00     	ld bc,4
 142+ 889A CD B7 88     	call Situa_DE
 143+ 889D
 144+ 889D 01 07 00     	ld bc,7
 145+ 88A0 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88A2
 147+ 88A2 01 18 00     	ld bc,24
 148+ 88A5 CD B7 88     	call Situa_DE
 149+ 88A8
 150+ 88A8 01 02 00     	ld bc,2
 151+ 88AB ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88AD
 153+ 88AD              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88AD              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88AD
 156+ 88AD 01 0F 00     	ld bc,15									; *****
 157+ 88B0 CD B7 88     	call Situa_DE
 158+ 88B3
 159+ 88B3 3E 03        	ld a,3
 160+ 88B5 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88B6
 162+ 88B6 C9           	ret
 163+ 88B7
 164+ 88B7 EB           Situa_DE ex de,hl
 165+ 88B8 A7           	and a
 166+ 88B9 ED 4A        	adc hl,bc
 167+ 88BB EB           	ex de,hl
 168+ 88BC C9           	ret
 169+ 88BD
 170+ 88BD              ;---------------------------------------------------------------------------------------------------------------
 171+ 88BD              ;
 172+ 88BD              ;	21/5/23
 173+ 88BD              ;
 174+ 88BD              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88BD              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88BD              ;
 177+ 88BD              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88BD              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88BD              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88BD              ;
 181+ 88BD              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88BD              ;	MODIFICA: A y B.
 183+ 88BD              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88BD
 185+ 88BD              Admin_num_entidades
 186+ 88BD
 187+ 88BD              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88BD
 189+ 88BD 3A 28 89     	ld a,(Numero_de_entidades)
 190+ 88C0 A7           	and a
 191+ 88C1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88C1              ;	jr z,$
 193+ 88C1              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88C1
 195+ 88C1 20 03        	jr nz,3F
 196+ 88C3
 197+ 88C3              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88C3
 199+ 88C3 CD 24 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88C6
 201+ 88C6 3A 28 89     3 ld a,(Numero_de_entidades)
 202+ 88C9 FE 07        	cp 7
 203+ 88CB 38 08        	jr c,1F
 204+ 88CD
 205+ 88CD              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88CD              ; Actualizamos variables.
 207+ 88CD
 208+ 88CD 3E 07        	ld a,7
 209+ 88CF 32 29 89     	ld (Numero_parcial_de_entidades),a
 210+ 88D2 47           	ld b,a
 211+ 88D3 18 04        	jr 2F
 212+ 88D5
 213+ 88D5              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88D5              ; (Numero_de_entidades)="0".
 215+ 88D5
 216+ 88D5 32 29 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88D8 47           	ld b,a
 218+ 88D9 C9           2 ret
# file closed: Niveles.asm
 108  88DA
 109  88DA              ; ******************************************************************************************************************************************************************************************
 110  88DA              ; Constantes.
 111  88DA              ; ******************************************************************************************************************************************************************************************
 112  88DA              ;
 113  88DA              ; 25/12/23
 114  88DA
 115  88DA              ;
 116  88DA              ; Constantes.
 117  88DA              ;
 118  88DA
 119  88DA              Sprite_vacio equ $f000
 120  88DA              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  88DA              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  88DA              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  88DA              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  88DA
 125  88DA              Almacen_de_movimientos_masticados_Entidad_1 equ $5cd0	; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 126  88DA              ;														;! $6f8f es donde se guarda el último movimiento masticado de BADSAT.
 127  88DA              ;														; 4799 bytes, 4,8Kb.
 128  88DA              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  88DA              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  88DA              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  88DA              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  88DA              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  88DA
 134  88DA              ;														; 55 Bytes.
 135  88DA              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 136  88DA              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 137  88DA
 138  88DA              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  88DA
 140  88DA              ; ******************************************************************************************************************************************************************************************
 141  88DA              ; Variables.
 142  88DA              ; ******************************************************************************************************************************************************************************************
 143  88DA              ;
 144  88DA              ; 25/12//23
 145  88DA              ;
 146  88DA              ; Variables de DRAW. (Motor principal).
 147  88DA              ;
 148  88DA              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 149  88DA
 150  88DA 00           Filas db 0												; Filas. [DRAW]
 151  88DB 00           Columns db 0  											; Nº de columnas. [DRAW]
 152  88DC 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 153  88DE 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 154  88E0 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 155  88E1 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 156  88E2
 157  88E2              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 158  88E2
 159  88E2 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 160  88E3              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 161  88E3              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 162  88E3 00           Attr db 0												; Atributos de la entidad:
 163  88E4
 164  88E4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 165  88E4              ;
 166  88E4              ;	COLORES: 0 ..... NEGRO
 167  88E4              ;    		 1 ..... AZUL
 168  88E4              ; 			 2 ..... ROJO
 169  88E4              ;			 3 ..... MAGENTA
 170  88E4              ; 			 4 ..... VERDE
 171  88E4              ; 			 5 ..... CIAN
 172  88E4              ;			 6 ..... AMARILLO
 173  88E4              ; 			 7 ..... BLANCO
 174  88E4
 175  88E4 00 00        Indice_Sprite_der defw 0
 176  88E6 00 00        Indice_Sprite_izq defw 0
 177  88E8 00 00        Puntero_DESPLZ_der defw 0
 178  88EA 00 00        Puntero_DESPLZ_izq defw 0
 179  88EC
 180  88EC 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 181  88EE 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 182  88EF
 183  88EF              ; Variables de objeto. (Características).
 184  88EF
 185  88EF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 186  88F0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 187  88F1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 188  88F2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 189  88F3
 190  88F3 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 191  88F4              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 192  88F4              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 193  88F4 00 00 00...  Variables_de_borrado ds 6
 194  88FA
 195  88FA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 196  88FC 00 00        	defw 0
 197  88FE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 198  8900 00 00 00 00  	db 0,0,0,0
 199  8904
 200  8904 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 201  8906              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 202  8906
 203  8906 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
 204  8908
 205  8908              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 206  8908              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 207  8908
 208  8908 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 209  890A              ;														; _palabras que componen el "movimiento_masticado".
 210  890A
 211  890A              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 212  890A
 213  890A 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 214  890B              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 215  890B              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 216  890B              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 217  890B              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 218  890B              ;
 219  890B              ; 														DESCRIPCIÖN:
 220  890B              ;
 221  890B              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 222  890B              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 223  890B              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 224  890B              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 225  890B              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 226  890B              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 227  890B              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 228  890B              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 229  890B              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 230  890B              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 231  890B              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 232  890B              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 233  890B              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 234  890B              ;
 235  890B              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 236  890B              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 237  890B              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 238  890B
 239  890B              ; Movimiento. ------------------------------------------------------------------------------------------------------
 240  890B
 241  890B 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 242  890D 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 243  890F 00 00        Puntero_indice_mov_bucle defw 0							;
 244  8911              ;
 245  8911              ;
 246  8911 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 247  8912              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 248  8912              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 249  8912 00           Incrementa_puntero_backup db 0
 250  8913 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 251  8914              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 252  8914 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 253  8915 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 254  8916 00           Cola_de_desplazamiento db 0								; Este byte indica:
 255  8917              ;
 256  8917              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 257  8917              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 258  8917              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 259  8917              ;
 260  8917              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 261  8917              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 262  8917              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 263  8917              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 264  8917              ;
 265  8917              ;														;	"$ff" ..... Bucle infinito de repetición.
 266  8917              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 267  8917              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 268  8917
 269  8917
 270  8917              ; Variables de funcionamiento. [DRAW].
 271  8917
 272  8917 00           Columnas db 0
 273  8918 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 274  891A              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  891A 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 276  891B
 277  891B              ; variables de control general.
 278  891B
 279  891B 00           Ctrl_2 db 0
 280  891C              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 281  891C              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 282  891C              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 283  891C              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 284  891C              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 285  891C              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 286  891C              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 287  891C              ;
 288  891C              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 289  891C              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 290  891C              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 291  891C              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 292  891C              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 293  891C              ;														BIT 4, ???
 294  891C              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 295  891C
 296  891C 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 297  891D
 298  891D              ;! 67 Bytes por entidad.
 299  891D
 300  891D              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 301  891D              ;					         		---------;      ;---------
 302  891D
 303  891D
 304  891D              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 305  891D
 306  891D 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 307  891F
 308  891F 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 309  8920
 310  8920              ;														DESCRIPCIÓN:
 311  8920              ;
 312  8920              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 313  8920              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 314  8920              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 315  8920              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 316  8920              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 317  8920              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 318  8920
 319  8920              ;														BIT 3, Recarga de nueva oleada.
 320  8920              ;														BIT 4, Recarga de nueva oleada.
 321  8920              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 322  8920              ;														BIT 6, **** Frame completo.
 323  8920              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 324  8920
 325  8920 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 326  8922              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 327  8922              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 328  8922              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 329  8922
 330  8922              ; Gestión de ENTIDADES y CAJAS.
 331  8922
 332  8922 00 00        Puntero_store_caja defw 0
 333  8924 00 00        Puntero_restore_caja defw 0
 334  8926 00 00        Indice_restore_caja defw 0
 335  8928 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 336  8929 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 337  892A 00           Entidades_en_curso db 0									; ..... ..... .....
 338  892B 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 339  892C              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 340  892C              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 341  892C              ;														; _ (Numero_de_malotes)="0".
 342  892C 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 343  892E 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 344  8930              ;														; _ puntero (Indice_entidades).
 345  8930
 346  8930              ;---------------------------------------------------------------------------------------------------------------
 347  8930              ;
 348  8930              ;	18/11/23
 349  8930              ;
 350  8930              ;	Álbumes.
 351  8930
 352  8930 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 353  8932              ;														; _variable para almacenar lo posición del puntero_
 354  8932              ; 														; _de pila, SP.
 355  8932 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 356  8934              ;														; La utiliza la rutina [Extrae_foto_registros].
 357  8934 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 358  8936 00 70        Stack_snapshot defw Album_de_fotos
 359  8938 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 360  893A
 361  893A              ;End_Snapshot defw Album_de_fotos
 362  893A              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 363  893A 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 364  893C              ;														; _el snapshot de los registros del siguiente disparo.
 365  893C              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 366  893C AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 367  893E
 368  893E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 369  893F              ;
 370  893F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 371  893F              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 372  893F              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo. Cuando esto ocurre_
 373  893F              ;																_ no se inicia una nueva "Entidad_guía".
 374  893F              ; Gestión de Disparos.
 375  893F
 376  893F 00           Numero_de_disparotes db 0
 377  8940 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 378  8942 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 379  8944 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 380  8945              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 381  8945              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 382  8945 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 383  8947              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 384  8947              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 385  8947              ;														; _produzca colisión.
 386  8947 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 387  8949              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 388  8949 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 389  894C              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 390  894C 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 391  894F              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 392  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 393  8950
 394  8950              ;---------------------------------------------------------------------------------------------------------------
 395  8950
 396  8950              ; Relojes y temporizaciones.
 397  8950
 398  8950 00           Contador_de_frames db 0
 399  8951 00           Contador_de_frames_2 db 0
 400  8952
 401  8952 04           Clock_explosion db 4
 402  8953 14           Clock_Entidades_en_curso db 20
 403  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 404  8955              ;														; Repite la oleada de entidades.
 405  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 406  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 407  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 408  8958
 409  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 410  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 411  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 412  895B
 413  895B              ;---------------------------------------------------------------------------------------------------------------
 414  895B
 415  895B              ; Gestión de NIVELES.
 416  895B
 417  895B 00           Nivel db 0												; Nivel actual del juego.
 418  895C 00 00        Puntero_indice_NIVELES defw 0
 419  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 420  8960              ; 														; _ que definen el NIVEL.
 421  8960              ; Y todo comienza aquí .....
 422  8960              ;
 423  8960              ; Rutina principal *************************************************************************************************************************************************************************
 424  8960              ;
 425  8960              ;	16/11/22
 426  8960
 427  8960              START
 428  8960
 429  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 430  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 431  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 432  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 433  8969 F3           	DI
 434  896A
 435  896A 3E 07        	ld a,%00000111
 436  896C CD D6 99     	call Cls
 437  896F
 438  896F CD 2A 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 439  8972
 440  8972              ; INICIALIZACIÓN.
 441  8972
 442  8972 CD 24 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 443  8975 CD 36 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 444  8978 CD B5 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 445  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 446  897B
 447  897B CD DA 8D     	call Restore_entidad								 ; Vuelca en DRAW los parámetros de la 1º entidad, (Caja_1).
 448  897E
 449  897E 21 29 89     	ld hl,Numero_parcial_de_entidades
 450  8981 46           	ld b,(hl)
 451  8982 04           	inc b
 452  8983 05           	dec b
 453  8984 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 454  8986
 455  8986              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 456  8986              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 457  8986              ;	Pintamos el resto de entidades:
 458  8986
 459  8986              ;	INICIA ENTIDADES !!!!!
 460  8986
 461  8986 C5           1 push bc  												; Guardo el contador de entidades.
 462  8987 CD A9 8B     	call Inicia_entidad
 463  898A C1           	pop bc
 464  898B 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 465  898D
 466  898D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 467  898D              ; (Esto se dá cuando se inicia una nueva oleada).
 468  898D
 469  898D 3A 1F 89     	ld a,(Ctrl_1)
 470  8990 CB 5F        	bit 3,a
 471  8992 20 1B        	jr nz,5F											; Loop
 472  8994
 473  8994              ; 	INICIA AMADEUS !!!!!
 474  8994
 475  8994 CD 01 8E     3 call Restore_Amadeus
 476  8997 CD 53 8D     	call Inicia_Puntero_objeto
 477  899A CD C9 93     	call Draw
 478  899D CD 16 71     	call Guarda_foto_registros
 479  89A0 CD 7E 8E     	call Guarda_datos_de_borrado_Amadeus
 480  89A3
 481  89A3 11 7E 85     	ld de,Amadeus_db
 482  89A6 CD 13 8E     	call Store_Amadeus
 483  89A9
 484  89A9              ; 	INICIA DISPAROS !!!!!
 485  89A9
 486  89A9 CD CB 8C     	call Inicia_Puntero_Disparo_Entidades
 487  89AC CD D2 8C     	call Inicia_Puntero_Disparo_Amadeus
 488  89AF
 489  89AF              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 490  89AF
 491  89AF CD B5 8C     5 call Inicia_punteros_de_cajas
 492  89B2 CD DA 8D     	call Restore_entidad
 493  89B5
 494  89B5 3A 1F 89     	ld a,(Ctrl_1)
 495  89B8 CB 5F        	bit 3,a
 496  89BA 28 07        	jr z,6F
 497  89BC
 498  89BC              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 499  89BC
 500  89BC 21 1F 89     	ld hl,Ctrl_1
 501  89BF CB 9E        	res 3,(hl)
 502  89C1 18 07        	jr Main
 503  89C3
 504  89C3              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 505  89C3
 506  89C3 21 3E 89     6 ld hl,Ctrl_3
 507  89C6 CB C6        	set 0,(hl)											; Frame completo.
 508  89C8 FB           	ei
 509  89C9 76           	halt
 510  89CA
 511  89CA              ; ------------------------------------
 512  89CA
 513  89CA              Main
 514  89CA              ;
 515  89CA              ;	11/12/23
 516  89CA
 517  89CA              ; Aparece nueva entidad ???
 518  89CA
 519  89CA              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 520  89CA              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 521  89CA              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 522  89CA              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 523  89CA              ;														; _un 2º bloque.
 524  89CA
 525  89CA 3E 01        	ld a,1
 526  89CC D3 FE        	out ($fe),a
 527  89CE
 528  89CE 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 529  89D1 47           	ld b,a
 530  89D2 3A 50 89     	ld a,(Contador_de_frames)
 531  89D5 B8           	cp b
 532  89D6 20 18        	jr nz,13F
 533  89D8
 534  89D8              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 535  89D8              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 536  89D8
 537  89D8 3A 29 89     21 ld a,(Numero_parcial_de_entidades)
 538  89DB 47           	ld b,a
 539  89DC 3A 2A 89     	ld a,(Entidades_en_curso)
 540  89DF B8           	cp b
 541  89E0 28 0E        	jr z,13F
 542  89E2 30 0C        	jr nc,13F
 543  89E4
 544  89E4 3C           	inc a
 545  89E5 32 2A 89     	ld (Entidades_en_curso),a
 546  89E8
 547  89E8              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 548  89E8
 549  89E8 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 550  89EB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 551  89EB              ;! _ IMPREDECIBLE !!!!
 552  89EB C6 64        	add 100
 553  89ED 32 53 89     	ld (Clock_Entidades_en_curso),a
 554  89F0
 555  89F0              ; -------------------------------------------------------------------------------------------------------------
 556  89F0
 557  89F0              ; Habilita disparos.
 558  89F0
 559  89F0 21 55 89     13 ld hl,Disparo_Amadeus
 560  89F3 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 561  89F6 CD A4 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 562  89F9
 563  89F9 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 564  89FC 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 565  89FF CD A4 9D     	call Habilita_disparos
 566  8A02
 567  8A02              ; COLISIONES.
 568  8A02
 569  8A02 CD C9 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 570  8A05
 571  8A05              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 572  8A05              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 573  8A05              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 574  8A05
 575  8A05 AF           	xor a
 576  8A06 32 44 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 577  8A09
 578  8A09 CD B5 8C     	call Inicia_punteros_de_cajas
 579  8A0C CD DA 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 580  8A0F              ; 														; _ en DRAW.
 581  8A0F 3A DA 88     	ld a,(Filas)
 582  8A12 A7           	and a
 583  8A13 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 584  8A15 CD EC 8D     	call Incrementa_punteros_de_cajas
 585  8A18 18 F2        	jr 12B
 586  8A1A
 587  8A1A              ; ---------------------------------------------------------------------------------------
 588  8A1A
 589  8A1A 3A 29 89     10 ld a,(Numero_parcial_de_entidades)
 590  8A1D 47               ld b,a
 591  8A1E A7           	and a
 592  8A1F 20 14        	jr nz,11F
 593  8A21
 594  8A21 21 1F 89     	ld hl,Ctrl_1
 595  8A24 CB 66        	bit 4,(hl)
 596  8A26 C2 CE 8A     	jp nz,16F
 597  8A29
 598  8A29              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 599  8A29
 600  8A29 21 1F 89     	ld hl,Ctrl_1
 601  8A2C CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 602  8A2E
 603  8A2E 3A 50 89     	ld a,(Contador_de_frames)
 604  8A31 3C           	inc a
 605  8A32 32 54 89     	ld (Activa_recarga_cajas),a
 606  8A35
 607  8A35              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 608  8A35
 609  8A35 3A 2A 89     11 ld a,(Entidades_en_curso)
 610  8A38 A7           	and a
 611  8A39 CA CE 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 612  8A3C 47           	ld b,a												; No hay entidades que gestionar.
 613  8A3D
 614  8A3D              ; ( Código que ejecutamos con cada entidad: ).
 615  8A3D
 616  8A3D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 617  8A3D
 618  8A3D C5           15 push bc 												; Nº de entidades en curso.
 619  8A3E
 620  8A3E              ; Existe "Entidad_guía" ???.
 621  8A3E              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 622  8A3E
 623  8A3E 3A 3E 89     	ld a,(Ctrl_3)
 624  8A41 CB 4F        	bit 1,a
 625  8A43 20 11        	jr nz,22F
 626  8A45
 627  8A45              ; Almacén de "Movimientos_masticados" lleno ???
 628  8A45              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 629  8A45              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 630  8A45
 631  8A45 3A 3E 89     	ld a,(Ctrl_3)
 632  8A48 CB 5F        	bit 3,a
 633  8A4A 20 0A        	jr nz,22F
 634  8A4C
 635  8A4C              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 636  8A4C
 637  8A4C 21 1B 89     	ld hl,Ctrl_2
 638  8A4F CB EE        	set 5,(hl)
 639  8A51 21 3E 89     	ld hl,Ctrl_3
 640  8A54 CB CE        	set 1,(hl)
 641  8A56
 642  8A56              ; Impacto ???
 643  8A56
 644  8A56 3A F3 88     22 ld a,(Impacto)
 645  8A59 A7           	and a
 646  8A5A 28 31        	jr z,8F
 647  8A5C
 648  8A5C              ; Hay Impacto en esta entidad.
 649  8A5C
 650  8A5C 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 651  8A5F 35           	dec (hl)
 652  8A60 C2 C1 8A     	jp nz,17F
 653  8A63
 654  8A63              ;! Velocidad de la animación de la explosión.
 655  8A63
 656  8A63 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 657  8A65              ;														; _,(velocidad de la explosión).
 658  8A65              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 659  8A65
 660  8A65 CD 9E 8E     	call Repone_datos_de_borrado
 661  8A68 CD F3 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 662  8A6B
 663  8A6B              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 664  8A6B
 665  8A6B 3A 1B 89     	ld a,(Ctrl_2)
 666  8A6E CB 4F        	bit 1,a
 667  8A70 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 668  8A72
 669  8A72              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 670  8A72
 671  8A72 3A E2 88     	ld a,(CTRL_DESPLZ)
 672  8A75 A7           	and a
 673  8A76 20 08        	jr nz,18F
 674  8A78
 675  8A78 21 84 84     	ld hl,Indice_Explosion_2x2-2
 676  8A7B 22 E8 88     	ld (Puntero_DESPLZ_der),hl
 677  8A7E 18 06        	jr 19F
 678  8A80
 679  8A80 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 680  8A83 22 E8 88     	ld (Puntero_DESPLZ_der),hl
 681  8A86
 682  8A86 21 1B 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 683  8A89 CB CE        	set 1,(hl)
 684  8A8B 18 22        	jr 7F
 685  8A8D
 686  8A8D              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 687  8A8D              ; _con las coordenadas de la entidad almacenada en DRAW.
 688  8A8D
 689  8A8D 3A 1F 89     8 ld a,(Ctrl_1)
 690  8A90 CB 57        	bit 2,a
 691  8A92 28 1B        	jr z,7F
 692  8A94
 693  8A94 2A 47 89     	ld hl,(Coordenadas_disparo_certero)
 694  8A97 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 695  8A98              ;														; E contiene la coordenada_X del disparo.
 696  8A98 2A E0 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 697  8A9B              ;														; H FILA, (Coordenada_y de la entidad).
 698  8A9B A7           	and a
 699  8A9C ED 52        	sbc hl,de
 700  8A9E
 701  8A9E CD E2 92     	call Determina_resultado_comparativa
 702  8AA1
 703  8AA1 78           	ld a,b
 704  8AA2 A7           	and a
 705  8AA3 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 706  8AA5
 707  8AA5              ; ----- ----- -----
 708  8AA5
 709  8AA5 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 710  8AA7 32 F3 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 711  8AAA
 712  8AAA 21 1F 89     	ld hl,Ctrl_1
 713  8AAD CB 96        	res 2,(hl)
 714  8AAF
 715  8AAF CD 1F 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 716  8AB2
 717  8AB2 3A 0A 89     	ld a,(Ctrl_0)
 718  8AB5 CB 67        	bit 4,a
 719  8AB7 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 720  8AB9
 721  8AB9              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 722  8AB9              ; [[[
 723  8AB9              ;	call Detecta_disparo_entidad
 724  8AB9              ; ]]]
 725  8AB9
 726  8AB9 CD 15 8C     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 727  8ABC
 728  8ABC 21 0A 89     	ld hl,Ctrl_0
 729  8ABF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 730  8AC1
 731  8AC1 CD 9B 8D     17 call Store_Restore_cajas
 732  8AC4
 733  8AC4 C1           	pop bc
 734  8AC5
 735  8AC5 05           	dec b
 736  8AC6 C2 3D 8A     	jp nz,15B
 737  8AC9
 738  8AC9              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 739  8AC9              ; Hemos gestionado todas las unidades.
 740  8AC9              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 741  8AC9
 742  8AC9 21 1F 89     	ld hl,Ctrl_1
 743  8ACC CB 96        	res 2,(hl)
 744  8ACE
 745  8ACE 21 3E 89     16 ld hl,Ctrl_3
 746  8AD1 CB C6        	set 0,(hl)											; Frame completo.
 747  8AD3
 748  8AD3 AF           	xor a
 749  8AD4 D3 FE        	out ($fe),a
 750  8AD6
 751  8AD6 FB           	ei
 752  8AD7 76           	halt
 753  8AD8
 754  8AD8              ; ----------------------------------------
 755  8AD8
 756  8AD8 3A 1F 89     	ld a,(Ctrl_1) 										; Existe Loop?
 757  8ADB CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 758  8ADD CA CA 89     	jp z,Main
 759  8AE0
 760  8AE0              ; RECARGA DE NUEVA OLEADA.
 761  8AE0
 762  8AE0 3A 50 89     	ld a,(Contador_de_frames)
 763  8AE3 47           	ld b,a
 764  8AE4 3A 54 89     	ld a,(Activa_recarga_cajas)
 765  8AE7 B8           	cp b
 766  8AE8 28 08        	jr z,20F
 767  8AEA
 768  8AEA 21 1F 89     	ld hl,Ctrl_1
 769  8AED CB E6        	set 4,(hl)
 770  8AEF C3 CA 89     	jp Main
 771  8AF2
 772  8AF2 21 1F 89     20 ld hl,Ctrl_1
 773  8AF5 CB A6        	res 4,(hl)
 774  8AF7
 775  8AF7 3A 50 89     	ld a,(Contador_de_frames)
 776  8AFA
 777  8AFA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 778  8AFA              ;! _ IMPREDECIBLE !!!!
 779  8AFA
 780  8AFA C6 0A        	add 10
 781  8AFC 32 53 89     	ld (Clock_Entidades_en_curso),a
 782  8AFF
 783  8AFF C3 75 89     	jp 4B
 784  8B02
 785  8B02 C9           	ret
 786  8B03
 787  8B03              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 788  8B03              ;
 789  8B03              ;	16/11/23
 790  8B03
 791  8B03              Gestiona_Amadeus
 792  8B03
 793  8B03              ;! Activa/desactiva impacto con Amadeus.
 794  8B03
 795  8B03              ;	ld a,(Impacto)
 796  8B03              ;	and a
 797  8B03              ;	jr nz,2F
 798  8B03
 799  8B03 CD 96 8B     	call Mov_Amadeus
 800  8B06
 801  8B06 3A 0A 89     2 ld a,(Ctrl_0)
 802  8B09 CB 67        	bit 4,a
 803  8B0B 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 804  8B0D
 805  8B0D CD 15 8C     	call Guarda_foto_entidad_a_pintar
 806  8B10 CD 7E 8E     	call Guarda_datos_de_borrado_Amadeus
 807  8B13
 808  8B13 21 0A 89     1 ld hl,Ctrl_0
 809  8B16 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 810  8B18
 811  8B18 CD 6D 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 812  8B1B
 813  8B1B              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 814  8B1B
 815  8B1B CD 35 8D     	call Calcula_numero_de_disparotes
 816  8B1E
 817  8B1E C9           	ret
 818  8B1F
 819  8B1F              ; --------------------------------------------------------------------------------------------------------------
 820  8B1F              ;
 821  8B1F              ;	15/12/23
 822  8B1F
 823  8B1F              Mov_obj
 824  8B1F
 825  8B1F 3A 1B 89     	ld a,(Ctrl_2)
 826  8B22 CB 4F        	bit 1,a
 827  8B24 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 828  8B26
 829  8B26              ; Explosión:
 830  8B26
 831  8B26 3A 1C 89     	ld a,(Frames_explosion)
 832  8B29 A7           	and a
 833  8B2A 20 1D        	jr nz,4F
 834  8B2C
 835  8B2C              ;!  Una alimaña menos!!!!!!!!!1
 836  8B2C
 837  8B2C              ; Se trataba de una Entidad_guía ???
 838  8B2C
 839  8B2C 3A 1B 89     	ld a,(Ctrl_2)
 840  8B2F CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 841  8B31 28 05        	jr z,5F
 842  8B33
 843  8B33 21 3E 89     	ld hl,Ctrl_3
 844  8B36 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 845  8B38
 846  8B38              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 847  8B38              ;!! _generado puede ser distinto, (aletoriedad).
 848  8B38
 849  8B38 CD 1C 8E     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 850  8B3B 21 29 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 851  8B3E 35           	dec (hl)
 852  8B3F 21 2A 89     	ld hl,Entidades_en_curso
 853  8B42 35           	dec (hl)
 854  8B43 21 28 89     	ld hl,Numero_de_entidades
 855  8B46 35           	dec (hl)
 856  8B47 18 4C        	jr 3F
 857  8B49
 858  8B49              ; -----
 859  8B49
 860  8B49              ;	`Movemos´ la explosión.
 861  8B49
 862  8B49 2A E8 88     4 ld hl,(Puntero_DESPLZ_der)
 863  8B4C 23           	inc hl
 864  8B4D 23           	inc hl
 865  8B4E 22 E8 88     	ld (Puntero_DESPLZ_der),hl
 866  8B51 CD 4D 8D     	call Extrae_address
 867  8B54 22 DE 88     	ld (Puntero_objeto),hl
 868  8B57
 869  8B57 21 1C 89     	ld hl,Frames_explosion
 870  8B5A 35           	dec (hl)
 871  8B5B
 872  8B5B 21 0A 89     	ld hl,Ctrl_0
 873  8B5E CB E6        	set 4,(hl)
 874  8B60
 875  8B60 18 33        	jr 3F
 876  8B62
 877  8B62              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 878  8B62
 879  8B62 AF           2 xor a
 880  8B63 32 0A 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 881  8B66
 882  8B66              ; Movemos Entidades malignas.
 883  8B66              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 884  8B66
 885  8B66 3A 1B 89     	ld a,(Ctrl_2)
 886  8B69 CB 6F        	bit 5,a
 887  8B6B 20 07        	jr nz,8F
 888  8B6D
 889  8B6D 21 0A 89     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 890  8B70 CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 891  8B72 18 09        	jr 7F
 892  8B74
 893  8B74 CD 4F 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 894  8B77
 895  8B77 3A 0A 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 896  8B7A CB 67        	bit 4,a
 897  8B7C C8           	ret z
 898  8B7D
 899  8B7D              ; Ha habido desplazamiento de la entidad maligna.
 900  8B7D              ; Ha llegado a zona de AMADEUS ???
 901  8B7D
 902  8B7D 3A E1 88     7 ld a,(Coordenada_y)
 903  8B80 FE 14        	cp $14
 904  8B82 38 08        	jr c,1F
 905  8B84
 906  8B84              ; ---------
 907  8B84
 908  8B84              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 909  8B84              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 910  8B84
 911  8B84 F3           	di
 912  8B85 CD 92 90     	call Genera_coordenadas_X
 913  8B88 CD CE 90     	call Compara_coordenadas_X
 914  8B8B FB           	ei
 915  8B8C
 916  8B8C              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 917  8B8C
 918  8B8C              ; ---------
 919  8B8C
 920  8B8C CD 9D 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 921  8B8F CD 9E 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 922  8B92 CD F3 8C     	call Limpia_Variables_de_borrado
 923  8B95
 924  8B95 C9           3 ret
 925  8B96
 926  8B96              ; --------------------------------------------------------------------------------------------------------------
 927  8B96              ;
 928  8B96              ;	29/1/23
 929  8B96
 930  8B96              Mov_Amadeus
 931  8B96
 932  8B96 CD 3E 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 933  8B99
 934  8B99 3A 0A 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 935  8B9C CB 67        	bit 4,a
 936  8B9E C8           	ret z
 937  8B9F
 938  8B9F              ; ---------
 939  8B9F
 940  8B9F CD 9D 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 941  8BA2 CD 8E 8E     	call Repone_datos_de_borrado_Amadeus
 942  8BA5 CD F3 8C     	call Limpia_Variables_de_borrado
 943  8BA8
 944  8BA8 C9           	ret
 945  8BA9
 946  8BA9              ; -----------------------------------------------------------------------------------
 947  8BA9              ;
 948  8BA9              ;	12/12/23
 949  8BA9              ;
 950  8BA9              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 951  8BA9
 952  8BA9              Inicia_entidad
 953  8BA9
 954  8BA9 CD E7 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 955  8BAC CD 53 8D     	call Inicia_Puntero_objeto
 956  8BAF CD EA 99     	call Recompone_posicion_inicio
 957  8BB2 CD C9 93     	call Draw
 958  8BB5 CD C0 8B     	call Guarda_movimiento_masticado
 959  8BB8 CD 16 71     	call Guarda_foto_registros
 960  8BBB F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 961  8BBC              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 962  8BBC              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 963  8BBC CD 9B 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 964  8BBF C9           	ret
 965  8BC0
 966  8BC0
 967  8BC0              ; -----------------------------------------------------------------------------------
 968  8BC0              ;
 969  8BC0              ;	28/12/23
 970  8BC0              ;
 971  8BC0              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados_Entidad_1} si se trata de una "entidad_guía".
 972  8BC0              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 973  8BC0
 974  8BC0 3A 1B 89     Guarda_movimiento_masticado	ld a,(Ctrl_2)
 975  8BC3 CB 6F        	bit 5,a
 976  8BC5 C8           	ret z 													; Salimos si NO se trata de una entidad guía.
 977  8BC6
 978  8BC6 ED 73 30 89  	ld (Stack),sp
 979  8BCA ED 7B 06 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
 980  8BCE
 981  8BCE E5           	push hl
 982  8BCF DD E5            push ix
 983  8BD1 FD E5            push iy
 984  8BD3
 985  8BD3 ED 7B 30 89      ld sp,(Stack)
 986  8BD7
 987  8BD7 E5               push hl
 988  8BD8
 989  8BD8 2A 08 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
 990  8BDB 23           	inc hl
 991  8BDC 22 08 89     	ld (Contador_de_mov_masticados),hl
 992  8BDF
 993  8BDF 22 1D 89     	ld (Contador_general_de_mov_masticados_Entidad_1),hl	; Cuando la entidad pase de guía a fantasma, el "contador general" indicará el nº máximo de movimientos masticados creados.
 994  8BE2
 995  8BE2 E1           	pop hl
 996  8BE3
 997  8BE3 CD FE 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 998  8BE6              ;															; _ el (Contador_de_mov_masticados).
 999  8BE6 C9               ret
1000  8BE7
1001  8BE7              ; --------------------------------------------------------------------------------------------------------------
1002  8BE7              ;
1003  8BE7              ;	12/12/23
1004  8BE7              ;
1005  8BE7
1006  8BE7              Inicia_entidad_guia
1007  8BE7
1008  8BE7              ; Existe "Entidad_guía" ???
1009  8BE7
1010  8BE7 3A 3E 89     	ld a,(Ctrl_3)
1011  8BEA CB 4F        	bit 1,a
1012  8BEC C0           	ret nz
1013  8BED
1014  8BED              ; Inicia Entidad_guía:
1015  8BED
1016  8BED 21 1B 89     	ld hl,Ctrl_2
1017  8BF0 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1018  8BF2 21 3E 89     	ld hl,Ctrl_3
1019  8BF5 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1020  8BF7
1021  8BF7 21 D6 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1+6
1022  8BFA 22 06 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1023  8BFD
1024  8BFD C9           	ret
1025  8BFE
1026  8BFE              ; --------------------------------------------------------------------------------------------------------------
1027  8BFE              ;
1028  8BFE              ;	21/12/23
1029  8BFE              ;
1030  8BFE
1031  8BFE              Actualiza_Puntero_de_almacen_de_mov_masticados
1032  8BFE
1033  8BFE              ;	Entidad_guía ???
1034  8BFE
1035  8BFE 3A 1B 89     	ld a,(Ctrl_2)
1036  8C01 CB 6F        	bit 5,a
1037  8C03 C8           	ret z												; Salimos si NO se trata de una entidad guía.
1038  8C04
1039  8C04 E5           	push hl
1040  8C05 C5           	push bc
1041  8C06
1042  8C06 2A 06 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1043  8C09 01 06 00     	ld bc,6
1044  8C0C A7           	and a
1045  8C0D ED 4A        	adc hl,bc
1046  8C0F 22 06 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1047  8C12
1048  8C12 C1           	pop bc
1049  8C13 E1           	pop hl
1050  8C14
1051  8C14 C9           	ret
1052  8C15
1053  8C15              ; --------------------------------------------------------------------------------------------------------------
1054  8C15              ;
1055  8C15              ;	28/12/23
1056  8C15              ;
1057  8C15              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1058  8C15              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1059  8C15
1060  8C15              Guarda_foto_entidad_a_pintar
1061  8C15
1062  8C15 3A 0A 89     	ld a,(Ctrl_0)
1063  8C18 CB 77        	bit 6,a
1064  8C1A 28 07        	jr z,5F
1065  8C1C
1066  8C1C              ; Guarda la foto de Amadeus.
1067  8C1C
1068  8C1C CD C9 93     	call Draw
1069  8C1F CD 16 71     	call Guarda_foto_registros
1070  8C22 C9           	ret
1071  8C23
1072  8C23              ; ENTIDADES!
1073  8C23              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1074  8C23
1075  8C23 3A 3E 89     5 ld a,(Ctrl_3)
1076  8C26 CB 5F        	bit 3,a
1077  8C28 28 04        	jr z,1F
1078  8C2A
1079  8C2A              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1080  8C2A
1081  8C2A CD 71 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1082  8C2D C9           	ret
1083  8C2E
1084  8C2E              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1085  8C2E
1086  8C2E 3A 3E 89     1 ld a,(Ctrl_3)
1087  8C31 CB 57        	bit 2,a
1088  8C33 20 10        	jr nz,6F
1089  8C35
1090  8C35              ; Entidad guía o fantasma ???
1091  8C35
1092  8C35 3A 1B 89     	ld a,(Ctrl_2)
1093  8C38 CB 6F        	bit 5,a
1094  8C3A 20 10        	jr nz,3F
1095  8C3C
1096  8C3C              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1097  8C3C
1098  8C3C 18 EC        	jr 4B
1099  8C3E
1100  8C3E              ; ENTIDAD_GUÍA:
1101  8C3E              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1102  8C3E              ; _guardando "movimientos_masticados".
1103  8C3E
1104  8C3E 3A 3E 89     2 ld a,(Ctrl_3)
1105  8C41 CB 57        	bit 2,a
1106  8C43 28 07        	jr z,3F
1107  8C45
1108  8C45              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1109  8C45              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1110  8C45
1111  8C45 CB 97        6 res 2,a
1112  8C47 CB DF        	set 3,a
1113  8C49 32 3E 89     	ld (Ctrl_3),a
1114  8C4C
1115  8C4C
1116  8C4C              ;	Esto sólo lo ejecuta una entidad guía.
1117  8C4C
1118  8C4C CD C9 93     3 	call Draw
1119  8C4F CD C0 8B     	call Guarda_movimiento_masticado
1120  8C52 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1121  8C55
1122  8C55              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1123  8C55              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1124  8C55
1125  8C55 CD 59 8C     	call Convierte_guia_en_fantasma
1126  8C58 C9           	ret
1127  8C59
1128  8C59              ; --------------------------------------------------------------------------------------------------------------
1129  8C59              ;
1130  8C59              ;	28/12/23
1131  8C59              ;
1132  8C59
1133  8C59 3A 3E 89     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1134  8C5C CB 5F        	bit 3,a
1135  8C5E C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1136  8C5F
1137  8C5F              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1138  8C5F
1139  8C5F 21 1B 89     	ld hl,Ctrl_2
1140  8C62 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1141  8C64
1142  8C64              ;	Reinicializamos el (Puntero_de_almacen_de_mov_masticados).
1143  8C64
1144  8C64 21 D0 5C     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
1145  8C67 22 06 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1146  8C6A
1147  8C6A              ;	Reinicializamos el (Contador_de_mov_masticados).
1148  8C6A
1149  8C6A 21 00 00     	ld hl,0
1150  8C6D 22 08 89     	ld (Contador_de_mov_masticados),hl
1151  8C70
1152  8C70 C9           	ret
1153  8C71
1154  8C71              ; --------------------------------------------------------------------------------------------------------------
1155  8C71              ;
1156  8C71              ;	21/12/23
1157  8C71              ;
1158  8C71              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1159  8C71              ;
1160  8C71              ;		IY contiene (Puntero_objeto).
1161  8C71              ;		IX contiene el puntero de impresión.
1162  8C71              ;		HL contiene la dirección de la rutina de impresión.
1163  8C71              ;
1164  8C71              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1165  8C71              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1166  8C71              ;	Decrementa el (Contador_de_mov_masticados)
1167  8C71              ;
1168  8C71              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1169  8C71              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1170  8C71              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1171  8C71
1172  8C71
1173  8C71 ED 73 30 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1174  8C75 ED 7B 06 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1175  8C79
1176  8C79 FD E1        	pop iy
1177  8C7B DD E1        	pop ix
1178  8C7D E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1179  8C7E
1180  8C7E ED 73 06 89  	ld (Puntero_de_almacen_de_mov_masticados),sp
1181  8C82 ED 7B 30 89  	ld sp,(Stack)
1182  8C86
1183  8C86 CD 16 71     	call Guarda_foto_registros
1184  8C89
1185  8C89 E5           	push hl
1186  8C8A
1187  8C8A 2A 08 89     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1188  8C8D 23           	inc hl
1189  8C8E 22 08 89     	ld (Contador_de_mov_masticados),hl
1190  8C91
1191  8C91              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1192  8C91
1193  8C91 ED 4B 1D 89  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1194  8C95 A7           	and a
1195  8C96 ED 42        	sbc hl,bc
1196  8C98 CC 59 8C     	call z,Convierte_guia_en_fantasma
1197  8C9B
1198  8C9B E1           	pop hl
1199  8C9C
1200  8C9C C9           	ret
1201  8C9D
1202  8C9D              ; --------------------------------------------------------------------------------------------------------------
1203  8C9D              ;
1204  8C9D              ;	19/9/23
1205  8C9D
1206  8C9D              Prepara_var_pintado
1207  8C9D
1208  8C9D 21 DA 88     	ld hl,Filas
1209  8CA0 11 FA 88     	ld de,Variables_de_pintado
1210  8CA3 01 08 00     	ld bc,8
1211  8CA6 ED B0        	ldir
1212  8CA8 C9           	ret
1213  8CA9
1214  8CA9              ; --------------------------------------------------------------------------------------------------------------
1215  8CA9
1216  8CA9              Repone_pintar
1217  8CA9
1218  8CA9 21 FA 88     	ld hl,Variables_de_pintado
1219  8CAC 11 DA 88     	ld de,Filas
1220  8CAF 01 08 00     	ld bc,8
1221  8CB2 ED B0        	ldir
1222  8CB4 C9           	ret
1223  8CB5
1224  8CB5              ; *************************************************************************************************************************************************************
1225  8CB5              ;
1226  8CB5              ; 8/1/23
1227  8CB5              ;
1228  8CB5              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1229  8CB5              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1230  8CB5              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1231  8CB5
1232  8CB5              ; Destruye HL y DE !!!!!
1233  8CB5
1234  8CB5              Inicia_punteros_de_cajas
1235  8CB5
1236  8CB5 21 6C 85     	ld hl,Indice_de_cajas
1237  8CB8 CD 4D 8D         call Extrae_address
1238  8CBB 22 22 89         ld (Puntero_store_caja),hl
1239  8CBE 21 6E 85     	ld hl,Indice_de_cajas+2
1240  8CC1 22 26 89     	ld (Indice_restore_caja),hl
1241  8CC4 CD 4D 8D     	call Extrae_address
1242  8CC7 22 24 89     	ld (Puntero_restore_caja),hl
1243  8CCA C9               ret
1244  8CCB
1245  8CCB              ; *************************************************************************************************************************************************************
1246  8CCB              ;
1247  8CCB              ; 8/1/23
1248  8CCB              ;
1249  8CCB              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1250  8CCB
1251  8CCB 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1252  8CCE 22 40 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1253  8CD1 C9           	ret
1254  8CD2 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1255  8CD5 22 42 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1256  8CD8 C9           	ret
1257  8CD9
1258  8CD9              ; -------------------------------------------------------------------------------------------------------------
1259  8CD9              ;
1260  8CD9              ; 21/9/23
1261  8CD9              ;
1262  8CD9
1263  8CD9              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1264  8CD9
1265  8CD9              Limpia_album_Amadeus
1266  8CD9
1267  8CD9 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1268  8CDC 7E           	ld a,(hl)
1269  8CDD A7           	and a
1270  8CDE C8           	ret z
1271  8CDF
1272  8CDF 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1273  8CE2 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1274  8CE5 01 0B 00     	ld bc,11
1275  8CE8 AF           	xor a
1276  8CE9 77           	ld (hl),a
1277  8CEA ED B0        	ldir
1278  8CEC
1279  8CEC 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1280  8CEF 22 3C 89     	ld (End_Snapshot_Amadeus),hl
1281  8CF2
1282  8CF2 C9           	ret
1283  8CF3
1284  8CF3 21 F4 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1285  8CF6 11 F5 88     	ld de,Variables_de_borrado+1
1286  8CF9 01 05 00     	ld bc,5
1287  8CFC AF           	xor a
1288  8CFD 77           	ld (hl),a
1289  8CFE ED B0        	ldir
1290  8D00 C9           	ret
1291  8D01
1292  8D01              ; -------------------------------------------------------------------------------------------------------------
1293  8D01              ;
1294  8D01              ; 8/9/23
1295  8D01              ;
1296  8D01
1297  8D01              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1298  8D01              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1299  8D01
1300  8D01              Calcula_numero_de_malotes
1301  8D01
1302  8D01 21 00 70     	ld hl,Album_de_fotos
1303  8D04 EB           	ex de,hl
1304  8D05 2A 36 89     	ld hl,(Stack_snapshot)
1305  8D08
1306  8D08 06 00        	ld b,0
1307  8D0A 7D           	ld a,l
1308  8D0B 93           	sub e
1309  8D0C 28 07        	jr z,1F
1310  8D0E
1311  8D0E              ; Nº de malotes no es "0".
1312  8D0E
1313  8D0E D6 06        2 sub 6
1314  8D10 04           	inc b
1315  8D11 A7           	and a
1316  8D12 20 FA        	jr nz,2B
1317  8D14 78           	ld a,b
1318  8D15
1319  8D15 32 2B 89     1 ld (Numero_de_malotes),a
1320  8D18 C9           	ret
1321  8D19
1322  8D19              ; -------------------------------------------------------------------------------------------------------------
1323  8D19              ;
1324  8D19              ; 8/9/23
1325  8D19              ;
1326  8D19
1327  8D19              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1328  8D19              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1329  8D19
1330  8D19              Calcula_malotes_Amadeus
1331  8D19
1332  8D19 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1333  8D1C EB           	ex de,hl
1334  8D1D 2A 3C 89     	ld hl,(End_Snapshot_Amadeus)
1335  8D20
1336  8D20 7C           	ld a,h
1337  8D21 A7           	and a
1338  8D22 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1339  8D24
1340  8D24 06 00        	ld b,0
1341  8D26 7D           	ld a,l
1342  8D27 93           	sub e
1343  8D28 28 07        	jr z,1F
1344  8D2A
1345  8D2A              ; Nº de malotes no es "0".
1346  8D2A
1347  8D2A D6 06        2 sub 6
1348  8D2C 04           	inc b
1349  8D2D A7           	and a
1350  8D2E 20 FA        	jr nz,2B
1351  8D30 78           	ld a,b
1352  8D31
1353  8D31 32 2B 89     1 ld (Numero_de_malotes),a
1354  8D34 C9           	ret
1355  8D35
1356  8D35              ; -------------------------------------------------------------------------------------------------------------
1357  8D35              ;
1358  8D35              ; 28/2/23
1359  8D35              ;
1360  8D35
1361  8D35              Calcula_numero_de_disparotes
1362  8D35
1363  8D35 21 56 70     	ld hl,Album_de_fotos_disparos
1364  8D38 EB           	ex de,hl
1365  8D39 2A 3A 89     	ld hl,(End_Snapshot_disparos)
1366  8D3C
1367  8D3C 06 00        	ld b,0
1368  8D3E 7D           	ld a,l
1369  8D3F 93           	sub e
1370  8D40 28 07        	jr z,1F
1371  8D42
1372  8D42              ; Nº de malotes no es "0".
1373  8D42
1374  8D42 D6 06        2 sub 6
1375  8D44 04           	inc b
1376  8D45 A7           	and a
1377  8D46 20 FA        	jr nz,2B
1378  8D48 78           	ld a,b
1379  8D49
1380  8D49 32 3F 89     1 ld (Numero_de_disparotes),a
1381  8D4C C9           	ret
1382  8D4D
1383  8D4D              ; *************************************************************************************************************************************************************
1384  8D4D              ;
1385  8D4D              ; 20/10/22
1386  8D4D              ;
1387  8D4D              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1388  8D4D              ;
1389  8D4D              ; Destruye el puntero y DE !!!!!
1390  8D4D
1391  8D4D 5E           Extrae_address ld e,(hl)
1392  8D4E 23           	inc hl
1393  8D4F 56           	ld d,(hl)
1394  8D50 2B           	dec hl
1395  8D51 EB           	ex de,hl
1396  8D52 C9           	ret
1397  8D53
1398  8D53              ; *************************************************************************************************************************************************************
1399  8D53              ;
1400  8D53              ;	7/2/23
1401  8D53              ;
1402  8D53              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1403  8D53              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1404  8D53              ;
1405  8D53              ;   Destruye HL y BC !!!!!,
1406  8D53              ;
1407  8D53              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1408  8D53              ;					"0" ..... Izquierda.
1409  8D53
1410  8D53              Inicia_Puntero_objeto
1411  8D53
1412  8D53 3A EE 88     	ld a,(Cuad_objeto)
1413  8D56 E6 01        	and 1
1414  8D58 F5           	push af
1415  8D59 CC 77 8D     	call z,Inicia_puntero_objeto_izq
1416  8D5C F1           	pop af
1417  8D5D 28 2B        	jr z,1F
1418  8D5F CD 64 8D     	call Inicia_puntero_objeto_der
1419  8D62 18 26        	jr 1F
1420  8D64
1421  8D64              ; Arrancamos desde la parte izquierda de la pantalla.
1422  8D64              ; Iniciamos (Indice_Sprite_der).
1423  8D64
1424  8D64 2A E4 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1425  8D67 22 E8 88     	ld (Puntero_DESPLZ_der),hl
1426  8D6A CD 4D 8D     	call Extrae_address
1427  8D6D 22 DE 88     	ld (Puntero_objeto),hl
1428  8D70
1429  8D70 2A E6 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1430  8D73 22 EA 88     	ld (Puntero_DESPLZ_izq),hl
1431  8D76 C9           	ret
1432  8D77
1433  8D77              ; Arrancamos desde la parte derecha de la pantalla.
1434  8D77              ; Iniciamos (Indice_Sprite_izq).
1435  8D77
1436  8D77 2A E6 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1437  8D7A 22 EA 88     	ld (Puntero_DESPLZ_izq),hl
1438  8D7D CD 4D 8D     	call Extrae_address
1439  8D80 22 DE 88     	ld (Puntero_objeto),hl
1440  8D83
1441  8D83 2A E4 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1442  8D86 22 E8 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1443  8D89 C9           	ret
1444  8D8A
1445  8D8A              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1446  8D8A
1447  8D8A 21 40 83     1 ld hl,Amadeus
1448  8D8D ED 4B DE 88  	ld bc,(Puntero_objeto)
1449  8D91 B7 ED 42     	sub hl,bc
1450  8D94 C0           	ret nz
1451  8D95 21 0A 89     	ld hl,Ctrl_0
1452  8D98 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1453  8D9A C9           	ret 												; _de nuestra nave en los extremos.
1454  8D9B
1455  8D9B              ; *************************************************************************************************************************************************************
1456  8D9B              ;
1457  8D9B              ;	21/12/23
1458  8D9B              ;
1459  8D9B              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1460  8D9B              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1461  8D9B
1462  8D9B              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1463  8D9B              ;	_de la 2ª y 3ª entidad respectivamente.
1464  8D9B
1465  8D9B              Store_Restore_cajas
1466  8D9B
1467  8D9B E5           	push hl
1468  8D9C D5           	push de
1469  8D9D C5            	push bc
1470  8D9E
1471  8D9E              ;	STORE !!!!!
1472  8D9E              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1473  8D9E
1474  8D9E F3           	di
1475  8D9F 21 DA 88     	ld hl,Filas
1476  8DA2 ED 5B 22 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1477  8DA6 01 43 00     	ld bc,67
1478  8DA9 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1479  8DAB FB           	ei
1480  8DAC
1481  8DAC              ; 	Entidad_sospechosa. 20/4/23
1482  8DAC
1483  8DAC 3A F3 88     	ld a,(Impacto)
1484  8DAF A7           	and a
1485  8DB0 28 0C        	jr z,1F
1486  8DB2
1487  8DB2 2A 22 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1488  8DB5 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1489  8DB8 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1490  8DB9 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1491  8DBB 22 45 89     	ld (Entidad_sospechosa_de_colision),hl
1492  8DBE
1493  8DBE              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1494  8DBE
1495  8DBE 2A 24 89     1 ld hl,(Puntero_restore_caja)
1496  8DC1 7E           	ld a,(hl)
1497  8DC2 A7           	and a
1498  8DC3 F5           	push af
1499  8DC4 28 0A        	jr z,2F
1500  8DC6
1501  8DC6 F3           	di
1502  8DC7 11 DA 88     	ld de,Filas
1503  8DCA 01 43 00     	ld bc,67
1504  8DCD ED B0        	ldir
1505  8DCF FB           	ei
1506  8DD0
1507  8DD0 CD EC 8D     2 call Incrementa_punteros_de_cajas
1508  8DD3
1509  8DD3 F1           	pop af
1510  8DD4 28 E8        	jr z,1B
1511  8DD6
1512  8DD6 C1           	pop bc
1513  8DD7 D1           	pop de
1514  8DD8 E1           	pop hl
1515  8DD9
1516  8DD9 C9           	ret
1517  8DDA
1518  8DDA              ; **************************************************************************************************
1519  8DDA              ;
1520  8DDA              ;	21/12/23
1521  8DDA              ;
1522  8DDA              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1523  8DDA
1524  8DDA E5           Restore_entidad push hl
1525  8DDB D5           	push de
1526  8DDC C5            	push bc
1527  8DDD
1528  8DDD 2A 22 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1529  8DE0 11 DA 88     	ld de,Filas
1530  8DE3 01 43 00     	ld bc,67
1531  8DE6 ED B0        	ldir
1532  8DE8
1533  8DE8 C1           	pop bc
1534  8DE9 D1           	pop de
1535  8DEA E1           	pop hl
1536  8DEB C9           	ret
1537  8DEC
1538  8DEC              ; **************************************************************************************************
1539  8DEC              ;
1540  8DEC              ;	08/05/23
1541  8DEC              ;
1542  8DEC              ;	Incrementamos los dos punteros de entidades. (+1).
1543  8DEC
1544  8DEC              Incrementa_punteros_de_cajas
1545  8DEC
1546  8DEC 2A 24 89     	ld hl,(Puntero_restore_caja)
1547  8DEF 22 22 89     	ld (Puntero_store_caja),hl
1548  8DF2 2A 26 89     	ld hl,(Indice_restore_caja)
1549  8DF5 23           	inc hl
1550  8DF6 23           	inc hl
1551  8DF7 22 26 89     	ld (Indice_restore_caja),hl
1552  8DFA CD 4D 8D         call Extrae_address
1553  8DFD 22 24 89         ld (Puntero_restore_caja),hl
1554  8E00 C9               ret
1555  8E01
1556  8E01              ; **************************************************************************************************
1557  8E01              ;
1558  8E01              ;	21/12/23
1559  8E01              ;
1560  8E01              ;	Restore_Amadeus
1561  8E01              ;
1562  8E01              ;	Cargamos en DRAW los parámetros de Amadeus.
1563  8E01              ;
1564  8E01
1565  8E01 E5           Restore_Amadeus	push hl
1566  8E02 D5           	push de
1567  8E03 C5            	push bc
1568  8E04 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1569  8E07 11 DA 88     	ld de,Filas
1570  8E0A 01 43 00     	ld bc,67
1571  8E0D ED B0        	ldir
1572  8E0F C1           	pop bc
1573  8E10 D1           	pop de
1574  8E11 E1           	pop hl
1575  8E12 C9           	ret
1576  8E13
1577  8E13              ; *************************************************************************************************************************************************************
1578  8E13              ;
1579  8E13              ;	21/12/23
1580  8E13              ;
1581  8E13              ;	Store_Amadeus
1582  8E13              ;
1583  8E13              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1584  8E13              ;
1585  8E13              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1586  8E13              ;
1587  8E13              ;	DESTRUYE: HL y BC y DE.
1588  8E13
1589  8E13 21 DA 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1590  8E16 01 43 00     	ld bc,67
1591  8E19 ED B0        	ldir
1592  8E1B C9           	ret
1593  8E1C
1594  8E1C              ; -----------------------------------------------------------
1595  8E1C              ;
1596  8E1C              ;	21/12/23
1597  8E1C              ;
1598  8E1C              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1599  8E1C              ;
1600  8E1C              ;	Destruye: HL,BC,DE,A
1601  8E1C
1602  8E1C 21 DA 88     Borra_datos_entidad ld hl,Filas
1603  8E1F 01 42 00     	ld bc,66
1604  8E22 AF           	xor a
1605  8E23 77           	ld (hl),a
1606  8E24 11 DB 88     	ld de,Filas+1
1607  8E27 ED B0        	ldir
1608  8E29 C9           	ret
1609  8E2A
1610  8E2A              ; -----------------------------------------------------------
1611  8E2A
1612  8E2A              ; Teclado.
1613  8E2A
1614  8E2A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1615  8E2C DB FE        	in a,($fe)
1616  8E2E E6 01        	and $01
1617  8E30 28 02        	jr z,1f
1618  8E32 18 F6        	jr Pulsa_ENTER
1619  8E34 C9           1 ret
1620  8E35
1621  8E35              ; **************************************************************************************************
1622  8E35              ;
1623  8E35              ; Temporización.
1624  8E35
1625  8E35              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1626  8E35              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1627  8E35              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1628  8E35              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1629  8E35
1630  8E35              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1631  8E35              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1632  8E35              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1633  8E35
1634  8E35              ; A partir de $4f61 no hace falta DELAY.
1635  8E35
1636  8E35              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1637  8E35
1638  8E35 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1639  8E38 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1640  8E39 78           	LD A,B
1641  8E3A A7           	AND A
1642  8E3B 20 FB        	JR NZ,wait
1643  8E3D C9           	RET
1644  8E3E
1645  8E3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1646  8E3E              ;
1647  8E3E              ;	5/3/23
1648  8E3E              ;
1649  8E3E              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1650  8E3E
1651  8E3E              Movimiento_Amadeus
1652  8E3E
1653  8E3E              ; Disparo.
1654  8E3E
1655  8E3E 3A 55 89     	ld a,(Disparo_Amadeus)
1656  8E41 A7           	and a
1657  8E42 20 02        	jr nz,1F
1658  8E44 18 15        	jr 2F
1659  8E46
1660  8E46 3E F7        1 ld a,$f7													; "5" para disparar.
1661  8E48 DB FE        	in a,($fe)
1662  8E4A E6 10        	and $10
1663  8E4C
1664  8E4C F5           	push af
1665  8E4D CC F5 8E     	call z,Genera_disparo
1666  8E50 F1           	pop af
1667  8E51 20 08        	jr nz,2F
1668  8E53
1669  8E53 3A 55 89     	ld a,(Disparo_Amadeus)
1670  8E56 EE 01        	xor 1
1671  8E58 32 55 89     	ld (Disparo_Amadeus),a
1672  8E5B 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1673  8E5D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1674  8E5F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1675  8E61 CC AE 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1676  8E64
1677  8E64 3E F7        	ld a,$f7
1678  8E66 DB FE        	in a,($fe)
1679  8E68 E6 01        	and $01
1680  8E6A C8           	ret z
1681  8E6B
1682  8E6B 3E F7        	ld a,$f7
1683  8E6D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1684  8E6F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1685  8E71 CC 90 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1686  8E74 C9           	ret
1687  8E75
1688  8E75              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1689  8E75              ;
1690  8E75              ;	Rutina provisional para que los malotes cagen balas.
1691  8E75
1692  8E75              Detecta_disparo_entidad
1693  8E75
1694  8E75 3A 58 89     	ld a,(Disparo_entidad)
1695  8E78 A7           	and a
1696  8E79 C8           	ret z
1697  8E7A
1698  8E7A              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1699  8E7A
1700  8E7A              ;	ld a,$7f				; Detecta SPACE.
1701  8E7A              ;	in a,($fe)
1702  8E7A              ;	and 1
1703  8E7A              ;	ret nz
1704  8E7A
1705  8E7A CD F5 8E     	call Genera_disparo
1706  8E7D C9           	ret
1707  8E7E
1708  8E7E              ; ----------------------------------------------------------------------
1709  8E7E              ;
1710  8E7E              ;	8/9/23
1711  8E7E
1712  8E7E 2A 3C 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1713  8E81 2B            	dec hl
1714  8E82 7E           	ld a,(hl)
1715  8E83 A7           	and a
1716  8E84 C8           	ret z										; Salimos si es álbum está vacío.
1717  8E85
1718  8E85 11 F9 88     	ld de,Variables_de_borrado+5
1719  8E88 01 06 00     	ld bc,6
1720  8E8B ED B8        	lddr
1721  8E8D C9           	ret
1722  8E8E
1723  8E8E              ; ----------------------------------------------------------------------
1724  8E8E              ;
1725  8E8E              ;	9/9/23
1726  8E8E
1727  8E8E              Repone_datos_de_borrado_Amadeus
1728  8E8E
1729  8E8E 21 F4 88     	ld hl,Variables_de_borrado
1730  8E91 11 AC 70     	ld de,Album_de_fotos_Amadeus
1731  8E94 01 06 00     	ld bc,6
1732  8E97 ED B0        	ldir
1733  8E99
1734  8E99 EB           	ex de,hl
1735  8E9A 22 3C 89     	ld (End_Snapshot_Amadeus),hl
1736  8E9D
1737  8E9D C9           	ret
1738  8E9E
1739  8E9E              ; ----------------------------------------------------------------------
1740  8E9E              ;
1741  8E9E              ;	27/10/23
1742  8E9E              ;
1743  8E9E
1744  8E9E              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1745  8E9E              ;	_ Album_de_fotos correspondiente.
1746  8E9E
1747  8E9E              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1748  8E9E              ;	_ durante el proceso de escritura.
1749  8E9E
1750  8E9E              Repone_datos_de_borrado
1751  8E9E
1752  8E9E F3           	di
1753  8E9F ED 5B 36 89  	ld de,(Stack_snapshot)
1754  8EA3 21 F4 88     	ld hl,Variables_de_borrado
1755  8EA6 01 06 00     	ld bc,6
1756  8EA9 ED B0        	ldir
1757  8EAB FB           	ei
1758  8EAC
1759  8EAC EB           	ex de,hl
1760  8EAD 22 36 89     	ld (Stack_snapshot),hl
1761  8EB0
1762  8EB0 C9           	ret
1763  8EB1
1764  8EB1              ; --------------------------------------------------------------------------------------
1765  8EB1
1766  8EB1              Pinta_Amadeus
1767  8EB1
1768  8EB1 CD 19 8D        	call Calcula_malotes_Amadeus
1769  8EB4 CD 59 97     	call Extrae_foto_Amadeus
1770  8EB7 CD D9 8C     	call Limpia_album_Amadeus
1771  8EBA
1772  8EBA C9           	ret
1773  8EBB
1774  8EBB              Pinta_entidades
1775  8EBB
1776  8EBB              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1777  8EBB
1778  8EBB 3A 3E 89     	ld a,(Ctrl_3)
1779  8EBE CB 47        	bit 0,a
1780  8EC0 C8           	ret z
1781  8EC1
1782  8EC1 CD 01 8D     	call Calcula_numero_de_malotes
1783  8EC4 CD D7 96     	call Extrae_foto_entidades
1784  8EC7 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1785  8ECA
1786  8ECA C9           	ret
1787  8ECB
1788  8ECB              ; -----------------------------------------------------------------------------------
1789  8ECB              ;
1790  8ECB              ;	10/12/23
1791  8ECB              ;
1792  8ECB              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1793  8ECB
1794  8ECB              Actualiza_relojes
1795  8ECB
1796  8ECB 3A 3E 89     	ld a,(Ctrl_3)
1797  8ECE CB 47        	bit 0,a
1798  8ED0 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1799  8ED1
1800  8ED1 21 50 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1801  8ED4 34           	inc (hl)
1802  8ED5
1803  8ED5 34           	inc (hl)
1804  8ED6 35           	dec (hl)
1805  8ED7 C0           	ret nz
1806  8ED8
1807  8ED8 21 51 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1808  8EDB 34           	inc (hl)
1809  8EDC C9           	ret
1810  8EDD
1811  8EDD              ; ---------------------------------------------------------------
1812  8EDD              ;
1813  8EDD              ;	21/12/23
1814  8EDD
1815  8EDD              Guarda_parametros_DRAW
1816  8EDD
1817  8EDD 21 DA 88     	ld hl,Filas
1818  8EE0 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1819  8EE3 01 43 00     	ld bc,67
1820  8EE6 ED B0        	ldir
1821  8EE8 C9           	ret
1822  8EE9
1823  8EE9              Recupera_parametros_DRAW
1824  8EE9
1825  8EE9 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1826  8EEC 11 DA 88     	ld de,Filas
1827  8EEF 01 43 00     	ld bc,67
1828  8EF2 ED B0        	ldir
1829  8EF4 C9           	ret
1830  8EF5
1831  8EF5              ; ---------------------------------------------------------------
1832  8EF5
1833  8EF5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EF5              ; ******************************************************************************************************************************************************************************************
   2+ 8EF5              ;
   3+ 8EF5              ;   21/07/23
   4+ 8EF5              ;
   5+ 8EF5              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EF5              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EF5              ;
   8+ 8EF5              ;
   9+ 8EF5              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EF5              ;
  11+ 8EF5              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EF5              ;               _ hacen las entidades hacia abajo.
  13+ 8EF5              ;
  14+ 8EF5              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EF5              ;
  16+ 8EF5              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EF5              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EF5              ;
  19+ 8EF5              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EF5              ;           _ la bala.
  21+ 8EF5              ;
  22+ 8EF5              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EF5              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EF5              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EF5              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EF5              ;           _ en el momento de generarse la bala)).
  27+ 8EF5
  28+ 8EF5              Genera_disparo
  29+ 8EF5
  30+ 8EF5              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EF5              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EF5              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EF5              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EF5              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EF5              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EF5              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EF5
  38+ 8EF5              ; Exclusiones:
  39+ 8EF5
  40+ 8EF5 3A F2 88         ld a,(Vel_down)
  41+ 8EF8 47               ld b,a
  42+ 8EF9 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EFC B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EFD D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EFE 3A 17 89         ld a,(Columnas)
  46+ 8F01 47               ld b,a
  47+ 8F02 3A DB 88         ld a,(Columns)
  48+ 8F05 B8               cp b
  49+ 8F06 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F07
  51+ 8F07              ; ----- ----- -----
  52+ 8F07
  53+ 8F07 3A 0A 89         ld a,(Ctrl_0)
  54+ 8F0A CB 77            bit 6,a
  55+ 8F0C 20 06            jr nz,14F
  56+ 8F0E
  57+ 8F0E 3A E1 88         ld a,(Coordenada_y)
  58+ 8F11 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F13 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F14
  61+ 8F14 21 00 80     14 ld hl,Indice_disparo
  62+ 8F17 3A E2 88         ld a,(CTRL_DESPLZ)
  63+ 8F1A 4F               ld c,a
  64+ 8F1B 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F1D              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F1D              ;                                            ""        ""       "f9", B="1"
  67+ 8F1D              ;                                            ""        ""       "fb", B="2"
  68+ 8F1D              ;                                            ""        ""       "fb", B="3"
  69+ 8F1D A7               and a
  70+ 8F1E 28 10            jr z,1F
  71+ 8F20 E6 01            and 1
  72+ 8F22 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F23
  74+ 8F23 79               ld a,c
  75+ 8F24 16 F9            ld d,$f9
  76+ 8F26 23           2 inc hl
  77+ 8F27 23               inc hl
  78+ 8F28 04               inc b
  79+ 8F29 BA               cp d
  80+ 8F2A 28 04            jr z,1F
  81+ 8F2C 14               inc d
  82+ 8F2D 14               inc d
  83+ 8F2E 18 F6            jr 2B
  84+ 8F30
  85+ 8F30 CD 4D 8D     1 call Extrae_address
  86+ 8F33 E5               push hl
  87+ 8F34 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F36 DD 21 9F 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F3A
  90+ 8F3A              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F3A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F3A
  93+ 8F3A 3A 0A 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F3D CB 77            bit 6,a
  95+ 8F3F 20 04            jr nz,19F
  96+ 8F41
  97+ 8F41 AF               xor a
  98+ 8F42 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F45
 100+ 8F45 3A EE 88     19 ld a,(Cuad_objeto)
 101+ 8F48 FE 02            cp 2
 102+ 8F4A 38 66            jr c,3F
 103+ 8F4C 28 64            jr z,3F
 104+ 8F4E
 105+ 8F4E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F4E
 107+ 8F4E E6 01            and 1
 108+ 8F50 28 30            jr z,4F
 109+ 8F52
 110+ 8F52              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F52              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F52              ;
 113+ 8F52              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F52              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F52              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F52
 117+ 8F52 2A DC 88     	ld hl,(Posicion_actual)
 118+ 8F55
 119+ 8F55              ;   Amadeus o entidad ???.
 120+ 8F55
 121+ 8F55 3A 0A 89         ld a,(Ctrl_0)
 122+ 8F58 CB 77            bit 6,a
 123+ 8F5A 28 0A            jr z,8F
 124+ 8F5C
 125+ 8F5C              ; 	Dispara Amadeus.
 126+ 8F5C
 127+ 8F5C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F5E CD C8 96         call PreviousScan
 129+ 8F61 CD C8 96         call PreviousScan
 130+ 8F64
 131+ 8F64              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F64              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F64              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F64              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F64
 136+ 8F64 18 11            jr 10F
 137+ 8F66
 138+ 8F66              ; 	Dispara Entidad.
 139+ 8F66
 140+ 8F66 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F69              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F69
 143+ 8F69              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F69              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F69
 146+ 8F69 C5               push bc
 147+ 8F6A 06 10            ld b,16
 148+ 8F6C CD B9 96     9 call NextScan
 149+ 8F6F 10 FB            djnz 9B
 150+ 8F71 C1               pop bc
 151+ 8F72 CD DC 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F75 18 06            jr 17F
 153+ 8F77
 154+ 8F77              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F77              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F77              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F77              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F77
 159+ 8F77 CD DC 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F7A CD 51 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F7D              ;                                                      ; _al generar el disparo.
 162+ 8F7D
 163+ 8F7D              ; 	LLegados a este punto tendremos:
 164+ 8F7D              ;
 165+ 8F7D              ;       Puntero_objeto_disparo en IY.
 166+ 8F7D              ;       Rutinas_de_impresion en IX.
 167+ 8F7D              ;       Puntero_de_impresion en HL.
 168+ 8F7D              ;       Impacto/Dirección en BC.
 169+ 8F7D
 170+ 8F7D CD E4 8F     17 call Almacena_disparo
 171+ 8F80 18 52            jr 6F                                             ; RET.
 172+ 8F82
 173+ 8F82              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F82              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F82              ;
 176+ 8F82              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F82              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F82              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F82
 180+ 8F82 2A DC 88     4 ld hl,(Posicion_actual)
 181+ 8F85
 182+ 8F85              ;   Amadeus o entidad ???.
 183+ 8F85
 184+ 8F85 3A 0A 89         ld a,(Ctrl_0)
 185+ 8F88 CB 77            bit 6,a
 186+ 8F8A 28 0A            jr z,11F
 187+ 8F8C
 188+ 8F8C              ; 	Dispara Amadeus.
 189+ 8F8C
 190+ 8F8C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F8E CD C8 96         call PreviousScan
 192+ 8F91 CD C8 96         call PreviousScan
 193+ 8F94
 194+ 8F94              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F94              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F94              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F94              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F94
 199+ 8F94 18 11            jr 13F
 200+ 8F96
 201+ 8F96              ; 	Dispara Entidad.
 202+ 8F96
 203+ 8F96 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F99              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F99
 206+ 8F99              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F99              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F99
 209+ 8F99 C5               push bc
 210+ 8F9A 06 10            ld b,16
 211+ 8F9C CD B9 96     12 call NextScan
 212+ 8F9F 10 FB            djnz 12B
 213+ 8FA1 C1               pop bc
 214+ 8FA2
 215+ 8FA2 CD D5 8F         call Ajusta_disparo_parte_derecha
 216+ 8FA5 18 06            jr 18F
 217+ 8FA7
 218+ 8FA7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FA7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FA7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FA7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FA7
 223+ 8FA7 CD D5 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8FAA CD 51 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FAD              ;                                                       ; _al generar el disparo.
 226+ 8FAD
 227+ 8FAD              ; LLegados a este punto tendremos:
 228+ 8FAD              ;
 229+ 8FAD              ;       Puntero_objeto_disparo en IY.
 230+ 8FAD              ;       Rutinas_de_impresion en IX.
 231+ 8FAD              ;       Puntero_de_impresion en HL.
 232+ 8FAD              ;       Impacto/Dirección en BC.
 233+ 8FAD
 234+ 8FAD CD E4 8F     18 call Almacena_disparo
 235+ 8FB0 18 22            jr 6F                                               ; RET.
 236+ 8FB2
 237+ 8FB2              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FB2
 239+ 8FB2 28 11        3 jr z,5F
 240+ 8FB4
 241+ 8FB4              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FB4              ;
 243+ 8FB4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FB4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FB4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FB4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FB4
 248+ 8FB4              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FB4              ;	   ""        ""       "f9", B="1"
 250+ 8FB4              ;	   ""        ""       "fb", B="2"
 251+ 8FB4              ; 	   ""        ""       "fb", B="3"
 252+ 8FB4
 253+ 8FB4 2A DC 88     	ld hl,(Posicion_actual)
 254+ 8FB7 CD B9 96     	call NextScan
 255+ 8FBA
 256+ 8FBA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FBA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FBA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FBA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FBA
 261+ 8FBA CD DC 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FBD
 263+ 8FBD              ; 	No se produce impacto. B="$80"
 264+ 8FBD              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FBD
 266+ 8FBD 01 80 80         ld bc,$8080
 267+ 8FC0
 268+ 8FC0              ; 	LLegados a este punto tendremos:
 269+ 8FC0              ;
 270+ 8FC0              ;       Puntero_objeto_disparo en IY.
 271+ 8FC0              ;       Rutinas_de_impresion en IX.
 272+ 8FC0              ;       Puntero_de_impresion en HL.
 273+ 8FC0              ;       Impacto/Dirección en BC.
 274+ 8FC0
 275+ 8FC0 CD E4 8F         call Almacena_disparo
 276+ 8FC3 18 0F            jr 6F                                           ; RET.
 277+ 8FC5
 278+ 8FC5              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FC5              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FC5              ;
 281+ 8FC5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FC5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FC5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FC5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FC5
 286+ 8FC5 2A DC 88     5 ld hl,(Posicion_actual)
 287+ 8FC8 CD B9 96     	call NextScan
 288+ 8FCB
 289+ 8FCB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FCB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FCB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FCB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FCB
 294+ 8FCB CD D5 8F         call Ajusta_disparo_parte_derecha
 295+ 8FCE
 296+ 8FCE              ; 	No se produce impacto. B="$80"
 297+ 8FCE              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FCE
 299+ 8FCE 01 80 80     15 ld bc,$8080
 300+ 8FD1
 301+ 8FD1              ; 	LLegados a este punto tendremos:
 302+ 8FD1              ;
 303+ 8FD1              ;       Puntero_objeto_disparo en IY.
 304+ 8FD1              ;       Rutinas_de_impresion en IX.
 305+ 8FD1              ;       Puntero_de_impresion en HL.
 306+ 8FD1              ;       Impacto/Dirección en BC.
 307+ 8FD1
 308+ 8FD1 CD E4 8F         call Almacena_disparo
 309+ 8FD4
 310+ 8FD4 C9           6 ret
 311+ 8FD5
 312+ 8FD5              ; ----------------------------------------------------------------
 313+ 8FD5              ;
 314+ 8FD5              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FD5              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FD5              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FD5
 318+ 8FD5 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FD6 FE 02            cp 2
 320+ 8FD8 38 01            jr c,1F
 321+ 8FDA 23               inc hl
 322+ 8FDB C9           1 ret
 323+ 8FDC
 324+ 8FDC 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FDD FE 01        	cp 1
 326+ 8FDF 20 01        	jr nz,1F
 327+ 8FE1 2B           	dec hl
 328+ 8FE2 2B           1 dec hl
 329+ 8FE3 C9               ret
 330+ 8FE4
 331+ 8FE4              ; ----------------------------------------------------------------
 332+ 8FE4              ;
 333+ 8FE4              ;   25/02/23
 334+ 8FE4              ;
 335+ 8FE4              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FE4              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FE4              ;
 338+ 8FE4              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FE4              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FE4
 341+ 8FE4              Almacena_disparo
 342+ 8FE4
 343+ 8FE4 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FE5 F1               pop af
 345+ 8FE6 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FE7
 347+ 8FE7 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FE8 E6 01            and 1
 349+ 8FEA 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FEC              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FEC              ; 	Dispara AMADEUS.
 352+ 8FEC
 353+ 8FEC              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FEC              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FEC              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FEC              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FEC
 358+ 8FEC C5               push bc
 359+ 8FED 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FF0 2A 42 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FF3 A7               and a
 362+ 8FF4 ED 42            sbc hl,bc
 363+ 8FF6 CC D2 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FF9 C1               pop bc
 365+ 8FFA 28 54            jr z,4F
 366+ 8FFC
 367+ 8FFC 2A 42 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FFF 23               inc hl
 369+ 9000 23               inc hl
 370+ 9001 22 42 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9004              ;                                                   ; _ Disparo_(+1).
 372+ 9004 18 18            jr 2F
 373+ 9006
 374+ 9006              ; Dispara una entidad.
 375+ 9006
 376+ 9006 C5           1 push bc
 377+ 9007 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 900A 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 900D A7               and a
 380+ 900E ED 42            sbc hl,bc
 381+ 9010 CC CB 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9013 C1               pop bc
 383+ 9014 28 3A            jr z,4F
 384+ 9016
 385+ 9016 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9019 23               inc hl
 387+ 901A 23               inc hl
 388+ 901B 22 40 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 901E              ;                                                   ; _ Disparo_(+1).
 390+ 901E CD 4D 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9021              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9021              ;
 393+ 9021              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9021              ;                                                     Rutinas_de_impresion en IX.
 395+ 9021              ;                                                     Puntero_de_impresion en HL.
 396+ 9021              ;                                                     Impacto/Dirección en BC.
 397+ 9021
 398+ 9021 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9022 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9023 23               inc hl                                          ; _ al siguiente.
 401+ 9024 A7               and a
 402+ 9025 20 C0            jr nz,3B
 403+ 9027
 404+ 9027 08               ex af,af
 405+ 9028 ED 73 30 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 902C F9               ld sp,hl
 407+ 902D
 408+ 902D DD E5            push ix                                         ; Rutina de impresión.
 409+ 902F F5               push af                                         ; Puntero de impresión.
 410+ 9030 FD E5            push iy                                         ; Puntero objeto.
 411+ 9032 C5               push bc                                         ; Control.
 412+ 9033
 413+ 9033 ED 7B 30 89      ld sp,(Stack)
 414+ 9037
 415+ 9037              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9037
 417+ 9037 21 1F 89     	ld hl,Ctrl_1
 418+ 903A CB C6        	set 0,(hl)
 419+ 903C
 420+ 903C DD E5        	push ix
 421+ 903E E1               pop hl
 422+ 903F F5               push af
 423+ 9040 DD E1            pop ix
 424+ 9042
 425+ 9042 CD 16 71     	call Guarda_foto_registros
 426+ 9045
 427+ 9045 21 1F 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9048 CB 86        	res 0,(hl)
 429+ 904A
 430+ 904A              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 904A              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 904A
 433+ 904A CD D2 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 904D CD CB 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9050
 436+ 9050 C9           4 ret
 437+ 9051
 438+ 9051              ; ----------------------------------------------------------------
 439+ 9051              ;
 440+ 9051              ;   4/3/23
 441+ 9051              ;
 442+ 9051              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9051              ;   _ al generarse el disparo.
 444+ 9051              ;
 445+ 9051              ;       "$80" ..... No se produce colisión.
 446+ 9051              ;       "$81" ..... Se produce colisión.
 447+ 9051              ;
 448+ 9051              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9051              ;         _ que forman el disparo.
 450+ 9051
 451+ 9051
 452+ 9051              Comprueba_Colision
 453+ 9051
 454+ 9051              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9051
 456+ 9051 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9053 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9054
 459+ 9054 CD 8A 90         call Modifica_H_Velocidad_disparo
 460+ 9057
 461+ 9057 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9058 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 905A 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 905C
 465+ 905C 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 905E CD 7A 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9061
 468+ 9061 7B               ld a,e
 469+ 9062 E6 01            and 1
 470+ 9064 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9066              ;                                                  ; _ para activar IMPACTO.
 472+ 9066 E1               pop hl
 473+ 9067 E5               push hl
 474+ 9068 CD B9 96         call NextScan
 475+ 906B
 476+ 906B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 906C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 906E 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9070              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9070 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9072 CD 7A 90         call Bucle_2
 482+ 9075
 483+ 9075 43           1 ld b,e
 484+ 9076 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9077 FD E1            pop iy
 486+ 9079 C9               ret
 487+ 907A
 488+ 907A              ; ---------- ----------
 489+ 907A
 490+ 907A 06 02        Bucle_2 ld b,2
 491+ 907C FD 7E 00     2 ld a,(iy)
 492+ 907F A6               and (hl)
 493+ 9080 28 02            jr z,1F
 494+ 9082 1E 81            ld e,$81
 495+ 9084 23           1 inc hl
 496+ 9085 FD 23            inc iy
 497+ 9087 10 F3            djnz 2B
 498+ 9089 C9               ret
 499+ 908A
 500+ 908A              ; ---------- ----------
 501+ 908A              ;
 502+ 908A              ;   21/7/23
 503+ 908A
 504+ 908A              Modifica_H_Velocidad_disparo
 505+ 908A
 506+ 908A 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 908D FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 908F D0               ret nc                                         ; _ incrementamos H.
 509+ 9090 24               inc h
 510+ 9091
 511+ 9091 C9               ret
 512+ 9092
 513+ 9092              ; -------------------------------------------------------------------------------------------------------------
 514+ 9092              ;
 515+ 9092              ;   04/12/23
 516+ 9092              ;
 517+ 9092              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9092              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9092              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9092              ;
 521+ 9092              ;   MODIFICA: HL,DE,B y A.
 522+ 9092
 523+ 9092              Genera_coordenadas_X
 524+ 9092
 525+ 9092              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9092              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9092
 528+ 9092              ;   Limpiamos almacenes.
 529+ 9092
 530+ 9092 CD C3 90         call Limpia_Coordenadas_X
 531+ 9095
 532+ 9095              ;   Almacenamos coordenadas X.
 533+ 9095
 534+ 9095              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9095
 536+ 9095 2A 04 89         ld hl,(Puntero_de_impresion)
 537+ 9098 11 4C 89         ld de,Coordenadas_X_Entidad
 538+ 909B 06 02            ld b,2
 539+ 909D
 540+ 909D 3A E2 88         ld a,(CTRL_DESPLZ)
 541+ 90A0 A7               and a
 542+ 90A1 28 01            jr z,1F
 543+ 90A3 04               inc b
 544+ 90A4
 545+ 90A4 CD BA 90     1 call Guarda_coordenadas_X
 546+ 90A7
 547+ 90A7              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 90A7
 549+ 90A7 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 90AA 11 49 89         ld de,Coordenadas_X_Amadeus
 551+ 90AD 06 02            ld b,2
 552+ 90AF
 553+ 90AF 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 90B2 A7               and a
 555+ 90B3 28 01            jr z,2F
 556+ 90B5 04               inc b
 557+ 90B6
 558+ 90B6 CD BA 90     2 call Guarda_coordenadas_X
 559+ 90B9
 560+ 90B9              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 90B9
 562+ 90B9 C9               ret
 563+ 90BA
 564+ 90BA              ; ----- ----- ----- ----- -----
 565+ 90BA
 566+ 90BA 7D           Guarda_coordenadas_X  ld a,l
 567+ 90BB E6 1F            and $1f
 568+ 90BD 12           1 ld (de),a
 569+ 90BE 3C               inc a
 570+ 90BF 13               inc de
 571+ 90C0 10 FB            djnz 1B
 572+ 90C2 C9               ret
 573+ 90C3
 574+ 90C3 AF           Limpia_Coordenadas_X xor a
 575+ 90C4 06 06            ld b,6
 576+ 90C6 21 49 89         ld hl,Coordenadas_X_Amadeus
 577+ 90C9 77           1 ld (hl),a
 578+ 90CA 23               inc hl
 579+ 90CB 10 FC            djnz 1B
 580+ 90CD C9               ret
 581+ 90CE
 582+ 90CE              ; ----- ----- ----- ----- -----
 583+ 90CE
 584+ 90CE              Compara_coordenadas_X
 585+ 90CE
 586+ 90CE 06 03            ld b,3
 587+ 90D0 11 4E 89         ld de,Coordenadas_X_Entidad+2
 588+ 90D3
 589+ 90D3 1A               ld a,(de)
 590+ 90D4 A7               and a
 591+ 90D5 20 01            jr nz,2F
 592+ 90D7 05               dec b
 593+ 90D8
 594+ 90D8 1B           2 dec de
 595+ 90D9 1B               dec de
 596+ 90DA 21 49 89         ld hl,Coordenadas_X_Amadeus
 597+ 90DD
 598+ 90DD D5           1 push de
 599+ 90DE E5               push hl
 600+ 90DF C5               push bc
 601+ 90E0
 602+ 90E0 CD EA 90         call Comparando
 603+ 90E3
 604+ 90E3 C1               pop bc
 605+ 90E4 E1               pop hl
 606+ 90E5 D1               pop de
 607+ 90E6
 608+ 90E6 13               inc de
 609+ 90E7 10 F4            djnz 1B
 610+ 90E9
 611+ 90E9 C9               ret
 612+ 90EA
 613+ 90EA              ; ----- ----- ----- ----- -----
 614+ 90EA              ;
 615+ 90EA              ;   4/12/23
 616+ 90EA              ;
 617+ 90EA              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90EA
 619+ 90EA 06 03        Comparando ld b,3
 620+ 90EC 1A               ld a,(de)
 621+ 90ED 4E           2 ld c,(hl)
 622+ 90EE B9               cp c
 623+ 90EF 28 04            jr z,1F
 624+ 90F1 23               inc hl
 625+ 90F2 10 F9            djnz 2B
 626+ 90F4 C9               ret
 627+ 90F5
 628+ 90F5 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90F7 32 F3 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90FA 21 44 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90FD CB D6            set 2,(hl)
 632+ 90FF C9               ret
 633+ 9100
 634+ 9100              ; -----------------------------------------------------------------------
 635+ 9100              ;
 636+ 9100              ;   7/12/23
 637+ 9100              ;
 638+ 9100
 639+ 9100              Detecta_colision_nave_entidad
 640+ 9100
 641+ 9100              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9100
 643+ 9100 FD 2A DE 88      ld iy,(Puntero_objeto)
 644+ 9104 2A 04 89         ld hl,(Puntero_de_impresion)
 645+ 9107
 646+ 9107 E5               push hl
 647+ 9108
 648+ 9108              ; ----- ----- -----
 649+ 9108 1E 00            ld e,0                                         ; Indica impacto.
 650+ 910A 06 0A            ld b,10
 651+ 910C CD 3C 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 910F 7B               ld a,e
 653+ 9110 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9112 38 0E            jr c,3F
 655+ 9114
 656+ 9114              ; LLegados a este punto:
 657+ 9114              ;
 658+ 9114              ;   HAY COLISIÓN !!!!!.
 659+ 9114              ;
 660+ 9114              ;   .db (Impacto) de Amadeus a "1".
 661+ 9114              ;   SET el bit3 de (Impacto2).
 662+ 9114              ;
 663+ 9114              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9114
 665+ 9114 21 F3 88         ld hl,Impacto
 666+ 9117 36 01            ld (hl),1
 667+ 9119 21 44 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 911C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 911E CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9120
 671+ 9120 18 18            jr 1F
 672+ 9122
 673+ 9122              ; -----
 674+ 9122
 675+ 9122 E1           3 pop hl
 676+ 9123 CD B9 96         call NextScan
 677+ 9126 E5               push hl
 678+ 9127 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9128 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 912A 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 912C 30 0C            jr nc,1F
 682+ 912E              ;                                                  ; _ 2º scanline si esto es así.
 683+ 912E 10 DC            djnz 2B
 684+ 9130
 685+ 9130              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9130
 687+ 9130              ; LLegados a este punto:
 688+ 9130              ;
 689+ 9130              ;   NO HAY COLISIÓN !!!!!.
 690+ 9130              ;
 691+ 9130              ;   .db (Impacto) de Amadeus a "0".
 692+ 9130              ;   RES el bit2 de (Impacto2).
 693+ 9130              ;
 694+ 9130              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9130              ;   Lo colocamos a "0".
 696+ 9130
 697+ 9130 21 44 89         ld hl,Impacto2
 698+ 9133 CB 96            res 2,(hl)
 699+ 9135 2A 45 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9138 36 00            ld (hl),0
 701+ 913A
 702+ 913A E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 913B C9               ret
 704+ 913C
 705+ 913C               ; ---------- ----------
 706+ 913C
 707+ 913C C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 913D 3A DB 88         ld a,(Columns)
 709+ 9140 47               ld b,a
 710+ 9141 FD 7E 00     2 ld a,(iy)
 711+ 9144 BE               cp (hl)
 712+ 9145 28 01            jr z,1F
 713+ 9147
 714+ 9147 1C               inc e
 715+ 9148
 716+ 9148 23           1 inc hl
 717+ 9149 FD 23            inc iy
 718+ 914B 10 F4            djnz 2B
 719+ 914D C1               pop bc
 720+ 914E C9               ret
 721+ 914F
 722+ 914F              ; -------------------------------------------------------------------------------------------------------------
 723+ 914F              ;
 724+ 914F              ;   13/03/23
 725+ 914F              ;
 726+ 914F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 914F              ;
 728+ 914F              ;   DESTRUYE: HL,BC,DE y A.
 729+ 914F
 730+ 914F 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9152 7E               ld a,(hl)
 732+ 9153 A7               and a
 733+ 9154 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9155
 735+ 9155 44               ld b,h
 736+ 9156 4D               ld c,l
 737+ 9157 2A 38 89         ld hl,(Stack_snapshot_disparos)
 738+ 915A E5               push hl
 739+ 915B A7               and a
 740+ 915C ED 42            sbc hl,bc
 741+ 915E E5               push hl
 742+ 915F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9160
 744+ 9160 E1               pop hl
 745+ 9161 54               ld d,h
 746+ 9162 5D               ld e,l
 747+ 9163 1B               dec de
 748+ 9164 ED B8            lddr                                                ; Limpiamos.
 749+ 9166
 750+ 9166 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9169 22 38 89         ld (Stack_snapshot_disparos),hl
 752+ 916C
 753+ 916C C9               ret
 754+ 916D
 755+ 916D              ; -------------------------------------------------------------------------------------------------------------
 756+ 916D              ;
 757+ 916D              ;   18/07/23
 758+ 916D              ;
 759+ 916D
 760+ 916D              Motor_de_disparos
 761+ 916D
 762+ 916D              ; Gestiona DISPAROS DE AMADEUS.
 763+ 916D
 764+ 916D 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9170 2A 42 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9173
 767+ 9173 CD 4D 8D     2 call Extrae_address
 768+ 9176 7E               ld a,(hl)
 769+ 9177 A7               and a
 770+ 9178 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 917A
 772+ 917A              ; ----- ----- ----- ----- ----- -----
 773+ 917A
 774+ 917A C5               push bc
 775+ 917B CD 3F 92         call foto_disparo_a_borrar
 776+ 917E
 777+ 917E              ; Existe colisión con este disparo???
 778+ 917E
 779+ 917E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 917F 7E               ld a,(hl)
 781+ 9180 2B               dec hl
 782+ 9181 E6 01            and 1
 783+ 9183 28 1D            jr z,9F
 784+ 9185
 785+ 9185              ;   En este punto:
 786+ 9185              ;
 787+ 9185              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9185              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9185              ;   _con la entidad).
 790+ 9185              ;
 791+ 9185              ;   Disparo_2A defw 0                                ; Control.
 792+ 9185              ;    defw 0                                          ; Puntero objeto.
 793+ 9185              ;    defw 0                                          ; Puntero de impresión.
 794+ 9185              ;    defw 0                                          ; Rutina de impresión.
 795+ 9185
 796+ 9185 E5               push hl
 797+ 9186
 798+ 9186 06 04            ld b,4
 799+ 9188 23           19 inc hl
 800+ 9189 10 FD            djnz 19B
 801+ 918B
 802+ 918B CD 4D 8D         call Extrae_address
 803+ 918E CD 8C 9D         call Genera_coordenadas_disparo
 804+ 9191
 805+ 9191              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9191
 807+ 9191 21 47 89         ld hl,Coordenadas_disparo_certero
 808+ 9194 72               ld (hl),d
 809+ 9195 23               inc hl
 810+ 9196 73               ld (hl),e
 811+ 9197
 812+ 9197              ; Elimino el disparo de la base de datos.
 813+ 9197
 814+ 9197 E1               pop hl
 815+ 9198 CD BE 92         call Elimina_disparo_de_base_de_datos
 816+ 919B 21 44 89         ld hl,Impacto2
 817+ 919E CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 91A0
 819+ 91A0 18 06            jr 11F
 820+ 91A2
 821+ 91A2 CD 68 92     9 call Mueve_disparo
 822+ 91A5 CD 3F 92         call foto_disparo_a_borrar
 823+ 91A8
 824+ 91A8 C1           11 pop bc
 825+ 91A9 18 04            jr 7F
 826+ 91AB
 827+ 91AB              ; ----- ----- ----- ----- ----- -----
 828+ 91AB
 829+ 91AB ED 42        1 sbc hl,bc
 830+ 91AD 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 91AF
 832+ 91AF 2A 42 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 91B2 23               inc hl
 834+ 91B3 23               inc hl
 835+ 91B4 22 42 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 91B7 18 BA            jr 2B
 837+ 91B9
 838+ 91B9 CD D2 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 91BC              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 91BC
 841+ 91BC              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 91BC
 843+ 91BC 01 6A 85         ld bc,Disparo_11
 844+ 91BF 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 91C2
 846+ 91C2 CD 4D 8D     5 call Extrae_address
 847+ 91C5 7E               ld a,(hl)
 848+ 91C6 A7               and a
 849+ 91C7 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 91C9
 851+ 91C9              ; ----- ----- ----- ----- ----- -----
 852+ 91C9
 853+ 91C9 C5               push bc
 854+ 91CA CD 3F 92         call foto_disparo_a_borrar
 855+ 91CD
 856+ 91CD              ; Existe colisión con este disparo???
 857+ 91CD
 858+ 91CD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 91CE 7E               ld a,(hl)
 860+ 91CF 2B               dec hl
 861+ 91D0 E6 01            and 1
 862+ 91D2 28 4D            jr z,10F
 863+ 91D4
 864+ 91D4              ;! La colisión se produce con Amadeus???
 865+ 91D4              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91D4
 867+ 91D4 E5               push hl
 868+ 91D5
 869+ 91D5 06 04            ld b,4
 870+ 91D7 23           16 inc hl
 871+ 91D8 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91DA
 873+ 91DA CD 4D 8D         call Extrae_address
 874+ 91DD CD 8C 9D         call Genera_coordenadas_disparo
 875+ 91E0
 876+ 91E0 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91E1 FE 16            cp $16
 878+ 91E3 38 2A            jr c,15F
 879+ 91E5
 880+ 91E5
 881+ 91E5              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91E5
 883+ 91E5 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91E6
 885+ 91E6              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91E6
 887+ 91E6 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91E9
 889+ 91E9              ; Coordenada X de Amadeus en D.
 890+ 91E9
 891+ 91E9 7D               ld a,l
 892+ 91EA E6 1F            and $1F
 893+ 91EC 57               ld d,a
 894+ 91ED
 895+ 91ED 21 86 85         ld hl,Amadeus_db+8
 896+ 91F0 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91F1
 898+ 91F1 21 49 89         ld hl,Coordenadas_X_Amadeus
 899+ 91F4 CD BA 90         call Guarda_coordenadas_X
 900+ 91F7
 901+ 91F7 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91F8
 903+ 91F8              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91F8
 905+ 91F8 06 02            ld b,2
 906+ 91FA C5           20 push bc
 907+ 91FB
 908+ 91FB 06 03            ld b,3
 909+ 91FD 21 49 89         ld hl,Coordenadas_X_Amadeus
 910+ 9200 7E           18 ld a,(hl)
 911+ 9201 BA               cp d
 912+ 9202 20 04            jr nz,17F
 913+ 9204
 914+ 9204              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9204
 916+ 9204 C1               pop bc
 917+ 9205 E1               pop hl
 918+ 9206 18 0D            jr 14F
 919+ 9208
 920+ 9208 23           17 inc hl
 921+ 9209 10 F5            djnz 18B
 922+ 920B
 923+ 920B 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 920C
 925+ 920C C1               pop bc
 926+ 920D 10 EB            djnz 20B
 927+ 920F
 928+ 920F
 929+ 920F              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 920F              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 920F
 932+ 920F E1           15 pop hl
 933+ 9210 23               inc hl
 934+ 9211 35               dec (hl)
 935+ 9212 2B               dec hl
 936+ 9213 18 0C            jr 10F
 937+ 9215
 938+ 9215              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9215              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9215
 941+ 9215 E5           14 push hl
 942+ 9216 CD BE 92         call Elimina_disparo_de_base_de_datos
 943+ 9219 21 44 89         ld hl,Impacto2
 944+ 921C CB CE            set 1,(hl)
 945+ 921E E1               pop hl
 946+ 921F 18 06            jr 12F
 947+ 9221
 948+ 9221              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9221
 950+ 9221 CD 68 92     10 call Mueve_disparo
 951+ 9224 CD 3F 92         call foto_disparo_a_borrar
 952+ 9227 C1           12 pop bc
 953+ 9228
 954+ 9228 18 04            jr 8F
 955+ 922A
 956+ 922A              ; ----- ----- ----- ----- ----- -----
 957+ 922A
 958+ 922A ED 42        4 sbc hl,bc
 959+ 922C 28 0A            jr z,6F
 960+ 922E
 961+ 922E 2A 40 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9231 23               inc hl
 963+ 9232 23               inc hl
 964+ 9233 22 40 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9236 18 8A            jr 5B
 966+ 9238
 967+ 9238 CD CB 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 923B CD C3 90         call Limpia_Coordenadas_X
 969+ 923E C9               ret
 970+ 923F
 971+ 923F              ; ------------------------------------------------------------------
 972+ 923F
 973+ 923F              foto_disparo_a_borrar
 974+ 923F
 975+ 923F 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9240 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9241 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9242
 979+ 9242 E5               push hl
 980+ 9243 23               inc hl
 981+ 9244 23               inc hl
 982+ 9245 ED 73 30 89      ld (Stack),sp
 983+ 9249 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 924A FD E1            pop iy
 985+ 924C DD E1            pop ix
 986+ 924E E1               pop hl
 987+ 924F ED 7B 30 89      ld sp,(Stack)
 988+ 9253 3A 1F 89         ld a,(Ctrl_1)
 989+ 9256 CB C7            set 0,a
 990+ 9258 32 1F 89         ld (Ctrl_1),a
 991+ 925B CD 16 71         call Guarda_foto_registros
 992+ 925E 3A 1F 89         ld a,(Ctrl_1)
 993+ 9261 CB 87            res 0,a
 994+ 9263 32 1F 89         ld (Ctrl_1),a
 995+ 9266 E1               pop hl
 996+ 9267 C9               ret
 997+ 9268
 998+ 9268              ;---------------------------------------------------
 999+ 9268              ;
1000+ 9268              ;   18/07/23
1001+ 9268              ;
1002+ 9268
1003+ 9268              Mueve_disparo
1004+ 9268
1005+ 9268              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9268              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9268              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9268
1009+ 9268 E5               push hl
1010+ 9269
1011+ 9269 7E               ld a,(hl)
1012+ 926A
1013+ 926A 06 04            ld b,4
1014+ 926C 23           1 inc hl
1015+ 926D 10 FD            djnz 1B
1016+ 926F
1017+ 926F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 926F
1019+ 926F CD 4D 8D         call Extrae_address
1020+ 9272
1021+ 9272 E6 01            and 1
1022+ 9274 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9276
1024+ 9276              ; Disparo hacia arriba, (Amadeus).
1025+ 9276
1026+ 9276              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9276              ; _ de la dificultad.
1028+ 9276
1029+ 9276 CD C8 96         call PreviousScan
1030+ 9279 CD C8 96         call PreviousScan
1031+ 927C CD C8 96         call PreviousScan
1032+ 927F CD C8 96         call PreviousScan
1033+ 9282
1034+ 9282              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9282
1036+ 9282 7C               ld a,h
1037+ 9283 FE 40            cp $40
1038+ 9285 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9287
1040+ 9287              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9287
1042+ 9287 EB               ex de,hl
1043+ 9288 06 04            ld b,4
1044+ 928A 2B           6 dec hl
1045+ 928B 10 FD            djnz 6B
1046+ 928D
1047+ 928D CD BE 92         call Elimina_disparo_de_base_de_datos
1048+ 9290 E1               pop hl
1049+ 9291 18 10            jr 7F
1050+ 9293
1051+ 9293              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9293              ; HL contiene el puntero de impresión del disparo.
1053+ 9293              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9293
1055+ 9293 D5           3 push de
1056+ 9294 C5               push bc
1057+ 9295
1058+ 9295 CD 51 90         call Comprueba_Colision
1059+ 9298
1060+ 9298              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9298
1062+ 9298 78               ld a,b
1063+ 9299
1064+ 9299 C1               pop bc
1065+ 929A D1               pop de
1066+ 929B
1067+ 929B EB               ex de,hl
1068+ 929C
1069+ 929C 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 929D 23               inc hl                                      ; _ movimiento.
1071+ 929E 72               ld (hl),d
1072+ 929F
1073+ 929F E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 92A0
1075+ 92A0 23               inc hl                                      ; _ en curso.
1076+ 92A1 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 92A2 2B               dec hl
1078+ 92A3
1079+ 92A3 C9           7 ret
1080+ 92A4
1081+ 92A4              ; Disparo hacia abajo, (Entidad).
1082+ 92A4
1083+ 92A4 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 92A7 47               ld b,a
1085+ 92A8
1086+ 92A8 CD B9 96     4 call NextScan
1087+ 92AB 10 FB            djnz 4B
1088+ 92AD
1089+ 92AD              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 92AD
1091+ 92AD 7C               ld a,h
1092+ 92AE FE 58            cp $58
1093+ 92B0 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 92B2
1095+ 92B2 EB               ex de,hl
1096+ 92B3 06 04            ld b,4
1097+ 92B5 2B           5 dec hl
1098+ 92B6 10 FD            djnz 5B
1099+ 92B8
1100+ 92B8 CD BE 92         call Elimina_disparo_de_base_de_datos
1101+ 92BB E1               pop hl
1102+ 92BC 18 E5            jr 7B
1103+ 92BE
1104+ 92BE              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 92BE
1106+ 92BE 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 92C1 AF               xor a
1108+ 92C2 77               ld (hl),a
1109+ 92C3 54               ld d,h
1110+ 92C4 5D               ld e,l
1111+ 92C5 13               inc de
1112+ 92C6 ED B0            ldir
1113+ 92C8 C9               ret
1114+ 92C9
1115+ 92C9              ; -----------------------------------------------------------------
1116+ 92C9              ;
1117+ 92C9              ;   7/12/23
1118+ 92C9              ;
1119+ 92C9
1120+ 92C9 3A 44 89     Selector_de_impactos ld a,(Impacto2)
1121+ 92CC A7               and a
1122+ 92CD C8               ret z
1123+ 92CE
1124+ 92CE              ; Analizamos si hay impacto por disparos.
1125+ 92CE
1126+ 92CE              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 92CE
1128+ 92CE CB 4F            bit 1,a
1129+ 92D0 28 07            jr z,1F
1130+ 92D2
1131+ 92D2 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92D5 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92D7 18 08            jr 2F
1134+ 92D9
1135+ 92D9 CB 47        1 bit 0,a
1136+ 92DB C8               ret z
1137+ 92DC
1138+ 92DC              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92DC
1140+ 92DC 21 1F 89         ld hl,Ctrl_1
1141+ 92DF CB D6            set 2,(hl)
1142+ 92E1
1143+ 92E1 C9           2 ret
1144+ 92E2
1145+ 92E2              ; -----------------------------------------------------------------
1146+ 92E2              ;
1147+ 92E2              ;   25/04/23
1148+ 92E2              ;
1149+ 92E2
1150+ 92E2              Determina_resultado_comparativa
1151+ 92E2
1152+ 92E2              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92E2              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92E2              ;
1155+ 92E2              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92E2              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92E2              ;
1158+ 92E2              ;   SBC HL,DE
1159+ 92E2
1160+ 92E2              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92E2              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92E2
1163+ 92E2              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92E2              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92E2
1166+ 92E2
1167+ 92E2 3A EE 88         ld a,(Cuad_objeto)
1168+ 92E5 FE 02            cp 2
1169+ 92E7 28 26            jr z,2F
1170+ 92E9 38 24            jr c,2F
1171+ 92EB
1172+ 92EB              ; Cuadrantes 3º y 4º
1173+ 92EB
1174+ 92EB E6 01            and 1
1175+ 92ED 28 10            jr z,4F
1176+ 92EF
1177+ 92EF              ; Cuadrante 3º
1178+ 92EF
1179+ 92EF 7C               ld a,h
1180+ 92F0 06 00            ld b,0
1181+ 92F2
1182+ 92F2 CD 7D 93         call Compara_cositas_H3
1183+ 92F5
1184+ 92F5 04               inc b
1185+ 92F6 05               dec b
1186+ 92F7 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92F8
1188+ 92F8 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92F9 06 00            ld b,0
1190+ 92FB
1191+ 92FB CD 8F 93         call Compara_cositas_L3
1192+ 92FE C9               ret
1193+ 92FF
1194+ 92FF              ; Cuadrante 4º
1195+ 92FF
1196+ 92FF 7C           4 ld a,h
1197+ 9300 06 00            ld b,0
1198+ 9302
1199+ 9302 CD A1 93         call Compara_cositas_H4
1200+ 9305
1201+ 9305 04               inc b
1202+ 9306 05               dec b
1203+ 9307 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9308
1205+ 9308 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9309 06 00            ld b,0
1207+ 930B
1208+ 930B CD B7 93         call Compara_cositas_L4
1209+ 930E C9               ret
1210+ 930F
1211+ 930F              ; Cuadrantes 1º y 2º.
1212+ 930F
1213+ 930F 28 10        2 jr z,3F
1214+ 9311
1215+ 9311              ; 1er Cuadrante
1216+ 9311
1217+ 9311 7C               ld a,h
1218+ 9312 06 00            ld b,0
1219+ 9314
1220+ 9314 CD 55 93         call Compara_cositas_H1
1221+ 9317
1222+ 9317 04               inc b
1223+ 9318 05               dec b
1224+ 9319 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 931A
1226+ 931A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 931B 06 00            ld b,0
1228+ 931D
1229+ 931D CD 6B 93         call Compara_cositas_L1
1230+ 9320 C9               ret
1231+ 9321
1232+ 9321
1233+ 9321              ; 2º Cuadrante
1234+ 9321
1235+ 9321 7C           3 ld a,h
1236+ 9322 06 00            ld b,0
1237+ 9324
1238+ 9324 CD 31 93         call Compara_cositas_H2
1239+ 9327
1240+ 9327 04               inc b
1241+ 9328 05               dec b
1242+ 9329 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 932A
1244+ 932A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 932B 06 00            ld b,0
1246+ 932D
1247+ 932D CD 43 93         call Compara_cositas_L2
1248+ 9330 C9               ret
1249+ 9331
1250+ 9331 A7           Compara_cositas_H2 and a
1251+ 9332 28 0D            jr z,1F
1252+ 9334              ;    cp $fd
1253+ 9334              ;    jr z,1F
1254+ 9334              ;    cp $fe
1255+ 9334              ;    jr z,1F
1256+ 9334 FE FF            cp $ff
1257+ 9336 28 09            jr z,1F
1258+ 9338 FE 01            cp $01
1259+ 933A 28 05            jr z,1F
1260+ 933C FE 02            cp $02
1261+ 933E 28 01            jr z,1F
1262+ 9340 C0               ret nz
1263+ 9341 04           1 inc b
1264+ 9342 C9               ret
1265+ 9343
1266+ 9343 A7           Compara_cositas_L2 and a
1267+ 9344 28 0D            jr z,1F
1268+ 9346              ;    cp $fd
1269+ 9346              ;    jr z,1F
1270+ 9346 FE FE            cp $fe
1271+ 9348 28 09            jr z,1F
1272+ 934A FE FF            cp $ff
1273+ 934C 28 05            jr z,1F
1274+ 934E FE 01            cp $01
1275+ 9350 28 01            jr z,1F
1276+ 9352              ;    cp $02
1277+ 9352              ;    jr z,1F
1278+ 9352 C0               ret nz
1279+ 9353 04           1 inc b
1280+ 9354 C9               ret
1281+ 9355
1282+ 9355 A7           Compara_cositas_H1 and a
1283+ 9356 28 11            jr z,1F
1284+ 9358              ;    cp $fd
1285+ 9358              ;    jr z,1F
1286+ 9358              ;    cp $fe
1287+ 9358              ;    jr z,1F
1288+ 9358 FE FF            cp $ff
1289+ 935A 28 0D            jr z,1F
1290+ 935C FE 01            cp $01
1291+ 935E 28 09            jr z,1F
1292+ 9360 FE 02            cp $02
1293+ 9362 28 05            jr z,1F
1294+ 9364 FE 03            cp $03
1295+ 9366 28 01            jr z,1F
1296+ 9368 C0               ret nz
1297+ 9369 04           1 inc b
1298+ 936A C9               ret
1299+ 936B
1300+ 936B A7           Compara_cositas_L1 and a
1301+ 936C 28 0D            jr z,1F
1302+ 936E              ;    cp $fd
1303+ 936E              ;    jr z,1F
1304+ 936E              ;    cp $fe
1305+ 936E              ;    jr z,1F
1306+ 936E              ;    cp $ff
1307+ 936E              ;    jr z,1F
1308+ 936E FE 01            cp $01
1309+ 9370 28 09            jr z,1F
1310+ 9372 FE 02            cp $02
1311+ 9374 28 05            jr z,1F
1312+ 9376 FE 03            cp $03
1313+ 9378 28 01            jr z,1F
1314+ 937A C0               ret nz
1315+ 937B 04           1 inc b
1316+ 937C C9               ret
1317+ 937D
1318+ 937D A7           Compara_cositas_H3 and a
1319+ 937E 28 0D            jr z,1F
1320+ 9380              ;    cp $fd
1321+ 9380              ;    jr z,1F
1322+ 9380 FE FE            cp $fe
1323+ 9382 28 09            jr z,1F
1324+ 9384 FE FF            cp $ff
1325+ 9386 28 05            jr z,1F
1326+ 9388 FE 01            cp $01
1327+ 938A 28 01            jr z,1F
1328+ 938C              ;    cp $02
1329+ 938C              ;    jr z,1F
1330+ 938C              ;    cp $03
1331+ 938C              ;    jr z,1F
1332+ 938C C0               ret nz
1333+ 938D 04           1 inc b
1334+ 938E C9               ret
1335+ 938F
1336+ 938F A7           Compara_cositas_L3 and a
1337+ 9390 28 0D            jr z,1F
1338+ 9392              ;    cp $fd
1339+ 9392              ;    jr z,1F
1340+ 9392              ;    cp $fe
1341+ 9392              ;    jr z,1F
1342+ 9392              ;    cp $ff
1343+ 9392              ;    jr z,1F
1344+ 9392 FE 01            cp $01
1345+ 9394 28 09            jr z,1F
1346+ 9396 FE 02            cp $02
1347+ 9398 28 05            jr z,1F
1348+ 939A FE 03            cp $03
1349+ 939C 28 01            jr z,1F
1350+ 939E C0               ret nz
1351+ 939F 04           1 inc b
1352+ 93A0 C9               ret
1353+ 93A1
1354+ 93A1 A7           Compara_cositas_H4 and a
1355+ 93A2 28 11            jr z,1F
1356+ 93A4 FE FD            cp $fd
1357+ 93A6 28 0D            jr z,1F
1358+ 93A8 FE FE            cp $fe
1359+ 93AA 28 09            jr z,1F
1360+ 93AC FE FF            cp $ff
1361+ 93AE 28 05            jr z,1F
1362+ 93B0 FE 01            cp $01
1363+ 93B2 28 01            jr z,1F
1364+ 93B4              ;    cp $02
1365+ 93B4              ;    jr z,1F
1366+ 93B4              ;    cp $03
1367+ 93B4              ;    jr z,1F
1368+ 93B4 C0               ret nz
1369+ 93B5 04           1 inc b
1370+ 93B6 C9               ret
1371+ 93B7
1372+ 93B7 A7           Compara_cositas_L4 and a
1373+ 93B8 28 0D            jr z,1F
1374+ 93BA              ;    cp $fd
1375+ 93BA              ;    jr z,1F
1376+ 93BA FE FE            cp $fe
1377+ 93BC 28 09            jr z,1F
1378+ 93BE FE FF            cp $ff
1379+ 93C0 28 05            jr z,1F
1380+ 93C2 FE 01            cp $01
1381+ 93C4 28 01            jr z,1F
1382+ 93C6              ;    cp $02
1383+ 93C6              ;    jr z,1F
1384+ 93C6              ;    cp $03
1385+ 93C6              ;    jr z,1F
1386+ 93C6 C0               ret nz
1387+ 93C7 04           1 inc b
1388+ 93C8 C9               ret
# file closed: Disparo.asm
1834  93C9              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93C9              ; ******************************************************************************************************************************************************************************************
   2+ 93C9              ;
   3+ 93C9              ; 26/06/23
   4+ 93C9              ;
   5+ 93C9              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93C9
   7+ 93C9              Draw
   8+ 93C9
   9+ 93C9 CD AD 96     	call Prepara_draw
  10+ 93CC 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 93CD A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 93CE 28 05        	jr z,2F
  13+ 93D0
  14+ 93D0 3A EE 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93D3 18 0C        	jr 1F
  16+ 93D5
  17+ 93D5 2A EC 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93D8 22 DC 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93DB CD 6A 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93DE              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93DE CD 1D A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93E1
  23+ 93E1 3A 0A 89     1 ld a,(Ctrl_0)
  24+ 93E4 CB 6F        	bit 5,a
  25+ 93E6 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93E8
  27+ 93E8 CD 00 94     	call Comprueba_limite_horizontal
  28+ 93EB CD 90 94     	call Comprueba_limite_vertical
  29+ 93EE
  30+ 93EE              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93EE              ; -----------------------
  32+ 93EE              ; -----------------------
  33+ 93EE              ; -----------------------
  34+ 93EE
  35+ 93EE CD DD 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93F1 CD 14 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93F4 CD 73 96     	call Define_rutina_de_impresion
  38+ 93F7
  39+ 93F7 3A 0A 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93FA CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93FC 32 0A 89     	ld (Ctrl_0),a
  42+ 93FF
  43+ 93FF C9           	ret
  44+ 9400
  45+ 9400              ; *******************************************************************************************************************************************************************************************
  46+ 9400              ;	21/01/23
  47+ 9400              ;
  48+ 9400              ; 	Comprueba_limite_horizontal.
  49+ 9400              ;
  50+ 9400              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9400              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9400              ;
  53+ 9400              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9400              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9400              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9400              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9400
  58+ 9400
  59+ 9400
  60+ 9400 3A 0A 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9403 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9405 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9407 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9409 32 0A 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 940C 18 09            jr 6F
  66+ 940E CB 5F        1 bit 3,a
  67+ 9410 28 0A            jr z,2F
  68+ 9412 E6 F7            and $f7
  69+ 9414 32 0A 89         ld (Ctrl_0),a
  70+ 9417 CD 6A 95     6 call Inicializacion
  71+ 941A 18 5B            jr 5F
  72+ 941C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 941D
  74+ 941D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 941D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 941D
  77+ 941D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 941E 2A 18 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9421 CD CC 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9424 67           	ld h,a
  81+ 9425 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9426 CD CC 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9429 67           	ld h,a
  84+ 942A A7           	and a
  85+ 942B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 942D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 942E 3A EE 88     	ld a,(Cuad_objeto)
  88+ 9431 FE 02        	cp 2
  89+ 9433 38 1E        	jr c,3F
  90+ 9435 28 1C        	jr z,3F
  91+ 9437 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9438 28 23            jr z,7F
  93+ 943A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 943C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 943E E1           	pop hl
  96+ 943F
  97+ 943F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 943F              ; _para indicar con E="2" en caso necesario.
  99+ 943F
 100+ 943F E5               push hl
 101+ 9440 C5               push bc
 102+ 9441 CD CC 99     	call calcula_tercio
 103+ 9444 FE 01        	cp 1
 104+ 9446 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9448 CD 78 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 944B 28 26            jr z,9F
 107+ 944D 38 24            jr c,9F
 108+ 944F 1E 00        11 ld e,0
 109+ 9451 18 22            jr 8F
 110+ 9453 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9454 28 07        	jr z, 7F
 112+ 9456 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9458 1E 00         	ld e,0
 114+ 945A E1           	pop hl
 115+ 945B 18 04        	jr 4F
 116+ 945D 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 945F 18 15            jr 10F
 118+ 9461
 119+ 9461              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9461              ; _para indicar con E="2" en caso necesario.
 121+ 9461
 122+ 9461 E5           4 push hl
 123+ 9462 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9463 CD CC 99     	call calcula_tercio
 125+ 9466 FE 01        	cp 1
 126+ 9468 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 946A CD 78 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 946D 28 04            jr z,9F
 129+ 946F 30 02            jr nc,9F
 130+ 9471 18 02        	jr 8F
 131+ 9473 1E 02        9 ld e,2
 132+ 9475 C1           8 pop bc
 133+ 9476 E1           10 pop hl
 134+ 9477 C9           5 ret
 135+ 9478
 136+ 9478              ; --------------------
 137+ 9478              ;
 138+ 9478              ; 25/08/22
 139+ 9478
 140+ 9478 CD CC 99     Comprueba_centro call calcula_tercio
 141+ 947B 67               ld h,a
 142+ 947C 08           	ex af,af
 143+ 947D FE 02        	cp 2
 144+ 947F 38 07        	jr c,1F
 145+ 9481 28 05        	jr z,1F
 146+ 9483 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9486 18 03        	jr 2F
 148+ 9488 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 948B 08           2 ex af,af
 150+ 948C A7               and a
 151+ 948D ED 42            sbc hl,bc
 152+ 948F C9               ret
 153+ 9490
 154+ 9490              ; *********************************************************************************************************************************************************************************************
 155+ 9490              ;
 156+ 9490              ;   16/8/22
 157+ 9490              ;
 158+ 9490              ;	Comprueba_limite_vertical
 159+ 9490              ;
 160+ 9490              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9490              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9490              ;
 163+ 9490
 164+ 9490 2A DC 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9493 7D           	ld a,l
 166+ 9494 E6 1F        	and $1F
 167+ 9496 57           	ld d,a
 168+ 9497 3A 1A 89     	ld a,(Limite_vertical)
 169+ 949A BA           	cp d 											; Límite - Posición.
 170+ 949B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 949C 3A EE 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 949F CB 47        	bit 0,a
 173+ 94A1 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 94A3
 175+ 94A3              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 94A3
 177+ 94A3 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 94A4 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 94A6
 180+ 94A6              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 94A6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 94A6
 183+ 94A6 3A E0 88         ld a,(Coordenada_X)
 184+ 94A9 16 0F            ld d,Centro_izquierda
 185+ 94AB A7               and a
 186+ 94AC 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 94AD 28 1E            jr z,3F
 188+ 94AF 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 94B1              ;                                                    ; _salimos sin modificar nada.
 190+ 94B1 18 0E            jr 2F
 191+ 94B3 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 94B4 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 94B6
 194+ 94B6              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 94B6              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 94B6
 197+ 94B6 3A E0 88         ld a,(Coordenada_X)
 198+ 94B9 16 10            ld d,Centro_derecha
 199+ 94BB A7               and a
 200+ 94BC 92               sub d
 201+ 94BD 28 0E            jr z,3F
 202+ 94BF 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 94C1              ;                                                    ; _salimos sin modificar nada.
 204+ 94C1 CB 43        2 bit 0,e
 205+ 94C3 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 94C5 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 94C6 CD 5A 95         call Modificaccionne
 208+ 94C9 C1           	pop bc
 209+ 94CA CD 6A 95         call Inicializacion
 210+ 94CD C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 94CE
 212+ 94CE              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 94CE
 214+ 94CE C5           4 push bc
 215+ 94CF 01 DB 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94D2 0A           	ld a,(bc)
 217+ 94D3 3D           	dec a
 218+ 94D4 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94D5 7D           	ld a,l
 220+ 94D6 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94D7 CB 47        	bit 0,a
 222+ 94D9 28 03        	jr z,5F
 223+ 94DB 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94DC 18 2E        	jr 7F
 225+ 94DE
 226+ 94DE              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94DE
 228+ 94DE 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94DF F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94E0 3A 0A 89     	ld a,(Ctrl_0)
 231+ 94E3 CB 4F        	bit 1,a
 232+ 94E5 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94E7 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94E8
 235+ 94E8              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94E8
 237+ 94E8 1C               inc e
 238+ 94E9 1D               dec e
 239+ 94EA 20 07            jr nz,12F
 240+ 94EC 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94ED 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94EE 22 DC 88     	ld (Posicion_actual),hl
 243+ 94F1 18 44        13 jr 9F
 244+ 94F3 CB 43        12 bit 0,e
 245+ 94F5 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94F7              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94F7 C1           	pop bc
 248+ 94F8 18 D3        	jr 3B
 249+ 94FA 80           14 add b
 250+ 94FB 6F               ld l,a
 251+ 94FC 22 DC 88     	ld (Posicion_actual),hl
 252+ 94FF CD 5A 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9502 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9504 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9506 32 0A 89         ld (Ctrl_0),a
 256+ 9509 F1           	pop af
 257+ 950A 18 2B        	jr 9F
 258+ 950C
 259+ 950C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 950C
 261+ 950C F5           7 push af
 262+ 950D 3A 0A 89     	ld a,(Ctrl_0)
 263+ 9510 CB 47        	bit 0,a
 264+ 9512 20 1D        	jr nz,8F
 265+ 9514 F1           	pop af
 266+ 9515
 267+ 9515              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9515
 269+ 9515 1C           	inc e
 270+ 9516 1D               dec e
 271+ 9517 20 07            jr nz,10F
 272+ 9519 90           	sub b
 273+ 951A 6F               ld l,a
 274+ 951B 22 DC 88     	ld (Posicion_actual),hl
 275+ 951E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9520              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9520 CB 43        10 bit 0,e
 278+ 9522 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9524              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9524 C1           	pop bc
 281+ 9525 18 A6        	jr 3B
 282+ 9527 90           16 sub b
 283+ 9528 6F               ld l,a
 284+ 9529 22 DC 88     	ld (Posicion_actual),hl
 285+ 952C CD 5A 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 952F 18 06            jr 9F
 287+ 9531 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9533 32 0A 89         ld (Ctrl_0),a
 289+ 9536 F1           	pop af
 290+ 9537 C1           9 pop bc
 291+ 9538 1E 00        	ld e,0
 292+ 953A CD 6A 95         call Inicializacion
 293+ 953D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 953E 08           	ex af,af
 295+ 953F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9540 18 8B            jr 3B
 297+ 9542
 298+ 9542              ; --------------------
 299+ 9542
 300+ 9542 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9544 CD C8 96     1 call PreviousScan
 302+ 9547 10 FB            djnz 1B
 303+ 9549 22 DC 88     	ld (Posicion_actual),hl
 304+ 954C AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 954D C9           	ret
 306+ 954E
 307+ 954E              ; --------------------
 308+ 954E
 309+ 954E 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9550 CD B9 96     1 call NextScan
 311+ 9553 10 FB            djnz 1B
 312+ 9555 22 DC 88     	ld (Posicion_actual),hl
 313+ 9558 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9559 C9           	ret
 315+ 955A
 316+ 955A              ; --------------------
 317+ 955A              ;
 318+ 955A              ;	22/01/23
 319+ 955A              ;
 320+ 955A              ;	E="1". Hemos cambiado de cuadrante.
 321+ 955A              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 955A              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 955A
 324+ 955A
 325+ 955A              Modificaccionne
 326+ 955A
 327+ 955A 3A EE 88     	ld a,(Cuad_objeto)
 328+ 955D FE 02        	cp 2
 329+ 955F CC 42 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9562 DC 42 95         call c,Modifica_Pos_actual
 331+ 9565 C8           	ret z
 332+ 9566 CD 4E 95         call Modifica_Pos_actual2
 333+ 9569 C9               ret
 334+ 956A
 335+ 956A              ; *************************************************************************************************************************************************************************************************
 336+ 956A              ;
 337+ 956A              ;	13/8/22
 338+ 956A              ;
 339+ 956A              ;	Inicializacion
 340+ 956A              ;
 341+ 956A              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 956A              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 956A              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 956A              ;
 345+ 956A              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 956A              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 956A              ;	_ desaparece/aparece.
 348+ 956A
 349+ 956A              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 956A              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 956A              ;
 352+ 956A              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 956A              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 956A              ; 		   [E] ="0"
 355+ 956A
 356+ 956A              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 956A
 358+ 956A CD CC 99     Inicializacion call calcula_tercio
 359+ 956D 28 36        	jr z,primit
 360+ 956F E6 02        	and 2
 361+ 9571 20 07        	jr nz,segmit
 362+ 9573 7D           	ld a,l
 363+ 9574 FE 7F        	cp $7f
 364+ 9576 38 2D        	jr c,primit
 365+ 9578 28 2B        	jr z,primit
 366+ 957A CD D7 95     segmit call column
 367+ 957D 38 13        	jr c,tercuad
 368+ 957F 3E 04        cuarcuad ld a,4
 369+ 9581 32 EE 88     	ld (Cuad_objeto),a
 370+ 9584 21 20 48     	ld hl,$4820
 371+ 9587 22 18 89     	ld (Limite_horizontal),hl
 372+ 958A 21 1A 89     	ld hl,Limite_vertical
 373+ 958D 36 0D        	ld (hl),$0d
 374+ 958F 08           	ex af,af
 375+ 9590 18 3C        	jr 1F
 376+ 9592              tercuad
 377+ 9592 3E 03        	ld a,3
 378+ 9594 32 EE 88     	ld (Cuad_objeto),a
 379+ 9597 21 20 48     	ld hl,$4820
 380+ 959A 22 18 89     	ld (Limite_horizontal),hl
 381+ 959D 21 1A 89     	ld hl,Limite_vertical
 382+ 95A0 36 12        	ld (hl),$12
 383+ 95A2 08           	ex af,af
 384+ 95A3 18 29        	jr 1F
 385+ 95A5 CD D7 95     primit call column
 386+ 95A8 38 13        	jr c, primcuad
 387+ 95AA              segcuad
 388+ 95AA 3E 02        	ld a,2
 389+ 95AC 32 EE 88     	ld (Cuad_objeto),a
 390+ 95AF 21 C0 4F     	ld hl,$4fc0
 391+ 95B2 22 18 89     	ld (Limite_horizontal),hl
 392+ 95B5 21 1A 89     	ld hl,Limite_vertical
 393+ 95B8 36 0D        	ld (hl),$0d
 394+ 95BA 08           	ex af,af
 395+ 95BB 18 11        	jr 1F
 396+ 95BD              primcuad
 397+ 95BD 3E 01        	ld a,1
 398+ 95BF 32 EE 88     	ld (Cuad_objeto),a
 399+ 95C2 21 C0 4F     	ld hl,$4fc0
 400+ 95C5 22 18 89     	ld (Limite_horizontal),hl
 401+ 95C8 21 1A 89     	ld hl,Limite_vertical
 402+ 95CB 36 12        	ld (hl),$12
 403+ 95CD 08           	ex af,af
 404+ 95CE CD 61 9D     1 call Genera_coordenadas
 405+ 95D1 21 0A 89     	ld hl,Ctrl_0
 406+ 95D4 CB EE        	set 5,(hl)
 407+ 95D6 C9           	ret
 408+ 95D7
 409+ 95D7              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95D7
 411+ 95D7              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95D7              ;
 413+ 95D7              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95D7
 415+ 95D7 7D           column ld a,l
 416+ 95D8 E6 1F        	and $1f
 417+ 95DA FE 10         	cp $10
 418+ 95DC C9            	ret
 419+ 95DD
 420+ 95DD              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95DD              ;
 422+ 95DD              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95DD              ;
 424+ 95DD              ; 14/12/22
 425+ 95DD              ;
 426+ 95DD              ;	Modifica: A y BC.
 427+ 95DD
 428+ 95DD 3A EE 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95E0 E6 01        	and 1
 430+ 95E2 28 17        	jr z,1F
 431+ 95E4
 432+ 95E4              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95E4
 434+ 95E4 3A E0 88     	ld a,(Coordenada_X)
 435+ 95E7 47           	ld b,a
 436+ 95E8 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95E9 79           	ld a,c
 438+ 95EA 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95EB 38 08        	jr c,2F
 440+ 95ED 47           	ld b,a
 441+ 95EE 79           	ld a,c
 442+ 95EF 90           	sub b
 443+ 95F0 32 17 89     	ld (Columnas),a
 444+ 95F3 18 1B        	jr 4F
 445+ 95F5 79           2 ld a,c
 446+ 95F6 32 17 89     	ld (Columnas),a
 447+ 95F9 18 15        	jr 4F
 448+ 95FB
 449+ 95FB              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95FB
 451+ 95FB 3A E0 88     1 ld a,(Coordenada_X)
 452+ 95FE 81           	add c
 453+ 95FF 3D           	dec a
 454+ 9600 D6 1F        	sub $1f
 455+ 9602 38 08        	jr c,3F
 456+ 9604 47           	ld b,a
 457+ 9605 79           	ld a,c
 458+ 9606 90           	sub b
 459+ 9607 32 17 89     	ld (Columnas),a
 460+ 960A 18 04        	jr 4F
 461+ 960C 79           3 ld a,c
 462+ 960D 32 17 89     	ld (Columnas),a
 463+ 9610 D9           4 exx
 464+ 9611 4F           	ld c,a
 465+ 9612 D9           	exx
 466+ 9613 C9            ret
 467+ 9614
 468+ 9614              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9614              ;
 470+ 9614              ;   19/7/23
 471+ 9614              ;
 472+ 9614              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9614              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9614              ;
 475+ 9614              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9614              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9614              ;
 478+ 9614              ;	DESTRUYE: HL,B Y A.
 479+ 9614
 480+ 9614 3A EE 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 9617 FE 02        	cp 2
 482+ 9619 38 18        	jr c,1F
 483+ 961B 28 16        	jr z,1F
 484+ 961D E6 01        	and 1
 485+ 961F 28 0D        	jr z,3F
 486+ 9621
 487+ 9621              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 9621
 489+ 9621 CD 67 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9624
 491+ 9624 7D           9 ld a,l
 492+ 9625 E6 1F        	and $1f
 493+ 9627 28 2A        	jr z,7F
 494+ 9629 2B           	dec hl
 495+ 962A 10 F8        	djnz 9B
 496+ 962C 18 25        	jr 7F
 497+ 962E
 498+ 962E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 962E
 500+ 962E 2A DC 88     3 ld hl,(Posicion_actual)
 501+ 9631 18 20        	jr 7F
 502+ 9633
 503+ 9633 28 14        1 jr z,2F
 504+ 9635
 505+ 9635              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9635
 507+ 9635 CD 67 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9638
 509+ 9638 7D           4 ld a,l
 510+ 9639 E6 1F        	and $1f
 511+ 963B 28 03        	jr z,6F
 512+ 963D 2B           	dec hl
 513+ 963E 10 F8        	djnz 4B
 514+ 9640 06 0F        6 ld b,15
 515+ 9642 CD C8 96     5 call PreviousScan
 516+ 9645 10 FB        	djnz 5B
 517+ 9647 18 0A        	jr 7F
 518+ 9649
 519+ 9649              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 9649
 521+ 9649 CD 67 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 964C 06 0F        	ld b,15
 523+ 964E CD C8 96     8 call PreviousScan
 524+ 9651 10 FB        	djnz 8B
 525+ 9653
 526+ 9653 E5           7 push hl
 527+ 9654 DD E1        	pop ix
 528+ 9656
 529+ 9656 2A DE 88     	ld hl,(Puntero_objeto)
 530+ 9659 E5           	push hl
 531+ 965A FD E1        	pop iy
 532+ 965C
 533+ 965C              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 965C
 535+ 965C 3A 0A 89     	ld a,(Ctrl_0)
 536+ 965F CB 77        	bit 6,a
 537+ 9661 C8           	ret z
 538+ 9662
 539+ 9662              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9662              ; _ entidad / Amadeus´.
 541+ 9662
 542+ 9662 DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 9666
 544+ 9666 C9           	ret
 545+ 9667
 546+ 9667              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9667              ;
 548+ 9667              ;	2/1/23
 549+ 9667              ;
 550+ 9667              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9667              ;
 552+ 9667              ;	Tras esta rutina tenemos:
 553+ 9667              ;
 554+ 9667              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9667              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9667              ;
 557+ 9667              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9667
 559+ 9667 2A DC 88     Operandos ld hl,(Posicion_actual)
 560+ 966A 3A 17 89     	ld a,(Columnas)
 561+ 966D 3D           	dec a
 562+ 966E 20 01        	jr nz,1F
 563+ 9670 3C           	inc a
 564+ 9671 47           1 ld b,a
 565+ 9672 C9           	ret
 566+ 9673
 567+ 9673              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9673              ;
 569+ 9673              ;	3/1/23
 570+ 9673              ;
 571+ 9673              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9673              ;
 573+ 9673              ;	Destruye: A,B,HL y DE.
 574+ 9673
 575+ 9673              Define_rutina_de_impresion
 576+ 9673
 577+ 9673 3A DB 88     	ld a,(Columns)
 578+ 9676 47           	ld b,a
 579+ 9677 3A 17 89     	ld a,(Columnas)
 580+ 967A B8           	cp b
 581+ 967B 20 0D        	jr nz,2f
 582+ 967D
 583+ 967D              ;	La entidad se imprime entera.
 584+ 967D
 585+ 967D 21 9C 97     	ld hl, Indice_entidades_completas
 586+ 9680 E6 01        	and 1
 587+ 9682 28 02        	jr z,1F
 588+ 9684
 589+ 9684 23           	inc hl
 590+ 9685 23           	inc hl
 591+ 9686
 592+ 9686 CD 4D 8D     1 call Extrae_address
 593+ 9689 C9           	ret		;	ret
 594+ 968A
 595+ 968A              ;	La entidad no se imprime entera en pantalla.
 596+ 968A
 597+ 968A 3A EE 88     2 ld a,(Cuad_objeto)
 598+ 968D E6 01        	and 1
 599+ 968F 28 17        	jr z,3F
 600+ 9691
 601+ 9691              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 9691
 603+ 9691 21 A0 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9694 3A DB 88     4 ld a,(Columns)
 605+ 9697 E6 01        	and 1
 606+ 9699 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 969B
 608+ 969B 23           	inc hl
 609+ 969C 23           	inc hl
 610+ 969D
 611+ 969D 3A 17 89     	ld a,(Columnas)
 612+ 96A0 E6 01        	and 1
 613+ 96A2 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 96A4
 615+ 96A4 23           	inc hl
 616+ 96A5 23           	inc hl
 617+ 96A6
 618+ 96A6 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 96A8
 620+ 96A8 21 A6 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 96AB 18 E7        	jr 4B
 622+ 96AD
 623+ 96AD              ; --------------------------------------------------------------------------------------------------------------------
 624+ 96AD              ;
 625+ 96AD              ;	Prepara_draw
 626+ 96AD              ;
 627+ 96AD              ;	Es una rutina de carga.
 628+ 96AD              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 96AD              ;
 630+ 96AD              ;	FUNCIONAMIENTO:
 631+ 96AD              ;
 632+ 96AD              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 96AD              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 96AD              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 96AD              ;
 636+ 96AD              ;	DESTRUYE:
 637+ 96AD              ;
 638+ 96AD              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 96AD
 640+ 96AD 21 DA 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 96B0 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 96B1 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 96B2 4E           	ld c,(hl)
 644+ 96B3 2A DC 88     	ld hl,(Posicion_actual)
 645+ 96B6 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 96B8 C9           	ret
 647+ 96B9
 648+ 96B9              ;----------------------------------------------------------------------------------------------------------------
 649+ 96B9              ;
 650+ 96B9              ;	5/08/22
 651+ 96B9              ;
 652+ 96B9              ;   NextScan.
 653+ 96B9              ;
 654+ 96B9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 96B9              ;
 656+ 96B9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 96B9              ;
 658+ 96B9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 96B9              ;
 660+ 96B9              ;       DESTRUIDOS: AF y HL !!!
 661+ 96B9              ;
 662+ 96B9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 96B9              ;
 664+ 96B9
 665+ 96B9 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 96BA 7C               ld a,h
 667+ 96BB E6 07            and 7
 668+ 96BD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 96BE
 670+ 96BE 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 96BF C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 96C1 6F               ld l,a
 673+ 96C2 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 96C3
 675+ 96C3 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 96C4 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 96C6 67               ld h,a
 678+ 96C7 C9               ret
 679+ 96C8
 680+ 96C8              ;----------------------------------------------------------------------------------------------------------------
 681+ 96C8              ;
 682+ 96C8              ;	5/08/22
 683+ 96C8              ;
 684+ 96C8              ;   PreviousScan.
 685+ 96C8              ;
 686+ 96C8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 96C8              ;
 688+ 96C8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 96C8              ;
 690+ 96C8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 96C8              ;
 692+ 96C8              ;       DESTRUIDOS: AF y HL !!!
 693+ 96C8              ;
 694+ 96C8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 96C8              ;
 696+ 96C8
 697+ 96C8 7C           PreviousScan ld a,h
 698+ 96C9 25               dec h               ; Dec H.
 699+ 96CA E6 07            and 7
 700+ 96CC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 96CD
 702+ 96CD 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 96CE D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96D0 6F               ld l,a
 705+ 96D1 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96D2
 707+ 96D2 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96D3 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96D5 67               ld h,a
 710+ 96D6 C9               ret
 711+ 96D7
 712+ 96D7              ; -----------------------------------------------------------------------------------
 713+ 96D7              ;
 714+ 96D7              ;	31/7/23
 715+ 96D7              ;
 716+ 96D7              ;	Rutina principal de pintado de entidades.
 717+ 96D7              ;	Extrae la foto del frame, (entidades).
 718+ 96D7
 719+ 96D7              Extrae_foto_entidades
 720+ 96D7
 721+ 96D7 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96DA 7E           	ld a,(hl)
 723+ 96DB A7           	and a
 724+ 96DC C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96DD
 726+ 96DD              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96DD
 728+ 96DD 3A 2B 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96E0 A7           	and a
 730+ 96E1 C8           	ret z
 731+ 96E2
 732+ 96E2              ; -----------------------------------
 733+ 96E2
 734+ 96E2 ED 73 30 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96E6 31 00 70     	ld sp,Album_de_fotos
 736+ 96E9
 737+ 96E9 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96EB E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96EC D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96ED
 741+ 96ED ED 73 32 89  	ld (Stack_2),sp
 742+ 96F1 ED 7B 30 89  	ld sp,(Stack)
 743+ 96F5
 744+ 96F5              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96F5
 746+ 96F5 3E CD        	ld a,$cd
 747+ 96F7 32 FF 96     	ld (Imprime),a
 748+ 96FA EB           	ex de,hl
 749+ 96FB 22 00 97     	ld (Imprime+1),hl
 750+ 96FE EB           	ex de,hl
 751+ 96FF
 752+ 96FF              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96FF
 754+ 96FF 00 00 00     Imprime db 0,0,0
 755+ 9702
 756+ 9702 ED 73 30 89  	ld (Stack),sp
 757+ 9706
 758+ 9706 3A 2B 89     	ld a,(Numero_de_malotes)
 759+ 9709 3D           	dec a
 760+ 970A 28 09        	jr z,1F
 761+ 970C 32 2B 89      	ld (Numero_de_malotes),a
 762+ 970F
 763+ 970F ED 7B 32 89  	ld sp,(Stack_2)
 764+ 9713 18 D4        	jr 2B
 765+ 9715
 766+ 9715 AF           1 xor a
 767+ 9716 32 32 89     	ld (Stack_2),a
 768+ 9719
 769+ 9719 C9           	ret
 770+ 971A
 771+ 971A              ; -----------------------------------------------------------------------------------
 772+ 971A              ;
 773+ 971A              ;	28/2/23
 774+ 971A              ;
 775+ 971A              ;	Pinta los disparos generados.
 776+ 971A
 777+ 971A              Extrae_foto_disparos
 778+ 971A
 779+ 971A 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 971D 7E               ld a,(hl)
 781+ 971E A7               and a
 782+ 971F C8               ret z
 783+ 9720
 784+ 9720 3A 3F 89     	ld a,(Numero_de_disparotes)
 785+ 9723 A7           	and a
 786+ 9724 C8           	ret z
 787+ 9725 ED 73 30 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9729 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 972C
 790+ 972C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 972E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 972F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 9730
 794+ 9730 ED 73 32 89  	ld (Stack_2),sp
 795+ 9734 ED 7B 30 89  	ld sp,(Stack)
 796+ 9738
 797+ 9738              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9738
 799+ 9738 3E CD        	ld a,$cd
 800+ 973A 32 42 97     	ld (Imprime2),a
 801+ 973D EB           	ex de,hl
 802+ 973E 22 43 97     	ld (Imprime2+1),hl
 803+ 9741 EB           	ex de,hl
 804+ 9742
 805+ 9742              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9742
 807+ 9742 00 00 00     Imprime2 db 0,0,0
 808+ 9745
 809+ 9745 3A 3F 89     	ld a,(Numero_de_disparotes)
 810+ 9748 3D           	dec a
 811+ 9749 28 09        	jr z,1F
 812+ 974B 32 3F 89      	ld (Numero_de_disparotes),a
 813+ 974E
 814+ 974E ED 7B 32 89  	ld sp,(Stack_2)
 815+ 9752 18 D8        	jr 2B
 816+ 9754
 817+ 9754 AF           1 xor a
 818+ 9755 32 32 89     	ld (Stack_2),a
 819+ 9758 C9           	ret
 820+ 9759
 821+ 9759              ; -----------------------------------------------------------------------------------
 822+ 9759              ;
 823+ 9759              ;	4/9/23
 824+ 9759              ;
 825+ 9759              ;	Rutina principal de pintado de Amadeus.
 826+ 9759              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 9759
 828+ 9759 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 975C 7E           	ld a,(hl)
 830+ 975D A7           	and a
 831+ 975E C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 975F
 833+ 975F 3A 2B 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9762 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9763 C8           	ret z
 836+ 9764
 837+ 9764              ; -----------------------------------
 838+ 9764
 839+ 9764 ED 73 30 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9768 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 976B
 842+ 976B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 976D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 976E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 976F
 846+ 976F ED 73 32 89  	ld (Stack_2),sp
 847+ 9773 ED 7B 30 89  	ld sp,(Stack)
 848+ 9777
 849+ 9777              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9777
 851+ 9777 3E CD        	ld a,$cd
 852+ 9779 32 81 97     	ld (Imprime_Amadeus),a
 853+ 977C EB           	ex de,hl
 854+ 977D 22 82 97     	ld (Imprime_Amadeus+1),hl
 855+ 9780 EB           	ex de,hl
 856+ 9781
 857+ 9781              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9781
 859+ 9781 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9784
 861+ 9784 ED 73 30 89  	ld (Stack),sp
 862+ 9788
 863+ 9788 3A 2B 89     	ld a,(Numero_de_malotes)
 864+ 978B 3D           	dec a
 865+ 978C 28 09        	jr z,1F
 866+ 978E 32 2B 89      	ld (Numero_de_malotes),a
 867+ 9791
 868+ 9791 ED 7B 32 89  	ld sp,(Stack_2)
 869+ 9795 18 D4        	jr 2B
 870+ 9797
 871+ 9797 AF           1 xor a
 872+ 9798 32 32 89     	ld (Stack_2),a
 873+ 979B
 874+ 979B C9           	ret
# file closed: Draw_XOR.asm
1835  979C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 979C              ;   índices de Rutinas de impresión.
   2+ 979C
   3+ 979C AC 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 979E D9 97            defw Pinta_Amadeus_3x2
   5+ 97A0
   6+ 97A0 2F 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97A2 CF 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97A4 83 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97A6
  10+ 97A6 59 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97A8 5D 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97AA 11 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97AC
  14+ 97AC
  15+ 97AC              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97AC              ;
  17+ 97AC              ;   12/12/22
  18+ 97AC              ;
  19+ 97AC              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97AC              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97AC              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97AC              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97AC              ;
  24+ 97AC              ;   Modifica: DE y HL.
  25+ 97AC
  26+ 97AC ED 73 30 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97B0 FD F9        	ld sp,iy
  28+ 97B2 06 10            ld b,16
  29+ 97B4 D1           1 pop de
  30+ 97B5 7B               ld a,e
  31+ 97B6 AE               xor (hl)
  32+ 97B7 77           	ld (hl),a
  33+ 97B8 23           	inc hl
  34+ 97B9 7A               ld a,d
  35+ 97BA AE               xor (hl)
  36+ 97BB 77           	ld (hl),a
  37+ 97BC 2B           	dec hl
  38+ 97BD 24           	inc h
  39+ 97BE 7C               ld a,h
  40+ 97BF E6 07            and 7
  41+ 97C1 20 0A            jr nz,2F
  42+ 97C3 7D               ld a,l
  43+ 97C4 C6 20            add a,$20
  44+ 97C6 6F               ld l,a
  45+ 97C7 38 04            jr c,2F
  46+ 97C9 7C               ld a,h
  47+ 97CA D6 08            sub 8
  48+ 97CC 67               ld h,a
  49+ 97CD 7C           2 ld a,h
  50+ 97CE FE 58            cp $58
  51+ 97D0 28 02            jr z,3F
  52+ 97D2 10 E0            djnz 1B
  53+ 97D4 ED 7B 30 89  3 ld sp,(Stack)
  54+ 97D8 C9           	ret
  55+ 97D9
  56+ 97D9 ED 73 30 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97DD FD F9        	ld sp,iy
  58+ 97DF 06 08            ld b,8
  59+ 97E1 D1           1 pop de
  60+ 97E2 7B               ld a,e
  61+ 97E3 AE               xor (hl)
  62+ 97E4 77           	ld (hl),a
  63+ 97E5 23           	inc hl
  64+ 97E6 7A               ld a,d
  65+ 97E7 AE               xor (hl)
  66+ 97E8 77           	ld (hl),a
  67+ 97E9 23           	inc hl
  68+ 97EA D1           	pop de
  69+ 97EB 7B               ld a,e
  70+ 97EC AE               xor (hl)
  71+ 97ED 77           	ld (hl),a
  72+ 97EE 2B           	dec hl
  73+ 97EF 2B           	dec hl
  74+ 97F0 24           	inc h
  75+ 97F1 7C               ld a,h
  76+ 97F2 E6 07            and 7
  77+ 97F4 20 0A            jr nz,2F
  78+ 97F6 7D               ld a,l
  79+ 97F7 C6 20            add a,$20
  80+ 97F9 6F               ld l,a
  81+ 97FA 38 04            jr c,2F
  82+ 97FC 7C               ld a,h
  83+ 97FD D6 08            sub 8
  84+ 97FF 67               ld h,a
  85+ 9800 7C           2 ld a,h
  86+ 9801 FE 58            cp $58
  87+ 9803 28 25            jr z,4F
  88+ 9805 7A               ld a,d
  89+ 9806 AE               xor (hl)
  90+ 9807 77               ld (hl),a
  91+ 9808 D1           	pop de
  92+ 9809 23           	inc hl
  93+ 980A 7B               ld a,e
  94+ 980B AE               xor (hl)
  95+ 980C 77           	ld (hl),a
  96+ 980D 23           	inc hl
  97+ 980E 7A               ld a,d
  98+ 980F AE               xor (hl)
  99+ 9810 77           	ld (hl),a
 100+ 9811 2B           	dec hl
 101+ 9812 2B           	dec hl
 102+ 9813 24           	inc h
 103+ 9814 7C               ld a,h
 104+ 9815 E6 07            and 7
 105+ 9817 20 0A            jr nz,3F
 106+ 9819 7D               ld a,l
 107+ 981A C6 20            add a,$20
 108+ 981C 6F               ld l,a
 109+ 981D 38 04            jr c,3F
 110+ 981F 7C               ld a,h
 111+ 9820 D6 08            sub 8
 112+ 9822 67               ld h,a
 113+ 9823 7C           3 ld a,h
 114+ 9824 FE 58            cp $58
 115+ 9826 28 02            jr z,4F
 116+ 9828 10 B7            djnz 1B
 117+ 982A ED 7B 30 89  4 ld sp,(Stack)
 118+ 982E C9           	ret
 119+ 982F
 120+ 982F              ; ---------------------------------------------------
 121+ 982F
 122+ 982F ED 73 30 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9833 FD F9        	ld sp,iy
 124+ 9835
 125+ 9835              ; >>>
 126+ 9835
 127+ 9835 06 10            ld b,16
 128+ 9837 D1           1 pop de
 129+ 9838 7A           	ld a,d
 130+ 9839 AE           	xor (hl)
 131+ 983A 77           	ld (hl),a
 132+ 983B 24           	inc h
 133+ 983C 7C               ld a,h
 134+ 983D E6 07            and 7
 135+ 983F 20 0C            jr nz,2F
 136+ 9841 7D               ld a,l
 137+ 9842 C6 20            add a,$20
 138+ 9844 6F               ld l,a
 139+ 9845 38 06            jr c,2F
 140+ 9847 7C               ld a,h
 141+ 9848 D6 08            sub 8
 142+ 984A 67               ld h,a
 143+ 984B 18 00            jr 2F
 144+ 984D 7C           2 ld a,h
 145+ 984E FE 58            cp $58
 146+ 9850 28 02            jr z,3F
 147+ 9852 10 E3            djnz 1B
 148+ 9854 ED 7B 30 89  3 ld sp,(Stack)
 149+ 9858 C9           	ret
 150+ 9859
 151+ 9859 ED 73 30 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 985D FD F9        	ld sp,iy
 153+ 985F
 154+ 985F              ; >>>
 155+ 985F
 156+ 985F 06 10            ld b,16
 157+ 9861 D1           1 pop de
 158+ 9862 7B           	ld a,e
 159+ 9863 AE           	xor (hl)
 160+ 9864 77           	ld (hl),a
 161+ 9865 24           	inc h
 162+ 9866 7C               ld a,h
 163+ 9867 E6 07            and 7
 164+ 9869 20 0C            jr nz,2F
 165+ 986B 7D               ld a,l
 166+ 986C C6 20            add a,$20
 167+ 986E 6F               ld l,a
 168+ 986F 38 06            jr c,2F
 169+ 9871 7C               ld a,h
 170+ 9872 D6 08            sub 8
 171+ 9874 67               ld h,a
 172+ 9875 18 00            jr 2F
 173+ 9877 7C           2 ld a,h
 174+ 9878 FE 58            cp $58
 175+ 987A 28 02            jr z,3F
 176+ 987C 10 E3            djnz 1B
 177+ 987E ED 7B 30 89  3 ld sp,(Stack)
 178+ 9882 C9           	ret
 179+ 9883
 180+ 9883              ; ---------------------------------------------------
 181+ 9883
 182+ 9883 ED 73 30 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9887 FD F9        	ld sp,iy
 184+ 9889 06 08            ld b,8
 185+ 988B D1           1 pop de
 186+ 988C 7A           	ld a,d
 187+ 988D AE           	xor (hl)
 188+ 988E 77           	ld (hl),a
 189+ 988F 23           	inc hl
 190+ 9890 D1           	pop de
 191+ 9891 7B           	ld a,e
 192+ 9892 AE           	xor (hl)
 193+ 9893 77           	ld (hl),a
 194+ 9894 2B           	dec hl
 195+ 9895 24            	inc h
 196+ 9896 7C               ld a,h
 197+ 9897 E6 07            and 7
 198+ 9899 20 0A            jr nz,2F
 199+ 989B 7D               ld a,l
 200+ 989C C6 20            add a,$20
 201+ 989E 6F               ld l,a
 202+ 989F 38 04            jr c,2F
 203+ 98A1 7C               ld a,h
 204+ 98A2 D6 08            sub 8
 205+ 98A4 67               ld h,a
 206+ 98A5 7C           2 ld a,h
 207+ 98A6 FE 58            cp $58
 208+ 98A8 28 20            jr z,4F
 209+ 98AA D1               pop de
 210+ 98AB 7B           	ld a,e
 211+ 98AC AE           	xor (hl)
 212+ 98AD 77           	ld (hl),a
 213+ 98AE 23           	inc hl
 214+ 98AF 7A           	ld a,d
 215+ 98B0 AE           	xor (hl)
 216+ 98B1 77           	ld (hl),a
 217+ 98B2 2B           	dec hl
 218+ 98B3 24           	inc h
 219+ 98B4 7C               ld a,h
 220+ 98B5 E6 07            and 7
 221+ 98B7 20 0A            jr nz,3F
 222+ 98B9 7D               ld a,l
 223+ 98BA C6 20            add a,$20
 224+ 98BC 6F               ld l,a
 225+ 98BD 38 04            jr c,3F
 226+ 98BF 7C               ld a,h
 227+ 98C0 D6 08            sub 8
 228+ 98C2 67               ld h,a
 229+ 98C3 7C           3 ld a,h
 230+ 98C4 FE 58            cp $58
 231+ 98C6 28 02            jr z,4F
 232+ 98C8 10 C1            djnz 1B
 233+ 98CA ED 7B 30 89  4 ld sp,(Stack)
 234+ 98CE C9           	ret
 235+ 98CF
 236+ 98CF ED 73 30 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98D3 FD F9        	ld sp,iy
 238+ 98D5 06 08            ld b,8
 239+ 98D7 D1           1 pop de
 240+ 98D8 D1           	pop de
 241+ 98D9 7B           	ld a,e
 242+ 98DA AE           	xor (hl)
 243+ 98DB 77           	ld (hl),a
 244+ 98DC 24            	inc h
 245+ 98DD 7C               ld a,h
 246+ 98DE E6 07            and 7
 247+ 98E0 20 0A            jr nz,2F
 248+ 98E2 7D               ld a,l
 249+ 98E3 C6 20            add a,$20
 250+ 98E5 6F               ld l,a
 251+ 98E6 38 04            jr c,2F
 252+ 98E8 7C               ld a,h
 253+ 98E9 D6 08            sub 8
 254+ 98EB 67               ld h,a
 255+ 98EC 7C           2 ld a,h
 256+ 98ED FE 58            cp $58
 257+ 98EF 28 1B            jr z,4F
 258+ 98F1 D1               pop de
 259+ 98F2 7A           	ld a,d
 260+ 98F3 AE           	xor (hl)
 261+ 98F4 77           	ld (hl),a
 262+ 98F5 24           	inc h
 263+ 98F6 7C               ld a,h
 264+ 98F7 E6 07            and 7
 265+ 98F9 20 0A            jr nz,3F
 266+ 98FB 7D               ld a,l
 267+ 98FC C6 20            add a,$20
 268+ 98FE 6F               ld l,a
 269+ 98FF 38 04            jr c,3F
 270+ 9901 7C               ld a,h
 271+ 9902 D6 08            sub 8
 272+ 9904 67               ld h,a
 273+ 9905 7C           3 ld a,h
 274+ 9906 FE 58            cp $58
 275+ 9908 28 02            jr z,4F
 276+ 990A 10 CB            djnz 1B
 277+ 990C ED 7B 30 89  4 ld sp,(Stack)
 278+ 9910 C9           	ret
 279+ 9911
 280+ 9911 ED 73 30 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9915 FD F9        	ld sp,iy
 282+ 9917 06 08            ld b,8
 283+ 9919 D1           1 pop de
 284+ 991A 7B           	ld a,e
 285+ 991B AE           	xor (hl)
 286+ 991C 77           	ld (hl),a
 287+ 991D 23           	inc hl
 288+ 991E 7A           	ld a,d
 289+ 991F AE           	xor (hl)
 290+ 9920 77           	ld (hl),a
 291+ 9921 2B           	dec hl
 292+ 9922 24             	inc h
 293+ 9923 7C               ld a,h
 294+ 9924 E6 07            and 7
 295+ 9926 20 0A            jr nz,2F
 296+ 9928 7D               ld a,l
 297+ 9929 C6 20            add a,$20
 298+ 992B 6F               ld l,a
 299+ 992C 38 04            jr c,2F
 300+ 992E 7C               ld a,h
 301+ 992F D6 08            sub 8
 302+ 9931 67               ld h,a
 303+ 9932 7C           2 ld a,h
 304+ 9933 FE 58            cp $58
 305+ 9935 28 21            jr z,4F
 306+ 9937 D1               pop de
 307+ 9938 7A           	ld a,d
 308+ 9939 AE           	xor (hl)
 309+ 993A 77           	ld (hl),a
 310+ 993B 23           	inc hl
 311+ 993C D1               pop de
 312+ 993D 7B           	ld a,e
 313+ 993E AE           	xor (hl)
 314+ 993F 77           	ld (hl),a
 315+ 9940 2B           	dec hl
 316+ 9941 24           	inc h
 317+ 9942 7C               ld a,h
 318+ 9943 E6 07            and 7
 319+ 9945 20 0A            jr nz,3F
 320+ 9947 7D               ld a,l
 321+ 9948 C6 20            add a,$20
 322+ 994A 6F               ld l,a
 323+ 994B 38 04            jr c,3F
 324+ 994D 7C               ld a,h
 325+ 994E D6 08            sub 8
 326+ 9950 67               ld h,a
 327+ 9951 7C           3 ld a,h
 328+ 9952 FE 58            cp $58
 329+ 9954 28 02            jr z,4F
 330+ 9956 10 C1            djnz 1B
 331+ 9958 ED 7B 30 89  4 ld sp,(Stack)
 332+ 995C C9           	ret
 333+ 995D
 334+ 995D ED 73 30 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9961 FD F9        	ld sp,iy
 336+ 9963 06 08            ld b,8
 337+ 9965 D1           1 pop de
 338+ 9966 7B           	ld a,e
 339+ 9967 AE           	xor (hl)
 340+ 9968 77           	ld (hl),a
 341+ 9969 24            	inc h
 342+ 996A 7C               ld a,h
 343+ 996B E6 07            and 7
 344+ 996D 20 0A            jr nz,2F
 345+ 996F 7D               ld a,l
 346+ 9970 C6 20            add a,$20
 347+ 9972 6F               ld l,a
 348+ 9973 38 04            jr c,2F
 349+ 9975 7C               ld a,h
 350+ 9976 D6 08            sub 8
 351+ 9978 67               ld h,a
 352+ 9979 7C           2 ld a,h
 353+ 997A FE 58            cp $58
 354+ 997C 28 1C            jr z,4F
 355+ 997E D1               pop de
 356+ 997F 7A           	ld a,d
 357+ 9980 AE           	xor (hl)
 358+ 9981 77           	ld (hl),a
 359+ 9982 24           	inc h
 360+ 9983 7C               ld a,h
 361+ 9984 E6 07            and 7
 362+ 9986 20 0A            jr nz,3F
 363+ 9988 7D               ld a,l
 364+ 9989 C6 20            add a,$20
 365+ 998B 6F               ld l,a
 366+ 998C 38 04            jr c,3F
 367+ 998E 7C               ld a,h
 368+ 998F D6 08            sub 8
 369+ 9991 67               ld h,a
 370+ 9992 7C           3 ld a,h
 371+ 9993 FE 58            cp $58
 372+ 9995 28 03            jr z,4F
 373+ 9997 D1               pop de
 374+ 9998 10 CB            djnz 1B
 375+ 999A ED 7B 30 89  4 ld sp,(Stack)
 376+ 999E C9           	ret
 377+ 999F
 378+ 999F              ; ---------------------------------------------------
 379+ 999F              ;
 380+ 999F              ;   27/02/23
 381+ 999F              ;
 382+ 999F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 999F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 999F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 999F
 386+ 999F ED 73 30 89  Pinta_Disparo ld (Stack),sp
 387+ 99A3 FD F9            ld sp,iy
 388+ 99A5 06 03            ld b,3
 389+ 99A7 D1           1 pop de
 390+ 99A8 7B               ld a,e
 391+ 99A9 AE               xor (hl)
 392+ 99AA 77               ld (hl),a
 393+ 99AB 23               inc hl
 394+ 99AC 7A               ld a,d
 395+ 99AD AE               xor (hl)
 396+ 99AE 77               ld (hl),a
 397+ 99AF 2B               dec hl
 398+ 99B0
 399+ 99B0 24               inc h
 400+ 99B1 7C               ld a,h
 401+ 99B2 E6 07            and 7
 402+ 99B4 20 0A            jr nz,2F
 403+ 99B6 7D               ld a,l
 404+ 99B7 C6 20            add a,$20
 405+ 99B9 6F               ld l,a
 406+ 99BA 38 04            jr c,2F
 407+ 99BC 7C               ld a,h
 408+ 99BD D6 08            sub 8
 409+ 99BF 67               ld h,a
 410+ 99C0 7C           2 ld a,h
 411+ 99C1 FE 58            cp $58
 412+ 99C3 28 02            jr z,3F
 413+ 99C5
 414+ 99C5 10 E0            djnz 1B
 415+ 99C7 ED 7B 30 89  3 ld sp,(Stack)
 416+ 99CB C9               ret
 417+ 99CC
# file closed: Rutinas_de_impresion_sprites.asm
1836  99CC              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99CC              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99CC              ;
   3+ 99CC              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99CC              ;
   5+ 99CC              ; *****************************************************************************************************************************************************************************************
   6+ 99CC              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99CC
   8+ 99CC 7C           calcula_tercio ld a,h
   9+ 99CD E6 18        	and $18
  10+ 99CF CB 2F        	sra a
  11+ 99D1 CB 2F        	sra a
  12+ 99D3 CB 2F        	sra a
  13+ 99D5 C9           	ret
  14+ 99D6
# file closed: calcula_tercio.asm
1837  99D6              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99D6              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99D6              ;
   3+ 99D6              ;
   4+ 99D6              ;	CLS.
   5+ 99D6              ;
   6+ 99D6              ;	Limpia la pantalla y define sus atributos.
   7+ 99D6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99D6              ;
   9+ 99D6              ;	COLORES: 0 ..... NEGRO
  10+ 99D6              ;    		 1 ..... AZUL
  11+ 99D6              ; 			 2 ..... ROJO
  12+ 99D6              ;			 3 ..... MAGENTA
  13+ 99D6              ; 			 4 ..... VERDE
  14+ 99D6              ; 			 5 ..... CIAN
  15+ 99D6              ;			 6 ..... AMARILLO
  16+ 99D6              ; 			 7 ..... BLANCO
  17+ 99D6              ;
  18+ 99D6              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99D6              ;
  20+ 99D6              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99D6
  22+ 99D6
  23+ 99D6 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99D9 11 01 40     	LD DE,$4001
  25+ 99DC 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99DF 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99E1 ED B0        	LDIR
  28+ 99E3 01 FF 02     	LD BC,767
  29+ 99E6 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99E7 ED B0        	LDIR
  31+ 99E9 C9           	ret
  32+ 99EA
# file closed: Cls.asm
1838  99EA              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99EA              ; ******************************************************************************************************************************************************************************************
   2+ 99EA              ;
   3+ 99EA              ;   20/05/23
   4+ 99EA              ;
   5+ 99EA              ;	Recompone_posicion_inicio
   6+ 99EA              ;
   7+ 99EA              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99EA              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99EA              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99EA              ;	_ a una u otra rutina.
  11+ 99EA
  12+ 99EA              Recompone_posicion_inicio
  13+ 99EA
  14+ 99EA 2A EC 88     	ld hl,(Posicion_inicio)
  15+ 99ED 7D           	ld a,l
  16+ 99EE E6 1F        	and $1f
  17+ 99F0 28 16        	jr z,1F
  18+ 99F2
  19+ 99F2 FE 1F        	cp $1f
  20+ 99F4 28 0D        	jr z,3F
  21+ 99F6
  22+ 99F6 21 1B 89     	ld hl,Ctrl_2
  23+ 99F9 CB C6        	set 0,(hl)
  24+ 99FB 2A DE 88     	ld hl,(Puntero_objeto)
  25+ 99FE 22 20 89     	ld (Repone_puntero_objeto),hl
  26+ 9A01 18 08        	jr 2F
  27+ 9A03
  28+ 9A03 CD AE 9B     3 call Mov_left
  29+ 9A06 18 03        	jr 2F
  30+ 9A08
  31+ 9A08 CD 90 9A     1 call Mov_right
  32+ 9A0B 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A0E 22 DE 88     	ld (Puntero_objeto),hl
  34+ 9A11 C9           	ret
  35+ 9A12
  36+ 9A12              ; ******************************************************************************************************************************************************************************************
  37+ 9A12              ;
  38+ 9A12              ;   27/05/23
  39+ 9A12              ;
  40+ 9A12              ;	Mov_down
  41+ 9A12              ;
  42+ 9A12              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A12              ;
  44+ 9A12              ;
  45+ 9A12              Mov_down
  46+ 9A12
  47+ 9A12 CD 7E 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A15              ;																	; _ repone (Puntero_objeto).
  49+ 9A15 21 0A 89     	ld hl,Ctrl_0
  50+ 9A18 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A1A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A1A              ; 																	; _ en el caso de que no lo haya.
  53+ 9A1A 3A F2 88     	ld a,(Vel_down)
  54+ 9A1D 47           	ld b,a
  55+ 9A1E 2A DC 88         ld hl,(Posicion_actual)
  56+ 9A21 CD CC 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A24 E6 02        	and 2
  58+ 9A26 28 19        	jr z,1F
  59+ 9A28
  60+ 9A28              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A28              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A28
  63+ 9A28 7C           	ld a,h
  64+ 9A29 FE 57        	cp $57
  65+ 9A2B 20 14        	jr nz,1F
  66+ 9A2D
  67+ 9A2D 7D           	ld a,l
  68+ 9A2E C6 20        	add $20
  69+ 9A30 30 0F        	jr nc,1F
  70+ 9A32
  71+ 9A32              ; ------------------------------
  72+ 9A32              ;
  73+ 9A32              ;	30/12/15
  74+ 9A32
  75+ 9A32              ;	call Reaparece_arriba
  76+ 9A32 CD 3B 9D     	call Reinicio
  77+ 9A35
  78+ 9A35              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 9A35              ;	Recordamos que ´solo las "Entidades_guía" ejecutan las rutinas de movimiento.
  80+ 9A35
  81+ 9A35 3A 3E 89     	ld a,(Ctrl_3)
  82+ 9A38 CB 8F        	res 1,a
  83+ 9A3A CB D7        	set 2,a													; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  84+ 9A3C 32 3E 89     	ld (Ctrl_3),a
  85+ 9A3F
  86+ 9A3F 18 08        	jr 3F
  87+ 9A41              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  88+ 9A41              ;															; _a la siguiente entidad como "Entidad_guía".
  89+ 9A41              ; ------------------------------
  90+ 9A41
  91+ 9A41 CD B9 96     1 call NextScan
  92+ 9A44 22 DC 88     	ld (Posicion_actual),hl
  93+ 9A47 10 D8            djnz 2B
  94+ 9A49 CD 61 9D     3 call Genera_coordenadas
  95+ 9A4C C9           	ret
  96+ 9A4D
  97+ 9A4D              ; ******************************************************************************************************************************************************************************************
  98+ 9A4D              ;
  99+ 9A4D              ;   27/05/23
 100+ 9A4D              ;
 101+ 9A4D              ;	Mov_up
 102+ 9A4D              ;
 103+ 9A4D              ; 	Mueve el Sprite hacia arriba.
 104+ 9A4D              ;
 105+ 9A4D              ;
 106+ 9A4D              Mov_up
 107+ 9A4D
 108+ 9A4D CD 7E 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 109+ 9A50              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 110+ 9A50 21 0A 89     	ld hl,Ctrl_0
 111+ 9A53 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 112+ 9A55              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 113+ 9A55              ; 																		; _ en el caso de que no lo haya.
 114+ 9A55 3A F1 88     	ld a,(Vel_up)
 115+ 9A58 47           	ld b,a
 116+ 9A59 2A DC 88     	ld hl,(Posicion_actual)
 117+ 9A5C CD CC 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 118+ 9A5F A7           	and a
 119+ 9A60 20 10        	jr nz,1F
 120+ 9A62
 121+ 9A62              ; Nos encontramos en el 1er tercio de pantalla.
 122+ 9A62              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 123+ 9A62
 124+ 9A62 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 125+ 9A63 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 126+ 9A65 20 0B            jr nz,1F
 127+ 9A67 7D               ld a,l
 128+ 9A68 D6 20            sub $20
 129+ 9A6A 30 06            jr nc,1F
 130+ 9A6C 25               dec h
 131+ 9A6D
 132+ 9A6D              ; -----------------------------
 133+ 9A6D CD 1C 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 134+ 9A70              ;	call Reinicio
 135+ 9A70              ; -----------------------------
 136+ 9A70
 137+ 9A70 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 138+ 9A72 CD C8 96     1 call PreviousScan
 139+ 9A75 22 DC 88     	ld (Posicion_actual),hl
 140+ 9A78 10 E2            djnz 3B
 141+ 9A7A CD 61 9D     2 call Genera_coordenadas
 142+ 9A7D C9           	ret
 143+ 9A7E
 144+ 9A7E              ; -----------------------------
 145+ 9A7E              ;
 146+ 9A7E              ;	27/5/23
 147+ 9A7E              ;
 148+ 9A7E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 149+ 9A7E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 150+ 9A7E              ;
 151+ 9A7E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 152+ 9A7E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 153+ 9A7E              ;
 154+ 9A7E              ;	Modifica: A y (Puntero_objeto).
 155+ 9A7E
 156+ 9A7E 3A 1B 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 157+ 9A81 CB 47        	bit 0,a
 158+ 9A83 C8           	ret z
 159+ 9A84 CB 87        	res 0,a
 160+ 9A86 32 1B 89     	ld (Ctrl_2),a
 161+ 9A89 2A 20 89     	ld hl,(Repone_puntero_objeto)
 162+ 9A8C 22 DE 88     	ld (Puntero_objeto),hl
 163+ 9A8F C9           	ret
 164+ 9A90
 165+ 9A90              ; ******************************************************************************************************************************************************************************************
 166+ 9A90              ;
 167+ 9A90              ;	19/10/22
 168+ 9A90              ;
 169+ 9A90              ;	Mov_right.
 170+ 9A90              ;
 171+ 9A90              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 172+ 9A90              ;
 173+ 9A90
 174+ 9A90 21 0A 89     Mov_right ld hl,Ctrl_0
 175+ 9A93 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 176+ 9A95              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 177+ 9A95              ; 																	; _ en el caso de que no lo haya.
 178+ 9A95 3A 0A 89     	ld a,(Ctrl_0)
 179+ 9A98 CB 77        	bit 6,a
 180+ 9A9A 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 181+ 9A9C
 182+ 9A9C CD CA 9C     	call Stop_Amadeus_right
 183+ 9A9F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 184+ 9AA0 18 4D        	jr 8F
 185+ 9AA2
 186+ 9AA2 3A E0 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 187+ 9AA5 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 188+ 9AA7 20 46        	jr nz,8F
 189+ 9AA9
 190+ 9AA9 3A E2 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 191+ 9AAC A7           	and a 															; _[3] para continuar con el DESPLZ.
 192+ 9AAD 28 40        	jr z,8F
 193+ 9AAF
 194+ 9AAF              ; ---------- ---------- ----------
 195+ 9AAF              ;
 196+ 9AAF              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 197+ 9AAF
 198+ 9AAF 3A F0 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 199+ 9AB2 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 200+ 9AB4 28 11        	jr z,1F
 201+ 9AB6 38 06        	jr c,6F
 202+ 9AB8 FE 04        	cp 4
 203+ 9ABA 28 14        	jr z,7F
 204+ 9ABC 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 205+ 9ABE
 206+ 9ABE              ; ---------- ---------- ----------
 207+ 9ABE              ;
 208+ 9ABE              ; Perfiles de velocidad
 209+ 9ABE              ;
 210+ 9ABE
 211+ 9ABE 3A E2 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 212+ 9AC1 FE FE        	cp $fe
 213+ 9AC3 20 2A        	jr nz,8F
 214+ 9AC5 18 10        	jr 3F
 215+ 9AC7 3A E2 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 216+ 9ACA FE FD        	cp $fd
 217+ 9ACC 20 21        	jr nz,8F
 218+ 9ACE 18 07        	jr 3F
 219+ 9AD0 3A E2 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 220+ 9AD3 FE FB        	cp $fb
 221+ 9AD5 20 18        	jr nz,8F
 222+ 9AD7
 223+ 9AD7              ; ---------- ---------- ----------
 224+ 9AD7
 225+ 9AD7              3
 226+ 9AD7 CD 0A 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 227+ 9ADA              ;	call Reinicio
 228+ 9ADA
 229+ 9ADA              ; ---------- ---------- ----------
 230+ 9ADA              ;
 231+ 9ADA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 232+ 9ADA
 233+ 9ADA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 234+ 9ADC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 235+ 9ADD CD F6 9A     	call DESPLZ_DER
 236+ 9AE0 C1           	pop bc
 237+ 9AE1 10 F9        	djnz 5B
 238+ 9AE3 2A DC 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 239+ 9AE6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 240+ 9AE7 22 DC 88     	ld (Posicion_actual),hl
 241+ 9AEA CD 61 9D     	call Genera_coordenadas
 242+ 9AED 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 243+ 9AEF
 244+ 9AEF              ; ---------- ---------- ----------
 245+ 9AEF
 246+ 9AEF 2A DC 88     8 ld hl,(Posicion_actual)
 247+ 9AF2 CD F6 9A     	call DESPLZ_DER
 248+ 9AF5 C9           2 ret
 249+ 9AF6
 250+ 9AF6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 251+ 9AF6              ;
 252+ 9AF6              ;	22/9/22
 253+ 9AF6              ;
 254+ 9AF6
 255+ 9AF6 CD 05 9B     DESPLZ_DER call Desplaza_derecha
 256+ 9AF9 CD 51 9B         call modifica_parametros_1er_DESPLZ_2
 257+ 9AFC CD 7A 9B         call Ciclo_completo
 258+ 9AFF 21 0A 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 259+ 9B02 CB FE        	set 7,(hl)
 260+ 9B04 C9           	ret
 261+ 9B05
 262+ 9B05              ; ******************************************************************************************************************************************************************************************
 263+ 9B05              ;	15/02/23
 264+ 9B05              ;
 265+ 9B05
 266+ 9B05 3A F0 88     Desplaza_derecha ld a,(Vel_right)
 267+ 9B08 47           	ld b,a
 268+ 9B09 2A E8 88     	ld hl,(Puntero_DESPLZ_der)
 269+ 9B0C 23           1 inc hl
 270+ 9B0D 23           	inc hl
 271+ 9B0E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 272+ 9B10 22 E8 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 273+ 9B13 CD 4D 8D     	call Extrae_address
 274+ 9B16 22 DE 88     	ld (Puntero_objeto),hl
 275+ 9B19
 276+ 9B19              ; Modifica (Puntero_DESPLZ_izq).
 277+ 9B19
 278+ 9B19              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 279+ 9B19              ; Cuántos movimientos hemos hecho ??
 280+ 9B19              ; DE contiene (Puntero_DESPLZ_der).
 281+ 9B19
 282+ 9B19 2A E4 88     7 ld hl,(Indice_Sprite_der)
 283+ 9B1C EB           	ex de,hl
 284+ 9B1D A7           	and a
 285+ 9B1E ED 52        	sbc hl,de
 286+ 9B20 CB 3D        	srl l
 287+ 9B22 3E 08        6 ld a,8
 288+ 9B24 95           	sub l
 289+ 9B25 30 1E        	jr nc,3F
 290+ 9B27
 291+ 9B27              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 292+ 9B27              ; B="0".
 293+ 9B27
 294+ 9B27 04           4 inc b
 295+ 9B28 3C           	inc a
 296+ 9B29 20 FC        	jr nz,4B
 297+ 9B2B 78           	ld a,b
 298+ 9B2C 08           	ex af,af
 299+ 9B2D 2A E4 88     	ld hl,(Indice_Sprite_der)
 300+ 9B30 23           5 inc hl
 301+ 9B31 23           	inc hl
 302+ 9B32 10 FC        	djnz 5B
 303+ 9B34 22 E8 88     	ld (Puntero_DESPLZ_der),hl
 304+ 9B37 CD 4D 8D     	call Extrae_address
 305+ 9B3A 22 DE 88     	ld (Puntero_objeto),hl
 306+ 9B3D
 307+ 9B3D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 308+ 9B3D              ; _(Posicion_actual).
 309+ 9B3D
 310+ 9B3D 21 DC 88     	ld hl,Posicion_actual
 311+ 9B40 34           	inc (hl)
 312+ 9B41 08               ex af,af
 313+ 9B42 6F           	ld l,a
 314+ 9B43 18 DD        	jr 6B
 315+ 9B45
 316+ 9B45              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 317+ 9B45
 318+ 9B45 47           3 ld b,a
 319+ 9B46 2A E6 88     	ld hl,(Indice_Sprite_izq)
 320+ 9B49 23           2 inc hl
 321+ 9B4A 23           	inc hl
 322+ 9B4B 10 FC        	djnz 2B
 323+ 9B4D 22 EA 88     	ld (Puntero_DESPLZ_izq),hl
 324+ 9B50 C9           8 ret
 325+ 9B51
 326+ 9B51              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 327+ 9B51              ;
 328+ 9B51              ;	24/7/22
 329+ 9B51              ;
 330+ 9B51              ;	modifica_parametros_1er_DESPLZ_2
 331+ 9B51              ;
 332+ 9B51              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 333+ 9B51              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 334+ 9B51              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 335+ 9B51
 336+ 9B51 3A E2 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 337+ 9B54 A7           	and a
 338+ 9B55 20 1F        	jr nz,1F
 339+ 9B57 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 340+ 9B59 32 E2 88         ld (CTRL_DESPLZ),a
 341+ 9B5C
 342+ 9B5C 21 DB 88     	ld hl,Columns
 343+ 9B5F 34           	inc (hl)
 344+ 9B60 3A EE 88     	ld a,(Cuad_objeto)
 345+ 9B63 E6 01        	and 1
 346+ 9B65 28 0F        	jr z,1F
 347+ 9B67 2A DC 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 348+ 9B6A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 349+ 9B6B 22 DC 88     	ld (Posicion_actual),hl
 350+ 9B6E CD 61 9D     	call Genera_coordenadas
 351+ 9B71 CD D6 9C     	call Inc_CTRL_DESPLZ
 352+ 9B74 18 03        	jr 2F
 353+ 9B76 CD D6 9C     1 call Inc_CTRL_DESPLZ
 354+ 9B79 C9           2 ret
 355+ 9B7A
 356+ 9B7A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 357+ 9B7A              ;
 358+ 9B7A              ;	24/7/22
 359+ 9B7A              ;
 360+ 9B7A              ;	Ciclo_completo.
 361+ 9B7A              ;
 362+ 9B7A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 363+ 9B7A              ;
 364+ 9B7A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 365+ 9B7A              ; 	Decrementamos (Columns).
 366+ 9B7A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 367+ 9B7A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 368+ 9B7A
 369+ 9B7A
 370+ 9B7A 3A E2 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 371+ 9B7D FE FF        	cp $ff
 372+ 9B7F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 373+ 9B81 E6 F0        	and $f0
 374+ 9B83 20 28        	jr nz,3F
 375+ 9B85
 376+ 9B85              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 377+ 9B85
 378+ 9B85 3A E2 88     	ld a,(CTRL_DESPLZ)
 379+ 9B88 47           	ld b,a
 380+ 9B89 3E F8        	ld a,$f8
 381+ 9B8B 80           	add b
 382+ 9B8C 32 E2 88     	ld (CTRL_DESPLZ),a
 383+ 9B8F 18 1C        	jr 3F
 384+ 9B91 21 DB 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 385+ 9B94 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 386+ 9B95 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 387+ 9B96 32 E2 88     	ld (CTRL_DESPLZ),a
 388+ 9B99 3A EE 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 389+ 9B9C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 390+ 9B9E 20 0A        	jr nz,2F
 391+ 9BA0 2A DC 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 392+ 9BA3 23           	inc hl
 393+ 9BA4 22 DC 88     	ld (Posicion_actual),hl
 394+ 9BA7 CD 61 9D     	call Genera_coordenadas
 395+ 9BAA
 396+ 9BAA              ; Inicia el puntero de Sprite.
 397+ 9BAA
 398+ 9BAA CD 64 8D     2 call Inicia_puntero_objeto_der
 399+ 9BAD C9           3 ret
 400+ 9BAE
 401+ 9BAE              ; ******************************************************************************************************************************************************************************************
 402+ 9BAE              ;
 403+ 9BAE              ;	15/02/23
 404+ 9BAE              ;
 405+ 9BAE              ;	Mov_left.
 406+ 9BAE              ;
 407+ 9BAE              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 408+ 9BAE              ;
 409+ 9BAE              Mov_left
 410+ 9BAE
 411+ 9BAE 21 0A 89     	ld hl,Ctrl_0
 412+ 9BB1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 413+ 9BB3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 414+ 9BB3              ; 																	; _ en el caso de que no lo haya.
 415+ 9BB3 3A 0A 89     	ld a,(Ctrl_0)
 416+ 9BB6 CB 77        	bit 6,a
 417+ 9BB8 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 418+ 9BBA
 419+ 9BBA CD D0 9C     	call Stop_Amadeus_left
 420+ 9BBD C8           	ret z
 421+ 9BBE 20 4A        	jr nz,8F
 422+ 9BC0
 423+ 9BC0 3A E0 88     11 ld a,(Coordenada_X)
 424+ 9BC3 A7           	and a
 425+ 9BC4 20 44        	jr nz,8F
 426+ 9BC6
 427+ 9BC6 3A E2 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 428+ 9BC9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 429+ 9BCA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 430+ 9BCC
 431+ 9BCC              ; ---------- ---------- ----------
 432+ 9BCC
 433+ 9BCC 3A EF 88     	ld a,(Vel_left)
 434+ 9BCF FE 02        	cp 2
 435+ 9BD1 28 0F        	jr z,1F
 436+ 9BD3 38 04        	jr c,6F
 437+ 9BD5 FE 04        	cp 4
 438+ 9BD7 28 12        	jr z,7F
 439+ 9BD9
 440+ 9BD9              ; ---------- ---------- ----------
 441+ 9BD9
 442+ 9BD9 3A E2 88     6 ld a,(CTRL_DESPLZ)
 443+ 9BDC FE F8        	cp $f8
 444+ 9BDE 20 2A        	jr nz,8F
 445+ 9BE0 18 10        	jr 4F
 446+ 9BE2 3A E2 88     1 ld a,(CTRL_DESPLZ)
 447+ 9BE5 FE F9        	cp $f9
 448+ 9BE7 20 21        	jr nz,8F
 449+ 9BE9 18 07        	jr 4F
 450+ 9BEB 3A E2 88     7 ld a,(CTRL_DESPLZ)
 451+ 9BEE FE FB        	cp $fb
 452+ 9BF0 20 18        	jr nz,8F
 453+ 9BF2
 454+ 9BF2              ; ---------- ---------- ----------
 455+ 9BF2
 456+ 9BF2              4
 457+ 9BF2 CD F8 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 458+ 9BF5              ;	call Reinicio
 459+ 9BF5
 460+ 9BF5              ; ---------- ---------- ----------
 461+ 9BF5
 462+ 9BF5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 463+ 9BF7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 464+ 9BF8
 465+ 9BF8              ;	ld hl,(Indice_Sprite_izq)
 466+ 9BF8              ;	ld (Puntero_DESPLZ_izq),hl
 467+ 9BF8
 468+ 9BF8 CD 11 9C     	call DESPLZ_IZQ
 469+ 9BFB C1           	pop bc
 470+ 9BFC 10 F9        	djnz 5B
 471+ 9BFE 2A DC 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 472+ 9C01 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 473+ 9C02 22 DC 88     	ld (Posicion_actual),hl
 474+ 9C05 CD 61 9D     	call Genera_coordenadas
 475+ 9C08 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 476+ 9C0A
 477+ 9C0A              ; ---------- ---------- ----------
 478+ 9C0A
 479+ 9C0A              ; Movemos, no hay recolocación.
 480+ 9C0A
 481+ 9C0A 2A DC 88     8 ld hl,(Posicion_actual)
 482+ 9C0D CD 11 9C     	call DESPLZ_IZQ
 483+ 9C10 C9           2 ret
 484+ 9C11
 485+ 9C11              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 486+ 9C11              ;
 487+ 9C11              ;	22/9/22
 488+ 9C11
 489+ 9C11              DESPLZ_IZQ
 490+ 9C11
 491+ 9C11 CD 20 9C     	call Desplaza_izquierda
 492+ 9C14 CD 6C 9C         call modifica_parametros_1er_DESPLZ
 493+ 9C17 CD 94 9C     	call Ciclo_completo_2
 494+ 9C1A 21 0A 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 495+ 9C1D CB BE        	res 7,(hl)
 496+ 9C1F C9           	ret
 497+ 9C20
 498+ 9C20              Desplaza_izquierda
 499+ 9C20
 500+ 9C20 3A EF 88     	ld a,(Vel_left)
 501+ 9C23 47           	ld b,a
 502+ 9C24 2A EA 88     	ld hl,(Puntero_DESPLZ_izq)
 503+ 9C27 23           1 inc hl
 504+ 9C28 23           	inc hl
 505+ 9C29 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 506+ 9C2B 22 EA 88     	ld (Puntero_DESPLZ_izq),hl
 507+ 9C2E CD 4D 8D     	call Extrae_address
 508+ 9C31 22 DE 88     	ld (Puntero_objeto),hl
 509+ 9C34
 510+ 9C34              ; Modifica (Puntero_DESPLZ_der).
 511+ 9C34
 512+ 9C34              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 513+ 9C34              ; Cuántos movimientos hemos hecho ??
 514+ 9C34              ; DE contiene (Puntero_DESPLZ_izq).
 515+ 9C34
 516+ 9C34 2A E6 88     7 ld hl,(Indice_Sprite_izq)
 517+ 9C37 EB           	ex de,hl
 518+ 9C38 A7           	and a
 519+ 9C39 ED 52        	sbc hl,de
 520+ 9C3B CB 3D        	srl l
 521+ 9C3D 3E 08        6 ld a,8
 522+ 9C3F 95           	sub l
 523+ 9C40 30 1E        	jr nc,3F
 524+ 9C42
 525+ 9C42              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 526+ 9C42              ; B="0".
 527+ 9C42
 528+ 9C42 04           4 inc b
 529+ 9C43 3C           	inc a
 530+ 9C44 20 FC        	jr nz,4B
 531+ 9C46 78           	ld a,b
 532+ 9C47 08           	ex af,af
 533+ 9C48 2A E6 88     	ld hl,(Indice_Sprite_izq)
 534+ 9C4B 23           5 inc hl
 535+ 9C4C 23           	inc hl
 536+ 9C4D 10 FC        	djnz 5B
 537+ 9C4F 22 EA 88     	ld (Puntero_DESPLZ_izq),hl
 538+ 9C52 CD 4D 8D     	call Extrae_address
 539+ 9C55 22 DE 88     	ld (Puntero_objeto),hl
 540+ 9C58
 541+ 9C58              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 542+ 9C58              ; _(Posicion_actual).
 543+ 9C58
 544+ 9C58 21 DC 88     	ld hl,Posicion_actual
 545+ 9C5B 35           	dec (hl)
 546+ 9C5C 08           	ex af,af
 547+ 9C5D 6F           	ld l,a
 548+ 9C5E 18 DD        	jr 6B
 549+ 9C60
 550+ 9C60              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 551+ 9C60
 552+ 9C60 47           3 ld b,a
 553+ 9C61 2A E4 88     	ld hl,(Indice_Sprite_der)
 554+ 9C64 23           2 inc hl
 555+ 9C65 23           	inc hl
 556+ 9C66 10 FC        	djnz 2B
 557+ 9C68 22 E8 88     	ld (Puntero_DESPLZ_der),hl
 558+ 9C6B C9           8 ret
 559+ 9C6C
 560+ 9C6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 561+ 9C6C              ;
 562+ 9C6C              ;	modifica_parametros_1er_DESPLZ
 563+ 9C6C              ;
 564+ 9C6C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 565+ 9C6C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 566+ 9C6C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 567+ 9C6C
 568+ 9C6C 3A E2 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 569+ 9C6F A7           	and a
 570+ 9C70 20 1E        	jr nz,1F
 571+ 9C72 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 572+ 9C73 32 E2 88         ld (CTRL_DESPLZ),a
 573+ 9C76 21 DB 88     	ld hl,Columns
 574+ 9C79 34           	inc (hl)
 575+ 9C7A 3A EE 88     	ld a,(Cuad_objeto)
 576+ 9C7D E6 01        	and 1
 577+ 9C7F 20 0F        	jr nz,1F
 578+ 9C81 2A DC 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 579+ 9C84 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 580+ 9C85 22 DC 88     	ld (Posicion_actual),hl
 581+ 9C88 CD 61 9D     	call Genera_coordenadas
 582+ 9C8B CD E7 9C     	call Dec_CTRL_DESPLZ
 583+ 9C8E 18 03        	jr 2F
 584+ 9C90 CD E7 9C     1 call Dec_CTRL_DESPLZ
 585+ 9C93 C9           2 ret
 586+ 9C94
 587+ 9C94              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 588+ 9C94
 589+ 9C94 3A E2 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 590+ 9C97 FE F7        	cp $f7
 591+ 9C99 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 592+ 9C9B 30 2C        	jr nc,3F
 593+ 9C9D
 594+ 9C9D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 595+ 9C9D
 596+ 9C9D 06 00        	ld b,0
 597+ 9C9F 04           4 inc b
 598+ 9CA0 3C           	inc a
 599+ 9CA1 FE F7        	cp $f7
 600+ 9CA3 20 FA        	jr nz,4B
 601+ 9CA5 3E FF        	ld a,$ff
 602+ 9CA7 90           	sub b
 603+ 9CA8 32 E2 88     	ld (CTRL_DESPLZ),a
 604+ 9CAB 18 1C        	jr 3F
 605+ 9CAD
 606+ 9CAD              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 607+ 9CAD
 608+ 9CAD 21 DB 88     1 ld hl,Columns
 609+ 9CB0 35           	dec (hl)
 610+ 9CB1 AF           	xor a
 611+ 9CB2 32 E2 88     	ld (CTRL_DESPLZ),a
 612+ 9CB5 3A EE 88     	ld a,(Cuad_objeto)
 613+ 9CB8 E6 01        	and 1
 614+ 9CBA 28 0A        	jr z,2F
 615+ 9CBC 2A DC 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 616+ 9CBF 2B           	dec hl
 617+ 9CC0 22 DC 88     	ld (Posicion_actual),hl
 618+ 9CC3 CD 61 9D     	call Genera_coordenadas
 619+ 9CC6
 620+ 9CC6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 621+ 9CC6
 622+ 9CC6 CD 77 8D     2 call Inicia_puntero_objeto_izq
 623+ 9CC9 C9           3 ret
 624+ 9CCA
 625+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 626+ 9CCA              ;
 627+ 9CCA              ;	19/10/22
 628+ 9CCA              ;
 629+ 9CCA              ;	(cp 29) para un Amadeus de 3 Columns.
 630+ 9CCA              ;	(cp 30)   ""  ""    ""     2 Columns.
 631+ 9CCA
 632+ 9CCA 3A E0 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 633+ 9CCD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 634+ 9CCF C9           	ret
 635+ 9CD0
 636+ 9CD0              ; ---------- ---------- ---------- ---------- ---------- ----------
 637+ 9CD0              ;
 638+ 9CD0              ;	19/10/22
 639+ 9CD0              ;
 640+ 9CD0              ;	(cp 2) para un Amadeus de 3 Columns.
 641+ 9CD0              ;	(cp 1)   ""  ""    ""     2 Columns.
 642+ 9CD0
 643+ 9CD0 3A E0 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 644+ 9CD3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 645+ 9CD5 C9           	ret
 646+ 9CD6
 647+ 9CD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 648+ 9CD6              ;
 649+ 9CD6              ;	24/7/22
 650+ 9CD6              ;
 651+ 9CD6              ;	Inc_CTRL_DESPLZ
 652+ 9CD6              ;
 653+ 9CD6              ;
 654+ 9CD6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 655+ 9CD6
 656+ 9CD6 21 E2 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 657+ 9CD9 3A F0 88     	ld a,(Vel_right)
 658+ 9CDC A7           	and a
 659+ 9CDD 28 06        	jr z,1F
 660+ 9CDF 47           	ld b,a
 661+ 9CE0 34           3 inc (hl)
 662+ 9CE1 10 FD        	djnz 3B
 663+ 9CE3 18 01        	jr 2F
 664+ 9CE5 34           1 inc (hl)
 665+ 9CE6 C9           2 ret
 666+ 9CE7
 667+ 9CE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 668+ 9CE7              ;
 669+ 9CE7              ;	5/2/23
 670+ 9CE7              ;
 671+ 9CE7              ;	Dec_CTRL_DESPLZ
 672+ 9CE7              ;
 673+ 9CE7              ;
 674+ 9CE7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 675+ 9CE7
 676+ 9CE7 21 E2 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 677+ 9CEA 3A EF 88     	ld a,(Vel_left)
 678+ 9CED A7           	and a
 679+ 9CEE 28 06        	jr z,1F
 680+ 9CF0 47           	ld b,a
 681+ 9CF1 35           3 dec (hl)
 682+ 9CF2 10 FD        	djnz 3B
 683+ 9CF4 18 01        	jr 2F
 684+ 9CF6 35           1 dec (hl)
 685+ 9CF7 C9           2 ret
 686+ 9CF8
 687+ 9CF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 688+ 9CF8
 689+ 9CF8 2A DC 88     Reaparece_derecha ld hl,(Posicion_actual)
 690+ 9CFB 01 1F 00     	ld bc,31
 691+ 9CFE A7           	and a
 692+ 9CFF ED 4A        	adc hl,bc
 693+ 9D01 22 DC 88     	ld (Posicion_actual),hl
 694+ 9D04 21 0A 89     	ld hl,Ctrl_0														; $xxx1
 695+ 9D07 CB C6        	set 0,(hl)
 696+ 9D09 C9           	ret
 697+ 9D0A
 698+ 9D0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 699+ 9D0A
 700+ 9D0A 2A DC 88     Reaparece_izquierda ld hl,(Posicion_actual)
 701+ 9D0D 01 1F 00     	ld bc,31
 702+ 9D10 A7           	and a
 703+ 9D11 ED 42        	sbc hl,bc
 704+ 9D13 22 DC 88     	ld (Posicion_actual),hl 											; $xx1x
 705+ 9D16 21 0A 89     	ld hl,Ctrl_0
 706+ 9D19 CB CE        	set 1,(hl)
 707+ 9D1B C9           	ret
 708+ 9D1C
 709+ 9D1C              ; ---------- ---------- ---------- ---------- ---------- ----------
 710+ 9D1C
 711+ 9D1C 24           Reaparece_abajo inc h
 712+ 9D1D 01 E0 17     	ld bc,$17e0
 713+ 9D20 A7           	and a
 714+ 9D21 ED 4A        	adc hl,bc
 715+ 9D23 22 DC 88     	ld (Posicion_actual),hl
 716+ 9D26 21 0A 89     	ld hl,Ctrl_0
 717+ 9D29 CB D6        	set 2,(hl)
 718+ 9D2B C9           	ret
 719+ 9D2C
 720+ 9D2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 721+ 9D2C
 722+ 9D2C 01 E0 17     Reaparece_arriba ld bc,$17e0
 723+ 9D2F A7           	and a
 724+ 9D30 ED 42        	sbc hl,bc
 725+ 9D32 22 DC 88     	ld (Posicion_actual),hl
 726+ 9D35 21 0A 89     	ld hl,Ctrl_0
 727+ 9D38 CB DE        	set 3,(hl)
 728+ 9D3A C9           	ret
 729+ 9D3B
 730+ 9D3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 731+ 9D3B              ;
 732+ 9D3B              ;	15/07/23
 733+ 9D3B
 734+ 9D3B              Reinicio
 735+ 9D3B
 736+ 9D3B              ; Vamos a reiniciar los punteros y variables de movimiento.
 737+ 9D3B
 738+ 9D3B AF           	xor a
 739+ 9D3C 21 0F 89     	ld hl,Puntero_indice_mov_bucle
 740+ 9D3F CD 5D 9D     	call Limpia_contenido_hl
 741+ 9D42
 742+ 9D42 21 DC 88     	ld hl,Posicion_actual
 743+ 9D45 CD 5D 9D     	call Limpia_contenido_hl
 744+ 9D48
 745+ 9D48 CD 99 A0     	call Inicializa_Puntero_indice_mov
 746+ 9D4B CD 1D A0     	call Inicia_Puntero_mov
 747+ 9D4E
 748+ 9D4E 21 11 89     	ld hl,Incrementa_puntero
 749+ 9D51 06 05        	ld b,5
 750+ 9D53 77           1 ld (hl),a
 751+ 9D54 23           	inc hl
 752+ 9D55 10 FC        	djnz 1B
 753+ 9D57
 754+ 9D57 21 1B 89     	ld hl,Ctrl_2
 755+ 9D5A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 756+ 9D5C
 757+ 9D5C C9           	ret
 758+ 9D5D
 759+ 9D5D 77           Limpia_contenido_hl	ld (hl),a
 760+ 9D5E 23           	inc hl
 761+ 9D5F 77           	ld (hl),a
 762+ 9D60 C9           	ret
 763+ 9D61
 764+ 9D61
# file closed: Direcciones.asm
1839  9D61              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D61              ; ------------------------------------------------------------------------
   2+ 9D61              ;
   3+ 9D61              ;	02/04/23
   4+ 9D61              ;
   5+ 9D61              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D61              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D61              ;
   8+ 9D61              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D61              ;
  10+ 9D61              ;	Modifica: A,BC y DE.
  11+ 9D61
  12+ 9D61 C5           Genera_coordenadas push bc
  13+ 9D62 E5           	push hl
  14+ 9D63 D5           	push de
  15+ 9D64
  16+ 9D64 2A DC 88     	ld hl,(Posicion_actual)
  17+ 9D67
  18+ 9D67 7D           	ld a,l
  19+ 9D68 E6 1F        	and $1f
  20+ 9D6A 32 E0 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D6D
  22+ 9D6D CD CC 99     	call calcula_tercio
  23+ 9D70 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D71
  25+ 9D71 1E 00        	ld e,0
  26+ 9D73 7D           	ld a,l
  27+ 9D74 E6 E0        	and $e0
  28+ 9D76 28 01        	jr z,1F
  29+ 9D78 04           	inc b
  30+ 9D79
  31+ 9D79 04           1 inc b
  32+ 9D7A 05           	dec b
  33+ 9D7B 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D7D              ;														; _ , salimos.
  35+ 9D7D 1C           3 inc e
  36+ 9D7E D6 20        	sub 32
  37+ 9D80 20 FB        	jr nz,3B
  38+ 9D82 10 F5        	djnz 1B
  39+ 9D84
  40+ 9D84 7B           2 ld a,e
  41+ 9D85 32 E1 88     	ld (Coordenada_y),a
  42+ 9D88
  43+ 9D88 D1           	pop de
  44+ 9D89 E1           	pop hl
  45+ 9D8A C1           	pop bc
  46+ 9D8B
  47+ 9D8B C9           	ret
  48+ 9D8C
  49+ 9D8C              ; ------------------------------------------------------------------------
  50+ 9D8C              ;	28/05/23
  51+ 9D8C              ;
  52+ 9D8C              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D8C              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D8C              ;
  55+ 9D8C              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D8C              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D8C              ;
  58+ 9D8C              ;		DE="$120d"
  59+ 9D8C              ;
  60+ 9D8C              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D8C              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D8C              ;
  63+ 9D8C              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D8C
  65+ 9D8C              ;	Modifica: A,BC y DE.
  66+ 9D8C
  67+ 9D8C
  68+ 9D8C              Genera_coordenadas_disparo
  69+ 9D8C
  70+ 9D8C              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D8C
  72+ 9D8C 7D           	ld a,l
  73+ 9D8D E6 1F        	and $1f
  74+ 9D8F 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D90 CD CC 99     	call calcula_tercio
  76+ 9D93 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D94 1E 00        	ld e,0
  78+ 9D96 7D           	ld a,l
  79+ 9D97 E6 E0        	and $e0
  80+ 9D99 28 01        	jr z,1F
  81+ 9D9B 04           	inc b
  82+ 9D9C 1C           1 inc e
  83+ 9D9D D6 20        	sub 32
  84+ 9D9F 20 FB        	jr nz,1B
  85+ 9DA1 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DA3 C9           	ret
  87+ 9DA4
# file closed: Genera_coordenadas.asm
1840  9DA4              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9DA4              ; Relojes y temporizaciones.
   2+ 9DA4
   3+ 9DA4              ; ------------------------------------------------------
   4+ 9DA4              ;
   5+ 9DA4              ;	16/7/23
   6+ 9DA4              ;
   7+ 9DA4              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9DA4              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9DA4              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9DA4              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9DA4              ;
  12+ 9DA4              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9DA4              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9DA4
  15+ 9DA4              ; Disparo_entidad db 1
  16+ 9DA4              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9DA4              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9DA4
  19+ 9DA4              Habilita_disparos
  20+ 9DA4
  21+ 9DA4 7E           	ld a,(hl)
  22+ 9DA5 A7           	and a
  23+ 9DA6 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9DA7
  25+ 9DA7 EB           	ex de,hl
  26+ 9DA8
  27+ 9DA8 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9DA9 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9DAA
  30+ 9DAA              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9DAA
  32+ 9DAA 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9DAB 7E           	ld a,(hl)
  34+ 9DAC 23           	inc hl
  35+ 9DAD 77           	ld (hl),a
  36+ 9DAE
  37+ 9DAE EB           	ex de,hl						; Habilitamos disparo.
  38+ 9DAF 3E 01        	ld a,1
  39+ 9DB1 77           	ld (hl),a
  40+ 9DB2 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1841  9DB3              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DB3
   2+ 9DB3
   3+ 9DB3              ;   07/07/23
   4+ 9DB3              ;
   5+ 9DB3              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DB3              ;
   7+ 9DB3              ;   Codificación:
   8+ 9DB3              ;
   9+ 9DB3              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DB3              ;
  11+ 9DB3              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DB3              ;
  13+ 9DB3              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DB3              ;
  15+ 9DB3              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DB3              ;
  17+ 9DB3              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DB3              ;                               ..... %01000010 Vel_up 4
  19+ 9DB3              ;                                               Vel_down 2
  20+ 9DB3              ;                               ..... $42
  21+ 9DB3              ;
  22+ 9DB3              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DB3              ;
  24+ 9DB3              ;                               ..... %01000010 Vel_left 4
  25+ 9DB3              ;                                               Vel_right 2
  26+ 9DB3              ;                               ..... $42
  27+ 9DB3              ;
  28+ 9DB3              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DB3              ;
  30+ 9DB3              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DB3              ;
  32+ 9DB3              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DB3              ;
  34+ 9DB3              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DB3              ;                                     $53
  36+ 9DB3              ;
  37+ 9DB3              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DB3              ;
  39+ 9DB3              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DB3              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DB3              ;
  42+ 9DB3              ;                       Arriba ..... $81
  43+ 9DB3              ;                       Arriba - izquierda ..... $a1
  44+ 9DB3              ;                       Arriba - derecha ..... $91
  45+ 9DB3              ;
  46+ 9DB3              ;                       Abajo ..... $41
  47+ 9DB3              ;                       Abajo - izquierda ..... $61
  48+ 9DB3              ;                       Abajo - derecha ..... $51
  49+ 9DB3              ;
  50+ 9DB3              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DB3              ;
  52+ 9DB3              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DB3              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DB3              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DB3              ;
  56+ 9DB3              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DB3              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DB3              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DB3              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DB3              ;
  61+ 9DB3              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DB3              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DB3              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DB3              ;
  65+ 9DB3              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DB3              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DB3              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DB3              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DB3
  70+ 9DB3              ; ----- ----- ----- ----- -----
  71+ 9DB3
  72+ 9DB3 DF 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DB5 E7 9D            defw F_1
  74+ 9DB7 F1 9D            defw F_2
  75+ 9DB9 FB 9D            defw Codo_abajo_derecha
  76+ 9DBB 2F 9E            defw Derecha_y_subiendo
  77+ 9DBD 39 9E            defw Derecha_y_subiendo_1
  78+ 9DBF 43 9E            defw F_3
  79+ 9DC1 4D 9E            defw F_4
  80+ 9DC3 57 9E            defw Derecha_y_bajando
  81+ 9DC5 61 9E            defw Derecha_y_bajando_1
  82+ 9DC7 6B 9E            defw Derecha_y_bajando_2
  83+ 9DC9 75 9E            defw Codo_derecha_abajo
  84+ 9DCB A5 9E            defw Codo_abajo_izq.
  85+ 9DCD D9 9E            defw Izquierda_y_subiendo
  86+ 9DCF E3 9E            defw Izquierda_y_subiendo_1
  87+ 9DD1 ED 9E            defw F_5
  88+ 9DD3 F7 9E            defw F_6
  89+ 9DD5 01 9F            defw Izquierda_y_bajando
  90+ 9DD7 0B 9F            defw Izquierda_y_bajando_1
  91+ 9DD9 15 9F            defw Izquierda_y_bajando_2
  92+ 9DDB 1F 9F            defw Codo_izquierda_abajo
  93+ 9DDD 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DDF
  95+ 9DDF 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DE3 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DE7
  98+ 9DE7 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DEB 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DEF 08 00
 100+ 9DF1 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DF5 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DF9 0F FE
 102+ 9DFB
 103+ 9DFB 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DFF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E03 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E07 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E0B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E0F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E13 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E17 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E1B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E1F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E23 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E27 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E2B 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E2F
 117+ 9E2F 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E33 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E37 06 00
 119+ 9E39
 120+ 9E39 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E3D 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E41 02 00
 122+ 9E43
 123+ 9E43 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E47 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E4B 04 00
 125+ 9E4D 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E51 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E55 08 00
 127+ 9E57
 128+ 9E57 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E5B 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E5F 02 00
 130+ 9E61
 131+ 9E61 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E65 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E69 06 00
 133+ 9E6B
 134+ 9E6B 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E6F 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E73 06 00
 136+ 9E75
 137+ 9E75              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E75
 139+ 9E75 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E79 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E7D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E81 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E85 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E89 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E8D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E91 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E95 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E99 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E9D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9EA1 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EA5
 152+ 9EA5 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EA9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EAD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EB1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EB5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EB9 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EBD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EC1 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EC5 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EC9 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9ECD 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9ED1 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9ED5 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9ED9
 166+ 9ED9 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EDD 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EE1 06 00
 168+ 9EE3
 169+ 9EE3 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EE7 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EEB 02 00
 171+ 9EED
 172+ 9EED 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EF1 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EF5 04 00
 174+ 9EF7 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EFB 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EFF 08 00
 176+ 9F01
 177+ 9F01 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F05 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F09 02 00
 179+ 9F0B
 180+ 9F0B 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F0F 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F13 06 00
 182+ 9F15
 183+ 9F15 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F19 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F1D 06 00
 185+ 9F1F
 186+ 9F1F 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F23 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F27 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F2B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F2F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F33 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F37 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F3B 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F3F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F43 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F47 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F4B 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F4F
 199+ 9F4F              ; ----- ----- ----- ----- -----
 200+ 9F4F              ;
 201+ 9F4F              ;   28/12/23
 202+ 9F4F
 203+ 9F4F              Movimiento
 204+ 9F4F
 205+ 9F4F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F4F
 207+ 9F4F 3A 1B 89         ld a,(Ctrl_2)
 208+ 9F52 CB 57            bit 2,a
 209+ 9F54 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9F56
 211+ 9F56 2A 0D 89         ld hl,(Puntero_mov)
 212+ 9F59 7E               ld a,(hl)
 213+ 9F5A
 214+ 9F5A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9F5A
 216+ 9F5A              Inicia_desplazamiento.
 217+ 9F5A
 218+ 9F5A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9F5A
 220+ 9F5A CD 5A A0         call Ajusta_velocidad_desplazamiento
 221+ 9F5D
 222+ 9F5D              ; Iniciamos (Repetimos_mov).
 223+ 9F5D
 224+ 9F5D 7E               ld a,(hl)
 225+ 9F5E E6 0F            and $0f
 226+ 9F60 32 13 89         ld (Repetimos_desplazamiento),a
 227+ 9F63 32 14 89         ld (Repetimos_desplazamiento_backup),a
 228+ 9F66
 229+ 9F66              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9F66
 231+ 9F66 23               inc hl
 232+ 9F67 7E               ld a,(hl)
 233+ 9F68 32 16 89         ld (Cola_de_desplazamiento),a
 234+ 9F6B 2B               dec hl
 235+ 9F6C
 236+ 9F6C 21 1B 89         ld hl,Ctrl_2
 237+ 9F6F CB D6            set 2,(hl)
 238+ 9F71
 239+ 9F71              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9F71              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9F71
 242+ 9F71              Desplazamiento_iniciado
 243+ 9F71
 244+ 9F71 CD 28 A0         call Aplica_desplazamiento
 245+ 9F74
 246+ 9F74              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9F74
 248+ 9F74 3A 3E 89         ld a,(Ctrl_3)
 249+ 9F77 CB 57            bit 2,a
 250+ 9F79 C0               ret nz
 251+ 9F7A
 252+ 9F7A 3A 1B 89         ld a,(Ctrl_2)
 253+ 9F7D CB 67            bit 4,a
 254+ 9F7F C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9F80
 256+ 9F80 21 13 89     3 ld hl,Repetimos_desplazamiento
 257+ 9F83 35               dec (hl)
 258+ 9F84 C0               ret nz
 259+ 9F85
 260+ 9F85              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9F85              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9F85              ; Analiza (Cola_de_desplazamiento).
 263+ 9F85
 264+ 9F85 3A 16 89     Cola ld a,(Cola_de_desplazamiento)
 265+ 9F88 A7               and a
 266+ 9F89 CC 83 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9F8C 28 30            jr z,Reinicia_el_movimiento
 268+ 9F8E
 269+ 9F8E FE FF            cp $ff
 270+ 9F90 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9F92
 272+ 9F92 FE FE            cp $fe
 273+ 9F94 CC 01 A0         call z,Fijamos_bucle
 274+ 9F97 28 25            jr z,Reinicia_el_movimiento
 275+ 9F99
 276+ 9F99 FE FD            cp $fd
 277+ 9F9B 20 11            jr nz,1F
 278+ 9F9D
 279+ 9F9D              ; ---
 280+ 9F9D              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9F9D
 282+ 9F9D 3A 1B 89         ld a,(Ctrl_2)
 283+ 9FA0 CB 5F            bit 3,a
 284+ 9FA2 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9FA4
 286+ 9FA4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9FA4
 288+ 9FA4 21 1B 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9FA7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9FA9
 291+ 9FA9 CD 12 A0         call Inicia_Repetimos_movimiento
 292+ 9FAC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9FAE              ; ---
 294+ 9FAE
 295+ 9FAE FE 01        1 cp 1
 296+ 9FB0 CA EB 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9FB3
 298+ 9FB3 3D               dec a
 299+ 9FB4 32 16 89         ld (Cola_de_desplazamiento),a
 300+ 9FB7
 301+ 9FB7 3A 14 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9FBA 32 13 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9FBD              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9FBD C9               ret
 305+ 9FBE
 306+ 9FBE              Reinicia_el_movimiento
 307+ 9FBE
 308+ 9FBE 3A 1B 89         ld a,(Ctrl_2)
 309+ 9FC1 CB 5F            bit 3,a
 310+ 9FC3 28 1B            jr z,2F
 311+ 9FC5
 312+ 9FC5              ; (Cola_de_desplazamiento)="254".
 313+ 9FC5
 314+ 9FC5 21 15 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FC8 35               dec (hl)
 316+ 9FC9 20 15            jr nz,2F
 317+ 9FCB
 318+ 9FCB              ; Fin de las repeticiones del último movimiento.
 319+ 9FCB
 320+ 9FCB 21 1B 89         ld hl,Ctrl_2
 321+ 9FCE CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FD0
 323+ 9FD0 2A 0D 89         ld hl,(Puntero_mov)
 324+ 9FD3 23               inc hl
 325+ 9FD4 23               inc hl
 326+ 9FD5 23               inc hl
 327+ 9FD6 22 0D 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FD9              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FD9 7E               ld a,(hl)
 330+ 9FDA 32 16 89         ld (Cola_de_desplazamiento),a
 331+ 9FDD
 332+ 9FDD C3 85 9F         jp Cola
 333+ 9FE0
 334+ 9FE0 CD 1D A0     2 call Inicia_Puntero_mov
 335+ 9FE3
 336+ 9FE3 21 1B 89         ld hl,Ctrl_2
 337+ 9FE6 CB 96            res 2,(hl)
 338+ 9FE8
 339+ 9FE8 C3 4F 9F         jp Movimiento
 340+ 9FEB
 341+ 9FEB              Siguiente_desplazamiento
 342+ 9FEB
 343+ 9FEB              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FEB              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FEB
 346+ 9FEB 21 1B 89         ld hl,Ctrl_2
 347+ 9FEE CB 96            res 2,(hl)
 348+ 9FF0
 349+ 9FF0 2A 0D 89         ld hl,(Puntero_mov)
 350+ 9FF3 23               inc hl
 351+ 9FF4 23               inc hl
 352+ 9FF5 22 0D 89         ld (Puntero_mov),hl
 353+ 9FF8
 354+ 9FF8 7E               ld a,(hl)
 355+ 9FF9 A7               and a
 356+ 9FFA CC 83 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FFD CA BE 9F         jp z,Reinicia_el_movimiento
 358+ A000
 359+ A000 C9               ret
 360+ A001
 361+ A001              ; Subrutinas -----------------------------------------
 362+ A001              ; ---------- --------- --------- ---------- ----------
 363+ A001              ;
 364+ A001              ;   24/07/23
 365+ A001              ;
 366+ A001              ;   Fijamos_bucle
 367+ A001              ;
 368+ A001              ;
 369+ A001
 370+ A001              Fijamos_bucle
 371+ A001
 372+ A001 3A 11 89         ld a,(Incrementa_puntero)
 373+ A004 3C               inc a
 374+ A005 32 12 89         ld (Incrementa_puntero_backup),a
 375+ A008
 376+ A008 CD 83 A0         call Incrementa_Puntero_indice_mov
 377+ A00B 2A 0B 89         ld hl,(Puntero_indice_mov)
 378+ A00E 22 0F 89         ld (Puntero_indice_mov_bucle),hl
 379+ A011 C9               ret
 380+ A012
 381+ A012              ; ---------- --------- --------- ---------- ----------
 382+ A012              ;
 383+ A012              ;   07/7/23
 384+ A012              ;
 385+ A012              ;   Inicia_Repetimos_movimiento
 386+ A012              ;
 387+ A012              ;
 388+ A012
 389+ A012              Inicia_Repetimos_movimiento
 390+ A012
 391+ A012              ; Iniciamos (Repetimos_movimiento).
 392+ A012
 393+ A012 DD 2A 0D 89      ld ix,(Puntero_mov)
 394+ A016 DD 7E 02         ld a,(ix+2)
 395+ A019 32 15 89         ld (Repetimos_movimiento),a
 396+ A01C
 397+ A01C C9               ret
 398+ A01D
 399+ A01D              ; ---------- --------- --------- ---------- ----------
 400+ A01D              ;
 401+ A01D              ;   26/6/23
 402+ A01D              ;
 403+ A01D              ;   Inicia_Puntero_mov
 404+ A01D              ;
 405+ A01D              ;
 406+ A01D
 407+ A01D 2A 0B 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ A020 5E               ld e,(hl)
 409+ A021 23               inc hl
 410+ A022 56               ld d,(hl)
 411+ A023 EB               ex de,hl
 412+ A024 22 0D 89         ld (Puntero_mov),hl
 413+ A027 C9               ret
 414+ A028
 415+ A028              ; ---------- --------- --------- ---------- ----------
 416+ A028              ;
 417+ A028              ;   27/06/23
 418+ A028              ;
 419+ A028              ;   Aplica_movimiento.
 420+ A028
 421+ A028              Aplica_desplazamiento
 422+ A028
 423+ A028              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ A028
 425+ A028 2A 0D 89         ld hl, (Puntero_mov)
 426+ A02B
 427+ A02B 7E               ld a,(hl)
 428+ A02C E6 F0            and $f0
 429+ A02E C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ A02F
 431+ A02F CB 7E            bit 7,(hl)
 432+ A031 28 03            jr z,1F
 433+ A033 CD 4D 9A         call Mov_up
 434+ A036 2A 0D 89     1 ld hl, (Puntero_mov)
 435+ A039 CB 76            bit 6,(hl)
 436+ A03B 28 09            jr z,2F
 437+ A03D CD 12 9A         call Mov_down
 438+ A040
 439+ A040              ; Se ha aplicado reinicio ???
 440+ A040              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ A040
 442+ A040 3A 3E 89         ld a,(Ctrl_3)
 443+ A043 CB 57            bit 2,a
 444+ A045 C0               ret nz
 445+ A046
 446+ A046 2A 0D 89     2 ld hl, (Puntero_mov)
 447+ A049 CB 6E            bit 5,(hl)
 448+ A04B 28 03            jr z,3F
 449+ A04D CD AE 9B         call Mov_left
 450+ A050 2A 0D 89     3 ld hl, (Puntero_mov)
 451+ A053 CB 66            bit 4,(hl)
 452+ A055 C8               ret z
 453+ A056 CD 90 9A         call Mov_right
 454+ A059 C9               ret
 455+ A05A
 456+ A05A              ; ---------- --------- --------- ---------- ----------
 457+ A05A              ;
 458+ A05A              ;   26/06/23
 459+ A05A              ;
 460+ A05A              ;   Ajusta_velocidad_desplazamiento.
 461+ A05A
 462+ A05A              Ajusta_velocidad_desplazamiento
 463+ A05A
 464+ A05A              ; 1er byte de la cadena de movimiento.
 465+ A05A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ A05A
 467+ A05A CD 78 A0         call Extrae_nibble_alto
 468+ A05D
 469+ A05D 32 F1 88         ld (Vel_up),a
 470+ A060 79               ld a,c
 471+ A061 E6 0F            and $0f
 472+ A063 32 F2 88         ld (Vel_down),a
 473+ A066
 474+ A066              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ A066              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ A066
 477+ A066 23               inc hl
 478+ A067 CD 78 A0         call Extrae_nibble_alto
 479+ A06A
 480+ A06A 32 EF 88         ld (Vel_left),a
 481+ A06D 79               ld a,c
 482+ A06E E6 0F            and $0f
 483+ A070 32 F0 88         ld (Vel_right),a
 484+ A073
 485+ A073              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ A073
 487+ A073 23               inc hl
 488+ A074 22 0D 89         ld (Puntero_mov),hl
 489+ A077 C9               ret
 490+ A078
 491+ A078 06 04        Extrae_nibble_alto ld b,4
 492+ A07A 7E               ld a,(hl)
 493+ A07B 4F               ld c,a
 494+ A07C E6 F0            and $f0
 495+ A07E CB 3F        1 srl a
 496+ A080 10 FC            djnz 1B
 497+ A082 C9               ret
 498+ A083
 499+ A083              ; ---------- --------- --------- ---------- ----------
 500+ A083              ;
 501+ A083              ;   5/7/23
 502+ A083              ;
 503+ A083              ;   Incrementa_Puntero_indice_mov
 504+ A083
 505+ A083              Incrementa_Puntero_indice_mov
 506+ A083
 507+ A083 21 11 89         ld hl,Incrementa_puntero
 508+ A086 34               inc (hl)
 509+ A087
 510+ A087 2A 0B 89         ld hl,(Puntero_indice_mov)
 511+ A08A 01 02 00         ld bc,2
 512+ A08D A7               and a
 513+ A08E 09               add hl,bc
 514+ A08F 22 0B 89         ld (Puntero_indice_mov),hl
 515+ A092
 516+ A092 7E               ld a,(hl)
 517+ A093 A7               and a
 518+ A094
 519+ A094              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ A094
 521+ A094              ;    jr z,$
 522+ A094
 523+ A094              ;! Reinicia el Patrón de movimiento.
 524+ A094
 525+ A094 CC 99 A0         call z,Inicializa_Puntero_indice_mov
 526+ A097
 527+ A097 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ A098
 529+ A098 C9               ret
 530+ A099
 531+ A099
 532+ A099              ; ---------- --------- --------- ---------- ----------
 533+ A099              ;
 534+ A099              ;   24/07/23
 535+ A099              ;
 536+ A099              ;   Inicializa_Puntero_indice_mov
 537+ A099
 538+ A099              Inicializa_Puntero_indice_mov
 539+ A099
 540+ A099              ; Existe etiqueta de bucle principal???
 541+ A099
 542+ A099 2A 0F 89         ld hl,(Puntero_indice_mov_bucle)
 543+ A09C 24               inc h
 544+ A09D 25               dec h
 545+ A09E 28 05            jr z,2F
 546+ A0A0
 547+ A0A0 22 0B 89         ld (Puntero_indice_mov),hl
 548+ A0A3 18 14            jr 3F
 549+ A0A5
 550+ A0A5              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ A0A5
 552+ A0A5 3A 11 89     2 ld a,(Incrementa_puntero)
 553+ A0A8 47               ld b,a
 554+ A0A9
 555+ A0A9 2A 0B 89         ld hl,(Puntero_indice_mov)
 556+ A0AC 2B           1 dec hl
 557+ A0AD 2B               dec hl
 558+ A0AE 10 FC            djnz 1B
 559+ A0B0 22 0B 89         ld (Puntero_indice_mov),hl
 560+ A0B3
 561+ A0B3 AF               xor a
 562+ A0B4 32 11 89         ld (Incrementa_puntero),a
 563+ A0B7 18 06            jr 4F
 564+ A0B9
 565+ A0B9 3A 12 89     3 ld a,(Incrementa_puntero_backup)
 566+ A0BC 32 11 89         ld (Incrementa_puntero),a
 567+ A0BF C9           4 ret
 568+ A0C0
 569+ A0C0
 570+ A0C0
# file closed: Patrones_de_mov.asm
1842  A0C0              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0C0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0C0              ;
   3+ A0C0              ;	12/12/23
   4+ A0C0              ;
   5+ A0C0              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0C0
   7+ A0C0              ;	ADC HL,SP	LD (addr),SP
   8+ A0C0              ;	ADD HL,SP	LD SP,(addr)
   9+ A0C0              ;	ADD IX,SP	LD SP,nn
  10+ A0C0              ; 	ADD IY,SP	LD SP,HL
  11+ A0C0              ;				LD SP,IX
  12+ A0C0              ;	DEC SP		LD SP,IY
  13+ A0C0
  14+ A0C0              ;	EX (SP),HL
  15+ A0C0              ;	EX (SP),IX
  16+ A0C0              ;	EX (SP),IY
  17+ A0C0
  18+ A0C0              ;	INC SP
  19+ A0C0
  20+ A0C0                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 30 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 FA 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 06 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 1F 89         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 38 89         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 0A 89     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 3C 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 36 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 1F 89         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 38 89         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 0A 89     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 3C 89         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 30 89      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 36 89     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 30 89  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 36 89         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 36 89         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1843  718B
1844  718B              	SAVESNA "Pruebas.sna", START
1845  718B
1846  718B
1847  718B
1848  718B
# file closed: Banco_de_pruebas.asm
