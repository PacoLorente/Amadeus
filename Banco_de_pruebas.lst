# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD B2 8E     	call Frame
  15  A104 FB           	ei
  16  A105 ED 4D        	reti
  17  A107
  18  A107              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  A107
  20  A107              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A107              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A107              ;
   3+ A107              ;	17/02/23
   4+ A107              ;
   5+ A107              ;	Sprites e índices.
   6+ A107
   7+ A107              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 12 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 16 8A        	defw End_Snapshot_1
 267+ 8500 1A 8A        	defw End_Snapshot_2
 268+ 8502 1E 8A        	defw End_Snapshot_3
 269+ 8504 14 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 18 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1C 8A        	defw End_Snapshot_disparos_2
 272+ 850A 20 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 B7 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 B7 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  22  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BC 88        	defw Nivel_2
   7+ 88AD C9 88        	defw Nivel_3
   8+ 88AF D9 88        	defw Nivel_4
   9+ 88B1 EB 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 04           Nivel_1 db 4	                                ; Nº de entidades.
  19+ 88B8 01 01 01 01  	db 1,1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C1 01 02
  22+ 88C3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C7 01 02
  23+ 88C9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CE 01
  25+ 88CF 03 01 01 01  	db 3,1,1,1,1
  25+ 88D3 01
  26+ 88D4 03 01 01 01  	db 3,1,1,1,1
  26+ 88D8 01
  27+ 88D9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DE 01
  29+ 88DF 04 01 01 01  	db 4,1,1,1,1
  29+ 88E3 01
  30+ 88E4 04 01 01 01  	db 4,1,1,1,1
  30+ 88E8 01
  31+ 88E9 02 03        	db 2,3
  32+ 88EB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88F0 01
  34+ 88F1 05 01 01 01  	db 5,1,1,1,1
  34+ 88F5 01
  35+ 88F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88FA 01
  36+ 88FB 05 01 01 01  	db 5,1,1,1,1
  36+ 88FF 01
  37+ 8900
  38+ 8900              ;---------------------------------------------------------------------------------------------------------------
  39+ 8900              ;
  40+ 8900              ;   21/5/23
  41+ 8900              ;
  42+ 8900              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8900              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8900              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8900              ;	_en la caja DRAW correspondiente.
  46+ 8900              ;
  47+ 8900              ;	MODIFICA: HL,DE y A.
  48+ 8900              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8900
  50+ 8900              Inicializa_Punteros_de_nivel
  51+ 8900
  52+ 8900 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8903 22 4D 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8906 CD 88 8D     	call Extrae_address
  55+ 8909 7E           	ld a,(hl)
  56+ 890A 32 02 8A     	ld (Numero_de_entidades),a
  57+ 890D 23           	inc hl
  58+ 890E 22 4F 8A     	ld (Datos_de_nivel),hl
  59+ 8911 C9           	ret
  60+ 8912
  61+ 8912              ;---------------------------------------------------------------------------------------------------------------
  62+ 8912              ;
  63+ 8912              ;   13/5/23
  64+ 8912              ;
  65+ 8912              ;	Destruye A,BC,HL,DE
  66+ 8912
  67+ 8912              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8912              ;	_del juego.
  69+ 8912
  70+ 8912              Prepara_cajas
  71+ 8912
  72+ 8912              ; Preparamos los punteros de las cajas.
  73+ 8912
  74+ 8912 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8915 CD 88 8D     	call Extrae_address
  76+ 8918 CD 55 89     	call Avanza_caja
  77+ 891B
  78+ 891B CD 99 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891E
  80+ 891E 2A 4F 8A     	ld hl,(Datos_de_nivel)
  81+ 8921
  82+ 8921              ; HL está en los datos del nivel correspondiente.
  83+ 8921              ; B actuará como contador de cajas.
  84+ 8921
  85+ 8921 C5           1 push bc
  86+ 8922
  87+ 8922 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8923 CD 46 89     	call PreparaBC
  89+ 8926
  90+ 8926 21 85 88     	ld hl,Indice_de_entidades
  91+ 8929 CD 4E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892C 22 08 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892F
  94+ 892F CD 5F 89     	call Datos_de_entidad_a_caja
  95+ 8932
  96+ 8932 2A 00 8A     	ld hl,(Indice_restore_caja)
  97+ 8935 CD 88 8D     	call Extrae_address
  98+ 8938 CD 55 89     	call Avanza_caja
  99+ 893B
 100+ 893B 2A 4F 8A     	ld hl,(Datos_de_nivel)
 101+ 893E 23           	inc hl
 102+ 893F 22 4F 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8942
 104+ 8942 C1           	pop bc
 105+ 8943 10 DC        	djnz 1B
 106+ 8945 C9           	ret
 107+ 8946
 108+ 8946 CB 27        PreparaBC sla a
 109+ 8948 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 894A 4F           	ld c,a
 111+ 894B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894D C9           	ret
 113+ 894E
 114+ 894E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894F ED 4A        	adc hl,bc
 116+ 8951 CD 88 8D     	call Extrae_address
 117+ 8954 C9           	ret
 118+ 8955
 119+ 8955 22 FC 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8958 13           	inc de
 121+ 8959 13           	inc de
 122+ 895A EB           	ex de,hl
 123+ 895B 22 00 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895E C9           	ret
 125+ 895F
 126+ 895F              Datos_de_entidad_a_caja
 127+ 895F
 128+ 895F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895F
 130+ 895F
 131+ 895F ED 5B FC 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8963
 133+ 8963 01 02 00     	ld bc,2
 134+ 8966 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8968
 136+ 8968 01 07 00     	ld bc,7
 137+ 896B CD 93 89     	call Situa_DE
 138+ 896E
 139+ 896E 01 05 00     	ld bc,5
 140+ 8971 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8973
 142+ 8973 01 04 00     	ld bc,4
 143+ 8976 CD 93 89     	call Situa_DE
 144+ 8979
 145+ 8979 01 07 00     	ld bc,7
 146+ 897C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897E
 148+ 897E 01 18 00     	ld bc,24
 149+ 8981 CD 93 89     	call Situa_DE
 150+ 8984
 151+ 8984 01 02 00     	ld bc,2
 152+ 8987 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8989
 154+ 8989              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8989              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8989
 157+ 8989 01 0F 00     	ld bc,15									; *****
 158+ 898C CD 93 89     	call Situa_DE
 159+ 898F
 160+ 898F 3E 03        	ld a,3
 161+ 8991 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8992
 163+ 8992 C9           	ret
 164+ 8993
 165+ 8993 EB           Situa_DE ex de,hl
 166+ 8994 A7           	and a
 167+ 8995 ED 4A        	adc hl,bc
 168+ 8997 EB           	ex de,hl
 169+ 8998 C9           	ret
 170+ 8999
 171+ 8999              ;---------------------------------------------------------------------------------------------------------------
 172+ 8999              ;
 173+ 8999              ;	21/5/23
 174+ 8999              ;
 175+ 8999              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8999              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8999              ;
 178+ 8999              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8999              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8999              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8999              ;
 182+ 8999              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8999              ;	MODIFICA: A y B.
 184+ 8999              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8999
 186+ 8999              Admin_num_entidades
 187+ 8999
 188+ 8999              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8999
 190+ 8999 3A 02 8A     	ld a,(Numero_de_entidades)
 191+ 899C A7           	and a
 192+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899D              ;	jr z,$
 194+ 899D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899D
 196+ 899D 20 03        	jr nz,3F
 197+ 899F
 198+ 899F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899F
 200+ 899F CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A2
 202+ 89A2 3A 02 8A     3 ld a,(Numero_de_entidades)
 203+ 89A5 FE 0A        	cp 10
 204+ 89A7 38 08        	jr c,1F
 205+ 89A9
 206+ 89A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 207+ 89A9              ; Actualizamos variables.
 208+ 89A9
 209+ 89A9 3E 0A        	ld a,10
 210+ 89AB 32 03 8A     	ld (Numero_parcial_de_entidades),a
 211+ 89AE 47           	ld b,a
 212+ 89AF 18 04        	jr 2F
 213+ 89B1
 214+ 89B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 215+ 89B1              ; (Numero_de_entidades)="0".
 216+ 89B1
 217+ 89B1 32 03 8A     1 ld (Numero_parcial_de_entidades),a
 218+ 89B4 47           	ld b,a
 219+ 89B5 C9           2 ret
# file closed: Niveles.asm
  23  89B6
  24  89B6              ; ******************************************************************************************************************************************************************************************
  25  89B6              ; Constantes.
  26  89B6              ; ******************************************************************************************************************************************************************************************
  27  89B6              ;
  28  89B6              ; 25/05/23
  29  89B6              ;
  30  89B6              ; Constantes generales.
  31  89B6              ;
  32  89B6
  33  89B6              Sprite_vacio equ $f000
  34  89B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  89B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  89B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  89B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  89B6
  39  89B6              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  89B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  89B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  42  89B6              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  89B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  89B6              ;                               				        ; De momento situamos este almacén en $7060.
  45  89B6              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  46  89B6              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  47  89B6              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  48  89B6              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  49  89B6              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  50  89B6              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  51  89B6
  52  89B6              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  53  89B6
  54  89B6              ; ******************************************************************************************************************************************************************************************
  55  89B6              ; Variables.
  56  89B6              ; ******************************************************************************************************************************************************************************************
  57  89B6              ;
  58  89B6              ; 28/07/23
  59  89B6              ;
  60  89B6              ; Variables de DRAW. (Motor principal).
  61  89B6              ;
  62  89B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  63  89B6
  64  89B6 00           Filas db 0												; Filas. [DRAW]
  65  89B7 00           Columns db 0  											; Nº de columnas. [DRAW]
  66  89B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  67  89BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  68  89BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  69  89BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  70  89BE
  71  89BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  72  89BE
  73  89BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  74  89BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  75  89BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  76  89BF 00           Attr db 0												; Atributos de la entidad:
  77  89C0
  78  89C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  79  89C0              ;
  80  89C0              ;	COLORES: 0 ..... NEGRO
  81  89C0              ;    		 1 ..... AZUL
  82  89C0              ; 			 2 ..... ROJO
  83  89C0              ;			 3 ..... MAGENTA
  84  89C0              ; 			 4 ..... VERDE
  85  89C0              ; 			 5 ..... CIAN
  86  89C0              ;			 6 ..... AMARILLO
  87  89C0              ; 			 7 ..... BLANCO
  88  89C0
  89  89C0 00 00        Indice_Sprite_der defw 0
  90  89C2 00 00        Indice_Sprite_izq defw 0
  91  89C4 00 00        Puntero_DESPLZ_der defw 0
  92  89C6 00 00        Puntero_DESPLZ_izq defw 0
  93  89C8
  94  89C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  95  89CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  96  89CB
  97  89CB              ; Variables de objeto. (Características).
  98  89CB
  99  89CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 100  89CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 101  89CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 102  89CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 103  89CF
 104  89CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 105  89D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 106  89D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 107  89D0
 108  89D0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 109  89D2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 110  89D4 00 00        	defw 0
 111  89D6 00 00 00 00  	db 0,0,0,0
 112  89DA
 113  89DA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 114  89DC 00 00        	defw 0
 115  89DE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 116  89E0 00 00 00 00  	db 0,0,0,0
 117  89E4
 118  89E4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 119  89E4
 120  89E4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 121  89E5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 122  89E5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 123  89E5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 124  89E5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 125  89E5              ;
 126  89E5              ; 														DESCRIPCIÖN:
 127  89E5              ;
 128  89E5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 129  89E5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 130  89E5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 131  89E5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 132  89E5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 133  89E5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 134  89E5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 135  89E5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 136  89E5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 137  89E5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 138  89E5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 139  89E5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 140  89E5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 141  89E5              ;
 142  89E5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 143  89E5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 144  89E5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 145  89E5
 146  89E5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 147  89E6
 148  89E6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 149  89E6
 150  89E6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 151  89E7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 152  89E9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 153  89EB 00 00        Puntero_indice_mov_bucle defw 0							;
 154  89ED              ;
 155  89ED              ;
 156  89ED 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 157  89EE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 158  89EE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 159  89EE 00           Incrementa_puntero_backup db 0
 160  89EF 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 161  89F0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 162  89F0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 163  89F1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 164  89F2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 165  89F3              ;
 166  89F3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 167  89F3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 168  89F3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 169  89F3              ;
 170  89F3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 171  89F3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 172  89F3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 173  89F3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 174  89F3              ;
 175  89F3              ;														;	"$ff" ..... Bucle infinito de repetición.
 176  89F3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 177  89F3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 178  89F3
 179  89F3
 180  89F3              ; Variables de funcionamiento. [DRAW].
 181  89F3
 182  89F3 00           Columnas db 0
 183  89F4 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 184  89F6              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 185  89F6 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  89F7
 187  89F7              ; variables de control general.
 188  89F7
 189  89F7 00           Ctrl_2 db 0
 190  89F8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 191  89F8              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 192  89F8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 193  89F8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 194  89F8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 195  89F8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 196  89F8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 197  89F8              ;
 198  89F8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 199  89F8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 200  89F8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 201  89F8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 202  89F8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 203  89F8
 204  89F8 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 205  89F9
 206  89F9              ;! 67 Bytes por entidad.
 207  89F9
 208  89F9              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 209  89F9              ;					         		---------;      ;---------
 210  89F9
 211  89F9
 212  89F9              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 213  89F9
 214  89F9 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 215  89FA
 216  89FA              ;														DESCRIPCIÓN:
 217  89FA              ;
 218  89FA              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 219  89FA              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 220  89FA              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 221  89FA              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 222  89FA              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 223  89FA              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 224  89FA
 225  89FA              ;														BIT 3, Recarga de nueva oleada.
 226  89FA              ;														BIT 4, Recarga de nueva oleada.
 227  89FA              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 228  89FA
 229  89FA
 230  89FA 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 231  89FC              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 232  89FC              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 233  89FC              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 234  89FC
 235  89FC
 236  89FC
 237  89FC              ; Gestión de ENTIDADES y CAJAS.
 238  89FC
 239  89FC 00 00        Puntero_store_caja defw 0
 240  89FE 00 00        Puntero_restore_caja defw 0
 241  8A00 00 00        Indice_restore_caja defw 0
 242  8A02 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 243  8A03 00           Numero_parcial_de_entidades db 0
 244  8A04 00           Entidades_en_curso db 0									; ..... ..... .....
 245  8A05 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 246  8A06              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 247  8A06              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 248  8A06              ;														; _ (Numero_de_malotes)="0".
 249  8A06 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 250  8A08 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 251  8A0A              ;														; _ puntero (Indice_entidades).
 252  8A0A
 253  8A0A
 254  8A0A              ;---------------------------------------------------------------------------------------------------------------
 255  8A0A              ;
 256  8A0A              ;	9/8/23
 257  8A0A              ;
 258  8A0A              ;	Álbumes.
 259  8A0A
 260  8A0A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 261  8A0C              ;														; _variable para almacenar lo posición del puntero_
 262  8A0C              ; 														; _de pila, SP.
 263  8A0C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 264  8A0E              ;														; La utiliza la rutina [Extrae_foto_registros].
 265  8A0E 00 00        Stack_snapshot defw 0
 266  8A10 00 00        Stack_snapshot_disparos defw 0
 267  8A12
 268  8A12 00 00        End_Snapshot defw 0
 269  8A14              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 270  8A14 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 271  8A16              ;														; _el snapshot de los registros del siguiente disparo.
 272  8A16              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 273  8A16 00 00        End_Snapshot_1 defw 0
 274  8A18 00 00        End_Snapshot_disparos_1 defw 0
 275  8A1A 00 00        End_Snapshot_2 defw 0
 276  8A1C 00 00        End_Snapshot_disparos_2 defw 0
 277  8A1E 00 00        End_Snapshot_3 defw 0
 278  8A20 00 00        End_Snapshot_disparos_3 defw 0
 279  8A22
 280  8A22 00 00        Puntero_indice_album_de_fotos defw 0
 281  8A24 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 282  8A26
 283  8A26 00 00        Puntero_indice_End_Snapshot defw 0
 284  8A28 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 285  8A2A 00 00        Puntero_de_End_Snapshot defw 0
 286  8A2C 00 00        Puntero_de_End_Snapshot_disparos defw 0
 287  8A2E
 288  8A2E              ;---------------------------------------------------------------------------------------------------------------
 289  8A2E
 290  8A2E              ; Gestión de Disparos.
 291  8A2E
 292  8A2E 00           Numero_de_disparotes db 0
 293  8A2F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 294  8A31 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 295  8A33 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 296  8A34              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 297  8A34              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 298  8A34 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 299  8A36              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 300  8A36              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 301  8A36              ;														; _produzca colisión.
 302  8A36 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 303  8A38              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 304  8A38 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 305  8A3B              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 306  8A3B 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 307  8A3E              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 308  8A3E 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 309  8A40 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 310  8A41
 311  8A41              ;---------------------------------------------------------------------------------------------------------------
 312  8A41
 313  8A41              ; Relojes y temporizaciones.
 314  8A41
 315  8A41 00           Contador_de_frames db 0
 316  8A42 00           Contador_de_frames_2 db 0
 317  8A43
 318  8A43 04           Clock_explosion db 4
 319  8A44 1E           Clock_Entidades_en_curso db 30
 320  8A45 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 321  8A46              ;														; Repite la oleada de entidades.
 322  8A46 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 323  8A47 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 324  8A48 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 325  8A49
 326  8A49 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 327  8A4A 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 328  8A4B 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 329  8A4C
 330  8A4C              ;---------------------------------------------------------------------------------------------------------------
 331  8A4C
 332  8A4C              ; Gestión de NIVELES.
 333  8A4C
 334  8A4C 00           Nivel db 0												; Nivel actual del juego.
 335  8A4D 00 00        Puntero_indice_NIVELES defw 0
 336  8A4F 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 337  8A51              ; 														; _ que definen el NIVEL.
 338  8A51              ; Y todo comienza aquí .....
 339  8A51              ;
 340  8A51              ; Rutina principal *************************************************************************************************************************************************************************
 341  8A51              ;
 342  8A51              ;	14/11/22
 343  8A51
 344  8A51              START
 345  8A51
 346  8A51 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 347  8A54 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 348  8A56 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 349  8A58 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 350  8A5A F3           	DI
 351  8A5B
 352  8A5B 3E 07        	ld a,%00000111
 353  8A5D CD F3 99     	call Cls
 354  8A60
 355  8A60 CD 61 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 356  8A63
 357  8A63              ; INICIALIZACIÓN.
 358  8A63
 359  8A63 CD 00 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 360  8A66
 361  8A66 CD 12 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 362  8A69
 363  8A69 CD D4 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 364  8A6C              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 365  8A6C CD EA 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 366  8A6F              ;													     ; _ malotes antes de guardar ninguna foto.
 367  8A6F              ; ----------
 368  8A6F
 369  8A6F CD 11 8E     	call Restore_entidad
 370  8A72
 371  8A72 21 03 8A     	ld hl,Numero_parcial_de_entidades
 372  8A75 46           	ld b,(hl)
 373  8A76 04           	inc b
 374  8A77 05           	dec b
 375  8A78 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 376  8A7A
 377  8A7A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 378  8A7A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 379  8A7A              ;	Pintamos el resto de entidades:
 380  8A7A
 381  8A7A              ;	INICIA ENTIDADES !!!!!
 382  8A7A
 383  8A7A C5           1 push bc  												; Guardo el contador de entidades.
 384  8A7B
 385  8A7B CD 7B 8C     	call Inicia_entidad
 386  8A7E
 387  8A7E C1           	pop bc
 388  8A7F 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 389  8A81
 390  8A81              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 391  8A81              ; (Esto se dá cuando se inicia una nueva oleada).
 392  8A81
 393  8A81 3A F9 89     	ld a,(Ctrl_1)
 394  8A84 CB 5F        	bit 3,a
 395  8A86 20 18        	jr nz,5F											; Loop
 396  8A88
 397  8A88              ; 	INICIA AMADEUS !!!!!
 398  8A88
 399  8A88 CD 38 8E     3 call Restore_Amadeus
 400  8A8B CD 8E 8D     	call Inicia_Puntero_objeto
 401  8A8E CD 29 94     	call Draw
 402  8A91 CD A0 7F     	call Guarda_foto_registros
 403  8A94 11 A4 85     	ld de,Amadeus_db
 404  8A97 CD 4A 8E     	call Store_Amadeus
 405  8A9A
 406  8A9A              ; 	INICIA DISPAROS !!!!!
 407  8A9A
 408  8A9A CD 4A 8D     	call Inicia_Puntero_Disparo_Entidades
 409  8A9D CD 51 8D     	call Inicia_Puntero_Disparo_Amadeus
 410  8AA0
 411  8AA0              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 412  8AA0
 413  8AA0 CD D4 8C     5 call Inicia_punteros_de_cajas
 414  8AA3 CD 11 8E     	call Restore_entidad
 415  8AA6
 416  8AA6 3A F9 89     	ld a,(Ctrl_1)
 417  8AA9 CB 5F        	bit 3,a
 418  8AAB 28 0A        	jr z,6F
 419  8AAD
 420  8AAD              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 421  8AAD
 422  8AAD 21 F9 89     	ld hl,Ctrl_1
 423  8AB0 CB 9E        	res 3,(hl)
 424  8AB2 CD 58 8D     	call Calcula_numero_de_malotes
 425  8AB5 18 0A        	jr Main
 426  8AB7
 427  8AB7              ; ----------
 428  8AB7
 429  8AB7 3A 03 8A     6 ld a,(Numero_parcial_de_entidades)
 430  8ABA 3C           	inc a
 431  8ABB 32 05 8A     	ld (Numero_de_malotes),a
 432  8ABE
 433  8ABE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 434  8ABE              ; _ tenemos calculado (Numero_de_malotes).
 435  8ABE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 436  8ABE              ; _ para situarnos en el siguiente album.
 437  8ABE
 438  8ABE CD 1B 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 439  8AC1
 440  8AC1              ; ------------------------------------
 441  8AC1
 442  8AC1              Main
 443  8AC1
 444  8AC1              ;
 445  8AC1              ;	3/8/23
 446  8AC1
 447  8AC1 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 448  8AC4 47           	ld b,a
 449  8AC5 3A 41 8A     	ld a,(Contador_de_frames)
 450  8AC8 B8           	cp b
 451  8AC9 20 18        	jr nz,13F
 452  8ACB
 453  8ACB 3A 03 8A     	ld a,(Numero_parcial_de_entidades)
 454  8ACE 47           	ld b,a
 455  8ACF 3A 04 8A     	ld a,(Entidades_en_curso)
 456  8AD2 B8           	cp b
 457  8AD3 28 0E        	jr z,13F
 458  8AD5 30 0C        	jr nc,13F
 459  8AD7
 460  8AD7 3C           	inc a
 461  8AD8 32 04 8A     	ld (Entidades_en_curso),a
 462  8ADB
 463  8ADB 3A 44 8A     	ld a,(Clock_Entidades_en_curso)
 464  8ADE
 465  8ADE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 466  8ADE              ;! _ IMPREDECIBLE !!!!
 467  8ADE
 468  8ADE C6 64        	add 100
 469  8AE0 32 44 8A     	ld (Clock_Entidades_en_curso),a
 470  8AE3
 471  8AE3              ; Habilita disparos.
 472  8AE3
 473  8AE3 21 46 8A     13 ld hl,Disparo_Amadeus
 474  8AE6 11 48 8A     	ld de,CLOCK_repone_disparo_Amadeus
 475  8AE9 CD B8 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 476  8AEC
 477  8AEC 21 49 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 478  8AEF 11 4B 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 479  8AF2 CD B8 A0     	call Habilita_disparos
 480  8AF5
 481  8AF5              ; COLISIONES.
 482  8AF5
 483  8AF5 CD 0B 93     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 484  8AF8
 485  8AF8              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 486  8AF8              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 487  8AF8              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 488  8AF8
 489  8AF8 AF           	xor a
 490  8AF9 32 33 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 491  8AFC
 492  8AFC CD D4 8C     	call Inicia_punteros_de_cajas
 493  8AFF CD 11 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 494  8B02              ; 														; _ en DRAW.
 495  8B02 3A B6 89     	ld a,(Filas)
 496  8B05 A7           	and a
 497  8B06 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 498  8B08 CD 23 8E     	call Incrementa_punteros_de_cajas
 499  8B0B 18 F2        	jr 12B
 500  8B0D
 501  8B0D              ; ---------------------------------------------------------------------------------------
 502  8B0D
 503  8B0D 3A 03 8A     10 ld a,(Numero_parcial_de_entidades)
 504  8B10 47               ld b,a
 505  8B11 A7           	and a
 506  8B12 20 14        	jr nz,11F
 507  8B14
 508  8B14 21 F9 89     	ld hl,Ctrl_1
 509  8B17 CB 66        	bit 4,(hl)
 510  8B19 C2 A5 8B     	jp nz,16F
 511  8B1C
 512  8B1C 21 F9 89     	ld hl,Ctrl_1
 513  8B1F CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 514  8B21
 515  8B21 3A 41 8A     	ld a,(Contador_de_frames)
 516  8B24 3C           	inc a
 517  8B25 32 45 8A     	ld (Activa_recarga_cajas),a
 518  8B28
 519  8B28              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 520  8B28
 521  8B28 3A 04 8A     11 ld a,(Entidades_en_curso)
 522  8B2B A7           	and a
 523  8B2C CA A5 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 524  8B2F 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 525  8B30
 526  8B30              ; Código que ejecutamos con cada entidad:
 527  8B30              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 528  8B30
 529  8B30 C5           15 push bc 												; Nº de entidades en curso.
 530  8B31
 531  8B31              ; Impacto ???
 532  8B31
 533  8B31 3A CF 89     	ld a,(Impacto)
 534  8B34 A7           	and a
 535  8B35 28 2D        	jr z,8F
 536  8B37
 537  8B37              ; Hay Impacto en esta entidad.
 538  8B37
 539  8B37 21 43 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 540  8B3A 35           	dec (hl)
 541  8B3B 20 62        	jr nz,17F
 542  8B3D
 543  8B3D              ;! Velocidad de la animación de la explosión.
 544  8B3D
 545  8B3D 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 546  8B3F              ;														; _,(velocidad de la explosión).
 547  8B3F CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 548  8B42
 549  8B42              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 550  8B42
 551  8B42 3A F7 89     	ld a,(Ctrl_2)
 552  8B45 CB 4F        	bit 1,a
 553  8B47 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 554  8B49
 555  8B49              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 556  8B49
 557  8B49 3A BE 89     	ld a,(CTRL_DESPLZ)
 558  8B4C A7           	and a
 559  8B4D 20 08        	jr nz,18F
 560  8B4F
 561  8B4F 21 84 84     	ld hl,Indice_Explosion_2x2-2
 562  8B52 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 563  8B55 18 06        	jr 19F
 564  8B57
 565  8B57 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 566  8B5A 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 567  8B5D
 568  8B5D 21 F7 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 569  8B60 CB CE        	set 1,(hl)
 570  8B62 18 22        	jr 7F
 571  8B64
 572  8B64              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 573  8B64              ; _con las coordenadas de la entidad almacenada en DRAW.
 574  8B64
 575  8B64 3A F9 89     8 ld a,(Ctrl_1)
 576  8B67 CB 57        	bit 2,a
 577  8B69 28 1B        	jr z,7F
 578  8B6B
 579  8B6B 2A 36 8A     	ld hl,(Coordenadas_disparo_certero)
 580  8B6E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 581  8B6F              ;														; E contiene la coordenada_X del disparo.
 582  8B6F 2A BC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 583  8B72              ;														; H FILA, (Coordenada_y de la entidad).
 584  8B72 A7           	and a
 585  8B73 ED 52        	sbc hl,de
 586  8B75
 587  8B75 CD 42 93     	call Determina_resultado_comparativa
 588  8B78
 589  8B78 78           	ld a,b
 590  8B79 A7           	and a
 591  8B7A 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 592  8B7C
 593  8B7C              ; ----- ----- -----
 594  8B7C
 595  8B7C 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 596  8B7E 32 CF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 597  8B81
 598  8B81 21 F9 89     	ld hl,Ctrl_1
 599  8B84 CB 96        	res 2,(hl)
 600  8B86
 601  8B86 CD FD 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 602  8B89
 603  8B89 3A E4 89     	ld a,(Ctrl_0)
 604  8B8C CB 67        	bit 4,a
 605  8B8E 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 606  8B90
 607  8B90              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 608  8B90              ; [[[
 609  8B90 CD AC 8E     	call Detecta_disparo_entidad
 610  8B93              ; ]]]
 611  8B93 CD 9B 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 612  8B96
 613  8B96 21 E4 89     	ld hl,Ctrl_0
 614  8B99 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 615  8B9B AF           	xor a
 616  8B9C 32 E5 89     	ld (Obj_dibujado),a
 617  8B9F
 618  8B9F CD D6 8D     17 call Store_Restore_cajas
 619  8BA2
 620  8BA2 C1           	pop bc
 621  8BA3 10 8B        	djnz 15B
 622  8BA5
 623  8BA5              ; ------------------------------------
 624  8BA5
 625  8BA5              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 626  8BA5              ; Hemos gestionado todas las unidades.
 627  8BA5              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 628  8BA5
 629  8BA5              ;	ld hl,Ctrl_1
 630  8BA5              ;	res 2,(hl)
 631  8BA5
 632  8BA5              ; ------------------------------------
 633  8BA5
 634  8BA5              ; Tras la gestión de las entidades, ... AMADEUS.
 635  8BA5
 636  8BA5 CD 38 8E     16 call Restore_Amadeus
 637  8BA8
 638  8BA8 3A CF 89     	ld a,(Impacto)
 639  8BAB A7           	and a
 640  8BAC 20 FE        	jr nz,$
 641  8BAE
 642  8BAE CD 5C 8C     	call Mov_Amadeus
 643  8BB1
 644  8BB1 3A E4 89     	ld a,(Ctrl_0)
 645  8BB4 CB 67        	bit 4,a
 646  8BB6 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 647  8BB8
 648  8BB8 CD 9B 8C     	call Guarda_foto_entidad_a_pintar
 649  8BBB
 650  8BBB 21 E4 89     14 ld hl,Ctrl_0
 651  8BBE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 652  8BC0
 653  8BC0 AF           	xor a
 654  8BC1 32 E5 89     	ld (Obj_dibujado),a
 655  8BC4
 656  8BC4 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 657  8BC7 CD 4A 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 658  8BCA
 659  8BCA              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 660  8BCA
 661  8BCA              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 662  8BCA
 663  8BCA              ;	call Calcula_numero_de_disparotes
 664  8BCA
 665  8BCA CD 1B 8D      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 666  8BCD              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 667  8BCD              ;														; _ interrupción.
 668  8BCD 3E 04        	ld a,4
 669  8BCF D3 FE        	out ($fe),a
 670  8BD1
 671  8BD1              ; ----------------------------------------
 672  8BD1
 673  8BD1 3A F9 89     	ld a,(Ctrl_1) 										; Existe Loop?
 674  8BD4 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 675  8BD6 CA C1 8A     	jp z,Main
 676  8BD9
 677  8BD9              ; -----
 678  8BD9              ;	(((
 679  8BD9
 680  8BD9 3A 41 8A     	ld a,(Contador_de_frames)
 681  8BDC 47           	ld b,a
 682  8BDD 3A 45 8A     	ld a,(Activa_recarga_cajas)
 683  8BE0 B8           	cp b
 684  8BE1 28 08        	jr z,20F
 685  8BE3
 686  8BE3 21 F9 89     	ld hl,Ctrl_1
 687  8BE6 CB E6        	set 4,(hl)
 688  8BE8 C3 C1 8A     	jp Main
 689  8BEB
 690  8BEB 21 F9 89     20 ld hl,Ctrl_1
 691  8BEE CB A6        	res 4,(hl)
 692  8BF0 F3           	di
 693  8BF1
 694  8BF1 3A 41 8A     	ld a,(Contador_de_frames)
 695  8BF4
 696  8BF4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 697  8BF4              ;! _ IMPREDECIBLE !!!!
 698  8BF4
 699  8BF4 C6 0A        	add 10
 700  8BF6 32 44 8A     	ld (Clock_Entidades_en_curso),a
 701  8BF9
 702  8BF9 C3 66 8A     	jp 4B
 703  8BFC
 704  8BFC C9           	ret
 705  8BFD
 706  8BFD              ; --------------------------------------------------------------------------------------------------------------
 707  8BFD              ;
 708  8BFD              ;	27/05/23
 709  8BFD
 710  8BFD              Mov_obj
 711  8BFD
 712  8BFD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 713  8BFD
 714  8BFD 3A F7 89     	ld a,(Ctrl_2)
 715  8C00 CB 4F        	bit 1,a
 716  8C02 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 717  8C04
 718  8C04              ; Explosión:
 719  8C04
 720  8C04 3A F8 89     	ld a,(Frames_explosion)
 721  8C07 A7           	and a
 722  8C08 20 11        	jr nz,4F
 723  8C0A
 724  8C0A              ; Una alimaña menos!!!!!!!!!1
 725  8C0A
 726  8C0A CD 53 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 727  8C0D 21 03 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 728  8C10 35           	dec (hl)
 729  8C11 21 04 8A     	ld hl,Entidades_en_curso
 730  8C14 35           	dec (hl)
 731  8C15 21 02 8A     	ld hl,Numero_de_entidades
 732  8C18 35           	dec (hl)
 733  8C19 18 40        	jr 3F
 734  8C1B
 735  8C1B              ; -----
 736  8C1B
 737  8C1B              ;	`Movemos´ la explosión.
 738  8C1B
 739  8C1B 2A C4 89     4 ld hl,(Puntero_DESPLZ_der)
 740  8C1E 23           	inc hl
 741  8C1F 23           	inc hl
 742  8C20 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 743  8C23 CD 88 8D     	call Extrae_address
 744  8C26 22 BA 89     	ld (Puntero_objeto),hl
 745  8C29
 746  8C29 21 F8 89     	ld hl,Frames_explosion
 747  8C2C 35           	dec (hl)
 748  8C2D
 749  8C2D CD 8B 8C     	call Guarda_foto_entidad_a_borrar
 750  8C30 18 29        	jr 3F
 751  8C32
 752  8C32 AF           2 xor a
 753  8C33 32 E5 89     	ld (Obj_dibujado),a
 754  8C36 32 E4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 755  8C39              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 756  8C39              ; 														; _de la entidad.
 757  8C39 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 758  8C3C              ;														; Obj_dibujado="0".
 759  8C3C              ; Movemos Entidades malignas.
 760  8C3C
 761  8C3C              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 762  8C3C              ;	and a 												; _a movernos. (Limitador_de_entidades).
 763  8C3C              ;	ret z
 764  8C3C
 765  8C3C CD 53 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 766  8C3F
 767  8C3F 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 768  8C42 CB 67        	bit 4,a
 769  8C44 C8           	ret z
 770  8C45
 771  8C45              ; Ha habido desplazamiento de la entidad maligna.
 772  8C45              ; Ha llegado a zona de AMADEUS ???
 773  8C45
 774  8C45 3A BD 89     	ld a,(Coordenada_y)
 775  8C48 FE 14        	cp $14
 776  8C4A D4 D0 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 777  8C4D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 778  8C4D              ; ---------
 779  8C4D
 780  8C4D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 781  8C4F 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 782  8C52 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 783  8C55 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 784  8C58 CD 8B 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 785  8C5B C9           3 ret													; _de la misma.
 786  8C5C
 787  8C5C              ; --------------------------------------------------------------------------------------------------------------
 788  8C5C              ;
 789  8C5C              ;	29/1/23
 790  8C5C
 791  8C5C              Mov_Amadeus
 792  8C5C
 793  8C5C AF           	xor a
 794  8C5D 32 E5 89     	ld (Obj_dibujado),a
 795  8C60 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 796  8C63              ;														; Obj_dibujado="0".
 797  8C63              ; Movemos Amadeus.
 798  8C63
 799  8C63 CD 75 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 800  8C66 3A E4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 801  8C69 CB 67        	bit 4,a
 802  8C6B C8           	ret z
 803  8C6C
 804  8C6C              ; ---------
 805  8C6C
 806  8C6C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 807  8C6E 32 E5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 808  8C71 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 809  8C74 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 810  8C77 CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 811  8C7A C9           	ret													; _de la nave.
 812  8C7B
 813  8C7B              ; -----------------------------------------------------------------------------------
 814  8C7B
 815  8C7B CD 8E 8D     Inicia_entidad	call Inicia_Puntero_objeto
 816  8C7E CD 07 9A     	call Recompone_posicion_inicio
 817  8C81 CD 29 94     	call Draw
 818  8C84 CD A0 7F     	call Guarda_foto_registros
 819  8C87 CD D6 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 820  8C8A C9           	ret
 821  8C8B
 822  8C8B              ; --------------------------------------------------------------------------------------------------------------
 823  8C8B              ;
 824  8C8B              ;	31/01/23
 825  8C8B              ;
 826  8C8B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 827  8C8B
 828  8C8B              Guarda_foto_entidad_a_borrar
 829  8C8B
 830  8C8B CD 0D 97     	call Prepara_draw
 831  8C8E CD 3D 96     	call calcula_CColumnass
 832  8C91 CD 74 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 833  8C94 CD D3 96     	call Define_rutina_de_impresion
 834  8C97 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 835  8C9A C9           	ret
 836  8C9B
 837  8C9B              ; --------------------------------------------------------------------------------------------------------------
 838  8C9B              ;
 839  8C9B              ;	31/01/23
 840  8C9B              ;
 841  8C9B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 842  8C9B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 843  8C9B
 844  8C9B              Guarda_foto_entidad_a_pintar
 845  8C9B
 846  8C9B CD C8 8C     	call Repone_pintar
 847  8C9E CD 29 94     	call Draw
 848  8CA1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 849  8CA4 C9           	ret
 850  8CA5
 851  8CA5              ; --------------------------------------------------------------------------------------------------------------
 852  8CA5              ;
 853  8CA5              ;
 854  8CA5
 855  8CA5 21 B6 89     Prepara_var_pintado_borrado	ld hl,Filas
 856  8CA8 3A E5 89     	ld a,(Obj_dibujado)
 857  8CAB A7           	and a
 858  8CAC 28 05        	jr z,1F
 859  8CAE 11 DA 89     	ld de,Variables_de_pintado
 860  8CB1 18 03        	jr 2F
 861  8CB3 11 D0 89     1 ld de,Variables_de_borrado
 862  8CB6 01 08 00     2 ld bc,8
 863  8CB9 ED B0        	ldir
 864  8CBB C9           	ret
 865  8CBC
 866  8CBC              ; --------------------------------------------------------------------------------------------------------------
 867  8CBC
 868  8CBC 21 D0 89     Repone_borrar ld hl,Variables_de_borrado
 869  8CBF 11 B6 89     	ld de,Filas
 870  8CC2 01 08 00     	ld bc,8
 871  8CC5 ED B0        	ldir
 872  8CC7 C9           	ret
 873  8CC8
 874  8CC8 21 DA 89     Repone_pintar ld hl,Variables_de_pintado
 875  8CCB 11 B6 89     	ld de,Filas
 876  8CCE 01 08 00     	ld bc,8
 877  8CD1 ED B0        	ldir
 878  8CD3 C9           	ret
 879  8CD4
 880  8CD4              ; *************************************************************************************************************************************************************
 881  8CD4              ;
 882  8CD4              ; 8/1/23
 883  8CD4              ;
 884  8CD4              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 885  8CD4              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 886  8CD4              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 887  8CD4
 888  8CD4              ; Destruye HL y DE !!!!!
 889  8CD4
 890  8CD4              Inicia_punteros_de_cajas
 891  8CD4
 892  8CD4 21 8C 85     	ld hl,Indice_de_cajas
 893  8CD7 CD 88 8D         call Extrae_address
 894  8CDA 22 FC 89         ld (Puntero_store_caja),hl
 895  8CDD 21 8E 85     	ld hl,Indice_de_cajas+2
 896  8CE0 22 00 8A     	ld (Indice_restore_caja),hl
 897  8CE3 CD 88 8D     	call Extrae_address
 898  8CE6 22 FE 89     	ld (Puntero_restore_caja),hl
 899  8CE9 C9               ret
 900  8CEA
 901  8CEA              ; ---------------------------------------------------------------
 902  8CEA              ;
 903  8CEA              ;	9/8/23
 904  8CEA              ;
 905  8CEA              ;	Inicialización y gestión de álbumes de fotos y cajas.
 906  8CEA
 907  8CEA              Inicia_punteros_de_albumes_y_malotes
 908  8CEA
 909  8CEA 21 EC 84     	ld hl,Indice_album_de_fotos
 910  8CED 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 911  8CF0 CD 88 8D     	call Extrae_address
 912  8CF3 22 0E 8A     	ld (Stack_snapshot),hl
 913  8CF6
 914  8CF6 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 915  8CF9 22 24 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 916  8CFC CD 88 8D     	call Extrae_address
 917  8CFF 22 10 8A     	ld (Stack_snapshot_disparos),hl
 918  8D02
 919  8D02 21 FC 84     	ld hl,Indice_End_Snapshot
 920  8D05 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 921  8D08 CD 88 8D     	call Extrae_address
 922  8D0B 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 923  8D0E
 924  8D0E 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 925  8D11 22 28 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 926  8D14 CD 88 8D     	call Extrae_address
 927  8D17 22 2C 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 928  8D1A
 929  8D1A C9           	ret
 930  8D1B
 931  8D1B              ;	12/8/23
 932  8D1B
 933  8D1B              Avanza_puntero_de_album_de_fotos_y_malotes
 934  8D1B
 935  8D1B              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 936  8D1B
 937  8D1B              ; Estamos en el último álbum del índice???.
 938  8D1B
 939  8D1B 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
 940  8D1E 01 F2 84     	ld bc,Indice_album_de_fotos+6
 941  8D21 A7           	and a
 942  8D22 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 943  8D24 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 944  8D26
 945  8D26 21 F9 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 946  8D29 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 947  8D2B 76           	halt
 948  8D2C C9           	ret
 949  8D2D
 950  8D2D 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 951  8D30 23           	inc hl
 952  8D31 23           	inc hl
 953  8D32 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
 954  8D35 CD 88 8D     	call Extrae_address
 955  8D38 22 0E 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 956  8D3B
 957  8D3B 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
 958  8D3E 23           	inc hl
 959  8D3F 23           	inc hl
 960  8D40 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
 961  8D43 CD 88 8D     	call Extrae_address
 962  8D46 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
 963  8D49
 964  8D49 C9           	ret
 965  8D4A
 966  8D4A              ; *************************************************************************************************************************************************************
 967  8D4A              ;
 968  8D4A              ; 8/1/23
 969  8D4A              ;
 970  8D4A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 971  8D4A
 972  8D4A 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 973  8D4D 22 2F 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 974  8D50 C9           	ret
 975  8D51 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 976  8D54 22 31 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 977  8D57 C9           	ret
 978  8D58
 979  8D58              ; -------------------------------------------------------------------------------------------------------------
 980  8D58              ;
 981  8D58              ; 3/8/23
 982  8D58              ;
 983  8D58
 984  8D58              Calcula_numero_de_malotes
 985  8D58
 986  8D58 21 00 70     	ld hl,Album_de_fotos
 987  8D5B EB           	ex de,hl
 988  8D5C 2A 12 8A     	ld hl,(End_Snapshot)
 989  8D5F
 990  8D5F 06 00        	ld b,0
 991  8D61 7D           	ld a,l
 992  8D62 93           	sub e
 993  8D63 28 07        	jr z,1F
 994  8D65
 995  8D65              ; Nº de malotes no es "0".
 996  8D65
 997  8D65 D6 06        2 sub 6
 998  8D67 04           	inc b
 999  8D68 A7           	and a
1000  8D69 20 FA        	jr nz,2B
1001  8D6B 78           	ld a,b
1002  8D6C
1003  8D6C 32 05 8A     1 ld (Numero_de_malotes),a
1004  8D6F C9           	ret
1005  8D70
1006  8D70              ; -------------------------------------------------------------------------------------------------------------
1007  8D70              ;
1008  8D70              ; 28/2/23
1009  8D70              ;
1010  8D70
1011  8D70              Calcula_numero_de_disparotes
1012  8D70
1013  8D70 21 0D 72     	ld hl,Album_de_fotos_disparos
1014  8D73 EB           	ex de,hl
1015  8D74 2A 2C 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1016  8D77
1017  8D77 06 00        	ld b,0
1018  8D79 7D           	ld a,l
1019  8D7A 93           	sub e
1020  8D7B 28 07        	jr z,1F
1021  8D7D
1022  8D7D              ; Nº de malotes no es "0".
1023  8D7D
1024  8D7D D6 06        2 sub 6
1025  8D7F 04           	inc b
1026  8D80 A7           	and a
1027  8D81 20 FA        	jr nz,2B
1028  8D83 78           	ld a,b
1029  8D84
1030  8D84 32 2E 8A     1 ld (Numero_de_disparotes),a
1031  8D87 C9           	ret
1032  8D88
1033  8D88              ; *************************************************************************************************************************************************************
1034  8D88              ;
1035  8D88              ; 20/10/22
1036  8D88              ;
1037  8D88              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1038  8D88              ;
1039  8D88              ; Destruye el puntero y DE !!!!!
1040  8D88
1041  8D88 5E           Extrae_address ld e,(hl)
1042  8D89 23           	inc hl
1043  8D8A 56           	ld d,(hl)
1044  8D8B 2B           	dec hl
1045  8D8C EB           	ex de,hl
1046  8D8D C9           	ret
1047  8D8E
1048  8D8E              ; *************************************************************************************************************************************************************
1049  8D8E              ;
1050  8D8E              ;	7/2/23
1051  8D8E              ;
1052  8D8E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1053  8D8E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1054  8D8E              ;
1055  8D8E              ;   Destruye HL y BC !!!!!,
1056  8D8E              ;
1057  8D8E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1058  8D8E              ;					"0" ..... Izquierda.
1059  8D8E
1060  8D8E              Inicia_Puntero_objeto
1061  8D8E
1062  8D8E 3A CA 89     	ld a,(Cuad_objeto)
1063  8D91 E6 01        	and 1
1064  8D93 F5           	push af
1065  8D94 CC B2 8D     	call z,Inicia_puntero_objeto_izq
1066  8D97 F1           	pop af
1067  8D98 28 2B        	jr z,1F
1068  8D9A CD 9F 8D     	call Inicia_puntero_objeto_der
1069  8D9D 18 26        	jr 1F
1070  8D9F
1071  8D9F              ; Arrancamos desde la parte izquierda de la pantalla.
1072  8D9F              ; Iniciamos (Indice_Sprite_der).
1073  8D9F
1074  8D9F 2A C0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1075  8DA2 22 C4 89     	ld (Puntero_DESPLZ_der),hl
1076  8DA5 CD 88 8D     	call Extrae_address
1077  8DA8 22 BA 89     	ld (Puntero_objeto),hl
1078  8DAB
1079  8DAB 2A C2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1080  8DAE 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1081  8DB1 C9           	ret
1082  8DB2
1083  8DB2              ; Arrancamos desde la parte derecha de la pantalla.
1084  8DB2              ; Iniciamos (Indice_Sprite_izq).
1085  8DB2
1086  8DB2 2A C2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1087  8DB5 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
1088  8DB8 CD 88 8D     	call Extrae_address
1089  8DBB 22 BA 89     	ld (Puntero_objeto),hl
1090  8DBE
1091  8DBE 2A C0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1092  8DC1 22 C4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1093  8DC4 C9           	ret
1094  8DC5
1095  8DC5              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1096  8DC5
1097  8DC5 21 40 83     1 ld hl,Amadeus
1098  8DC8 ED 4B BA 89  	ld bc,(Puntero_objeto)
1099  8DCC B7 ED 42     	sub hl,bc
1100  8DCF C0           	ret nz
1101  8DD0 21 E4 89     	ld hl,Ctrl_0
1102  8DD3 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1103  8DD5 C9           	ret 												; _de nuestra nave en los extremos.
1104  8DD6
1105  8DD6              ; *************************************************************************************************************************************************************
1106  8DD6              ;
1107  8DD6              ;	14/5/23
1108  8DD6              ;
1109  8DD6              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1110  8DD6              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1111  8DD6
1112  8DD6              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1113  8DD6              ;	_de la 2ª y 3ª entidad respectivamente.
1114  8DD6
1115  8DD6              Store_Restore_cajas
1116  8DD6
1117  8DD6 E5           	push hl
1118  8DD7 D5           	push de
1119  8DD8 C5            	push bc
1120  8DD9
1121  8DD9              ;	STORE !!!!!
1122  8DD9              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1123  8DD9
1124  8DD9 21 B6 89     	ld hl,Filas
1125  8DDC ED 5B FC 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1126  8DE0 01 43 00     	ld bc,67
1127  8DE3 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1128  8DE5
1129  8DE5              ; 	Entidad_sospechosa. 20/4/23
1130  8DE5
1131  8DE5 3A CF 89     	ld a,(Impacto)
1132  8DE8 A7           	and a
1133  8DE9 28 0C        	jr z,1F
1134  8DEB
1135  8DEB 2A FC 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1136  8DEE 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1137  8DF1 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1138  8DF2 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1139  8DF4 22 34 8A     	ld (Entidad_sospechosa_de_colision),hl
1140  8DF7
1141  8DF7              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1142  8DF7
1143  8DF7 2A FE 89     1 ld hl,(Puntero_restore_caja)
1144  8DFA 7E           	ld a,(hl)
1145  8DFB A7           	and a
1146  8DFC F5           	push af
1147  8DFD 28 08        	jr z,2F
1148  8DFF
1149  8DFF 11 B6 89     	ld de,Filas
1150  8E02 01 43 00     	ld bc,67
1151  8E05 ED B0        	ldir
1152  8E07
1153  8E07 CD 23 8E     2 call Incrementa_punteros_de_cajas
1154  8E0A F1           	pop af
1155  8E0B 28 EA        	jr z,1B
1156  8E0D
1157  8E0D C1           	pop bc
1158  8E0E D1           	pop de
1159  8E0F E1           	pop hl
1160  8E10
1161  8E10 C9           	ret
1162  8E11
1163  8E11              ; **************************************************************************************************
1164  8E11              ;
1165  8E11              ;	12/05/23
1166  8E11              ;
1167  8E11              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1168  8E11
1169  8E11 E5           Restore_entidad push hl
1170  8E12 D5           	push de
1171  8E13 C5            	push bc
1172  8E14
1173  8E14 2A FC 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1174  8E17 11 B6 89     	ld de,Filas
1175  8E1A 01 43 00     	ld bc,67
1176  8E1D ED B0        	ldir
1177  8E1F
1178  8E1F C1           	pop bc
1179  8E20 D1           	pop de
1180  8E21 E1           	pop hl
1181  8E22 C9           	ret
1182  8E23
1183  8E23
1184  8E23              ; **************************************************************************************************
1185  8E23              ;
1186  8E23              ;	08/05/23
1187  8E23              ;
1188  8E23              ;	Incrementamos los dos punteros de entidades. (+1).
1189  8E23
1190  8E23 2A FE 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1191  8E26 22 FC 89     	ld (Puntero_store_caja),hl
1192  8E29 2A 00 8A     	ld hl,(Indice_restore_caja)
1193  8E2C 23           	inc hl
1194  8E2D 23           	inc hl
1195  8E2E 22 00 8A     	ld (Indice_restore_caja),hl
1196  8E31 CD 88 8D         call Extrae_address
1197  8E34 22 FE 89         ld (Puntero_restore_caja),hl
1198  8E37 C9               ret
1199  8E38
1200  8E38              ; **************************************************************************************************
1201  8E38              ;
1202  8E38              ;	25/01/23
1203  8E38              ;
1204  8E38              ;	Restore_Amadeus
1205  8E38              ;
1206  8E38              ;	Cargamos en DRAW los parámetros de Amadeus.
1207  8E38              ;
1208  8E38
1209  8E38 E5           Restore_Amadeus	push hl
1210  8E39 D5           	push de
1211  8E3A C5            	push bc
1212  8E3B 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1213  8E3E 11 B6 89     	ld de,Filas
1214  8E41 01 43 00     	ld bc,67
1215  8E44 ED B0        	ldir
1216  8E46 C1           	pop bc
1217  8E47 D1           	pop de
1218  8E48 E1           	pop hl
1219  8E49 C9           	ret
1220  8E4A
1221  8E4A              ; *************************************************************************************************************************************************************
1222  8E4A              ;
1223  8E4A              ;	29/04/23
1224  8E4A              ;
1225  8E4A              ;	Store_Amadeus
1226  8E4A              ;
1227  8E4A              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1228  8E4A              ;
1229  8E4A              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1230  8E4A              ;
1231  8E4A              ;	DESTRUYE: HL y BC y DE.
1232  8E4A
1233  8E4A 21 B6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1234  8E4D 01 43 00     	ld bc,67
1235  8E50 ED B0        	ldir
1236  8E52 C9           	ret
1237  8E53
1238  8E53              ; -----------------------------------------------------------
1239  8E53              ;
1240  8E53              ;	27/04/23
1241  8E53              ;
1242  8E53              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1243  8E53              ;
1244  8E53              ;	Destruye: HL,BC,DE,A
1245  8E53
1246  8E53 21 B6 89     Borra_datos_entidad ld hl,Filas
1247  8E56 01 42 00     	ld bc,66
1248  8E59 AF           	xor a
1249  8E5A 77           	ld (hl),a
1250  8E5B 11 B7 89     	ld de,Filas+1
1251  8E5E ED B0        	ldir
1252  8E60 C9           	ret
1253  8E61
1254  8E61              ; -----------------------------------------------------------
1255  8E61
1256  8E61              ; Teclado.
1257  8E61
1258  8E61 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1259  8E63 DB FE        	in a,($fe)
1260  8E65 E6 01        	and $01
1261  8E67 28 02        	jr z,1f
1262  8E69 18 F6        	jr Pulsa_ENTER
1263  8E6B C9           1 ret
1264  8E6C
1265  8E6C              ; **************************************************************************************************
1266  8E6C              ;
1267  8E6C              ; Temporización.
1268  8E6C
1269  8E6C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1270  8E6C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1271  8E6C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1272  8E6C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1273  8E6C
1274  8E6C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1275  8E6C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1276  8E6C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1277  8E6C
1278  8E6C              ; A partir de $4f61 no hace falta DELAY.
1279  8E6C
1280  8E6C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1281  8E6C
1282  8E6C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1283  8E6F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1284  8E70 78           	LD A,B
1285  8E71 A7           	AND A
1286  8E72 20 FB        	JR NZ,wait
1287  8E74 C9           	RET
1288  8E75
1289  8E75              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1290  8E75              ;
1291  8E75              ;	5/3/23
1292  8E75              ;
1293  8E75              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1294  8E75
1295  8E75              Movimiento_Amadeus
1296  8E75
1297  8E75              ; Disparo.
1298  8E75
1299  8E75 3A 46 8A     	ld a,(Disparo_Amadeus)
1300  8E78 A7           	and a
1301  8E79 20 02        	jr nz,1F
1302  8E7B 18 15        	jr 2F
1303  8E7D
1304  8E7D 3E F7        1 ld a,$f7													; "5" para disparar.
1305  8E7F DB FE        	in a,($fe)
1306  8E81 E6 10        	and $10
1307  8E83
1308  8E83 F5           	push af
1309  8E84 CC 33 8F     	call z,Genera_disparo
1310  8E87 F1           	pop af
1311  8E88 20 08        	jr nz,2F
1312  8E8A
1313  8E8A 3A 46 8A     	ld a,(Disparo_Amadeus)
1314  8E8D EE 01        	xor 1
1315  8E8F 32 46 8A     	ld (Disparo_Amadeus),a
1316  8E92
1317  8E92 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1318  8E94 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1319  8E96 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1320  8E98 CC C1 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1321  8E9B 3E F7        	ld a,$f7
1322  8E9D DB FE        	in a,($fe)
1323  8E9F E6 01        	and $01
1324  8EA1 C8           	ret z
1325  8EA2
1326  8EA2 3E F7        	ld a,$f7
1327  8EA4 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1328  8EA6 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1329  8EA8 CC A3 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1330  8EAB C9           	ret
1331  8EAC
1332  8EAC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1333  8EAC              ;
1334  8EAC              ;	Rutina provisional para que los malotes cagen balas.
1335  8EAC
1336  8EAC              Detecta_disparo_entidad
1337  8EAC
1338  8EAC 3A 49 8A     	ld a,(Disparo_entidad)
1339  8EAF A7           	and a
1340  8EB0 C8           	ret z
1341  8EB1
1342  8EB1              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1343  8EB1
1344  8EB1              ;	ld a,$7f				; Detecta SPACE.
1345  8EB1              ;	in a,($fe)
1346  8EB1              ;	and 1
1347  8EB1              ;	ret nz
1348  8EB1
1349  8EB1              ;	call Genera_disparo
1350  8EB1 C9           	ret
1351  8EB2
1352  8EB2              ; ----------------------------------------------------------------------
1353  8EB2              ;
1354  8EB2              ;	11/8/23
1355  8EB2
1356  8EB2              Frame
1357  8EB2
1358  8EB2              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1359  8EB2              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1360  8EB2
1361  8EB2              ; PINTAMOS.
1362  8EB2
1363  8EB2 F5           	push af
1364  8EB3 C5           	push bc
1365  8EB4 D5           	push de
1366  8EB5 E5           	push hl
1367  8EB6
1368  8EB6 3E 02            ld a,2
1369  8EB8 D3 FE            out ($fe),a											; Rojo.
1370  8EBA
1371  8EBA              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1372  8EBA              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1373  8EBA
1374  8EBA              ;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1375  8EBA
1376  8EBA 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1377  8EBD 01 EC 84     	ld bc,Indice_album_de_fotos
1378  8EC0 A7           	and a
1379  8EC1 ED 42        	sbc hl,bc
1380  8EC3 28 64        	jr z,6F
1381  8EC5
1382  8EC5 CD 58 8D     	call Calcula_numero_de_malotes
1383  8EC8
1384  8EC8              ;;! debuggg !!!
1385  8EC8 3A 42 8A     	ld a,(Contador_de_frames_2)
1386  8ECB FE 01        	cp 1
1387  8ECD 20 0C        	jr nz,4F
1388  8ECF 3A 41 8A     	ld a,(Contador_de_frames)
1389  8ED2 FE 5C        	cp $5c 		; Último FRAME estable, a partir de aquí hay que hacer seguimiento.	$5d.
1390  8ED4 28 FE        	jr z,$
1391  8ED6 30 FE        	jr nc,$
1392  8ED8 2A 0E 8A     	ld hl,(Stack_snapshot)
1393  8EDB              ;;! debuggg !!!;
1394  8EDB
1395  8EDB CD 37 97     4 call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1396  8EDE              ;	call Extrae_foto_disparos
1397  8EDE 3E 01            ld a,1
1398  8EE0 D3 FE            out ($fe),a											; Azul.
1399  8EE2
1400  8EE2              ; 	Gestiona los álbumes de fotos.
1401  8EE2
1402  8EE2 CD 81 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1403  8EE5 CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1404  8EE8
1405  8EE8              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1406  8EE8
1407  8EE8 3A F9 89     	ld a,(Ctrl_1)
1408  8EEB CB 6F        	bit 5,a
1409  8EED 20 24        	jr nz,1F
1410  8EEF
1411  8EEF              ; No hemos terminado de guardar el último FRAME.
1412  8EEF
1413  8EEF 2A 22 8A     	ld hl,(Puntero_indice_album_de_fotos)
1414  8EF2              ;	ld bc,Indice_album_de_fotos
1415  8EF2 2B           	dec hl
1416  8EF3 2B           	dec hl
1417  8EF4
1418  8EF4              ;	ld a,l
1419  8EF4              ;	sub c
1420  8EF4              ;	jr z,$
1421  8EF4
1422  8EF4 22 22 8A     	ld (Puntero_indice_album_de_fotos),hl
1423  8EF7
1424  8EF7 2A 26 8A     	ld hl,(Puntero_indice_End_Snapshot)
1425  8EFA 2B           	dec hl
1426  8EFB 2B           	dec hl
1427  8EFC 22 26 8A     	ld (Puntero_indice_End_Snapshot),hl
1428  8EFF CD 88 8D     	call Extrae_address
1429  8F02 22 2A 8A     	ld (Puntero_de_End_Snapshot),hl
1430  8F05
1431  8F05 CD 88 8D     	call Extrae_address
1432  8F08
1433  8F08              ; Esta vacío este album???
1434  8F08
1435  8F08 24           	inc h
1436  8F09 25           	dec h
1437  8F0A 20 02        	jr nz,5F
1438  8F0C
1439  8F0C              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1440  8F0C
1441  8F0C 18 05        	jr 1F
1442  8F0E
1443  8F0E 22 0E 8A     5 ld (Stack_snapshot),hl
1444  8F11 18 09        	jr 2F
1445  8F13
1446  8F13              ; FRAME completo.
1447  8F13
1448  8F13 2A 22 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1449  8F16 CD 88 8D     	call Extrae_address
1450  8F19 22 0E 8A     	ld (Stack_snapshot),hl
1451  8F1C
1452  8F1C              ;	En este punto:
1453  8F1C
1454  8F1C              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1455  8F1C              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1456  8F1C
1457  8F1C              ; RELOJES.
1458  8F1C
1459  8F1C 21 41 8A     2 ld hl,Contador_de_frames
1460  8F1F 7E           	ld a,(hl)
1461  8F20 FE FF        	cp $ff
1462  8F22 20 04        	jr nz,3F
1463  8F24 34           	inc (hl)
1464  8F25
1465  8F25 21 42 8A     	ld hl,Contador_de_frames_2
1466  8F28 34           3 inc (hl)											; 0 - 255
1467  8F29
1468  8F29 21 F9 89     6 ld hl,Ctrl_1										; Restauramos balizas de buffer.
1469  8F2C CB AE        	res 5,(hl)
1470  8F2E
1471  8F2E E1           	pop hl
1472  8F2F D1           	pop de
1473  8F30 C1           	pop bc
1474  8F31 F1           	pop af
1475  8F32
1476  8F32 C9           	ret
1477  8F33
1478  8F33              ; ---------------------------------------------------------------
1479  8F33
1480  8F33              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F33              ; ******************************************************************************************************************************************************************************************
   2+ 8F33              ;
   3+ 8F33              ;   21/07/23
   4+ 8F33              ;
   5+ 8F33              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F33              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F33              ;
   8+ 8F33              ;
   9+ 8F33              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F33              ;
  11+ 8F33              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F33              ;               _ hacen las entidades hacia abajo.
  13+ 8F33              ;
  14+ 8F33              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F33              ;
  16+ 8F33              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F33              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F33              ;
  19+ 8F33              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F33              ;           _ la bala.
  21+ 8F33              ;
  22+ 8F33              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F33              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F33              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F33              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F33              ;           _ en el momento de generarse la bala)).
  27+ 8F33
  28+ 8F33              Genera_disparo
  29+ 8F33
  30+ 8F33              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F33              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F33              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F33              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F33              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F33              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F33              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F33
  38+ 8F33              ; Exclusiones:
  39+ 8F33
  40+ 8F33 3A CE 89         ld a,(Vel_down)
  41+ 8F36 47               ld b,a
  42+ 8F37 3A 40 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F3A B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F3B D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F3C 3A F3 89         ld a,(Columnas)
  46+ 8F3F 47               ld b,a
  47+ 8F40 3A B7 89         ld a,(Columns)
  48+ 8F43 B8               cp b
  49+ 8F44 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F45
  51+ 8F45              ; ----- ----- -----
  52+ 8F45
  53+ 8F45 3A E4 89         ld a,(Ctrl_0)
  54+ 8F48 CB 77            bit 6,a
  55+ 8F4A 20 06            jr nz,14F
  56+ 8F4C
  57+ 8F4C 3A BD 89         ld a,(Coordenada_y)
  58+ 8F4F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F51 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F52
  61+ 8F52 21 00 80     14 ld hl,Indice_disparo
  62+ 8F55 3A BE 89         ld a,(CTRL_DESPLZ)
  63+ 8F58 4F               ld c,a
  64+ 8F59 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F5B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F5B              ;                                            ""        ""       "f9", B="1"
  67+ 8F5B              ;                                            ""        ""       "fb", B="2"
  68+ 8F5B              ;                                            ""        ""       "fb", B="3"
  69+ 8F5B A7               and a
  70+ 8F5C 28 10            jr z,1F
  71+ 8F5E E6 01            and 1
  72+ 8F60 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F61
  74+ 8F61 79               ld a,c
  75+ 8F62 16 F9            ld d,$f9
  76+ 8F64 23           2 inc hl
  77+ 8F65 23               inc hl
  78+ 8F66 04               inc b
  79+ 8F67 BA               cp d
  80+ 8F68 28 04            jr z,1F
  81+ 8F6A 14               inc d
  82+ 8F6B 14               inc d
  83+ 8F6C 18 F6            jr 2B
  84+ 8F6E
  85+ 8F6E CD 88 8D     1 call Extrae_address
  86+ 8F71 E5               push hl
  87+ 8F72 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F74 DD 21 BC 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F78
  90+ 8F78              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F78              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F78
  93+ 8F78 3A E4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F7B CB 77            bit 6,a
  95+ 8F7D 20 04            jr nz,19F
  96+ 8F7F
  97+ 8F7F AF               xor a
  98+ 8F80 32 49 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F83
 100+ 8F83 3A CA 89     19 ld a,(Cuad_objeto)
 101+ 8F86 FE 02            cp 2
 102+ 8F88 38 66            jr c,3F
 103+ 8F8A 28 64            jr z,3F
 104+ 8F8C
 105+ 8F8C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F8C
 107+ 8F8C E6 01            and 1
 108+ 8F8E 28 30            jr z,4F
 109+ 8F90
 110+ 8F90              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F90              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F90              ;
 113+ 8F90              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F90              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F90              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F90
 117+ 8F90 2A B8 89     	ld hl,(Posicion_actual)
 118+ 8F93
 119+ 8F93              ;   Amadeus o entidad ???.
 120+ 8F93
 121+ 8F93 3A E4 89         ld a,(Ctrl_0)
 122+ 8F96 CB 77            bit 6,a
 123+ 8F98 28 0A            jr z,8F
 124+ 8F9A
 125+ 8F9A              ; 	Dispara Amadeus.
 126+ 8F9A
 127+ 8F9A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F9C CD 28 97         call PreviousScan
 129+ 8F9F CD 28 97         call PreviousScan
 130+ 8FA2
 131+ 8FA2              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8FA2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8FA2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8FA2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8FA2
 136+ 8FA2 18 11            jr 10F
 137+ 8FA4
 138+ 8FA4              ; 	Dispara Entidad.
 139+ 8FA4
 140+ 8FA4 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8FA7              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8FA7
 143+ 8FA7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8FA7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8FA7
 146+ 8FA7 C5               push bc
 147+ 8FA8 06 10            ld b,16
 148+ 8FAA CD 19 97     9 call NextScan
 149+ 8FAD 10 FB            djnz 9B
 150+ 8FAF C1               pop bc
 151+ 8FB0 CD 1A 90         call Ajusta_disparo_parte_izquierda
 152+ 8FB3 18 06            jr 17F
 153+ 8FB5
 154+ 8FB5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8FB5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8FB5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8FB5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8FB5
 159+ 8FB5 CD 1A 90     10 call Ajusta_disparo_parte_izquierda
 160+ 8FB8 CD 8F 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8FBB              ;                                                      ; _al generar el disparo.
 162+ 8FBB
 163+ 8FBB              ; 	LLegados a este punto tendremos:
 164+ 8FBB              ;
 165+ 8FBB              ;       Puntero_objeto_disparo en IY.
 166+ 8FBB              ;       Rutinas_de_impresion en IX.
 167+ 8FBB              ;       Puntero_de_impresion en HL.
 168+ 8FBB              ;       Impacto/Dirección en BC.
 169+ 8FBB
 170+ 8FBB CD 22 90     17 call Almacena_disparo
 171+ 8FBE 18 52            jr 6F                                             ; RET.
 172+ 8FC0
 173+ 8FC0              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8FC0              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8FC0              ;
 176+ 8FC0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8FC0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8FC0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8FC0
 180+ 8FC0 2A B8 89     4 ld hl,(Posicion_actual)
 181+ 8FC3
 182+ 8FC3              ;   Amadeus o entidad ???.
 183+ 8FC3
 184+ 8FC3 3A E4 89         ld a,(Ctrl_0)
 185+ 8FC6 CB 77            bit 6,a
 186+ 8FC8 28 0A            jr z,11F
 187+ 8FCA
 188+ 8FCA              ; 	Dispara Amadeus.
 189+ 8FCA
 190+ 8FCA 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FCC CD 28 97         call PreviousScan
 192+ 8FCF CD 28 97         call PreviousScan
 193+ 8FD2
 194+ 8FD2              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FD2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FD2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FD2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FD2
 199+ 8FD2 18 11            jr 13F
 200+ 8FD4
 201+ 8FD4              ; 	Dispara Entidad.
 202+ 8FD4
 203+ 8FD4 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FD7              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FD7
 206+ 8FD7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FD7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FD7
 209+ 8FD7 C5               push bc
 210+ 8FD8 06 10            ld b,16
 211+ 8FDA CD 19 97     12 call NextScan
 212+ 8FDD 10 FB            djnz 12B
 213+ 8FDF C1               pop bc
 214+ 8FE0
 215+ 8FE0 CD 13 90         call Ajusta_disparo_parte_derecha
 216+ 8FE3 18 06            jr 18F
 217+ 8FE5
 218+ 8FE5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FE5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FE5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FE5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FE5
 223+ 8FE5 CD 13 90     13 call Ajusta_disparo_parte_derecha
 224+ 8FE8 CD 8F 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FEB              ;                                                       ; _al generar el disparo.
 226+ 8FEB
 227+ 8FEB              ; LLegados a este punto tendremos:
 228+ 8FEB              ;
 229+ 8FEB              ;       Puntero_objeto_disparo en IY.
 230+ 8FEB              ;       Rutinas_de_impresion en IX.
 231+ 8FEB              ;       Puntero_de_impresion en HL.
 232+ 8FEB              ;       Impacto/Dirección en BC.
 233+ 8FEB
 234+ 8FEB CD 22 90     18 call Almacena_disparo
 235+ 8FEE 18 22            jr 6F                                               ; RET.
 236+ 8FF0
 237+ 8FF0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FF0
 239+ 8FF0 28 11        3 jr z,5F
 240+ 8FF2
 241+ 8FF2              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FF2              ;
 243+ 8FF2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FF2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FF2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FF2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FF2
 248+ 8FF2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FF2              ;	   ""        ""       "f9", B="1"
 250+ 8FF2              ;	   ""        ""       "fb", B="2"
 251+ 8FF2              ; 	   ""        ""       "fb", B="3"
 252+ 8FF2
 253+ 8FF2 2A B8 89     	ld hl,(Posicion_actual)
 254+ 8FF5 CD 19 97     	call NextScan
 255+ 8FF8
 256+ 8FF8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FF8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FF8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FF8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FF8
 261+ 8FF8 CD 1A 90         call Ajusta_disparo_parte_izquierda
 262+ 8FFB
 263+ 8FFB              ; 	No se produce impacto. B="$80"
 264+ 8FFB              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FFB
 266+ 8FFB 01 80 80         ld bc,$8080
 267+ 8FFE
 268+ 8FFE              ; 	LLegados a este punto tendremos:
 269+ 8FFE              ;
 270+ 8FFE              ;       Puntero_objeto_disparo en IY.
 271+ 8FFE              ;       Rutinas_de_impresion en IX.
 272+ 8FFE              ;       Puntero_de_impresion en HL.
 273+ 8FFE              ;       Impacto/Dirección en BC.
 274+ 8FFE
 275+ 8FFE CD 22 90         call Almacena_disparo
 276+ 9001 18 0F            jr 6F                                           ; RET.
 277+ 9003
 278+ 9003              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9003              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9003              ;
 281+ 9003              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9003              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9003              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9003              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9003
 286+ 9003 2A B8 89     5 ld hl,(Posicion_actual)
 287+ 9006 CD 19 97     	call NextScan
 288+ 9009
 289+ 9009              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9009              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9009              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9009              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9009
 294+ 9009 CD 13 90         call Ajusta_disparo_parte_derecha
 295+ 900C
 296+ 900C              ; 	No se produce impacto. B="$80"
 297+ 900C              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 900C
 299+ 900C 01 80 80     15 ld bc,$8080
 300+ 900F
 301+ 900F              ; 	LLegados a este punto tendremos:
 302+ 900F              ;
 303+ 900F              ;       Puntero_objeto_disparo en IY.
 304+ 900F              ;       Rutinas_de_impresion en IX.
 305+ 900F              ;       Puntero_de_impresion en HL.
 306+ 900F              ;       Impacto/Dirección en BC.
 307+ 900F
 308+ 900F CD 22 90         call Almacena_disparo
 309+ 9012
 310+ 9012 C9           6 ret
 311+ 9013
 312+ 9013              ; ----------------------------------------------------------------
 313+ 9013              ;
 314+ 9013              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9013              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9013              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9013
 318+ 9013 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9014 FE 02            cp 2
 320+ 9016 38 01            jr c,1F
 321+ 9018 23               inc hl
 322+ 9019 C9           1 ret
 323+ 901A
 324+ 901A 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 901B FE 01        	cp 1
 326+ 901D 20 01        	jr nz,1F
 327+ 901F 2B           	dec hl
 328+ 9020 2B           1 dec hl
 329+ 9021 C9               ret
 330+ 9022
 331+ 9022              ; ----------------------------------------------------------------
 332+ 9022              ;
 333+ 9022              ;   25/02/23
 334+ 9022              ;
 335+ 9022              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9022              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9022              ;
 338+ 9022              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9022              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9022
 341+ 9022              Almacena_disparo
 342+ 9022
 343+ 9022 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9023 F1               pop af
 345+ 9024 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9025
 347+ 9025 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9026 E6 01            and 1
 349+ 9028 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 902A              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 902A              ; 	Dispara AMADEUS.
 352+ 902A
 353+ 902A              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 902A              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 902A              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 902A              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 902A
 358+ 902A C5               push bc
 359+ 902B 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 902E 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9031 A7               and a
 362+ 9032 ED 42            sbc hl,bc
 363+ 9034 CC 51 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9037 C1               pop bc
 365+ 9038 28 54            jr z,4F
 366+ 903A
 367+ 903A 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 903D 23               inc hl
 369+ 903E 23               inc hl
 370+ 903F 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9042              ;                                                   ; _ Disparo_(+1).
 372+ 9042 18 18            jr 2F
 373+ 9044
 374+ 9044              ; Dispara una entidad.
 375+ 9044
 376+ 9044 C5           1 push bc
 377+ 9045 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9048 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 904B A7               and a
 380+ 904C ED 42            sbc hl,bc
 381+ 904E CC 4A 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9051 C1               pop bc
 383+ 9052 28 3A            jr z,4F
 384+ 9054
 385+ 9054 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9057 23               inc hl
 387+ 9058 23               inc hl
 388+ 9059 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 905C              ;                                                   ; _ Disparo_(+1).
 390+ 905C CD 88 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 905F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 905F              ;
 393+ 905F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 905F              ;                                                     Rutinas_de_impresion en IX.
 395+ 905F              ;                                                     Puntero_de_impresion en HL.
 396+ 905F              ;                                                     Impacto/Dirección en BC.
 397+ 905F
 398+ 905F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9060 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9061 23               inc hl                                          ; _ al siguiente.
 401+ 9062 A7               and a
 402+ 9063 20 C0            jr nz,3B
 403+ 9065
 404+ 9065 08               ex af,af
 405+ 9066 ED 73 0A 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 906A F9               ld sp,hl
 407+ 906B
 408+ 906B DD E5            push ix                                         ; Rutina de impresión.
 409+ 906D F5               push af                                         ; Puntero de impresión.
 410+ 906E FD E5            push iy                                         ; Puntero objeto.
 411+ 9070 C5               push bc                                         ; Control.
 412+ 9071
 413+ 9071 ED 7B 0A 8A      ld sp,(Stack)
 414+ 9075
 415+ 9075              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9075
 417+ 9075 21 F9 89     	ld hl,Ctrl_1
 418+ 9078 CB C6        	set 0,(hl)
 419+ 907A
 420+ 907A DD E5        	push ix
 421+ 907C E1               pop hl
 422+ 907D F5               push af
 423+ 907E DD E1            pop ix
 424+ 9080
 425+ 9080 CD A0 7F     	call Guarda_foto_registros
 426+ 9083
 427+ 9083 21 F9 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9086 CB 86        	res 0,(hl)
 429+ 9088
 430+ 9088              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9088              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9088
 433+ 9088 CD 51 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 908B CD 4A 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 908E
 436+ 908E C9           4 ret
 437+ 908F
 438+ 908F              ; ----------------------------------------------------------------
 439+ 908F              ;
 440+ 908F              ;   4/3/23
 441+ 908F              ;
 442+ 908F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 908F              ;   _ al generarse el disparo.
 444+ 908F              ;
 445+ 908F              ;       "$80" ..... No se produce colisión.
 446+ 908F              ;       "$81" ..... Se produce colisión.
 447+ 908F              ;
 448+ 908F              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 908F              ;         _ que forman el disparo.
 450+ 908F
 451+ 908F
 452+ 908F              Comprueba_Colision
 453+ 908F
 454+ 908F              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 908F
 456+ 908F FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9091 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9092
 459+ 9092 CD C8 90         call Modifica_H_Velocidad_disparo
 460+ 9095
 461+ 9095 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9096 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9098 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 909A
 465+ 909A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 909C CD B8 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 909F
 468+ 909F 7B               ld a,e
 469+ 90A0 E6 01            and 1
 470+ 90A2 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 90A4              ;                                                  ; _ para activar IMPACTO.
 472+ 90A4 E1               pop hl
 473+ 90A5 E5               push hl
 474+ 90A6 CD 19 97         call NextScan
 475+ 90A9
 476+ 90A9 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 90AA FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 90AC 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 90AE              ;                                                  ; _ 2º scanline si esto es así.
 480+ 90AE 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 90B0 CD B8 90         call Bucle_2
 482+ 90B3
 483+ 90B3 43           1 ld b,e
 484+ 90B4 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 90B5 FD E1            pop iy
 486+ 90B7 C9               ret
 487+ 90B8
 488+ 90B8              ; ---------- ----------
 489+ 90B8
 490+ 90B8 06 02        Bucle_2 ld b,2
 491+ 90BA FD 7E 00     2 ld a,(iy)
 492+ 90BD A6               and (hl)
 493+ 90BE 28 02            jr z,1F
 494+ 90C0 1E 81            ld e,$81
 495+ 90C2 23           1 inc hl
 496+ 90C3 FD 23            inc iy
 497+ 90C5 10 F3            djnz 2B
 498+ 90C7 C9               ret
 499+ 90C8
 500+ 90C8              ; ---------- ----------
 501+ 90C8              ;
 502+ 90C8              ;   21/7/23
 503+ 90C8
 504+ 90C8              Modifica_H_Velocidad_disparo
 505+ 90C8
 506+ 90C8 3A 40 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90CB FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90CD D0               ret nc                                         ; _ incrementamos H.
 509+ 90CE 24               inc h
 510+ 90CF
 511+ 90CF C9               ret
 512+ 90D0
 513+ 90D0              ; -------------------------------------------------------------------------------------------------------------
 514+ 90D0              ;
 515+ 90D0              ;   11/04/23
 516+ 90D0              ;
 517+ 90D0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90D0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90D0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90D0              ;
 521+ 90D0              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90D0
 523+ 90D0              Compara_coordenadas_X
 524+ 90D0
 525+ 90D0              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90D0              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90D0
 528+ 90D0              ; Preparamos registros:
 529+ 90D0
 530+ 90D0 21 BC 89         ld hl,Filas+6
 531+ 90D3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90D4 23               inc hl
 533+ 90D5 23               inc hl
 534+ 90D6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90D7 43               ld b,e
 536+ 90D8
 537+ 90D8 21 CA 89         ld hl,Filas+20
 538+ 90DB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90DC 21 3B 8A         ld hl,Coordenadas_X_Entidad
 540+ 90DF CD FB 92         call Guarda_coordenadas_X
 541+ 90E2
 542+ 90E2              ; Preparamos registros:
 543+ 90E2
 544+ 90E2 21 AA 85         ld hl,Amadeus_db+6
 545+ 90E5 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90E6 23               inc hl
 547+ 90E7 23               inc hl
 548+ 90E8 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90E9 7B               ld a,e
 550+ 90EA 08               ex af,af'
 551+ 90EB 21 B8 85         ld hl,Amadeus_db+20
 552+ 90EE 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90EF 21 38 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90F2 CD FB 92         call Guarda_coordenadas_X
 555+ 90F5
 556+ 90F5              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90F5              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90F5
 559+ 90F5 04               inc b
 560+ 90F6 05               dec b
 561+ 90F7 28 04            jr z,1F
 562+ 90F9 06 03            ld b,3
 563+ 90FB 18 02            jr 2F
 564+ 90FD 06 02        1 ld b,2
 565+ 90FF 08           2 ex af,af'
 566+ 9100 3C               inc a
 567+ 9101 3D               dec a
 568+ 9102 28 04            jr z,5F
 569+ 9104 0E 03            ld c,3
 570+ 9106 18 02            jr 6F
 571+ 9108 0E 02        5 ld c,2
 572+ 910A 79           6 ld a,c
 573+ 910B 08               ex af,af'
 574+ 910C 11 3B 8A         ld de,Coordenadas_X_Entidad
 575+ 910F 1A           4 ld a,(de)
 576+ 9110 21 38 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9113 BE           3 cp (hl)
 578+ 9114 28 0E            jr z,7F
 579+ 9116 23               inc hl
 580+ 9117 0D               dec c
 581+ 9118 20 F9            jr nz,3B
 582+ 911A 13               inc de
 583+ 911B 08               ex af,af'
 584+ 911C 4F               ld c,a
 585+ 911D 08               ex af,af'
 586+ 911E 10 EF            djnz 4B
 587+ 9120
 588+ 9120              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9120
 590+ 9120 CD 37 93     8 call Limpia_Coordenadas_X
 591+ 9123 C9               ret
 592+ 9124
 593+ 9124 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9126 32 CF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9129 21 33 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 912C CB D6            set 2,(hl)
 597+ 912E 18 F0            jr 8B
 598+ 9130
 599+ 9130              ; -----------------------------------------------------------------------
 600+ 9130              ;
 601+ 9130              ;   17/04/23
 602+ 9130              ;
 603+ 9130
 604+ 9130              Detecta_colision_nave_entidad
 605+ 9130
 606+ 9130              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9130
 608+ 9130 2A B8 89         ld hl,(Posicion_actual)
 609+ 9133 CD 74 96         call Calcula_puntero_de_impresion
 610+ 9136
 611+ 9136              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9136              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9136
 614+ 9136 DD E5            push ix
 615+ 9138 E1               pop hl
 616+ 9139 E5               push hl
 617+ 913A
 618+ 913A              ; ----- ----- -----
 619+ 913A 1E 00            ld e,0                                         ; Indica impacto.
 620+ 913C 06 0A            ld b,10
 621+ 913E CD 6E 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9141 7B               ld a,e
 623+ 9142 FE 05            cp 5
 624+ 9144 38 0E            jr c,3F
 625+ 9146
 626+ 9146              ; LLegados a este punto:
 627+ 9146              ;
 628+ 9146              ;   HAY COLISIÓN !!!!!.
 629+ 9146              ;
 630+ 9146              ;   .db (Impacto) de Amadeus a "1".
 631+ 9146              ;   SET el bit3 de (Impacto2).
 632+ 9146              ;
 633+ 9146              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9146
 635+ 9146 21 BD 85         ld hl,Amadeus_db+25
 636+ 9149 36 01            ld (hl),1
 637+ 914B 21 33 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 914E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9150 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9152 18 18            jr 1F
 641+ 9154
 642+ 9154              ; -----
 643+ 9154
 644+ 9154 E1           3 pop hl
 645+ 9155 CD 19 97         call NextScan
 646+ 9158 E5               push hl
 647+ 9159 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 915A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 915C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 915E 30 0C            jr nc,1F
 651+ 9160              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9160 10 DC            djnz 2B
 653+ 9162
 654+ 9162              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9162
 656+ 9162              ; LLegados a este punto:
 657+ 9162              ;
 658+ 9162              ;   NO HAY COLISIÓN !!!!!.
 659+ 9162              ;
 660+ 9162              ;   .db (Impacto) de Amadeus a "0".
 661+ 9162              ;   RES el bit2 de (Impacto2).
 662+ 9162              ;
 663+ 9162              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9162              ;   Lo colocamos a "0".
 665+ 9162
 666+ 9162 21 33 8A         ld hl,Impacto2
 667+ 9165 CB 96            res 2,(hl)
 668+ 9167 2A 34 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 916A 36 00            ld (hl),0
 670+ 916C
 671+ 916C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 916D C9               ret
 673+ 916E
 674+ 916E               ; ---------- ----------
 675+ 916E
 676+ 916E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 916F 3A B7 89         ld a,(Columns)
 678+ 9172 47               ld b,a
 679+ 9173 FD 7E 00     2 ld a,(iy)
 680+ 9176 BE               cp (hl)
 681+ 9177 28 01            jr z,1F
 682+ 9179
 683+ 9179 1C               inc e
 684+ 917A
 685+ 917A 23           1 inc hl
 686+ 917B FD 23            inc iy
 687+ 917D 10 F4            djnz 2B
 688+ 917F C1               pop bc
 689+ 9180 C9               ret
 690+ 9181
 691+ 9181              ; -------------------------------------------------------------------------------------------------------------
 692+ 9181              ;
 693+ 9181              ;   13/03/23
 694+ 9181              ;
 695+ 9181              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 9181              ;
 697+ 9181              ;   DESTRUYE: HL,BC,DE y A.
 698+ 9181
 699+ 9181 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9184 7E               ld a,(hl)
 701+ 9185 A7               and a
 702+ 9186 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9187
 704+ 9187 44               ld b,h
 705+ 9188 4D               ld c,l
 706+ 9189 2A 10 8A         ld hl,(Stack_snapshot_disparos)
 707+ 918C E5               push hl
 708+ 918D A7               and a
 709+ 918E ED 42            sbc hl,bc
 710+ 9190 E5               push hl
 711+ 9191 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9192
 713+ 9192 E1               pop hl
 714+ 9193 54               ld d,h
 715+ 9194 5D               ld e,l
 716+ 9195 1B               dec de
 717+ 9196 ED B8            lddr                                                ; Limpiamos.
 718+ 9198
 719+ 9198 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 919B 22 10 8A         ld (Stack_snapshot_disparos),hl
 721+ 919E
 722+ 919E C9               ret
 723+ 919F
 724+ 919F              ; -------------------------------------------------------------------------------------------------------------
 725+ 919F              ;
 726+ 919F              ;   18/07/23
 727+ 919F              ;
 728+ 919F
 729+ 919F              Motor_de_disparos
 730+ 919F
 731+ 919F              ; Gestiona DISPAROS DE AMADEUS.
 732+ 919F
 733+ 919F 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 91A2 2A 31 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 91A5
 736+ 91A5 CD 88 8D     2 call Extrae_address
 737+ 91A8 7E               ld a,(hl)
 738+ 91A9 A7               and a
 739+ 91AA 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 91AC
 741+ 91AC              ; ----- ----- ----- ----- ----- -----
 742+ 91AC
 743+ 91AC C5               push bc
 744+ 91AD CD 71 92         call foto_disparo_a_borrar
 745+ 91B0
 746+ 91B0              ; Existe colisión con este disparo???
 747+ 91B0
 748+ 91B0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 91B1 7E               ld a,(hl)
 750+ 91B2 2B               dec hl
 751+ 91B3 E6 01            and 1
 752+ 91B5 28 1D            jr z,9F
 753+ 91B7
 754+ 91B7              ;   En este punto:
 755+ 91B7              ;
 756+ 91B7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 91B7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 91B7              ;   _con la entidad).
 759+ 91B7              ;
 760+ 91B7              ;   Disparo_2A defw 0                                ; Control.
 761+ 91B7              ;    defw 0                                          ; Puntero objeto.
 762+ 91B7              ;    defw 0                                          ; Puntero de impresión.
 763+ 91B7              ;    defw 0                                          ; Rutina de impresión.
 764+ 91B7
 765+ 91B7 E5               push hl
 766+ 91B8
 767+ 91B8 06 04            ld b,4
 768+ 91BA 23           19 inc hl
 769+ 91BB 10 FD            djnz 19B
 770+ 91BD
 771+ 91BD CD 88 8D         call Extrae_address
 772+ 91C0 CD 9F 9D         call Genera_coordenadas_disparo
 773+ 91C3
 774+ 91C3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 91C3
 776+ 91C3 21 36 8A         ld hl,Coordenadas_disparo_certero
 777+ 91C6 72               ld (hl),d
 778+ 91C7 23               inc hl
 779+ 91C8 73               ld (hl),e
 780+ 91C9
 781+ 91C9              ; Elimino el disparo de la base de datos.
 782+ 91C9
 783+ 91C9 E1               pop hl
 784+ 91CA CD F0 92         call Elimina_disparo_de_base_de_datos
 785+ 91CD 21 33 8A         ld hl,Impacto2
 786+ 91D0 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91D2
 788+ 91D2 18 06            jr 11F
 789+ 91D4
 790+ 91D4 CD 9A 92     9 call Mueve_disparo
 791+ 91D7 CD 71 92         call foto_disparo_a_borrar
 792+ 91DA
 793+ 91DA C1           11 pop bc
 794+ 91DB 18 04            jr 7F
 795+ 91DD
 796+ 91DD              ; ----- ----- ----- ----- ----- -----
 797+ 91DD
 798+ 91DD ED 42        1 sbc hl,bc
 799+ 91DF 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91E1
 801+ 91E1 2A 31 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91E4 23               inc hl
 803+ 91E5 23               inc hl
 804+ 91E6 22 31 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91E9 18 BA            jr 2B
 806+ 91EB
 807+ 91EB CD 51 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91EE              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91EE
 810+ 91EE              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91EE
 812+ 91EE 01 8A 85         ld bc,Disparo_11
 813+ 91F1 2A 2F 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91F4
 815+ 91F4 CD 88 8D     5 call Extrae_address
 816+ 91F7 7E               ld a,(hl)
 817+ 91F8 A7               and a
 818+ 91F9 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91FB
 820+ 91FB              ; ----- ----- ----- ----- ----- -----
 821+ 91FB
 822+ 91FB C5               push bc
 823+ 91FC CD 71 92         call foto_disparo_a_borrar
 824+ 91FF
 825+ 91FF              ; Existe colisión con este disparo???
 826+ 91FF
 827+ 91FF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9200 7E               ld a,(hl)
 829+ 9201 2B               dec hl
 830+ 9202 E6 01            and 1
 831+ 9204 28 4D            jr z,10F
 832+ 9206
 833+ 9206              ;! La colisión se produce con Amadeus???
 834+ 9206              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9206
 836+ 9206 E5               push hl
 837+ 9207
 838+ 9207 06 04            ld b,4
 839+ 9209 23           16 inc hl
 840+ 920A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 920C
 842+ 920C CD 88 8D         call Extrae_address
 843+ 920F CD 9F 9D         call Genera_coordenadas_disparo
 844+ 9212
 845+ 9212 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9213 FE 16            cp $16
 847+ 9215 38 2A            jr c,15F
 848+ 9217
 849+ 9217
 850+ 9217              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9217
 852+ 9217 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9218
 854+ 9218              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9218
 856+ 9218
 857+ 9218 2A 3E 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 921B
 859+ 921B              ; Coordenada X de Amadeus en D.
 860+ 921B
 861+ 921B 7D               ld a,l
 862+ 921C E6 1F            and $1F
 863+ 921E 57               ld d,a
 864+ 921F
 865+ 921F 21 AC 85         ld hl,Amadeus_db+8
 866+ 9222 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9223
 868+ 9223 21 38 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9226 CD FB 92         call Guarda_coordenadas_X
 870+ 9229
 871+ 9229 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 922A
 873+ 922A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 922A
 875+ 922A 06 02            ld b,2
 876+ 922C C5           20 push bc
 877+ 922D
 878+ 922D 06 03            ld b,3
 879+ 922F 21 38 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9232 7E           18 ld a,(hl)
 881+ 9233 BA               cp d
 882+ 9234 20 04            jr nz,17F
 883+ 9236
 884+ 9236              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9236
 886+ 9236 C1               pop bc
 887+ 9237 E1               pop hl
 888+ 9238 18 0D            jr 14F
 889+ 923A
 890+ 923A 23           17 inc hl
 891+ 923B 10 F5            djnz 18B
 892+ 923D
 893+ 923D 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 923E
 895+ 923E C1               pop bc
 896+ 923F 10 EB            djnz 20B
 897+ 9241
 898+ 9241
 899+ 9241              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9241              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9241
 902+ 9241 E1           15 pop hl
 903+ 9242 23               inc hl
 904+ 9243 35               dec (hl)
 905+ 9244 2B               dec hl
 906+ 9245 18 0C            jr 10F
 907+ 9247
 908+ 9247              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9247              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9247
 911+ 9247 E5           14 push hl
 912+ 9248 CD F0 92         call Elimina_disparo_de_base_de_datos
 913+ 924B 21 33 8A         ld hl,Impacto2
 914+ 924E CB CE            set 1,(hl)
 915+ 9250 E1               pop hl
 916+ 9251 18 06            jr 12F
 917+ 9253
 918+ 9253              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9253
 920+ 9253 CD 9A 92     10 call Mueve_disparo
 921+ 9256 CD 71 92         call foto_disparo_a_borrar
 922+ 9259 C1           12 pop bc
 923+ 925A
 924+ 925A 18 04            jr 8F
 925+ 925C
 926+ 925C              ; ----- ----- ----- ----- ----- -----
 927+ 925C
 928+ 925C ED 42        4 sbc hl,bc
 929+ 925E 28 0A            jr z,6F
 930+ 9260
 931+ 9260 2A 2F 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9263 23               inc hl
 933+ 9264 23               inc hl
 934+ 9265 22 2F 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9268 18 8A            jr 5B
 936+ 926A
 937+ 926A CD 4A 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 926D CD 37 93         call Limpia_Coordenadas_X
 939+ 9270 C9               ret
 940+ 9271
 941+ 9271              ; ------------------------------------------------------------------
 942+ 9271
 943+ 9271              foto_disparo_a_borrar
 944+ 9271
 945+ 9271 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9272 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9273 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9274
 949+ 9274 E5               push hl
 950+ 9275 23               inc hl
 951+ 9276 23               inc hl
 952+ 9277 ED 73 0A 8A      ld (Stack),sp
 953+ 927B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 927C FD E1            pop iy
 955+ 927E DD E1            pop ix
 956+ 9280 E1               pop hl
 957+ 9281 ED 7B 0A 8A      ld sp,(Stack)
 958+ 9285 3A F9 89         ld a,(Ctrl_1)
 959+ 9288 CB C7            set 0,a
 960+ 928A 32 F9 89         ld (Ctrl_1),a
 961+ 928D CD A0 7F         call Guarda_foto_registros
 962+ 9290 3A F9 89         ld a,(Ctrl_1)
 963+ 9293 CB 87            res 0,a
 964+ 9295 32 F9 89         ld (Ctrl_1),a
 965+ 9298 E1               pop hl
 966+ 9299 C9               ret
 967+ 929A
 968+ 929A              ;---------------------------------------------------
 969+ 929A              ;
 970+ 929A              ;   18/07/23
 971+ 929A              ;
 972+ 929A
 973+ 929A              Mueve_disparo
 974+ 929A
 975+ 929A              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 929A              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 929A              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 929A
 979+ 929A E5               push hl
 980+ 929B
 981+ 929B 7E               ld a,(hl)
 982+ 929C
 983+ 929C 06 04            ld b,4
 984+ 929E 23           1 inc hl
 985+ 929F 10 FD            djnz 1B
 986+ 92A1
 987+ 92A1              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 92A1
 989+ 92A1 CD 88 8D         call Extrae_address
 990+ 92A4
 991+ 92A4 E6 01            and 1
 992+ 92A6 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 92A8
 994+ 92A8              ; Disparo hacia arriba, (Amadeus).
 995+ 92A8
 996+ 92A8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 92A8              ; _ de la dificultad.
 998+ 92A8
 999+ 92A8 CD 28 97         call PreviousScan
1000+ 92AB CD 28 97         call PreviousScan
1001+ 92AE CD 28 97         call PreviousScan
1002+ 92B1 CD 28 97         call PreviousScan
1003+ 92B4
1004+ 92B4              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 92B4
1006+ 92B4 7C               ld a,h
1007+ 92B5 FE 40            cp $40
1008+ 92B7 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 92B9
1010+ 92B9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 92B9
1012+ 92B9 EB               ex de,hl
1013+ 92BA 06 04            ld b,4
1014+ 92BC 2B           6 dec hl
1015+ 92BD 10 FD            djnz 6B
1016+ 92BF
1017+ 92BF CD F0 92         call Elimina_disparo_de_base_de_datos
1018+ 92C2 E1               pop hl
1019+ 92C3 18 10            jr 7F
1020+ 92C5
1021+ 92C5              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92C5              ; HL contiene el puntero de impresión del disparo.
1023+ 92C5              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92C5
1025+ 92C5 D5           3 push de
1026+ 92C6 C5               push bc
1027+ 92C7
1028+ 92C7 CD 8F 90         call Comprueba_Colision
1029+ 92CA
1030+ 92CA              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92CA
1032+ 92CA 78               ld a,b
1033+ 92CB
1034+ 92CB C1               pop bc
1035+ 92CC D1               pop de
1036+ 92CD
1037+ 92CD EB               ex de,hl
1038+ 92CE
1039+ 92CE 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92CF 23               inc hl                                      ; _ movimiento.
1041+ 92D0 72               ld (hl),d
1042+ 92D1
1043+ 92D1 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92D2
1045+ 92D2 23               inc hl                                      ; _ en curso.
1046+ 92D3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92D4 2B               dec hl
1048+ 92D5
1049+ 92D5 C9           7 ret
1050+ 92D6
1051+ 92D6              ; Disparo hacia abajo, (Entidad).
1052+ 92D6
1053+ 92D6 3A 40 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92D9 47               ld b,a
1055+ 92DA
1056+ 92DA CD 19 97     4 call NextScan
1057+ 92DD 10 FB            djnz 4B
1058+ 92DF
1059+ 92DF              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92DF
1061+ 92DF 7C               ld a,h
1062+ 92E0 FE 58            cp $58
1063+ 92E2 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92E4
1065+ 92E4 EB               ex de,hl
1066+ 92E5 06 04            ld b,4
1067+ 92E7 2B           5 dec hl
1068+ 92E8 10 FD            djnz 5B
1069+ 92EA
1070+ 92EA CD F0 92         call Elimina_disparo_de_base_de_datos
1071+ 92ED E1               pop hl
1072+ 92EE 18 E5            jr 7B
1073+ 92F0
1074+ 92F0              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92F0
1076+ 92F0 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92F3 AF               xor a
1078+ 92F4 77               ld (hl),a
1079+ 92F5 54               ld d,h
1080+ 92F6 5D               ld e,l
1081+ 92F7 13               inc de
1082+ 92F8 ED B0            ldir
1083+ 92FA C9               ret
1084+ 92FB
1085+ 92FB              ; -----------------------------------------------------------------
1086+ 92FB              ;
1087+ 92FB              ;   19/7/23
1088+ 92FB              ;
1089+ 92FB              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92FB              ;
1091+ 92FB              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92FB              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92FB              ;
1094+ 92FB              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92FB              ;
1096+ 92FB              ;   INPUTS:
1097+ 92FB              ;
1098+ 92FB              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92FB              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92FB
1101+ 92FB              ;   MODIFICA: A, HL, BC y DE.
1102+ 92FB
1103+ 92FB              Guarda_coordenadas_X
1104+ 92FB
1105+ 92FB 7B               ld a,e
1106+ 92FC A7               and a
1107+ 92FD 20 04            jr nz,1F
1108+ 92FF
1109+ 92FF 06 02            ld b,2
1110+ 9301 18 02            jr 2F
1111+ 9303
1112+ 9303 06 03        1 ld b,3
1113+ 9305 72           2 ld (hl),d
1114+ 9306 23               inc hl
1115+ 9307 14               inc d
1116+ 9308 10 FB            djnz 2B
1117+ 930A
1118+ 930A C9               ret
1119+ 930B
1120+ 930B              ; -----------------------------------------------------------------
1121+ 930B              ;
1122+ 930B              ;   12/04/23
1123+ 930B              ;
1124+ 930B
1125+ 930B 3A 33 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 930E A7               and a
1127+ 930F C8               ret z
1128+ 9310
1129+ 9310 FE 04            cp 4
1130+ 9312 20 09            jr nz,1F
1131+ 9314
1132+ 9314
1133+ 9314              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9314
1135+ 9314 CD 30 91         call Detecta_colision_nave_entidad
1136+ 9317
1137+ 9317 21 33 8A         ld hl,Impacto2
1138+ 931A CB 5E            bit 3,(hl)
1139+ 931C C0               ret nz                                               ; Existe colisión, RET.
1140+ 931D
1141+ 931D              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 931D              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 931D
1144+ 931D 21 33 8A     1 ld hl,Impacto2
1145+ 9320 CB 4E            bit 1,(hl)
1146+ 9322 28 07            jr z,2F
1147+ 9324
1148+ 9324 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9327 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9329 18 0B            jr 3F
1151+ 932B
1152+ 932B 21 33 8A     2 ld hl,Impacto2
1153+ 932E CB 46            bit 0,(hl)
1154+ 9330 C8               ret z
1155+ 9331
1156+ 9331              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9331
1158+ 9331 21 F9 89         ld hl,Ctrl_1
1159+ 9334 CB D6            set 2,(hl)
1160+ 9336
1161+ 9336 C9           3 ret
1162+ 9337
1163+ 9337              ; -----------------------------------------------------------------
1164+ 9337              ;
1165+ 9337              ;   19/7/23
1166+ 9337              ;
1167+ 9337              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9337
1169+ 9337 AF           Limpia_Coordenadas_X xor a
1170+ 9338 06 06            ld b,6
1171+ 933A 21 38 8A         ld hl,Coordenadas_X_Amadeus
1172+ 933D 77           1 ld (hl),a
1173+ 933E 23               inc hl
1174+ 933F 10 FC            djnz 1B
1175+ 9341 C9               ret
1176+ 9342
1177+ 9342              ; -----------------------------------------------------------------
1178+ 9342              ;
1179+ 9342              ;   25/04/23
1180+ 9342              ;
1181+ 9342
1182+ 9342              Determina_resultado_comparativa
1183+ 9342
1184+ 9342              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9342              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9342              ;
1187+ 9342              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9342              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9342              ;
1190+ 9342              ;   SBC HL,DE
1191+ 9342
1192+ 9342              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9342              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9342
1195+ 9342              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9342              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9342
1198+ 9342
1199+ 9342 3A CA 89         ld a,(Cuad_objeto)
1200+ 9345 FE 02            cp 2
1201+ 9347 28 26            jr z,2F
1202+ 9349 38 24            jr c,2F
1203+ 934B
1204+ 934B              ; Cuadrantes 3º y 4º
1205+ 934B
1206+ 934B E6 01            and 1
1207+ 934D 28 10            jr z,4F
1208+ 934F
1209+ 934F              ; Cuadrante 3º
1210+ 934F
1211+ 934F 7C               ld a,h
1212+ 9350 06 00            ld b,0
1213+ 9352
1214+ 9352 CD DD 93         call Compara_cositas_H3
1215+ 9355
1216+ 9355 04               inc b
1217+ 9356 05               dec b
1218+ 9357 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9358
1220+ 9358 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9359 06 00            ld b,0
1222+ 935B
1223+ 935B CD EF 93         call Compara_cositas_L3
1224+ 935E C9               ret
1225+ 935F
1226+ 935F              ; Cuadrante 4º
1227+ 935F
1228+ 935F 7C           4 ld a,h
1229+ 9360 06 00            ld b,0
1230+ 9362
1231+ 9362 CD 01 94         call Compara_cositas_H4
1232+ 9365
1233+ 9365 04               inc b
1234+ 9366 05               dec b
1235+ 9367 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9368
1237+ 9368 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9369 06 00            ld b,0
1239+ 936B
1240+ 936B CD 17 94         call Compara_cositas_L4
1241+ 936E C9               ret
1242+ 936F
1243+ 936F              ; Cuadrantes 1º y 2º.
1244+ 936F
1245+ 936F 28 10        2 jr z,3F
1246+ 9371
1247+ 9371              ; 1er Cuadrante
1248+ 9371
1249+ 9371 7C               ld a,h
1250+ 9372 06 00            ld b,0
1251+ 9374
1252+ 9374 CD B5 93         call Compara_cositas_H1
1253+ 9377
1254+ 9377 04               inc b
1255+ 9378 05               dec b
1256+ 9379 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 937A
1258+ 937A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 937B 06 00            ld b,0
1260+ 937D
1261+ 937D CD CB 93         call Compara_cositas_L1
1262+ 9380 C9               ret
1263+ 9381
1264+ 9381
1265+ 9381              ; 2º Cuadrante
1266+ 9381
1267+ 9381 7C           3 ld a,h
1268+ 9382 06 00            ld b,0
1269+ 9384
1270+ 9384 CD 91 93         call Compara_cositas_H2
1271+ 9387
1272+ 9387 04               inc b
1273+ 9388 05               dec b
1274+ 9389 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 938A
1276+ 938A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 938B 06 00            ld b,0
1278+ 938D
1279+ 938D CD A3 93         call Compara_cositas_L2
1280+ 9390 C9               ret
1281+ 9391
1282+ 9391 A7           Compara_cositas_H2 and a
1283+ 9392 28 0D            jr z,1F
1284+ 9394              ;    cp $fd
1285+ 9394              ;    jr z,1F
1286+ 9394              ;    cp $fe
1287+ 9394              ;    jr z,1F
1288+ 9394 FE FF            cp $ff
1289+ 9396 28 09            jr z,1F
1290+ 9398 FE 01            cp $01
1291+ 939A 28 05            jr z,1F
1292+ 939C FE 02            cp $02
1293+ 939E 28 01            jr z,1F
1294+ 93A0 C0               ret nz
1295+ 93A1 04           1 inc b
1296+ 93A2 C9               ret
1297+ 93A3
1298+ 93A3 A7           Compara_cositas_L2 and a
1299+ 93A4 28 0D            jr z,1F
1300+ 93A6              ;    cp $fd
1301+ 93A6              ;    jr z,1F
1302+ 93A6 FE FE            cp $fe
1303+ 93A8 28 09            jr z,1F
1304+ 93AA FE FF            cp $ff
1305+ 93AC 28 05            jr z,1F
1306+ 93AE FE 01            cp $01
1307+ 93B0 28 01            jr z,1F
1308+ 93B2              ;    cp $02
1309+ 93B2              ;    jr z,1F
1310+ 93B2 C0               ret nz
1311+ 93B3 04           1 inc b
1312+ 93B4 C9               ret
1313+ 93B5
1314+ 93B5 A7           Compara_cositas_H1 and a
1315+ 93B6 28 11            jr z,1F
1316+ 93B8              ;    cp $fd
1317+ 93B8              ;    jr z,1F
1318+ 93B8              ;    cp $fe
1319+ 93B8              ;    jr z,1F
1320+ 93B8 FE FF            cp $ff
1321+ 93BA 28 0D            jr z,1F
1322+ 93BC FE 01            cp $01
1323+ 93BE 28 09            jr z,1F
1324+ 93C0 FE 02            cp $02
1325+ 93C2 28 05            jr z,1F
1326+ 93C4 FE 03            cp $03
1327+ 93C6 28 01            jr z,1F
1328+ 93C8 C0               ret nz
1329+ 93C9 04           1 inc b
1330+ 93CA C9               ret
1331+ 93CB
1332+ 93CB A7           Compara_cositas_L1 and a
1333+ 93CC 28 0D            jr z,1F
1334+ 93CE              ;    cp $fd
1335+ 93CE              ;    jr z,1F
1336+ 93CE              ;    cp $fe
1337+ 93CE              ;    jr z,1F
1338+ 93CE              ;    cp $ff
1339+ 93CE              ;    jr z,1F
1340+ 93CE FE 01            cp $01
1341+ 93D0 28 09            jr z,1F
1342+ 93D2 FE 02            cp $02
1343+ 93D4 28 05            jr z,1F
1344+ 93D6 FE 03            cp $03
1345+ 93D8 28 01            jr z,1F
1346+ 93DA C0               ret nz
1347+ 93DB 04           1 inc b
1348+ 93DC C9               ret
1349+ 93DD
1350+ 93DD A7           Compara_cositas_H3 and a
1351+ 93DE 28 0D            jr z,1F
1352+ 93E0              ;    cp $fd
1353+ 93E0              ;    jr z,1F
1354+ 93E0 FE FE            cp $fe
1355+ 93E2 28 09            jr z,1F
1356+ 93E4 FE FF            cp $ff
1357+ 93E6 28 05            jr z,1F
1358+ 93E8 FE 01            cp $01
1359+ 93EA 28 01            jr z,1F
1360+ 93EC              ;    cp $02
1361+ 93EC              ;    jr z,1F
1362+ 93EC              ;    cp $03
1363+ 93EC              ;    jr z,1F
1364+ 93EC C0               ret nz
1365+ 93ED 04           1 inc b
1366+ 93EE C9               ret
1367+ 93EF
1368+ 93EF A7           Compara_cositas_L3 and a
1369+ 93F0 28 0D            jr z,1F
1370+ 93F2              ;    cp $fd
1371+ 93F2              ;    jr z,1F
1372+ 93F2              ;    cp $fe
1373+ 93F2              ;    jr z,1F
1374+ 93F2              ;    cp $ff
1375+ 93F2              ;    jr z,1F
1376+ 93F2 FE 01            cp $01
1377+ 93F4 28 09            jr z,1F
1378+ 93F6 FE 02            cp $02
1379+ 93F8 28 05            jr z,1F
1380+ 93FA FE 03            cp $03
1381+ 93FC 28 01            jr z,1F
1382+ 93FE C0               ret nz
1383+ 93FF 04           1 inc b
1384+ 9400 C9               ret
1385+ 9401
1386+ 9401 A7           Compara_cositas_H4 and a
1387+ 9402 28 11            jr z,1F
1388+ 9404 FE FD            cp $fd
1389+ 9406 28 0D            jr z,1F
1390+ 9408 FE FE            cp $fe
1391+ 940A 28 09            jr z,1F
1392+ 940C FE FF            cp $ff
1393+ 940E 28 05            jr z,1F
1394+ 9410 FE 01            cp $01
1395+ 9412 28 01            jr z,1F
1396+ 9414              ;    cp $02
1397+ 9414              ;    jr z,1F
1398+ 9414              ;    cp $03
1399+ 9414              ;    jr z,1F
1400+ 9414 C0               ret nz
1401+ 9415 04           1 inc b
1402+ 9416 C9               ret
1403+ 9417
1404+ 9417 A7           Compara_cositas_L4 and a
1405+ 9418 28 0D            jr z,1F
1406+ 941A              ;    cp $fd
1407+ 941A              ;    jr z,1F
1408+ 941A FE FE            cp $fe
1409+ 941C 28 09            jr z,1F
1410+ 941E FE FF            cp $ff
1411+ 9420 28 05            jr z,1F
1412+ 9422 FE 01            cp $01
1413+ 9424 28 01            jr z,1F
1414+ 9426              ;    cp $02
1415+ 9426              ;    jr z,1F
1416+ 9426              ;    cp $03
1417+ 9426              ;    jr z,1F
1418+ 9426 C0               ret nz
1419+ 9427 04           1 inc b
1420+ 9428 C9               ret
# file closed: Disparo.asm
1481  9429              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9429              ; ******************************************************************************************************************************************************************************************
   2+ 9429              ;
   3+ 9429              ; 26/06/23
   4+ 9429              ;
   5+ 9429              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9429
   7+ 9429 CD 0D 97     Draw call Prepara_draw
   8+ 942C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 942D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 942E 28 05        	jr z,2F
  11+ 9430
  12+ 9430 3A CA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9433 18 0C        	jr 1F
  14+ 9435
  15+ 9435 2A C8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9438 22 B8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 943B CD CA 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 943E              ;													; _la esquina superior izquierda de la pantalla.
  19+ 943E CD 1B A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 9441
  21+ 9441 3A E4 89     1 ld a,(Ctrl_0)
  22+ 9444 CB 6F        	bit 5,a
  23+ 9446 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9448
  25+ 9448 CD 60 94     	call Comprueba_limite_horizontal
  26+ 944B CD F0 94     	call Comprueba_limite_vertical
  27+ 944E
  28+ 944E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 944E              ; -----------------------
  30+ 944E              ; -----------------------
  31+ 944E              ; -----------------------
  32+ 944E
  33+ 944E CD 3D 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 9451 CD 74 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9454 CD D3 96     	call Define_rutina_de_impresion
  36+ 9457
  37+ 9457 3A E4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 945A CB AF        	res 5,a											; _a ser de utilidad.
  39+ 945C 32 E4 89     	ld (Ctrl_0),a
  40+ 945F
  41+ 945F C9           	ret
  42+ 9460
  43+ 9460              ; *******************************************************************************************************************************************************************************************
  44+ 9460              ;	21/01/23
  45+ 9460              ;
  46+ 9460              ; 	Comprueba_limite_horizontal.
  47+ 9460              ;
  48+ 9460              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9460              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9460              ;
  51+ 9460              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9460              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9460              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9460              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9460
  56+ 9460
  57+ 9460
  58+ 9460 3A E4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9463 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9465 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9467 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9469 32 E4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 946C 18 09            jr 6F
  64+ 946E CB 5F        1 bit 3,a
  65+ 9470 28 0A            jr z,2F
  66+ 9472 E6 F7            and $f7
  67+ 9474 32 E4 89         ld (Ctrl_0),a
  68+ 9477 CD CA 95     6 call Inicializacion
  69+ 947A 18 5B            jr 5F
  70+ 947C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 947D
  72+ 947D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 947D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 947D
  75+ 947D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 947E 2A F4 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9481 CD E9 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9484 67           	ld h,a
  79+ 9485 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9486 CD E9 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9489 67           	ld h,a
  82+ 948A A7           	and a
  83+ 948B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 948D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 948E 3A CA 89     	ld a,(Cuad_objeto)
  86+ 9491 FE 02        	cp 2
  87+ 9493 38 1E        	jr c,3F
  88+ 9495 28 1C        	jr z,3F
  89+ 9497 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9498 28 23            jr z,7F
  91+ 949A 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 949C 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 949E E1           	pop hl
  94+ 949F
  95+ 949F              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 949F              ; _para indicar con E="2" en caso necesario.
  97+ 949F
  98+ 949F E5               push hl
  99+ 94A0 C5               push bc
 100+ 94A1 CD E9 99     	call calcula_tercio
 101+ 94A4 FE 01        	cp 1
 102+ 94A6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 94A8 CD D8 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 94AB 28 26            jr z,9F
 105+ 94AD 38 24            jr c,9F
 106+ 94AF 1E 00        11 ld e,0
 107+ 94B1 18 22            jr 8F
 108+ 94B3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 94B4 28 07        	jr z, 7F
 110+ 94B6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 94B8 1E 00         	ld e,0
 112+ 94BA E1           	pop hl
 113+ 94BB 18 04        	jr 4F
 114+ 94BD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 94BF 18 15            jr 10F
 116+ 94C1
 117+ 94C1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 94C1              ; _para indicar con E="2" en caso necesario.
 119+ 94C1
 120+ 94C1 E5           4 push hl
 121+ 94C2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 94C3 CD E9 99     	call calcula_tercio
 123+ 94C6 FE 01        	cp 1
 124+ 94C8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94CA CD D8 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94CD 28 04            jr z,9F
 127+ 94CF 30 02            jr nc,9F
 128+ 94D1 18 02        	jr 8F
 129+ 94D3 1E 02        9 ld e,2
 130+ 94D5 C1           8 pop bc
 131+ 94D6 E1           10 pop hl
 132+ 94D7 C9           5 ret
 133+ 94D8
 134+ 94D8              ; --------------------
 135+ 94D8              ;
 136+ 94D8              ; 25/08/22
 137+ 94D8
 138+ 94D8 CD E9 99     Comprueba_centro call calcula_tercio
 139+ 94DB 67               ld h,a
 140+ 94DC 08           	ex af,af
 141+ 94DD FE 02        	cp 2
 142+ 94DF 38 07        	jr c,1F
 143+ 94E1 28 05        	jr z,1F
 144+ 94E3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94E6 18 03        	jr 2F
 146+ 94E8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94EB 08           2 ex af,af
 148+ 94EC A7               and a
 149+ 94ED ED 42            sbc hl,bc
 150+ 94EF C9               ret
 151+ 94F0
 152+ 94F0              ; *********************************************************************************************************************************************************************************************
 153+ 94F0              ;
 154+ 94F0              ;   16/8/22
 155+ 94F0              ;
 156+ 94F0              ;	Comprueba_limite_vertical
 157+ 94F0              ;
 158+ 94F0              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94F0              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94F0              ;
 161+ 94F0
 162+ 94F0 2A B8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94F3 7D           	ld a,l
 164+ 94F4 E6 1F        	and $1F
 165+ 94F6 57           	ld d,a
 166+ 94F7 3A F6 89     	ld a,(Limite_vertical)
 167+ 94FA BA           	cp d 											; Límite - Posición.
 168+ 94FB 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94FC 3A CA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94FF CB 47        	bit 0,a
 171+ 9501 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9503
 173+ 9503              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9503
 175+ 9503 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9504 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9506
 178+ 9506              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9506              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9506
 181+ 9506 3A BC 89         ld a,(Coordenada_X)
 182+ 9509 16 0F            ld d,Centro_izquierda
 183+ 950B A7               and a
 184+ 950C 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 950D 28 1E            jr z,3F
 186+ 950F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9511              ;                                                    ; _salimos sin modificar nada.
 188+ 9511 18 0E            jr 2F
 189+ 9513 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9514 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9516
 192+ 9516              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9516              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9516
 195+ 9516 3A BC 89         ld a,(Coordenada_X)
 196+ 9519 16 10            ld d,Centro_derecha
 197+ 951B A7               and a
 198+ 951C 92               sub d
 199+ 951D 28 0E            jr z,3F
 200+ 951F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9521              ;                                                    ; _salimos sin modificar nada.
 202+ 9521 CB 43        2 bit 0,e
 203+ 9523 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9525 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9526 CD BA 95         call Modificaccionne
 206+ 9529 C1           	pop bc
 207+ 952A CD CA 95         call Inicializacion
 208+ 952D C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 952E
 210+ 952E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 952E
 212+ 952E C5           4 push bc
 213+ 952F 01 B7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9532 0A           	ld a,(bc)
 215+ 9533 3D           	dec a
 216+ 9534 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9535 7D           	ld a,l
 218+ 9536 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9537 CB 47        	bit 0,a
 220+ 9539 28 03        	jr z,5F
 221+ 953B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 953C 18 2E        	jr 7F
 223+ 953E
 224+ 953E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 953E
 226+ 953E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 953F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9540 3A E4 89     	ld a,(Ctrl_0)
 229+ 9543 CB 4F        	bit 1,a
 230+ 9545 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9547 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9548
 233+ 9548              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9548
 235+ 9548 1C               inc e
 236+ 9549 1D               dec e
 237+ 954A 20 07            jr nz,12F
 238+ 954C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 954D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 954E 22 B8 89     	ld (Posicion_actual),hl
 241+ 9551 18 44        13 jr 9F
 242+ 9553 CB 43        12 bit 0,e
 243+ 9555 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9557              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9557 C1           	pop bc
 246+ 9558 18 D3        	jr 3B
 247+ 955A 80           14 add b
 248+ 955B 6F               ld l,a
 249+ 955C 22 B8 89     	ld (Posicion_actual),hl
 250+ 955F CD BA 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9562 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9564 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9566 32 E4 89         ld (Ctrl_0),a
 254+ 9569 F1           	pop af
 255+ 956A 18 2B        	jr 9F
 256+ 956C
 257+ 956C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 956C
 259+ 956C F5           7 push af
 260+ 956D 3A E4 89     	ld a,(Ctrl_0)
 261+ 9570 CB 47        	bit 0,a
 262+ 9572 20 1D        	jr nz,8F
 263+ 9574 F1           	pop af
 264+ 9575
 265+ 9575              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9575
 267+ 9575 1C           	inc e
 268+ 9576 1D               dec e
 269+ 9577 20 07            jr nz,10F
 270+ 9579 90           	sub b
 271+ 957A 6F               ld l,a
 272+ 957B 22 B8 89     	ld (Posicion_actual),hl
 273+ 957E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9580              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9580 CB 43        10 bit 0,e
 276+ 9582 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9584              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9584 C1           	pop bc
 279+ 9585 18 A6        	jr 3B
 280+ 9587 90           16 sub b
 281+ 9588 6F               ld l,a
 282+ 9589 22 B8 89     	ld (Posicion_actual),hl
 283+ 958C CD BA 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 958F 18 06            jr 9F
 285+ 9591 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9593 32 E4 89         ld (Ctrl_0),a
 287+ 9596 F1           	pop af
 288+ 9597 C1           9 pop bc
 289+ 9598 1E 00        	ld e,0
 290+ 959A CD CA 95         call Inicializacion
 291+ 959D F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 959E 08           	ex af,af
 293+ 959F F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 95A0 18 8B            jr 3B
 295+ 95A2
 296+ 95A2              ; --------------------
 297+ 95A2
 298+ 95A2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 95A4 CD 28 97     1 call PreviousScan
 300+ 95A7 10 FB            djnz 1B
 301+ 95A9 22 B8 89     	ld (Posicion_actual),hl
 302+ 95AC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 95AD C9           	ret
 304+ 95AE
 305+ 95AE              ; --------------------
 306+ 95AE
 307+ 95AE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 95B0 CD 19 97     1 call NextScan
 309+ 95B3 10 FB            djnz 1B
 310+ 95B5 22 B8 89     	ld (Posicion_actual),hl
 311+ 95B8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 95B9 C9           	ret
 313+ 95BA
 314+ 95BA              ; --------------------
 315+ 95BA              ;
 316+ 95BA              ;	22/01/23
 317+ 95BA              ;
 318+ 95BA              ;	E="1". Hemos cambiado de cuadrante.
 319+ 95BA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 95BA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 95BA
 322+ 95BA
 323+ 95BA              Modificaccionne
 324+ 95BA
 325+ 95BA 3A CA 89     	ld a,(Cuad_objeto)
 326+ 95BD FE 02        	cp 2
 327+ 95BF CC A2 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 95C2 DC A2 95         call c,Modifica_Pos_actual
 329+ 95C5 C8           	ret z
 330+ 95C6 CD AE 95         call Modifica_Pos_actual2
 331+ 95C9 C9               ret
 332+ 95CA
 333+ 95CA              ; *************************************************************************************************************************************************************************************************
 334+ 95CA              ;
 335+ 95CA              ;	13/8/22
 336+ 95CA              ;
 337+ 95CA              ;	Inicializacion
 338+ 95CA              ;
 339+ 95CA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95CA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95CA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95CA              ;
 343+ 95CA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95CA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95CA              ;	_ desaparece/aparece.
 346+ 95CA
 347+ 95CA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95CA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95CA              ;
 350+ 95CA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95CA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95CA              ; 		   [E] ="0"
 353+ 95CA
 354+ 95CA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95CA
 356+ 95CA CD E9 99     Inicializacion call calcula_tercio
 357+ 95CD 28 36        	jr z,primit
 358+ 95CF E6 02        	and 2
 359+ 95D1 20 07        	jr nz,segmit
 360+ 95D3 7D           	ld a,l
 361+ 95D4 FE 7F        	cp $7f
 362+ 95D6 38 2D        	jr c,primit
 363+ 95D8 28 2B        	jr z,primit
 364+ 95DA CD 37 96     segmit call column
 365+ 95DD 38 13        	jr c,tercuad
 366+ 95DF 3E 04        cuarcuad ld a,4
 367+ 95E1 32 CA 89     	ld (Cuad_objeto),a
 368+ 95E4 21 20 48     	ld hl,$4820
 369+ 95E7 22 F4 89     	ld (Limite_horizontal),hl
 370+ 95EA 21 F6 89     	ld hl,Limite_vertical
 371+ 95ED 36 0D        	ld (hl),$0d
 372+ 95EF 08           	ex af,af
 373+ 95F0 18 3C        	jr 1F
 374+ 95F2              tercuad
 375+ 95F2 3E 03        	ld a,3
 376+ 95F4 32 CA 89     	ld (Cuad_objeto),a
 377+ 95F7 21 20 48     	ld hl,$4820
 378+ 95FA 22 F4 89     	ld (Limite_horizontal),hl
 379+ 95FD 21 F6 89     	ld hl,Limite_vertical
 380+ 9600 36 12        	ld (hl),$12
 381+ 9602 08           	ex af,af
 382+ 9603 18 29        	jr 1F
 383+ 9605 CD 37 96     primit call column
 384+ 9608 38 13        	jr c, primcuad
 385+ 960A              segcuad
 386+ 960A 3E 02        	ld a,2
 387+ 960C 32 CA 89     	ld (Cuad_objeto),a
 388+ 960F 21 C0 4F     	ld hl,$4fc0
 389+ 9612 22 F4 89     	ld (Limite_horizontal),hl
 390+ 9615 21 F6 89     	ld hl,Limite_vertical
 391+ 9618 36 0D        	ld (hl),$0d
 392+ 961A 08           	ex af,af
 393+ 961B 18 11        	jr 1F
 394+ 961D              primcuad
 395+ 961D 3E 01        	ld a,1
 396+ 961F 32 CA 89     	ld (Cuad_objeto),a
 397+ 9622 21 C0 4F     	ld hl,$4fc0
 398+ 9625 22 F4 89     	ld (Limite_horizontal),hl
 399+ 9628 21 F6 89     	ld hl,Limite_vertical
 400+ 962B 36 12        	ld (hl),$12
 401+ 962D 08           	ex af,af
 402+ 962E CD 74 9D     1 call Genera_coordenadas
 403+ 9631 21 E4 89     	ld hl,Ctrl_0
 404+ 9634 CB EE        	set 5,(hl)
 405+ 9636 C9           	ret
 406+ 9637
 407+ 9637              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9637
 409+ 9637              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9637              ;
 411+ 9637              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9637
 413+ 9637 7D           column ld a,l
 414+ 9638 E6 1F        	and $1f
 415+ 963A FE 10         	cp $10
 416+ 963C C9            	ret
 417+ 963D
 418+ 963D              ; --------------------------------------------------------------------------------------------------------------------
 419+ 963D              ;
 420+ 963D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 963D              ;
 422+ 963D              ; 14/12/22
 423+ 963D              ;
 424+ 963D              ;	Modifica: A y BC.
 425+ 963D
 426+ 963D 3A CA 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9640 E6 01        	and 1
 428+ 9642 28 17        	jr z,1F
 429+ 9644
 430+ 9644              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9644
 432+ 9644 3A BC 89     	ld a,(Coordenada_X)
 433+ 9647 47           	ld b,a
 434+ 9648 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9649 79           	ld a,c
 436+ 964A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 964B 38 08        	jr c,2F
 438+ 964D 47           	ld b,a
 439+ 964E 79           	ld a,c
 440+ 964F 90           	sub b
 441+ 9650 32 F3 89     	ld (Columnas),a
 442+ 9653 18 1B        	jr 4F
 443+ 9655 79           2 ld a,c
 444+ 9656 32 F3 89     	ld (Columnas),a
 445+ 9659 18 15        	jr 4F
 446+ 965B
 447+ 965B              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 965B
 449+ 965B 3A BC 89     1 ld a,(Coordenada_X)
 450+ 965E 81           	add c
 451+ 965F 3D           	dec a
 452+ 9660 D6 1F        	sub $1f
 453+ 9662 38 08        	jr c,3F
 454+ 9664 47           	ld b,a
 455+ 9665 79           	ld a,c
 456+ 9666 90           	sub b
 457+ 9667 32 F3 89     	ld (Columnas),a
 458+ 966A 18 04        	jr 4F
 459+ 966C 79           3 ld a,c
 460+ 966D 32 F3 89     	ld (Columnas),a
 461+ 9670 D9           4 exx
 462+ 9671 4F           	ld c,a
 463+ 9672 D9           	exx
 464+ 9673 C9            ret
 465+ 9674
 466+ 9674              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9674              ;
 468+ 9674              ;   19/7/23
 469+ 9674              ;
 470+ 9674              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9674              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9674              ;
 473+ 9674              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9674              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9674              ;
 476+ 9674              ;	DESTRUYE: HL,B Y A.
 477+ 9674
 478+ 9674 3A CA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9677 FE 02        	cp 2
 480+ 9679 38 18        	jr c,1F
 481+ 967B 28 16        	jr z,1F
 482+ 967D E6 01        	and 1
 483+ 967F 28 0D        	jr z,3F
 484+ 9681
 485+ 9681              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9681
 487+ 9681 CD C7 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9684
 489+ 9684 7D           9 ld a,l
 490+ 9685 E6 1F        	and $1f
 491+ 9687 28 2A        	jr z,7F
 492+ 9689 2B           	dec hl
 493+ 968A 10 F8        	djnz 9B
 494+ 968C 18 25        	jr 7F
 495+ 968E
 496+ 968E              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 968E
 498+ 968E 2A B8 89     3 ld hl,(Posicion_actual)
 499+ 9691 18 20        	jr 7F
 500+ 9693
 501+ 9693 28 14        1 jr z,2F
 502+ 9695
 503+ 9695              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9695
 505+ 9695 CD C7 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9698
 507+ 9698 7D           4 ld a,l
 508+ 9699 E6 1F        	and $1f
 509+ 969B 28 03        	jr z,6F
 510+ 969D 2B           	dec hl
 511+ 969E 10 F8        	djnz 4B
 512+ 96A0 06 0F        6 ld b,15
 513+ 96A2 CD 28 97     5 call PreviousScan
 514+ 96A5 10 FB        	djnz 5B
 515+ 96A7 18 0A        	jr 7F
 516+ 96A9
 517+ 96A9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 96A9
 519+ 96A9 CD C7 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 96AC 06 0F        	ld b,15
 521+ 96AE CD 28 97     8 call PreviousScan
 522+ 96B1 10 FB        	djnz 8B
 523+ 96B3
 524+ 96B3 E5           7 push hl
 525+ 96B4 DD E1        	pop ix
 526+ 96B6
 527+ 96B6 2A BA 89     	ld hl,(Puntero_objeto)
 528+ 96B9 E5           	push hl
 529+ 96BA FD E1        	pop iy
 530+ 96BC
 531+ 96BC              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 96BC
 533+ 96BC 3A E4 89     	ld a,(Ctrl_0)
 534+ 96BF CB 77        	bit 6,a
 535+ 96C1 C8           	ret z
 536+ 96C2
 537+ 96C2              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 96C2              ; _ entidad / Amadeus´.
 539+ 96C2
 540+ 96C2 DD 22 3E 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96C6
 542+ 96C6 C9           	ret
 543+ 96C7
 544+ 96C7              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96C7              ;
 546+ 96C7              ;	2/1/23
 547+ 96C7              ;
 548+ 96C7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96C7              ;
 550+ 96C7              ;	Tras esta rutina tenemos:
 551+ 96C7              ;
 552+ 96C7              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96C7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96C7              ;
 555+ 96C7              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96C7
 557+ 96C7 2A B8 89     Operandos ld hl,(Posicion_actual)
 558+ 96CA 3A F3 89     	ld a,(Columnas)
 559+ 96CD 3D           	dec a
 560+ 96CE 20 01        	jr nz,1F
 561+ 96D0 3C           	inc a
 562+ 96D1 47           1 ld b,a
 563+ 96D2 C9           	ret
 564+ 96D3
 565+ 96D3              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96D3              ;
 567+ 96D3              ;	3/1/23
 568+ 96D3              ;
 569+ 96D3              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96D3              ;
 571+ 96D3              ;	Destruye: A,B,HL y DE.
 572+ 96D3
 573+ 96D3              Define_rutina_de_impresion
 574+ 96D3
 575+ 96D3 3A B7 89     	ld a,(Columns)
 576+ 96D6 47           	ld b,a
 577+ 96D7 3A F3 89     	ld a,(Columnas)
 578+ 96DA B8           	cp b
 579+ 96DB 20 0D        	jr nz,2f
 580+ 96DD
 581+ 96DD              ;	La entidad se imprime entera.
 582+ 96DD
 583+ 96DD 21 B9 97     	ld hl, Indice_entidades_completas
 584+ 96E0 E6 01        	and 1
 585+ 96E2 28 02        	jr z,1F
 586+ 96E4
 587+ 96E4 23           	inc hl
 588+ 96E5 23           	inc hl
 589+ 96E6
 590+ 96E6 CD 88 8D     1 call Extrae_address
 591+ 96E9 C9           	ret		;	ret
 592+ 96EA
 593+ 96EA              ;	La entidad no se imprime entera en pantalla.
 594+ 96EA
 595+ 96EA 3A CA 89     2 ld a,(Cuad_objeto)
 596+ 96ED E6 01        	and 1
 597+ 96EF 28 17        	jr z,3F
 598+ 96F1
 599+ 96F1              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96F1
 601+ 96F1 21 BD 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96F4 3A B7 89     4 ld a,(Columns)
 603+ 96F7 E6 01        	and 1
 604+ 96F9 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96FB
 606+ 96FB 23           	inc hl
 607+ 96FC 23           	inc hl
 608+ 96FD
 609+ 96FD 3A F3 89     	ld a,(Columnas)
 610+ 9700 E6 01        	and 1
 611+ 9702 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9704
 613+ 9704 23           	inc hl
 614+ 9705 23           	inc hl
 615+ 9706
 616+ 9706 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9708
 618+ 9708 21 C3 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 970B 18 E7        	jr 4B
 620+ 970D
 621+ 970D              ; --------------------------------------------------------------------------------------------------------------------
 622+ 970D              ;
 623+ 970D              ;	Prepara_draw
 624+ 970D              ;
 625+ 970D              ;	Es una rutina de carga.
 626+ 970D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 970D              ;
 628+ 970D              ;	FUNCIONAMIENTO:
 629+ 970D              ;
 630+ 970D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 970D              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 970D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 970D              ;
 634+ 970D              ;	DESTRUYE:
 635+ 970D              ;
 636+ 970D              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 970D
 638+ 970D 21 B6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9710 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9711 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9712 4E           	ld c,(hl)
 642+ 9713 2A B8 89     	ld hl,(Posicion_actual)
 643+ 9716 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9718 C9           	ret
 645+ 9719
 646+ 9719              ;----------------------------------------------------------------------------------------------------------------
 647+ 9719              ;
 648+ 9719              ;	5/08/22
 649+ 9719              ;
 650+ 9719              ;   NextScan.
 651+ 9719              ;
 652+ 9719              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9719              ;
 654+ 9719              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9719              ;
 656+ 9719              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9719              ;
 658+ 9719              ;       DESTRUIDOS: AF y HL !!!
 659+ 9719              ;
 660+ 9719              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9719              ;
 662+ 9719
 663+ 9719 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 971A 7C               ld a,h
 665+ 971B E6 07            and 7
 666+ 971D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 971E
 668+ 971E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 971F C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9721 6F               ld l,a
 671+ 9722 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9723
 673+ 9723 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9724 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9726 67               ld h,a
 676+ 9727 C9               ret
 677+ 9728
 678+ 9728              ;----------------------------------------------------------------------------------------------------------------
 679+ 9728              ;
 680+ 9728              ;	5/08/22
 681+ 9728              ;
 682+ 9728              ;   PreviousScan.
 683+ 9728              ;
 684+ 9728              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9728              ;
 686+ 9728              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9728              ;
 688+ 9728              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9728              ;
 690+ 9728              ;       DESTRUIDOS: AF y HL !!!
 691+ 9728              ;
 692+ 9728              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9728              ;
 694+ 9728
 695+ 9728 7C           PreviousScan ld a,h
 696+ 9729 25               dec h               ; Dec H.
 697+ 972A E6 07            and 7
 698+ 972C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 972D
 700+ 972D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 972E D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9730 6F               ld l,a
 703+ 9731 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9732
 705+ 9732 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9733 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9735 67               ld h,a
 708+ 9736 C9               ret
 709+ 9737
 710+ 9737              ; -----------------------------------------------------------------------------------
 711+ 9737              ;
 712+ 9737              ;	31/7/23
 713+ 9737              ;
 714+ 9737              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9737              ;	Extrae fotos de Album_de_fotos.
 716+ 9737
 717+ 9737              Extrae_foto_entidades
 718+ 9737
 719+ 9737 21 01 70     	ld hl,Album_de_fotos+1
 720+ 973A 7E           	ld a,(hl)
 721+ 973B A7           	and a
 722+ 973C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 973D
 724+ 973D 3A 05 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 9740 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 9741 C8           	ret z
 727+ 9742
 728+ 9742              ; -----------------------------------
 729+ 9742
 730+ 9742 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 9746 31 00 70     	ld sp,Album_de_fotos
 732+ 9749
 733+ 9749 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 974B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 974C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 974D
 737+ 974D ED 73 0C 8A  	ld (Stack_2),sp
 738+ 9751 ED 7B 0A 8A  	ld sp,(Stack)
 739+ 9755
 740+ 9755              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 9755
 742+ 9755 3E CD        	ld a,$cd
 743+ 9757 32 5F 97     	ld (Imprime),a
 744+ 975A EB           	ex de,hl
 745+ 975B 22 60 97     	ld (Imprime+1),hl
 746+ 975E EB           	ex de,hl
 747+ 975F
 748+ 975F              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 975F
 750+ 975F 00 00 00     Imprime db 0,0,0
 751+ 9762
 752+ 9762 ED 73 0A 8A  	ld (Stack),sp
 753+ 9766
 754+ 9766 3A 05 8A     	ld a,(Numero_de_malotes)
 755+ 9769 3D           	dec a
 756+ 976A 28 09        	jr z,1F
 757+ 976C 32 05 8A      	ld (Numero_de_malotes),a
 758+ 976F
 759+ 976F ED 7B 0C 8A  	ld sp,(Stack_2)
 760+ 9773 18 D4        	jr 2B
 761+ 9775
 762+ 9775 AF           1 xor a
 763+ 9776 32 0C 8A     	ld (Stack_2),a
 764+ 9779
 765+ 9779 C9           	ret
 766+ 977A
 767+ 977A              ; -----------------------------------------------------------------------------------
 768+ 977A              ;
 769+ 977A              ;	28/2/23
 770+ 977A              ;
 771+ 977A              ;	Pinta los disparos generados.
 772+ 977A
 773+ 977A              Extrae_foto_disparos
 774+ 977A
 775+ 977A 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 776+ 977D 7E               ld a,(hl)
 777+ 977E A7               and a
 778+ 977F C8               ret z
 779+ 9780
 780+ 9780 3A 2E 8A     	ld a,(Numero_de_disparotes)
 781+ 9783 A7           	and a
 782+ 9784 C8           	ret z
 783+ 9785 ED 73 0A 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9789 31 0D 72     	ld sp,Album_de_fotos_disparos
 785+ 978C
 786+ 978C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 978E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 978F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 9790
 790+ 9790 ED 73 0C 8A  	ld (Stack_2),sp
 791+ 9794 ED 7B 0A 8A  	ld sp,(Stack)
 792+ 9798
 793+ 9798              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9798
 795+ 9798 3E CD        	ld a,$cd
 796+ 979A 32 A2 97     	ld (Imprime2),a
 797+ 979D EB           	ex de,hl
 798+ 979E 22 A3 97     	ld (Imprime2+1),hl
 799+ 97A1 EB           	ex de,hl
 800+ 97A2
 801+ 97A2              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 97A2
 803+ 97A2 00 00 00     Imprime2 db 0,0,0
 804+ 97A5
 805+ 97A5 3A 2E 8A     	ld a,(Numero_de_disparotes)
 806+ 97A8 3D           	dec a
 807+ 97A9 28 09        	jr z,1F
 808+ 97AB 32 2E 8A      	ld (Numero_de_disparotes),a
 809+ 97AE
 810+ 97AE ED 7B 0C 8A  	ld sp,(Stack_2)
 811+ 97B2 18 D8        	jr 2B
 812+ 97B4
 813+ 97B4 AF           1 xor a
 814+ 97B5 32 0C 8A     	ld (Stack_2),a
 815+ 97B8 C9           	ret
 816+ 97B9
# file closed: Draw_XOR.asm
1482  97B9              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 97B9              ;   índices de Rutinas de impresión.
   2+ 97B9
   3+ 97B9 C9 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 97BB F6 97            defw Pinta_Amadeus_3x2
   5+ 97BD
   6+ 97BD 4C 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 97BF EC 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97C1 A0 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97C3
  10+ 97C3 76 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97C5 7A 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97C7 2E 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97C9
  14+ 97C9
  15+ 97C9              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97C9              ;
  17+ 97C9              ;   12/12/22
  18+ 97C9              ;
  19+ 97C9              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97C9              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97C9              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97C9              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97C9              ;
  24+ 97C9              ;   Modifica: DE y HL.
  25+ 97C9
  26+ 97C9 ED 73 0A 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97CD FD F9        	ld sp,iy
  28+ 97CF 06 10            ld b,16
  29+ 97D1 D1           1 pop de
  30+ 97D2 7B               ld a,e
  31+ 97D3 AE               xor (hl)
  32+ 97D4 77           	ld (hl),a
  33+ 97D5 23           	inc hl
  34+ 97D6 7A               ld a,d
  35+ 97D7 AE               xor (hl)
  36+ 97D8 77           	ld (hl),a
  37+ 97D9 2B           	dec hl
  38+ 97DA 24           	inc h
  39+ 97DB 7C               ld a,h
  40+ 97DC E6 07            and 7
  41+ 97DE 20 0A            jr nz,2F
  42+ 97E0 7D               ld a,l
  43+ 97E1 C6 20            add a,$20
  44+ 97E3 6F               ld l,a
  45+ 97E4 38 04            jr c,2F
  46+ 97E6 7C               ld a,h
  47+ 97E7 D6 08            sub 8
  48+ 97E9 67               ld h,a
  49+ 97EA 7C           2 ld a,h
  50+ 97EB FE 58            cp $58
  51+ 97ED 28 02            jr z,3F
  52+ 97EF 10 E0            djnz 1B
  53+ 97F1 ED 7B 0A 8A  3 ld sp,(Stack)
  54+ 97F5 C9           	ret
  55+ 97F6
  56+ 97F6 ED 73 0A 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97FA FD F9        	ld sp,iy
  58+ 97FC 06 08            ld b,8
  59+ 97FE D1           1 pop de
  60+ 97FF 7B               ld a,e
  61+ 9800 AE               xor (hl)
  62+ 9801 77           	ld (hl),a
  63+ 9802 23           	inc hl
  64+ 9803 7A               ld a,d
  65+ 9804 AE               xor (hl)
  66+ 9805 77           	ld (hl),a
  67+ 9806 23           	inc hl
  68+ 9807 D1           	pop de
  69+ 9808 7B               ld a,e
  70+ 9809 AE               xor (hl)
  71+ 980A 77           	ld (hl),a
  72+ 980B 2B           	dec hl
  73+ 980C 2B           	dec hl
  74+ 980D 24           	inc h
  75+ 980E 7C               ld a,h
  76+ 980F E6 07            and 7
  77+ 9811 20 0A            jr nz,2F
  78+ 9813 7D               ld a,l
  79+ 9814 C6 20            add a,$20
  80+ 9816 6F               ld l,a
  81+ 9817 38 04            jr c,2F
  82+ 9819 7C               ld a,h
  83+ 981A D6 08            sub 8
  84+ 981C 67               ld h,a
  85+ 981D 7C           2 ld a,h
  86+ 981E FE 58            cp $58
  87+ 9820 28 25            jr z,4F
  88+ 9822 7A               ld a,d
  89+ 9823 AE               xor (hl)
  90+ 9824 77               ld (hl),a
  91+ 9825 D1           	pop de
  92+ 9826 23           	inc hl
  93+ 9827 7B               ld a,e
  94+ 9828 AE               xor (hl)
  95+ 9829 77           	ld (hl),a
  96+ 982A 23           	inc hl
  97+ 982B 7A               ld a,d
  98+ 982C AE               xor (hl)
  99+ 982D 77           	ld (hl),a
 100+ 982E 2B           	dec hl
 101+ 982F 2B           	dec hl
 102+ 9830 24           	inc h
 103+ 9831 7C               ld a,h
 104+ 9832 E6 07            and 7
 105+ 9834 20 0A            jr nz,3F
 106+ 9836 7D               ld a,l
 107+ 9837 C6 20            add a,$20
 108+ 9839 6F               ld l,a
 109+ 983A 38 04            jr c,3F
 110+ 983C 7C               ld a,h
 111+ 983D D6 08            sub 8
 112+ 983F 67               ld h,a
 113+ 9840 7C           3 ld a,h
 114+ 9841 FE 58            cp $58
 115+ 9843 28 02            jr z,4F
 116+ 9845 10 B7            djnz 1B
 117+ 9847 ED 7B 0A 8A  4 ld sp,(Stack)
 118+ 984B C9           	ret
 119+ 984C
 120+ 984C              ; ---------------------------------------------------
 121+ 984C
 122+ 984C ED 73 0A 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9850 FD F9        	ld sp,iy
 124+ 9852
 125+ 9852              ; >>>
 126+ 9852
 127+ 9852 06 10            ld b,16
 128+ 9854 D1           1 pop de
 129+ 9855 7A           	ld a,d
 130+ 9856 AE           	xor (hl)
 131+ 9857 77           	ld (hl),a
 132+ 9858 24           	inc h
 133+ 9859 7C               ld a,h
 134+ 985A E6 07            and 7
 135+ 985C 20 0C            jr nz,2F
 136+ 985E 7D               ld a,l
 137+ 985F C6 20            add a,$20
 138+ 9861 6F               ld l,a
 139+ 9862 38 06            jr c,2F
 140+ 9864 7C               ld a,h
 141+ 9865 D6 08            sub 8
 142+ 9867 67               ld h,a
 143+ 9868 18 00            jr 2F
 144+ 986A 7C           2 ld a,h
 145+ 986B FE 58            cp $58
 146+ 986D 28 02            jr z,3F
 147+ 986F 10 E3            djnz 1B
 148+ 9871 ED 7B 0A 8A  3 ld sp,(Stack)
 149+ 9875 C9           	ret
 150+ 9876
 151+ 9876 ED 73 0A 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 987A FD F9        	ld sp,iy
 153+ 987C
 154+ 987C              ; >>>
 155+ 987C
 156+ 987C 06 10            ld b,16
 157+ 987E D1           1 pop de
 158+ 987F 7B           	ld a,e
 159+ 9880 AE           	xor (hl)
 160+ 9881 77           	ld (hl),a
 161+ 9882 24           	inc h
 162+ 9883 7C               ld a,h
 163+ 9884 E6 07            and 7
 164+ 9886 20 0C            jr nz,2F
 165+ 9888 7D               ld a,l
 166+ 9889 C6 20            add a,$20
 167+ 988B 6F               ld l,a
 168+ 988C 38 06            jr c,2F
 169+ 988E 7C               ld a,h
 170+ 988F D6 08            sub 8
 171+ 9891 67               ld h,a
 172+ 9892 18 00            jr 2F
 173+ 9894 7C           2 ld a,h
 174+ 9895 FE 58            cp $58
 175+ 9897 28 02            jr z,3F
 176+ 9899 10 E3            djnz 1B
 177+ 989B ED 7B 0A 8A  3 ld sp,(Stack)
 178+ 989F C9           	ret
 179+ 98A0
 180+ 98A0              ; ---------------------------------------------------
 181+ 98A0
 182+ 98A0 ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 98A4 FD F9        	ld sp,iy
 184+ 98A6 06 08            ld b,8
 185+ 98A8 D1           1 pop de
 186+ 98A9 7A           	ld a,d
 187+ 98AA AE           	xor (hl)
 188+ 98AB 77           	ld (hl),a
 189+ 98AC 23           	inc hl
 190+ 98AD D1           	pop de
 191+ 98AE 7B           	ld a,e
 192+ 98AF AE           	xor (hl)
 193+ 98B0 77           	ld (hl),a
 194+ 98B1 2B           	dec hl
 195+ 98B2 24            	inc h
 196+ 98B3 7C               ld a,h
 197+ 98B4 E6 07            and 7
 198+ 98B6 20 0A            jr nz,2F
 199+ 98B8 7D               ld a,l
 200+ 98B9 C6 20            add a,$20
 201+ 98BB 6F               ld l,a
 202+ 98BC 38 04            jr c,2F
 203+ 98BE 7C               ld a,h
 204+ 98BF D6 08            sub 8
 205+ 98C1 67               ld h,a
 206+ 98C2 7C           2 ld a,h
 207+ 98C3 FE 58            cp $58
 208+ 98C5 28 20            jr z,4F
 209+ 98C7 D1               pop de
 210+ 98C8 7B           	ld a,e
 211+ 98C9 AE           	xor (hl)
 212+ 98CA 77           	ld (hl),a
 213+ 98CB 23           	inc hl
 214+ 98CC 7A           	ld a,d
 215+ 98CD AE           	xor (hl)
 216+ 98CE 77           	ld (hl),a
 217+ 98CF 2B           	dec hl
 218+ 98D0 24           	inc h
 219+ 98D1 7C               ld a,h
 220+ 98D2 E6 07            and 7
 221+ 98D4 20 0A            jr nz,3F
 222+ 98D6 7D               ld a,l
 223+ 98D7 C6 20            add a,$20
 224+ 98D9 6F               ld l,a
 225+ 98DA 38 04            jr c,3F
 226+ 98DC 7C               ld a,h
 227+ 98DD D6 08            sub 8
 228+ 98DF 67               ld h,a
 229+ 98E0 7C           3 ld a,h
 230+ 98E1 FE 58            cp $58
 231+ 98E3 28 02            jr z,4F
 232+ 98E5 10 C1            djnz 1B
 233+ 98E7 ED 7B 0A 8A  4 ld sp,(Stack)
 234+ 98EB C9           	ret
 235+ 98EC
 236+ 98EC ED 73 0A 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98F0 FD F9        	ld sp,iy
 238+ 98F2 06 08            ld b,8
 239+ 98F4 D1           1 pop de
 240+ 98F5 D1           	pop de
 241+ 98F6 7B           	ld a,e
 242+ 98F7 AE           	xor (hl)
 243+ 98F8 77           	ld (hl),a
 244+ 98F9 24            	inc h
 245+ 98FA 7C               ld a,h
 246+ 98FB E6 07            and 7
 247+ 98FD 20 0A            jr nz,2F
 248+ 98FF 7D               ld a,l
 249+ 9900 C6 20            add a,$20
 250+ 9902 6F               ld l,a
 251+ 9903 38 04            jr c,2F
 252+ 9905 7C               ld a,h
 253+ 9906 D6 08            sub 8
 254+ 9908 67               ld h,a
 255+ 9909 7C           2 ld a,h
 256+ 990A FE 58            cp $58
 257+ 990C 28 1B            jr z,4F
 258+ 990E D1               pop de
 259+ 990F 7A           	ld a,d
 260+ 9910 AE           	xor (hl)
 261+ 9911 77           	ld (hl),a
 262+ 9912 24           	inc h
 263+ 9913 7C               ld a,h
 264+ 9914 E6 07            and 7
 265+ 9916 20 0A            jr nz,3F
 266+ 9918 7D               ld a,l
 267+ 9919 C6 20            add a,$20
 268+ 991B 6F               ld l,a
 269+ 991C 38 04            jr c,3F
 270+ 991E 7C               ld a,h
 271+ 991F D6 08            sub 8
 272+ 9921 67               ld h,a
 273+ 9922 7C           3 ld a,h
 274+ 9923 FE 58            cp $58
 275+ 9925 28 02            jr z,4F
 276+ 9927 10 CB            djnz 1B
 277+ 9929 ED 7B 0A 8A  4 ld sp,(Stack)
 278+ 992D C9           	ret
 279+ 992E
 280+ 992E ED 73 0A 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9932 FD F9        	ld sp,iy
 282+ 9934 06 08            ld b,8
 283+ 9936 D1           1 pop de
 284+ 9937 7B           	ld a,e
 285+ 9938 AE           	xor (hl)
 286+ 9939 77           	ld (hl),a
 287+ 993A 23           	inc hl
 288+ 993B 7A           	ld a,d
 289+ 993C AE           	xor (hl)
 290+ 993D 77           	ld (hl),a
 291+ 993E 2B           	dec hl
 292+ 993F 24             	inc h
 293+ 9940 7C               ld a,h
 294+ 9941 E6 07            and 7
 295+ 9943 20 0A            jr nz,2F
 296+ 9945 7D               ld a,l
 297+ 9946 C6 20            add a,$20
 298+ 9948 6F               ld l,a
 299+ 9949 38 04            jr c,2F
 300+ 994B 7C               ld a,h
 301+ 994C D6 08            sub 8
 302+ 994E 67               ld h,a
 303+ 994F 7C           2 ld a,h
 304+ 9950 FE 58            cp $58
 305+ 9952 28 21            jr z,4F
 306+ 9954 D1               pop de
 307+ 9955 7A           	ld a,d
 308+ 9956 AE           	xor (hl)
 309+ 9957 77           	ld (hl),a
 310+ 9958 23           	inc hl
 311+ 9959 D1               pop de
 312+ 995A 7B           	ld a,e
 313+ 995B AE           	xor (hl)
 314+ 995C 77           	ld (hl),a
 315+ 995D 2B           	dec hl
 316+ 995E 24           	inc h
 317+ 995F 7C               ld a,h
 318+ 9960 E6 07            and 7
 319+ 9962 20 0A            jr nz,3F
 320+ 9964 7D               ld a,l
 321+ 9965 C6 20            add a,$20
 322+ 9967 6F               ld l,a
 323+ 9968 38 04            jr c,3F
 324+ 996A 7C               ld a,h
 325+ 996B D6 08            sub 8
 326+ 996D 67               ld h,a
 327+ 996E 7C           3 ld a,h
 328+ 996F FE 58            cp $58
 329+ 9971 28 02            jr z,4F
 330+ 9973 10 C1            djnz 1B
 331+ 9975 ED 7B 0A 8A  4 ld sp,(Stack)
 332+ 9979 C9           	ret
 333+ 997A
 334+ 997A ED 73 0A 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 997E FD F9        	ld sp,iy
 336+ 9980 06 08            ld b,8
 337+ 9982 D1           1 pop de
 338+ 9983 7B           	ld a,e
 339+ 9984 AE           	xor (hl)
 340+ 9985 77           	ld (hl),a
 341+ 9986 24            	inc h
 342+ 9987 7C               ld a,h
 343+ 9988 E6 07            and 7
 344+ 998A 20 0A            jr nz,2F
 345+ 998C 7D               ld a,l
 346+ 998D C6 20            add a,$20
 347+ 998F 6F               ld l,a
 348+ 9990 38 04            jr c,2F
 349+ 9992 7C               ld a,h
 350+ 9993 D6 08            sub 8
 351+ 9995 67               ld h,a
 352+ 9996 7C           2 ld a,h
 353+ 9997 FE 58            cp $58
 354+ 9999 28 1C            jr z,4F
 355+ 999B D1               pop de
 356+ 999C 7A           	ld a,d
 357+ 999D AE           	xor (hl)
 358+ 999E 77           	ld (hl),a
 359+ 999F 24           	inc h
 360+ 99A0 7C               ld a,h
 361+ 99A1 E6 07            and 7
 362+ 99A3 20 0A            jr nz,3F
 363+ 99A5 7D               ld a,l
 364+ 99A6 C6 20            add a,$20
 365+ 99A8 6F               ld l,a
 366+ 99A9 38 04            jr c,3F
 367+ 99AB 7C               ld a,h
 368+ 99AC D6 08            sub 8
 369+ 99AE 67               ld h,a
 370+ 99AF 7C           3 ld a,h
 371+ 99B0 FE 58            cp $58
 372+ 99B2 28 03            jr z,4F
 373+ 99B4 D1               pop de
 374+ 99B5 10 CB            djnz 1B
 375+ 99B7 ED 7B 0A 8A  4 ld sp,(Stack)
 376+ 99BB C9           	ret
 377+ 99BC
 378+ 99BC              ; ---------------------------------------------------
 379+ 99BC              ;
 380+ 99BC              ;   27/02/23
 381+ 99BC              ;
 382+ 99BC              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 99BC              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 99BC              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 99BC
 386+ 99BC ED 73 0A 8A  Pinta_Disparo ld (Stack),sp
 387+ 99C0 FD F9            ld sp,iy
 388+ 99C2 06 03            ld b,3
 389+ 99C4 D1           1 pop de
 390+ 99C5 7B               ld a,e
 391+ 99C6 AE               xor (hl)
 392+ 99C7 77               ld (hl),a
 393+ 99C8 23               inc hl
 394+ 99C9 7A               ld a,d
 395+ 99CA AE               xor (hl)
 396+ 99CB 77               ld (hl),a
 397+ 99CC 2B               dec hl
 398+ 99CD
 399+ 99CD 24               inc h
 400+ 99CE 7C               ld a,h
 401+ 99CF E6 07            and 7
 402+ 99D1 20 0A            jr nz,2F
 403+ 99D3 7D               ld a,l
 404+ 99D4 C6 20            add a,$20
 405+ 99D6 6F               ld l,a
 406+ 99D7 38 04            jr c,2F
 407+ 99D9 7C               ld a,h
 408+ 99DA D6 08            sub 8
 409+ 99DC 67               ld h,a
 410+ 99DD 7C           2 ld a,h
 411+ 99DE FE 58            cp $58
 412+ 99E0 28 02            jr z,3F
 413+ 99E2
 414+ 99E2 10 E0            djnz 1B
 415+ 99E4 ED 7B 0A 8A  3 ld sp,(Stack)
 416+ 99E8 C9               ret
 417+ 99E9
# file closed: Rutinas_de_impresion_sprites.asm
1483  99E9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99E9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99E9              ;
   3+ 99E9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99E9              ;
   5+ 99E9              ; *****************************************************************************************************************************************************************************************
   6+ 99E9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99E9
   8+ 99E9 7C           calcula_tercio ld a,h
   9+ 99EA E6 18        	and $18
  10+ 99EC CB 2F        	sra a
  11+ 99EE CB 2F        	sra a
  12+ 99F0 CB 2F        	sra a
  13+ 99F2 C9           	ret
  14+ 99F3
# file closed: calcula_tercio.asm
1484  99F3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99F3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99F3              ;
   3+ 99F3              ;
   4+ 99F3              ;	CLS.
   5+ 99F3              ;
   6+ 99F3              ;	Limpia la pantalla y define sus atributos.
   7+ 99F3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99F3              ;
   9+ 99F3              ;	COLORES: 0 ..... NEGRO
  10+ 99F3              ;    		 1 ..... AZUL
  11+ 99F3              ; 			 2 ..... ROJO
  12+ 99F3              ;			 3 ..... MAGENTA
  13+ 99F3              ; 			 4 ..... VERDE
  14+ 99F3              ; 			 5 ..... CIAN
  15+ 99F3              ;			 6 ..... AMARILLO
  16+ 99F3              ; 			 7 ..... BLANCO
  17+ 99F3              ;
  18+ 99F3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99F3              ;
  20+ 99F3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99F3
  22+ 99F3
  23+ 99F3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99F6 11 01 40     	LD DE,$4001
  25+ 99F9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99FC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99FE ED B0        	LDIR
  28+ 9A00 01 FF 02     	LD BC,767
  29+ 9A03 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9A04 ED B0        	LDIR
  31+ 9A06 C9           	ret
  32+ 9A07
# file closed: Cls.asm
1485  9A07              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9A07              ; ******************************************************************************************************************************************************************************************
   2+ 9A07              ;
   3+ 9A07              ;   20/05/23
   4+ 9A07              ;
   5+ 9A07              ;	Recompone_posicion_inicio
   6+ 9A07              ;
   7+ 9A07              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9A07              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9A07              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9A07              ;	_ a una u otra rutina.
  11+ 9A07
  12+ 9A07              Recompone_posicion_inicio
  13+ 9A07
  14+ 9A07 2A C8 89     	ld hl,(Posicion_inicio)
  15+ 9A0A 7D           	ld a,l
  16+ 9A0B E6 1F        	and $1f
  17+ 9A0D 28 16        	jr z,1F
  18+ 9A0F
  19+ 9A0F FE 1F        	cp $1f
  20+ 9A11 28 0D        	jr z,3F
  21+ 9A13
  22+ 9A13 21 F7 89     	ld hl,Ctrl_2
  23+ 9A16 CB C6        	set 0,(hl)
  24+ 9A18 2A BA 89     	ld hl,(Puntero_objeto)
  25+ 9A1B 22 FA 89     	ld (Repone_puntero_objeto),hl
  26+ 9A1E 18 08        	jr 2F
  27+ 9A20
  28+ 9A20 CD C1 9B     3 call Mov_left
  29+ 9A23 18 03        	jr 2F
  30+ 9A25
  31+ 9A25 CD A3 9A     1 call Mov_right
  32+ 9A28 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A2B 22 BA 89     	ld (Puntero_objeto),hl
  34+ 9A2E C9           	ret
  35+ 9A2F
  36+ 9A2F              ; ******************************************************************************************************************************************************************************************
  37+ 9A2F              ;
  38+ 9A2F              ;   27/05/23
  39+ 9A2F              ;
  40+ 9A2F              ;	Mov_down
  41+ 9A2F              ;
  42+ 9A2F              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A2F              ;
  44+ 9A2F              ;
  45+ 9A2F              Mov_down
  46+ 9A2F
  47+ 9A2F CD 91 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A32              ;																	; _ repone (Puntero_objeto).
  49+ 9A32 21 E4 89     	ld hl,Ctrl_0
  50+ 9A35 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A37              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A37              ; 																	; _ en el caso de que no lo haya.
  53+ 9A37 3A CE 89     	ld a,(Vel_down)
  54+ 9A3A 47           	ld b,a
  55+ 9A3B 2A B8 89         ld hl,(Posicion_actual)
  56+ 9A3E CD E9 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A41 E6 02        	and 2
  58+ 9A43 28 0F        	jr z,1F
  59+ 9A45
  60+ 9A45              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A45              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A45
  63+ 9A45 7C           	ld a,h
  64+ 9A46 FE 57        	cp $57
  65+ 9A48 20 0A        	jr nz,1F
  66+ 9A4A
  67+ 9A4A 7D           	ld a,l
  68+ 9A4B C6 20        	add $20
  69+ 9A4D 30 05        	jr nc,1F
  70+ 9A4F
  71+ 9A4F              ; ------------------------------
  72+ 9A4F              ;	call Reaparece_arriba
  73+ 9A4F CD 4E 9D     	call Reinicio
  74+ 9A52              ; ------------------------------
  75+ 9A52
  76+ 9A52 18 08        	jr 3F
  77+ 9A54 CD 19 97     1 call NextScan
  78+ 9A57 22 B8 89     	ld (Posicion_actual),hl
  79+ 9A5A 10 E2            djnz 2B
  80+ 9A5C CD 74 9D     3 call Genera_coordenadas
  81+ 9A5F C9           	ret
  82+ 9A60
  83+ 9A60              ; ******************************************************************************************************************************************************************************************
  84+ 9A60              ;
  85+ 9A60              ;   27/05/23
  86+ 9A60              ;
  87+ 9A60              ;	Mov_up
  88+ 9A60              ;
  89+ 9A60              ; 	Mueve el Sprite hacia arriba.
  90+ 9A60              ;
  91+ 9A60              ;
  92+ 9A60              Mov_up
  93+ 9A60
  94+ 9A60 CD 91 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A63              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A63 21 E4 89     	ld hl,Ctrl_0
  97+ 9A66 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A68              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A68              ; 																		; _ en el caso de que no lo haya.
 100+ 9A68 3A CD 89     	ld a,(Vel_up)
 101+ 9A6B 47           	ld b,a
 102+ 9A6C 2A B8 89     	ld hl,(Posicion_actual)
 103+ 9A6F CD E9 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A72 A7           	and a
 105+ 9A73 20 10        	jr nz,1F
 106+ 9A75
 107+ 9A75              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A75              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A75
 110+ 9A75 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A76 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A78 20 0B            jr nz,1F
 113+ 9A7A 7D               ld a,l
 114+ 9A7B D6 20            sub $20
 115+ 9A7D 30 06            jr nc,1F
 116+ 9A7F 25               dec h
 117+ 9A80
 118+ 9A80              ; -----------------------------
 119+ 9A80 CD 2F 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A83              ;	call Reinicio
 121+ 9A83              ; -----------------------------
 122+ 9A83
 123+ 9A83 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A85 CD 28 97     1 call PreviousScan
 125+ 9A88 22 B8 89     	ld (Posicion_actual),hl
 126+ 9A8B 10 E2            djnz 3B
 127+ 9A8D CD 74 9D     2 call Genera_coordenadas
 128+ 9A90 C9           	ret
 129+ 9A91
 130+ 9A91              ; -----------------------------
 131+ 9A91              ;
 132+ 9A91              ;	27/5/23
 133+ 9A91              ;
 134+ 9A91              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A91              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A91              ;
 137+ 9A91              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A91              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A91              ;
 140+ 9A91              ;	Modifica: A y (Puntero_objeto).
 141+ 9A91
 142+ 9A91 3A F7 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A94 CB 47        	bit 0,a
 144+ 9A96 C8           	ret z
 145+ 9A97 CB 87        	res 0,a
 146+ 9A99 32 F7 89     	ld (Ctrl_2),a
 147+ 9A9C 2A FA 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A9F 22 BA 89     	ld (Puntero_objeto),hl
 149+ 9AA2 C9           	ret
 150+ 9AA3
 151+ 9AA3              ; ******************************************************************************************************************************************************************************************
 152+ 9AA3              ;
 153+ 9AA3              ;	19/10/22
 154+ 9AA3              ;
 155+ 9AA3              ;	Mov_right.
 156+ 9AA3              ;
 157+ 9AA3              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9AA3              ;
 159+ 9AA3
 160+ 9AA3 21 E4 89     Mov_right ld hl,Ctrl_0
 161+ 9AA6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9AA8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9AA8              ; 																	; _ en el caso de que no lo haya.
 164+ 9AA8 3A E4 89     	ld a,(Ctrl_0)
 165+ 9AAB CB 77        	bit 6,a
 166+ 9AAD 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9AAF
 168+ 9AAF CD DD 9C     	call Stop_Amadeus_right
 169+ 9AB2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9AB3 18 4D        	jr 8F
 171+ 9AB5
 172+ 9AB5 3A BC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9AB8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9ABA 20 46        	jr nz,8F
 175+ 9ABC
 176+ 9ABC 3A BE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9ABF A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AC0 28 40        	jr z,8F
 179+ 9AC2
 180+ 9AC2              ; ---------- ---------- ----------
 181+ 9AC2              ;
 182+ 9AC2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9AC2
 184+ 9AC2 3A CC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AC5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AC7 28 11        	jr z,1F
 187+ 9AC9 38 06        	jr c,6F
 188+ 9ACB FE 04        	cp 4
 189+ 9ACD 28 14        	jr z,7F
 190+ 9ACF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AD1
 192+ 9AD1              ; ---------- ---------- ----------
 193+ 9AD1              ;
 194+ 9AD1              ; Perfiles de velocidad
 195+ 9AD1              ;
 196+ 9AD1
 197+ 9AD1 3A BE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AD4 FE FE        	cp $fe
 199+ 9AD6 20 2A        	jr nz,8F
 200+ 9AD8 18 10        	jr 3F
 201+ 9ADA 3A BE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9ADD FE FD        	cp $fd
 203+ 9ADF 20 21        	jr nz,8F
 204+ 9AE1 18 07        	jr 3F
 205+ 9AE3 3A BE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AE6 FE FB        	cp $fb
 207+ 9AE8 20 18        	jr nz,8F
 208+ 9AEA
 209+ 9AEA              ; ---------- ---------- ----------
 210+ 9AEA
 211+ 9AEA              3
 212+ 9AEA CD 1D 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AED              ;	call Reinicio
 214+ 9AED
 215+ 9AED              ; ---------- ---------- ----------
 216+ 9AED              ;
 217+ 9AED              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AED
 219+ 9AED 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AEF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AF0 CD 09 9B     	call DESPLZ_DER
 222+ 9AF3 C1           	pop bc
 223+ 9AF4 10 F9        	djnz 5B
 224+ 9AF6 2A B8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AF9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AFA 22 B8 89     	ld (Posicion_actual),hl
 227+ 9AFD CD 74 9D     	call Genera_coordenadas
 228+ 9B00 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9B02
 230+ 9B02              ; ---------- ---------- ----------
 231+ 9B02
 232+ 9B02 2A B8 89     8 ld hl,(Posicion_actual)
 233+ 9B05 CD 09 9B     	call DESPLZ_DER
 234+ 9B08 C9           2 ret
 235+ 9B09
 236+ 9B09              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9B09              ;
 238+ 9B09              ;	22/9/22
 239+ 9B09              ;
 240+ 9B09
 241+ 9B09 CD 18 9B     DESPLZ_DER call Desplaza_derecha
 242+ 9B0C CD 64 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9B0F CD 8D 9B         call Ciclo_completo
 244+ 9B12 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9B15 CB FE        	set 7,(hl)
 246+ 9B17 C9           	ret
 247+ 9B18
 248+ 9B18              ; ******************************************************************************************************************************************************************************************
 249+ 9B18              ;	15/02/23
 250+ 9B18              ;
 251+ 9B18
 252+ 9B18 3A CC 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9B1B 47           	ld b,a
 254+ 9B1C 2A C4 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9B1F 23           1 inc hl
 256+ 9B20 23           	inc hl
 257+ 9B21 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B23 22 C4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B26 CD 88 8D     	call Extrae_address
 260+ 9B29 22 BA 89     	ld (Puntero_objeto),hl
 261+ 9B2C
 262+ 9B2C              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B2C
 264+ 9B2C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B2C              ; Cuántos movimientos hemos hecho ??
 266+ 9B2C              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B2C
 268+ 9B2C 2A C0 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B2F EB           	ex de,hl
 270+ 9B30 A7           	and a
 271+ 9B31 ED 52        	sbc hl,de
 272+ 9B33 CB 3D        	srl l
 273+ 9B35 3E 08        6 ld a,8
 274+ 9B37 95           	sub l
 275+ 9B38 30 1E        	jr nc,3F
 276+ 9B3A
 277+ 9B3A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B3A              ; B="0".
 279+ 9B3A
 280+ 9B3A 04           4 inc b
 281+ 9B3B 3C           	inc a
 282+ 9B3C 20 FC        	jr nz,4B
 283+ 9B3E 78           	ld a,b
 284+ 9B3F 08           	ex af,af
 285+ 9B40 2A C0 89     	ld hl,(Indice_Sprite_der)
 286+ 9B43 23           5 inc hl
 287+ 9B44 23           	inc hl
 288+ 9B45 10 FC        	djnz 5B
 289+ 9B47 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B4A CD 88 8D     	call Extrae_address
 291+ 9B4D 22 BA 89     	ld (Puntero_objeto),hl
 292+ 9B50
 293+ 9B50              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B50              ; _(Posicion_actual).
 295+ 9B50
 296+ 9B50 21 B8 89     	ld hl,Posicion_actual
 297+ 9B53 34           	inc (hl)
 298+ 9B54 08               ex af,af
 299+ 9B55 6F           	ld l,a
 300+ 9B56 18 DD        	jr 6B
 301+ 9B58
 302+ 9B58              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B58
 304+ 9B58 47           3 ld b,a
 305+ 9B59 2A C2 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B5C 23           2 inc hl
 307+ 9B5D 23           	inc hl
 308+ 9B5E 10 FC        	djnz 2B
 309+ 9B60 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B63 C9           8 ret
 311+ 9B64
 312+ 9B64              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B64              ;
 314+ 9B64              ;	24/7/22
 315+ 9B64              ;
 316+ 9B64              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B64              ;
 318+ 9B64              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B64              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B64              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B64
 322+ 9B64 3A BE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B67 A7           	and a
 324+ 9B68 20 1F        	jr nz,1F
 325+ 9B6A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B6C 32 BE 89         ld (CTRL_DESPLZ),a
 327+ 9B6F
 328+ 9B6F 21 B7 89     	ld hl,Columns
 329+ 9B72 34           	inc (hl)
 330+ 9B73 3A CA 89     	ld a,(Cuad_objeto)
 331+ 9B76 E6 01        	and 1
 332+ 9B78 28 0F        	jr z,1F
 333+ 9B7A 2A B8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B7D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B7E 22 B8 89     	ld (Posicion_actual),hl
 336+ 9B81 CD 74 9D     	call Genera_coordenadas
 337+ 9B84 CD E9 9C     	call Inc_CTRL_DESPLZ
 338+ 9B87 18 03        	jr 2F
 339+ 9B89 CD E9 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B8C C9           2 ret
 341+ 9B8D
 342+ 9B8D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B8D              ;
 344+ 9B8D              ;	24/7/22
 345+ 9B8D              ;
 346+ 9B8D              ;	Ciclo_completo.
 347+ 9B8D              ;
 348+ 9B8D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B8D              ;
 350+ 9B8D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B8D              ; 	Decrementamos (Columns).
 352+ 9B8D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B8D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B8D
 355+ 9B8D
 356+ 9B8D 3A BE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B90 FE FF        	cp $ff
 358+ 9B92 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B94 E6 F0        	and $f0
 360+ 9B96 20 28        	jr nz,3F
 361+ 9B98
 362+ 9B98              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B98
 364+ 9B98 3A BE 89     	ld a,(CTRL_DESPLZ)
 365+ 9B9B 47           	ld b,a
 366+ 9B9C 3E F8        	ld a,$f8
 367+ 9B9E 80           	add b
 368+ 9B9F 32 BE 89     	ld (CTRL_DESPLZ),a
 369+ 9BA2 18 1C        	jr 3F
 370+ 9BA4 21 B7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9BA7 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9BA8 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9BA9 32 BE 89     	ld (CTRL_DESPLZ),a
 374+ 9BAC 3A CA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9BAF E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9BB1 20 0A        	jr nz,2F
 377+ 9BB3 2A B8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9BB6 23           	inc hl
 379+ 9BB7 22 B8 89     	ld (Posicion_actual),hl
 380+ 9BBA CD 74 9D     	call Genera_coordenadas
 381+ 9BBD
 382+ 9BBD              ; Inicia el puntero de Sprite.
 383+ 9BBD
 384+ 9BBD CD 9F 8D     2 call Inicia_puntero_objeto_der
 385+ 9BC0 C9           3 ret
 386+ 9BC1
 387+ 9BC1              ; ******************************************************************************************************************************************************************************************
 388+ 9BC1              ;
 389+ 9BC1              ;	15/02/23
 390+ 9BC1              ;
 391+ 9BC1              ;	Mov_left.
 392+ 9BC1              ;
 393+ 9BC1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BC1              ;
 395+ 9BC1 21 E4 89     Mov_left ld hl,Ctrl_0
 396+ 9BC4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9BC6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9BC6              ; 																	; _ en el caso de que no lo haya.
 399+ 9BC6 3A E4 89     	ld a,(Ctrl_0)
 400+ 9BC9 CB 77        	bit 6,a
 401+ 9BCB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BCD
 403+ 9BCD CD E3 9C     	call Stop_Amadeus_left
 404+ 9BD0 C8           	ret z
 405+ 9BD1 20 4A        	jr nz,8F
 406+ 9BD3
 407+ 9BD3 3A BC 89     11 ld a,(Coordenada_X)
 408+ 9BD6 A7           	and a
 409+ 9BD7 20 44        	jr nz,8F
 410+ 9BD9
 411+ 9BD9 3A BE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BDC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BDD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BDF
 415+ 9BDF              ; ---------- ---------- ----------
 416+ 9BDF
 417+ 9BDF 3A CB 89     	ld a,(Vel_left)
 418+ 9BE2 FE 02        	cp 2
 419+ 9BE4 28 0F        	jr z,1F
 420+ 9BE6 38 04        	jr c,6F
 421+ 9BE8 FE 04        	cp 4
 422+ 9BEA 28 12        	jr z,7F
 423+ 9BEC
 424+ 9BEC              ; ---------- ---------- ----------
 425+ 9BEC
 426+ 9BEC 3A BE 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BEF FE F8        	cp $f8
 428+ 9BF1 20 2A        	jr nz,8F
 429+ 9BF3 18 10        	jr 4F
 430+ 9BF5 3A BE 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BF8 FE F9        	cp $f9
 432+ 9BFA 20 21        	jr nz,8F
 433+ 9BFC 18 07        	jr 4F
 434+ 9BFE 3A BE 89     7 ld a,(CTRL_DESPLZ)
 435+ 9C01 FE FB        	cp $fb
 436+ 9C03 20 18        	jr nz,8F
 437+ 9C05
 438+ 9C05              ; ---------- ---------- ----------
 439+ 9C05
 440+ 9C05              4
 441+ 9C05 CD 0B 9D     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9C08              ;	call Reinicio
 443+ 9C08
 444+ 9C08              ; ---------- ---------- ----------
 445+ 9C08
 446+ 9C08 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9C0A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9C0B
 449+ 9C0B              ;	ld hl,(Indice_Sprite_izq)
 450+ 9C0B              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9C0B
 452+ 9C0B CD 24 9C     	call DESPLZ_IZQ
 453+ 9C0E C1           	pop bc
 454+ 9C0F 10 F9        	djnz 5B
 455+ 9C11 2A B8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9C14 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9C15 22 B8 89     	ld (Posicion_actual),hl
 458+ 9C18 CD 74 9D     	call Genera_coordenadas
 459+ 9C1B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9C1D
 461+ 9C1D              ; ---------- ---------- ----------
 462+ 9C1D
 463+ 9C1D              ; Movemos, no hay recolocación.
 464+ 9C1D
 465+ 9C1D 2A B8 89     8 ld hl,(Posicion_actual)
 466+ 9C20 CD 24 9C     	call DESPLZ_IZQ
 467+ 9C23 C9           2 ret
 468+ 9C24
 469+ 9C24              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9C24              ;
 471+ 9C24              ;	22/9/22
 472+ 9C24
 473+ 9C24              DESPLZ_IZQ
 474+ 9C24
 475+ 9C24 CD 33 9C     	call Desplaza_izquierda
 476+ 9C27 CD 7F 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C2A CD A7 9C     	call Ciclo_completo_2
 478+ 9C2D 21 E4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C30 CB BE        	res 7,(hl)
 480+ 9C32 C9           	ret
 481+ 9C33
 482+ 9C33              Desplaza_izquierda
 483+ 9C33
 484+ 9C33 3A CB 89     	ld a,(Vel_left)
 485+ 9C36 47           	ld b,a
 486+ 9C37 2A C6 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C3A 23           1 inc hl
 488+ 9C3B 23           	inc hl
 489+ 9C3C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C3E 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C41 CD 88 8D     	call Extrae_address
 492+ 9C44 22 BA 89     	ld (Puntero_objeto),hl
 493+ 9C47
 494+ 9C47              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C47
 496+ 9C47              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C47              ; Cuántos movimientos hemos hecho ??
 498+ 9C47              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C47
 500+ 9C47 2A C2 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C4A EB           	ex de,hl
 502+ 9C4B A7           	and a
 503+ 9C4C ED 52        	sbc hl,de
 504+ 9C4E CB 3D        	srl l
 505+ 9C50 3E 08        6 ld a,8
 506+ 9C52 95           	sub l
 507+ 9C53 30 1E        	jr nc,3F
 508+ 9C55
 509+ 9C55              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C55              ; B="0".
 511+ 9C55
 512+ 9C55 04           4 inc b
 513+ 9C56 3C           	inc a
 514+ 9C57 20 FC        	jr nz,4B
 515+ 9C59 78           	ld a,b
 516+ 9C5A 08           	ex af,af
 517+ 9C5B 2A C2 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C5E 23           5 inc hl
 519+ 9C5F 23           	inc hl
 520+ 9C60 10 FC        	djnz 5B
 521+ 9C62 22 C6 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C65 CD 88 8D     	call Extrae_address
 523+ 9C68 22 BA 89     	ld (Puntero_objeto),hl
 524+ 9C6B
 525+ 9C6B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C6B              ; _(Posicion_actual).
 527+ 9C6B
 528+ 9C6B 21 B8 89     	ld hl,Posicion_actual
 529+ 9C6E 35           	dec (hl)
 530+ 9C6F 08           	ex af,af
 531+ 9C70 6F           	ld l,a
 532+ 9C71 18 DD        	jr 6B
 533+ 9C73
 534+ 9C73              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C73
 536+ 9C73 47           3 ld b,a
 537+ 9C74 2A C0 89     	ld hl,(Indice_Sprite_der)
 538+ 9C77 23           2 inc hl
 539+ 9C78 23           	inc hl
 540+ 9C79 10 FC        	djnz 2B
 541+ 9C7B 22 C4 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C7E C9           8 ret
 543+ 9C7F
 544+ 9C7F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C7F              ;
 546+ 9C7F              ;	modifica_parametros_1er_DESPLZ
 547+ 9C7F              ;
 548+ 9C7F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C7F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C7F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C7F
 552+ 9C7F 3A BE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C82 A7           	and a
 554+ 9C83 20 1E        	jr nz,1F
 555+ 9C85 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C86 32 BE 89         ld (CTRL_DESPLZ),a
 557+ 9C89 21 B7 89     	ld hl,Columns
 558+ 9C8C 34           	inc (hl)
 559+ 9C8D 3A CA 89     	ld a,(Cuad_objeto)
 560+ 9C90 E6 01        	and 1
 561+ 9C92 20 0F        	jr nz,1F
 562+ 9C94 2A B8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C97 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C98 22 B8 89     	ld (Posicion_actual),hl
 565+ 9C9B CD 74 9D     	call Genera_coordenadas
 566+ 9C9E CD FA 9C     	call Dec_CTRL_DESPLZ
 567+ 9CA1 18 03        	jr 2F
 568+ 9CA3 CD FA 9C     1 call Dec_CTRL_DESPLZ
 569+ 9CA6 C9           2 ret
 570+ 9CA7
 571+ 9CA7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9CA7
 573+ 9CA7 3A BE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9CAA FE F7        	cp $f7
 575+ 9CAC 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9CAE 30 2C        	jr nc,3F
 577+ 9CB0
 578+ 9CB0              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9CB0
 580+ 9CB0 06 00        	ld b,0
 581+ 9CB2 04           4 inc b
 582+ 9CB3 3C           	inc a
 583+ 9CB4 FE F7        	cp $f7
 584+ 9CB6 20 FA        	jr nz,4B
 585+ 9CB8 3E FF        	ld a,$ff
 586+ 9CBA 90           	sub b
 587+ 9CBB 32 BE 89     	ld (CTRL_DESPLZ),a
 588+ 9CBE 18 1C        	jr 3F
 589+ 9CC0
 590+ 9CC0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9CC0
 592+ 9CC0 21 B7 89     1 ld hl,Columns
 593+ 9CC3 35           	dec (hl)
 594+ 9CC4 AF           	xor a
 595+ 9CC5 32 BE 89     	ld (CTRL_DESPLZ),a
 596+ 9CC8 3A CA 89     	ld a,(Cuad_objeto)
 597+ 9CCB E6 01        	and 1
 598+ 9CCD 28 0A        	jr z,2F
 599+ 9CCF 2A B8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CD2 2B           	dec hl
 601+ 9CD3 22 B8 89     	ld (Posicion_actual),hl
 602+ 9CD6 CD 74 9D     	call Genera_coordenadas
 603+ 9CD9
 604+ 9CD9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CD9
 606+ 9CD9 CD B2 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CDC C9           3 ret
 608+ 9CDD
 609+ 9CDD              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CDD              ;
 611+ 9CDD              ;	19/10/22
 612+ 9CDD              ;
 613+ 9CDD              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CDD              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CDD
 616+ 9CDD 3A BC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CE0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CE2 C9           	ret
 619+ 9CE3
 620+ 9CE3              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CE3              ;
 622+ 9CE3              ;	19/10/22
 623+ 9CE3              ;
 624+ 9CE3              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CE3              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CE3
 627+ 9CE3 3A BC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CE6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CE8 C9           	ret
 630+ 9CE9
 631+ 9CE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CE9              ;
 633+ 9CE9              ;	24/7/22
 634+ 9CE9              ;
 635+ 9CE9              ;	Inc_CTRL_DESPLZ
 636+ 9CE9              ;
 637+ 9CE9              ;
 638+ 9CE9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CE9
 640+ 9CE9 21 BE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CEC 3A CC 89     	ld a,(Vel_right)
 642+ 9CEF A7           	and a
 643+ 9CF0 28 06        	jr z,1F
 644+ 9CF2 47           	ld b,a
 645+ 9CF3 34           3 inc (hl)
 646+ 9CF4 10 FD        	djnz 3B
 647+ 9CF6 18 01        	jr 2F
 648+ 9CF8 34           1 inc (hl)
 649+ 9CF9 C9           2 ret
 650+ 9CFA
 651+ 9CFA              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CFA              ;
 653+ 9CFA              ;	5/2/23
 654+ 9CFA              ;
 655+ 9CFA              ;	Dec_CTRL_DESPLZ
 656+ 9CFA              ;
 657+ 9CFA              ;
 658+ 9CFA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CFA
 660+ 9CFA 21 BE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CFD 3A CB 89     	ld a,(Vel_left)
 662+ 9D00 A7           	and a
 663+ 9D01 28 06        	jr z,1F
 664+ 9D03 47           	ld b,a
 665+ 9D04 35           3 dec (hl)
 666+ 9D05 10 FD        	djnz 3B
 667+ 9D07 18 01        	jr 2F
 668+ 9D09 35           1 dec (hl)
 669+ 9D0A C9           2 ret
 670+ 9D0B
 671+ 9D0B              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9D0B
 673+ 9D0B 2A B8 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9D0E 01 1F 00     	ld bc,31
 675+ 9D11 A7           	and a
 676+ 9D12 ED 4A        	adc hl,bc
 677+ 9D14 22 B8 89     	ld (Posicion_actual),hl
 678+ 9D17 21 E4 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9D1A CB C6        	set 0,(hl)
 680+ 9D1C C9           	ret
 681+ 9D1D
 682+ 9D1D              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9D1D
 684+ 9D1D 2A B8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9D20 01 1F 00     	ld bc,31
 686+ 9D23 A7           	and a
 687+ 9D24 ED 42        	sbc hl,bc
 688+ 9D26 22 B8 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D29 21 E4 89     	ld hl,Ctrl_0
 690+ 9D2C CB CE        	set 1,(hl)
 691+ 9D2E C9           	ret
 692+ 9D2F
 693+ 9D2F              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D2F
 695+ 9D2F 24           Reaparece_abajo inc h
 696+ 9D30 01 E0 17     	ld bc,$17e0
 697+ 9D33 A7           	and a
 698+ 9D34 ED 4A        	adc hl,bc
 699+ 9D36 22 B8 89     	ld (Posicion_actual),hl
 700+ 9D39 21 E4 89     	ld hl,Ctrl_0
 701+ 9D3C CB D6        	set 2,(hl)
 702+ 9D3E C9           	ret
 703+ 9D3F
 704+ 9D3F              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D3F
 706+ 9D3F 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D42 A7           	and a
 708+ 9D43 ED 42        	sbc hl,bc
 709+ 9D45 22 B8 89     	ld (Posicion_actual),hl
 710+ 9D48 21 E4 89     	ld hl,Ctrl_0
 711+ 9D4B CB DE        	set 3,(hl)
 712+ 9D4D C9           	ret
 713+ 9D4E
 714+ 9D4E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D4E              ;
 716+ 9D4E              ;	15/07/23
 717+ 9D4E
 718+ 9D4E              Reinicio
 719+ 9D4E
 720+ 9D4E              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D4E
 722+ 9D4E AF           	xor a
 723+ 9D4F 21 EB 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D52 CD 70 9D     	call Limpia_contenido_hl
 725+ 9D55
 726+ 9D55 21 B8 89     	ld hl,Posicion_actual
 727+ 9D58 CD 70 9D     	call Limpia_contenido_hl
 728+ 9D5B
 729+ 9D5B CD 91 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D5E CD 1B A0     	call Inicia_Puntero_mov
 731+ 9D61
 732+ 9D61 21 ED 89     	ld hl,Incrementa_puntero
 733+ 9D64 06 05        	ld b,5
 734+ 9D66 77           1 ld (hl),a
 735+ 9D67 23           	inc hl
 736+ 9D68 10 FC        	djnz 1B
 737+ 9D6A
 738+ 9D6A 21 F7 89     	ld hl,Ctrl_2
 739+ 9D6D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D6F
 741+ 9D6F C9           	ret
 742+ 9D70
 743+ 9D70 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D71 23           	inc hl
 745+ 9D72 77           	ld (hl),a
 746+ 9D73 C9           	ret
 747+ 9D74
 748+ 9D74
# file closed: Direcciones.asm
1486  9D74              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D74              ; ------------------------------------------------------------------------
   2+ 9D74              ;
   3+ 9D74              ;	02/04/23
   4+ 9D74              ;
   5+ 9D74              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D74              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D74              ;
   8+ 9D74              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D74              ;
  10+ 9D74              ;	Modifica: A,BC y DE.
  11+ 9D74
  12+ 9D74 C5           Genera_coordenadas push bc
  13+ 9D75 E5           	push hl
  14+ 9D76 D5           	push de
  15+ 9D77
  16+ 9D77 2A B8 89     	ld hl,(Posicion_actual)
  17+ 9D7A
  18+ 9D7A 7D           	ld a,l
  19+ 9D7B E6 1F        	and $1f
  20+ 9D7D 32 BC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D80
  22+ 9D80 CD E9 99     	call calcula_tercio
  23+ 9D83 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D84
  25+ 9D84 1E 00        	ld e,0
  26+ 9D86 7D           	ld a,l
  27+ 9D87 E6 E0        	and $e0
  28+ 9D89 28 01        	jr z,1F
  29+ 9D8B 04           	inc b
  30+ 9D8C
  31+ 9D8C 04           1 inc b
  32+ 9D8D 05           	dec b
  33+ 9D8E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D90              ;														; _ , salimos.
  35+ 9D90 1C           3 inc e
  36+ 9D91 D6 20        	sub 32
  37+ 9D93 20 FB        	jr nz,3B
  38+ 9D95 10 F5        	djnz 1B
  39+ 9D97
  40+ 9D97 7B           2 ld a,e
  41+ 9D98 32 BD 89     	ld (Coordenada_y),a
  42+ 9D9B
  43+ 9D9B D1           	pop de
  44+ 9D9C E1           	pop hl
  45+ 9D9D C1           	pop bc
  46+ 9D9E
  47+ 9D9E C9           	ret
  48+ 9D9F
  49+ 9D9F              ; ------------------------------------------------------------------------
  50+ 9D9F              ;	28/05/23
  51+ 9D9F              ;
  52+ 9D9F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D9F              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D9F              ;
  55+ 9D9F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D9F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D9F              ;
  58+ 9D9F              ;		DE="$120d"
  59+ 9D9F              ;
  60+ 9D9F              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D9F              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D9F              ;
  63+ 9D9F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D9F
  65+ 9D9F              ;	Modifica: A,BC y DE.
  66+ 9D9F
  67+ 9D9F
  68+ 9D9F              Genera_coordenadas_disparo
  69+ 9D9F
  70+ 9D9F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D9F
  72+ 9D9F 7D           	ld a,l
  73+ 9DA0 E6 1F        	and $1f
  74+ 9DA2 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9DA3 CD E9 99     	call calcula_tercio
  76+ 9DA6 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9DA7 1E 00        	ld e,0
  78+ 9DA9 7D           	ld a,l
  79+ 9DAA E6 E0        	and $e0
  80+ 9DAC 28 01        	jr z,1F
  81+ 9DAE 04           	inc b
  82+ 9DAF 1C           1 inc e
  83+ 9DB0 D6 20        	sub 32
  84+ 9DB2 20 FB        	jr nz,1B
  85+ 9DB4 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9DB6 C9           	ret
  87+ 9DB7
# file closed: Genera_coordenadas.asm
1487  9DB7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DB7
   2+ 9DB7
   3+ 9DB7              ;   07/07/23
   4+ 9DB7              ;
   5+ 9DB7              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DB7              ;
   7+ 9DB7              ;   Codificación:
   8+ 9DB7              ;
   9+ 9DB7              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DB7              ;
  11+ 9DB7              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DB7              ;
  13+ 9DB7              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DB7              ;
  15+ 9DB7              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DB7              ;
  17+ 9DB7              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DB7              ;                               ..... %01000010 Vel_up 4
  19+ 9DB7              ;                                               Vel_down 2
  20+ 9DB7              ;                               ..... $42
  21+ 9DB7              ;
  22+ 9DB7              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DB7              ;
  24+ 9DB7              ;                               ..... %01000010 Vel_left 4
  25+ 9DB7              ;                                               Vel_right 2
  26+ 9DB7              ;                               ..... $42
  27+ 9DB7              ;
  28+ 9DB7              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DB7              ;
  30+ 9DB7              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DB7              ;
  32+ 9DB7              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DB7              ;
  34+ 9DB7              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DB7              ;                                     $53
  36+ 9DB7              ;
  37+ 9DB7              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DB7              ;
  39+ 9DB7              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DB7              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DB7              ;
  42+ 9DB7              ;                       Arriba ..... $81
  43+ 9DB7              ;                       Arriba - izquierda ..... $a1
  44+ 9DB7              ;                       Arriba - derecha ..... $91
  45+ 9DB7              ;
  46+ 9DB7              ;                       Abajo ..... $41
  47+ 9DB7              ;                       Abajo - izquierda ..... $61
  48+ 9DB7              ;                       Abajo - derecha ..... $51
  49+ 9DB7              ;
  50+ 9DB7              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DB7              ;
  52+ 9DB7              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DB7              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DB7              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DB7              ;
  56+ 9DB7              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DB7              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DB7              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DB7              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DB7              ;
  61+ 9DB7              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DB7              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DB7              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DB7              ;
  65+ 9DB7              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DB7              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DB7              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DB7              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DB7
  70+ 9DB7              ; ----- ----- ----- ----- -----
  71+ 9DB7
  72+ 9DB7 E3 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DB9 EB 9D            defw F_1
  74+ 9DBB F5 9D            defw F_2
  75+ 9DBD FF 9D            defw Codo_abajo_derecha
  76+ 9DBF 33 9E            defw Derecha_y_subiendo
  77+ 9DC1 3D 9E            defw Derecha_y_subiendo_1
  78+ 9DC3 47 9E            defw F_3
  79+ 9DC5 51 9E            defw F_4
  80+ 9DC7 5B 9E            defw Derecha_y_bajando
  81+ 9DC9 65 9E            defw Derecha_y_bajando_1
  82+ 9DCB 6F 9E            defw Derecha_y_bajando_2
  83+ 9DCD 79 9E            defw Codo_derecha_abajo
  84+ 9DCF A9 9E            defw Codo_abajo_izq.
  85+ 9DD1 DD 9E            defw Izquierda_y_subiendo
  86+ 9DD3 E7 9E            defw Izquierda_y_subiendo_1
  87+ 9DD5 F1 9E            defw F_5
  88+ 9DD7 FB 9E            defw F_6
  89+ 9DD9 05 9F            defw Izquierda_y_bajando
  90+ 9DDB 0F 9F            defw Izquierda_y_bajando_1
  91+ 9DDD 19 9F            defw Izquierda_y_bajando_2
  92+ 9DDF 23 9F            defw Codo_izquierda_abajo
  93+ 9DE1 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DE3
  95+ 9DE3 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DE7 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DEB
  98+ 9DEB 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DEF 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DF3 08 00
 100+ 9DF5 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DF9 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DFD 0F FE
 102+ 9DFF
 103+ 9DFF 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9E03 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9E07 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9E0B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9E0F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E13 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E17 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E1B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E1F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E23 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E27 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E2B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E2F 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E33
 117+ 9E33 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E37 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E3B 06 00
 119+ 9E3D
 120+ 9E3D 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E41 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E45 02 00
 122+ 9E47
 123+ 9E47 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E4B 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E4F 04 00
 125+ 9E51 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E55 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E59 08 00
 127+ 9E5B
 128+ 9E5B 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E5F 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E63 02 00
 130+ 9E65
 131+ 9E65 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E69 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E6D 06 00
 133+ 9E6F
 134+ 9E6F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E73 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E77 06 00
 136+ 9E79
 137+ 9E79              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E79
 139+ 9E79 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E7D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E81 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E85 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E89 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E8D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E91 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E95 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E99 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E9D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9EA1 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9EA5 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9EA9
 152+ 9EA9 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9EAD 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EB1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EB5 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EB9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EBD 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EC1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EC5 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EC9 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9ECD 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9ED1 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9ED5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9ED9 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EDD
 166+ 9EDD 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EE1 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EE5 06 00
 168+ 9EE7
 169+ 9EE7 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EEB 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EEF 02 00
 171+ 9EF1
 172+ 9EF1 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EF5 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EF9 04 00
 174+ 9EFB 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EFF 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9F03 08 00
 176+ 9F05
 177+ 9F05 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9F09 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9F0D 02 00
 179+ 9F0F
 180+ 9F0F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F13 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F17 06 00
 182+ 9F19
 183+ 9F19 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F1D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F21 06 00
 185+ 9F23
 186+ 9F23 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F27 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F2B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F2F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F33 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F37 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F3B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F3F 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F43 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F47 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F4B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F4F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F53
 199+ 9F53              ; ----- ----- ----- ----- -----
 200+ 9F53              ;
 201+ 9F53              ;   27/06/23
 202+ 9F53
 203+ 9F53              Movimiento
 204+ 9F53
 205+ 9F53              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F53
 207+ 9F53              ;    ld hl,(Posicion_actual)
 208+ 9F53
 209+ 9F53 3A F7 89         ld a,(Ctrl_2)
 210+ 9F56 CB 57            bit 2,a
 211+ 9F58 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F5A
 213+ 9F5A 2A E9 89         ld hl,(Puntero_mov)
 214+ 9F5D 7E               ld a,(hl)
 215+ 9F5E
 216+ 9F5E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F5E
 218+ 9F5E              Inicia_desplazamiento.
 219+ 9F5E
 220+ 9F5E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F5E
 222+ 9F5E CD 52 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F61
 224+ 9F61              ; Iniciamos (Repetimos_mov).
 225+ 9F61
 226+ 9F61 7E               ld a,(hl)
 227+ 9F62 E6 0F            and $0f
 228+ 9F64 32 EF 89         ld (Repetimos_desplazamiento),a
 229+ 9F67 32 F0 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F6A
 231+ 9F6A              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F6A
 233+ 9F6A 23               inc hl
 234+ 9F6B 7E               ld a,(hl)
 235+ 9F6C 32 F2 89         ld (Cola_de_desplazamiento),a
 236+ 9F6F 2B               dec hl
 237+ 9F70
 238+ 9F70 21 F7 89         ld hl,Ctrl_2
 239+ 9F73 CB D6            set 2,(hl)
 240+ 9F75
 241+ 9F75              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F75              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F75
 244+ 9F75              Desplazamiento_iniciado
 245+ 9F75
 246+ 9F75 CD 26 A0         call Aplica_desplazamiento
 247+ 9F78
 248+ 9F78 3A F7 89         ld a,(Ctrl_2)
 249+ 9F7B CB 67            bit 4,a
 250+ 9F7D C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F7E
 252+ 9F7E 21 EF 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F81 35               dec (hl)
 254+ 9F82 C0               ret nz
 255+ 9F83
 256+ 9F83              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F83              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F83              ; Analiza (Cola_de_desplazamiento).
 259+ 9F83
 260+ 9F83 3A F2 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F86 A7               and a
 262+ 9F87 CC 7B A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F8A 28 30            jr z,Reinicia_el_movimiento
 264+ 9F8C
 265+ 9F8C FE FF            cp $ff
 266+ 9F8E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F90
 268+ 9F90 FE FE            cp $fe
 269+ 9F92 CC FF 9F         call z,Fijamos_bucle
 270+ 9F95 28 25            jr z,Reinicia_el_movimiento
 271+ 9F97
 272+ 9F97 FE FD            cp $fd
 273+ 9F99 20 11            jr nz,1F
 274+ 9F9B
 275+ 9F9B              ; ---
 276+ 9F9B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F9B
 278+ 9F9B 3A F7 89         ld a,(Ctrl_2)
 279+ 9F9E CB 5F            bit 3,a
 280+ 9FA0 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9FA2
 282+ 9FA2              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9FA2
 284+ 9FA2 21 F7 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9FA5 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9FA7
 287+ 9FA7 CD 10 A0         call Inicia_Repetimos_movimiento
 288+ 9FAA 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9FAC              ; ---
 290+ 9FAC
 291+ 9FAC FE 01        1 cp 1
 292+ 9FAE CA E9 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9FB1
 294+ 9FB1 3D               dec a
 295+ 9FB2 32 F2 89         ld (Cola_de_desplazamiento),a
 296+ 9FB5
 297+ 9FB5 3A F0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9FB8 32 EF 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9FBB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9FBB C9               ret
 301+ 9FBC
 302+ 9FBC              Reinicia_el_movimiento
 303+ 9FBC
 304+ 9FBC 3A F7 89         ld a,(Ctrl_2)
 305+ 9FBF CB 5F            bit 3,a
 306+ 9FC1 28 1B            jr z,2F
 307+ 9FC3
 308+ 9FC3              ; (Cola_de_desplazamiento)="254".
 309+ 9FC3
 310+ 9FC3 21 F1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9FC6 35               dec (hl)
 312+ 9FC7 20 15            jr nz,2F
 313+ 9FC9
 314+ 9FC9              ; Fin de las repeticiones del último movimiento.
 315+ 9FC9
 316+ 9FC9 21 F7 89         ld hl,Ctrl_2
 317+ 9FCC CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FCE
 319+ 9FCE 2A E9 89         ld hl,(Puntero_mov)
 320+ 9FD1 23               inc hl
 321+ 9FD2 23               inc hl
 322+ 9FD3 23               inc hl
 323+ 9FD4 22 E9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FD7              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FD7 7E               ld a,(hl)
 326+ 9FD8 32 F2 89         ld (Cola_de_desplazamiento),a
 327+ 9FDB
 328+ 9FDB C3 83 9F         jp Cola
 329+ 9FDE
 330+ 9FDE
 331+ 9FDE CD 1B A0     2 call Inicia_Puntero_mov
 332+ 9FE1
 333+ 9FE1 21 F7 89         ld hl,Ctrl_2
 334+ 9FE4 CB 96            res 2,(hl)
 335+ 9FE6
 336+ 9FE6 C3 53 9F         jp Movimiento
 337+ 9FE9
 338+ 9FE9              Siguiente_desplazamiento
 339+ 9FE9
 340+ 9FE9              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FE9              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FE9
 343+ 9FE9 21 F7 89         ld hl,Ctrl_2
 344+ 9FEC CB 96            res 2,(hl)
 345+ 9FEE
 346+ 9FEE 2A E9 89         ld hl,(Puntero_mov)
 347+ 9FF1 23               inc hl
 348+ 9FF2 23               inc hl
 349+ 9FF3 22 E9 89         ld (Puntero_mov),hl
 350+ 9FF6
 351+ 9FF6 7E               ld a,(hl)
 352+ 9FF7 A7               and a
 353+ 9FF8 CC 7B A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FFB CA BC 9F         jp z,Reinicia_el_movimiento
 355+ 9FFE
 356+ 9FFE C9               ret
 357+ 9FFF              ; Subrutinas -----------------------------------------
 358+ 9FFF              ; ---------- --------- --------- ---------- ----------
 359+ 9FFF              ;
 360+ 9FFF              ;   24/07/23
 361+ 9FFF              ;
 362+ 9FFF              ;   Fijamos_bucle
 363+ 9FFF              ;
 364+ 9FFF              ;
 365+ 9FFF
 366+ 9FFF              Fijamos_bucle
 367+ 9FFF
 368+ 9FFF 3A ED 89         ld a,(Incrementa_puntero)
 369+ A002 3C               inc a
 370+ A003 32 EE 89         ld (Incrementa_puntero_backup),a
 371+ A006
 372+ A006 CD 7B A0         call Incrementa_Puntero_indice_mov
 373+ A009 2A E7 89         ld hl,(Puntero_indice_mov)
 374+ A00C 22 EB 89         ld (Puntero_indice_mov_bucle),hl
 375+ A00F C9               ret
 376+ A010
 377+ A010              ; ---------- --------- --------- ---------- ----------
 378+ A010              ;
 379+ A010              ;   07/7/23
 380+ A010              ;
 381+ A010              ;   Inicia_Repetimos_movimiento
 382+ A010              ;
 383+ A010              ;
 384+ A010
 385+ A010              Inicia_Repetimos_movimiento
 386+ A010
 387+ A010              ; Iniciamos (Repetimos_movimiento).
 388+ A010
 389+ A010 DD 2A E9 89      ld ix,(Puntero_mov)
 390+ A014 DD 7E 02         ld a,(ix+2)
 391+ A017 32 F1 89         ld (Repetimos_movimiento),a
 392+ A01A
 393+ A01A C9               ret
 394+ A01B
 395+ A01B              ; ---------- --------- --------- ---------- ----------
 396+ A01B              ;
 397+ A01B              ;   26/6/23
 398+ A01B              ;
 399+ A01B              ;   Inicia_Puntero_mov
 400+ A01B              ;
 401+ A01B              ;
 402+ A01B
 403+ A01B 2A E7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ A01E 5E               ld e,(hl)
 405+ A01F 23               inc hl
 406+ A020 56               ld d,(hl)
 407+ A021 EB               ex de,hl
 408+ A022 22 E9 89         ld (Puntero_mov),hl
 409+ A025 C9               ret
 410+ A026
 411+ A026              ; ---------- --------- --------- ---------- ----------
 412+ A026              ;
 413+ A026              ;   27/06/23
 414+ A026              ;
 415+ A026              ;   Aplica_movimiento.
 416+ A026
 417+ A026              Aplica_desplazamiento
 418+ A026
 419+ A026              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ A026
 421+ A026 2A E9 89         ld hl, (Puntero_mov)
 422+ A029
 423+ A029 7E               ld a,(hl)
 424+ A02A E6 F0            and $f0
 425+ A02C C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A02D
 427+ A02D CB 7E            bit 7,(hl)
 428+ A02F 28 03            jr z,1F
 429+ A031 CD 60 9A         call Mov_up
 430+ A034 2A E9 89     1 ld hl, (Puntero_mov)
 431+ A037 CB 76            bit 6,(hl)
 432+ A039 28 03            jr z,2F
 433+ A03B CD 2F 9A         call Mov_down
 434+ A03E 2A E9 89     2 ld hl, (Puntero_mov)
 435+ A041 CB 6E            bit 5,(hl)
 436+ A043 28 03            jr z,3F
 437+ A045 CD C1 9B         call Mov_left
 438+ A048 2A E9 89     3 ld hl, (Puntero_mov)
 439+ A04B CB 66            bit 4,(hl)
 440+ A04D C8               ret z
 441+ A04E CD A3 9A         call Mov_right
 442+ A051 C9               ret
 443+ A052
 444+ A052              ; ---------- --------- --------- ---------- ----------
 445+ A052              ;
 446+ A052              ;   26/06/23
 447+ A052              ;
 448+ A052              ;   Ajusta_velocidad_desplazamiento.
 449+ A052
 450+ A052              Ajusta_velocidad_desplazamiento
 451+ A052
 452+ A052              ; 1er byte de la cadena de movimiento.
 453+ A052              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A052
 455+ A052 CD 70 A0         call Extrae_nibble_alto
 456+ A055
 457+ A055 32 CD 89         ld (Vel_up),a
 458+ A058 79               ld a,c
 459+ A059 E6 0F            and $0f
 460+ A05B 32 CE 89         ld (Vel_down),a
 461+ A05E
 462+ A05E              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A05E              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A05E
 465+ A05E 23               inc hl
 466+ A05F CD 70 A0         call Extrae_nibble_alto
 467+ A062
 468+ A062 32 CB 89         ld (Vel_left),a
 469+ A065 79               ld a,c
 470+ A066 E6 0F            and $0f
 471+ A068 32 CC 89         ld (Vel_right),a
 472+ A06B
 473+ A06B              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A06B
 475+ A06B 23               inc hl
 476+ A06C 22 E9 89         ld (Puntero_mov),hl
 477+ A06F C9               ret
 478+ A070
 479+ A070 06 04        Extrae_nibble_alto ld b,4
 480+ A072 7E               ld a,(hl)
 481+ A073 4F               ld c,a
 482+ A074 E6 F0            and $f0
 483+ A076 CB 3F        1 srl a
 484+ A078 10 FC            djnz 1B
 485+ A07A C9               ret
 486+ A07B
 487+ A07B              ; ---------- --------- --------- ---------- ----------
 488+ A07B              ;
 489+ A07B              ;   5/7/23
 490+ A07B              ;
 491+ A07B              ;   Incrementa_Puntero_indice_mov
 492+ A07B
 493+ A07B              Incrementa_Puntero_indice_mov
 494+ A07B
 495+ A07B 21 ED 89         ld hl,Incrementa_puntero
 496+ A07E 34               inc (hl)
 497+ A07F
 498+ A07F 2A E7 89         ld hl,(Puntero_indice_mov)
 499+ A082 01 02 00         ld bc,2
 500+ A085 A7               and a
 501+ A086 09               add hl,bc
 502+ A087 22 E7 89         ld (Puntero_indice_mov),hl
 503+ A08A
 504+ A08A 7E               ld a,(hl)
 505+ A08B A7               and a
 506+ A08C
 507+ A08C              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A08C
 509+ A08C              ;    jr z,$
 510+ A08C
 511+ A08C              ;! Reinicia el Patrón de movimiento.
 512+ A08C
 513+ A08C CC 91 A0         call z,Inicializa_Puntero_indice_mov
 514+ A08F
 515+ A08F AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A090
 517+ A090 C9               ret
 518+ A091
 519+ A091
 520+ A091              ; ---------- --------- --------- ---------- ----------
 521+ A091              ;
 522+ A091              ;   24/07/23
 523+ A091              ;
 524+ A091              ;   Inicializa_Puntero_indice_mov
 525+ A091
 526+ A091              Inicializa_Puntero_indice_mov
 527+ A091
 528+ A091              ; Existe etiqueta de bucle principal???
 529+ A091
 530+ A091 2A EB 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A094 24               inc h
 532+ A095 25               dec h
 533+ A096 28 05            jr z,2F
 534+ A098
 535+ A098 22 E7 89         ld (Puntero_indice_mov),hl
 536+ A09B 18 14            jr 3F
 537+ A09D
 538+ A09D              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A09D
 540+ A09D 3A ED 89     2 ld a,(Incrementa_puntero)
 541+ A0A0 47               ld b,a
 542+ A0A1
 543+ A0A1 2A E7 89         ld hl,(Puntero_indice_mov)
 544+ A0A4 2B           1 dec hl
 545+ A0A5 2B               dec hl
 546+ A0A6 10 FC            djnz 1B
 547+ A0A8 22 E7 89         ld (Puntero_indice_mov),hl
 548+ A0AB
 549+ A0AB AF               xor a
 550+ A0AC 32 ED 89         ld (Incrementa_puntero),a
 551+ A0AF 18 06            jr 4F
 552+ A0B1
 553+ A0B1 3A EE 89     3 ld a,(Incrementa_puntero_backup)
 554+ A0B4 32 ED 89         ld (Incrementa_puntero),a
 555+ A0B7 C9           4 ret
 556+ A0B8
 557+ A0B8
 558+ A0B8
# file closed: Patrones_de_mov.asm
1488  A0B8              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A0B8              ; Relojes y temporizaciones.
   2+ A0B8
   3+ A0B8              ; ------------------------------------------------------
   4+ A0B8              ;
   5+ A0B8              ;	16/7/23
   6+ A0B8              ;
   7+ A0B8              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A0B8              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A0B8              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A0B8              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A0B8              ;
  12+ A0B8              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A0B8              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A0B8
  15+ A0B8              ; Disparo_entidad db 1
  16+ A0B8              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A0B8              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A0B8
  19+ A0B8              Habilita_disparos
  20+ A0B8
  21+ A0B8 7E           	ld a,(hl)
  22+ A0B9 A7           	and a
  23+ A0BA C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A0BB
  25+ A0BB EB           	ex de,hl
  26+ A0BC
  27+ A0BC 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A0BD C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A0BE
  30+ A0BE              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A0BE
  32+ A0BE 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A0BF 7E           	ld a,(hl)
  34+ A0C0 23           	inc hl
  35+ A0C1 77           	ld (hl),a
  36+ A0C2
  37+ A0C2 EB           	ex de,hl						; Habilitamos disparo.
  38+ A0C3 3E 01        	ld a,1
  39+ A0C5 77           	ld (hl),a
  40+ A0C6 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1489  A0C7              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0C7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0C7              ;
   3+ A0C7              ;	9/8/23
   4+ A0C7              ;
   5+ A0C7              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0C7
   7+ A0C7              ;	ADC HL,SP	LD (addr),SP
   8+ A0C7              ;	ADD HL,SP	LD SP,(addr)
   9+ A0C7              ;	ADD IX,SP	LD SP,nn
  10+ A0C7              ; 	ADD IY,SP	LD SP,HL
  11+ A0C7              ;				LD SP,IX
  12+ A0C7              ;	DEC SP		LD SP,IY
  13+ A0C7
  14+ A0C7              ;	EX (SP),HL
  15+ A0C7              ;	EX (SP),IX
  16+ A0C7              ;	EX (SP),IY
  17+ A0C7
  18+ A0C7              ;	INC SP
  19+ A0C7
  20+ A0C7                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 0A 8A  7 ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A F9 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 10 8A         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 03            jr 4F
  46+ 7FB9
  47+ 7FB9 2A 0E 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBC
  49+ 7FBC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  50+ 7FBE
  51+ 7FBE D1           1 pop de
  52+ 7FBF 73               ld (hl),e
  53+ 7FC0 23               inc hl
  54+ 7FC1 72               ld (hl),d
  55+ 7FC2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  56+ 7FC3 10 F9            djnz 1B
  57+ 7FC5
  58+ 7FC5 CB 47            bit 0,a
  59+ 7FC7 28 05            jr z,5F
  60+ 7FC9
  61+ 7FC9 22 10 8A         ld (Stack_snapshot_disparos),hl
  62+ 7FCC 18 03            jr 6F
  63+ 7FCE
  64+ 7FCE 22 0E 8A     5 ld (Stack_snapshot),hl
  65+ 7FD1 ED 7B 0A 8A  6 ld sp,(Stack)
  66+ 7FD5
  67+ 7FD5              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  68+ 7FD5
  69+ 7FD5 5D               ld e,l
  70+ 7FD6 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  71+ 7FD7
  72+ 7FD7 2A 2A 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  73+ 7FDA 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  74+ 7FDB 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  75+ 7FDC 72               ld (hl),d                                     ; _ álbum a otro.
  76+ 7FDD
  77+ 7FDD FB               ei
  78+ 7FDE
  79+ 7FDE C9               ret
  80+ 7FDF
  81+ 7FDF              ; ------------------------------------------------
  82+ 7FDF              ;
  83+ 7FDF              ;   3/08/23
  84+ 7FDF              ;
  85+ 7FDF              ;   La rutina estará situada justo después de:
  86+ 7FDF              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  87+ 7FDF              ;
  88+ 7FDF              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  89+ 7FDF              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  90+ 7FDF
  91+ 7FDF                  org $7419
  92+ 7419
  93+ 7419              Gestiona_albumes_de_fotos
  94+ 7419
  95+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  96+ 7419              ;   Vaciamos Album_de_fotos.
  97+ 7419
  98+ 7419              ;   Album_de_fotos. Contiene datos ???
  99+ 7419
 100+ 7419 21 01 70         ld hl,Album_de_fotos+1
 101+ 741C 7E               ld a,(hl)
 102+ 741D A7               and a
 103+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 104+ 7420
 105+ 7420 2A 12 8A         ld hl,(End_Snapshot)
 106+ 7423 01 00 70         ld bc,Album_de_fotos
 107+ 7426 11 01 70         ld de,Album_de_fotos+1
 108+ 7429 AF               xor a
 109+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 110+ 742B
 111+ 742B CD BB 74         call Limpia_album
 112+ 742E
 113+ 742E 21 00 00         ld hl,0
 114+ 7431 22 12 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 115+ 7434
 116+ 7434              ; ----- ----- ----- -----
 117+ 7434
 118+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 119+ 7434
 120+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 121+ 7437 7E               ld a,(hl)
 122+ 7438 A7               and a
 123+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 124+ 743B              ;                               ; _ información del album2 al album1.
 125+ 743B
 126+ 743B              ; ----- ----- ----- -----
 127+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 128+ 743B
 129+ 743B 2A 16 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 130+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 131+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 132+ 7444
 133+ 7444 CD BB 74         call Limpia_album
 134+ 7447
 135+ 7447              ;   Calculamos (End_Snapshot)
 136+ 7447
 137+ 7447 A7               and a
 138+ 7448 ED 4A            adc hl,bc
 139+ 744A 22 12 8A         ld (End_Snapshot),hl
 140+ 744D
 141+ 744D              ;   Limpiamos Album_de_fotos_1.
 142+ 744D
 143+ 744D 2A 16 8A         ld hl,(End_Snapshot_1)
 144+ 7450 01 84 70         ld bc,Album_de_fotos_1
 145+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 146+ 7456 AF               xor a
 147+ 7457 02               ld (bc),a
 148+ 7458
 149+ 7458 CD BB 74         call Limpia_album
 150+ 745B
 151+ 745B 21 00 00         ld hl,0
 152+ 745E 22 16 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 153+ 7461
 154+ 7461              ; ----- ----- ----- -----
 155+ 7461
 156+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 157+ 7461
 158+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 159+ 7464 7E               ld a,(hl)
 160+ 7465 A7               and a
 161+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 162+ 7468              ;                               ; _ información del album3 al album2.
 163+ 7468              ; ----- ----- ----- -----
 164+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 165+ 7468
 166+ 7468 2A 1A 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 167+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 168+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 169+ 7471
 170+ 7471 CD BB 74         call Limpia_album
 171+ 7474
 172+ 7474              ;   Calculamos (End_Snapshot_1):
 173+ 7474
 174+ 7474 A7               and a
 175+ 7475 ED 4A            adc hl,bc
 176+ 7477 22 16 8A         ld (End_Snapshot_1),hl
 177+ 747A
 178+ 747A              ;   Limpiamos Album_de_fotos_2.
 179+ 747A
 180+ 747A 2A 1A 8A         ld hl,(End_Snapshot_2)
 181+ 747D 01 07 71         ld bc,Album_de_fotos_2
 182+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 183+ 7483 AF               xor a
 184+ 7484 02               ld (bc),a
 185+ 7485
 186+ 7485 CD BB 74         call Limpia_album
 187+ 7488
 188+ 7488 21 00 00         ld hl,0
 189+ 748B 22 1A 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 190+ 748E
 191+ 748E              ; ----- ----- ----- -----
 192+ 748E
 193+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 194+ 748E
 195+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 196+ 7491 7E               ld a,(hl)
 197+ 7492 A7               and a
 198+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 199+ 7494
 200+ 7494              ; ----- ----- ----- -----
 201+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 202+ 7494
 203+ 7494 2A 1E 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 204+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 205+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 206+ 749D
 207+ 749D CD BB 74         call Limpia_album
 208+ 74A0
 209+ 74A0              ;   Calculamos (End_Snapshot_2):
 210+ 74A0
 211+ 74A0 A7               and a
 212+ 74A1 ED 4A            adc hl,bc
 213+ 74A3 22 1A 8A         ld (End_Snapshot_2),hl
 214+ 74A6
 215+ 74A6              ;   Limpiamos Album_de_fotos_3.
 216+ 74A6
 217+ 74A6 2A 1E 8A         ld hl,(End_Snapshot_3)
 218+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 219+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 220+ 74AF AF               xor a
 221+ 74B0 02               ld (bc),a
 222+ 74B1
 223+ 74B1 CD BB 74         call Limpia_album
 224+ 74B4
 225+ 74B4 21 00 00         ld hl,0
 226+ 74B7 22 1E 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 227+ 74BA C9               ret
 228+ 74BB
 229+ 74BB              ; ----------------------------------------------------
 230+ 74BB              ;
 231+ 74BB              ;   10/8/23
 232+ 74BB              ;
 233+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 234+ 74BB              ;
 235+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 236+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 237+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 238+ 74BB
 239+ 74BB              ;    ld hl,(End_Snapshot)
 240+ 74BB              ;    ld bc,Album_de_fotos
 241+ 74BB              ;    ld de,Album_de_fotos+1
 242+ 74BB
 243+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 244+ 74BB
 245+ 74BB              Limpia_album
 246+ 74BB D5               push de            ; Guardo DESTINO.
 247+ 74BC C5               push bc            ; Guardo ORIGEN.
 248+ 74BD ED 42            sbc hl,bc
 249+ 74BF 4D               ld c,l
 250+ 74C0 44               ld b,h
 251+ 74C1 E1               pop hl
 252+ 74C2 C5               push bc
 253+ 74C3 ED B0            ldir
 254+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 255+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 256+ 74C7 C9               ret                         ; _ a otro).
 257+ 74C8              ;
 258+ 74C8
 259+ 74C8              ; -----------------------------------------------
 260+ 74C8
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
# file closed: Guarda_foto_registros.asm
1490  74C8
1491  74C8              	SAVESNA "Pruebas.sna", START
1492  74C8
1493  74C8
1494  74C8
1495  74C8
# file closed: Banco_de_pruebas.asm
