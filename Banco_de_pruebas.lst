# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 F0 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A FA 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 06        	jr z,1F
  42  AA20
  43  AA20 CD 9D 93     	call Borra_sprites
  44  AA23 CD D8 92     	call Extrae_Album_de_fotos
  45  AA26
  46  AA26              ;	ld a,6
  47  AA26              ;	out ($fe),a
  48  AA26              ;	call Pinta_Amadeus										; Borde amarillo.
  49  AA26
  50  AA26              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  51  AA26              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  52  AA26
  53  AA26              ;	ld a,7
  54  AA26              ;	out ($fe),a												; Borde blanco.
  55  AA26              ;	call Guarda_parametros_DRAW
  56  AA26              ;	call Restore_Amadeus
  57  AA26
  58  AA26              ; Posible colisión Entidad-Amadeus ???
  59  AA26
  60  AA26              ;	ld a,(Impacto2)
  61  AA26              ;	bit 2,a
  62  AA26              ;	jr z,1F
  63  AA26
  64  AA26              ;	call Detecta_colision_nave_entidad
  65  AA26
  66  AA26              ;1 ld a,4
  67  AA26              ;	out ($fe),a
  68  AA26              ;	call Gestiona_Amadeus
  69  AA26
  70  AA26              ;	ld a,7
  71  AA26              ;	out ($fe),a											; Borde blanco.
  72  AA26              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  73  AA26              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  74  AA26
  75  AA26              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  76  AA26
  77  AA26              ;	call Recupera_parametros_DRAW
  78  AA26
  79  AA26 CD B9 8D     1 call Actualiza_relojes
  80  AA29
  81  AA29 21 FA 89     	ld hl,Ctrl_3
  82  AA2C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  83  AA2E
  84  AA2E FD E1        	pop iy
  85  AA30 DD E1        	pop ix
  86  AA32 F1           	pop af
  87  AA33 C1           	pop bc
  88  AA34 D1           	pop de
  89  AA35 E1           	pop hl
  90  AA36 D9           	exx
  91  AA37 C1           	pop bc
  92  AA38 D1           	pop de
  93  AA39 E1           	pop hl
  94  AA3A 08           	ex af,af'
  95  AA3B F1           	pop af
  96  AA3C 08           	ex af,af'
  97  AA3D D9           	exx
  98  AA3E
  99  AA3E ED 7B F0 89  	ld sp,(Stack_3)
 100  AA42
 101  AA42 FB           	ei
 102  AA43
 103  AA43 3E 01        	ld a,1												; Borde azul.
 104  AA45 D3 FE        	out ($fe),a
 105  AA47
 106  AA47 C9           	ret
 107  AA48
 108  AA48              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 109  AA48
 110  AA48              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA48              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA48              ;
   3+ AA48              ;	17/02/23
   4+ AA48              ;
   5+ AA48              ;	Sprites e índices.
   6+ AA48
   7+ AA48              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 111  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 8719 40           	db $40												; (Ctrl_0).
 142+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 871E 00 00
 143+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 146+ 8726 00           	db 0 												; (Columnas).
 147+ 8727 00 00        	defw 0												; (Limite_horizontal).
 148+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 872C
 150+ 872C              ; ---------- ---------- ---------- ---------- ----------
 151+ 872C              ;
 152+ 872C              ;	22/01/24
 153+ 872C              ;
 154+ 872C              ; 	Cada caja tiene 19 bytes !!!
 155+ 872C
 156+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 872F 00           	db %00000000										; (Attr).
 158+ 8730              ;	db 0												; (Cuad_objeto).
 159+ 8730 00           	db 0												; (Impacto).
 160+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 873D 00           	db 0												; (Ctrl_0).
 165+ 873E 00           	db 0												; (Ctrl_2).
 166+ 873F
 167+ 873F              ; ---------- ---------- ---------- ---------- ----------
 168+ 873F
 169+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 8742 00           	db %00000000										; (Attr).
 171+ 8743              ;	db 0												; (Cuad_objeto).
 172+ 8743 00           	db 0												; (Impacto).
 173+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 8750 00           	db 0												; (Ctrl_0).
 178+ 8751 00           	db 0												; (Ctrl_2).
 179+ 8752
 180+ 8752              ; ---------- ---------- ---------- ---------- ----------
 181+ 8752
 182+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8755 00           	db %00000000										; (Attr).
 184+ 8756              ;	db 0												; (Cuad_objeto).
 185+ 8756 00           	db 0												; (Impacto).
 186+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8763 00           	db 0												; (Ctrl_0).
 191+ 8764 00           	db 0												; (Ctrl_2).
 192+ 8765
 193+ 8765              ; ---------- ---------- ---------- ---------- ----------
 194+ 8765
 195+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8768 00           	db %00000000										; (Attr).
 197+ 8769              ;	db 0												; (Cuad_objeto).
 198+ 8769 00           	db 0												; (Impacto).
 199+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8776 00           	db 0												; (Ctrl_0).
 204+ 8777 00           	db 0												; (Ctrl_2).
 205+ 8778
 206+ 8778              ; ---------- ---------- ---------- ---------- ----------
 207+ 8778
 208+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 877B 00           	db %00000000										; (Attr).
 210+ 877C              ;	db 0												; (Cuad_objeto).
 211+ 877C 00           	db 0												; (Impacto).
 212+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8789 00           	db 0												; (Ctrl_0).
 217+ 878A 00           	db 0												; (Ctrl_2).
 218+ 878B
 219+ 878B              ; ---------- ---------- ---------- ---------- ----------
 220+ 878B
 221+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 878E 00           	db %00000000										; (Attr).
 223+ 878F              ;	db 0												; (Cuad_objeto).
 224+ 878F 00           	db 0												; (Impacto).
 225+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 879C 00           	db 0												; (Ctrl_0).
 230+ 879D 00           	db 0												; (Ctrl_2).
 231+ 879E
 232+ 879E              ; ---------- ---------- ---------- ---------- ----------
 233+ 879E
 234+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 87A1 00           	db %00000000										; (Attr).
 236+ 87A2              ;	db 0												; (Cuad_objeto).
 237+ 87A2 00           	db 0												; (Impacto).
 238+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 87AF 00           	db 0												; (Ctrl_0).
 243+ 87B0 00           	db 0												; (Ctrl_2).
 244+ 87B1
 245+ 87B1              ; -------------------------------------------------------------------------------------
 246+ 87B1              ;
 247+ 87B1              ;	11/1/24
 248+ 87B1              ;
 249+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 87B1              ;
 251+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 87B1
 256+ 87B1              Indice_de_definiciones_de_entidades
 257+ 87B1
 258+ 87B1 B5 87        	defw Entidad_1
 259+ 87B3 C2 87        	defw Entidad_2
 260+ 87B5
 261+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 87B5
 263+ 87B5              ;	BADSAT, (Satélite malvado).
 264+ 87B5
 265+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 87B8 04           	db %00000100										; (Attr).
 267+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 270+ 87BF 01           	db 1												; (Cuad_objeto).
 271+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 87C2
 273+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 87C5 02           	db %00000010										; (Attr).
 275+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 87CC 01           	db 1												; (Cuad_objeto).
 279+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 87CF
# file closed: Cajas_y_disparos.asm
 112  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 113  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 7A 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 02           Nivel_1 db 2									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 897A
  19+ 897A 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897B 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8983 01 02
  22+ 8985 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8989 01 02
  23+ 898B
# file closed: Niveles.asm
 114  898B
 115  898B              ; ******************************************************************************************************************************************************************************************
 116  898B              ; Constantes.
 117  898B              ; ******************************************************************************************************************************************************************************************
 118  898B              ;
 119  898B              ; 25/12/23
 120  898B
 121  898B              ;
 122  898B              ; Constantes.
 123  898B              ;
 124  898B
 125  898B              Sprite_vacio equ $eae0
 126  898B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 127  898B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 128  898B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 129  898B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 130  898B
 131  898B              Almacen_de_scanlines_masticados_a_borrar equ $e800
 132  898B              Almacen_de_scanlines_masticados equ $e900
 133  898B              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 134  898B              Almacen_de_movimientos_masticados_Amadeus equ $e700
 135  898B              ;
 136  898B              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 137  898B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 138  898B              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 139  898B              Album_de_fotos_disparos equ $8056 ;  (8056h - 80abh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 140  898B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 141  898B              ;														; 55 Bytes.
 142  898B
 143  898B              Album_de_fotos_Amadeus equ $80ac	 ;  (80ach - 810eh) ; 12 bytes.
 144  898B
 145  898B              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 146  898B
 147  898B              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 148  898B
 149  898B              ; ******************************************************************************************************************************************************************************************
 150  898B              ; Variables.
 151  898B              ; ******************************************************************************************************************************************************************************************
 152  898B              ;
 153  898B              ; 18/01/24
 154  898B              ;
 155  898B              ; Variables de DRAW. (Motor principal).	42 Bytes.
 156  898B              ;
 157  898B
 158  898B              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  898B
 160  898B 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  898C              ;															- Patrón de movimiento.
 162  898C              ;															- Aspecto
 163  898C 00           Filas db 0												; Filas. [DRAW]
 164  898D 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 165  898E 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 166  8990 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 167  8992 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 168  8993 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 169  8994
 170  8994              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 171  8994
 172  8994 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 173  8995              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 174  8995              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 175  8995 00           Attr db 0												; Atributos de la entidad:
 176  8996
 177  8996              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 178  8996              ;
 179  8996              ;	COLORES: 0 ..... NEGRO
 180  8996              ;    		 1 ..... AZUL
 181  8996              ; 			 2 ..... ROJO
 182  8996              ;			 3 ..... MAGENTA
 183  8996              ; 			 4 ..... VERDE
 184  8996              ; 			 5 ..... CIAN
 185  8996              ;			 6 ..... AMARILLO
 186  8996              ; 			 7 ..... BLANCO
 187  8996
 188  8996 00 00        Indice_Sprite_der defw 0
 189  8998 00 00        Indice_Sprite_izq defw 0
 190  899A 00 00        Puntero_DESPLZ_der defw 0
 191  899C 00 00        Puntero_DESPLZ_izq defw 0
 192  899E
 193  899E 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 194  89A0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 195  89A1
 196  89A1              ; Variables de objeto. (Características).
 197  89A1
 198  89A1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 199  89A2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 200  89A2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 201  89A2 00 00 00...  Variables_de_borrado ds 6
 202  89A8
 203  89A8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 204  89AA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 205  89AA
 206  89AA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 207  89AC
 208  89AC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 209  89AC              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 210  89AC
 211  89AC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 212  89AE              ;														; _palabras que componen el "movimiento_masticado".
 213  89AE
 214  89AE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 215  89AE
 216  89AE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  89AF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  89AF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  89AF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  89AF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  89AF              ;
 222  89AF              ; 														DESCRIPCIÖN:
 223  89AF              ;
 224  89AF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  89AF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  89AF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  89AF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  89AF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  89AF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  89AF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  89AF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  89AF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  89AF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  89AF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  89AF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  89AF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  89AF              ;
 238  89AF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  89AF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  89AF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  89AF
 242  89AF              ; Variables de funcionamiento. [DRAW].
 243  89AF
 244  89AF 00           Columnas db 0
 245  89B0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 246  89B2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 247  89B2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 248  89B3
 249  89B3              ; variables de control general.
 250  89B3
 251  89B3 00           Ctrl_2 db 0
 252  89B4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 253  89B4              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 254  89B4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 255  89B4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 256  89B4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 257  89B4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 258  89B4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 259  89B4              ;
 260  89B4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 261  89B4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 262  89B4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 263  89B4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 264  89B4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 265  89B4              ;														BIT 4, ???
 266  89B4              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 267  89B4
 268  89B4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 269  89B5
 270  89B5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 271  89B5
 272  89B5              ;					         		---------;      ;---------
 273  89B5
 274  89B5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 275  89B5
 276  89B5              Perfiles_de_velocidad
 277  89B5
 278  89B5 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 279  89B6 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 280  89B7 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 281  89B8 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 282  89B9
 283  89B9              ; Contadores de 16 bits.
 284  89B9
 285  89B9 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 286  89BB 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 287  89BD 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 288  89BF 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 289  89C1
 290  89C1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 291  89C1
 292  89C1 00 E9        Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 293  89C3 00 E8        Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 294  89C5 02 80        Puntero_de_scanlines_en_album defw Album_de_fotos+2
 295  89C7
 296  89C7 00 00 00...  Semaforo_de_rutinas_de_impresion_utilizadas ds 8
 297  89CF
 298  89CF 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  89D1 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  89D3 00 00        Puntero_indice_mov_bucle defw 0							;
 301  89D5              ;
 302  89D5              ;
 303  89D5 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  89D6              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  89D6              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  89D6 00           Incrementa_puntero_backup db 0
 307  89D7 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  89D8              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  89D8 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  89D9 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  89DA 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  89DB              ;
 313  89DB              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  89DB              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  89DB              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  89DB              ;
 317  89DB              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  89DB              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  89DB              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  89DB              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  89DB              ;
 322  89DB              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  89DB              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  89DB              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  89DB              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 326  89DB
 327  89DB 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 328  89DC
 329  89DC              ;														DESCRIPCIÓN:
 330  89DC              ;
 331  89DC              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 332  89DC              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 333  89DC              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 334  89DC              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 335  89DC              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 336  89DC              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 337  89DC
 338  89DC              ;														BIT 3, Recarga de nueva oleada.
 339  89DC              ;														BIT 4, Recarga de nueva oleada.
 340  89DC              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 341  89DC              ;														BIT 6, **** Frame completo.
 342  89DC              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 343  89DC
 344  89DC 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 345  89DE              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 346  89DE              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 347  89DE              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 348  89DE
 349  89DE              ; Gestión de ENTIDADES y CAJAS.
 350  89DE
 351  89DE 00 00        Puntero_store_caja defw 0
 352  89E0 00 00        Puntero_restore_caja defw 0
 353  89E2 00 00        Indice_restore_caja defw 0
 354  89E4 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 355  89E5 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 356  89E6 00           Entidades_en_curso db 0									; ..... ..... .....
 357  89E7 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 358  89E8              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 359  89E8              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 360  89E8              ;														; _ (Numero_de_malotes)="0".
 361  89E8 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  89EA 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  89EC              ;														; _ puntero (Indice_entidades).
 364  89EC
 365  89EC              ;---------------------------------------------------------------------------------------------------------------
 366  89EC              ;
 367  89EC              ;	11/01/24
 368  89EC              ;
 369  89EC              ;	Álbumes.
 370  89EC
 371  89EC 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  89EE              ;														; _variable para almacenar lo posición del puntero_
 373  89EE              ; 														; _de pila, SP.
 374  89EE 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  89F0              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  89F0 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 377  89F2 00 80        Stack_snapshot defw Album_de_fotos
 378  89F4
 379  89F4 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 380  89F6
 381  89F6              ;End_Snapshot defw Album_de_fotos
 382  89F6              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 383  89F6 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 384  89F8              ;														; _el snapshot de los registros del siguiente disparo.
 385  89F8              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 386  89F8 AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 387  89FA
 388  89FA 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 389  89FB              ;
 390  89FB              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 391  89FB              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 392  89FB              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 393  89FB
 394  89FB 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 395  89FC              ;
 396  89FC              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 397  89FC              ;
 398  89FC              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 399  89FC              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 400  89FC              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 401  89FC              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 402  89FC              ;
 403  89FC              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 404  89FC              ;															_ masticados ya generados.
 405  89FC              ;
 406  89FC              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 407  89FC              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 408  89FC              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 409  89FC              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 410  89FC
 411  89FC
 412  89FC              ; Gestión de Disparos.
 413  89FC
 414  89FC 00           Numero_de_disparotes db 0
 415  89FD 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 416  89FF 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 417  8A01 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 418  8A02              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 419  8A02              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 420  8A02 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 421  8A04              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 422  8A04              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 423  8A04              ;														; _produzca colisión.
 424  8A04 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 425  8A06              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 426  8A06 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 427  8A09              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 428  8A09 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 429  8A0C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 430  8A0C 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 431  8A0D
 432  8A0D              ;---------------------------------------------------------------------------------------------------------------
 433  8A0D
 434  8A0D              ; Relojes y temporizaciones.
 435  8A0D
 436  8A0D 00           Contador_de_frames db 0
 437  8A0E 00           Contador_de_frames_2 db 0
 438  8A0F
 439  8A0F 04           Clock_explosion db 4
 440  8A10 14           Clock_Entidades_en_curso db 20
 441  8A11 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 442  8A12              ;														; Repite la oleada de entidades.
 443  8A12 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 444  8A13 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 445  8A14 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 446  8A15
 447  8A15 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 448  8A16 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 449  8A17 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 450  8A18
 451  8A18              ;---------------------------------------------------------------------------------------------------------------
 452  8A18
 453  8A18              ; Gestión de NIVELES.
 454  8A18
 455  8A18 00           Nivel db 0												; Nivel actual del juego.
 456  8A19 00 00        Puntero_indice_NIVELES defw 0
 457  8A1B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 458  8A1D              ; 														; _ que definen el NIVEL.
 459  8A1D              ; Y todo comienza aquí .....
 460  8A1D              ;
 461  8A1D              ; 	INICIO  *************************************************************************************************************************************************************************
 462  8A1D              ;
 463  8A1D              ;	5/1/24
 464  8A1D
 465  8A1D              START
 466  8A1D
 467  8A1D 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 468  8A20 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 469  8A22 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 470  8A24 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 471  8A26 F3           	DI
 472  8A27
 473  8A27              ;	ld a,%00000111
 474  8A27              ;	call Cls
 475  8A27 CD 2A 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 476  8A2A
 477  8A2A              ; INICIALIZACIÓN.
 478  8A2A
 479  8A2A              ;	Inicializa 1er Nivel.
 480  8A2A
 481  8A2A 21 6B 89     	ld hl,Indice_de_niveles
 482  8A2D 22 19 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 483  8A30 CD CB 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 484  8A33              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 485  8A33              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 486  8A33              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 487  8A33
 488  8A33              ;	Provisional, (para desarrollo).
 489  8A33
 490  8A33              	;-
 491  8A33              ;	ld hl,Numero_parcial_de_entidades
 492  8A33              ;	ld b,(hl)
 493  8A33              ;	inc b
 494  8A33              ;	dec b
 495  8A33              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 496  8A33
 497  8A33 CD 10 8E     4 call Inicia_Entidades
 498  8A36
 499  8A36 CD ED 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 500  8A39
 501  8A39              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 502  8A39              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 503  8A39              ; (Esto se dá cuando se inicia una nueva oleada).
 504  8A39
 505  8A39              ;	ld a,(Ctrl_1)
 506  8A39              ;	bit 3,a
 507  8A39              ;	jr nz,5F											; Loop
 508  8A39
 509  8A39              ; 	INICIA AMADEUS !!!!!
 510  8A39
 511  8A39              ;3 call Restore_Amadeus
 512  8A39              ;	call Inicia_Puntero_objeto
 513  8A39              ;	call Draw
 514  8A39
 515  8A39              ;	call Guarda_movimiento_masticado	;! Provisional
 516  8A39
 517  8A39              ;	call Guarda_foto_registros
 518  8A39              ;	call Guarda_datos_de_borrado_Amadeus
 519  8A39
 520  8A39              ;	ld de,Amadeus_db
 521  8A39              ;	call Store_Amadeus
 522  8A39
 523  8A39              ; 	INICIA DISPAROS !!!!!
 524  8A39
 525  8A39              ;	call Inicia_Puntero_Disparo_Entidades
 526  8A39              ;	call Inicia_Puntero_Disparo_Amadeus
 527  8A39
 528  8A39              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 529  8A39
 530  8A39              ;5 call Inicia_punteros_de_cajas
 531  8A39              ;	call Restore_entidad
 532  8A39
 533  8A39              ;	ld a,(Ctrl_1)
 534  8A39              ;	bit 3,a
 535  8A39              ;	jr z,6F
 536  8A39
 537  8A39              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 538  8A39
 539  8A39              ;	ld hl,Ctrl_1
 540  8A39              ;	res 3,(hl)
 541  8A39              ;	jr Main
 542  8A39
 543  8A39              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 544  8A39
 545  8A39 CD 39 8C     6 call Calcula_numero_de_malotes
 546  8A3C CD 28 8B     	call Genera_scanlines_masticados
 547  8A3F
 548  8A3F D9           	exx
 549  8A40 21 C7 89     	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 550  8A43 D9           	exx
 551  8A44
 552  8A44 21 FA 89     	ld hl,Ctrl_3
 553  8A47 CB C6        	set 0,(hl)											; Frame completo.
 554  8A49 FB           	ei
 555  8A4A 76           	halt
 556  8A4B
 557  8A4B              ; ------------------------------------
 558  8A4B
 559  8A4B              Main
 560  8A4B              ;
 561  8A4B              ;	11/12/23
 562  8A4B
 563  8A4B              ; Aparece nueva entidad ???
 564  8A4B
 565  8A4B              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 566  8A4B              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 567  8A4B              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 568  8A4B              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 569  8A4B              ;														; _un 2º bloque.
 570  8A4B
 571  8A4B CD 0F 8B     	call Genera_scanlines_masticados_a_borrar
 572  8A4E CD F2 8A     	call Limpia_Almacen_de_scanlines_masticados
 573  8A51 CD 17 81     	call Limpia_y_reinicia_Stack_Snapshot 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 574  8A54              ; 													 	; _(Stack_snapshot).
 575  8A54
 576  8A54 3A 10 8A     	ld a,(Clock_Entidades_en_curso)
 577  8A57 47           	ld b,a
 578  8A58 3A 0D 8A     	ld a,(Contador_de_frames)
 579  8A5B B8           	cp b
 580  8A5C 20 18        	jr nz,13F
 581  8A5E
 582  8A5E              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 583  8A5E              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 584  8A5E
 585  8A5E 3A E5 89     21 ld a,(Numero_parcial_de_entidades)
 586  8A61 47           	ld b,a
 587  8A62 3A E6 89     	ld a,(Entidades_en_curso)
 588  8A65 B8           	cp b
 589  8A66 28 0E        	jr z,13F
 590  8A68 30 0C        	jr nc,13F
 591  8A6A
 592  8A6A 3C           	inc a
 593  8A6B 32 E6 89     	ld (Entidades_en_curso),a
 594  8A6E
 595  8A6E              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 596  8A6E
 597  8A6E 3A 10 8A     	ld a,(Clock_Entidades_en_curso)
 598  8A71              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 599  8A71              ;! _ IMPREDECIBLE !!!!
 600  8A71 C6 64        	add 100
 601  8A73 32 10 8A     	ld (Clock_Entidades_en_curso),a
 602  8A76
 603  8A76              ; -------------------------------------------------------------------------------------------------------------
 604  8A76
 605  8A76              ; Habilita disparos.
 606  8A76
 607  8A76              13
 608  8A76
 609  8A76              ;	ld hl,Disparo_Amadeus
 610  8A76              ;	ld de,CLOCK_repone_disparo_Amadeus
 611  8A76              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 612  8A76
 613  8A76              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 614  8A76              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 615  8A76              ;	call Habilita_disparos
 616  8A76
 617  8A76              ; COLISIONES.
 618  8A76
 619  8A76              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 620  8A76
 621  8A76              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 622  8A76              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 623  8A76              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 624  8A76
 625  8A76              ;	xor a
 626  8A76              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 627  8A76
 628  8A76              ;	call Inicia_punteros_de_cajas
 629  8A76              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 630  8A76              ; 														; _ en DRAW.
 631  8A76
 632  8A76              ;	ld a,(Filas)
 633  8A76              ;	and a
 634  8A76              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 635  8A76              ;	call Incrementa_punteros_de_cajas
 636  8A76              ;	jr 12B
 637  8A76
 638  8A76              ; ---------------------------------------------------------------------------------------
 639  8A76
 640  8A76 3A E5 89     10 ld a,(Numero_parcial_de_entidades)
 641  8A79 47               ld b,a
 642  8A7A A7           	and a
 643  8A7B 20 00        	jr nz,11F
 644  8A7D
 645  8A7D              ;	ld hl,Ctrl_1;
 646  8A7D              ;	bit 4,(hl)
 647  8A7D              ;	jp nz,16F
 648  8A7D
 649  8A7D              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 650  8A7D
 651  8A7D              ;	ld hl,Ctrl_1
 652  8A7D              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 653  8A7D
 654  8A7D              ;	ld a,(Contador_de_frames)
 655  8A7D              ;	inc a
 656  8A7D              ;	ld (Activa_recarga_cajas),a
 657  8A7D
 658  8A7D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 659  8A7D
 660  8A7D 3A E6 89     11 ld a,(Entidades_en_curso)
 661  8A80 A7           	and a
 662  8A81 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 663  8A83 47           	ld b,a												; No hay entidades que gestionar.
 664  8A84
 665  8A84              ; ( Código que ejecutamos con cada entidad: ).
 666  8A84
 667  8A84              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 668  8A84
 669  8A84 C5           15 push bc 												; Nº de entidades en curso.
 670  8A85
 671  8A85 CD C0 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 672  8A88
 673  8A88 3A FA 89     	ld a,(Ctrl_3)
 674  8A8B CB 57        	bit 2,a
 675  8A8D F3           	di
 676  8A8E 20 FE        	jr nz,$
 677  8A90 FB           	ei
 678  8A91
 679  8A91              ; Existe "Entidad_guía" ???.
 680  8A91              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 681  8A91
 682  8A91              ;	ld a,(Ctrl_3)
 683  8A91              ;	bit 1,a
 684  8A91              ;	jr nz,22F
 685  8A91
 686  8A91              ; Almacén de "Movimientos_masticados" lleno ???
 687  8A91              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 688  8A91              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 689  8A91
 690  8A91              ;;	ld a,(Ctrl_3)
 691  8A91              ;;	bit 3,a
 692  8A91              ;;	jr nz,22F
 693  8A91
 694  8A91              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 695  8A91
 696  8A91              ;	ld hl,Ctrl_2
 697  8A91              ;	set 5,(hl)
 698  8A91              ;	ld hl,Ctrl_3
 699  8A91              ;	set 1,(hl)
 700  8A91
 701  8A91              ; Impacto ???
 702  8A91
 703  8A91              ;22 ld a,(Impacto)
 704  8A91              ;	and a
 705  8A91              ;	jr z,8F
 706  8A91
 707  8A91              ; Hay Impacto en esta entidad.
 708  8A91
 709  8A91              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 710  8A91              ;	dec (hl)
 711  8A91              ;	jp nz,17F
 712  8A91
 713  8A91              ;! Velocidad de la animación de la explosión.
 714  8A91
 715  8A91              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 716  8A91              ;														; _,(velocidad de la explosión).
 717  8A91              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 718  8A91
 719  8A91              ;	call Repone_datos_de_borrado
 720  8A91              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 721  8A91
 722  8A91              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 723  8A91
 724  8A91              ;	ld a,(Ctrl_2)
 725  8A91              ;	bit 1,a
 726  8A91              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 727  8A91
 728  8A91              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 729  8A91
 730  8A91              ;	ld a,(CTRL_DESPLZ)
 731  8A91              ;	and a
 732  8A91              ;	jr nz,18F
 733  8A91
 734  8A91              ;	ld hl,Indice_Explosion_2x2-2
 735  8A91              ;	ld (Puntero_DESPLZ_der),hl
 736  8A91              ;	jr 19F
 737  8A91
 738  8A91              ;18 ld hl,Indice_Explosion_2x3-2
 739  8A91              ;	ld (Puntero_DESPLZ_der),hl
 740  8A91
 741  8A91              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 742  8A91              ;	set 1,(hl)
 743  8A91              ;	jr 7F
 744  8A91
 745  8A91              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 746  8A91              ; _con las coordenadas de la entidad almacenada en DRAW.
 747  8A91
 748  8A91              ;8 ld a,(Ctrl_1)
 749  8A91              ;	bit 2,a
 750  8A91              ;	jr z,7F
 751  8A91
 752  8A91              ;	ld hl,(Coordenadas_disparo_certero)
 753  8A91              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 754  8A91              ;														; E contiene la coordenada_X del disparo.
 755  8A91              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 756  8A91              ;														; H FILA, (Coordenada_y de la entidad).
 757  8A91              ;	and a
 758  8A91              ;	sbc hl,de
 759  8A91
 760  8A91              ;	call Determina_resultado_comparativa
 761  8A91
 762  8A91              ;	ld a,b
 763  8A91              ;	and a
 764  8A91              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 765  8A91
 766  8A91              ; ----- ----- -----
 767  8A91
 768  8A91              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 769  8A91              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 770  8A91
 771  8A91              ;	ld hl,Ctrl_1
 772  8A91              ;	res 2,(hl)
 773  8A91
 774  8A91 CD B8 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 775  8A94
 776  8A94              ;	ld a,(Ctrl_0)
 777  8A94              ;	bit 4,a
 778  8A94              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 779  8A94
 780  8A94              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 781  8A94              ; [[[
 782  8A94              ;	call Detecta_disparo_entidad
 783  8A94              ; ]]]
 784  8A94
 785  8A94 CD 7A 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 786  8A97
 787  8A97              ;	ld hl,Ctrl_0
 788  8A97              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 789  8A97
 790  8A97 CD 6A 8E     17 call Store_Restore_cajas
 791  8A9A
 792  8A9A C1           	pop bc
 793  8A9B
 794  8A9B 10 E7        	djnz 15B
 795  8A9D
 796  8A9D CD ED 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 797  8AA0
 798  8AA0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 799  8AA0              ; Hemos gestionado todas las unidades.
 800  8AA0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 801  8AA0
 802  8AA0              ;	ld hl,Ctrl_1
 803  8AA0              ;	res 2,(hl)
 804  8AA0
 805  8AA0              16
 806  8AA0
 807  8AA0 CD 39 8C     	call Calcula_numero_de_malotes 						; Si el nº de malotes es "0" no generamos scanlines masticados.
 808  8AA3 CD 28 8B     	call Genera_scanlines_masticados
 809  8AA6
 810  8AA6 D9           	exx
 811  8AA7 21 C7 89     	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 812  8AAA D9           	exx
 813  8AAB
 814  8AAB 21 FA 89     	ld hl,Ctrl_3
 815  8AAE CB C6        	set 0,(hl)											; Frame completo.
 816  8AB0
 817  8AB0 AF           	xor a
 818  8AB1 D3 FE        	out ($fe),a
 819  8AB3 76           	halt
 820  8AB4
 821  8AB4              ; ----------------------------------------
 822  8AB4
 823  8AB4              ;	ld a,(Ctrl_1) 										; Existe Loop?
 824  8AB4              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 825  8AB4 CA 4B 8A     	jp z,Main
 826  8AB7
 827  8AB7              ; RECARGA DE NUEVA OLEADA.
 828  8AB7
 829  8AB7              ;	ld a,(Contador_de_frames)
 830  8AB7              ;	ld b,a
 831  8AB7              ;	ld a,(Activa_recarga_cajas)
 832  8AB7              ;	cp b
 833  8AB7              ;	jr z,20F
 834  8AB7
 835  8AB7              ;	ld hl,Ctrl_1
 836  8AB7              ;	set 4,(hl)
 837  8AB7              ;	jp Main
 838  8AB7
 839  8AB7              ;20 ld hl,Ctrl_1
 840  8AB7              ;	res 4,(hl)
 841  8AB7
 842  8AB7              ;	ld a,(Contador_de_frames)
 843  8AB7
 844  8AB7              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 845  8AB7              ;! _ IMPREDECIBLE !!!!
 846  8AB7
 847  8AB7              ;	add 10
 848  8AB7              ;	ld (Clock_Entidades_en_curso),a
 849  8AB7
 850  8AB7              ;	jp 4B
 851  8AB7
 852  8AB7 C9           	ret
 853  8AB8
 854  8AB8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 855  8AB8              ;
 856  8AB8              ;	16/11/23
 857  8AB8
 858  8AB8              ;;Gestiona_Amadeus
 859  8AB8
 860  8AB8              ;! Activa/desactiva impacto con Amadeus.
 861  8AB8
 862  8AB8              ;	ld a,(Impacto)
 863  8AB8              ;	and a
 864  8AB8              ;	jr nz,2F
 865  8AB8
 866  8AB8              ;;	call Mov_Amadeus
 867  8AB8
 868  8AB8              ;;2 ld a,(Ctrl_0)
 869  8AB8              ;;	bit 4,a
 870  8AB8              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 871  8AB8
 872  8AB8              ;;	call Guarda_foto_entidad_a_pintar
 873  8AB8              ;;	call Guarda_datos_de_borrado_Amadeus
 874  8AB8
 875  8AB8              ;;1 ld hl,Ctrl_0
 876  8AB8              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 877  8AB8
 878  8AB8              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 879  8AB8
 880  8AB8              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 881  8AB8
 882  8AB8              ;	call Calcula_numero_de_disparotes
 883  8AB8
 884  8AB8              ;;	ret
 885  8AB8
 886  8AB8              ; --------------------------------------------------------------------------------------------------------------
 887  8AB8              ;
 888  8AB8              ;	15/12/23
 889  8AB8
 890  8AB8              Mov_obj
 891  8AB8
 892  8AB8              ;	ld a,(Ctrl_2)
 893  8AB8              ;	bit 1,a
 894  8AB8              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 895  8AB8
 896  8AB8              ; Explosión:
 897  8AB8
 898  8AB8              ;	ld a,(Frames_explosion)
 899  8AB8              ;	and a
 900  8AB8              ;	jr nz,4F
 901  8AB8
 902  8AB8              ;!  Una alimaña menos!!!!!!!!!1
 903  8AB8
 904  8AB8              ; Se trataba de una Entidad_guía ???
 905  8AB8
 906  8AB8              ;	ld a,(Ctrl_2)
 907  8AB8              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 908  8AB8              ;	jr z,5F
 909  8AB8
 910  8AB8              ;	ld hl,Ctrl_3
 911  8AB8              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 912  8AB8
 913  8AB8              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 914  8AB8              ;!! _generado puede ser distinto, (aletoriedad).
 915  8AB8
 916  8AB8              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 917  8AB8              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 918  8AB8              ;	dec (hl)
 919  8AB8              ;	ld hl,Entidades_en_curso
 920  8AB8              ;	dec (hl)
 921  8AB8              ;	ld hl,Numero_de_entidades
 922  8AB8              ;	dec (hl)
 923  8AB8              ;	jr 3F
 924  8AB8
 925  8AB8              ; -----
 926  8AB8
 927  8AB8              ;	`Movemos´ la explosión.
 928  8AB8
 929  8AB8              ;4 ld hl,(Puntero_DESPLZ_der)
 930  8AB8              ;	inc hl
 931  8AB8              ;	inc hl
 932  8AB8              ;	call Extrae_address
 933  8AB8              ;;	ld (Puntero_objeto),hl
 934  8AB8
 935  8AB8              ;;	ld hl,Frames_explosion
 936  8AB8              ;;	dec (hl)
 937  8AB8
 938  8AB8              ;;	ld hl,Ctrl_0
 939  8AB8              ;;	set 4,(hl);;
 940  8AB8
 941  8AB8              ;;	jr 3F
 942  8AB8
 943  8AB8              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 944  8AB8
 945  8AB8              ;2 xor a
 946  8AB8              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 947  8AB8
 948  8AB8              ; Movemos Entidades malignas.
 949  8AB8              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 950  8AB8
 951  8AB8              ;	ld a,(Ctrl_2)
 952  8AB8              ;	bit 5,a
 953  8AB8              ;	jr nz,8F
 954  8AB8
 955  8AB8              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 956  8AB8              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 957  8AB8              ;	jr 7F
 958  8AB8
 959  8AB8              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 960  8AB8
 961  8AB8              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 962  8AB8              ;	bit 4,a
 963  8AB8              ;	ret z
 964  8AB8
 965  8AB8              ; Ha habido desplazamiento de la entidad maligna.
 966  8AB8              ; Ha llegado a zona de AMADEUS ???
 967  8AB8
 968  8AB8              ;7 ld a,(Coordenada_y)
 969  8AB8              ;	cp $14
 970  8AB8              ;	jr c,1F
 971  8AB8
 972  8AB8              ; ---------
 973  8AB8
 974  8AB8              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 975  8AB8              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 976  8AB8
 977  8AB8              ;	di
 978  8AB8              ;	call Genera_coordenadas_X
 979  8AB8              ;	call Compara_coordenadas_X
 980  8AB8              ;	ei
 981  8AB8
 982  8AB8              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 983  8AB8
 984  8AB8              ; ---------
 985  8AB8
 986  8AB8              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 987  8AB8              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 988  8AB8              ;	call Limpia_Variables_de_borrado
 989  8AB8
 990  8AB8 C9           3 ret
 991  8AB9
 992  8AB9              ; --------------------------------------------------------------------------------------------------------------
 993  8AB9              ;
 994  8AB9              ;	29/1/23
 995  8AB9
 996  8AB9              Mov_Amadeus
 997  8AB9
 998  8AB9              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 999  8AB9
1000  8AB9 CD E7 96     	call Mov_right
1001  8ABC
1002  8ABC 3A AE 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1003  8ABF CB 67        	bit 4,a
1004  8AC1 C8           	ret z
1005  8AC2
1006  8AC2              ; ---------
1007  8AC2
1008  8AC2              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1009  8AC2 CD 8E 8D     	call Repone_datos_de_borrado_Amadeus
1010  8AC5 CD 2B 8C     	call Limpia_Variables_de_borrado
1011  8AC8
1012  8AC8 C9           	ret
1013  8AC9
1014  8AC9              ; -----------------------------------------------------------------------------------
1015  8AC9              ;
1016  8AC9              ;	20/01/24
1017  8AC9              ;
1018  8AC9              ;
1019  8AC9
1020  8AC9              Construye_movimientos_masticados_entidad
1021  8AC9
1022  8AC9 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1023  8ACC E5           	push hl
1024  8ACD CD 8F 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1025  8AD0              ;															; _ el (Contador_de_mov_masticados).
1026  8AD0 CD 8B 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1027  8AD3              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1028  8AD3              ;	call Recompone_posicion_inicio
1029  8AD3
1030  8AD3 CD C1 8F     1 call Draw
1031  8AD6 CD 73 8B     	call Guarda_movimiento_masticado
1032  8AD9
1033  8AD9 CD BD 99     	call Movimiento
1034  8ADC
1035  8ADC 3A FA 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1036  8ADF CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1037  8AE1 28 F0        	jr z,1B
1038  8AE3
1039  8AE3              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1040  8AE3              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1041  8AE3
1042  8AE3 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1043  8AE4 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1044  8AE7
1045  8AE7              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1046  8AE7
1047  8AE7 CD 21 9B     	call Situa_en_contador_general_de_mov_masticados
1048  8AEA
1049  8AEA              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1050  8AEA              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1051  8AEA
1052  8AEA ED 4B AC 89  	ld bc,(Contador_de_mov_masticados)
1053  8AEE 71           	ld (hl),c
1054  8AEF 23           	inc hl
1055  8AF0 70           	ld (hl),b
1056  8AF1
1057  8AF1 C9           	ret
1058  8AF2
1059  8AF2              ; -----------------------------------------------------------------------------------
1060  8AF2              ;
1061  8AF2              ;	28/02/24
1062  8AF2              ;
1063  8AF2
1064  8AF2              Limpia_Almacen_de_scanlines_masticados
1065  8AF2
1066  8AF2 2A C1 89     	ld hl,(Puntero_de_scanlines_masticados)
1067  8AF5 01 00 E9     	ld bc,Almacen_de_scanlines_masticados
1068  8AF8 A7           	and a
1069  8AF9 ED 42        	sbc hl,bc
1070  8AFB C8           	ret z 												; Salimos. No hay scanlines masticados que copiar.
1071  8AFC
1072  8AFC E5           	push hl
1073  8AFD C1           	pop bc
1074  8AFE
1075  8AFE 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1076  8B01 11 01 E9     	ld de,Almacen_de_scanlines_masticados+1
1077  8B04
1078  8B04 AF           	xor a
1079  8B05 77           	ld (hl),a
1080  8B06
1081  8B06 ED B0        	ldir
1082  8B08
1083  8B08 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1084  8B0B 22 C1 89     	ld (Puntero_de_scanlines_masticados),hl
1085  8B0E
1086  8B0E C9           	ret
1087  8B0F
1088  8B0F              ; -----------------------------------------------------------------------------------
1089  8B0F              ;
1090  8B0F              ;	28/02/24
1091  8B0F              ;
1092  8B0F
1093  8B0F              Genera_scanlines_masticados_a_borrar
1094  8B0F
1095  8B0F 2A C1 89     	ld hl,(Puntero_de_scanlines_masticados)
1096  8B12 01 00 E9     	ld bc,Almacen_de_scanlines_masticados
1097  8B15 A7           	and a
1098  8B16 ED 42        	sbc hl,bc
1099  8B18 C8           	ret z 												; Salimos. No hay scanlines masticados que copiar.
1100  8B19
1101  8B19 E5           	push hl
1102  8B1A C1           	pop bc
1103  8B1B
1104  8B1B 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1105  8B1E 11 00 E8     	ld de,Almacen_de_scanlines_masticados_a_borrar
1106  8B21 ED B0        	ldir
1107  8B23
1108  8B23 ED 53 C3 89  	ld (Puntero_de_scanlines_masticados_a_borrar),de
1109  8B27
1110  8B27 C9           	ret
1111  8B28
1112  8B28              ; -----------------------------------------------------------------------------------
1113  8B28              ;
1114  8B28              ;	24/02/24
1115  8B28              ;
1116  8B28              ;	INPUTS: A Y B contienen (Numero_de_malotes).
1117  8B28
1118  8B28              Genera_scanlines_masticados
1119  8B28
1120  8B28 A7           	and a
1121  8B29 C8           	ret z 												; Salimos si no hay malotes que pintar.
1122  8B2A
1123  8B2A 2A C5 89     	ld hl,(Puntero_de_scanlines_en_album) 				; Dirección donde se encuentra el puntero de impresión.
1124  8B2D ED 5B C1 89  	ld de,(Puntero_de_scanlines_masticados)
1125  8B31
1126  8B31 C5           1 push bc
1127  8B32
1128  8B32 7E           	ld a,(hl)
1129  8B33 12           	ld (de),a
1130  8B34 73           	ld (hl),e
1131  8B35
1132  8B35 23           	inc hl
1133  8B36
1134  8B36 7E           	ld a,(hl)
1135  8B37 72           	ld (hl),d
1136  8B38 1C           	inc e
1137  8B39 12           	ld (de),a 											; 1er scanline, (Puntero_de_impresion) en el Almacén de scanlines masticados.
1138  8B3A              ;				                                        ; La dirección donde se encuentra el (Puntero_de_impresion) dentro del almacén de scanlines_masticados_
1139  8B3A              ; 														; _sustituye al (Puntero_de_impresion) dentro del Album_de_fotos.
1140  8B3A CD 4A 8B     	call Construimos_scanlines
1141  8B3D
1142  8B3D              ; Actualizamos (Puntero_de_scanlines_en_album). Nos situamos en el Puntero_de_impresion de la siguiente entidad.
1143  8B3D
1144  8B3D 01 05 00     	ld bc,5
1145  8B40 A7           	and a
1146  8B41 ED 4A        	adc hl,bc
1147  8B43 22 C5 89     	ld (Puntero_de_scanlines_en_album),hl
1148  8B46
1149  8B46 C1           	pop bc
1150  8B47
1151  8B47 10 E8        	djnz 1B
1152  8B49
1153  8B49 C9           	ret
1154  8B4A
1155  8B4A              ; --------------------------------------------------------
1156  8B4A
1157  8B4A E5           Construimos_scanlines push hl
1158  8B4B C5           	push bc
1159  8B4C
1160  8B4C 06 0F        	ld b,15
1161  8B4E 1B           	dec de
1162  8B4F
1163  8B4F 1A           	ld a,(de)
1164  8B50 6F           	ld l,a
1165  8B51 13           	inc de
1166  8B52 1A           	ld a,(de)
1167  8B53 67           	ld h,a 												; Puntero_de_impresión en HL.
1168  8B54
1169  8B54 13           	inc de
1170  8B55
1171  8B55 CD BA 92     1 call NextScan
1172  8B58
1173  8B58              ; Entramos en memoria de attr.???
1174  8B58
1175  8B58              ; Si es así, decrementamos H. (Repetimos el último scancline).
1176  8B58
1177  8B58 7C           	ld a,h
1178  8B59 FE 58        	cp $58
1179  8B5B 20 03        	jr nz,2F
1180  8B5D
1181  8B5D 21 00 00     	ld hl,0 											; Scanline NO IMPRIMIBLE, "0".
1182  8B60
1183  8B60 7D           2 ld a,l
1184  8B61 12           	ld (de),a
1185  8B62 13           	inc de
1186  8B63 7C           	ld a,h
1187  8B64 12           	ld (de),a
1188  8B65
1189  8B65 13           	inc de
1190  8B66
1191  8B66 24           	inc h
1192  8B67 25           	dec h
1193  8B68 28 02        	jr z,3F  											; No generamos más escanlines si hemos entrado en memoria de attr.
1194  8B6A
1195  8B6A 10 E9        	djnz 1B 											; 16 scanlines generados.
1196  8B6C
1197  8B6C ED 53 C1 89  3 ld (Puntero_de_scanlines_masticados),de 				; Actualizamos puntero.
1198  8B70
1199  8B70 C1           	pop bc
1200  8B71 E1           	pop hl
1201  8B72
1202  8B72 C9           	ret
1203  8B73
1204  8B73              ; -----------------------------------------------------------------------------------
1205  8B73              ;
1206  8B73              ;	28/12/23
1207  8B73              ;
1208  8B73              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1209  8B73              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1210  8B73
1211  8B73              Guarda_movimiento_masticado
1212  8B73
1213  8B73 ED 73 EC 89  	ld (Stack),sp
1214  8B77 ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1215  8B7B
1216  8B7B E5           	push hl
1217  8B7C DD E5            push ix
1218  8B7E FD E5            push iy
1219  8B80
1220  8B80 ED 7B EC 89      ld sp,(Stack)
1221  8B84
1222  8B84 2A AC 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1223  8B87 23           	inc hl
1224  8B88 22 AC 89     	ld (Contador_de_mov_masticados),hl
1225  8B8B
1226  8B8B CD 8F 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1227  8B8E              ;															; _ el (Contador_de_mov_masticados).
1228  8B8E C9               ret
1229  8B8F
1230  8B8F              ; --------------------------------------------------------------------------------------------------------------
1231  8B8F              ;
1232  8B8F              ;	12/1/24
1233  8B8F              ;
1234  8B8F              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1235  8B8F
1236  8B8F              Actualiza_Puntero_de_almacen_de_mov_masticados
1237  8B8F
1238  8B8F 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1239  8B92 01 06 00     	ld bc,6
1240  8B95 A7           	and a
1241  8B96 ED 4A        	adc hl,bc
1242  8B98 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1243  8B9B C9           	ret
1244  8B9C
1245  8B9C              ; --------------------------------------------------------------------------------------------------------------
1246  8B9C              ;
1247  8B9C              ;	15/01/24
1248  8B9C              ;
1249  8B9C              ;	Cargamos los registros_
1250  8B9C              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1251  8B9C              ;
1252  8B9C              ;	HL contiene la dirección de la rutina de impresión.
1253  8B9C              ;	IX contiene el puntero de impresión.
1254  8B9C              ;	IY contiene (Puntero_objeto).
1255  8B9C
1256  8B9C
1257  8B9C ED 73 EC 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1258  8BA0 ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1259  8BA4
1260  8BA4 FD E1        	pop iy
1261  8BA6 DD E1        	pop ix
1262  8BA8 E1           	pop hl
1263  8BA9
1264  8BA9 ED 73 AA 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1265  8BAD
1266  8BAD ED 7B EC 89  	ld sp,(Stack)
1267  8BB1
1268  8BB1 C9           	ret
1269  8BB2
1270  8BB2              ; --------------------------------------------------------------------------------------------------------------
1271  8BB2              ;
1272  8BB2              ;	28/12/23
1273  8BB2              ;
1274  8BB2              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1275  8BB2              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1276  8BB2
1277  8BB2              Guarda_foto_entidad_a_pintar
1278  8BB2
1279  8BB2 3A AE 89     	ld a,(Ctrl_0)
1280  8BB5 CB 77        	bit 6,a
1281  8BB7 28 04        	jr z,5F
1282  8BB9
1283  8BB9              ;	Guarda la foto de Amadeus.
1284  8BB9
1285  8BB9              ;	call Draw
1286  8BB9              ;	call Guarda_movimiento_masticado	;! Provisional
1287  8BB9 CD BF 80     	call Guarda_foto_registros
1288  8BBC C9           	ret
1289  8BBD
1290  8BBD              ; ENTIDADES!
1291  8BBD              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1292  8BBD
1293  8BBD 3A FA 89     5 ld a,(Ctrl_3)
1294  8BC0 CB 5F        	bit 3,a
1295  8BC2 28 01        	jr z,1F
1296  8BC4
1297  8BC4              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1298  8BC4
1299  8BC4              4
1300  8BC4              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1301  8BC4 C9           	ret
1302  8BC5
1303  8BC5              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1304  8BC5
1305  8BC5 3A FA 89     1 ld a,(Ctrl_3)
1306  8BC8 CB 57        	bit 2,a
1307  8BCA 20 10        	jr nz,6F
1308  8BCC
1309  8BCC              ; Entidad guía o fantasma ???
1310  8BCC
1311  8BCC 3A B3 89     	ld a,(Ctrl_2)
1312  8BCF CB 6F        	bit 5,a
1313  8BD1 20 10        	jr nz,3F
1314  8BD3
1315  8BD3              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1316  8BD3
1317  8BD3 18 EF        	jr 4B
1318  8BD5
1319  8BD5              ; ENTIDAD_GUÍA:
1320  8BD5              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1321  8BD5              ; _guardando "movimientos_masticados".
1322  8BD5
1323  8BD5 3A FA 89     2 ld a,(Ctrl_3)
1324  8BD8 CB 57        	bit 2,a
1325  8BDA 28 07        	jr z,3F
1326  8BDC
1327  8BDC              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1328  8BDC              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1329  8BDC
1330  8BDC CB 97        6 res 2,a
1331  8BDE CB DF        	set 3,a
1332  8BE0 32 FA 89     	ld (Ctrl_3),a
1333  8BE3
1334  8BE3
1335  8BE3              ;	Esto sólo lo ejecuta una entidad guía.
1336  8BE3
1337  8BE3 CD C1 8F     3 	call Draw
1338  8BE6 CD 73 8B     	call Guarda_movimiento_masticado
1339  8BE9 CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1340  8BEC
1341  8BEC              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1342  8BEC              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1343  8BEC
1344  8BEC              ;	call Convierte_guia_en_fantasma
1345  8BEC C9           	ret
1346  8BED
1347  8BED              ; *************************************************************************************************************************************************************
1348  8BED              ;
1349  8BED              ; 8/1/23
1350  8BED              ;
1351  8BED              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1352  8BED              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1353  8BED              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1354  8BED
1355  8BED              ; Destruye HL y DE !!!!!
1356  8BED
1357  8BED              Inicia_punteros_de_cajas
1358  8BED
1359  8BED 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1360  8BF0 CD 85 8C         call Extrae_address
1361  8BF3 22 DE 89         ld (Puntero_store_caja),hl
1362  8BF6 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1363  8BF9 22 E2 89     	ld (Indice_restore_caja),hl
1364  8BFC CD 85 8C     	call Extrae_address
1365  8BFF 22 E0 89     	ld (Puntero_restore_caja),hl
1366  8C02 C9               ret
1367  8C03
1368  8C03              ; *************************************************************************************************************************************************************
1369  8C03              ;
1370  8C03              ; 8/1/23
1371  8C03              ;
1372  8C03              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1373  8C03
1374  8C03 21 7C 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1375  8C06 22 FD 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1376  8C09 C9           	ret
1377  8C0A 21 64 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1378  8C0D 22 FF 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1379  8C10 C9           	ret
1380  8C11
1381  8C11              ; -------------------------------------------------------------------------------------------------------------
1382  8C11              ;
1383  8C11              ; 21/9/23
1384  8C11              ;
1385  8C11
1386  8C11              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1387  8C11
1388  8C11              Limpia_album_Amadeus
1389  8C11
1390  8C11 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1391  8C14 7E           	ld a,(hl)
1392  8C15 A7           	and a
1393  8C16 C8           	ret z
1394  8C17
1395  8C17 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1396  8C1A 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1397  8C1D 01 0B 00     	ld bc,11
1398  8C20 AF           	xor a
1399  8C21 77           	ld (hl),a
1400  8C22 ED B0        	ldir
1401  8C24
1402  8C24 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1403  8C27 22 F8 89     	ld (End_Snapshot_Amadeus),hl
1404  8C2A
1405  8C2A C9           	ret
1406  8C2B
1407  8C2B 21 A2 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1408  8C2E 11 A3 89     	ld de,Variables_de_borrado+1
1409  8C31 01 05 00     	ld bc,5
1410  8C34 AF           	xor a
1411  8C35 77           	ld (hl),a
1412  8C36 ED B0        	ldir
1413  8C38 C9           	ret
1414  8C39
1415  8C39              ; -------------------------------------------------------------------------------------------------------------
1416  8C39              ;
1417  8C39              ; 	21/02/24
1418  8C39              ;
1419  8C39              ;	MODIFICA: AF,HL,BC,DE
1420  8C39              ;
1421  8C39              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1422  8C39              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1423  8C39
1424  8C39              Calcula_numero_de_malotes
1425  8C39
1426  8C39 21 00 80     	ld hl,Album_de_fotos
1427  8C3C EB           	ex de,hl
1428  8C3D 2A F2 89     	ld hl,(Stack_snapshot)
1429  8C40
1430  8C40 06 00        	ld b,0
1431  8C42 7D           	ld a,l
1432  8C43 93           	sub e
1433  8C44 28 07        	jr z,1F
1434  8C46
1435  8C46              ; Nº de malotes no es "0".
1436  8C46
1437  8C46 D6 06        2 sub 6
1438  8C48 04           	inc b
1439  8C49 A7           	and a
1440  8C4A 20 FA        	jr nz,2B
1441  8C4C 78           	ld a,b
1442  8C4D
1443  8C4D 32 E7 89     1 ld (Numero_de_malotes),a
1444  8C50 C9           	ret
1445  8C51
1446  8C51              ; -------------------------------------------------------------------------------------------------------------
1447  8C51              ;
1448  8C51              ; 8/9/23
1449  8C51              ;
1450  8C51
1451  8C51              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1452  8C51              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1453  8C51
1454  8C51              Calcula_malotes_Amadeus
1455  8C51
1456  8C51 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1457  8C54 EB           	ex de,hl
1458  8C55 2A F8 89     	ld hl,(End_Snapshot_Amadeus)
1459  8C58
1460  8C58 7C           	ld a,h
1461  8C59 A7           	and a
1462  8C5A 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1463  8C5C
1464  8C5C 06 00        	ld b,0
1465  8C5E 7D           	ld a,l
1466  8C5F 93           	sub e
1467  8C60 28 07        	jr z,1F
1468  8C62
1469  8C62              ; Nº de malotes no es "0".
1470  8C62
1471  8C62 D6 06        2 sub 6
1472  8C64 04           	inc b
1473  8C65 A7           	and a
1474  8C66 20 FA        	jr nz,2B
1475  8C68 78           	ld a,b
1476  8C69
1477  8C69 32 E7 89     1 ld (Numero_de_malotes),a
1478  8C6C C9           	ret
1479  8C6D
1480  8C6D              ; -------------------------------------------------------------------------------------------------------------
1481  8C6D              ;
1482  8C6D              ; 28/2/23
1483  8C6D              ;
1484  8C6D
1485  8C6D              Calcula_numero_de_disparotes
1486  8C6D
1487  8C6D 21 56 80     	ld hl,Album_de_fotos_disparos
1488  8C70 EB           	ex de,hl
1489  8C71 2A F6 89     	ld hl,(End_Snapshot_disparos)
1490  8C74
1491  8C74 06 00        	ld b,0
1492  8C76 7D           	ld a,l
1493  8C77 93           	sub e
1494  8C78 28 07        	jr z,1F
1495  8C7A
1496  8C7A              ; Nº de malotes no es "0".
1497  8C7A
1498  8C7A D6 06        2 sub 6
1499  8C7C 04           	inc b
1500  8C7D A7           	and a
1501  8C7E 20 FA        	jr nz,2B
1502  8C80 78           	ld a,b
1503  8C81
1504  8C81 32 FC 89     1 ld (Numero_de_disparotes),a
1505  8C84 C9           	ret
1506  8C85
1507  8C85              ; *************************************************************************************************************************************************************
1508  8C85              ;
1509  8C85              ; 20/10/22
1510  8C85              ;
1511  8C85              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1512  8C85              ;
1513  8C85              ; Destruye el puntero y DE !!!!!
1514  8C85
1515  8C85 5E           Extrae_address ld e,(hl)
1516  8C86 23           	inc hl
1517  8C87 56           	ld d,(hl)
1518  8C88 2B           	dec hl
1519  8C89 EB           	ex de,hl
1520  8C8A C9           	ret
1521  8C8B
1522  8C8B              ; *************************************************************************************************************************************************************
1523  8C8B              ;
1524  8C8B              ;	20/1/24
1525  8C8B              ;
1526  8C8B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1527  8C8B              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1528  8C8B              ;
1529  8C8B              ;   Destruye HL y BC !!!!!,
1530  8C8B              ;
1531  8C8B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1532  8C8B              ;					"0" ..... Izquierda.
1533  8C8B
1534  8C8B              Inicia_Puntero_objeto
1535  8C8B
1536  8C8B 3A A0 89     	ld a,(Cuad_objeto)
1537  8C8E E6 01        	and 1
1538  8C90 F5           	push af
1539  8C91 CC AD 8C     	call z,Inicia_puntero_objeto_izq
1540  8C94 F1           	pop af
1541  8C95 C8           	ret z
1542  8C96 CD 9A 8C     	call Inicia_puntero_objeto_der
1543  8C99 C9           	ret
1544  8C9A
1545  8C9A              ; Arrancamos desde la parte izquierda de la pantalla.
1546  8C9A              ; Iniciamos (Indice_Sprite_der).
1547  8C9A
1548  8C9A 2A 96 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1549  8C9D 22 9A 89     	ld (Puntero_DESPLZ_der),hl
1550  8CA0 CD 85 8C     	call Extrae_address
1551  8CA3 22 90 89     	ld (Puntero_objeto),hl
1552  8CA6
1553  8CA6 2A 98 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1554  8CA9 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1555  8CAC C9           	ret
1556  8CAD
1557  8CAD              ; Arrancamos desde la parte derecha de la pantalla.
1558  8CAD              ; Iniciamos (Indice_Sprite_izq).
1559  8CAD
1560  8CAD 2A 98 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1561  8CB0 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1562  8CB3 CD 85 8C     	call Extrae_address
1563  8CB6 22 90 89     	ld (Puntero_objeto),hl
1564  8CB9
1565  8CB9 2A 96 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1566  8CBC 22 9A 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1567  8CBF C9           	ret
1568  8CC0
1569  8CC0              ; **************************************************************************************************
1570  8CC0              ;
1571  8CC0              ;	31/01/24
1572  8CC0              ;
1573  8CC0              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1574  8CC0
1575  8CC0              Restore_entidad
1576  8CC0
1577  8CC0 2A DE 89     	ld hl,(Puntero_store_caja)
1578  8CC3 11 8B 89     	ld de,Bandeja_DRAW
1579  8CC6 7E           	ld a,(hl)
1580  8CC7 12           	ld (de),a
1581  8CC8 23           	inc hl 											; (Tipo).
1582  8CC9
1583  8CC9 11 92 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1584  8CCC 01 02 00     	ld bc,2
1585  8CCF ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1586  8CD1
1587  8CD1 13           	inc de
1588  8CD2 7E           	ld a,(hl)
1589  8CD3 12           	ld (de),a 										; Transferimos (Attr).
1590  8CD4 23           	inc hl
1591  8CD5
1592  8CD5 11 A1 89     	ld de,Impacto
1593  8CD8
1594  8CD8 7E           	ld a,(hl)
1595  8CD9 12           	ld (de),a 										; Transferimos (Impacto).
1596  8CDA 23           	inc hl
1597  8CDB
1598  8CDB 13           	inc de
1599  8CDC
1600  8CDC 01 06 00     	ld bc,6
1601  8CDF ED B0        	ldir
1602  8CE1
1603  8CE1 01 07 00     	ld bc,7
1604  8CE4 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1605  8CE6              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1606  8CE6 11 B3 89     	ld de,Ctrl_2
1607  8CE9
1608  8CE9 7E           	ld a,(hl)
1609  8CEA 12           	ld (de),a 										; Transferimos (Ctrl_2).
1610  8CEB
1611  8CEB C9           	ret
1612  8CEC
1613  8CEC              ; **************************************************************************************************
1614  8CEC              ;
1615  8CEC              ;	08/05/23
1616  8CEC              ;
1617  8CEC              ;	Incrementamos los dos punteros de entidades. (+1).
1618  8CEC
1619  8CEC              Incrementa_punteros_de_cajas
1620  8CEC
1621  8CEC 2A E0 89     	ld hl,(Puntero_restore_caja)
1622  8CEF 22 DE 89     	ld (Puntero_store_caja),hl
1623  8CF2 2A E2 89     	ld hl,(Indice_restore_caja)
1624  8CF5 23           	inc hl
1625  8CF6 23           	inc hl
1626  8CF7 22 E2 89     	ld (Indice_restore_caja),hl
1627  8CFA CD 85 8C         call Extrae_address
1628  8CFD 22 E0 89         ld (Puntero_restore_caja),hl
1629  8D00 C9               ret
1630  8D01
1631  8D01              ; **************************************************************************************************
1632  8D01              ;
1633  8D01              ;	21/12/23
1634  8D01              ;
1635  8D01              ;	Restore_Amadeus
1636  8D01              ;
1637  8D01              ;	Cargamos en DRAW los parámetros de Amadeus.
1638  8D01              ;
1639  8D01
1640  8D01 E5           Restore_Amadeus	push hl
1641  8D02 D5           	push de
1642  8D03 C5            	push bc
1643  8D04 21 F6 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1644  8D07 11 8B 89     	ld de,Bandeja_DRAW
1645  8D0A 01 2A 00     	ld bc,42
1646  8D0D ED B0        	ldir
1647  8D0F C1           	pop bc
1648  8D10 D1           	pop de
1649  8D11 E1           	pop hl
1650  8D12 C9           	ret
1651  8D13
1652  8D13              ; *************************************************************************************************************************************************************
1653  8D13              ;
1654  8D13              ;	21/12/23
1655  8D13              ;
1656  8D13              ;	Store_Amadeus
1657  8D13              ;
1658  8D13              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1659  8D13              ;
1660  8D13              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1661  8D13              ;
1662  8D13              ;	DESTRUYE: HL y BC y DE.
1663  8D13
1664  8D13 21 8B 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1665  8D16 01 2A 00     	ld bc,42
1666  8D19 ED B0        	ldir
1667  8D1B C9           	ret
1668  8D1C
1669  8D1C              ; -----------------------------------------------------------
1670  8D1C              ;
1671  8D1C              ;	21/12/23
1672  8D1C              ;
1673  8D1C              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1674  8D1C              ;
1675  8D1C              ;	Destruye: HL,BC,DE,A
1676  8D1C
1677  8D1C 21 8B 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1678  8D1F 01 29 00     	ld bc,41
1679  8D22 AF           	xor a
1680  8D23 77           	ld (hl),a
1681  8D24 11 8C 89     	ld de,Bandeja_DRAW+1
1682  8D27 ED B0        	ldir
1683  8D29 C9           	ret
1684  8D2A
1685  8D2A              ; -----------------------------------------------------------
1686  8D2A
1687  8D2A              ; Teclado.
1688  8D2A
1689  8D2A 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1690  8D2C DB FE        	in a,($fe)
1691  8D2E E6 01        	and $01
1692  8D30 28 02        	jr z,1f
1693  8D32 18 F6        	jr Pulsa_ENTER
1694  8D34 C9           1 ret
1695  8D35
1696  8D35              ; **************************************************************************************************
1697  8D35              ;
1698  8D35              ; Temporización.
1699  8D35
1700  8D35              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1701  8D35              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1702  8D35              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1703  8D35              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1704  8D35
1705  8D35              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1706  8D35              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1707  8D35              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1708  8D35
1709  8D35              ; A partir de $4f61 no hace falta DELAY.
1710  8D35
1711  8D35              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1712  8D35
1713  8D35 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1714  8D38 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1715  8D39 78           	LD A,B
1716  8D3A A7           	AND A
1717  8D3B 20 FB        	JR NZ,wait
1718  8D3D C9           	RET
1719  8D3E
1720  8D3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1721  8D3E              ;
1722  8D3E              ;	5/3/23
1723  8D3E              ;
1724  8D3E              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1725  8D3E
1726  8D3E              Movimiento_Amadeus
1727  8D3E
1728  8D3E              ; Disparo.
1729  8D3E
1730  8D3E 3A 12 8A     	ld a,(Disparo_Amadeus)
1731  8D41 A7           	and a
1732  8D42 20 02        	jr nz,1F
1733  8D44 18 15        	jr 2F
1734  8D46
1735  8D46 3E F7        1 ld a,$f7													; "5" para disparar.
1736  8D48 DB FE        	in a,($fe)
1737  8D4A E6 10        	and $10
1738  8D4C
1739  8D4C F5           	push af
1740  8D4D CC 37 9B     	call z,Genera_disparo
1741  8D50 F1           	pop af
1742  8D51 20 08        	jr nz,2F
1743  8D53
1744  8D53 3A 12 8A     	ld a,(Disparo_Amadeus)
1745  8D56 EE 01        	xor 1
1746  8D58 32 12 8A     	ld (Disparo_Amadeus),a
1747  8D5B 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1748  8D5D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1749  8D5F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1750  8D61 CC 0A 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1751  8D64
1752  8D64 3E F7        	ld a,$f7
1753  8D66 DB FE        	in a,($fe)
1754  8D68 E6 01        	and $01
1755  8D6A C8           	ret z
1756  8D6B
1757  8D6B 3E F7        	ld a,$f7
1758  8D6D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1759  8D6F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1760  8D71 CC E7 96     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1761  8D74 C9           	ret
1762  8D75
1763  8D75              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1764  8D75              ;
1765  8D75              ;	Rutina provisional para que los malotes cagen balas.
1766  8D75
1767  8D75              Detecta_disparo_entidad
1768  8D75
1769  8D75 3A 15 8A     	ld a,(Disparo_entidad)
1770  8D78 A7           	and a
1771  8D79 C8           	ret z
1772  8D7A
1773  8D7A              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1774  8D7A
1775  8D7A              ;	ld a,$7f				; Detecta SPACE.
1776  8D7A              ;	in a,($fe)
1777  8D7A              ;	and 1
1778  8D7A              ;	ret nz
1779  8D7A
1780  8D7A CD 37 9B     	call Genera_disparo
1781  8D7D C9           	ret
1782  8D7E
1783  8D7E              ; ----------------------------------------------------------------------
1784  8D7E              ;
1785  8D7E              ;	8/9/23
1786  8D7E
1787  8D7E 2A F8 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1788  8D81 2B            	dec hl
1789  8D82 7E           	ld a,(hl)
1790  8D83 A7           	and a
1791  8D84 C8           	ret z										; Salimos si es álbum está vacío.
1792  8D85
1793  8D85 11 A7 89     	ld de,Variables_de_borrado+5
1794  8D88 01 06 00     	ld bc,6
1795  8D8B ED B8        	lddr
1796  8D8D C9           	ret
1797  8D8E
1798  8D8E              ; ----------------------------------------------------------------------
1799  8D8E              ;
1800  8D8E              ;	9/9/23
1801  8D8E
1802  8D8E              Repone_datos_de_borrado_Amadeus
1803  8D8E
1804  8D8E 21 A2 89     	ld hl,Variables_de_borrado
1805  8D91 11 AC 80     	ld de,Album_de_fotos_Amadeus
1806  8D94 01 06 00     	ld bc,6
1807  8D97 ED B0        	ldir
1808  8D99
1809  8D99 EB           	ex de,hl
1810  8D9A 22 F8 89     	ld (End_Snapshot_Amadeus),hl
1811  8D9D
1812  8D9D C9           	ret
1813  8D9E
1814  8D9E              ; ----------------------------------------------------------------------
1815  8D9E              ;
1816  8D9E              ;	27/10/23
1817  8D9E              ;
1818  8D9E
1819  8D9E              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1820  8D9E              ;	_ Album_de_fotos correspondiente.
1821  8D9E
1822  8D9E              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1823  8D9E              ;	_ durante el proceso de escritura.
1824  8D9E
1825  8D9E              Repone_datos_de_borrado
1826  8D9E
1827  8D9E ED 5B F2 89  	ld de,(Stack_snapshot)
1828  8DA2 21 A2 89     	ld hl,Variables_de_borrado
1829  8DA5 01 06 00     	ld bc,6
1830  8DA8 ED B0        	ldir
1831  8DAA
1832  8DAA EB           	ex de,hl
1833  8DAB 22 F2 89     	ld (Stack_snapshot),hl
1834  8DAE
1835  8DAE C9           	ret
1836  8DAF
1837  8DAF              ; --------------------------------------------------------------------------------------
1838  8DAF
1839  8DAF              Pinta_Amadeus
1840  8DAF
1841  8DAF CD 51 8C        	call Calcula_malotes_Amadeus
1842  8DB2 CD 5A 93     	call Extrae_foto_Amadeus
1843  8DB5 CD 11 8C     	call Limpia_album_Amadeus
1844  8DB8
1845  8DB8 C9           	ret
1846  8DB9
1847  8DB9              ; -----------------------------------------------------------------------------------
1848  8DB9              ;
1849  8DB9              ;	10/12/23
1850  8DB9              ;
1851  8DB9              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1852  8DB9
1853  8DB9              Actualiza_relojes
1854  8DB9
1855  8DB9 3A FA 89     	ld a,(Ctrl_3)
1856  8DBC CB 47        	bit 0,a
1857  8DBE C8           	ret z 						;	Salimos si no hemos pintado unidades.
1858  8DBF
1859  8DBF 21 0D 8A     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1860  8DC2 34           	inc (hl)
1861  8DC3
1862  8DC3 34           	inc (hl)
1863  8DC4 35           	dec (hl)
1864  8DC5 C0           	ret nz
1865  8DC6
1866  8DC6 21 0E 8A     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1867  8DC9 34           	inc (hl)
1868  8DCA C9           	ret
1869  8DCB
1870  8DCB              ; ---------------------------------------------------------------
1871  8DCB
1872  8DCB              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8DCB              ;---------------------------------------------------------------------------------------------------------------
   2+ 8DCB              ;
   3+ 8DCB              ;   19/1/24
   4+ 8DCB              ;
   5+ 8DCB              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8DCB              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8DCB              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8DCB              ;	_ de la 1ª entidad del Nivel.
   9+ 8DCB              ;
  10+ 8DCB              ;	MODIFICA: HL,DE y A.
  11+ 8DCB              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8DCB
  13+ 8DCB              Inicializa_Nivel
  14+ 8DCB
  15+ 8DCB 2A 19 8A     	ld hl,(Puntero_indice_NIVELES)
  16+ 8DCE CD 85 8C     	call Extrae_address
  17+ 8DD1 7E           	ld a,(hl)
  18+ 8DD2 32 E4 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8DD5 23           	inc hl
  20+ 8DD6 CD E3 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8DD9 22 1B 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8DDC CD EC 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8DDF              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8DDF CD FD 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8DE2 C9           	ret
  26+ 8DE3
  27+ 8DE3              ; ----------------------
  28+ 8DE3
  29+ 8DE3 11 B5 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8DE6 01 04 00     	ld bc,4
  31+ 8DE9 ED B0        	ldir
  32+ 8DEB C9           	ret
  33+ 8DEC
  34+ 8DEC 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8DED CD 3D 8F         call Calcula_salto_en_BC
  36+ 8DF0 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8DF3 A7               and a
  38+ 8DF4 ED 4A            adc hl,bc
  39+ 8DF6 CD 85 8C         call Extrae_address
  40+ 8DF9 22 CF 89         ld (Puntero_indice_mov),hl
  41+ 8DFC C9               ret
  42+ 8DFD
  43+ 8DFD 3A 8B 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8E00 CD 3D 8F     	call Calcula_salto_en_BC
  45+ 8E03 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8E06 A7               and a
  47+ 8E07 ED 4A            adc hl,bc
  48+ 8E09 CD 85 8C         call Extrae_address
  49+ 8E0C 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8E0F C9           	ret
  51+ 8E10
  52+ 8E10              ;---------------------------------------------------------------------------------------------------------------
  53+ 8E10              ;
  54+ 8E10              ;   5/1/24
  55+ 8E10              ;
  56+ 8E10              ;	Destruye A,BC,HL,DE
  57+ 8E10
  58+ 8E10              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8E10              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8E10
  61+ 8E10              Inicia_Entidades
  62+ 8E10
  63+ 8E10              ; Preparamos los punteros de las cajas de entidades:
  64+ 8E10
  65+ 8E10 CD ED 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8E13              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8E13 CD A4 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8E16
  69+ 8E16 2A 1B 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8E19
  71+ 8E19 22 1B 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8E1C
  73+ 8E1C CD EB 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8E1F
  75+ 8E1F 2A 1B 8A     	ld hl,(Datos_de_nivel)
  76+ 8E22
  77+ 8E22              ; En este punto:
  78+ 8E22              ;
  79+ 8E22              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8E22              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8E22
  82+ 8E22 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8E23
  84+ 8E23 7E           	ld a,(hl)
  85+ 8E24 CD 60 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8E27
  87+ 8E27 CD 4F 8F     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8E2A
  89+ 8E2A              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8E2A
  91+ 8E2A CD 0D 8F     	call Busca_mov_masticados_segun_tipo
  92+ 8E2D
  93+ 8E2D A7           	and a
  94+ 8E2E 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8E30
  96+ 8E30              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8E30
  98+ 8E30              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8E30              ;	_ de este tipo de entidad.
 100+ 8E30
 101+ 8E30 CD 21 9B     	call Situa_en_contador_general_de_mov_masticados
 102+ 8E33 CD 2E 9B     	call Transfiere_datos_de_contadores
 103+ 8E36
 104+ 8E36 18 06        	jr 4F
 105+ 8E38
 106+ 8E38 CD C9 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8E3B
 108+ 8E3B              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8E3B              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8E3B              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8E3B              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8E3B              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8E3B
 114+ 8E3B CD CB 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8E3E              ;																; _ Mov_masticados ya generados.
 116+ 8E3E CD 7A 8E     4 call Guarda_foto_de_mov_masticado
 117+ 8E41
 118+ 8E41              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8E41
 120+ 8E41 2A A8 89     	ld hl,(Puntero_de_impresion)
 121+ 8E44 CD 38 A0     	call Genera_coordenadas
 122+ 8E47 CD 76 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8E4A CD 84 8E     	call Limpiamos_bandeja_DRAW
 124+ 8E4D CD EC 8C     	call Incrementa_punteros_de_cajas
 125+ 8E50
 126+ 8E50              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8E50              ; _ entidad del Nivel.
 128+ 8E50
 129+ 8E50 3A FB 89     	ld a,(Ctrl_4)
 130+ 8E53 E6 F0        	and $f0
 131+ 8E55 32 FB 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8E58
 133+ 8E58              ; Siguiente entidad del Nivel.
 134+ 8E58
 135+ 8E58 2A 1B 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8E5B 23           	inc hl 														; _ entidad del Nivel.
 137+ 8E5C
 138+ 8E5C C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8E5D
 140+ 8E5D 10 BA        	djnz 2B
 141+ 8E5F
 142+ 8E5F C9           	ret
 143+ 8E60
 144+ 8E60              ; ---------------------------------------------------------------------
 145+ 8E60              ;
 146+ 8E60              ;	10/02/24
 147+ 8E60              ;
 148+ 8E60              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8E60              ;
 150+ 8E60              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8E60
 152+ 8E60              Definicion_segun_tipo
 153+ 8E60
 154+ 8E60 CD 3D 8F     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8E63 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8E66 CD 45 8F     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8E69 C9           	ret
 158+ 8E6A
 159+ 8E6A              ; ---------------------------------------------------------------------
 160+ 8E6A              ;
 161+ 8E6A              ;	30/01/24
 162+ 8E6A
 163+ 8E6A
 164+ 8E6A              Store_Restore_cajas
 165+ 8E6A
 166+ 8E6A              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8E6A
 168+ 8E6A 2A A8 89     	ld hl,(Puntero_de_impresion)
 169+ 8E6D CD 38 A0     	call Genera_coordenadas
 170+ 8E70
 171+ 8E70 CD 76 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8E73 CD 84 8E     	call Limpiamos_bandeja_DRAW
 173+ 8E76
 174+ 8E76              ; 	Entidad_sospechosa. 20/4/23
 175+ 8E76
 176+ 8E76              ;	ld a,(Impacto)
 177+ 8E76              ;	and a
 178+ 8E76              ;	jr z,1F
 179+ 8E76
 180+ 8E76              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8E76              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8E76              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8E76              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8E76              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8E76
 186+ 8E76
 187+ 8E76              ;1 ld hl,(Puntero_restore_caja)
 188+ 8E76              ;	ld a,(hl)
 189+ 8E76              ;	and a
 190+ 8E76              ;	push af
 191+ 8E76              ;	jr z,2F
 192+ 8E76
 193+ 8E76              ;	di
 194+ 8E76              ;	ld de,Bandeja_DRAW
 195+ 8E76              ;	ld bc,42
 196+ 8E76              ;	ldir
 197+ 8E76              ;	ei
 198+ 8E76
 199+ 8E76 CD EC 8C     2 call Incrementa_punteros_de_cajas
 200+ 8E79 C9           	ret
 201+ 8E7A
 202+ 8E7A
 203+ 8E7A              ; ---------------------------------------------------------------------
 204+ 8E7A              ;
 205+ 8E7A              ;	29/01/24
 206+ 8E7A
 207+ 8E7A              Guarda_foto_de_mov_masticado
 208+ 8E7A
 209+ 8E7A CD 9C 8B     	call Cargamos_registros_con_mov_masticado
 210+ 8E7D CD BF 80     	call Guarda_foto_registros
 211+ 8E80              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 212+ 8E80              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 213+ 8E80              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 214+ 8E80              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 8E80
 216+ 8E80 CD 8F 8E     	call Decrementa_Contador_de_mov_masticados
 217+ 8E83 C9           	ret
 218+ 8E84
 219+ 8E84              ; ---------------------------------------------------------------------
 220+ 8E84              ;
 221+ 8E84              ;	25/01/24
 222+ 8E84
 223+ 8E84 21 8B 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 224+ 8E87 06 2A        	ld b,42
 225+ 8E89 AF           	xor a
 226+ 8E8A
 227+ 8E8A 77           1 ld (hl),a
 228+ 8E8B 23           	inc hl
 229+ 8E8C 10 FC        	djnz 1B
 230+ 8E8E
 231+ 8E8E C9           	ret
 232+ 8E8F
 233+ 8E8F              ; ---------------------------------------------------------------------
 234+ 8E8F              ;
 235+ 8E8F              ;	22/01/24
 236+ 8E8F
 237+ 8E8F 2A AC 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 238+ 8E92 2B           	dec hl
 239+ 8E93
 240+ 8E93 24           	inc h
 241+ 8E94 25           	dec h
 242+ 8E95
 243+ 8E95 FC 9C 8E     	call m,Reinicia_entidad_maliciosa
 244+ 8E98
 245+ 8E98              ;	jr nz,1F
 246+ 8E98
 247+ 8E98              ;	inc l
 248+ 8E98              ;	dec l
 249+ 8E98
 250+ 8E98              ;	di
 251+ 8E98              ;	jr z,$
 252+ 8E98              ;	ei
 253+ 8E98
 254+ 8E98 22 AC 89     1 ld (Contador_de_mov_masticados),hl
 255+ 8E9B C9           	ret
 256+ 8E9C
 257+ 8E9C              ; ---------------------------------------------------------------------
 258+ 8E9C              ;
 259+ 8E9C              ;	10/2/24
 260+ 8E9C
 261+ 8E9C              Reinicia_entidad_maliciosa
 262+ 8E9C
 263+ 8E9C              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 264+ 8E9C
 265+ 8E9C CD 21 9B     	call Situa_en_contador_general_de_mov_masticados
 266+ 8E9F CD 2E 9B     	call Transfiere_datos_de_contadores
 267+ 8EA2
 268+ 8EA2              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 269+ 8EA2
 270+ 8EA2 3A 8B 89     	ld a,(Tipo)
 271+ 8EA5 CD 60 8E     	call Definicion_segun_tipo
 272+ 8EA8
 273+ 8EA8 E5           	push hl
 274+ 8EA9 DD E1        	pop ix
 275+ 8EAB
 276+ 8EAB DD 6E 0B     	ld l,(ix+11)
 277+ 8EAE DD 66 0C     	ld h,(ix+12)
 278+ 8EB1
 279+ 8EB1 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 280+ 8EB4
 281+ 8EB4              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 282+ 8EB4              ;	Queremos pintar la entidad en su posición de inicio.
 283+ 8EB4
 284+ 8EB4 2A F2 89     	ld hl,(Stack_snapshot)
 285+ 8EB7 01 06 00     	ld bc,6
 286+ 8EBA A7           	and a
 287+ 8EBB ED 42        	sbc hl,bc
 288+ 8EBD 22 F2 89     	ld (Stack_snapshot),hl
 289+ 8EC0
 290+ 8EC0 CD 9C 8B     	call Cargamos_registros_con_mov_masticado
 291+ 8EC3 CD BF 80     	call Guarda_foto_registros
 292+ 8EC6
 293+ 8EC6 2A AC 89     	ld hl,(Contador_de_mov_masticados)
 294+ 8EC9 2B           	dec hl
 295+ 8ECA
 296+ 8ECA C9           	ret
 297+ 8ECB
 298+ 8ECB
 299+ 8ECB
 300+ 8ECB
 301+ 8ECB              ; ---------------------------------------------------------------------
 302+ 8ECB              ;
 303+ 8ECB              ;	22/01/24
 304+ 8ECB
 305+ 8ECB 21 FB 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 306+ 8ECE CB 46        	bit 0,(hl)
 307+ 8ED0 20 0D        	jr nz,1F
 308+ 8ED2 CB 4E        	bit 1,(hl)
 309+ 8ED4 20 0C        	jr nz,2F
 310+ 8ED6 CB 56        	bit 2,(hl)
 311+ 8ED8 20 0B        	jr nz,3F
 312+ 8EDA CB 5E        	bit 3,(hl)
 313+ 8EDC 20 0A        	jr nz,4F
 314+ 8EDE C9           	ret
 315+ 8EDF
 316+ 8EDF CB E6        1 set 4,(hl)
 317+ 8EE1 C9           	ret
 318+ 8EE2 CB EE        2 set 5,(hl)
 319+ 8EE4 C9           	ret
 320+ 8EE5 CB F6        3 set 6,(hl)
 321+ 8EE7 C9           	ret
 322+ 8EE8 CB FE        4 set 7,(hl)
 323+ 8EEA C9           	ret
 324+ 8EEB
 325+ 8EEB              ; ---------------------------------------------------------------------
 326+ 8EEB              ;
 327+ 8EEB              ;	23/01/24
 328+ 8EEB              ;
 329+ 8EEB              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 330+ 8EEB              ;
 331+ 8EEB              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 332+ 8EEB              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 333+ 8EEB              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 334+ 8EEB              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 335+ 8EEB
 336+ 8EEB              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 337+ 8EEB
 338+ 8EEB 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 339+ 8EEC 3D           	dec a
 340+ 8EED 20 06        	jr nz,1F
 341+ 8EEF
 342+ 8EEF              ; --- Tipo_1
 343+ 8EEF
 344+ 8EEF 21 FB 89     	ld hl,Ctrl_4
 345+ 8EF2 CB C6        	set 0,(hl)
 346+ 8EF4 C9           	ret
 347+ 8EF5
 348+ 8EF5 3D           1 dec a
 349+ 8EF6 20 06        	jr nz,2F
 350+ 8EF8
 351+ 8EF8              ; --- Tipo_2
 352+ 8EF8
 353+ 8EF8 21 FB 89     	ld hl,Ctrl_4
 354+ 8EFB CB CE        	set 1,(hl)
 355+ 8EFD C9           	ret
 356+ 8EFE
 357+ 8EFE 3D           2 dec a
 358+ 8EFF 20 06        	jr nz,3F
 359+ 8F01
 360+ 8F01              ; --- Tipo_3
 361+ 8F01
 362+ 8F01 21 FB 89     	ld hl,Ctrl_4
 363+ 8F04 CB D6        	set 2,(hl)
 364+ 8F06 C9           	ret
 365+ 8F07
 366+ 8F07              ; --- Tipo_3
 367+ 8F07
 368+ 8F07 21 FB 89     3 ld hl,Ctrl_4
 369+ 8F0A CB D6        	set 2,(hl)
 370+ 8F0C C9           	ret
 371+ 8F0D
 372+ 8F0D              ; ---------------------------------------------------------------------
 373+ 8F0D              ;
 374+ 8F0D              ;	22/01/24
 375+ 8F0D
 376+ 8F0D 21 FB 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 377+ 8F10 CB 46        	bit 0,(hl)
 378+ 8F12 20 0E        	jr nz,1F
 379+ 8F14
 380+ 8F14 CB 4E        	bit 1,(hl)
 381+ 8F16 20 10        	jr nz,2F
 382+ 8F18
 383+ 8F18 CB 56        	bit 2,(hl)
 384+ 8F1A 20 12        	jr nz,3F
 385+ 8F1C
 386+ 8F1C CB 5E        	bit 3,(hl)
 387+ 8F1E 20 14        	jr nz,4F
 388+ 8F20 18 19        	jr 6F
 389+ 8F22
 390+ 8F22              ; Entidad_de_Tipo_1.
 391+ 8F22
 392+ 8F22 CB 66        1 bit 4,(hl)
 393+ 8F24 28 15        	jr z,6F
 394+ 8F26 18 10        	jr 5F
 395+ 8F28
 396+ 8F28              ; Entidad_de_Tipo_2.
 397+ 8F28
 398+ 8F28 CB 6E        2 bit 5,(hl)
 399+ 8F2A 28 0F        	jr z,6F
 400+ 8F2C 18 0A        	jr 5F
 401+ 8F2E
 402+ 8F2E              ; Entidad_de_Tipo_3.
 403+ 8F2E
 404+ 8F2E CB 76        3 bit 6,(hl)
 405+ 8F30 28 09        	jr z,6F
 406+ 8F32 18 04        	jr 5F
 407+ 8F34
 408+ 8F34              ; Entidad_de_Tipo_4.
 409+ 8F34
 410+ 8F34 CB 7E        4 bit 7,(hl)
 411+ 8F36 28 03        	jr z,6F
 412+ 8F38
 413+ 8F38              ; Esta entidad TIENE MOV_MASTICADOS.
 414+ 8F38
 415+ 8F38 AF           5 xor a
 416+ 8F39 3C           	inc a
 417+ 8F3A C9           	ret
 418+ 8F3B
 419+ 8F3B              ; Esta entidad NO TIENE MOV_MASTICADOS.
 420+ 8F3B
 421+ 8F3B AF           6 xor a
 422+ 8F3C C9           	ret
 423+ 8F3D
 424+ 8F3D              ;	------------------------------------------------------------------------------------
 425+ 8F3D              ;
 426+ 8F3D              ;	12/01/24
 427+ 8F3D              ;
 428+ 8F3D              ;	INPUTS:	A contiene el (Tipo) de entidad.
 429+ 8F3D              ;
 430+ 8F3D              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 431+ 8F3D              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 432+ 8F3D
 433+ 8F3D CB 27        Calcula_salto_en_BC sla a
 434+ 8F3F D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 435+ 8F41 4F           	ld c,a
 436+ 8F42 06 00        	ld b,0
 437+ 8F44 C9           	ret
 438+ 8F45
 439+ 8F45              ; ------------------------------------------------------------------
 440+ 8F45              ;
 441+ 8F45              ;	19/1/24
 442+ 8F45              ;
 443+ 8F45              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 444+ 8F45              ;	Actualiza (Datos_de_entidad) con esa dirección.
 445+ 8F45
 446+ 8F45 A7           Situa_en_datos_de_definicion and a
 447+ 8F46 ED 4A        	adc hl,bc
 448+ 8F48 CD 85 8C     	call Extrae_address
 449+ 8F4B 22 EA 89         ld (Datos_de_entidad),hl
 450+ 8F4E C9           	ret
 451+ 8F4F
 452+ 8F4F              ; ------------------------------------------------------------------
 453+ 8F4F
 454+ 8F4F              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 455+ 8F4F              ; 	inc de
 456+ 8F4F              ; 	inc de
 457+ 8F4F              ; 	ex de,hl
 458+ 8F4F              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 459+ 8F4F              ; 	ret
 460+ 8F4F
 461+ 8F4F              ; ----------------------------------------------------------------------------------------------------------
 462+ 8F4F              ;
 463+ 8F4F              ;	31/1/24
 464+ 8F4F              ;
 465+ 8F4F              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 466+ 8F4F              ;	_ de entidad.
 467+ 8F4F              ;
 468+ 8F4F              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 469+ 8F4F              ;
 470+ 8F4F              ;
 471+ 8F4F              ;	MODIFICA: HL,DE y BC
 472+ 8F4F
 473+ 8F4F
 474+ 8F4F              Definicion_de_entidad_a_bandeja_DRAW
 475+ 8F4F
 476+ 8F4F 11 8B 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 477+ 8F52 01 03 00     	ld bc,3
 478+ 8F55 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 479+ 8F57              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 480+ 8F57 11 95 89     	ld de,Attr									; DE en (Attr).
 481+ 8F5A 01 05 00     	ld bc,5
 482+ 8F5D ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 483+ 8F5F              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 484+ 8F5F 11 9E 89     	ld de,Posicion_inicio
 485+ 8F62 01 03 00     	ld bc,3
 486+ 8F65 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 487+ 8F67              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 488+ 8F67 11 AA 89     	ld de,Puntero_de_almacen_de_mov_masticados
 489+ 8F6A 01 02 00     	ld bc,2
 490+ 8F6D ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 491+ 8F6F
 492+ 8F6F 11 B4 89     	ld de,Frames_explosion
 493+ 8F72 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 494+ 8F74 12           	ld (de),a 									; Vuelco (Frames_explosion).
 495+ 8F75
 496+ 8F75 C9           	ret
 497+ 8F76
 498+ 8F76              ; ----------------------------------------------------------------------------------------------------------
 499+ 8F76              ;
 500+ 8F76              ;	22/01/24
 501+ 8F76              ;
 502+ 8F76              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 503+ 8F76              ;
 504+ 8F76              ;	Las cajas contienen entidades iniciadas:
 505+ 8F76              ;
 506+ 8F76              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 507+ 8F76              ;
 508+ 8F76              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 509+ 8F76              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 510+ 8F76              ;
 511+ 8F76              ;	MODIFICA: HL,DE y BC
 512+ 8F76
 513+ 8F76 21 8B 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 514+ 8F79 ED 5B DE 89  	ld de,(Puntero_store_caja)
 515+ 8F7D 7E           	ld a,(hl)
 516+ 8F7E 12           	ld (de),a
 517+ 8F7F 13           	inc de 													; (Tipo).
 518+ 8F80
 519+ 8F80 21 92 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 520+ 8F83 01 02 00     	ld bc,2
 521+ 8F86 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 522+ 8F88              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 523+ 8F88 23           	inc hl
 524+ 8F89 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 525+ 8F8A 12           	ld (de),a
 526+ 8F8B 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 527+ 8F8C
 528+ 8F8C 21 A1 89     	ld hl,Impacto
 529+ 8F8F 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 530+ 8F90 12           	ld (de),a
 531+ 8F91 13           	inc de 													; (Impacto), volcado a la caja.
 532+ 8F92              ;															; DE situado ahora en (Variables_de_borrado).
 533+ 8F92 23           	inc hl
 534+ 8F93 01 06 00     	ld bc,6
 535+ 8F96 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 536+ 8F98              ; 															; DE situado ahora en (Puntero_de_impresión).
 537+ 8F98 01 07 00     	ld bc,7
 538+ 8F9B ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 539+ 8F9D              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 540+ 8F9D              ;															; HL apunta ahora a (Columnas).
 541+ 8F9D 21 B3 89     	ld hl,Ctrl_2
 542+ 8FA0 7E           	ld a,(hl)
 543+ 8FA1 12           	ld (de),a 												; Volcamos (Ctrl_2).
 544+ 8FA2 13           	inc de
 545+ 8FA3
 546+ 8FA3 C9           	ret
 547+ 8FA4
 548+ 8FA4              ;---------------------------------------------------------------------------------------------------------------
 549+ 8FA4              ;
 550+ 8FA4              ;	5/1/24
 551+ 8FA4              ;
 552+ 8FA4              ;	INICIALIZA (Numero_parcial_de_entidades).
 553+ 8FA4              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 554+ 8FA4              ;
 555+ 8FA4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 556+ 8FA4              ;
 557+ 8FA4              ;	(Numero_parcial_de_entidades)="7".
 558+ 8FA4              ;
 559+ 8FA4              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 560+ 8FA4              ;
 561+ 8FA4              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 562+ 8FA4              ;
 563+ 8FA4              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 564+ 8FA4              ;	MODIFICA: A y B.
 565+ 8FA4              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 566+ 8FA4
 567+ 8FA4              Inicializa_Numero_parcial_de_entidades
 568+ 8FA4
 569+ 8FA4              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 570+ 8FA4
 571+ 8FA4 3A E4 89     	ld a,(Numero_de_entidades)
 572+ 8FA7 A7           	and a
 573+ 8FA8
 574+ 8FA8              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 575+ 8FA8              ;	jr z,$
 576+ 8FA8              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8FA8
 578+ 8FA8 20 03        	jr nz,3F
 579+ 8FAA
 580+ 8FAA              ; ---------- ---------- ----------
 581+ 8FAA
 582+ 8FAA              ;! RESET para pruebas. Omitir esta línea en modo normal.
 583+ 8FAA              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 584+ 8FAA
 585+ 8FAA CD CB 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 586+ 8FAD
 587+ 8FAD              ; ---------- ---------- ----------
 588+ 8FAD
 589+ 8FAD 3A E4 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 590+ 8FB0 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 591+ 8FB2 38 08        	jr c,1F
 592+ 8FB4
 593+ 8FB4              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 594+ 8FB4              ; Actualizamos variables.
 595+ 8FB4
 596+ 8FB4 3E 07        	ld a,7
 597+ 8FB6 32 E5 89     	ld (Numero_parcial_de_entidades),a
 598+ 8FB9 47           	ld b,a
 599+ 8FBA 18 04        	jr 2F
 600+ 8FBC
 601+ 8FBC              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 602+ 8FBC              ; (Numero_de_entidades)="0".
 603+ 8FBC
 604+ 8FBC 32 E5 89     1 ld (Numero_parcial_de_entidades),a
 605+ 8FBF 47           	ld b,a
 606+ 8FC0 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1873  8FC1              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8FC1              ; ******************************************************************************************************************************************************************************************
   2+ 8FC1              ;
   3+ 8FC1              ; 26/06/23
   4+ 8FC1              ;
   5+ 8FC1              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8FC1
   7+ 8FC1              Draw
   8+ 8FC1
   9+ 8FC1 CD AE 92     	call Prepara_draw
  10+ 8FC4 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8FC5 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8FC6 28 05        	jr z,2F
  13+ 8FC8
  14+ 8FC8 3A A0 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8FCB 18 0C        	jr 1F
  16+ 8FCD
  17+ 8FCD 2A 9E 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8FD0 22 8E 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8FD3 CD 62 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8FD6              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8FD6
  22+ 8FD6 CD 85 9A     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8FD9
  24+ 8FD9 3A AE 89     1 ld a,(Ctrl_0)
  25+ 8FDC CB 6F        	bit 5,a
  26+ 8FDE 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8FE0
  28+ 8FE0 CD F8 8F     	call Comprueba_limite_horizontal
  29+ 8FE3 CD 88 90     	call Comprueba_limite_vertical
  30+ 8FE6
  31+ 8FE6              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8FE6              ; -----------------------
  33+ 8FE6              ; -----------------------
  34+ 8FE6              ; -----------------------
  35+ 8FE6
  36+ 8FE6 CD DE 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8FE9 CD 15 92     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8FEC CD 74 92     	call Define_rutina_de_impresion
  39+ 8FEF
  40+ 8FEF 3A AE 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8FF2 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8FF4 32 AE 89     	ld (Ctrl_0),a
  43+ 8FF7
  44+ 8FF7 C9           	ret
  45+ 8FF8
  46+ 8FF8              ; *******************************************************************************************************************************************************************************************
  47+ 8FF8              ;	21/01/23
  48+ 8FF8              ;
  49+ 8FF8              ; 	Comprueba_limite_horizontal.
  50+ 8FF8              ;
  51+ 8FF8              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8FF8              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8FF8              ;
  54+ 8FF8              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8FF8              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8FF8              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8FF8              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8FF8
  59+ 8FF8
  60+ 8FF8
  61+ 8FF8 3A AE 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8FFB CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8FFD 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8FFF E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 9001 32 AE 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 9004 18 09            jr 6F
  67+ 9006 CB 5F        1 bit 3,a
  68+ 9008 28 0A            jr z,2F
  69+ 900A E6 F7            and $f7
  70+ 900C 32 AE 89         ld (Ctrl_0),a
  71+ 900F CD 62 91     6 call Inicializacion
  72+ 9012 18 5B            jr 5F
  73+ 9014 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9015
  75+ 9015              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9015              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9015
  78+ 9015 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9016 2A B0 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9019 CD 1A A0     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 901C 67           	ld h,a
  82+ 901D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 901E CD 1A A0     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9021 67           	ld h,a
  85+ 9022 A7           	and a
  86+ 9023 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9025 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9026 3A A0 89     	ld a,(Cuad_objeto)
  89+ 9029 FE 02        	cp 2
  90+ 902B 38 1E        	jr c,3F
  91+ 902D 28 1C        	jr z,3F
  92+ 902F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9030 28 23            jr z,7F
  94+ 9032 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9034 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9036 E1           	pop hl
  97+ 9037
  98+ 9037              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9037              ; _para indicar con E="2" en caso necesario.
 100+ 9037
 101+ 9037 E5               push hl
 102+ 9038 C5               push bc
 103+ 9039 CD 1A A0     	call calcula_tercio
 104+ 903C FE 01        	cp 1
 105+ 903E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9040 CD 70 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9043 28 26            jr z,9F
 108+ 9045 38 24            jr c,9F
 109+ 9047 1E 00        11 ld e,0
 110+ 9049 18 22            jr 8F
 111+ 904B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 904C 28 07        	jr z, 7F
 113+ 904E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9050 1E 00         	ld e,0
 115+ 9052 E1           	pop hl
 116+ 9053 18 04        	jr 4F
 117+ 9055 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9057 18 15            jr 10F
 119+ 9059
 120+ 9059              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9059              ; _para indicar con E="2" en caso necesario.
 122+ 9059
 123+ 9059 E5           4 push hl
 124+ 905A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 905B CD 1A A0     	call calcula_tercio
 126+ 905E FE 01        	cp 1
 127+ 9060 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9062 CD 70 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9065 28 04            jr z,9F
 130+ 9067 30 02            jr nc,9F
 131+ 9069 18 02        	jr 8F
 132+ 906B 1E 02        9 ld e,2
 133+ 906D C1           8 pop bc
 134+ 906E E1           10 pop hl
 135+ 906F C9           5 ret
 136+ 9070
 137+ 9070              ; --------------------
 138+ 9070              ;
 139+ 9070              ; 25/08/22
 140+ 9070
 141+ 9070 CD 1A A0     Comprueba_centro call calcula_tercio
 142+ 9073 67               ld h,a
 143+ 9074 08           	ex af,af
 144+ 9075 FE 02        	cp 2
 145+ 9077 38 07        	jr c,1F
 146+ 9079 28 05        	jr z,1F
 147+ 907B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 907E 18 03        	jr 2F
 149+ 9080 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9083 08           2 ex af,af
 151+ 9084 A7               and a
 152+ 9085 ED 42            sbc hl,bc
 153+ 9087 C9               ret
 154+ 9088
 155+ 9088              ; *********************************************************************************************************************************************************************************************
 156+ 9088              ;
 157+ 9088              ;   16/8/22
 158+ 9088              ;
 159+ 9088              ;	Comprueba_limite_vertical
 160+ 9088              ;
 161+ 9088              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 9088              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 9088              ;
 164+ 9088
 165+ 9088 2A 8E 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 908B 7D           	ld a,l
 167+ 908C E6 1F        	and $1F
 168+ 908E 57           	ld d,a
 169+ 908F 3A B2 89     	ld a,(Limite_vertical)
 170+ 9092 BA           	cp d 											; Límite - Posición.
 171+ 9093 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9094 3A A0 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9097 CB 47        	bit 0,a
 174+ 9099 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 909B
 176+ 909B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 909B
 178+ 909B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 909C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 909E
 181+ 909E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 909E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 909E
 184+ 909E 3A 92 89         ld a,(Coordenada_X)
 185+ 90A1 16 0F            ld d,Centro_izquierda
 186+ 90A3 A7               and a
 187+ 90A4 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 90A5 28 1E            jr z,3F
 189+ 90A7 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 90A9              ;                                                    ; _salimos sin modificar nada.
 191+ 90A9 18 0E            jr 2F
 192+ 90AB 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 90AC 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 90AE
 195+ 90AE              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 90AE              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 90AE
 198+ 90AE 3A 92 89         ld a,(Coordenada_X)
 199+ 90B1 16 10            ld d,Centro_derecha
 200+ 90B3 A7               and a
 201+ 90B4 92               sub d
 202+ 90B5 28 0E            jr z,3F
 203+ 90B7 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 90B9              ;                                                    ; _salimos sin modificar nada.
 205+ 90B9 CB 43        2 bit 0,e
 206+ 90BB 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 90BD C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 90BE CD 52 91         call Modificaccionne
 209+ 90C1 C1           	pop bc
 210+ 90C2 CD 62 91         call Inicializacion
 211+ 90C5 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 90C6
 213+ 90C6              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 90C6
 215+ 90C6 C5           4 push bc
 216+ 90C7 01 8D 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 90CA 0A           	ld a,(bc)
 218+ 90CB 3D           	dec a
 219+ 90CC 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 90CD 7D           	ld a,l
 221+ 90CE 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 90CF CB 47        	bit 0,a
 223+ 90D1 28 03        	jr z,5F
 224+ 90D3 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 90D4 18 2E        	jr 7F
 226+ 90D6
 227+ 90D6              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 90D6
 229+ 90D6 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 90D7 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 90D8 3A AE 89     	ld a,(Ctrl_0)
 232+ 90DB CB 4F        	bit 1,a
 233+ 90DD 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 90DF F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 90E0
 236+ 90E0              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 90E0
 238+ 90E0 1C               inc e
 239+ 90E1 1D               dec e
 240+ 90E2 20 07            jr nz,12F
 241+ 90E4 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 90E5 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 90E6 22 8E 89     	ld (Posicion_actual),hl
 244+ 90E9 18 44        13 jr 9F
 245+ 90EB CB 43        12 bit 0,e
 246+ 90ED 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 90EF              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 90EF C1           	pop bc
 249+ 90F0 18 D3        	jr 3B
 250+ 90F2 80           14 add b
 251+ 90F3 6F               ld l,a
 252+ 90F4 22 8E 89     	ld (Posicion_actual),hl
 253+ 90F7 CD 52 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 90FA 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 90FC E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 90FE 32 AE 89         ld (Ctrl_0),a
 257+ 9101 F1           	pop af
 258+ 9102 18 2B        	jr 9F
 259+ 9104
 260+ 9104              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9104
 262+ 9104 F5           7 push af
 263+ 9105 3A AE 89     	ld a,(Ctrl_0)
 264+ 9108 CB 47        	bit 0,a
 265+ 910A 20 1D        	jr nz,8F
 266+ 910C F1           	pop af
 267+ 910D
 268+ 910D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 910D
 270+ 910D 1C           	inc e
 271+ 910E 1D               dec e
 272+ 910F 20 07            jr nz,10F
 273+ 9111 90           	sub b
 274+ 9112 6F               ld l,a
 275+ 9113 22 8E 89     	ld (Posicion_actual),hl
 276+ 9116 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9118              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9118 CB 43        10 bit 0,e
 279+ 911A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 911C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 911C C1           	pop bc
 282+ 911D 18 A6        	jr 3B
 283+ 911F 90           16 sub b
 284+ 9120 6F               ld l,a
 285+ 9121 22 8E 89     	ld (Posicion_actual),hl
 286+ 9124 CD 52 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9127 18 06            jr 9F
 288+ 9129 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 912B 32 AE 89         ld (Ctrl_0),a
 290+ 912E F1           	pop af
 291+ 912F C1           9 pop bc
 292+ 9130 1E 00        	ld e,0
 293+ 9132 CD 62 91         call Inicializacion
 294+ 9135 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9136 08           	ex af,af
 296+ 9137 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9138 18 8B            jr 3B
 298+ 913A
 299+ 913A              ; --------------------
 300+ 913A
 301+ 913A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 913C CD C9 92     1 call PreviousScan
 303+ 913F 10 FB            djnz 1B
 304+ 9141 22 8E 89     	ld (Posicion_actual),hl
 305+ 9144 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9145 C9           	ret
 307+ 9146
 308+ 9146              ; --------------------
 309+ 9146
 310+ 9146 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9148 CD BA 92     1 call NextScan
 312+ 914B 10 FB            djnz 1B
 313+ 914D 22 8E 89     	ld (Posicion_actual),hl
 314+ 9150 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9151 C9           	ret
 316+ 9152
 317+ 9152              ; --------------------
 318+ 9152              ;
 319+ 9152              ;	22/01/23
 320+ 9152              ;
 321+ 9152              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9152              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9152              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9152
 325+ 9152
 326+ 9152              Modificaccionne
 327+ 9152
 328+ 9152 3A A0 89     	ld a,(Cuad_objeto)
 329+ 9155 FE 02        	cp 2
 330+ 9157 CC 3A 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 915A DC 3A 91         call c,Modifica_Pos_actual
 332+ 915D C8           	ret z
 333+ 915E CD 46 91         call Modifica_Pos_actual2
 334+ 9161 C9               ret
 335+ 9162
 336+ 9162              ; *************************************************************************************************************************************************************************************************
 337+ 9162              ;
 338+ 9162              ;	13/8/22
 339+ 9162              ;
 340+ 9162              ;	Inicializacion
 341+ 9162              ;
 342+ 9162              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9162              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9162              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9162              ;
 346+ 9162              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9162              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9162              ;	_ desaparece/aparece.
 349+ 9162
 350+ 9162              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9162              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9162              ;
 353+ 9162              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9162              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9162              ; 		   [E] ="0"
 356+ 9162
 357+ 9162              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9162
 359+ 9162 CD 1A A0     Inicializacion call calcula_tercio
 360+ 9165 28 36        	jr z,primit
 361+ 9167 E6 02        	and 2
 362+ 9169 20 07        	jr nz,segmit
 363+ 916B 7D           	ld a,l
 364+ 916C FE 7F        	cp $7f
 365+ 916E 38 2D        	jr c,primit
 366+ 9170 28 2B        	jr z,primit
 367+ 9172 CD D8 91     segmit call column
 368+ 9175 38 13        	jr c,tercuad
 369+ 9177 3E 04        cuarcuad ld a,4
 370+ 9179 32 A0 89     	ld (Cuad_objeto),a
 371+ 917C 21 20 48     	ld hl,$4820
 372+ 917F 22 B0 89     	ld (Limite_horizontal),hl
 373+ 9182 21 B2 89     	ld hl,Limite_vertical
 374+ 9185 36 0D        	ld (hl),$0d
 375+ 9187 08           	ex af,af
 376+ 9188 18 3C        	jr 1F
 377+ 918A              tercuad
 378+ 918A 3E 03        	ld a,3
 379+ 918C 32 A0 89     	ld (Cuad_objeto),a
 380+ 918F 21 20 48     	ld hl,$4820
 381+ 9192 22 B0 89     	ld (Limite_horizontal),hl
 382+ 9195 21 B2 89     	ld hl,Limite_vertical
 383+ 9198 36 12        	ld (hl),$12
 384+ 919A 08           	ex af,af
 385+ 919B 18 29        	jr 1F
 386+ 919D CD D8 91     primit call column
 387+ 91A0 38 13        	jr c, primcuad
 388+ 91A2              segcuad
 389+ 91A2 3E 02        	ld a,2
 390+ 91A4 32 A0 89     	ld (Cuad_objeto),a
 391+ 91A7 21 C0 4F     	ld hl,$4fc0
 392+ 91AA 22 B0 89     	ld (Limite_horizontal),hl
 393+ 91AD 21 B2 89     	ld hl,Limite_vertical
 394+ 91B0 36 0D        	ld (hl),$0d
 395+ 91B2 08           	ex af,af
 396+ 91B3 18 11        	jr 1F
 397+ 91B5              primcuad
 398+ 91B5 3E 01        	ld a,1
 399+ 91B7 32 A0 89     	ld (Cuad_objeto),a
 400+ 91BA 21 C0 4F     	ld hl,$4fc0
 401+ 91BD 22 B0 89     	ld (Limite_horizontal),hl
 402+ 91C0 21 B2 89     	ld hl,Limite_vertical
 403+ 91C3 36 12        	ld (hl),$12
 404+ 91C5 08           	ex af,af
 405+ 91C6
 406+ 91C6 C5           1 push bc
 407+ 91C7 E5           	push hl
 408+ 91C8 D5           	push de
 409+ 91C9
 410+ 91C9 2A 8E 89     	ld hl,(Posicion_actual)
 411+ 91CC CD 38 A0     	call Genera_coordenadas
 412+ 91CF
 413+ 91CF D1           	pop de
 414+ 91D0 E1           	pop hl
 415+ 91D1 C1           	pop bc
 416+ 91D2
 417+ 91D2 21 AE 89     	ld hl,Ctrl_0
 418+ 91D5 CB EE        	set 5,(hl)
 419+ 91D7 C9           	ret
 420+ 91D8
 421+ 91D8              ; ------------------------------------------------------------------------------------------------------------------
 422+ 91D8
 423+ 91D8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 91D8              ;
 425+ 91D8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 91D8
 427+ 91D8 7D           column ld a,l
 428+ 91D9 E6 1F        	and $1f
 429+ 91DB FE 10         	cp $10
 430+ 91DD C9            	ret
 431+ 91DE
 432+ 91DE              ; --------------------------------------------------------------------------------------------------------------------
 433+ 91DE              ;
 434+ 91DE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 91DE              ;
 436+ 91DE              ; 14/12/22
 437+ 91DE              ;
 438+ 91DE              ;	Modifica: A y BC.
 439+ 91DE
 440+ 91DE 3A A0 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 91E1 E6 01        	and 1
 442+ 91E3 28 17        	jr z,1F
 443+ 91E5
 444+ 91E5              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 91E5
 446+ 91E5 3A 92 89     	ld a,(Coordenada_X)
 447+ 91E8 47           	ld b,a
 448+ 91E9 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 91EA 79           	ld a,c
 450+ 91EB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 91EC 38 08        	jr c,2F
 452+ 91EE 47           	ld b,a
 453+ 91EF 79           	ld a,c
 454+ 91F0 90           	sub b
 455+ 91F1 32 AF 89     	ld (Columnas),a
 456+ 91F4 18 1B        	jr 4F
 457+ 91F6 79           2 ld a,c
 458+ 91F7 32 AF 89     	ld (Columnas),a
 459+ 91FA 18 15        	jr 4F
 460+ 91FC
 461+ 91FC              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 91FC
 463+ 91FC 3A 92 89     1 ld a,(Coordenada_X)
 464+ 91FF 81           	add c
 465+ 9200 3D           	dec a
 466+ 9201 D6 1F        	sub $1f
 467+ 9203 38 08        	jr c,3F
 468+ 9205 47           	ld b,a
 469+ 9206 79           	ld a,c
 470+ 9207 90           	sub b
 471+ 9208 32 AF 89     	ld (Columnas),a
 472+ 920B 18 04        	jr 4F
 473+ 920D 79           3 ld a,c
 474+ 920E 32 AF 89     	ld (Columnas),a
 475+ 9211 D9           4 exx
 476+ 9212 4F           	ld c,a
 477+ 9213 D9           	exx
 478+ 9214 C9            ret
 479+ 9215
 480+ 9215              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9215              ;
 482+ 9215              ;   19/7/23
 483+ 9215              ;
 484+ 9215              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9215              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9215              ;
 487+ 9215              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9215              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9215              ;
 490+ 9215              ;	DESTRUYE: HL,B Y A.
 491+ 9215
 492+ 9215 3A A0 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9218 FE 02        	cp 2
 494+ 921A 38 18        	jr c,1F
 495+ 921C 28 16        	jr z,1F
 496+ 921E E6 01        	and 1
 497+ 9220 28 0D        	jr z,3F
 498+ 9222
 499+ 9222              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9222
 501+ 9222 CD 68 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9225
 503+ 9225 7D           9 ld a,l
 504+ 9226 E6 1F        	and $1f
 505+ 9228 28 2A        	jr z,7F
 506+ 922A 2B           	dec hl
 507+ 922B 10 F8        	djnz 9B
 508+ 922D 18 25        	jr 7F
 509+ 922F
 510+ 922F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 922F
 512+ 922F 2A 8E 89     3 ld hl,(Posicion_actual)
 513+ 9232 18 20        	jr 7F
 514+ 9234
 515+ 9234 28 14        1 jr z,2F
 516+ 9236
 517+ 9236              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9236
 519+ 9236 CD 68 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9239
 521+ 9239 7D           4 ld a,l
 522+ 923A E6 1F        	and $1f
 523+ 923C 28 03        	jr z,6F
 524+ 923E 2B           	dec hl
 525+ 923F 10 F8        	djnz 4B
 526+ 9241 06 0F        6 ld b,15
 527+ 9243 CD C9 92     5 call PreviousScan
 528+ 9246 10 FB        	djnz 5B
 529+ 9248 18 0A        	jr 7F
 530+ 924A
 531+ 924A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 924A
 533+ 924A CD 68 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 924D 06 0F        	ld b,15
 535+ 924F CD C9 92     8 call PreviousScan
 536+ 9252 10 FB        	djnz 8B
 537+ 9254
 538+ 9254 E5           7 push hl
 539+ 9255 DD E1        	pop ix
 540+ 9257
 541+ 9257 2A 90 89     	ld hl,(Puntero_objeto)
 542+ 925A E5           	push hl
 543+ 925B FD E1        	pop iy
 544+ 925D
 545+ 925D              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 925D
 547+ 925D 3A AE 89     	ld a,(Ctrl_0)
 548+ 9260 CB 77        	bit 6,a
 549+ 9262 C8           	ret z
 550+ 9263
 551+ 9263              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9263              ; _ entidad / Amadeus´.
 553+ 9263
 554+ 9263 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 9267
 556+ 9267 C9           	ret
 557+ 9268
 558+ 9268              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9268              ;
 560+ 9268              ;	2/1/23
 561+ 9268              ;
 562+ 9268              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9268              ;
 564+ 9268              ;	Tras esta rutina tenemos:
 565+ 9268              ;
 566+ 9268              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9268              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9268              ;
 569+ 9268              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9268
 571+ 9268 2A 8E 89     Operandos ld hl,(Posicion_actual)
 572+ 926B 3A AF 89     	ld a,(Columnas)
 573+ 926E 3D           	dec a
 574+ 926F 20 01        	jr nz,1F
 575+ 9271 3C           	inc a
 576+ 9272 47           1 ld b,a
 577+ 9273 C9           	ret
 578+ 9274
 579+ 9274              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9274              ;
 581+ 9274              ;	3/1/23
 582+ 9274              ;
 583+ 9274              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9274              ;
 585+ 9274              ;	Destruye: A,B,HL y DE.
 586+ 9274
 587+ 9274              Define_rutina_de_impresion
 588+ 9274
 589+ 9274 3A 8D 89     	ld a,(Columns)
 590+ 9277 47           	ld b,a
 591+ 9278 3A AF 89     	ld a,(Columnas)
 592+ 927B B8           	cp b
 593+ 927C 20 0D        	jr nz,2f
 594+ 927E
 595+ 927E              ;	La entidad se imprime entera.
 596+ 927E
 597+ 927E 21 AA 93     	ld hl, Indice_entidades_completas
 598+ 9281 E6 01        	and 1
 599+ 9283 28 02        	jr z,1F
 600+ 9285
 601+ 9285 23           	inc hl
 602+ 9286 23           	inc hl
 603+ 9287
 604+ 9287 CD 85 8C     1 call Extrae_address
 605+ 928A C9           	ret		;	ret
 606+ 928B
 607+ 928B              ;	La entidad no se imprime entera en pantalla.
 608+ 928B
 609+ 928B 3A A0 89     2 ld a,(Cuad_objeto)
 610+ 928E E6 01        	and 1
 611+ 9290 28 17        	jr z,3F
 612+ 9292
 613+ 9292              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9292
 615+ 9292 21 AE 93     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9295 3A 8D 89     4 ld a,(Columns)
 617+ 9298 E6 01        	and 1
 618+ 929A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 929C
 620+ 929C 23           	inc hl
 621+ 929D 23           	inc hl
 622+ 929E
 623+ 929E 3A AF 89     	ld a,(Columnas)
 624+ 92A1 E6 01        	and 1
 625+ 92A3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 92A5
 627+ 92A5 23           	inc hl
 628+ 92A6 23           	inc hl
 629+ 92A7
 630+ 92A7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 92A9
 632+ 92A9 21 B4 93     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 92AC 18 E7        	jr 4B
 634+ 92AE
 635+ 92AE              ; --------------------------------------------------------------------------------------------------------------------
 636+ 92AE              ;
 637+ 92AE              ;	Prepara_draw
 638+ 92AE              ;
 639+ 92AE              ;	Es una rutina de carga.
 640+ 92AE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 92AE              ;
 642+ 92AE              ;	FUNCIONAMIENTO:
 643+ 92AE              ;
 644+ 92AE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 92AE              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 92AE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 92AE              ;
 648+ 92AE              ;	DESTRUYE:
 649+ 92AE              ;
 650+ 92AE              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 92AE
 652+ 92AE 21 8C 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 92B1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 92B2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 92B3 4E           	ld c,(hl)
 656+ 92B4 2A 8E 89     	ld hl,(Posicion_actual)
 657+ 92B7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 92B9 C9           	ret
 659+ 92BA
 660+ 92BA              ;----------------------------------------------------------------------------------------------------------------
 661+ 92BA              ;
 662+ 92BA              ;	5/08/22
 663+ 92BA              ;
 664+ 92BA              ;   NextScan.
 665+ 92BA              ;
 666+ 92BA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 92BA              ;
 668+ 92BA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 92BA              ;
 670+ 92BA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 92BA              ;
 672+ 92BA              ;       DESTRUIDOS: AF y HL !!!
 673+ 92BA              ;
 674+ 92BA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 92BA              ;
 676+ 92BA
 677+ 92BA 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 92BB 7C               ld a,h
 679+ 92BC E6 07            and 7
 680+ 92BE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 92BF
 682+ 92BF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 92C0 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 92C2 6F               ld l,a
 685+ 92C3 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 92C4
 687+ 92C4 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 92C5 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 92C7 67               ld h,a
 690+ 92C8 C9               ret
 691+ 92C9
 692+ 92C9              ;----------------------------------------------------------------------------------------------------------------
 693+ 92C9              ;
 694+ 92C9              ;	5/08/22
 695+ 92C9              ;
 696+ 92C9              ;   PreviousScan.
 697+ 92C9              ;
 698+ 92C9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 92C9              ;
 700+ 92C9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 92C9              ;
 702+ 92C9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 92C9              ;
 704+ 92C9              ;       DESTRUIDOS: AF y HL !!!
 705+ 92C9              ;
 706+ 92C9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 92C9              ;
 708+ 92C9
 709+ 92C9 7C           PreviousScan ld a,h
 710+ 92CA 25               dec h               ; Dec H.
 711+ 92CB E6 07            and 7
 712+ 92CD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 92CE
 714+ 92CE 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 92CF D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 92D1 6F               ld l,a
 717+ 92D2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 92D3
 719+ 92D3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 92D4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 92D6 67               ld h,a
 722+ 92D7 C9               ret
 723+ 92D8
 724+ 92D8              ; -----------------------------------------------------------------------------------
 725+ 92D8              ;
 726+ 92D8              ;	31/7/23
 727+ 92D8              ;
 728+ 92D8              ;	Rutina principal de pintado de entidades.
 729+ 92D8              ;	Extrae la foto del frame, (entidades).
 730+ 92D8
 731+ 92D8              Extrae_Album_de_fotos
 732+ 92D8
 733+ 92D8 21 01 80     	ld hl,Album_de_fotos+1
 734+ 92DB 7E           	ld a,(hl)
 735+ 92DC A7           	and a
 736+ 92DD C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 92DE
 738+ 92DE              ;	No hay datos, (entidades para pintar en este frame).
 739+ 92DE
 740+ 92DE 3A E7 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 92E1 A7           	and a
 742+ 92E2 C8           	ret z
 743+ 92E3
 744+ 92E3              ; -----------------------------------
 745+ 92E3
 746+ 92E3 ED 73 EC 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 92E7 31 00 80     	ld sp,Album_de_fotos
 748+ 92EA
 749+ 92EA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 92EC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 92ED D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 92EE
 753+ 92EE ED 73 EE 89  	ld (Stack_2),sp
 754+ 92F2 ED 7B EC 89  	ld sp,(Stack)
 755+ 92F6
 756+ 92F6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 92F6
 758+ 92F6 3E CD        	ld a,$cd
 759+ 92F8 32 00 93     	ld (Imprime),a
 760+ 92FB EB           	ex de,hl
 761+ 92FC 22 01 93     	ld (Imprime+1),hl
 762+ 92FF EB           	ex de,hl
 763+ 9300
 764+ 9300              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9300
 766+ 9300 00 00 00     Imprime db 0,0,0
 767+ 9303
 768+ 9303 ED 73 EC 89  	ld (Stack),sp
 769+ 9307
 770+ 9307 3A E7 89     	ld a,(Numero_de_malotes)
 771+ 930A 3D           	dec a
 772+ 930B 28 09        	jr z,1F
 773+ 930D 32 E7 89      	ld (Numero_de_malotes),a
 774+ 9310
 775+ 9310 ED 7B EE 89  	ld sp,(Stack_2)
 776+ 9314 18 D4        	jr 2B
 777+ 9316
 778+ 9316 AF           1 xor a
 779+ 9317 32 EE 89     	ld (Stack_2),a
 780+ 931A
 781+ 931A C9           	ret
 782+ 931B
 783+ 931B              ; -----------------------------------------------------------------------------------
 784+ 931B              ;
 785+ 931B              ;	28/2/23
 786+ 931B              ;
 787+ 931B              ;	Pinta los disparos generados.
 788+ 931B
 789+ 931B              Extrae_foto_disparos
 790+ 931B
 791+ 931B 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 931E 7E               ld a,(hl)
 793+ 931F A7               and a
 794+ 9320 C8               ret z
 795+ 9321
 796+ 9321 3A FC 89     	ld a,(Numero_de_disparotes)
 797+ 9324 A7           	and a
 798+ 9325 C8           	ret z
 799+ 9326 ED 73 EC 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 932A 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 932D
 802+ 932D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 932F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9330 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9331
 806+ 9331 ED 73 EE 89  	ld (Stack_2),sp
 807+ 9335 ED 7B EC 89  	ld sp,(Stack)
 808+ 9339
 809+ 9339              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9339
 811+ 9339 3E CD        	ld a,$cd
 812+ 933B 32 43 93     	ld (Imprime2),a
 813+ 933E EB           	ex de,hl
 814+ 933F 22 44 93     	ld (Imprime2+1),hl
 815+ 9342 EB           	ex de,hl
 816+ 9343
 817+ 9343              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9343
 819+ 9343 00 00 00     Imprime2 db 0,0,0
 820+ 9346
 821+ 9346 3A FC 89     	ld a,(Numero_de_disparotes)
 822+ 9349 3D           	dec a
 823+ 934A 28 09        	jr z,1F
 824+ 934C 32 FC 89      	ld (Numero_de_disparotes),a
 825+ 934F
 826+ 934F ED 7B EE 89  	ld sp,(Stack_2)
 827+ 9353 18 D8        	jr 2B
 828+ 9355
 829+ 9355 AF           1 xor a
 830+ 9356 32 EE 89     	ld (Stack_2),a
 831+ 9359 C9           	ret
 832+ 935A
 833+ 935A              ; -----------------------------------------------------------------------------------
 834+ 935A              ;
 835+ 935A              ;	4/9/23
 836+ 935A              ;
 837+ 935A              ;	Rutina principal de pintado de Amadeus.
 838+ 935A              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 935A
 840+ 935A 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 935D 7E           	ld a,(hl)
 842+ 935E A7           	and a
 843+ 935F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9360
 845+ 9360 3A E7 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9363 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9364 C8           	ret z
 848+ 9365
 849+ 9365              ; -----------------------------------
 850+ 9365
 851+ 9365 ED 73 EC 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9369 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 936C
 854+ 936C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 936E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 936F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9370
 858+ 9370 ED 73 EE 89  	ld (Stack_2),sp
 859+ 9374 ED 7B EC 89  	ld sp,(Stack)
 860+ 9378
 861+ 9378              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9378
 863+ 9378 3E CD        	ld a,$cd
 864+ 937A 32 82 93     	ld (Imprime_Amadeus),a
 865+ 937D EB           	ex de,hl
 866+ 937E 22 83 93     	ld (Imprime_Amadeus+1),hl
 867+ 9381 EB           	ex de,hl
 868+ 9382
 869+ 9382              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9382
 871+ 9382 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9385
 873+ 9385 ED 73 EC 89  	ld (Stack),sp
 874+ 9389
 875+ 9389 3A E7 89     	ld a,(Numero_de_malotes)
 876+ 938C 3D           	dec a
 877+ 938D 28 09        	jr z,1F
 878+ 938F 32 E7 89      	ld (Numero_de_malotes),a
 879+ 9392
 880+ 9392 ED 7B EE 89  	ld sp,(Stack_2)
 881+ 9396 18 D4        	jr 2B
 882+ 9398
 883+ 9398 AF           1 xor a
 884+ 9399 32 EE 89     	ld (Stack_2),a
 885+ 939C
 886+ 939C C9           	ret
 887+ 939D
 888+ 939D              ; -----------------------------------------------------------------------------------
 889+ 939D              ;
 890+ 939D              ;	01/03/24
 891+ 939D              ;
 892+ 939D              ;	Borra los sprites impresos en pantalla.
 893+ 939D              ;
 894+ 939D
 895+ 939D              Borra_sprites
 896+ 939D
 897+ 939D 21 00 E8     	ld hl,Almacen_de_scanlines_masticados_a_borrar
 898+ 93A0 7E           	ld a,(hl)
 899+ 93A1 A7           	and a
 900+ 93A2 C8           	ret z 																	; Salimos si el álbum está vacío.
 901+ 93A3
 902+ 93A3              ;	No hay datos, (entidades para pintar en este frame).
 903+ 93A3
 904+ 93A3 3A E7 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 905+ 93A6 A7           	and a
 906+ 93A7 C8           	ret z
 907+ 93A8
 908+ 93A8 18 FE        	jr $
# file closed: Draw_XOR.asm
1874  93AA              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 93AA              ;   índices de Rutinas de impresión.
   2+ 93AA
   3+ 93AA BA 93        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 93AC 4E 94            defw Pinta_Amadeus_3x2
   5+ 93AE
   6+ 93AE A6 94        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 93B0 46 95            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 93B2 FA 94            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 93B4
  10+ 93B4 D0 94        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 93B6 D4 95            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 93B8 88 95            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 93BA
  14+ 93BA
  15+ 93BA              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 93BA              ;
  17+ 93BA              ;   28/2/24
  18+ 93BA              ;
  19+ 93BA              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 93BA              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 93BA              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 93BA              ;
  23+ 93BA              ;   Modifica: AF,HL,BC y DE.
  24+ 93BA
  25+ 93BA              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 93BA
  27+ 93BA D9               exx
  28+ 93BB 36 02            ld (hl),2
  29+ 93BD 2C               inc l
  30+ 93BE D9               exx
  31+ 93BF
  32+ 93BF FD E5            push iy
  33+ 93C1 D1               pop de
  34+ 93C2
  35+ 93C2 ED 73 EC 89      ld (Stack),sp
  36+ 93C6 F9           	ld sp,hl
  37+ 93C7 06 10            ld b,16
  38+ 93C9
  39+ 93C9 E1               pop hl
  40+ 93CA 1A               ld a,(de)
  41+ 93CB 77               ld (hl),a
  42+ 93CC 1C           	inc e
  43+ 93CD 2C               inc l
  44+ 93CE 1A               ld a,(de)
  45+ 93CF 77               ld (hl),a
  46+ 93D0 1C               inc e
  47+ 93D1
  48+ 93D1 E1               pop hl
  49+ 93D2 1A               ld a,(de)
  50+ 93D3 77               ld (hl),a
  51+ 93D4 1C           	inc e
  52+ 93D5 2C               inc l
  53+ 93D6 1A               ld a,(de)
  54+ 93D7 77               ld (hl),a
  55+ 93D8 1C               inc e
  56+ 93D9
  57+ 93D9 E1               pop hl
  58+ 93DA 1A               ld a,(de)
  59+ 93DB 77               ld (hl),a
  60+ 93DC 1C           	inc e
  61+ 93DD 2C               inc l
  62+ 93DE 1A               ld a,(de)
  63+ 93DF 77               ld (hl),a
  64+ 93E0 1C               inc e
  65+ 93E1
  66+ 93E1 E1               pop hl
  67+ 93E2 1A               ld a,(de)
  68+ 93E3 77               ld (hl),a
  69+ 93E4 1C           	inc e
  70+ 93E5 2C               inc l
  71+ 93E6 1A               ld a,(de)
  72+ 93E7 77               ld (hl),a
  73+ 93E8 1C               inc e
  74+ 93E9
  75+ 93E9 E1               pop hl
  76+ 93EA 1A               ld a,(de)
  77+ 93EB 77               ld (hl),a
  78+ 93EC 1C           	inc e
  79+ 93ED 2C               inc l
  80+ 93EE 1A               ld a,(de)
  81+ 93EF 77               ld (hl),a
  82+ 93F0 1C               inc e
  83+ 93F1
  84+ 93F1 E1               pop hl
  85+ 93F2 1A               ld a,(de)
  86+ 93F3 77               ld (hl),a
  87+ 93F4 1C           	inc e
  88+ 93F5 2C               inc l
  89+ 93F6 1A               ld a,(de)
  90+ 93F7 77               ld (hl),a
  91+ 93F8 1C               inc e
  92+ 93F9
  93+ 93F9 E1               pop hl
  94+ 93FA 1A               ld a,(de)
  95+ 93FB 77               ld (hl),a
  96+ 93FC 1C           	inc e
  97+ 93FD 2C               inc l
  98+ 93FE 1A               ld a,(de)
  99+ 93FF 77               ld (hl),a
 100+ 9400 1C               inc e
 101+ 9401
 102+ 9401 E1               pop hl
 103+ 9402 1A               ld a,(de)
 104+ 9403 77               ld (hl),a
 105+ 9404 1C           	inc e
 106+ 9405 2C               inc l
 107+ 9406 1A               ld a,(de)
 108+ 9407 77               ld (hl),a
 109+ 9408 1C               inc e
 110+ 9409
 111+ 9409 E1               pop hl
 112+ 940A 1A               ld a,(de)
 113+ 940B 77               ld (hl),a
 114+ 940C 1C           	inc e
 115+ 940D 2C               inc l
 116+ 940E 1A               ld a,(de)
 117+ 940F 77               ld (hl),a
 118+ 9410 1C               inc e
 119+ 9411
 120+ 9411 E1               pop hl
 121+ 9412 1A               ld a,(de)
 122+ 9413 77               ld (hl),a
 123+ 9414 1C           	inc e
 124+ 9415 2C               inc l
 125+ 9416 1A               ld a,(de)
 126+ 9417 77               ld (hl),a
 127+ 9418 1C               inc e
 128+ 9419
 129+ 9419 E1               pop hl
 130+ 941A 1A               ld a,(de)
 131+ 941B 77               ld (hl),a
 132+ 941C 1C           	inc e
 133+ 941D 2C               inc l
 134+ 941E 1A               ld a,(de)
 135+ 941F 77               ld (hl),a
 136+ 9420 1C               inc e
 137+ 9421
 138+ 9421 E1               pop hl
 139+ 9422 1A               ld a,(de)
 140+ 9423 77               ld (hl),a
 141+ 9424 1C           	inc e
 142+ 9425 2C               inc l
 143+ 9426 1A               ld a,(de)
 144+ 9427 77               ld (hl),a
 145+ 9428 1C               inc e
 146+ 9429
 147+ 9429 E1               pop hl
 148+ 942A 1A               ld a,(de)
 149+ 942B 77               ld (hl),a
 150+ 942C 1C           	inc e
 151+ 942D 2C               inc l
 152+ 942E 1A               ld a,(de)
 153+ 942F 77               ld (hl),a
 154+ 9430 1C               inc e
 155+ 9431
 156+ 9431 E1               pop hl
 157+ 9432 1A               ld a,(de)
 158+ 9433 77               ld (hl),a
 159+ 9434 1C           	inc e
 160+ 9435 2C               inc l
 161+ 9436 1A               ld a,(de)
 162+ 9437 77               ld (hl),a
 163+ 9438 1C               inc e
 164+ 9439
 165+ 9439 E1               pop hl
 166+ 943A 1A               ld a,(de)
 167+ 943B 77               ld (hl),a
 168+ 943C 1C           	inc e
 169+ 943D 2C               inc l
 170+ 943E 1A               ld a,(de)
 171+ 943F 77               ld (hl),a
 172+ 9440 1C               inc e
 173+ 9441
 174+ 9441 E1               pop hl
 175+ 9442 1A               ld a,(de)
 176+ 9443 77               ld (hl),a
 177+ 9444 1C           	inc e
 178+ 9445 2C               inc l
 179+ 9446 1A               ld a,(de)
 180+ 9447 77               ld (hl),a
 181+ 9448 1C               inc e
 182+ 9449
 183+ 9449 ED 7B EC 89      ld sp,(Stack)
 184+ 944D
 185+ 944D C9           	ret
 186+ 944E
 187+ 944E              Pinta_Amadeus_3x2
 188+ 944E
 189+ 944E 18 FE            jr $
 190+ 9450
 191+ 9450 ED 73 EC 89      ld (Stack),sp
 192+ 9454 FD F9        	ld sp,iy
 193+ 9456 06 08            ld b,8
 194+ 9458 D1           1 pop de
 195+ 9459 7B               ld a,e
 196+ 945A AE               xor (hl)
 197+ 945B 77           	ld (hl),a
 198+ 945C 23           	inc hl
 199+ 945D 7A               ld a,d
 200+ 945E AE               xor (hl)
 201+ 945F 77           	ld (hl),a
 202+ 9460 23           	inc hl
 203+ 9461 D1           	pop de
 204+ 9462 7B               ld a,e
 205+ 9463 AE               xor (hl)
 206+ 9464 77           	ld (hl),a
 207+ 9465 2B           	dec hl
 208+ 9466 2B           	dec hl
 209+ 9467 24           	inc h
 210+ 9468 7C               ld a,h
 211+ 9469 E6 07            and 7
 212+ 946B 20 0A            jr nz,2F
 213+ 946D 7D               ld a,l
 214+ 946E C6 20            add a,$20
 215+ 9470 6F               ld l,a
 216+ 9471 38 04            jr c,2F
 217+ 9473 7C               ld a,h
 218+ 9474 D6 08            sub 8
 219+ 9476 67               ld h,a
 220+ 9477 7C           2 ld a,h
 221+ 9478 FE 58            cp $58
 222+ 947A 28 25            jr z,4F
 223+ 947C 7A               ld a,d
 224+ 947D AE               xor (hl)
 225+ 947E 77               ld (hl),a
 226+ 947F D1           	pop de
 227+ 9480 23           	inc hl
 228+ 9481 7B               ld a,e
 229+ 9482 AE               xor (hl)
 230+ 9483 77           	ld (hl),a
 231+ 9484 23           	inc hl
 232+ 9485 7A               ld a,d
 233+ 9486 AE               xor (hl)
 234+ 9487 77           	ld (hl),a
 235+ 9488 2B           	dec hl
 236+ 9489 2B           	dec hl
 237+ 948A 24           	inc h
 238+ 948B 7C               ld a,h
 239+ 948C E6 07            and 7
 240+ 948E 20 0A            jr nz,3F
 241+ 9490 7D               ld a,l
 242+ 9491 C6 20            add a,$20
 243+ 9493 6F               ld l,a
 244+ 9494 38 04            jr c,3F
 245+ 9496 7C               ld a,h
 246+ 9497 D6 08            sub 8
 247+ 9499 67               ld h,a
 248+ 949A 7C           3 ld a,h
 249+ 949B FE 58            cp $58
 250+ 949D 28 02            jr z,4F
 251+ 949F 10 B7            djnz 1B
 252+ 94A1 ED 7B EC 89  4 ld sp,(Stack)
 253+ 94A5 C9           	ret
 254+ 94A6
 255+ 94A6              ; ---------------------------------------------------
 256+ 94A6
 257+ 94A6 ED 73 EC 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 258+ 94AA FD F9        	ld sp,iy
 259+ 94AC
 260+ 94AC              ; >>>
 261+ 94AC
 262+ 94AC 06 10            ld b,16
 263+ 94AE D1           1 pop de
 264+ 94AF 7A           	ld a,d
 265+ 94B0 AE           	xor (hl)
 266+ 94B1 77           	ld (hl),a
 267+ 94B2 24           	inc h
 268+ 94B3 7C               ld a,h
 269+ 94B4 E6 07            and 7
 270+ 94B6 20 0C            jr nz,2F
 271+ 94B8 7D               ld a,l
 272+ 94B9 C6 20            add a,$20
 273+ 94BB 6F               ld l,a
 274+ 94BC 38 06            jr c,2F
 275+ 94BE 7C               ld a,h
 276+ 94BF D6 08            sub 8
 277+ 94C1 67               ld h,a
 278+ 94C2 18 00            jr 2F
 279+ 94C4 7C           2 ld a,h
 280+ 94C5 FE 58            cp $58
 281+ 94C7 28 02            jr z,3F
 282+ 94C9 10 E3            djnz 1B
 283+ 94CB ED 7B EC 89  3 ld sp,(Stack)
 284+ 94CF C9           	ret
 285+ 94D0
 286+ 94D0 ED 73 EC 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 287+ 94D4 FD F9        	ld sp,iy
 288+ 94D6
 289+ 94D6              ; >>>
 290+ 94D6
 291+ 94D6 06 10            ld b,16
 292+ 94D8 D1           1 pop de
 293+ 94D9 7B           	ld a,e
 294+ 94DA AE           	xor (hl)
 295+ 94DB 77           	ld (hl),a
 296+ 94DC 24           	inc h
 297+ 94DD 7C               ld a,h
 298+ 94DE E6 07            and 7
 299+ 94E0 20 0C            jr nz,2F
 300+ 94E2 7D               ld a,l
 301+ 94E3 C6 20            add a,$20
 302+ 94E5 6F               ld l,a
 303+ 94E6 38 06            jr c,2F
 304+ 94E8 7C               ld a,h
 305+ 94E9 D6 08            sub 8
 306+ 94EB 67               ld h,a
 307+ 94EC 18 00            jr 2F
 308+ 94EE 7C           2 ld a,h
 309+ 94EF FE 58            cp $58
 310+ 94F1 28 02            jr z,3F
 311+ 94F3 10 E3            djnz 1B
 312+ 94F5 ED 7B EC 89  3 ld sp,(Stack)
 313+ 94F9 C9           	ret
 314+ 94FA
 315+ 94FA              ; ---------------------------------------------------
 316+ 94FA
 317+ 94FA ED 73 EC 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 318+ 94FE FD F9        	ld sp,iy
 319+ 9500 06 08            ld b,8
 320+ 9502 D1           1 pop de
 321+ 9503 7A           	ld a,d
 322+ 9504 AE           	xor (hl)
 323+ 9505 77           	ld (hl),a
 324+ 9506 23           	inc hl
 325+ 9507 D1           	pop de
 326+ 9508 7B           	ld a,e
 327+ 9509 AE           	xor (hl)
 328+ 950A 77           	ld (hl),a
 329+ 950B 2B           	dec hl
 330+ 950C 24            	inc h
 331+ 950D 7C               ld a,h
 332+ 950E E6 07            and 7
 333+ 9510 20 0A            jr nz,2F
 334+ 9512 7D               ld a,l
 335+ 9513 C6 20            add a,$20
 336+ 9515 6F               ld l,a
 337+ 9516 38 04            jr c,2F
 338+ 9518 7C               ld a,h
 339+ 9519 D6 08            sub 8
 340+ 951B 67               ld h,a
 341+ 951C 7C           2 ld a,h
 342+ 951D FE 58            cp $58
 343+ 951F 28 20            jr z,4F
 344+ 9521 D1               pop de
 345+ 9522 7B           	ld a,e
 346+ 9523 AE           	xor (hl)
 347+ 9524 77           	ld (hl),a
 348+ 9525 23           	inc hl
 349+ 9526 7A           	ld a,d
 350+ 9527 AE           	xor (hl)
 351+ 9528 77           	ld (hl),a
 352+ 9529 2B           	dec hl
 353+ 952A 24           	inc h
 354+ 952B 7C               ld a,h
 355+ 952C E6 07            and 7
 356+ 952E 20 0A            jr nz,3F
 357+ 9530 7D               ld a,l
 358+ 9531 C6 20            add a,$20
 359+ 9533 6F               ld l,a
 360+ 9534 38 04            jr c,3F
 361+ 9536 7C               ld a,h
 362+ 9537 D6 08            sub 8
 363+ 9539 67               ld h,a
 364+ 953A 7C           3 ld a,h
 365+ 953B FE 58            cp $58
 366+ 953D 28 02            jr z,4F
 367+ 953F 10 C1            djnz 1B
 368+ 9541 ED 7B EC 89  4 ld sp,(Stack)
 369+ 9545 C9           	ret
 370+ 9546
 371+ 9546 ED 73 EC 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 372+ 954A FD F9        	ld sp,iy
 373+ 954C 06 08            ld b,8
 374+ 954E D1           1 pop de
 375+ 954F D1           	pop de
 376+ 9550 7B           	ld a,e
 377+ 9551 AE           	xor (hl)
 378+ 9552 77           	ld (hl),a
 379+ 9553 24            	inc h
 380+ 9554 7C               ld a,h
 381+ 9555 E6 07            and 7
 382+ 9557 20 0A            jr nz,2F
 383+ 9559 7D               ld a,l
 384+ 955A C6 20            add a,$20
 385+ 955C 6F               ld l,a
 386+ 955D 38 04            jr c,2F
 387+ 955F 7C               ld a,h
 388+ 9560 D6 08            sub 8
 389+ 9562 67               ld h,a
 390+ 9563 7C           2 ld a,h
 391+ 9564 FE 58            cp $58
 392+ 9566 28 1B            jr z,4F
 393+ 9568 D1               pop de
 394+ 9569 7A           	ld a,d
 395+ 956A AE           	xor (hl)
 396+ 956B 77           	ld (hl),a
 397+ 956C 24           	inc h
 398+ 956D 7C               ld a,h
 399+ 956E E6 07            and 7
 400+ 9570 20 0A            jr nz,3F
 401+ 9572 7D               ld a,l
 402+ 9573 C6 20            add a,$20
 403+ 9575 6F               ld l,a
 404+ 9576 38 04            jr c,3F
 405+ 9578 7C               ld a,h
 406+ 9579 D6 08            sub 8
 407+ 957B 67               ld h,a
 408+ 957C 7C           3 ld a,h
 409+ 957D FE 58            cp $58
 410+ 957F 28 02            jr z,4F
 411+ 9581 10 CB            djnz 1B
 412+ 9583 ED 7B EC 89  4 ld sp,(Stack)
 413+ 9587 C9           	ret
 414+ 9588
 415+ 9588 ED 73 EC 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 416+ 958C FD F9        	ld sp,iy
 417+ 958E 06 08            ld b,8
 418+ 9590 D1           1 pop de
 419+ 9591 7B           	ld a,e
 420+ 9592 AE           	xor (hl)
 421+ 9593 77           	ld (hl),a
 422+ 9594 23           	inc hl
 423+ 9595 7A           	ld a,d
 424+ 9596 AE           	xor (hl)
 425+ 9597 77           	ld (hl),a
 426+ 9598 2B           	dec hl
 427+ 9599 24             	inc h
 428+ 959A 7C               ld a,h
 429+ 959B E6 07            and 7
 430+ 959D 20 0A            jr nz,2F
 431+ 959F 7D               ld a,l
 432+ 95A0 C6 20            add a,$20
 433+ 95A2 6F               ld l,a
 434+ 95A3 38 04            jr c,2F
 435+ 95A5 7C               ld a,h
 436+ 95A6 D6 08            sub 8
 437+ 95A8 67               ld h,a
 438+ 95A9 7C           2 ld a,h
 439+ 95AA FE 58            cp $58
 440+ 95AC 28 21            jr z,4F
 441+ 95AE D1               pop de
 442+ 95AF 7A           	ld a,d
 443+ 95B0 AE           	xor (hl)
 444+ 95B1 77           	ld (hl),a
 445+ 95B2 23           	inc hl
 446+ 95B3 D1               pop de
 447+ 95B4 7B           	ld a,e
 448+ 95B5 AE           	xor (hl)
 449+ 95B6 77           	ld (hl),a
 450+ 95B7 2B           	dec hl
 451+ 95B8 24           	inc h
 452+ 95B9 7C               ld a,h
 453+ 95BA E6 07            and 7
 454+ 95BC 20 0A            jr nz,3F
 455+ 95BE 7D               ld a,l
 456+ 95BF C6 20            add a,$20
 457+ 95C1 6F               ld l,a
 458+ 95C2 38 04            jr c,3F
 459+ 95C4 7C               ld a,h
 460+ 95C5 D6 08            sub 8
 461+ 95C7 67               ld h,a
 462+ 95C8 7C           3 ld a,h
 463+ 95C9 FE 58            cp $58
 464+ 95CB 28 02            jr z,4F
 465+ 95CD 10 C1            djnz 1B
 466+ 95CF ED 7B EC 89  4 ld sp,(Stack)
 467+ 95D3 C9           	ret
 468+ 95D4
 469+ 95D4 ED 73 EC 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 470+ 95D8 FD F9        	ld sp,iy
 471+ 95DA 06 08            ld b,8
 472+ 95DC D1           1 pop de
 473+ 95DD 7B           	ld a,e
 474+ 95DE AE           	xor (hl)
 475+ 95DF 77           	ld (hl),a
 476+ 95E0 24            	inc h
 477+ 95E1 7C               ld a,h
 478+ 95E2 E6 07            and 7
 479+ 95E4 20 0A            jr nz,2F
 480+ 95E6 7D               ld a,l
 481+ 95E7 C6 20            add a,$20
 482+ 95E9 6F               ld l,a
 483+ 95EA 38 04            jr c,2F
 484+ 95EC 7C               ld a,h
 485+ 95ED D6 08            sub 8
 486+ 95EF 67               ld h,a
 487+ 95F0 7C           2 ld a,h
 488+ 95F1 FE 58            cp $58
 489+ 95F3 28 1C            jr z,4F
 490+ 95F5 D1               pop de
 491+ 95F6 7A           	ld a,d
 492+ 95F7 AE           	xor (hl)
 493+ 95F8 77           	ld (hl),a
 494+ 95F9 24           	inc h
 495+ 95FA 7C               ld a,h
 496+ 95FB E6 07            and 7
 497+ 95FD 20 0A            jr nz,3F
 498+ 95FF 7D               ld a,l
 499+ 9600 C6 20            add a,$20
 500+ 9602 6F               ld l,a
 501+ 9603 38 04            jr c,3F
 502+ 9605 7C               ld a,h
 503+ 9606 D6 08            sub 8
 504+ 9608 67               ld h,a
 505+ 9609 7C           3 ld a,h
 506+ 960A FE 58            cp $58
 507+ 960C 28 03            jr z,4F
 508+ 960E D1               pop de
 509+ 960F 10 CB            djnz 1B
 510+ 9611 ED 7B EC 89  4 ld sp,(Stack)
 511+ 9615 C9           	ret
 512+ 9616
 513+ 9616              ; ---------------------------------------------------
 514+ 9616              ;
 515+ 9616              ;   27/02/23
 516+ 9616              ;
 517+ 9616              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 518+ 9616              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 519+ 9616              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 520+ 9616
 521+ 9616 ED 73 EC 89  Pinta_Disparo ld (Stack),sp
 522+ 961A FD F9            ld sp,iy
 523+ 961C 06 03            ld b,3
 524+ 961E D1           1 pop de
 525+ 961F 7B               ld a,e
 526+ 9620 AE               xor (hl)
 527+ 9621 77               ld (hl),a
 528+ 9622 23               inc hl
 529+ 9623 7A               ld a,d
 530+ 9624 AE               xor (hl)
 531+ 9625 77               ld (hl),a
 532+ 9626 2B               dec hl
 533+ 9627
 534+ 9627 24               inc h
 535+ 9628 7C               ld a,h
 536+ 9629 E6 07            and 7
 537+ 962B 20 0A            jr nz,2F
 538+ 962D 7D               ld a,l
 539+ 962E C6 20            add a,$20
 540+ 9630 6F               ld l,a
 541+ 9631 38 04            jr c,2F
 542+ 9633 7C               ld a,h
 543+ 9634 D6 08            sub 8
 544+ 9636 67               ld h,a
 545+ 9637 7C           2 ld a,h
 546+ 9638 FE 58            cp $58
 547+ 963A 28 02            jr z,3F
 548+ 963C
 549+ 963C 10 E0            djnz 1B
 550+ 963E ED 7B EC 89  3 ld sp,(Stack)
 551+ 9642 C9               ret
 552+ 9643
# file closed: Rutinas_de_impresion_sprites.asm
1875  9643              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9643
   2+ 9643              ; ******************************************************************************************************************************************************************************************
   3+ 9643              ;
   4+ 9643              ;   20/05/23
   5+ 9643              ;
   6+ 9643              ;	Recompone_posicion_inicio
   7+ 9643              ;
   8+ 9643              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9643              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9643              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9643              ;	_ a una u otra rutina.
  12+ 9643
  13+ 9643              Recompone_posicion_inicio
  14+ 9643
  15+ 9643 2A 9E 89     	ld hl,(Posicion_inicio)
  16+ 9646 7D           	ld a,l
  17+ 9647 E6 1F        	and $1f
  18+ 9649 28 16        	jr z,1F
  19+ 964B
  20+ 964B FE 1F        	cp $1f
  21+ 964D 28 0D        	jr z,3F
  22+ 964F
  23+ 964F 21 B3 89     	ld hl,Ctrl_2
  24+ 9652 CB C6        	set 0,(hl)
  25+ 9654 2A 90 89     	ld hl,(Puntero_objeto)
  26+ 9657 22 DC 89     	ld (Repone_puntero_objeto),hl
  27+ 965A 18 08        	jr 2F
  28+ 965C
  29+ 965C CD 0A 98     3 call Mov_left
  30+ 965F 18 03        	jr 2F
  31+ 9661
  32+ 9661 CD E7 96     1 call Mov_right
  33+ 9664 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9667 22 90 89     	ld (Puntero_objeto),hl
  35+ 966A C9           	ret
  36+ 966B
  37+ 966B              ; ******************************************************************************************************************************************************************************************
  38+ 966B              ;
  39+ 966B              ;   27/05/23
  40+ 966B              ;
  41+ 966B              ;	Mov_down
  42+ 966B              ;
  43+ 966B              ; 	Mueve el Sprite X px hacia abajo.
  44+ 966B              ;
  45+ 966B              ;
  46+ 966B              Mov_down
  47+ 966B
  48+ 966B CD D5 96     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 966E              ;																	; _ repone (Puntero_objeto).
  50+ 966E 21 AE 89     	ld hl,Ctrl_0
  51+ 9671 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9673              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9673              ; 																	; _ en el caso de que no lo haya.
  54+ 9673 3A B8 89     	ld a,(Vel_down)
  55+ 9676 47           	ld b,a
  56+ 9677 2A 8E 89         ld hl,(Posicion_actual)
  57+ 967A CD 1A A0     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 967D E6 02        	and 2
  59+ 967F 28 17        	jr z,1F
  60+ 9681
  61+ 9681              ; Nos encontramos en el último tercio de pantalla.
  62+ 9681              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9681
  64+ 9681 7C           	ld a,h
  65+ 9682 FE 57        	cp $57
  66+ 9684 20 12        	jr nz,1F
  67+ 9686
  68+ 9686 7D           	ld a,l
  69+ 9687 C6 20        	add $20
  70+ 9689 30 0D        	jr nc,1F
  71+ 968B
  72+ 968B              ; ------------------------------
  73+ 968B              ;
  74+ 968B              ;	12/01/24
  75+ 968B
  76+ 968B              ;	call Reaparece_arriba
  77+ 968B CD 97 99     	call Reinicio
  78+ 968E
  79+ 968E              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 968E
  81+ 968E 3A FA 89     	ld a,(Ctrl_3)
  82+ 9691 CB CF        	set 1,a
  83+ 9693 32 FA 89     	ld (Ctrl_3),a
  84+ 9696
  85+ 9696 18 08        	jr 3F
  86+ 9698              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9698              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9698              ; ------------------------------
  89+ 9698
  90+ 9698 CD BA 92     1 call NextScan
  91+ 969B 22 8E 89     	ld (Posicion_actual),hl
  92+ 969E 10 DA            djnz 2B
  93+ 96A0 CD 38 A0     3 call Genera_coordenadas
  94+ 96A3 C9           	ret
  95+ 96A4
  96+ 96A4              ; ******************************************************************************************************************************************************************************************
  97+ 96A4              ;
  98+ 96A4              ;   27/05/23
  99+ 96A4              ;
 100+ 96A4              ;	Mov_up
 101+ 96A4              ;
 102+ 96A4              ; 	Mueve el Sprite hacia arriba.
 103+ 96A4              ;
 104+ 96A4              ;
 105+ 96A4              Mov_up
 106+ 96A4
 107+ 96A4 CD D5 96     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 96A7              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 96A7 21 AE 89     	ld hl,Ctrl_0
 110+ 96AA CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 96AC              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 96AC              ; 																		; _ en el caso de que no lo haya.
 113+ 96AC 3A B7 89     	ld a,(Vel_up)
 114+ 96AF 47           	ld b,a
 115+ 96B0 2A 8E 89     	ld hl,(Posicion_actual)
 116+ 96B3 CD 1A A0     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 96B6 A7           	and a
 118+ 96B7 20 10        	jr nz,1F
 119+ 96B9
 120+ 96B9              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 96B9              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 96B9
 123+ 96B9 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 96BA FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 96BC 20 0B            jr nz,1F
 126+ 96BE 7D               ld a,l
 127+ 96BF D6 20            sub $20
 128+ 96C1 30 06            jr nc,1F
 129+ 96C3 25               dec h
 130+ 96C4
 131+ 96C4              ; -----------------------------
 132+ 96C4 CD 78 99         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 96C7              ;	call Reinicio
 134+ 96C7              ; -----------------------------
 135+ 96C7
 136+ 96C7 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 96C9 CD C9 92     1 call PreviousScan
 138+ 96CC 22 8E 89     	ld (Posicion_actual),hl
 139+ 96CF 10 E2            djnz 3B
 140+ 96D1 CD 38 A0     2 call Genera_coordenadas
 141+ 96D4 C9           	ret
 142+ 96D5
 143+ 96D5              ; -----------------------------
 144+ 96D5              ;
 145+ 96D5              ;	27/5/23
 146+ 96D5              ;
 147+ 96D5              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 96D5              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 96D5              ;
 150+ 96D5              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 96D5              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 96D5              ;
 153+ 96D5              ;	Modifica: A y (Puntero_objeto).
 154+ 96D5
 155+ 96D5 3A B3 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 96D8 CB 47        	bit 0,a
 157+ 96DA C8           	ret z
 158+ 96DB CB 87        	res 0,a
 159+ 96DD 32 B3 89     	ld (Ctrl_2),a
 160+ 96E0 2A DC 89     	ld hl,(Repone_puntero_objeto)
 161+ 96E3 22 90 89     	ld (Puntero_objeto),hl
 162+ 96E6 C9           	ret
 163+ 96E7
 164+ 96E7              ; ******************************************************************************************************************************************************************************************
 165+ 96E7              ;
 166+ 96E7              ;	19/10/22
 167+ 96E7              ;
 168+ 96E7              ;	Mov_right.
 169+ 96E7              ;
 170+ 96E7              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 96E7              ;
 172+ 96E7
 173+ 96E7 3A AE 89     Mov_right ld a,(Ctrl_0)
 174+ 96EA CB 77        	bit 6,a
 175+ 96EC 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 96EE
 177+ 96EE CD 26 99     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 96F1 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 96F2
 180+ 96F2 21 AE 89     	ld hl,Ctrl_0
 181+ 96F5 CB E6        	set 4,(hl)
 182+ 96F7 18 52        	jr 8F
 183+ 96F9
 184+ 96F9 21 AE 89     10 ld hl,Ctrl_0
 185+ 96FC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 96FE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 96FE              ; 																	; _ en el caso de que no lo haya.
 188+ 96FE 3A 92 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9701 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9703 20 46        	jr nz,8F
 191+ 9705
 192+ 9705 3A 94 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9708 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9709 28 40        	jr z,8F
 195+ 970B
 196+ 970B              ; ---------- ---------- ----------
 197+ 970B              ;
 198+ 970B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 970B
 200+ 970B 3A B6 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 970E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9710 28 11        	jr z,1F
 203+ 9712 38 06        	jr c,6F
 204+ 9714 FE 04        	cp 4
 205+ 9716 28 14        	jr z,7F
 206+ 9718 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 971A
 208+ 971A              ; ---------- ---------- ----------
 209+ 971A              ;
 210+ 971A              ; Perfiles de velocidad
 211+ 971A              ;
 212+ 971A
 213+ 971A 3A 94 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 971D FE FE        	cp $fe
 215+ 971F 20 2A        	jr nz,8F
 216+ 9721 18 10        	jr 3F
 217+ 9723 3A 94 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9726 FE FD        	cp $fd
 219+ 9728 20 21        	jr nz,8F
 220+ 972A 18 07        	jr 3F
 221+ 972C 3A 94 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 972F FE FB        	cp $fb
 223+ 9731 20 18        	jr nz,8F
 224+ 9733
 225+ 9733              ; ---------- ---------- ----------
 226+ 9733
 227+ 9733              3
 228+ 9733 CD 66 99     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9736              ;	call Reinicio
 230+ 9736
 231+ 9736              ; ---------- ---------- ----------
 232+ 9736              ;
 233+ 9736              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9736
 235+ 9736 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9738 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9739 CD 52 97     	call DESPLZ_DER
 238+ 973C C1           	pop bc
 239+ 973D 10 F9        	djnz 5B
 240+ 973F 2A 8E 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9742 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9743 22 8E 89     	ld (Posicion_actual),hl
 243+ 9746 CD 38 A0     	call Genera_coordenadas
 244+ 9749 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 974B
 246+ 974B              ; ---------- ---------- ----------
 247+ 974B
 248+ 974B 2A 8E 89     8 ld hl,(Posicion_actual)
 249+ 974E CD 52 97     	call DESPLZ_DER
 250+ 9751 C9           2 ret
 251+ 9752
 252+ 9752              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9752              ;
 254+ 9752              ;	22/9/22
 255+ 9752              ;
 256+ 9752
 257+ 9752 CD 61 97     DESPLZ_DER call Desplaza_derecha
 258+ 9755 CD AD 97         call modifica_parametros_1er_DESPLZ_2
 259+ 9758 CD D6 97         call Ciclo_completo
 260+ 975B 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 975E CB FE        	set 7,(hl)
 262+ 9760 C9           	ret
 263+ 9761
 264+ 9761              ; ******************************************************************************************************************************************************************************************
 265+ 9761              ;	15/02/23
 266+ 9761              ;
 267+ 9761
 268+ 9761 3A B6 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9764 47           	ld b,a
 270+ 9765 2A 9A 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9768 23           1 inc hl
 272+ 9769 23           	inc hl
 273+ 976A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 976C 22 9A 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 976F CD 85 8C     	call Extrae_address
 276+ 9772 22 90 89     	ld (Puntero_objeto),hl
 277+ 9775
 278+ 9775              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9775
 280+ 9775              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9775              ; Cuántos movimientos hemos hecho ??
 282+ 9775              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9775
 284+ 9775 2A 96 89     7 ld hl,(Indice_Sprite_der)
 285+ 9778 EB           	ex de,hl
 286+ 9779 A7           	and a
 287+ 977A ED 52        	sbc hl,de
 288+ 977C CB 3D        	srl l
 289+ 977E 3E 08        6 ld a,8
 290+ 9780 95           	sub l
 291+ 9781 30 1E        	jr nc,3F
 292+ 9783
 293+ 9783              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9783              ; B="0".
 295+ 9783
 296+ 9783 04           4 inc b
 297+ 9784 3C           	inc a
 298+ 9785 20 FC        	jr nz,4B
 299+ 9787 78           	ld a,b
 300+ 9788 08           	ex af,af
 301+ 9789 2A 96 89     	ld hl,(Indice_Sprite_der)
 302+ 978C 23           5 inc hl
 303+ 978D 23           	inc hl
 304+ 978E 10 FC        	djnz 5B
 305+ 9790 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9793 CD 85 8C     	call Extrae_address
 307+ 9796 22 90 89     	ld (Puntero_objeto),hl
 308+ 9799
 309+ 9799              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9799              ; _(Posicion_actual).
 311+ 9799
 312+ 9799 21 8E 89     	ld hl,Posicion_actual
 313+ 979C 34           	inc (hl)
 314+ 979D 08               ex af,af
 315+ 979E 6F           	ld l,a
 316+ 979F 18 DD        	jr 6B
 317+ 97A1
 318+ 97A1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 97A1
 320+ 97A1 47           3 ld b,a
 321+ 97A2 2A 98 89     	ld hl,(Indice_Sprite_izq)
 322+ 97A5 23           2 inc hl
 323+ 97A6 23           	inc hl
 324+ 97A7 10 FC        	djnz 2B
 325+ 97A9 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 97AC C9           8 ret
 327+ 97AD
 328+ 97AD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 97AD              ;
 330+ 97AD              ;	24/7/22
 331+ 97AD              ;
 332+ 97AD              ;	modifica_parametros_1er_DESPLZ_2
 333+ 97AD              ;
 334+ 97AD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 97AD              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 97AD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 97AD
 338+ 97AD 3A 94 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 97B0 A7           	and a
 340+ 97B1 20 1F        	jr nz,1F
 341+ 97B3 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 97B5 32 94 89         ld (CTRL_DESPLZ),a
 343+ 97B8
 344+ 97B8 21 8D 89     	ld hl,Columns
 345+ 97BB 34           	inc (hl)
 346+ 97BC 3A A0 89     	ld a,(Cuad_objeto)
 347+ 97BF E6 01        	and 1
 348+ 97C1 28 0F        	jr z,1F
 349+ 97C3 2A 8E 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 97C6 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 97C7 22 8E 89     	ld (Posicion_actual),hl
 352+ 97CA CD 38 A0     	call Genera_coordenadas
 353+ 97CD CD 32 99     	call Inc_CTRL_DESPLZ
 354+ 97D0 18 03        	jr 2F
 355+ 97D2 CD 32 99     1 call Inc_CTRL_DESPLZ
 356+ 97D5 C9           2 ret
 357+ 97D6
 358+ 97D6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 97D6              ;
 360+ 97D6              ;	24/7/22
 361+ 97D6              ;
 362+ 97D6              ;	Ciclo_completo.
 363+ 97D6              ;
 364+ 97D6              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 97D6              ;
 366+ 97D6              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 97D6              ; 	Decrementamos (Columns).
 368+ 97D6              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 97D6              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 97D6
 371+ 97D6
 372+ 97D6 3A 94 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 97D9 FE FF        	cp $ff
 374+ 97DB 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 97DD E6 F0        	and $f0
 376+ 97DF 20 28        	jr nz,3F
 377+ 97E1
 378+ 97E1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 97E1
 380+ 97E1 3A 94 89     	ld a,(CTRL_DESPLZ)
 381+ 97E4 47           	ld b,a
 382+ 97E5 3E F8        	ld a,$f8
 383+ 97E7 80           	add b
 384+ 97E8 32 94 89     	ld (CTRL_DESPLZ),a
 385+ 97EB 18 1C        	jr 3F
 386+ 97ED 21 8D 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 97F0 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 97F1 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 97F2 32 94 89     	ld (CTRL_DESPLZ),a
 390+ 97F5 3A A0 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 97F8 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 97FA 20 0A        	jr nz,2F
 393+ 97FC 2A 8E 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 97FF 23           	inc hl
 395+ 9800 22 8E 89     	ld (Posicion_actual),hl
 396+ 9803 CD 38 A0     	call Genera_coordenadas
 397+ 9806
 398+ 9806              ; Inicia el puntero de Sprite.
 399+ 9806
 400+ 9806 CD 9A 8C     2 call Inicia_puntero_objeto_der
 401+ 9809 C9           3 ret
 402+ 980A
 403+ 980A              ; ******************************************************************************************************************************************************************************************
 404+ 980A              ;
 405+ 980A              ;	15/02/23
 406+ 980A              ;
 407+ 980A              ;	Mov_left.
 408+ 980A              ;
 409+ 980A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 980A              ;
 411+ 980A              Mov_left
 412+ 980A
 413+ 980A 21 AE 89     	ld hl,Ctrl_0
 414+ 980D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 980F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 980F              ; 																	; _ en el caso de que no lo haya.
 417+ 980F 3A AE 89     	ld a,(Ctrl_0)
 418+ 9812 CB 77        	bit 6,a
 419+ 9814 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9816
 421+ 9816 CD 2C 99     	call Stop_Amadeus_left
 422+ 9819 C8           	ret z
 423+ 981A 20 4A        	jr nz,8F
 424+ 981C
 425+ 981C 3A 92 89     11 ld a,(Coordenada_X)
 426+ 981F A7           	and a
 427+ 9820 20 44        	jr nz,8F
 428+ 9822
 429+ 9822 3A 94 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9825 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9826 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9828
 433+ 9828              ; ---------- ---------- ----------
 434+ 9828
 435+ 9828 3A B5 89     	ld a,(Vel_left)
 436+ 982B FE 02        	cp 2
 437+ 982D 28 0F        	jr z,1F
 438+ 982F 38 04        	jr c,6F
 439+ 9831 FE 04        	cp 4
 440+ 9833 28 12        	jr z,7F
 441+ 9835
 442+ 9835              ; ---------- ---------- ----------
 443+ 9835
 444+ 9835 3A 94 89     6 ld a,(CTRL_DESPLZ)
 445+ 9838 FE F8        	cp $f8
 446+ 983A 20 2A        	jr nz,8F
 447+ 983C 18 10        	jr 4F
 448+ 983E 3A 94 89     1 ld a,(CTRL_DESPLZ)
 449+ 9841 FE F9        	cp $f9
 450+ 9843 20 21        	jr nz,8F
 451+ 9845 18 07        	jr 4F
 452+ 9847 3A 94 89     7 ld a,(CTRL_DESPLZ)
 453+ 984A FE FB        	cp $fb
 454+ 984C 20 18        	jr nz,8F
 455+ 984E
 456+ 984E              ; ---------- ---------- ----------
 457+ 984E
 458+ 984E              4
 459+ 984E CD 54 99     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9851              ;	call Reinicio
 461+ 9851
 462+ 9851              ; ---------- ---------- ----------
 463+ 9851
 464+ 9851 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9853 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9854
 467+ 9854              ;	ld hl,(Indice_Sprite_izq)
 468+ 9854              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9854
 470+ 9854 CD 6D 98     	call DESPLZ_IZQ
 471+ 9857 C1           	pop bc
 472+ 9858 10 F9        	djnz 5B
 473+ 985A 2A 8E 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 985D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 985E 22 8E 89     	ld (Posicion_actual),hl
 476+ 9861 CD 38 A0     	call Genera_coordenadas
 477+ 9864 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9866
 479+ 9866              ; ---------- ---------- ----------
 480+ 9866
 481+ 9866              ; Movemos, no hay recolocación.
 482+ 9866
 483+ 9866 2A 8E 89     8 ld hl,(Posicion_actual)
 484+ 9869 CD 6D 98     	call DESPLZ_IZQ
 485+ 986C C9           2 ret
 486+ 986D
 487+ 986D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 986D              ;
 489+ 986D              ;	22/9/22
 490+ 986D
 491+ 986D              DESPLZ_IZQ
 492+ 986D
 493+ 986D CD 7C 98     	call Desplaza_izquierda
 494+ 9870 CD C8 98         call modifica_parametros_1er_DESPLZ
 495+ 9873 CD F0 98     	call Ciclo_completo_2
 496+ 9876 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9879 CB BE        	res 7,(hl)
 498+ 987B C9           	ret
 499+ 987C
 500+ 987C              Desplaza_izquierda
 501+ 987C
 502+ 987C 3A B5 89     	ld a,(Vel_left)
 503+ 987F 47           	ld b,a
 504+ 9880 2A 9C 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9883 23           1 inc hl
 506+ 9884 23           	inc hl
 507+ 9885 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9887 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 988A CD 85 8C     	call Extrae_address
 510+ 988D 22 90 89     	ld (Puntero_objeto),hl
 511+ 9890
 512+ 9890              ; Modifica (Puntero_DESPLZ_der).
 513+ 9890
 514+ 9890              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9890              ; Cuántos movimientos hemos hecho ??
 516+ 9890              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9890
 518+ 9890 2A 98 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9893 EB           	ex de,hl
 520+ 9894 A7           	and a
 521+ 9895 ED 52        	sbc hl,de
 522+ 9897 CB 3D        	srl l
 523+ 9899 3E 08        6 ld a,8
 524+ 989B 95           	sub l
 525+ 989C 30 1E        	jr nc,3F
 526+ 989E
 527+ 989E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 989E              ; B="0".
 529+ 989E
 530+ 989E 04           4 inc b
 531+ 989F 3C           	inc a
 532+ 98A0 20 FC        	jr nz,4B
 533+ 98A2 78           	ld a,b
 534+ 98A3 08           	ex af,af
 535+ 98A4 2A 98 89     	ld hl,(Indice_Sprite_izq)
 536+ 98A7 23           5 inc hl
 537+ 98A8 23           	inc hl
 538+ 98A9 10 FC        	djnz 5B
 539+ 98AB 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 98AE CD 85 8C     	call Extrae_address
 541+ 98B1 22 90 89     	ld (Puntero_objeto),hl
 542+ 98B4
 543+ 98B4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 98B4              ; _(Posicion_actual).
 545+ 98B4
 546+ 98B4 21 8E 89     	ld hl,Posicion_actual
 547+ 98B7 35           	dec (hl)
 548+ 98B8 08           	ex af,af
 549+ 98B9 6F           	ld l,a
 550+ 98BA 18 DD        	jr 6B
 551+ 98BC
 552+ 98BC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 98BC
 554+ 98BC 47           3 ld b,a
 555+ 98BD 2A 96 89     	ld hl,(Indice_Sprite_der)
 556+ 98C0 23           2 inc hl
 557+ 98C1 23           	inc hl
 558+ 98C2 10 FC        	djnz 2B
 559+ 98C4 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 560+ 98C7 C9           8 ret
 561+ 98C8
 562+ 98C8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 98C8              ;
 564+ 98C8              ;	modifica_parametros_1er_DESPLZ
 565+ 98C8              ;
 566+ 98C8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 98C8              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 98C8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 98C8
 570+ 98C8 3A 94 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 98CB A7           	and a
 572+ 98CC 20 1E        	jr nz,1F
 573+ 98CE 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 98CF 32 94 89         ld (CTRL_DESPLZ),a
 575+ 98D2 21 8D 89     	ld hl,Columns
 576+ 98D5 34           	inc (hl)
 577+ 98D6 3A A0 89     	ld a,(Cuad_objeto)
 578+ 98D9 E6 01        	and 1
 579+ 98DB 20 0F        	jr nz,1F
 580+ 98DD 2A 8E 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 98E0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 98E1 22 8E 89     	ld (Posicion_actual),hl
 583+ 98E4 CD 38 A0     	call Genera_coordenadas
 584+ 98E7 CD 43 99     	call Dec_CTRL_DESPLZ
 585+ 98EA 18 03        	jr 2F
 586+ 98EC CD 43 99     1 call Dec_CTRL_DESPLZ
 587+ 98EF C9           2 ret
 588+ 98F0
 589+ 98F0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 98F0
 591+ 98F0 3A 94 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 98F3 FE F7        	cp $f7
 593+ 98F5 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 98F7 30 2C        	jr nc,3F
 595+ 98F9
 596+ 98F9              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 98F9
 598+ 98F9 06 00        	ld b,0
 599+ 98FB 04           4 inc b
 600+ 98FC 3C           	inc a
 601+ 98FD FE F7        	cp $f7
 602+ 98FF 20 FA        	jr nz,4B
 603+ 9901 3E FF        	ld a,$ff
 604+ 9903 90           	sub b
 605+ 9904 32 94 89     	ld (CTRL_DESPLZ),a
 606+ 9907 18 1C        	jr 3F
 607+ 9909
 608+ 9909              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9909
 610+ 9909 21 8D 89     1 ld hl,Columns
 611+ 990C 35           	dec (hl)
 612+ 990D AF           	xor a
 613+ 990E 32 94 89     	ld (CTRL_DESPLZ),a
 614+ 9911 3A A0 89     	ld a,(Cuad_objeto)
 615+ 9914 E6 01        	and 1
 616+ 9916 28 0A        	jr z,2F
 617+ 9918 2A 8E 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 991B 2B           	dec hl
 619+ 991C 22 8E 89     	ld (Posicion_actual),hl
 620+ 991F CD 38 A0     	call Genera_coordenadas
 621+ 9922
 622+ 9922              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9922
 624+ 9922 CD AD 8C     2 call Inicia_puntero_objeto_izq
 625+ 9925 C9           3 ret
 626+ 9926
 627+ 9926              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9926              ;
 629+ 9926              ;	19/10/22
 630+ 9926              ;
 631+ 9926              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9926              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9926
 634+ 9926 3A 92 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9929 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 992B C9           	ret
 637+ 992C
 638+ 992C              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 992C              ;
 640+ 992C              ;	19/10/22
 641+ 992C              ;
 642+ 992C              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 992C              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 992C
 645+ 992C 3A 92 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 992F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9931 C9           	ret
 648+ 9932
 649+ 9932              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9932              ;
 651+ 9932              ;	24/7/22
 652+ 9932              ;
 653+ 9932              ;	Inc_CTRL_DESPLZ
 654+ 9932              ;
 655+ 9932              ;
 656+ 9932              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9932
 658+ 9932 21 94 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9935 3A B6 89     	ld a,(Vel_right)
 660+ 9938 A7           	and a
 661+ 9939 28 06        	jr z,1F
 662+ 993B 47           	ld b,a
 663+ 993C 34           3 inc (hl)
 664+ 993D 10 FD        	djnz 3B
 665+ 993F 18 01        	jr 2F
 666+ 9941 34           1 inc (hl)
 667+ 9942 C9           2 ret
 668+ 9943
 669+ 9943              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9943              ;
 671+ 9943              ;	5/2/23
 672+ 9943              ;
 673+ 9943              ;	Dec_CTRL_DESPLZ
 674+ 9943              ;
 675+ 9943              ;
 676+ 9943              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9943
 678+ 9943 21 94 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9946 3A B5 89     	ld a,(Vel_left)
 680+ 9949 A7           	and a
 681+ 994A 28 06        	jr z,1F
 682+ 994C 47           	ld b,a
 683+ 994D 35           3 dec (hl)
 684+ 994E 10 FD        	djnz 3B
 685+ 9950 18 01        	jr 2F
 686+ 9952 35           1 dec (hl)
 687+ 9953 C9           2 ret
 688+ 9954
 689+ 9954              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9954
 691+ 9954 2A 8E 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9957 01 1F 00     	ld bc,31
 693+ 995A A7           	and a
 694+ 995B ED 4A        	adc hl,bc
 695+ 995D 22 8E 89     	ld (Posicion_actual),hl
 696+ 9960 21 AE 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9963 CB C6        	set 0,(hl)
 698+ 9965 C9           	ret
 699+ 9966
 700+ 9966              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9966
 702+ 9966 2A 8E 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9969 01 1F 00     	ld bc,31
 704+ 996C A7           	and a
 705+ 996D ED 42        	sbc hl,bc
 706+ 996F 22 8E 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9972 21 AE 89     	ld hl,Ctrl_0
 708+ 9975 CB CE        	set 1,(hl)
 709+ 9977 C9           	ret
 710+ 9978
 711+ 9978              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9978
 713+ 9978 24           Reaparece_abajo inc h
 714+ 9979 01 E0 17     	ld bc,$17e0
 715+ 997C A7           	and a
 716+ 997D ED 4A        	adc hl,bc
 717+ 997F 22 8E 89     	ld (Posicion_actual),hl
 718+ 9982 21 AE 89     	ld hl,Ctrl_0
 719+ 9985 CB D6        	set 2,(hl)
 720+ 9987 C9           	ret
 721+ 9988
 722+ 9988              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9988
 724+ 9988 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 998B A7           	and a
 726+ 998C ED 42        	sbc hl,bc
 727+ 998E 22 8E 89     	ld (Posicion_actual),hl
 728+ 9991 21 AE 89     	ld hl,Ctrl_0
 729+ 9994 CB DE        	set 3,(hl)
 730+ 9996 C9           	ret
 731+ 9997
 732+ 9997              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9997              ;
 734+ 9997              ;	15/07/23
 735+ 9997
 736+ 9997              Reinicio
 737+ 9997
 738+ 9997              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9997
 740+ 9997 AF           	xor a
 741+ 9998 21 D3 89     	ld hl,Puntero_indice_mov_bucle
 742+ 999B CD B9 99     	call Limpia_contenido_hl
 743+ 999E
 744+ 999E 21 8E 89     	ld hl,Posicion_actual
 745+ 99A1 CD B9 99     	call Limpia_contenido_hl
 746+ 99A4
 747+ 99A4 CD EC 8D     	call Inicializa_Puntero_indice_mov
 748+ 99A7 CD 85 9A     	call Inicia_Puntero_mov
 749+ 99AA
 750+ 99AA 21 D5 89     	ld hl,Incrementa_puntero
 751+ 99AD 06 05        	ld b,5
 752+ 99AF 77           1 ld (hl),a
 753+ 99B0 23           	inc hl
 754+ 99B1 10 FC        	djnz 1B
 755+ 99B3
 756+ 99B3 21 B3 89     	ld hl,Ctrl_2
 757+ 99B6 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 99B8
 759+ 99B8 C9           	ret
 760+ 99B9
 761+ 99B9 77           Limpia_contenido_hl	ld (hl),a
 762+ 99BA 23           	inc hl
 763+ 99BB 77           	ld (hl),a
 764+ 99BC C9           	ret
 765+ 99BD
 766+ 99BD
# file closed: Direcciones.asm
1876  99BD              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 99BD              ; ----- ----- ----- ----- -----
   2+ 99BD              ;
   3+ 99BD              ;   28/12/23
   4+ 99BD
   5+ 99BD              Movimiento
   6+ 99BD
   7+ 99BD              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 99BD
   9+ 99BD 3A B3 89         ld a,(Ctrl_2)
  10+ 99C0 CB 57            bit 2,a
  11+ 99C2 20 1B            jr nz, Desplazamiento_iniciado
  12+ 99C4
  13+ 99C4 2A D1 89         ld hl,(Puntero_mov)
  14+ 99C7 7E               ld a,(hl)
  15+ 99C8
  16+ 99C8              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 99C8
  18+ 99C8              Inicia_desplazamiento.
  19+ 99C8
  20+ 99C8              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 99C8
  22+ 99C8 CD BB 9A         call Ajusta_velocidad_desplazamiento
  23+ 99CB
  24+ 99CB              ; Iniciamos (Repetimos_mov).
  25+ 99CB
  26+ 99CB 7E               ld a,(hl)
  27+ 99CC E6 0F            and $0f
  28+ 99CE 32 D7 89         ld (Repetimos_desplazamiento),a
  29+ 99D1 32 D8 89         ld (Repetimos_desplazamiento_backup),a
  30+ 99D4
  31+ 99D4              ; Iniciamos (Cola_de_desplazamiento).
  32+ 99D4
  33+ 99D4 23               inc hl
  34+ 99D5 7E               ld a,(hl)
  35+ 99D6 32 DA 89         ld (Cola_de_desplazamiento),a
  36+ 99D9 2B               dec hl
  37+ 99DA
  38+ 99DA 21 B3 89         ld hl,Ctrl_2
  39+ 99DD CB D6            set 2,(hl)
  40+ 99DF
  41+ 99DF              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 99DF              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 99DF
  44+ 99DF              Desplazamiento_iniciado
  45+ 99DF
  46+ 99DF CD 8F 9A         call Aplica_desplazamiento
  47+ 99E2
  48+ 99E2              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 99E2
  50+ 99E2 3A FA 89         ld a,(Ctrl_3)
  51+ 99E5 CB 4F            bit 1,a
  52+ 99E7 C0               ret nz
  53+ 99E8
  54+ 99E8 21 D7 89     3 ld hl,Repetimos_desplazamiento
  55+ 99EB 35               dec (hl)
  56+ 99EC C0               ret nz
  57+ 99ED
  58+ 99ED              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 99ED              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 99ED              ; Analiza (Cola_de_desplazamiento).
  61+ 99ED
  62+ 99ED 3A DA 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 99F0 A7               and a
  64+ 99F1 CC E4 9A         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 99F4 28 30            jr z,Reinicia_el_movimiento
  66+ 99F6
  67+ 99F6 FE FF            cp $ff
  68+ 99F8 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 99FA
  70+ 99FA FE FE            cp $fe
  71+ 99FC CC 69 9A         call z,Fijamos_bucle
  72+ 99FF 28 25            jr z,Reinicia_el_movimiento
  73+ 9A01
  74+ 9A01 FE FD            cp $fd
  75+ 9A03 20 11            jr nz,1F
  76+ 9A05
  77+ 9A05              ; ---
  78+ 9A05              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9A05
  80+ 9A05 3A B3 89         ld a,(Ctrl_2)
  81+ 9A08 CB 5F            bit 3,a
  82+ 9A0A 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9A0C
  84+ 9A0C              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9A0C
  86+ 9A0C 21 B3 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9A0F CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9A11
  89+ 9A11 CD 7A 9A         call Inicia_Repetimos_movimiento
  90+ 9A14 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9A16              ; ---
  92+ 9A16
  93+ 9A16 FE 01        1 cp 1
  94+ 9A18 CA 53 9A         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9A1B
  96+ 9A1B 3D               dec a
  97+ 9A1C 32 DA 89         ld (Cola_de_desplazamiento),a
  98+ 9A1F
  99+ 9A1F 3A D8 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9A22 32 D7 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9A25              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9A25 C9               ret
 103+ 9A26
 104+ 9A26              Reinicia_el_movimiento
 105+ 9A26
 106+ 9A26 3A B3 89         ld a,(Ctrl_2)
 107+ 9A29 CB 5F            bit 3,a
 108+ 9A2B 28 1B            jr z,2F
 109+ 9A2D
 110+ 9A2D              ; (Cola_de_desplazamiento)="254".
 111+ 9A2D
 112+ 9A2D 21 D9 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9A30 35               dec (hl)
 114+ 9A31 20 15            jr nz,2F
 115+ 9A33
 116+ 9A33              ; Fin de las repeticiones del último movimiento.
 117+ 9A33
 118+ 9A33 21 B3 89         ld hl,Ctrl_2
 119+ 9A36 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9A38
 121+ 9A38 2A D1 89         ld hl,(Puntero_mov)
 122+ 9A3B 23               inc hl
 123+ 9A3C 23               inc hl
 124+ 9A3D 23               inc hl
 125+ 9A3E 22 D1 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9A41              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9A41 7E               ld a,(hl)
 128+ 9A42 32 DA 89         ld (Cola_de_desplazamiento),a
 129+ 9A45
 130+ 9A45 C3 ED 99         jp Cola
 131+ 9A48
 132+ 9A48 CD 85 9A     2 call Inicia_Puntero_mov
 133+ 9A4B
 134+ 9A4B 21 B3 89         ld hl,Ctrl_2
 135+ 9A4E CB 96            res 2,(hl)
 136+ 9A50
 137+ 9A50 C3 BD 99         jp Movimiento
 138+ 9A53
 139+ 9A53              Siguiente_desplazamiento
 140+ 9A53
 141+ 9A53              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9A53              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9A53
 144+ 9A53 21 B3 89         ld hl,Ctrl_2
 145+ 9A56 CB 96            res 2,(hl)
 146+ 9A58
 147+ 9A58 2A D1 89         ld hl,(Puntero_mov)
 148+ 9A5B 23               inc hl
 149+ 9A5C 23               inc hl
 150+ 9A5D 22 D1 89         ld (Puntero_mov),hl
 151+ 9A60
 152+ 9A60 7E               ld a,(hl)
 153+ 9A61 A7               and a
 154+ 9A62 CC E4 9A         call z,Incrementa_Puntero_indice_mov
 155+ 9A65 CA 26 9A         jp z,Reinicia_el_movimiento
 156+ 9A68
 157+ 9A68 C9               ret
 158+ 9A69
 159+ 9A69              ; Subrutinas -----------------------------------------
 160+ 9A69              ; ---------- --------- --------- ---------- ----------
 161+ 9A69              ;
 162+ 9A69              ;   24/07/23
 163+ 9A69              ;
 164+ 9A69              ;   Fijamos_bucle
 165+ 9A69              ;
 166+ 9A69              ;
 167+ 9A69
 168+ 9A69              Fijamos_bucle
 169+ 9A69
 170+ 9A69 3A D5 89         ld a,(Incrementa_puntero)
 171+ 9A6C 3C               inc a
 172+ 9A6D 32 D6 89         ld (Incrementa_puntero_backup),a
 173+ 9A70
 174+ 9A70 CD E4 9A         call Incrementa_Puntero_indice_mov
 175+ 9A73 2A CF 89         ld hl,(Puntero_indice_mov)
 176+ 9A76 22 D3 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9A79 C9               ret
 178+ 9A7A
 179+ 9A7A              ; ---------- --------- --------- ---------- ----------
 180+ 9A7A              ;
 181+ 9A7A              ;   07/7/23
 182+ 9A7A              ;
 183+ 9A7A              ;   Inicia_Repetimos_movimiento
 184+ 9A7A              ;
 185+ 9A7A              ;
 186+ 9A7A
 187+ 9A7A              Inicia_Repetimos_movimiento
 188+ 9A7A
 189+ 9A7A              ; Iniciamos (Repetimos_movimiento).
 190+ 9A7A
 191+ 9A7A DD 2A D1 89      ld ix,(Puntero_mov)
 192+ 9A7E DD 7E 02         ld a,(ix+2)
 193+ 9A81 32 D9 89         ld (Repetimos_movimiento),a
 194+ 9A84
 195+ 9A84 C9               ret
 196+ 9A85
 197+ 9A85              ; ---------- --------- --------- ---------- ----------
 198+ 9A85              ;
 199+ 9A85              ;   26/6/23
 200+ 9A85              ;
 201+ 9A85              ;   Inicia_Puntero_mov
 202+ 9A85              ;
 203+ 9A85              ;
 204+ 9A85
 205+ 9A85 2A CF 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9A88 CD 85 8C         call Extrae_address
 207+ 9A8B 22 D1 89         ld (Puntero_mov),hl
 208+ 9A8E C9               ret
 209+ 9A8F
 210+ 9A8F              ; ---------- --------- --------- ---------- ----------
 211+ 9A8F              ;
 212+ 9A8F              ;   27/06/23
 213+ 9A8F              ;
 214+ 9A8F              ;   Aplica_movimiento.
 215+ 9A8F
 216+ 9A8F              Aplica_desplazamiento
 217+ 9A8F
 218+ 9A8F              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9A8F
 220+ 9A8F 2A D1 89         ld hl, (Puntero_mov)
 221+ 9A92
 222+ 9A92 7E               ld a,(hl)
 223+ 9A93 E6 F0            and $f0
 224+ 9A95 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9A96
 226+ 9A96 CB 7E            bit 7,(hl)
 227+ 9A98 28 03            jr z,1F
 228+ 9A9A CD A4 96         call Mov_up
 229+ 9A9D 2A D1 89     1 ld hl, (Puntero_mov)
 230+ 9AA0 CB 76            bit 6,(hl)
 231+ 9AA2 28 03            jr z,2F
 232+ 9AA4 CD 6B 96         call Mov_down
 233+ 9AA7
 234+ 9AA7              ; Se ha aplicado reinicio ???
 235+ 9AA7              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9AA7
 237+ 9AA7              ;    ld a,(Ctrl_3)
 238+ 9AA7              ;    bit 1,a
 239+ 9AA7              ;    ret nz
 240+ 9AA7
 241+ 9AA7 2A D1 89     2 ld hl, (Puntero_mov)
 242+ 9AAA CB 6E            bit 5,(hl)
 243+ 9AAC 28 03            jr z,3F
 244+ 9AAE CD 0A 98         call Mov_left
 245+ 9AB1 2A D1 89     3 ld hl, (Puntero_mov)
 246+ 9AB4 CB 66            bit 4,(hl)
 247+ 9AB6 C8               ret z
 248+ 9AB7 CD E7 96         call Mov_right
 249+ 9ABA C9               ret
 250+ 9ABB
 251+ 9ABB              ; ---------- --------- --------- ---------- ----------
 252+ 9ABB              ;
 253+ 9ABB              ;   26/06/23
 254+ 9ABB              ;
 255+ 9ABB              ;   Ajusta_velocidad_desplazamiento.
 256+ 9ABB
 257+ 9ABB              Ajusta_velocidad_desplazamiento
 258+ 9ABB
 259+ 9ABB              ; 1er byte de la cadena de movimiento.
 260+ 9ABB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9ABB
 262+ 9ABB CD D9 9A         call Extrae_nibble_alto
 263+ 9ABE
 264+ 9ABE 32 B7 89         ld (Vel_up),a
 265+ 9AC1 79               ld a,c
 266+ 9AC2 E6 0F            and $0f
 267+ 9AC4 32 B8 89         ld (Vel_down),a
 268+ 9AC7
 269+ 9AC7              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9AC7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9AC7
 272+ 9AC7 23               inc hl
 273+ 9AC8 CD D9 9A         call Extrae_nibble_alto
 274+ 9ACB
 275+ 9ACB 32 B5 89         ld (Vel_left),a
 276+ 9ACE 79               ld a,c
 277+ 9ACF E6 0F            and $0f
 278+ 9AD1 32 B6 89         ld (Vel_right),a
 279+ 9AD4
 280+ 9AD4              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9AD4
 282+ 9AD4 23               inc hl
 283+ 9AD5 22 D1 89         ld (Puntero_mov),hl
 284+ 9AD8 C9               ret
 285+ 9AD9
 286+ 9AD9 06 04        Extrae_nibble_alto ld b,4
 287+ 9ADB 7E               ld a,(hl)
 288+ 9ADC 4F               ld c,a
 289+ 9ADD E6 F0            and $f0
 290+ 9ADF CB 3F        1 srl a
 291+ 9AE1 10 FC            djnz 1B
 292+ 9AE3 C9               ret
 293+ 9AE4
 294+ 9AE4              ; ---------- --------- --------- ---------- ----------
 295+ 9AE4              ;
 296+ 9AE4              ;   5/7/23
 297+ 9AE4              ;
 298+ 9AE4              ;   Incrementa_Puntero_indice_mov
 299+ 9AE4
 300+ 9AE4              Incrementa_Puntero_indice_mov
 301+ 9AE4
 302+ 9AE4 21 D5 89         ld hl,Incrementa_puntero
 303+ 9AE7 34               inc (hl)
 304+ 9AE8
 305+ 9AE8 2A CF 89         ld hl,(Puntero_indice_mov)
 306+ 9AEB 01 02 00         ld bc,2
 307+ 9AEE A7               and a
 308+ 9AEF 09               add hl,bc
 309+ 9AF0 22 CF 89         ld (Puntero_indice_mov),hl
 310+ 9AF3
 311+ 9AF3 7E               ld a,(hl)
 312+ 9AF4 A7               and a
 313+ 9AF5
 314+ 9AF5              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9AF5
 316+ 9AF5              ;    jr z,$
 317+ 9AF5
 318+ 9AF5              ;! Reinicia el Patrón de movimiento.
 319+ 9AF5
 320+ 9AF5 CC FA 9A         call z,Inicializa_Puntero_indice_mov_2
 321+ 9AF8
 322+ 9AF8 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9AF9
 324+ 9AF9 C9               ret
 325+ 9AFA
 326+ 9AFA              ; ---------- --------- --------- ---------- ----------
 327+ 9AFA              ;
 328+ 9AFA              ;   15/01/24
 329+ 9AFA              ;
 330+ 9AFA              ;   Inicializa_Puntero_indice_mov
 331+ 9AFA
 332+ 9AFA              Inicializa_Puntero_indice_mov_2
 333+ 9AFA
 334+ 9AFA              ; Existe etiqueta de bucle principal???
 335+ 9AFA
 336+ 9AFA 2A D3 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9AFD 24               inc h
 338+ 9AFE 25               dec h
 339+ 9AFF 28 05            jr z,2F
 340+ 9B01
 341+ 9B01 22 CF 89         ld (Puntero_indice_mov),hl
 342+ 9B04 18 14            jr 3F
 343+ 9B06
 344+ 9B06              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9B06
 346+ 9B06 3A D5 89     2 ld a,(Incrementa_puntero)
 347+ 9B09 47               ld b,a
 348+ 9B0A
 349+ 9B0A 2A CF 89         ld hl,(Puntero_indice_mov)
 350+ 9B0D 2B           1 dec hl
 351+ 9B0E 2B               dec hl
 352+ 9B0F 10 FC            djnz 1B
 353+ 9B11 22 CF 89         ld (Puntero_indice_mov),hl
 354+ 9B14
 355+ 9B14 AF               xor a
 356+ 9B15 32 D5 89         ld (Incrementa_puntero),a
 357+ 9B18 18 06            jr 4F
 358+ 9B1A
 359+ 9B1A 3A D6 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9B1D 32 D5 89         ld (Incrementa_puntero),a
 361+ 9B20 C9           4 ret
 362+ 9B21
 363+ 9B21              ; ----------------------------------------------------------------------
 364+ 9B21              ;
 365+ 9B21              ;   30/01/24
 366+ 9B21              ;
 367+ 9B21              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9B21
 369+ 9B21 3A 8B 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9B24 CD 3D 8F         call Calcula_salto_en_BC
 371+ 9B27 21 B9 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9B2A A7               and a
 373+ 9B2B ED 4A            adc hl,bc
 374+ 9B2D C9               ret
 375+ 9B2E
 376+ 9B2E              ; ----------------------------------------------------------------------
 377+ 9B2E              ;
 378+ 9B2E              ;   30/01/24
 379+ 9B2E              ;
 380+ 9B2E              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9B2E              ;
 382+ 9B2E              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9B2E
 384+ 9B2E 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9B2F 23               inc hl
 386+ 9B30 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9B31 69               ld l,c
 388+ 9B32 60               ld h,b
 389+ 9B33 22 AC 89         ld (Contador_de_mov_masticados),hl
 390+ 9B36 C9               ret
 391+ 9B37
# file closed: Movimiento.asm
1877  9B37              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9B37              ; ******************************************************************************************************************************************************************************************
   2+ 9B37              ;
   3+ 9B37              ;   21/07/23
   4+ 9B37              ;
   5+ 9B37              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9B37              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9B37              ;
   8+ 9B37              ;
   9+ 9B37              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9B37              ;
  11+ 9B37              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9B37              ;               _ hacen las entidades hacia abajo.
  13+ 9B37              ;
  14+ 9B37              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9B37              ;
  16+ 9B37              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9B37              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9B37              ;
  19+ 9B37              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9B37              ;           _ la bala.
  21+ 9B37              ;
  22+ 9B37              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9B37              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9B37              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9B37              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9B37              ;           _ en el momento de generarse la bala)).
  27+ 9B37
  28+ 9B37              Genera_disparo
  29+ 9B37
  30+ 9B37              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9B37              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9B37              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9B37              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9B37              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9B37              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9B37              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9B37
  38+ 9B37              ; Exclusiones:
  39+ 9B37
  40+ 9B37 3A B8 89         ld a,(Vel_down)
  41+ 9B3A 47               ld b,a
  42+ 9B3B 3A 0C 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9B3E B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9B3F D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9B40 3A AF 89         ld a,(Columnas)
  46+ 9B43 47               ld b,a
  47+ 9B44 3A 8D 89         ld a,(Columns)
  48+ 9B47 B8               cp b
  49+ 9B48 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9B49
  51+ 9B49              ; ----- ----- -----
  52+ 9B49
  53+ 9B49 3A AE 89         ld a,(Ctrl_0)
  54+ 9B4C CB 77            bit 6,a
  55+ 9B4E 20 06            jr nz,14F
  56+ 9B50
  57+ 9B50 3A 93 89         ld a,(Coordenada_y)
  58+ 9B53 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9B55 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9B56
  61+ 9B56 21 31 81     14 ld hl,Indice_disparo
  62+ 9B59 3A 94 89         ld a,(CTRL_DESPLZ)
  63+ 9B5C 4F               ld c,a
  64+ 9B5D 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9B5F              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9B5F              ;                                            ""        ""       "f9", B="1"
  67+ 9B5F              ;                                            ""        ""       "fb", B="2"
  68+ 9B5F              ;                                            ""        ""       "fb", B="3"
  69+ 9B5F A7               and a
  70+ 9B60 28 10            jr z,1F
  71+ 9B62 E6 01            and 1
  72+ 9B64 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9B65
  74+ 9B65 79               ld a,c
  75+ 9B66 16 F9            ld d,$f9
  76+ 9B68 23           2 inc hl
  77+ 9B69 23               inc hl
  78+ 9B6A 04               inc b
  79+ 9B6B BA               cp d
  80+ 9B6C 28 04            jr z,1F
  81+ 9B6E 14               inc d
  82+ 9B6F 14               inc d
  83+ 9B70 18 F6            jr 2B
  84+ 9B72
  85+ 9B72 CD 85 8C     1 call Extrae_address
  86+ 9B75 E5               push hl
  87+ 9B76 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9B78 DD 21 16 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9B7C
  90+ 9B7C              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9B7C              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9B7C
  93+ 9B7C 3A AE 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9B7F CB 77            bit 6,a
  95+ 9B81 20 04            jr nz,19F
  96+ 9B83
  97+ 9B83 AF               xor a
  98+ 9B84 32 15 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9B87
 100+ 9B87 3A A0 89     19 ld a,(Cuad_objeto)
 101+ 9B8A FE 02            cp 2
 102+ 9B8C 38 66            jr c,3F
 103+ 9B8E 28 64            jr z,3F
 104+ 9B90
 105+ 9B90              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9B90
 107+ 9B90 E6 01            and 1
 108+ 9B92 28 30            jr z,4F
 109+ 9B94
 110+ 9B94              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9B94              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9B94              ;
 113+ 9B94              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9B94              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9B94              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9B94
 117+ 9B94 2A 8E 89     	ld hl,(Posicion_actual)
 118+ 9B97
 119+ 9B97              ;   Amadeus o entidad ???.
 120+ 9B97
 121+ 9B97 3A AE 89         ld a,(Ctrl_0)
 122+ 9B9A CB 77            bit 6,a
 123+ 9B9C 28 0A            jr z,8F
 124+ 9B9E
 125+ 9B9E              ; 	Dispara Amadeus.
 126+ 9B9E
 127+ 9B9E 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9BA0 CD C9 92         call PreviousScan
 129+ 9BA3 CD C9 92         call PreviousScan
 130+ 9BA6
 131+ 9BA6              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9BA6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9BA6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9BA6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9BA6
 136+ 9BA6 18 11            jr 10F
 137+ 9BA8
 138+ 9BA8              ; 	Dispara Entidad.
 139+ 9BA8
 140+ 9BA8 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9BAB              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9BAB
 143+ 9BAB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9BAB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9BAB
 146+ 9BAB C5               push bc
 147+ 9BAC 06 10            ld b,16
 148+ 9BAE CD BA 92     9 call NextScan
 149+ 9BB1 10 FB            djnz 9B
 150+ 9BB3 C1               pop bc
 151+ 9BB4 CD 1E 9C         call Ajusta_disparo_parte_izquierda
 152+ 9BB7 18 06            jr 17F
 153+ 9BB9
 154+ 9BB9              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9BB9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9BB9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9BB9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9BB9
 159+ 9BB9 CD 1E 9C     10 call Ajusta_disparo_parte_izquierda
 160+ 9BBC CD 93 9C         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9BBF              ;                                                      ; _al generar el disparo.
 162+ 9BBF
 163+ 9BBF              ; 	LLegados a este punto tendremos:
 164+ 9BBF              ;
 165+ 9BBF              ;       Puntero_objeto_disparo en IY.
 166+ 9BBF              ;       Rutinas_de_impresion en IX.
 167+ 9BBF              ;       Puntero_de_impresion en HL.
 168+ 9BBF              ;       Impacto/Dirección en BC.
 169+ 9BBF
 170+ 9BBF CD 26 9C     17 call Almacena_disparo
 171+ 9BC2 18 52            jr 6F                                             ; RET.
 172+ 9BC4
 173+ 9BC4              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9BC4              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9BC4              ;
 176+ 9BC4              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9BC4              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9BC4              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9BC4
 180+ 9BC4 2A 8E 89     4 ld hl,(Posicion_actual)
 181+ 9BC7
 182+ 9BC7              ;   Amadeus o entidad ???.
 183+ 9BC7
 184+ 9BC7 3A AE 89         ld a,(Ctrl_0)
 185+ 9BCA CB 77            bit 6,a
 186+ 9BCC 28 0A            jr z,11F
 187+ 9BCE
 188+ 9BCE              ; 	Dispara Amadeus.
 189+ 9BCE
 190+ 9BCE 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9BD0 CD C9 92         call PreviousScan
 192+ 9BD3 CD C9 92         call PreviousScan
 193+ 9BD6
 194+ 9BD6              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9BD6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9BD6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9BD6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9BD6
 199+ 9BD6 18 11            jr 13F
 200+ 9BD8
 201+ 9BD8              ; 	Dispara Entidad.
 202+ 9BD8
 203+ 9BD8 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9BDB              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9BDB
 206+ 9BDB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9BDB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9BDB
 209+ 9BDB C5               push bc
 210+ 9BDC 06 10            ld b,16
 211+ 9BDE CD BA 92     12 call NextScan
 212+ 9BE1 10 FB            djnz 12B
 213+ 9BE3 C1               pop bc
 214+ 9BE4
 215+ 9BE4 CD 17 9C         call Ajusta_disparo_parte_derecha
 216+ 9BE7 18 06            jr 18F
 217+ 9BE9
 218+ 9BE9              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9BE9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9BE9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9BE9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9BE9
 223+ 9BE9 CD 17 9C     13 call Ajusta_disparo_parte_derecha
 224+ 9BEC CD 93 9C         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9BEF              ;                                                       ; _al generar el disparo.
 226+ 9BEF
 227+ 9BEF              ; LLegados a este punto tendremos:
 228+ 9BEF              ;
 229+ 9BEF              ;       Puntero_objeto_disparo en IY.
 230+ 9BEF              ;       Rutinas_de_impresion en IX.
 231+ 9BEF              ;       Puntero_de_impresion en HL.
 232+ 9BEF              ;       Impacto/Dirección en BC.
 233+ 9BEF
 234+ 9BEF CD 26 9C     18 call Almacena_disparo
 235+ 9BF2 18 22            jr 6F                                               ; RET.
 236+ 9BF4
 237+ 9BF4              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9BF4
 239+ 9BF4 28 11        3 jr z,5F
 240+ 9BF6
 241+ 9BF6              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9BF6              ;
 243+ 9BF6              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9BF6              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9BF6              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9BF6              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9BF6
 248+ 9BF6              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9BF6              ;	   ""        ""       "f9", B="1"
 250+ 9BF6              ;	   ""        ""       "fb", B="2"
 251+ 9BF6              ; 	   ""        ""       "fb", B="3"
 252+ 9BF6
 253+ 9BF6 2A 8E 89     	ld hl,(Posicion_actual)
 254+ 9BF9 CD BA 92     	call NextScan
 255+ 9BFC
 256+ 9BFC              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9BFC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9BFC              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9BFC              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9BFC
 261+ 9BFC CD 1E 9C         call Ajusta_disparo_parte_izquierda
 262+ 9BFF
 263+ 9BFF              ; 	No se produce impacto. B="$80"
 264+ 9BFF              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9BFF
 266+ 9BFF 01 80 80         ld bc,$8080
 267+ 9C02
 268+ 9C02              ; 	LLegados a este punto tendremos:
 269+ 9C02              ;
 270+ 9C02              ;       Puntero_objeto_disparo en IY.
 271+ 9C02              ;       Rutinas_de_impresion en IX.
 272+ 9C02              ;       Puntero_de_impresion en HL.
 273+ 9C02              ;       Impacto/Dirección en BC.
 274+ 9C02
 275+ 9C02 CD 26 9C         call Almacena_disparo
 276+ 9C05 18 0F            jr 6F                                           ; RET.
 277+ 9C07
 278+ 9C07              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9C07              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9C07              ;
 281+ 9C07              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9C07              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9C07              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9C07              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9C07
 286+ 9C07 2A 8E 89     5 ld hl,(Posicion_actual)
 287+ 9C0A CD BA 92     	call NextScan
 288+ 9C0D
 289+ 9C0D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9C0D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9C0D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9C0D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9C0D
 294+ 9C0D CD 17 9C         call Ajusta_disparo_parte_derecha
 295+ 9C10
 296+ 9C10              ; 	No se produce impacto. B="$80"
 297+ 9C10              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9C10
 299+ 9C10 01 80 80     15 ld bc,$8080
 300+ 9C13
 301+ 9C13              ; 	LLegados a este punto tendremos:
 302+ 9C13              ;
 303+ 9C13              ;       Puntero_objeto_disparo en IY.
 304+ 9C13              ;       Rutinas_de_impresion en IX.
 305+ 9C13              ;       Puntero_de_impresion en HL.
 306+ 9C13              ;       Impacto/Dirección en BC.
 307+ 9C13
 308+ 9C13 CD 26 9C         call Almacena_disparo
 309+ 9C16
 310+ 9C16 C9           6 ret
 311+ 9C17
 312+ 9C17              ; ----------------------------------------------------------------
 313+ 9C17              ;
 314+ 9C17              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9C17              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9C17              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9C17
 318+ 9C17 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9C18 FE 02            cp 2
 320+ 9C1A 38 01            jr c,1F
 321+ 9C1C 23               inc hl
 322+ 9C1D C9           1 ret
 323+ 9C1E
 324+ 9C1E 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9C1F FE 01        	cp 1
 326+ 9C21 20 01        	jr nz,1F
 327+ 9C23 2B           	dec hl
 328+ 9C24 2B           1 dec hl
 329+ 9C25 C9               ret
 330+ 9C26
 331+ 9C26              ; ----------------------------------------------------------------
 332+ 9C26              ;
 333+ 9C26              ;   25/02/23
 334+ 9C26              ;
 335+ 9C26              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9C26              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9C26              ;
 338+ 9C26              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9C26              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9C26
 341+ 9C26              Almacena_disparo
 342+ 9C26
 343+ 9C26 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9C27 F1               pop af
 345+ 9C28 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9C29
 347+ 9C29 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9C2A E6 01            and 1
 349+ 9C2C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9C2E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9C2E              ; 	Dispara AMADEUS.
 352+ 9C2E
 353+ 9C2E              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9C2E              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9C2E              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9C2E              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9C2E
 358+ 9C2E C5               push bc
 359+ 9C2F 01 68 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9C32 2A FF 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9C35 A7               and a
 362+ 9C36 ED 42            sbc hl,bc
 363+ 9C38 CC 0A 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9C3B C1               pop bc
 365+ 9C3C 28 54            jr z,4F
 366+ 9C3E
 367+ 9C3E 2A FF 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9C41 23               inc hl
 369+ 9C42 23               inc hl
 370+ 9C43 22 FF 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9C46              ;                                                   ; _ Disparo_(+1).
 372+ 9C46 18 18            jr 2F
 373+ 9C48
 374+ 9C48              ; Dispara una entidad.
 375+ 9C48
 376+ 9C48 C5           1 push bc
 377+ 9C49 01 90 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9C4C 2A FD 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9C4F A7               and a
 380+ 9C50 ED 42            sbc hl,bc
 381+ 9C52 CC 03 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9C55 C1               pop bc
 383+ 9C56 28 3A            jr z,4F
 384+ 9C58
 385+ 9C58 2A FD 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9C5B 23               inc hl
 387+ 9C5C 23               inc hl
 388+ 9C5D 22 FD 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9C60              ;                                                   ; _ Disparo_(+1).
 390+ 9C60 CD 85 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9C63              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9C63              ;
 393+ 9C63              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9C63              ;                                                     Rutinas_de_impresion en IX.
 395+ 9C63              ;                                                     Puntero_de_impresion en HL.
 396+ 9C63              ;                                                     Impacto/Dirección en BC.
 397+ 9C63
 398+ 9C63 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9C64 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9C65 23               inc hl                                          ; _ al siguiente.
 401+ 9C66 A7               and a
 402+ 9C67 20 C0            jr nz,3B
 403+ 9C69
 404+ 9C69 08               ex af,af
 405+ 9C6A ED 73 EC 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9C6E F9               ld sp,hl
 407+ 9C6F
 408+ 9C6F DD E5            push ix                                         ; Rutina de impresión.
 409+ 9C71 F5               push af                                         ; Puntero de impresión.
 410+ 9C72 FD E5            push iy                                         ; Puntero objeto.
 411+ 9C74 C5               push bc                                         ; Control.
 412+ 9C75
 413+ 9C75 ED 7B EC 89      ld sp,(Stack)
 414+ 9C79
 415+ 9C79              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9C79
 417+ 9C79 21 DB 89     	ld hl,Ctrl_1
 418+ 9C7C CB C6        	set 0,(hl)
 419+ 9C7E
 420+ 9C7E DD E5        	push ix
 421+ 9C80 E1               pop hl
 422+ 9C81 F5               push af
 423+ 9C82 DD E1            pop ix
 424+ 9C84
 425+ 9C84 CD BF 80     	call Guarda_foto_registros
 426+ 9C87
 427+ 9C87 21 DB 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9C8A CB 86        	res 0,(hl)
 429+ 9C8C
 430+ 9C8C              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9C8C              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9C8C
 433+ 9C8C CD 0A 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9C8F CD 03 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9C92
 436+ 9C92 C9           4 ret
 437+ 9C93
 438+ 9C93              ; ----------------------------------------------------------------
 439+ 9C93              ;
 440+ 9C93              ;   4/3/23
 441+ 9C93              ;
 442+ 9C93              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9C93              ;   _ al generarse el disparo.
 444+ 9C93              ;
 445+ 9C93              ;       "$80" ..... No se produce colisión.
 446+ 9C93              ;       "$81" ..... Se produce colisión.
 447+ 9C93              ;
 448+ 9C93              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9C93              ;         _ que forman el disparo.
 450+ 9C93
 451+ 9C93
 452+ 9C93              Comprueba_Colision
 453+ 9C93
 454+ 9C93              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9C93
 456+ 9C93 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9C95 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9C96
 459+ 9C96 CD CC 9C         call Modifica_H_Velocidad_disparo
 460+ 9C99
 461+ 9C99 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9C9A FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9C9C 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9C9E
 465+ 9C9E 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9CA0 CD BC 9C         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9CA3
 468+ 9CA3 7B               ld a,e
 469+ 9CA4 E6 01            and 1
 470+ 9CA6 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9CA8              ;                                                  ; _ para activar IMPACTO.
 472+ 9CA8 E1               pop hl
 473+ 9CA9 E5               push hl
 474+ 9CAA CD BA 92         call NextScan
 475+ 9CAD
 476+ 9CAD 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9CAE FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9CB0 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9CB2              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9CB2 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9CB4 CD BC 9C         call Bucle_2
 482+ 9CB7
 483+ 9CB7 43           1 ld b,e
 484+ 9CB8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9CB9 FD E1            pop iy
 486+ 9CBB C9               ret
 487+ 9CBC
 488+ 9CBC              ; ---------- ----------
 489+ 9CBC
 490+ 9CBC 06 02        Bucle_2 ld b,2
 491+ 9CBE FD 7E 00     2 ld a,(iy)
 492+ 9CC1 A6               and (hl)
 493+ 9CC2 28 02            jr z,1F
 494+ 9CC4 1E 81            ld e,$81
 495+ 9CC6 23           1 inc hl
 496+ 9CC7 FD 23            inc iy
 497+ 9CC9 10 F3            djnz 2B
 498+ 9CCB C9               ret
 499+ 9CCC
 500+ 9CCC              ; ---------- ----------
 501+ 9CCC              ;
 502+ 9CCC              ;   21/7/23
 503+ 9CCC
 504+ 9CCC              Modifica_H_Velocidad_disparo
 505+ 9CCC
 506+ 9CCC 3A 0C 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9CCF FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9CD1 D0               ret nc                                         ; _ incrementamos H.
 509+ 9CD2 24               inc h
 510+ 9CD3
 511+ 9CD3 C9               ret
 512+ 9CD4
 513+ 9CD4              ; -------------------------------------------------------------------------------------------------------------
 514+ 9CD4              ;
 515+ 9CD4              ;   04/12/23
 516+ 9CD4              ;
 517+ 9CD4              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9CD4              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9CD4              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9CD4              ;
 521+ 9CD4              ;   MODIFICA: HL,DE,B y A.
 522+ 9CD4
 523+ 9CD4              Genera_coordenadas_X
 524+ 9CD4
 525+ 9CD4              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9CD4              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9CD4
 528+ 9CD4              ;   Limpiamos almacenes.
 529+ 9CD4
 530+ 9CD4 CD 05 9D         call Limpia_Coordenadas_X
 531+ 9CD7
 532+ 9CD7              ;   Almacenamos coordenadas X.
 533+ 9CD7
 534+ 9CD7              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9CD7
 536+ 9CD7 2A A8 89         ld hl,(Puntero_de_impresion)
 537+ 9CDA 11 09 8A         ld de,Coordenadas_X_Entidad
 538+ 9CDD 06 02            ld b,2
 539+ 9CDF
 540+ 9CDF 3A 94 89         ld a,(CTRL_DESPLZ)
 541+ 9CE2 A7               and a
 542+ 9CE3 28 01            jr z,1F
 543+ 9CE5 04               inc b
 544+ 9CE6
 545+ 9CE6 CD FC 9C     1 call Guarda_coordenadas_X
 546+ 9CE9
 547+ 9CE9              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9CE9
 549+ 9CE9 2A 13 87         ld hl,(p.imp.amadeus)
 550+ 9CEC 11 06 8A         ld de,Coordenadas_X_Amadeus
 551+ 9CEF 06 02            ld b,2
 552+ 9CF1
 553+ 9CF1 3A FF 86         ld a,(ctrl_desplz_amadeus)
 554+ 9CF4 A7               and a
 555+ 9CF5 28 01            jr z,2F
 556+ 9CF7 04               inc b
 557+ 9CF8
 558+ 9CF8 CD FC 9C     2 call Guarda_coordenadas_X
 559+ 9CFB
 560+ 9CFB              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9CFB
 562+ 9CFB C9               ret
 563+ 9CFC
 564+ 9CFC              ; ----- ----- ----- ----- -----
 565+ 9CFC
 566+ 9CFC 7D           Guarda_coordenadas_X  ld a,l
 567+ 9CFD E6 1F            and $1f
 568+ 9CFF 12           1 ld (de),a
 569+ 9D00 3C               inc a
 570+ 9D01 13               inc de
 571+ 9D02 10 FB            djnz 1B
 572+ 9D04 C9               ret
 573+ 9D05
 574+ 9D05 AF           Limpia_Coordenadas_X xor a
 575+ 9D06 06 06            ld b,6
 576+ 9D08 21 06 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9D0B 77           1 ld (hl),a
 578+ 9D0C 23               inc hl
 579+ 9D0D 10 FC            djnz 1B
 580+ 9D0F C9               ret
 581+ 9D10
 582+ 9D10              ; ----- ----- ----- ----- -----
 583+ 9D10
 584+ 9D10              Compara_coordenadas_X
 585+ 9D10
 586+ 9D10 06 03            ld b,3
 587+ 9D12 11 0B 8A         ld de,Coordenadas_X_Entidad+2
 588+ 9D15
 589+ 9D15 1A               ld a,(de)
 590+ 9D16 A7               and a
 591+ 9D17 20 01            jr nz,2F
 592+ 9D19 05               dec b
 593+ 9D1A
 594+ 9D1A 1B           2 dec de
 595+ 9D1B 1B               dec de
 596+ 9D1C 21 06 8A         ld hl,Coordenadas_X_Amadeus
 597+ 9D1F
 598+ 9D1F D5           1 push de
 599+ 9D20 E5               push hl
 600+ 9D21 C5               push bc
 601+ 9D22
 602+ 9D22 CD 2C 9D         call Comparando
 603+ 9D25
 604+ 9D25 C1               pop bc
 605+ 9D26 E1               pop hl
 606+ 9D27 D1               pop de
 607+ 9D28
 608+ 9D28 13               inc de
 609+ 9D29 10 F4            djnz 1B
 610+ 9D2B
 611+ 9D2B C9               ret
 612+ 9D2C
 613+ 9D2C              ; ----- ----- ----- ----- -----
 614+ 9D2C              ;
 615+ 9D2C              ;   4/12/23
 616+ 9D2C              ;
 617+ 9D2C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9D2C
 619+ 9D2C 06 03        Comparando ld b,3
 620+ 9D2E 1A               ld a,(de)
 621+ 9D2F 4E           2 ld c,(hl)
 622+ 9D30 B9               cp c
 623+ 9D31 28 04            jr z,1F
 624+ 9D33 23               inc hl
 625+ 9D34 10 F9            djnz 2B
 626+ 9D36 C9               ret
 627+ 9D37
 628+ 9D37 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9D39 32 A1 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9D3C 21 01 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9D3F CB D6            set 2,(hl)
 632+ 9D41 C9               ret
 633+ 9D42
 634+ 9D42              ; -----------------------------------------------------------------------
 635+ 9D42              ;
 636+ 9D42              ;   7/12/23
 637+ 9D42              ;
 638+ 9D42
 639+ 9D42              Detecta_colision_nave_entidad
 640+ 9D42
 641+ 9D42              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9D42
 643+ 9D42 FD 2A 90 89      ld iy,(Puntero_objeto)
 644+ 9D46 2A A8 89         ld hl,(Puntero_de_impresion)
 645+ 9D49
 646+ 9D49 E5               push hl
 647+ 9D4A
 648+ 9D4A              ; ----- ----- -----
 649+ 9D4A 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9D4C 06 0A            ld b,10
 651+ 9D4E CD 7E 9D     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9D51 7B               ld a,e
 653+ 9D52 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9D54 38 0E            jr c,3F
 655+ 9D56
 656+ 9D56              ; LLegados a este punto:
 657+ 9D56              ;
 658+ 9D56              ;   HAY COLISIÓN !!!!!.
 659+ 9D56              ;
 660+ 9D56              ;   .db (Impacto) de Amadeus a "1".
 661+ 9D56              ;   SET el bit3 de (Impacto2).
 662+ 9D56              ;
 663+ 9D56              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9D56
 665+ 9D56 21 A1 89         ld hl,Impacto
 666+ 9D59 36 01            ld (hl),1
 667+ 9D5B 21 01 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9D5E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9D60 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9D62
 671+ 9D62 18 18            jr 1F
 672+ 9D64
 673+ 9D64              ; -----
 674+ 9D64
 675+ 9D64 E1           3 pop hl
 676+ 9D65 CD BA 92         call NextScan
 677+ 9D68 E5               push hl
 678+ 9D69 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9D6A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9D6C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9D6E 30 0C            jr nc,1F
 682+ 9D70              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9D70 10 DC            djnz 2B
 684+ 9D72
 685+ 9D72              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9D72
 687+ 9D72              ; LLegados a este punto:
 688+ 9D72              ;
 689+ 9D72              ;   NO HAY COLISIÓN !!!!!.
 690+ 9D72              ;
 691+ 9D72              ;   .db (Impacto) de Amadeus a "0".
 692+ 9D72              ;   RES el bit2 de (Impacto2).
 693+ 9D72              ;
 694+ 9D72              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9D72              ;   Lo colocamos a "0".
 696+ 9D72
 697+ 9D72 21 01 8A         ld hl,Impacto2
 698+ 9D75 CB 96            res 2,(hl)
 699+ 9D77 2A 02 8A         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9D7A 36 00            ld (hl),0
 701+ 9D7C
 702+ 9D7C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9D7D C9               ret
 704+ 9D7E
 705+ 9D7E               ; ---------- ----------
 706+ 9D7E
 707+ 9D7E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9D7F 3A 8D 89         ld a,(Columns)
 709+ 9D82 47               ld b,a
 710+ 9D83 FD 7E 00     2 ld a,(iy)
 711+ 9D86 BE               cp (hl)
 712+ 9D87 28 01            jr z,1F
 713+ 9D89
 714+ 9D89 1C               inc e
 715+ 9D8A
 716+ 9D8A 23           1 inc hl
 717+ 9D8B FD 23            inc iy
 718+ 9D8D 10 F4            djnz 2B
 719+ 9D8F C1               pop bc
 720+ 9D90 C9               ret
 721+ 9D91
 722+ 9D91              ; -------------------------------------------------------------------------------------------------------------
 723+ 9D91              ;
 724+ 9D91              ;   13/03/23
 725+ 9D91              ;
 726+ 9D91              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9D91              ;
 728+ 9D91              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9D91
 730+ 9D91 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9D94 7E               ld a,(hl)
 732+ 9D95 A7               and a
 733+ 9D96 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9D97
 735+ 9D97 44               ld b,h
 736+ 9D98 4D               ld c,l
 737+ 9D99 2A F4 89         ld hl,(Stack_snapshot_disparos)
 738+ 9D9C E5               push hl
 739+ 9D9D A7               and a
 740+ 9D9E ED 42            sbc hl,bc
 741+ 9DA0 E5               push hl
 742+ 9DA1 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9DA2
 744+ 9DA2 E1               pop hl
 745+ 9DA3 54               ld d,h
 746+ 9DA4 5D               ld e,l
 747+ 9DA5 1B               dec de
 748+ 9DA6 ED B8            lddr                                                ; Limpiamos.
 749+ 9DA8
 750+ 9DA8 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9DAB 22 F4 89         ld (Stack_snapshot_disparos),hl
 752+ 9DAE
 753+ 9DAE C9               ret
 754+ 9DAF
 755+ 9DAF              ; -------------------------------------------------------------------------------------------------------------
 756+ 9DAF              ;
 757+ 9DAF              ;   18/07/23
 758+ 9DAF              ;
 759+ 9DAF
 760+ 9DAF              Motor_de_disparos
 761+ 9DAF
 762+ 9DAF              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9DAF
 764+ 9DAF 01 7A 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9DB2 2A FF 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9DB5
 767+ 9DB5 CD 85 8C     2 call Extrae_address
 768+ 9DB8 7E               ld a,(hl)
 769+ 9DB9 A7               and a
 770+ 9DBA 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9DBC
 772+ 9DBC              ; ----- ----- ----- ----- ----- -----
 773+ 9DBC
 774+ 9DBC C5               push bc
 775+ 9DBD CD 81 9E         call foto_disparo_a_borrar
 776+ 9DC0
 777+ 9DC0              ; Existe colisión con este disparo???
 778+ 9DC0
 779+ 9DC0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9DC1 7E               ld a,(hl)
 781+ 9DC2 2B               dec hl
 782+ 9DC3 E6 01            and 1
 783+ 9DC5 28 1D            jr z,9F
 784+ 9DC7
 785+ 9DC7              ;   En este punto:
 786+ 9DC7              ;
 787+ 9DC7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9DC7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9DC7              ;   _con la entidad).
 790+ 9DC7              ;
 791+ 9DC7              ;   Disparo_2A defw 0                                ; Control.
 792+ 9DC7              ;    defw 0                                          ; Puntero objeto.
 793+ 9DC7              ;    defw 0                                          ; Puntero de impresión.
 794+ 9DC7              ;    defw 0                                          ; Rutina de impresión.
 795+ 9DC7
 796+ 9DC7 E5               push hl
 797+ 9DC8
 798+ 9DC8 06 04            ld b,4
 799+ 9DCA 23           19 inc hl
 800+ 9DCB 10 FD            djnz 19B
 801+ 9DCD
 802+ 9DCD CD 85 8C         call Extrae_address
 803+ 9DD0 CD 64 A0         call Genera_coordenadas_disparo
 804+ 9DD3
 805+ 9DD3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9DD3
 807+ 9DD3 21 04 8A         ld hl,Coordenadas_disparo_certero
 808+ 9DD6 72               ld (hl),d
 809+ 9DD7 23               inc hl
 810+ 9DD8 73               ld (hl),e
 811+ 9DD9
 812+ 9DD9              ; Elimino el disparo de la base de datos.
 813+ 9DD9
 814+ 9DD9 E1               pop hl
 815+ 9DDA CD 00 9F         call Elimina_disparo_de_base_de_datos
 816+ 9DDD 21 01 8A         ld hl,Impacto2
 817+ 9DE0 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9DE2
 819+ 9DE2 18 06            jr 11F
 820+ 9DE4
 821+ 9DE4 CD AA 9E     9 call Mueve_disparo
 822+ 9DE7 CD 81 9E         call foto_disparo_a_borrar
 823+ 9DEA
 824+ 9DEA C1           11 pop bc
 825+ 9DEB 18 04            jr 7F
 826+ 9DED
 827+ 9DED              ; ----- ----- ----- ----- ----- -----
 828+ 9DED
 829+ 9DED ED 42        1 sbc hl,bc
 830+ 9DEF 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9DF1
 832+ 9DF1 2A FF 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9DF4 23               inc hl
 834+ 9DF5 23               inc hl
 835+ 9DF6 22 FF 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9DF9 18 BA            jr 2B
 837+ 9DFB
 838+ 9DFB CD 0A 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9DFE              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9DFE
 841+ 9DFE              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9DFE
 843+ 9DFE 01 E2 86         ld bc,Disparo_11
 844+ 9E01 2A FD 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9E04
 846+ 9E04 CD 85 8C     5 call Extrae_address
 847+ 9E07 7E               ld a,(hl)
 848+ 9E08 A7               and a
 849+ 9E09 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9E0B
 851+ 9E0B              ; ----- ----- ----- ----- ----- -----
 852+ 9E0B
 853+ 9E0B C5               push bc
 854+ 9E0C CD 81 9E         call foto_disparo_a_borrar
 855+ 9E0F
 856+ 9E0F              ; Existe colisión con este disparo???
 857+ 9E0F
 858+ 9E0F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9E10 7E               ld a,(hl)
 860+ 9E11 2B               dec hl
 861+ 9E12 E6 01            and 1
 862+ 9E14 28 4D            jr z,10F
 863+ 9E16
 864+ 9E16              ;! La colisión se produce con Amadeus???
 865+ 9E16              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9E16
 867+ 9E16 E5               push hl
 868+ 9E17
 869+ 9E17 06 04            ld b,4
 870+ 9E19 23           16 inc hl
 871+ 9E1A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9E1C
 873+ 9E1C CD 85 8C         call Extrae_address
 874+ 9E1F CD 64 A0         call Genera_coordenadas_disparo
 875+ 9E22
 876+ 9E22 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9E23 FE 16            cp $16
 878+ 9E25 38 2A            jr c,15F
 879+ 9E27
 880+ 9E27
 881+ 9E27              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9E27
 883+ 9E27 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9E28
 885+ 9E28              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9E28
 887+ 9E28 2A 13 87         ld hl,(p.imp.amadeus)
 888+ 9E2B
 889+ 9E2B              ; Coordenada X de Amadeus en D.
 890+ 9E2B
 891+ 9E2B 7D               ld a,l
 892+ 9E2C E6 1F            and $1F
 893+ 9E2E 57               ld d,a
 894+ 9E2F
 895+ 9E2F 21 FE 86         ld hl,Amadeus_db+8
 896+ 9E32 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9E33
 898+ 9E33 21 06 8A         ld hl,Coordenadas_X_Amadeus
 899+ 9E36 CD FC 9C         call Guarda_coordenadas_X
 900+ 9E39
 901+ 9E39 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9E3A
 903+ 9E3A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9E3A
 905+ 9E3A 06 02            ld b,2
 906+ 9E3C C5           20 push bc
 907+ 9E3D
 908+ 9E3D 06 03            ld b,3
 909+ 9E3F 21 06 8A         ld hl,Coordenadas_X_Amadeus
 910+ 9E42 7E           18 ld a,(hl)
 911+ 9E43 BA               cp d
 912+ 9E44 20 04            jr nz,17F
 913+ 9E46
 914+ 9E46              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9E46
 916+ 9E46 C1               pop bc
 917+ 9E47 E1               pop hl
 918+ 9E48 18 0D            jr 14F
 919+ 9E4A
 920+ 9E4A 23           17 inc hl
 921+ 9E4B 10 F5            djnz 18B
 922+ 9E4D
 923+ 9E4D 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9E4E
 925+ 9E4E C1               pop bc
 926+ 9E4F 10 EB            djnz 20B
 927+ 9E51
 928+ 9E51
 929+ 9E51              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9E51              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9E51
 932+ 9E51 E1           15 pop hl
 933+ 9E52 23               inc hl
 934+ 9E53 35               dec (hl)
 935+ 9E54 2B               dec hl
 936+ 9E55 18 0C            jr 10F
 937+ 9E57
 938+ 9E57              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9E57              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9E57
 941+ 9E57 E5           14 push hl
 942+ 9E58 CD 00 9F         call Elimina_disparo_de_base_de_datos
 943+ 9E5B 21 01 8A         ld hl,Impacto2
 944+ 9E5E CB CE            set 1,(hl)
 945+ 9E60 E1               pop hl
 946+ 9E61 18 06            jr 12F
 947+ 9E63
 948+ 9E63              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9E63
 950+ 9E63 CD AA 9E     10 call Mueve_disparo
 951+ 9E66 CD 81 9E         call foto_disparo_a_borrar
 952+ 9E69 C1           12 pop bc
 953+ 9E6A
 954+ 9E6A 18 04            jr 8F
 955+ 9E6C
 956+ 9E6C              ; ----- ----- ----- ----- ----- -----
 957+ 9E6C
 958+ 9E6C ED 42        4 sbc hl,bc
 959+ 9E6E 28 0A            jr z,6F
 960+ 9E70
 961+ 9E70 2A FD 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9E73 23               inc hl
 963+ 9E74 23               inc hl
 964+ 9E75 22 FD 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9E78 18 8A            jr 5B
 966+ 9E7A
 967+ 9E7A CD 03 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9E7D CD 05 9D         call Limpia_Coordenadas_X
 969+ 9E80 C9               ret
 970+ 9E81
 971+ 9E81              ; ------------------------------------------------------------------
 972+ 9E81
 973+ 9E81              foto_disparo_a_borrar
 974+ 9E81
 975+ 9E81 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9E82 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9E83 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9E84
 979+ 9E84 E5               push hl
 980+ 9E85 23               inc hl
 981+ 9E86 23               inc hl
 982+ 9E87 ED 73 EC 89      ld (Stack),sp
 983+ 9E8B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9E8C FD E1            pop iy
 985+ 9E8E DD E1            pop ix
 986+ 9E90 E1               pop hl
 987+ 9E91 ED 7B EC 89      ld sp,(Stack)
 988+ 9E95 3A DB 89         ld a,(Ctrl_1)
 989+ 9E98 CB C7            set 0,a
 990+ 9E9A 32 DB 89         ld (Ctrl_1),a
 991+ 9E9D CD BF 80         call Guarda_foto_registros
 992+ 9EA0 3A DB 89         ld a,(Ctrl_1)
 993+ 9EA3 CB 87            res 0,a
 994+ 9EA5 32 DB 89         ld (Ctrl_1),a
 995+ 9EA8 E1               pop hl
 996+ 9EA9 C9               ret
 997+ 9EAA
 998+ 9EAA              ;---------------------------------------------------
 999+ 9EAA              ;
1000+ 9EAA              ;   18/07/23
1001+ 9EAA              ;
1002+ 9EAA
1003+ 9EAA              Mueve_disparo
1004+ 9EAA
1005+ 9EAA              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9EAA              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9EAA              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9EAA
1009+ 9EAA E5               push hl
1010+ 9EAB
1011+ 9EAB 7E               ld a,(hl)
1012+ 9EAC
1013+ 9EAC 06 04            ld b,4
1014+ 9EAE 23           1 inc hl
1015+ 9EAF 10 FD            djnz 1B
1016+ 9EB1
1017+ 9EB1              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9EB1
1019+ 9EB1 CD 85 8C         call Extrae_address
1020+ 9EB4
1021+ 9EB4 E6 01            and 1
1022+ 9EB6 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9EB8
1024+ 9EB8              ; Disparo hacia arriba, (Amadeus).
1025+ 9EB8
1026+ 9EB8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9EB8              ; _ de la dificultad.
1028+ 9EB8
1029+ 9EB8 CD C9 92         call PreviousScan
1030+ 9EBB CD C9 92         call PreviousScan
1031+ 9EBE CD C9 92         call PreviousScan
1032+ 9EC1 CD C9 92         call PreviousScan
1033+ 9EC4
1034+ 9EC4              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9EC4
1036+ 9EC4 7C               ld a,h
1037+ 9EC5 FE 40            cp $40
1038+ 9EC7 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9EC9
1040+ 9EC9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9EC9
1042+ 9EC9 EB               ex de,hl
1043+ 9ECA 06 04            ld b,4
1044+ 9ECC 2B           6 dec hl
1045+ 9ECD 10 FD            djnz 6B
1046+ 9ECF
1047+ 9ECF CD 00 9F         call Elimina_disparo_de_base_de_datos
1048+ 9ED2 E1               pop hl
1049+ 9ED3 18 10            jr 7F
1050+ 9ED5
1051+ 9ED5              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9ED5              ; HL contiene el puntero de impresión del disparo.
1053+ 9ED5              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9ED5
1055+ 9ED5 D5           3 push de
1056+ 9ED6 C5               push bc
1057+ 9ED7
1058+ 9ED7 CD 93 9C         call Comprueba_Colision
1059+ 9EDA
1060+ 9EDA              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9EDA
1062+ 9EDA 78               ld a,b
1063+ 9EDB
1064+ 9EDB C1               pop bc
1065+ 9EDC D1               pop de
1066+ 9EDD
1067+ 9EDD EB               ex de,hl
1068+ 9EDE
1069+ 9EDE 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9EDF 23               inc hl                                      ; _ movimiento.
1071+ 9EE0 72               ld (hl),d
1072+ 9EE1
1073+ 9EE1 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9EE2
1075+ 9EE2 23               inc hl                                      ; _ en curso.
1076+ 9EE3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9EE4 2B               dec hl
1078+ 9EE5
1079+ 9EE5 C9           7 ret
1080+ 9EE6
1081+ 9EE6              ; Disparo hacia abajo, (Entidad).
1082+ 9EE6
1083+ 9EE6 3A 0C 8A     2 ld a,(Velocidad_disparo_entidades)
1084+ 9EE9 47               ld b,a
1085+ 9EEA
1086+ 9EEA CD BA 92     4 call NextScan
1087+ 9EED 10 FB            djnz 4B
1088+ 9EEF
1089+ 9EEF              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9EEF
1091+ 9EEF 7C               ld a,h
1092+ 9EF0 FE 58            cp $58
1093+ 9EF2 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9EF4
1095+ 9EF4 EB               ex de,hl
1096+ 9EF5 06 04            ld b,4
1097+ 9EF7 2B           5 dec hl
1098+ 9EF8 10 FD            djnz 5B
1099+ 9EFA
1100+ 9EFA CD 00 9F         call Elimina_disparo_de_base_de_datos
1101+ 9EFD E1               pop hl
1102+ 9EFE 18 E5            jr 7B
1103+ 9F00
1104+ 9F00              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9F00
1106+ 9F00 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9F03 AF               xor a
1108+ 9F04 77               ld (hl),a
1109+ 9F05 54               ld d,h
1110+ 9F06 5D               ld e,l
1111+ 9F07 13               inc de
1112+ 9F08 ED B0            ldir
1113+ 9F0A C9               ret
1114+ 9F0B
1115+ 9F0B              ; -----------------------------------------------------------------
1116+ 9F0B              ;
1117+ 9F0B              ;   7/12/23
1118+ 9F0B              ;
1119+ 9F0B
1120+ 9F0B 3A 01 8A     Selector_de_impactos ld a,(Impacto2)
1121+ 9F0E A7               and a
1122+ 9F0F C8               ret z
1123+ 9F10
1124+ 9F10              ; Analizamos si hay impacto por disparos.
1125+ 9F10
1126+ 9F10              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9F10
1128+ 9F10 CB 4F            bit 1,a
1129+ 9F12 28 07            jr z,1F
1130+ 9F14
1131+ 9F14 21 0F 87         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9F17 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9F19 18 08            jr 2F
1134+ 9F1B
1135+ 9F1B CB 47        1 bit 0,a
1136+ 9F1D C8               ret z
1137+ 9F1E
1138+ 9F1E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9F1E
1140+ 9F1E 21 DB 89         ld hl,Ctrl_1
1141+ 9F21 CB D6            set 2,(hl)
1142+ 9F23
1143+ 9F23 C9           2 ret
1144+ 9F24
1145+ 9F24              ; -----------------------------------------------------------------
1146+ 9F24              ;
1147+ 9F24              ;   25/04/23
1148+ 9F24              ;
1149+ 9F24
1150+ 9F24              Determina_resultado_comparativa
1151+ 9F24
1152+ 9F24              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9F24              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9F24              ;
1155+ 9F24              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9F24              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9F24              ;
1158+ 9F24              ;   SBC HL,DE
1159+ 9F24
1160+ 9F24              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9F24              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9F24
1163+ 9F24              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9F24              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9F24
1166+ 9F24
1167+ 9F24 3A A0 89         ld a,(Cuad_objeto)
1168+ 9F27 FE 02            cp 2
1169+ 9F29 28 26            jr z,2F
1170+ 9F2B 38 24            jr c,2F
1171+ 9F2D
1172+ 9F2D              ; Cuadrantes 3º y 4º
1173+ 9F2D
1174+ 9F2D E6 01            and 1
1175+ 9F2F 28 10            jr z,4F
1176+ 9F31
1177+ 9F31              ; Cuadrante 3º
1178+ 9F31
1179+ 9F31 7C               ld a,h
1180+ 9F32 06 00            ld b,0
1181+ 9F34
1182+ 9F34 CD BF 9F         call Compara_cositas_H3
1183+ 9F37
1184+ 9F37 04               inc b
1185+ 9F38 05               dec b
1186+ 9F39 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9F3A
1188+ 9F3A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9F3B 06 00            ld b,0
1190+ 9F3D
1191+ 9F3D CD D1 9F         call Compara_cositas_L3
1192+ 9F40 C9               ret
1193+ 9F41
1194+ 9F41              ; Cuadrante 4º
1195+ 9F41
1196+ 9F41 7C           4 ld a,h
1197+ 9F42 06 00            ld b,0
1198+ 9F44
1199+ 9F44 CD E3 9F         call Compara_cositas_H4
1200+ 9F47
1201+ 9F47 04               inc b
1202+ 9F48 05               dec b
1203+ 9F49 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9F4A
1205+ 9F4A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9F4B 06 00            ld b,0
1207+ 9F4D
1208+ 9F4D CD F9 9F         call Compara_cositas_L4
1209+ 9F50 C9               ret
1210+ 9F51
1211+ 9F51              ; Cuadrantes 1º y 2º.
1212+ 9F51
1213+ 9F51 28 10        2 jr z,3F
1214+ 9F53
1215+ 9F53              ; 1er Cuadrante
1216+ 9F53
1217+ 9F53 7C               ld a,h
1218+ 9F54 06 00            ld b,0
1219+ 9F56
1220+ 9F56 CD 97 9F         call Compara_cositas_H1
1221+ 9F59
1222+ 9F59 04               inc b
1223+ 9F5A 05               dec b
1224+ 9F5B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9F5C
1226+ 9F5C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9F5D 06 00            ld b,0
1228+ 9F5F
1229+ 9F5F CD AD 9F         call Compara_cositas_L1
1230+ 9F62 C9               ret
1231+ 9F63
1232+ 9F63
1233+ 9F63              ; 2º Cuadrante
1234+ 9F63
1235+ 9F63 7C           3 ld a,h
1236+ 9F64 06 00            ld b,0
1237+ 9F66
1238+ 9F66 CD 73 9F         call Compara_cositas_H2
1239+ 9F69
1240+ 9F69 04               inc b
1241+ 9F6A 05               dec b
1242+ 9F6B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9F6C
1244+ 9F6C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9F6D 06 00            ld b,0
1246+ 9F6F
1247+ 9F6F CD 85 9F         call Compara_cositas_L2
1248+ 9F72 C9               ret
1249+ 9F73
1250+ 9F73 A7           Compara_cositas_H2 and a
1251+ 9F74 28 0D            jr z,1F
1252+ 9F76              ;    cp $fd
1253+ 9F76              ;    jr z,1F
1254+ 9F76              ;    cp $fe
1255+ 9F76              ;    jr z,1F
1256+ 9F76 FE FF            cp $ff
1257+ 9F78 28 09            jr z,1F
1258+ 9F7A FE 01            cp $01
1259+ 9F7C 28 05            jr z,1F
1260+ 9F7E FE 02            cp $02
1261+ 9F80 28 01            jr z,1F
1262+ 9F82 C0               ret nz
1263+ 9F83 04           1 inc b
1264+ 9F84 C9               ret
1265+ 9F85
1266+ 9F85 A7           Compara_cositas_L2 and a
1267+ 9F86 28 0D            jr z,1F
1268+ 9F88              ;    cp $fd
1269+ 9F88              ;    jr z,1F
1270+ 9F88 FE FE            cp $fe
1271+ 9F8A 28 09            jr z,1F
1272+ 9F8C FE FF            cp $ff
1273+ 9F8E 28 05            jr z,1F
1274+ 9F90 FE 01            cp $01
1275+ 9F92 28 01            jr z,1F
1276+ 9F94              ;    cp $02
1277+ 9F94              ;    jr z,1F
1278+ 9F94 C0               ret nz
1279+ 9F95 04           1 inc b
1280+ 9F96 C9               ret
1281+ 9F97
1282+ 9F97 A7           Compara_cositas_H1 and a
1283+ 9F98 28 11            jr z,1F
1284+ 9F9A              ;    cp $fd
1285+ 9F9A              ;    jr z,1F
1286+ 9F9A              ;    cp $fe
1287+ 9F9A              ;    jr z,1F
1288+ 9F9A FE FF            cp $ff
1289+ 9F9C 28 0D            jr z,1F
1290+ 9F9E FE 01            cp $01
1291+ 9FA0 28 09            jr z,1F
1292+ 9FA2 FE 02            cp $02
1293+ 9FA4 28 05            jr z,1F
1294+ 9FA6 FE 03            cp $03
1295+ 9FA8 28 01            jr z,1F
1296+ 9FAA C0               ret nz
1297+ 9FAB 04           1 inc b
1298+ 9FAC C9               ret
1299+ 9FAD
1300+ 9FAD A7           Compara_cositas_L1 and a
1301+ 9FAE 28 0D            jr z,1F
1302+ 9FB0              ;    cp $fd
1303+ 9FB0              ;    jr z,1F
1304+ 9FB0              ;    cp $fe
1305+ 9FB0              ;    jr z,1F
1306+ 9FB0              ;    cp $ff
1307+ 9FB0              ;    jr z,1F
1308+ 9FB0 FE 01            cp $01
1309+ 9FB2 28 09            jr z,1F
1310+ 9FB4 FE 02            cp $02
1311+ 9FB6 28 05            jr z,1F
1312+ 9FB8 FE 03            cp $03
1313+ 9FBA 28 01            jr z,1F
1314+ 9FBC C0               ret nz
1315+ 9FBD 04           1 inc b
1316+ 9FBE C9               ret
1317+ 9FBF
1318+ 9FBF A7           Compara_cositas_H3 and a
1319+ 9FC0 28 0D            jr z,1F
1320+ 9FC2              ;    cp $fd
1321+ 9FC2              ;    jr z,1F
1322+ 9FC2 FE FE            cp $fe
1323+ 9FC4 28 09            jr z,1F
1324+ 9FC6 FE FF            cp $ff
1325+ 9FC8 28 05            jr z,1F
1326+ 9FCA FE 01            cp $01
1327+ 9FCC 28 01            jr z,1F
1328+ 9FCE              ;    cp $02
1329+ 9FCE              ;    jr z,1F
1330+ 9FCE              ;    cp $03
1331+ 9FCE              ;    jr z,1F
1332+ 9FCE C0               ret nz
1333+ 9FCF 04           1 inc b
1334+ 9FD0 C9               ret
1335+ 9FD1
1336+ 9FD1 A7           Compara_cositas_L3 and a
1337+ 9FD2 28 0D            jr z,1F
1338+ 9FD4              ;    cp $fd
1339+ 9FD4              ;    jr z,1F
1340+ 9FD4              ;    cp $fe
1341+ 9FD4              ;    jr z,1F
1342+ 9FD4              ;    cp $ff
1343+ 9FD4              ;    jr z,1F
1344+ 9FD4 FE 01            cp $01
1345+ 9FD6 28 09            jr z,1F
1346+ 9FD8 FE 02            cp $02
1347+ 9FDA 28 05            jr z,1F
1348+ 9FDC FE 03            cp $03
1349+ 9FDE 28 01            jr z,1F
1350+ 9FE0 C0               ret nz
1351+ 9FE1 04           1 inc b
1352+ 9FE2 C9               ret
1353+ 9FE3
1354+ 9FE3 A7           Compara_cositas_H4 and a
1355+ 9FE4 28 11            jr z,1F
1356+ 9FE6 FE FD            cp $fd
1357+ 9FE8 28 0D            jr z,1F
1358+ 9FEA FE FE            cp $fe
1359+ 9FEC 28 09            jr z,1F
1360+ 9FEE FE FF            cp $ff
1361+ 9FF0 28 05            jr z,1F
1362+ 9FF2 FE 01            cp $01
1363+ 9FF4 28 01            jr z,1F
1364+ 9FF6              ;    cp $02
1365+ 9FF6              ;    jr z,1F
1366+ 9FF6              ;    cp $03
1367+ 9FF6              ;    jr z,1F
1368+ 9FF6 C0               ret nz
1369+ 9FF7 04           1 inc b
1370+ 9FF8 C9               ret
1371+ 9FF9
1372+ 9FF9 A7           Compara_cositas_L4 and a
1373+ 9FFA 28 0D            jr z,1F
1374+ 9FFC              ;    cp $fd
1375+ 9FFC              ;    jr z,1F
1376+ 9FFC FE FE            cp $fe
1377+ 9FFE 28 09            jr z,1F
1378+ A000 FE FF            cp $ff
1379+ A002 28 05            jr z,1F
1380+ A004 FE 01            cp $01
1381+ A006 28 01            jr z,1F
1382+ A008              ;    cp $02
1383+ A008              ;    jr z,1F
1384+ A008              ;    cp $03
1385+ A008              ;    jr z,1F
1386+ A008 C0               ret nz
1387+ A009 04           1 inc b
1388+ A00A C9               ret
# file closed: Disparo.asm
1878  A00B              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A00B              ; Relojes y temporizaciones.
   2+ A00B
   3+ A00B              ; ------------------------------------------------------
   4+ A00B              ;
   5+ A00B              ;	16/7/23
   6+ A00B              ;
   7+ A00B              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A00B              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A00B              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A00B              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A00B              ;
  12+ A00B              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A00B              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A00B
  15+ A00B              ; Disparo_entidad db 1
  16+ A00B              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A00B              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A00B
  19+ A00B              Habilita_disparos
  20+ A00B
  21+ A00B 7E           	ld a,(hl)
  22+ A00C A7           	and a
  23+ A00D C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A00E
  25+ A00E EB           	ex de,hl
  26+ A00F
  27+ A00F 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A010 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A011
  30+ A011              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A011
  32+ A011 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A012 7E           	ld a,(hl)
  34+ A013 23           	inc hl
  35+ A014 77           	ld (hl),a
  36+ A015
  37+ A015 EB           	ex de,hl						; Habilitamos disparo.
  38+ A016 3E 01        	ld a,1
  39+ A018 77           	ld (hl),a
  40+ A019 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1879  A01A              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ A01A              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ A01A              ;
   3+ A01A              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ A01A              ;
   5+ A01A              ; *****************************************************************************************************************************************************************************************
   6+ A01A              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ A01A
   8+ A01A 7C           calcula_tercio ld a,h
   9+ A01B E6 18        	and $18
  10+ A01D CB 2F        	sra a
  11+ A01F CB 2F        	sra a
  12+ A021 CB 2F        	sra a
  13+ A023 C9           	ret
  14+ A024
# file closed: calcula_tercio.asm
1880  A024              	include "Cls.asm"
# file opened: Cls.asm
   1+ A024              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ A024              ;
   3+ A024              ;
   4+ A024              ;	CLS.
   5+ A024              ;
   6+ A024              ;	Limpia la pantalla y define sus atributos.
   7+ A024              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ A024              ;
   9+ A024              ;	COLORES: 0 ..... NEGRO
  10+ A024              ;    		 1 ..... AZUL
  11+ A024              ; 			 2 ..... ROJO
  12+ A024              ;			 3 ..... MAGENTA
  13+ A024              ; 			 4 ..... VERDE
  14+ A024              ; 			 5 ..... CIAN
  15+ A024              ;			 6 ..... AMARILLO
  16+ A024              ; 			 7 ..... BLANCO
  17+ A024              ;
  18+ A024              ;	INPUT: A contiene los atributos de pantalla.
  19+ A024              ;
  20+ A024              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ A024
  22+ A024
  23+ A024 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ A027 11 01 40     	LD DE,$4001
  25+ A02A 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ A02D 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ A02F ED B0        	LDIR
  28+ A031 01 FF 02     	LD BC,767
  29+ A034 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ A035 ED B0        	LDIR
  31+ A037 C9           	ret
  32+ A038
# file closed: Cls.asm
1881  A038              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ A038              ; ------------------------------------------------------------------------
   2+ A038              ;
   3+ A038              ;	30/1/24
   4+ A038              ;
   5+ A038              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ A038              ;	Fila superior "0", Columna izquierda "0".
   7+ A038              ;
   8+ A038              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ A038              ;
  10+ A038              ;	Modifica: A,BC y DE.
  11+ A038
  12+ A038 7D           Genera_coordenadas ld a,l
  13+ A039 E6 1F        	and $1f
  14+ A03B 32 92 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ A03E
  16+ A03E 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ A03F FE 40        	cp $40
  18+ A041 38 1C        	jr c,4F
  19+ A043
  20+ A043 CD 1A A0     	call calcula_tercio
  21+ A046 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ A047
  23+ A047 1E 00        	ld e,0
  24+ A049 7D           	ld a,l
  25+ A04A E6 E0        	and $e0
  26+ A04C 28 01        	jr z,1F
  27+ A04E 04           	inc b
  28+ A04F
  29+ A04F 04           1 inc b
  30+ A050 05           	dec b
  31+ A051 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ A053              ;														; _ , salimos.
  33+ A053 1C           3 inc e
  34+ A054 D6 20        	sub 32
  35+ A056 20 FB        	jr nz,3B
  36+ A058 10 F5        	djnz 1B
  37+ A05A
  38+ A05A 7B           2 ld a,e
  39+ A05B 32 93 89     	ld (Coordenada_y),a
  40+ A05E C9           	ret
  41+ A05F
  42+ A05F AF           4 xor a
  43+ A060 32 93 89     	ld (Coordenada_y),a
  44+ A063 C9           	ret
  45+ A064
  46+ A064              ; ------------------------------------------------------------------------
  47+ A064              ;	28/05/23
  48+ A064              ;
  49+ A064              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ A064              ;	Fila superior "0", Columna izquierda "0".
  51+ A064              ;
  52+ A064              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ A064              ;	Output: DE contendrá las coordenadas del disparo:
  54+ A064              ;
  55+ A064              ;		DE="$120d"
  56+ A064              ;
  57+ A064              ;		D, (Coordenada_X), Columnas, $12
  58+ A064              ;		E, (Coordenada_y), Filas, $0d
  59+ A064              ;
  60+ A064              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ A064
  62+ A064              ;	Modifica: A,BC y DE.
  63+ A064
  64+ A064
  65+ A064              Genera_coordenadas_disparo
  66+ A064
  67+ A064              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ A064
  69+ A064 7D           	ld a,l
  70+ A065 E6 1F        	and $1f
  71+ A067 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ A068 CD 1A A0     	call calcula_tercio
  73+ A06B 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ A06C 1E 00        	ld e,0
  75+ A06E 7D           	ld a,l
  76+ A06F E6 E0        	and $e0
  77+ A071 28 01        	jr z,1F
  78+ A073 04           	inc b
  79+ A074 1C           1 inc e
  80+ A075 D6 20        	sub 32
  81+ A077 20 FB        	jr nz,1B
  82+ A079 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ A07B C9           	ret
  84+ A07C
# file closed: Genera_coordenadas.asm
1882  A07C              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A07C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A07C              ;
   3+ A07C              ;	12/12/23
   4+ A07C              ;
   5+ A07C              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A07C
   7+ A07C              ;	ADC HL,SP	LD (addr),SP
   8+ A07C              ;	ADD HL,SP	LD SP,(addr)
   9+ A07C              ;	ADD IX,SP	LD SP,nn
  10+ A07C              ; 	ADD IY,SP	LD SP,HL
  11+ A07C              ;				LD SP,IX
  12+ A07C              ;	DEC SP		LD SP,IY
  13+ A07C
  14+ A07C              ;	EX (SP),HL
  15+ A07C              ;	EX (SP),IX
  16+ A07C              ;	EX (SP),IY
  17+ A07C
  18+ A07C              ;	INC SP
  19+ A07C
  20+ A07C                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF ED 73 EC 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 80C3
  33+ 80C3 31 AA 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  34+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  35+ 80C8              ;                                                 ; _ con las coordenadas_X de Amadeus.
  36+ 80C8 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  37+ 80CB
  38+ 80CB E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  39+ 80CC DD E5            push ix                                       ; IX contiene el puntero de impresión.
  40+ 80CE FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  41+ 80D0
  42+ 80D0              ; Disparo o entidad?
  43+ 80D0
  44+ 80D0 3A DB 89         ld a,(Ctrl_1)
  45+ 80D3 CB 47            bit 0,a
  46+ 80D5 28 05            jr z,2F
  47+ 80D7
  48+ 80D7 2A F4 89         ld hl,(Stack_snapshot_disparos)
  49+ 80DA 18 0F            jr 4F
  50+ 80DC
  51+ 80DC              ; No es disparo. Entidad/Amadeus ????
  52+ 80DC
  53+ 80DC 3A AE 89     2 ld a,(Ctrl_0)
  54+ 80DF CB 77            bit 6,a
  55+ 80E1 28 05            jr z,7F
  56+ 80E3
  57+ 80E3              ; Guardamos foto de Amadeus.
  58+ 80E3
  59+ 80E3 2A F8 89         ld hl,(End_Snapshot_Amadeus)
  60+ 80E6 18 03            jr 4F
  61+ 80E8
  62+ 80E8 2A F2 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  63+ 80EB
  64+ 80EB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  65+ 80ED
  66+ 80ED D1           1 pop de
  67+ 80EE 73               ld (hl),e
  68+ 80EF 23               inc hl
  69+ 80F0 72               ld (hl),d
  70+ 80F1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  71+ 80F2 10 F9            djnz 1B
  72+ 80F4
  73+ 80F4              ; Disparo o entidad ?
  74+ 80F4
  75+ 80F4 3A DB 89         ld a,(Ctrl_1)
  76+ 80F7 CB 47            bit 0,a
  77+ 80F9 28 05            jr z,5F
  78+ 80FB
  79+ 80FB 22 F4 89         ld (Stack_snapshot_disparos),hl
  80+ 80FE 18 12            jr 6F
  81+ 8100
  82+ 8100              ; Entidad o Amadeus ?
  83+ 8100
  84+ 8100 3A AE 89     5 ld a,(Ctrl_0)
  85+ 8103 CB 77            bit 6,a
  86+ 8105 28 08            jr z,8F
  87+ 8107
  88+ 8107 22 F8 89         ld (End_Snapshot_Amadeus),hl
  89+ 810A ED 7B EC 89      ld sp,(Stack)
  90+ 810E C9               ret
  91+ 810F
  92+ 810F 22 F2 89     8 ld (Stack_snapshot),hl
  93+ 8112 ED 7B EC 89  6 ld sp,(Stack)
  94+ 8116
  95+ 8116 C9               ret
  96+ 8117
  97+ 8117              ; -----------------------------------------------------------------------------
  98+ 8117              ;
  99+ 8117              ;   21/11/23
 100+ 8117
 101+ 8117              Limpia_y_reinicia_Stack_Snapshot
 102+ 8117
 103+ 8117              ;   Limpia Album_de_fotos.
 104+ 8117
 105+ 8117 2A F2 89         ld hl,(Stack_snapshot)
 106+ 811A 7D               ld a,l
 107+ 811B A7               and a
 108+ 811C C8               ret z   ;   Salimos si el álbum está vacío.
 109+ 811D
 110+ 811D 47               ld b,a
 111+ 811E 04               inc b
 112+ 811F
 113+ 811F 36 00        1 ld (hl),0
 114+ 8121 2D               dec l
 115+ 8122 10 FB            djnz 1B
 116+ 8124
 117+ 8124              ;   Reinicializa (Stack_snapshot).
 118+ 8124
 119+ 8124 21 00 80         ld hl,Album_de_fotos
 120+ 8127 22 F2 89         ld (Stack_snapshot),hl
 121+ 812A
 122+ 812A C9               ret
# file closed: Guarda_foto_registros.asm
1883  812B
1884  812B              	SAVESNA "Pruebas.sna", START
1885  812B
1886  812B
1887  812B
1888  812B
# file closed: Banco_de_pruebas.asm
