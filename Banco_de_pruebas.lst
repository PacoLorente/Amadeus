# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2E 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD 48 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD C9 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD D9 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 183  8BC4
 184  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC6
 187  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC6
 189  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC7
 195  8BC7 00           Ctrl_2 db 0
 196  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC8              ;
 204  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC8              ;														BIT 4, ???
 210  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC8
 212  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC9              ;
 218  8BC9              ; 														DESCRIPCIÖN:
 219  8BC9              ;
 220  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC9              ;
 234  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC9
 238  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC9
 240  8BC9 00           Filas db 0												; Filas. [DRAW]
 241  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCF
 245  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCF
 247  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BD0
 251  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BD0
 253  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BD0              ;
 255  8BD0              ;	COLORES: 0 ..... NEGRO
 256  8BD0              ;    		 1 ..... AZUL
 257  8BD0              ; 			 2 ..... ROJO
 258  8BD0              ;			 3 ..... MAGENTA
 259  8BD0              ; 			 4 ..... VERDE
 260  8BD0              ; 			 5 ..... CIAN
 261  8BD0              ;			 6 ..... AMARILLO
 262  8BD0              ; 			 7 ..... BLANCO
 263  8BD0
 264  8BD0 00 00        Indice_Sprite_der defw 0
 265  8BD2 00 00        Indice_Sprite_izq defw 0
 266  8BD4 00 00        Puntero_DESPLZ_der defw 0
 267  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD8
 269  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BDB 00           Columnas db 0
 272  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDF
 276  8BDF              ; variables de control general.
 277  8BDF
 278  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BE0
 280  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BE0
 282  8BE0              Perfiles_de_velocidad
 283  8BE0
 284  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE4
 289  8BE4              ; Contadores de 16 bits.
 290  8BE4
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BEC
 296  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BEC
 298  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BF2              ;
 302  8BF2              ;
 303  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BF3 00           Incrementa_puntero_backup db 0
 307  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF8              ;
 313  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF8              ;
 317  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF8              ;
 322  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF8
 326  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF9
 328  8BF9              ;														DESCRIPCIÓN:
 329  8BF9              ;
 330  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF9
 337  8BF9              ;														BIT 3, Recarga de nueva oleada.
 338  8BF9              ;														BIT 4, Recarga de nueva oleada.
 339  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF9              ;														BIT 6, **** Frame completo.
 341  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF9
 343  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BFB
 348  8BFB              ; Gestión de ENTIDADES y CAJAS.
 349  8BFB
 350  8BFB 00 00        Puntero_store_caja defw 0
 351  8BFD 00 00        Puntero_restore_caja defw 0
 352  8BFF 00 00        Indice_restore_caja defw 0
 353  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C04
 357  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C08              ;														; _ puntero (Indice_entidades).
 360  8C08
 361  8C08              ;---------------------------------------------------------------------------------------------------------------
 362  8C08              ;
 363  8C08              ;	12/08/24
 364  8C08              ;
 365  8C08              ;	Álbumes.
 366  8C08
 367  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C0A              ;														; _variable para almacenar lo posición del puntero_
 369  8C0A              ; 														; _de pila, SP.
 370  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C0C
 373  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C0C
 375  8C0C 00 00        Album_de_pintado defw 0
 376  8C0E 00 00        Album_de_borrado defw 0
 377  8C10 00 00        Album_de_pintado_Amadeus defw 0
 378  8C12 00 00        Album_de_borrado_Amadeus defw 0
 379  8C14 00 00        Album_de_pintado_disparos defw 0
 380  8C16 00 00        Album_de_borrado_disparos defw 0
 381  8C18
 382  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C1A 00           Num_de_bytes_album_de_disparos db 0
 384  8C1B 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C1C
 386  8C1C 00           Numero_de_disparos_de_Amadeus db 0
 387  8C1D 00           Numero_de_disparos_de_entidades db 0
 388  8C1E
 389  8C1E 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 390  8C1F              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 391  8C1F
 392  8C1F 00 00        Puntero_rancio_disparos_album defw 0
 393  8C21
 394  8C21 00 00        Techo_Scanlines_album defw 0
 395  8C23 00 00        Techo_Scanlines_album_2 defw 0
 396  8C25 00           Switch db 0
 397  8C26 00 00        Techo defw 0
 398  8C28 00 00        Scanlines_album_SP defw 0
 399  8C2A 00 89        India_SP defw Tabla_de_pintado
 400  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 401  8C2E
 402  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 403  8C2F              ;
 404  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 405  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 406  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 407  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 408  8C2F              ;																Habilita el borrado/pintado de sprites.
 409  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 410  8C2F              ;																_ a la baja.
 411  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 412  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 413  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 414  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 415  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 416  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 417  8C2F
 418  8C2F 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 419  8C30              ;
 420  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 421  8C30              ;
 422  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 423  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 424  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 425  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 426  8C30              ;
 427  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 428  8C30              ;															_ masticados ya generados.
 429  8C30              ;
 430  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 431  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 432  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 433  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 434  8C30
 435  8C30 00           Ctrl_5 db 0
 436  8C31
 437  8C31              ; Gestión de Disparos.
 438  8C31
 439  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 440  8C33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 441  8C35
 442  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 443  8C36
 444  8C36              ;
 445  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 446  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 447  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 448  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 449  8C36
 450  8C36
 451  8C36
 452  8C36
 453  8C36
 454  8C36
 455  8C36
 456  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 457  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 458  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 459  8C38
 460  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 461  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 462  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 464  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 466  8C40
 467  8C40              ;---------------------------------------------------------------------------------------------------------------
 468  8C40
 469  8C40              ; Relojes y temporizaciones.
 470  8C40
 471  8C40 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 472  8C41 05           Clock_explosion_Amadeus db 5
 473  8C42 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 474  8C43
 475  8C43 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 476  8C45
 477  8C45 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 478  8C47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 479  8C48              ;														; Repite la oleada de entidades.
 480  8C48
 481  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 482  8C48              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 483  8C48              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 484  8C48              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 485  8C48
 486  8C48              ;---------------------------------------------------------------------------------------------------------------
 487  8C48
 488  8C48              ; Gestión de NIVELES.
 489  8C48
 490  8C48 00           Nivel db 0												; Nivel actual del juego.
 491  8C49 00 00        Puntero_indice_NIVELES defw 0
 492  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 493  8C4D              ; 														; _ que definen el NIVEL.
 494  8C4D
 495  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 496  8C4D
 497  8C4D              ; Temporizaciones Shield.
 498  8C4D
 499  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 500  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 501  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 502  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 503  8C55 00           Shield_3 db 0
 504  8C56
 505  8C56 06           Lives db 6
 506  8C57
 507  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 508  8C57              ;
 509  8C57              ;	5/1/24
 510  8C57
 511  8C57              START
 512  8C57
 513  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 514  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 515  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 516  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 517  8C60 F3           	DI
 518  8C61
 519  8C61              ; Limpiamos pantalla.
 520  8C61
 521  8C61 3E 07        	ld a,%00000111
 522  8C63              ;	call Cls
 523  8C63 CD BE 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 524  8C66
 525  8C66              ; INICIALIZACIÓN.
 526  8C66
 527  8C66 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 528  8C68 CD 0B 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 529  8C6B CD 52 8E     	call Extrae_numero_aleatorio_y_avanza
 530  8C6E
 531  8C6E 6F           	ld l,a
 532  8C6F 26 00        	ld h,0
 533  8C71 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 534  8C74
 535  8C74              ;	Inicializa 1er Nivel.
 536  8C74
 537  8C74 21 97 8B     	ld hl,Indice_de_niveles
 538  8C77 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 539  8C7A CD 3B 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 540  8C7D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 541  8C7D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 542  8C7D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 543  8C7D
 544  8C7D              ;	Inicia los álbumes de líneas.
 545  8C7D
 546  8C7D CD 07 90     	call Inicia_albumes_de_lineas
 547  8C80              ;
 548  8C80 CD 17 90     	call Inicia_albumes_de_lineas_Amadeus
 549  8C83 CD 24 90     	call Inicia_albumes_de_disparos
 550  8C86
 551  8C86
 552  8C86 CD 80 92     4 call Inicia_Entidades
 553  8C89 CD E3 92     	call Inicia_Amadeus
 554  8C8C
 555  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 556  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 557  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 558  8C8C
 559  8C8C 11 70 89     	ld de,Amadeus_BOX
 560  8C8F CD 36 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 561  8C92 CD 26 93     	call Limpiamos_bandeja_DRAW
 562  8C95
 563  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 564  8C95
 565  8C95 06 3C        	ld b,60
 566  8C97 CD 08 9D     2 call Amadeus_a_izquierda
 567  8C9A 10 FB        	djnz 2B
 568  8C9C
 569  8C9C CD E5 8F     	call Genera_datos_de_impresion_Amadeus
 570  8C9F
 571  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 572  8C9F
 573  8C9F CD 37 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 574  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 575  8CA2
 576  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 577  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 578  8CA2
 579  8CA2              ;	ld a,(Ctrl_1)
 580  8CA2              ;	bit 3,a
 581  8CA2              ;	jr nz,5F											 ; Loop
 582  8CA2
 583  8CA2              ;	ld de,Amadeus_db
 584  8CA2              ;	call Store_Amadeus
 585  8CA2
 586  8CA2              ; 	INICIA DISPAROS !!!!!
 587  8CA2
 588  8CA2 CD 4D 90     	call Inicia_Puntero_Disparo_Entidades
 589  8CA5 CD 54 90     	call Inicia_Puntero_Disparo_Amadeus
 590  8CA8
 591  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CA8
 593  8CA8              ;5 call Inicia_punteros_de_cajas
 594  8CA8              ;	call Restore_entidad
 595  8CA8
 596  8CA8              ;	ld a,(Ctrl_1)
 597  8CA8              ;	bit 3,a
 598  8CA8              ;	jr z,6F
 599  8CA8
 600  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CA8
 602  8CA8              ;	ld hl,Ctrl_1
 603  8CA8              ;	res 3,(hl)
 604  8CA8              ;	jr Main
 605  8CA8
 606  8CA8              ; Damos por concluida la construcción del FRAME.
 607  8CA8              ;
 608  8CA8
 609  8CA8 CD C9 90     	call Inicia_Shield
 610  8CAB
 611  8CAB
 612  8CAB 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 613  8CAE 22 21 8C     	ld (Techo_Scanlines_album),hl
 614  8CB1
 615  8CB1 2A 0E 8C     	ld hl,(Album_de_borrado)
 616  8CB4 22 28 8C     	ld (Scanlines_album_SP),hl
 617  8CB7
 618  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 619  8CBA 22 2A 8C     	ld (India_SP),hl
 620  8CBD
 621  8CBD 21 2E 8C     	ld hl,Ctrl_3
 622  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CC2 CB D6        	set 2,(hl)
 624  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC6
 626  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC7
 628  8CC7 76           	halt
 629  8CC8
 630  8CC8              ; ------------------------------------
 631  8CC8
 632  8CC8              Main
 633  8CC8              ;
 634  8CC8              ; 22/08/24
 635  8CC8
 636  8CC8              ; Gestión de disparos.
 637  8CC8
 638  8CC8 CD 34 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 639  8CCB CD D8 9E     	call Mueve_Disparos
 640  8CCE
 641  8CCE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 642  8CCE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 643  8CCE              ; Este hecho lo indica el bit2 de (Impacto2).
 644  8CCE
 645  8CCE CD E3 A0     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 646  8CD1
 647  8CD1 2A 45 8C     16 ld hl,(Clock_next_entity)
 648  8CD4 ED 4B 78 5C  	ld bc,(FRAMES)
 649  8CD8 A7           	and a
 650  8CD9 ED 42        	sbc hl,bc
 651  8CDB 20 16        	jr nz,13F
 652  8CDD
 653  8CDD              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 654  8CDD              ; _ (Clock_next_entity) para la siguiente entidad.
 655  8CDD
 656  8CDD 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 657  8CE0 47           	ld b,a
 658  8CE1 3A 03 8C     	ld a,(Entidades_en_curso)
 659  8CE4 B8           	cp b
 660  8CE5 28 0C        	jr z,13F
 661  8CE7 30 0A        	jr nc,13F
 662  8CE9
 663  8CE9 3C           	inc a
 664  8CEA 32 03 8C     	ld (Entidades_en_curso),a
 665  8CED
 666  8CED              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 667  8CED
 668  8CED CD 52 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 669  8CF0 CD 6E 8E     	call Define_Clock_next_entity
 670  8CF3
 671  8CF3              ; -------------------------------------------------------------------------------------------------------------
 672  8CF3
 673  8CF3              ; Habilita disparos.
 674  8CF3
 675  8CF3              13
 676  8CF3
 677  8CF3              ;	ld hl,Disparo_Amadeus
 678  8CF3              ;	ld de,CLOCK_repone_disparo_Amadeus
 679  8CF3              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 680  8CF3
 681  8CF3              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 682  8CF3              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 683  8CF3              ;	call Habilita_disparos
 684  8CF3
 685  8CF3              ; COLISIONES.
 686  8CF3
 687  8CF3              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 688  8CF3
 689  8CF3              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 690  8CF3              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 691  8CF3              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 692  8CF3
 693  8CF3              ;	xor a
 694  8CF3              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 695  8CF3
 696  8CF3              ;	call Inicia_punteros_de_cajas
 697  8CF3              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 698  8CF3              ; 														; _ en DRAW.
 699  8CF3
 700  8CF3              ;	ld a,(Filas)
 701  8CF3              ;	and a
 702  8CF3              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 703  8CF3              ;	call Incrementa_punteros_de_cajas
 704  8CF3              ;	jr 12B
 705  8CF3
 706  8CF3              ; ---------------------------------------------------------------------------------------
 707  8CF3
 708  8CF3              ;10 ld a,(Numero_parcial_de_entidades)
 709  8CF3              ;    ld b,a
 710  8CF3              ;	and a
 711  8CF3              ;	jr nz,11F
 712  8CF3
 713  8CF3              ;	ld hl,Ctrl_1;
 714  8CF3              ;	bit 4,(hl)
 715  8CF3              ;	jp nz,16F
 716  8CF3
 717  8CF3              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 718  8CF3
 719  8CF3              ;	ld hl,Ctrl_1
 720  8CF3              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 721  8CF3
 722  8CF3              ;	ld a,(Contador_de_frames)
 723  8CF3              ;	inc a
 724  8CF3              ;	ld (Activa_recarga_cajas),a
 725  8CF3
 726  8CF3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 727  8CF3
 728  8CF3 3A 03 8C     11 ld a,(Entidades_en_curso)
 729  8CF6 A7           	and a
 730  8CF7 CA 5F 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 731  8CFA 47           	ld b,a												; No hay entidades que gestionar.
 732  8CFB
 733  8CFB              ; ( Código que ejecutamos con cada entidad: ).
 734  8CFB
 735  8CFB              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 736  8CFB              ;
 737  8CFB              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 738  8CFB
 739  8CFB 21 00 89     	ld hl,Tabla_de_pintado
 740  8CFE 22 2A 8C     	ld (India_SP),hl
 741  8D01
 742  8D01 21 2E 8C     	ld hl,Ctrl_3
 743  8D04 CB D6        	set 2,(hl)
 744  8D06 CD 09 8E     	call Change
 745  8D09
 746  8D09 C5           15 push bc 												; Nº de entidades en curso.
 747  8D0A
 748  8D0A CD 96 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 749  8D0D ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 750  8D11
 751  8D11              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 752  8D11
 753  8D11              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 754  8D11
 755  8D11 3A BF 8B     	ld a,(Impacto)
 756  8D14 A7           	and a
 757  8D15 28 13        	jr z,8F
 758  8D17
 759  8D17              ; 5/7/24
 760  8D17              ; Nota importante:
 761  8D17              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 762  8D17              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 763  8D17              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 764  8D17
 765  8D17 3A 2E 8C     	ld a,(Ctrl_3)
 766  8D1A CB 7F        	bit 7,a
 767  8D1C 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 768  8D1E              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 769  8D1E 3A 74 89     	ld a,(Impacto_Amadeus)
 770  8D21 A7           	and a
 771  8D22 C4 A6 91     	call nz,Genera_explosion
 772  8D25 20 1B        	jr nz,Gestiona_siguiente_entidad
 773  8D27
 774  8D27              ; Falsa colisión !!!
 775  8D27
 776  8D27 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 777  8D2A
 778  8D2A              ; -------------------------------------------
 779  8D2A
 780  8D2A CD B2 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 781  8D2D CD E9 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 782  8D30 CD 9E 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 783  8D33 CD A6 94     	call Genera_datos_de_impresion
 784  8D36 CD 49 93     	call Decrementa_Contador_de_mov_masticados
 785  8D39
 786  8D39              ; -------------------------------------------
 787  8D39
 788  8D39              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 789  8D39
 790  8D39 2A C0 8B     	ld hl,(Puntero_de_impresion)
 791  8D3C CD 7A 94     	call Genera_coordenadas
 792  8D3F
 793  8D3F CD 61 A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 794  8D42
 795  8D42              ;	ld hl,Ctrl_0
 796  8D42              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 797  8D42
 798  8D42              Gestiona_siguiente_entidad
 799  8D42
 800  8D42 CD 1B 93      	call Store_Restore_cajas
 801  8D45 C1           	pop bc
 802  8D46 10 C1        	djnz 15B
 803  8D48
 804  8D48              ; Hemos gestionado todas las entidades.
 805  8D48
 806  8D48 CD C2 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 807  8D4B CD D9 8E     	call Ordena_tabla_de_impresion
 808  8D4E CD 37 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 809  8D51
 810  8D51              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 811  8D51              ; Hemos gestionado todas las unidades.
 812  8D51              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 813  8D51
 814  8D51              ;	ld hl,Ctrl_1
 815  8D51              ;	res 2,(hl)
 816  8D51
 817  8D51 CD 83 8E     	call Borra_diferencia
 818  8D54
 819  8D54 3A 2E 8C     	ld a,(Ctrl_3)
 820  8D57 CB 5F        	bit 3,a
 821  8D59 20 04        	jr nz,Gestion_de_Amadeus
 822  8D5B
 823  8D5B EB           	ex de,hl
 824  8D5C 71           	ld (hl),c
 825  8D5D 2C           	inc l
 826  8D5E 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 827  8D5F
 828  8D5F
 829  8D5F              ;! GESTIONA AMADEUS !!!!!!!!!!
 830  8D5F
 831  8D5F              Gestion_de_Amadeus
 832  8D5F
 833  8D5F 21 2E 8C     	ld hl,Ctrl_3
 834  8D62 CB 76        	bit 6,(hl)
 835  8D64 28 13        	jr z,Amadeus_vivo
 836  8D66
 837  8D66              ; Amadeus ha sido destruido.
 838  8D66              ; Decrementa (Temp_new_live).
 839  8D66
 840  8D66 21 42 8C     	ld hl,Temp_new_live
 841  8D69 35           	dec (hl)
 842  8D6A 20 2C        	jr nz,End_frame
 843  8D6C
 844  8D6C              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 845  8D6C
 846  8D6C 21 56 8C     	ld hl,Lives
 847  8D6F 35           	dec (hl)
 848  8D70
 849  8D70              ;! Fin del juego
 850  8D70
 851  8D70 F3           	di
 852  8D71 28 FE        	jr z,$
 853  8D73 FB           	ei
 854  8D74
 855  8D74              ; Nueva nave.
 856  8D74
 857  8D74 CD AF 8D     	call Reinicia_Amadeus
 858  8D77 18 1F        	jr End_frame
 859  8D79
 860  8D79              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 861  8D79
 862  8D79              Amadeus_vivo
 863  8D79
 864  8D79 3A 74 89     	ld a,(Impacto_Amadeus)
 865  8D7C A7           	and a
 866  8D7D C4 D6 91     	call nz, Genera_explosion_Amadeus
 867  8D80 20 16        	jr nz, End_frame
 868  8D82
 869  8D82 CD 83 91     	call Teclado
 870  8D85
 871  8D85              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 872  8D85              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 873  8D85
 874  8D85 CD 7E 9F     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 875  8D88 CD B5 9E     	call Limpia_album_de_pintado_disparos
 876  8D8B
 877  8D8B 21 2E 8C     	ld hl,Ctrl_3
 878  8D8E CB 6E        	bit 5,(hl)
 879  8D90 28 06        	jr z,End_frame
 880  8D92
 881  8D92              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 882  8D92
 883  8D92 CD 24 8E     	call Change_Amadeus
 884  8D95 CD E5 8F     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 885  8D98
 886  8D98              End_frame
 887  8D98
 888  8D98 2A 0E 8C     	ld hl,(Album_de_borrado)
 889  8D9B 22 28 8C     	ld (Scanlines_album_SP),hl
 890  8D9E
 891  8D9E 21 2E 8C     	ld hl,Ctrl_3
 892  8DA1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 893  8DA3 CB 9E        	res 3,(hl)
 894  8DA5 CB A6        	res 4,(hl)
 895  8DA7
 896  8DA7 AF           	xor a
 897  8DA8 D3 FE        	out ($fe),a
 898  8DAA
 899  8DAA 76           	halt
 900  8DAB
 901  8DAB              ; ----------------------------------------
 902  8DAB
 903  8DAB              ;	ld a,(Ctrl_1) 										; Existe Loop?
 904  8DAB              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 905  8DAB CA C8 8C     	jp z,Main
 906  8DAE
 907  8DAE              ; RECARGA DE NUEVA OLEADA.
 908  8DAE
 909  8DAE              ;	ld a,(Contador_de_frames)
 910  8DAE              ;	ld b,a
 911  8DAE              ;	ld a,(Activa_recarga_cajas)
 912  8DAE              ;	cp b
 913  8DAE              ;	jr z,20F
 914  8DAE
 915  8DAE              ;	ld hl,Ctrl_1
 916  8DAE              ;	set 4,(hl)
 917  8DAE              ;	jp Main
 918  8DAE
 919  8DAE              ;20 ld hl,Ctrl_1
 920  8DAE              ;	res 4,(hl)
 921  8DAE
 922  8DAE              ;	ld a,(Contador_de_frames)
 923  8DAE
 924  8DAE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 925  8DAE              ;! _ IMPREDECIBLE !!!!
 926  8DAE
 927  8DAE              ;	add 10
 928  8DAE              ;	ld (Clock_next_entity),a
 929  8DAE
 930  8DAE              ;	jp 4B
 931  8DAE
 932  8DAE C9           	ret
 933  8DAF
 934  8DAF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 935  8DAF              ;
 936  8DAF              ;	16/11/23
 937  8DAF
 938  8DAF              ;;Gestiona_Amadeus
 939  8DAF
 940  8DAF              ;! Activa/desactiva impacto con Amadeus.
 941  8DAF
 942  8DAF              ;	ld a,(Impacto)
 943  8DAF              ;	and a
 944  8DAF              ;	jr nz,2F
 945  8DAF
 946  8DAF              ;;	call Mov_Amadeus
 947  8DAF
 948  8DAF              ;;2 ld a,(Ctrl_0)
 949  8DAF              ;;	bit 4,a
 950  8DAF              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 951  8DAF
 952  8DAF              ;;	call Guarda_foto_entidad_a_pintar
 953  8DAF              ;;	call Guarda_datos_de_borrado_Amadeus
 954  8DAF
 955  8DAF              ;;1 ld hl,Ctrl_0
 956  8DAF              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 957  8DAF
 958  8DAF              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 959  8DAF
 960  8DAF              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 961  8DAF
 962  8DAF              ;	call Calcula_numero_de_disparotes
 963  8DAF
 964  8DAF              ;;	ret
 965  8DAF
 966  8DAF              ; -----------------------------
 967  8DAF              ;
 968  8DAF              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 969  8DAF              ;
 970  8DAF              ;	INPUTS: B a de estar a "0".
 971  8DAF
 972  8DAF              ;Prepara_Borra_sprites
 973  8DAF
 974  8DAF              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 975  8DAF              ;	ld a,l
 976  8DAF              ;	ret z
 977  8DAF
 978  8DAF              ;	srl a
 979  8DAF
 980  8DAF              ;2 sub 16
 981  8DAF              ;	jr z,1F
 982  8DAF              ;	inc b
 983  8DAF              ;	jr 2B
 984  8DAF
 985  8DAF              ;1 inc b
 986  8DAF
 987  8DAF              ;	exx
 988  8DAF              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 989  8DAF              ;	exx
 990  8DAF
 991  8DAF              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 992  8DAF              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 993  8DAF
 994  8DAF              ;	ret
 995  8DAF
 996  8DAF              ; --------------------------------------------------------------------------------------------------------------
 997  8DAF              ;
 998  8DAF              ;	15/12/23
 999  8DAF
1000  8DAF              ;Mov_obj
1001  8DAF
1002  8DAF              ;	ld a,(Ctrl_2)
1003  8DAF              ;	bit 1,a
1004  8DAF              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1005  8DAF
1006  8DAF              ; Explosión:
1007  8DAF
1008  8DAF              ;	ld a,(Frames_explosion)
1009  8DAF              ;	and a
1010  8DAF              ;	jr nz,4F
1011  8DAF
1012  8DAF              ;!  Una alimaña menos!!!!!!!!!1
1013  8DAF
1014  8DAF              ; Se trataba de una Entidad_guía ???
1015  8DAF
1016  8DAF              ;	ld a,(Ctrl_2)
1017  8DAF              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1018  8DAF              ;	jr z,5F
1019  8DAF
1020  8DAF              ;	ld hl,Ctrl_3
1021  8DAF              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1022  8DAF
1023  8DAF              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1024  8DAF              ;!! _generado puede ser distinto, (aletoriedad).
1025  8DAF
1026  8DAF              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1027  8DAF              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1028  8DAF              ;	dec (hl)
1029  8DAF              ;	ld hl,Entidades_en_curso
1030  8DAF              ;	dec (hl)
1031  8DAF              ;	ld hl,Numero_de_entidades
1032  8DAF              ;	dec (hl)
1033  8DAF              ;	jr 3F
1034  8DAF
1035  8DAF              ; -----
1036  8DAF
1037  8DAF              ;	`Movemos´ la explosión.
1038  8DAF
1039  8DAF              ;4 ld hl,(Puntero_DESPLZ_der)
1040  8DAF              ;	inc hl
1041  8DAF              ;	inc hl
1042  8DAF              ;	call Extrae_address
1043  8DAF              ;;	ld (Puntero_objeto),hl
1044  8DAF
1045  8DAF              ;;	ld hl,Frames_explosion
1046  8DAF              ;;	dec (hl)
1047  8DAF
1048  8DAF              ;;	ld hl,Ctrl_0
1049  8DAF              ;;	set 4,(hl);;
1050  8DAF
1051  8DAF              ;;	jr 3F
1052  8DAF
1053  8DAF              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1054  8DAF
1055  8DAF              ;2 xor a
1056  8DAF              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1057  8DAF
1058  8DAF              ; Movemos Entidades malignas.
1059  8DAF              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1060  8DAF
1061  8DAF              ;	ld a,(Ctrl_2)
1062  8DAF              ;	bit 5,a
1063  8DAF              ;	jr nz,8F
1064  8DAF
1065  8DAF              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1066  8DAF              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1067  8DAF              ;	jr 7F
1068  8DAF
1069  8DAF              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1070  8DAF
1071  8DAF              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1072  8DAF              ;	bit 4,a
1073  8DAF              ;	ret z
1074  8DAF
1075  8DAF              ; Ha habido desplazamiento de la entidad maligna.
1076  8DAF              ; Ha llegado a zona de AMADEUS ???
1077  8DAF
1078  8DAF              ;7 ld a,(Coordenada_y)
1079  8DAF              ;	cp $14
1080  8DAF              ;	jr c,1F
1081  8DAF
1082  8DAF              ; ---------
1083  8DAF
1084  8DAF              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1085  8DAF              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1086  8DAF
1087  8DAF              ;	di
1088  8DAF              ;	call Genera_coordenadas_X
1089  8DAF              ;	call Compara_coordenadas_X
1090  8DAF              ;	ei
1091  8DAF
1092  8DAF              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1093  8DAF
1094  8DAF              ; ---------
1095  8DAF
1096  8DAF              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1097  8DAF              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1098  8DAF              ;	call Limpia_Variables_de_borrado
1099  8DAF
1100  8DAF              ;3 ret
1101  8DAF
1102  8DAF              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1103  8DAF              ;
1104  8DAF              ;	24/07/24
1105  8DAF
1106  8DAF              Reinicia_Amadeus
1107  8DAF
1108  8DAF              ;	Reinicia posición y estado.
1109  8DAF
1110  8DAF 21 CF 50     	ld hl,$50cf
1111  8DB2 22 75 89     	ld (p.imp.amadeus),hl
1112  8DB5 21 F0 E0     	ld hl,$e0f0
1113  8DB8 22 77 89     	ld (Pamm_Amadeus),hl
1114  8DBB 21 3D 00     	ld hl,$003d
1115  8DBE 22 79 89     	ld (Comm_Amadeus),hl
1116  8DC1
1117  8DC1              ;	limpiamos el álbum de borrado.
1118  8DC1
1119  8DC1 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1120  8DC4
1121  8DC4 AF           	xor a
1122  8DC5 77           	ld (hl),a
1123  8DC6
1124  8DC6 E5           	push hl
1125  8DC7 D1           	pop de
1126  8DC8 13           	inc de
1127  8DC9
1128  8DC9 01 23 00     	ld bc,35
1129  8DCC ED B0        	ldir
1130  8DCE
1131  8DCE CD E5 8F     	call Genera_datos_de_impresion_Amadeus
1132  8DD1
1133  8DD1              ;	Reinicia temporizaciones.
1134  8DD1
1135  8DD1 CD C9 90     	call Inicia_Shield
1136  8DD4
1137  8DD4 3E 5A        	ld a,90
1138  8DD6 32 53 8C     	ld (Shield),a
1139  8DD9
1140  8DD9 3E 64        	ld a,100
1141  8DDB 32 42 8C     	ld (Temp_new_live),a
1142  8DDE
1143  8DDE              ; 	Restauramos el FLAG: Amadeus vivo.
1144  8DDE
1145  8DDE 21 2E 8C     	ld hl,Ctrl_3
1146  8DE1 CB B6        	res 6,(hl)
1147  8DE3
1148  8DE3              ;	Fuerza la impresión de la nave en el siguiente frame.
1149  8DE3
1150  8DE3 21 2E 8C      	ld hl,Ctrl_3
1151  8DE6 CB EE        	set 5,(hl)
1152  8DE8
1153  8DE8 C9           	ret
1154  8DE9
1155  8DE9              ; --------------------------------------------------------------------------------------------------------------
1156  8DE9              ;
1157  8DE9              ;	12/05/24
1158  8DE9
1159  8DE9 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1160  8DEC CB 27        	sla a
1161  8DEE 32 C6 8B     	ld (Velocidad),a
1162  8DF1 E6 10        	and $10
1163  8DF3 C8           	ret z
1164  8DF4
1165  8DF4              ; Restaura (Velocidad) a razón del nº de vueltas.
1166  8DF4
1167  8DF4 3A BE 8B     	ld a,(Contador_de_vueltas)
1168  8DF7 CB 2F        	sra a
1169  8DF9 CB 2F        	sra a
1170  8DFB 32 C6 8B     	ld (Velocidad),a
1171  8DFE
1172  8DFE 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1173  8E01 23           	inc hl
1174  8E02 23           	inc hl
1175  8E03 23           	inc hl
1176  8E04 23           	inc hl
1177  8E05 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1178  8E08
1179  8E08 C9           	ret
1180  8E09
1181  8E09              ; --------------------------------------------------------------------------------------------------------------
1182  8E09              ;
1183  8E09              ;	25/08/24
1184  8E09
1185  8E09              Change
1186  8E09
1187  8E09 3A 25 8C     	ld a,(Switch)
1188  8E0C EE 01        	xor 1
1189  8E0E 32 25 8C     	ld (Switch),a
1190  8E11 2A 0C 8C     	ld hl,(Album_de_pintado)
1191  8E14 ED 5B 0E 8C  	ld de,(Album_de_borrado)
1192  8E18 EB           	ex de,hl
1193  8E19 22 0C 8C     	ld (Album_de_pintado),hl
1194  8E1C 22 28 8C     	ld (Scanlines_album_SP),hl
1195  8E1F ED 53 0E 8C  	ld (Album_de_borrado),de
1196  8E23 C9           	ret
1197  8E24
1198  8E24              Change_Amadeus
1199  8E24
1200  8E24 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1201  8E27 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1202  8E2B EB           	ex de,hl
1203  8E2C 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1204  8E2F ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1205  8E33 C9           	ret
1206  8E34
1207  8E34              Change_Disparos
1208  8E34
1209  8E34              ;	Exclusiones:
1210  8E34
1211  8E34 3A 1C 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1212  8E37 A7           	and a
1213  8E38 C8           	ret z
1214  8E39
1215  8E39              ; -----
1216  8E39
1217  8E39 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1218  8E3C ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1219  8E40 EB           	ex de,hl
1220  8E41 22 14 8C     	ld (Album_de_pintado_disparos),hl
1221  8E44 ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1222  8E48 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1223  8E4B
1224  8E4B 3A 1A 8C     	ld a,(Num_de_bytes_album_de_disparos)
1225  8E4E 32 1B 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1226  8E51
1227  8E51 C9           	ret
1228  8E52
1229  8E52              ; ------------------------------------
1230  8E52              ;
1231  8E52              ; 1/05/24
1232  8E52
1233  8E52              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1234  8E52              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1235  8E52
1236  8E52              ;	DESTRUYE: HL,DE,A
1237  8E52              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1238  8E52
1239  8E52              ;	Variables implicadas: (RND_SP).
1240  8E52
1241  8E52              Extrae_numero_aleatorio_y_avanza
1242  8E52
1243  8E52 21 00 89     	ld hl,Tabla_de_pintado
1244  8E55 EB           	ex de,hl
1245  8E56 2A 43 8C     	ld hl,(RND_SP)
1246  8E59 EB           	ex de,hl
1247  8E5A A7           	and a
1248  8E5B ED 52        	sbc hl,de
1249  8E5D
1250  8E5D 2A 43 8C     	ld hl,(RND_SP)
1251  8E60 20 06        	jr nz,1F
1252  8E62
1253  8E62              ; Sitúa HL al principio de la tabla de nº aleatorios.
1254  8E62
1255  8E62 21 F6 88     	ld hl,Numeros_aleatorios
1256  8E65 22 43 8C     	ld (RND_SP),HL
1257  8E68
1258  8E68              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1259  8E68
1260  8E68 7E           1 ld a,(hl)
1261  8E69 23           	inc hl
1262  8E6A 22 43 8C     	ld (RND_SP),hl
1263  8E6D C9           	ret
1264  8E6E
1265  8E6E              ; ------------------------------------
1266  8E6E              ;
1267  8E6E              ; 1/05/24
1268  8E6E
1269  8E6E              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1270  8E6E              ; (1 a 4 segundos).
1271  8E6E              ; Actualizamos (Clock_next_entity) con A.
1272  8E6E
1273  8E6E              ;	DESTRUYE: A y B.
1274  8E6E              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1275  8E6E              ;			 Actualiza (Clock_next_entity) con A.
1276  8E6E
1277  8E6E              ;	Variables implicadas: (Clock_next_entity).
1278  8E6E
1279  8E6E              ; Notas:
1280  8E6E
1281  8E6E              ; 	$32 1 seg.
1282  8E6E              ; 	$64 2 seg.
1283  8E6E              ; 	$96 3 seg.
1284  8E6E              ; 	$c8 4 seg.
1285  8E6E              ; 	$fa 5 seg.
1286  8E6E
1287  8E6E              ; $ffff 1310,7 seg, 22 minutos.
1288  8E6E
1289  8E6E              ;	$0100  5 seg. aproximadamente.
1290  8E6E              ;	$0200 10 seg. aproximadamente.
1291  8E6E              ;	$0300 15 seg. aproximadamente.
1292  8E6E              ;	$0400 20 seg. aproximadamente.
1293  8E6E              ;	$0500 25 seg. aproximadamente.
1294  8E6E              ;	$0600 30 seg. aproximadamente.
1295  8E6E
1296  8E6E              Define_Clock_next_entity
1297  8E6E
1298  8E6E FE 34        	cp $34
1299  8E70 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1300  8E72
1301  8E72              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1302  8E72
1303  8E72 4F           3 ld c,a
1304  8E73 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1305  8E75 2A 78 5C     	ld hl,(FRAMES)
1306  8E78 A7           	and a
1307  8E79 ED 4A        	adc hl,bc
1308  8E7B 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1309  8E7E C9           	ret
1310  8E7F
1311  8E7F 3E 34        1 ld a,$34
1312  8E81 18 EF        	jr 3B
1313  8E83
1314  8E83              ; ------------------------------------
1315  8E83              ;
1316  8E83              ; 18/03/24
1317  8E83
1318  8E83              Borra_diferencia
1319  8E83
1320  8E83 ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1321  8E87
1322  8E87 3A 25 8C     	ld a,(Switch)
1323  8E8A A7           	and a
1324  8E8B 28 08        	jr z,2F
1325  8E8D
1326  8E8D 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1327  8E90 11 23 8C     	ld de,Techo_Scanlines_album_2
1328  8E93 18 06        	jr 3F
1329  8E95
1330  8E95 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1331  8E98 11 21 8C     	ld de,Techo_Scanlines_album
1332  8E9B
1333  8E9B              ; Diferencia.
1334  8E9B
1335  8E9B ED 42        3 sbc hl,bc
1336  8E9D
1337  8E9D C8           	ret z
1338  8E9E D8           	ret c
1339  8E9F
1340  8E9F              ; Nuevo techo, (más bajo que el anterior).
1341  8E9F              ; Fijamos nuevo techo y borramos bytes sobrantes.
1342  8E9F
1343  8E9F EB           	ex de,hl
1344  8EA0
1345  8EA0 71           	ld (hl),c
1346  8EA1 2C           	inc l
1347  8EA2 70           	ld (hl),b
1348  8EA3
1349  8EA3 AF           	xor a
1350  8EA4 43           	ld b,e
1351  8EA5
1352  8EA5 2A 28 8C     	ld hl,(Scanlines_album_SP)
1353  8EA8
1354  8EA8 77           1 ld (hl),a
1355  8EA9 23           	inc hl
1356  8EAA 10 FC        	djnz 1B
1357  8EAC
1358  8EAC              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1359  8EAC
1360  8EAC 21 2E 8C     	ld hl,Ctrl_3
1361  8EAF CB DE        	set 3,(hl)
1362  8EB1
1363  8EB1 C9           	ret
1364  8EB2
1365  8EB2              ; --------------------------------------------------------------------------------------------------------------
1366  8EB2              ;
1367  8EB2              ;	26/3/24
1368  8EB2
1369  8EB2              Recauda_informacion_de_entidad_en_curso
1370  8EB2
1371  8EB2              ; Almacena la Coordenada Y de la entidad en curso.
1372  8EB2
1373  8EB2              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1374  8EB2
1375  8EB2 3A BD 8B     	ld a,(Coordenada_y)
1376  8EB5 2A 2A 8C     	ld hl,(India_SP)
1377  8EB8 77           	ld (hl),a
1378  8EB9 2C           	inc l
1379  8EBA
1380  8EBA              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1381  8EBA
1382  8EBA              ;	ld de,(Scanlines_album_SP)
1383  8EBA
1384  8EBA 73           	ld (hl),e
1385  8EBB 2C           	inc l
1386  8EBC 72           	ld (hl),d
1387  8EBD 2C           	inc l
1388  8EBE
1389  8EBE 22 2A 8C     	ld (India_SP),hl
1390  8EC1
1391  8EC1 C9           	ret
1392  8EC2
1393  8EC2              ; --------------------------------------------------------------------------------------------------------------
1394  8EC2              ;
1395  8EC2              ;	27/03/24
1396  8EC2              ;
1397  8EC2
1398  8EC2              Inicializa_India_y_limpia_Tabla_de_impresion
1399  8EC2
1400  8EC2 2A 2A 8C     	ld hl,(India_SP)
1401  8EC5 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1402  8EC8
1403  8EC8 79           	ld a,c
1404  8EC9 95           	sub l
1405  8ECA 28 06        	jr z,2F
1406  8ECC 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1407  8ECD              ;														; _ y pasamos a inicializar (India_SP).
1408  8ECD AF           	xor a
1409  8ECE
1410  8ECE 77           1 ld (hl),a
1411  8ECF 2C           	inc l
1412  8ED0 10 FC        	djnz 1B												; Limpia Tabla.
1413  8ED2
1414  8ED2 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1415  8ED5 22 2A 8C     	ld (India_SP),hl
1416  8ED8
1417  8ED8 C9           	ret
1418  8ED9
1419  8ED9              ; --------------------------------------------------------------------------------------------------------------
1420  8ED9              ;
1421  8ED9              ;	31/3/24
1422  8ED9
1423  8ED9              Ordena_tabla_de_impresion
1424  8ED9
1425  8ED9              ; 5794 T/states.
1426  8ED9              ; 6278 T/states.
1427  8ED9              ; 5310 T/states.
1428  8ED9
1429  8ED9              ; Inicializamos punteros (India_SP) e (India_2_SP).
1430  8ED9              ; Inicializamos contador de comparaciones, [C].
1431  8ED9              ; Cargamos los registros A y B para efectuar comparación.
1432  8ED9
1433  8ED9 FD 2E 00     	ld iyl,0
1434  8EDC
1435  8EDC 3A 03 8C     	ld a,(Entidades_en_curso)
1436  8EDF FE 04        	cp 4 	;	4
1437  8EE1 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1438  8EE2
1439  8EE2 3D           	dec a
1440  8EE3 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1441  8EE4 51           	ld d,c 										; Copia de respaldo.
1442  8EE5
1443  8EE5 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1444  8EE6
1445  8EE6 21 03 89     	ld hl,Tabla_de_pintado+3
1446  8EE9 46           	ld b,(hl)
1447  8EEA 22 2C 8C     	ld (India_2_SP),hl
1448  8EED
1449  8EED B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1450  8EEE DC 16 8F     	call c, Avanza_India_2_SP
1451  8EF1 CC 16 8F     	call z, Avanza_India_2_SP
1452  8EF4
1453  8EF4 FD 2D        	dec iyl
1454  8EF6 28 18        	jr z,2F
1455  8EF8
1456  8EF8
1457  8EF8              ; --------------------------------------------------------------------------------------------------------------
1458  8EF8              ;
1459  8EF8              ;	7/4/24
1460  8EF8
1461  8EF8              Trueque
1462  8EF8
1463  8EF8              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1464  8EF8              ;  			A contiene en nº de fila de (India_SP).
1465  8EF8              ;			HL contiene (India_2_SP).
1466  8EF8
1467  8EF8 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1468  8EF9 E5           	push hl										; Preservo (India_2_SP).
1469  8EFA
1470  8EFA ED 5B 2A 8C  	ld de,(India_SP)
1471  8EFE EB           	ex de,hl
1472  8EFF 70           	ld (hl),b
1473  8F00 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1474  8F01
1475  8F01 CD 42 8F     	call Intercambia_1_byte
1476  8F04 CD 42 8F     	call Intercambia_1_byte
1477  8F07
1478  8F07
1479  8F07              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1480  8F07              ; Recuperamos (India_2_SP) en HL.
1481  8F07
1482  8F07 2A 2A 8C     	ld hl,(India_SP)
1483  8F0A 7E           	ld a,(hl)
1484  8F0B
1485  8F0B E1           	pop hl
1486  8F0C D1           	pop de
1487  8F0D
1488  8F0D              ; --------------------------------------------------------------------------------------------------------------
1489  8F0D
1490  8F0D CD 16 8F     	call Avanza_India_2_SP
1491  8F10
1492  8F10 14           2 inc d
1493  8F11 15           	dec d
1494  8F12 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1495  8F13 18 D8        	jr 1B
1496  8F15
1497  8F15 C9           	ret
1498  8F16
1499  8F16              ; ----- ----- ----- ----- -----
1500  8F16
1501  8F16              Avanza_India_2_SP
1502  8F16
1503  8F16 0D           	dec c
1504  8F17 28 0A        	jr z,Avanza_punteros_indios
1505  8F19
1506  8F19 FD 2C        	inc iyl
1507  8F1B
1508  8F1B 2C           	inc l
1509  8F1C 2C           	inc l
1510  8F1D 2C           	inc l
1511  8F1E
1512  8F1E 46           	ld b,(hl)
1513  8F1F 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1514  8F22
1515  8F22 C9           	ret
1516  8F23
1517  8F23              ; ----- ----- ----- ----- -----
1518  8F23
1519  8F23              Avanza_punteros_indios
1520  8F23
1521  8F23 15           	dec d
1522  8F24 28 15        	jr z,Prepara_salida
1523  8F26
1524  8F26 4A           	ld c,d
1525  8F27
1526  8F27 2A 2A 8C     	ld hl,(India_SP)
1527  8F2A 2C           	inc l
1528  8F2B 2C           	inc l
1529  8F2C 2C           	inc l
1530  8F2D 7E           	ld a,(hl)
1531  8F2E 22 2A 8C     	ld (India_SP),hl
1532  8F31
1533  8F31 2C           	inc l
1534  8F32 2C           	inc l
1535  8F33 2C           	inc l
1536  8F34 46           	ld b,(hl)
1537  8F35 22 2C 8C     	ld (India_2_SP),hl
1538  8F38
1539  8F38 FD 2C        	inc iyl
1540  8F3A
1541  8F3A C9           	ret
1542  8F3B
1543  8F3B              Prepara_salida
1544  8F3B
1545  8F3B 21 00 89     	ld hl,Tabla_de_pintado
1546  8F3E 22 2A 8C     	ld (India_SP),hl
1547  8F41 C9           	ret
1548  8F42
1549  8F42
1550  8F42 2C           Intercambia_1_byte inc l
1551  8F43 1C           	inc e
1552  8F44 46           	ld b,(hl)
1553  8F45 1A           	ld a,(de)
1554  8F46 EB           	ex de,hl
1555  8F47 70           	ld (hl),b
1556  8F48 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1557  8F49 C9           	ret
1558  8F4A
1559  8F4A              ; -----------------------------------------------------------------------------------
1560  8F4A              ;
1561  8F4A              ;	20/01/24
1562  8F4A              ;
1563  8F4A              ;
1564  8F4A
1565  8F4A              Construye_movimientos_masticados_entidad
1566  8F4A
1567  8F4A 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1568  8F4D E5           	push hl
1569  8F4E CD 91 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1570  8F51              ;															; _ el (Contador_de_mov_masticados).
1571  8F51 CD 61 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1572  8F54              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1573  8F54 CD 8E 99     	call Recompone_posicion_inicio
1574  8F57
1575  8F57 CD BE 96     1 call Draw
1576  8F5A CD 76 8F     	call Guarda_movimiento_masticado
1577  8F5D
1578  8F5D CD 3B 9D     	call Movimiento
1579  8F60
1580  8F60 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1581  8F63 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1582  8F65 28 F0        	jr z,1B
1583  8F67
1584  8F67              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1585  8F67              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1586  8F67
1587  8F67 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1588  8F68 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1589  8F6B
1590  8F6B              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1591  8F6B
1592  8F6B CD 9F 9E     	call Situa_en_contador_general_de_mov_masticados
1593  8F6E
1594  8F6E              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1595  8F6E              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1596  8F6E
1597  8F6E ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1598  8F72
1599  8F72 71           	ld (hl),c
1600  8F73 23           	inc hl
1601  8F74 70           	ld (hl),b
1602  8F75
1603  8F75 C9           	ret
1604  8F76
1605  8F76              ; -----------------------------------------------------------------------------------
1606  8F76              ;
1607  8F76              ;	28/12/23
1608  8F76              ;
1609  8F76              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1610  8F76              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1611  8F76
1612  8F76              Guarda_movimiento_masticado
1613  8F76
1614  8F76 ED 73 08 8C  	ld (Stack),sp
1615  8F7A ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1616  8F7E
1617  8F7E DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1618  8F80 FD E5            push iy 												; Pushea Puntero_objeto.
1619  8F82
1620  8F82 ED 7B 08 8C      ld sp,(Stack)
1621  8F86
1622  8F86 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1623  8F89 23           	inc hl
1624  8F8A 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1625  8F8D
1626  8F8D CD 91 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1627  8F90              ;															; _ el (Contador_de_mov_masticados).
1628  8F90 C9               ret
1629  8F91
1630  8F91              ; --------------------------------------------------------------------------------------------------------------
1631  8F91              ;
1632  8F91              ;	12/1/24
1633  8F91              ;
1634  8F91              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1635  8F91
1636  8F91              Actualiza_Puntero_de_almacen_de_mov_masticados
1637  8F91
1638  8F91 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1639  8F94 01 04 00     	ld bc,4
1640  8F97 A7           	and a
1641  8F98 ED 4A        	adc hl,bc
1642  8F9A 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1643  8F9D C9           	ret
1644  8F9E
1645  8F9E              ; --------------------------------------------------------------------------------------------------------------
1646  8F9E              ;
1647  8F9E              ;	24/03/24
1648  8F9E              ;
1649  8F9E              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1650  8F9E              ;
1651  8F9E              ;	IX contiene el puntero de impresión.
1652  8F9E              ;	DE contiene (Puntero_objeto).
1653  8F9E
1654  8F9E
1655  8F9E              Cargamos_registros_con_mov_masticado
1656  8F9E
1657  8F9E ED 73 08 8C  	ld (Stack),sp
1658  8FA2 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1659  8FA6
1660  8FA6 D1           	pop de 															; DE contiene Puntero_objeto
1661  8FA7 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1662  8FA9
1663  8FA9 ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1664  8FAD ED 7B 08 8C  	ld sp,(Stack)
1665  8FB1
1666  8FB1 7B           	ld a,e
1667  8FB2 82           	add d															; Comprueba si ya no hay datos en el almacén.
1668  8FB3
1669  8FB3 CC 51 93     	call z,Reinicia_entidad_maliciosa
1670  8FB6
1671  8FB6 C9           	ret
1672  8FB7
1673  8FB7              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1674  8FB7              ;
1675  8FB7              ;	22/7/24
1676  8FB7
1677  8FB7              Cargamos_registros_con_explosion
1678  8FB7
1679  8FB7
1680  8FB7 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1681  8FBA CD 5B 90     	call Extrae_address
1682  8FBD
1683  8FBD 5D           	ld e,l
1684  8FBE 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1685  8FBF
1686  8FBF DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1687  8FC3
1688  8FC3 C9           	ret
1689  8FC4
1690  8FC4
1691  8FC4              Cargamos_registros_con_explosion_Amadeus
1692  8FC4
1693  8FC4 2A 77 89     	ld hl,(Pamm_Amadeus)
1694  8FC7 CD 5B 90     	call Extrae_address
1695  8FCA
1696  8FCA 5D           	ld e,l
1697  8FCB 54           	ld d,h
1698  8FCC
1699  8FCC DD 2A 75 89  	ld ix,(p.imp.amadeus)
1700  8FD0
1701  8FD0 C9           	ret
1702  8FD1
1703  8FD1              ; --------------------------------------------------------------------------------------------------------------
1704  8FD1              ;
1705  8FD1              ;	17/06/24
1706  8FD1              ;
1707  8FD1              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1708  8FD1              ;
1709  8FD1              ;	IX contiene el puntero de impresión.
1710  8FD1              ;	DE contiene (Puntero_objeto).
1711  8FD1
1712  8FD1
1713  8FD1              Cargamos_registros_con_mov_masticado_Amadeus
1714  8FD1
1715  8FD1 ED 73 08 8C  	ld (Stack),sp
1716  8FD5 ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1717  8FD9 D1           	pop de 															; DE contiene Puntero_objeto
1718  8FDA DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1719  8FDC DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1720  8FE0 ED 7B 08 8C  	ld sp,(Stack)
1721  8FE4 C9           	ret
1722  8FE5
1723  8FE5              ; ---------------------------------------------------------------------------------------------------------------------
1724  8FE5              ;
1725  8FE5              ;	18/6/24
1726  8FE5              ;
1727  8FE5              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1728  8FE5
1729  8FE5              Genera_datos_de_impresion_Amadeus
1730  8FE5
1731  8FE5 3A 74 89     	ld a,(Impacto_Amadeus)
1732  8FE8 A7           	and a
1733  8FE9 20 03        	jr nz,1F
1734  8FEB
1735  8FEB              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1736  8FEB              ; _apuntando a la correspondiente explosión.
1737  8FEB
1738  8FEB CD D1 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1739  8FEE
1740  8FEE DD 7D        1 ld a,ixl
1741  8FF0 E6 1F        	and $1f
1742  8FF2 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1743  8FF5
1744  8FF5 2A 28 8C     	ld hl,(Scanlines_album_SP)
1745  8FF8 E5           	push hl
1746  8FF9
1747  8FF9 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1748  8FFC 22 28 8C     	ld (Scanlines_album_SP),hl
1749  8FFF
1750  8FFF CD A6 94     	call Genera_datos_de_impresion
1751  9002
1752  9002 E1           	pop hl
1753  9003 22 28 8C     	ld (Scanlines_album_SP),hl
1754  9006
1755  9006 C9           	ret
1756  9007
1757  9007              ; ---------------------------------------------------------------------------------------------------------------------
1758  9007              ;
1759  9007              ;	13/03/24
1760  9007              ;
1761  9007              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1762  9007
1763  9007              Inicia_albumes_de_lineas
1764  9007
1765  9007 21 00 80     	ld hl,Scanlines_album
1766  900A 22 0C 8C     	ld (Album_de_pintado),hl
1767  900D 22 28 8C     	ld (Scanlines_album_SP),hl
1768  9010
1769  9010 21 1A 81     	ld hl,Scanlines_album_2
1770  9013 22 0E 8C     	ld (Album_de_borrado),hl
1771  9016
1772  9016 C9           	ret
1773  9017
1774  9017              Inicia_albumes_de_lineas_Amadeus
1775  9017
1776  9017 21 34 82     	ld hl,Amadeus_scanlines_album
1777  901A 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1778  901D 21 58 82     	ld hl,Amadeus_scanlines_album_2
1779  9020 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1780  9023
1781  9023 C9           	ret
1782  9024
1783  9024              Inicia_albumes_de_disparos
1784  9024
1785  9024 21 7C 82     	ld hl,Disparos_scanlines_album
1786  9027 22 14 8C     	ld (Album_de_pintado_disparos),hl
1787  902A 21 8E 82     	ld hl,Disparos_scanlines_album_2
1788  902D 22 16 8C     	ld (Album_de_borrado_disparos),hl
1789  9030
1790  9030 21 7C 82     	ld hl,Disparos_scanlines_album
1791  9033 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1792  9036
1793  9036 C9           	ret
1794  9037
1795  9037              ; ---------------------------------------------------------------------------------------------------------------------
1796  9037              ;
1797  9037              ; 8/1/23
1798  9037              ;
1799  9037              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1800  9037              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1801  9037              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1802  9037
1803  9037              ; Destruye HL y DE !!!!!
1804  9037
1805  9037              Inicia_punteros_de_cajas
1806  9037
1807  9037 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1808  903A CD 5B 90         call Extrae_address
1809  903D 22 FB 8B         ld (Puntero_store_caja),hl
1810  9040 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1811  9043 22 FF 8B     	ld (Indice_restore_caja),hl
1812  9046 CD 5B 90     	call Extrae_address
1813  9049 22 FD 8B     	ld (Puntero_restore_caja),hl
1814  904C C9               ret
1815  904D
1816  904D              ; *************************************************************************************************************************************************************
1817  904D              ;
1818  904D              ; 8/1/23
1819  904D              ;
1820  904D              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1821  904D
1822  904D 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1823  9050 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1824  9053 C9           	ret
1825  9054 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1826  9057 22 33 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1827  905A C9           	ret
1828  905B
1829  905B              ; *************************************************************************************************************************************************************
1830  905B              ;
1831  905B              ; 20/10/22
1832  905B              ;
1833  905B              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1834  905B              ;
1835  905B              ; Destruye el puntero y DE !!!!!
1836  905B
1837  905B 5E           Extrae_address ld e,(hl)
1838  905C 23           	inc hl
1839  905D 56           	ld d,(hl)
1840  905E 2B           	dec hl
1841  905F EB           	ex de,hl
1842  9060 C9           	ret
1843  9061
1844  9061              ; *************************************************************************************************************************************************************
1845  9061              ;
1846  9061              ;	20/1/24
1847  9061              ;
1848  9061              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1849  9061              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1850  9061              ;
1851  9061              ;   Destruye HL y BC !!!!!,
1852  9061              ;
1853  9061              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1854  9061              ;					"0" ..... Izquierda.
1855  9061
1856  9061              Inicia_Puntero_objeto
1857  9061
1858  9061 3A DA 8B     	ld a,(Cuad_objeto)
1859  9064 E6 01        	and 1
1860  9066 F5           	push af
1861  9067 CC 83 90     	call z,Inicia_puntero_objeto_izq
1862  906A F1           	pop af
1863  906B C8           	ret z
1864  906C CD 70 90     	call Inicia_puntero_objeto_der
1865  906F C9           	ret
1866  9070
1867  9070              ; Arrancamos desde la parte izquierda de la pantalla.
1868  9070              ; Iniciamos (Indice_Sprite_der).
1869  9070
1870  9070 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1871  9073 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1872  9076 CD 5B 90     	call Extrae_address
1873  9079 22 CD 8B     	ld (Puntero_objeto),hl
1874  907C
1875  907C 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1876  907F 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1877  9082 C9           	ret
1878  9083
1879  9083              ; Arrancamos desde la parte derecha de la pantalla.
1880  9083              ; Iniciamos (Indice_Sprite_izq).
1881  9083
1882  9083 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1883  9086 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1884  9089 CD 5B 90     	call Extrae_address
1885  908C 22 CD 8B     	ld (Puntero_objeto),hl
1886  908F
1887  908F 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1888  9092 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1889  9095 C9           	ret
1890  9096
1891  9096              ; **************************************************************************************************
1892  9096              ;
1893  9096              ;	06/07/24
1894  9096              ;
1895  9096              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1896  9096
1897  9096              Restore_entidad
1898  9096
1899  9096 2A FB 8B     	ld hl,(Puntero_store_caja)
1900  9099 7E           	ld a,(hl)
1901  909A A7           	and a
1902  909B CC A9 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1903  909E 28 F6        	jr z,Restore_entidad
1904  90A0
1905  90A0 11 BB 8B     	ld de,Bandeja_DRAW
1906  90A3 01 0C 00     	ld bc,12
1907  90A6 ED B0        	ldir
1908  90A8 C9           	ret
1909  90A9
1910  90A9              ; **************************************************************************************************
1911  90A9              ;
1912  90A9              ;	08/05/23
1913  90A9              ;
1914  90A9              ;	Incrementamos los dos punteros de entidades. (+1).
1915  90A9
1916  90A9              Incrementa_punteros_de_cajas
1917  90A9
1918  90A9 2A FD 8B     	ld hl,(Puntero_restore_caja)
1919  90AC 22 FB 8B     	ld (Puntero_store_caja),hl
1920  90AF 2A FF 8B     	ld hl,(Indice_restore_caja)
1921  90B2 23           	inc hl
1922  90B3 23           	inc hl
1923  90B4 22 FF 8B     	ld (Indice_restore_caja),hl
1924  90B7 CD 5B 90         call Extrae_address
1925  90BA 22 FD 8B         ld (Puntero_restore_caja),hl
1926  90BD C9               ret
1927  90BE
1928  90BE              ; -----------------------------------------------------------
1929  90BE
1930  90BE              ; Teclado.
1931  90BE
1932  90BE 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1933  90C0 DB FE        	in a,($fe)
1934  90C2 E6 01        	and $01
1935  90C4 28 02        	jr z,1f
1936  90C6 18 F6        	jr Pulsa_ENTER
1937  90C8 C9           1 ret
1938  90C9
1939  90C9              ; **************************************************************************************************
1940  90C9              ;
1941  90C9              ; Temporización.
1942  90C9
1943  90C9              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1944  90C9              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1945  90C9              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1946  90C9              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1947  90C9
1948  90C9              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1949  90C9              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1950  90C9              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1951  90C9
1952  90C9              ; A partir de $4f61 no hace falta DELAY.
1953  90C9
1954  90C9              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1955  90C9
1956  90C9              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1957  90C9              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1958  90C9              ;	LD A,B
1959  90C9              ;	AND A
1960  90C9              ;	JR NZ,wait
1961  90C9              ;	RET
1962  90C9
1963  90C9              ; ---------------------------------------------------------------------------------------------------------------
1964  90C9              ;
1965  90C9              ;	13/07/24
1966  90C9              ;
1967  90C9
1968  90C9              Inicia_Shield
1969  90C9
1970  90C9 21 4D 8C     	ld hl,Datos_Shield
1971  90CC 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1972  90CF
1973  90CF 7E           	ld a,(hl)
1974  90D0 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1975  90D3
1976  90D3 3E 01        	ld a,1
1977  90D5 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1978  90D8
1979  90D8 C9           	ret
1980  90D9
1981  90D9              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1982  90D9              ;
1983  90D9              ;	4/6/24
1984  90D9              ;
1985  90D9              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1986  90D9              ;
1987  90D9              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1988  90D9              ;
1989  90D9
1990  90D9              Actualiza_pantalla
1991  90D9
1992  90D9 3E 02        	ld a,2
1993  90DB D3 FE        	out ($fe),a
1994  90DD
1995  90DD 3A 2E 8C     	ld a,(Ctrl_3)
1996  90E0 CB 57        	bit 2,a
1997  90E2 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1998  90E4
1999  90E4              Borrando_entidades
2000  90E4
2001  90E4 2A 28 8C     	ld hl,(Scanlines_album_SP)
2002  90E7 CD 5B 90     	call Extrae_address
2003  90EA 24           	inc h
2004  90EB 25           	dec h
2005  90EC 28 05        	jr z,Pintando_entidades
2006  90EE CD 9B 95     	call Pinta_Sprites
2007  90F1 18 F1        	jr Borrando_entidades
2008  90F3
2009  90F3              Pintando_entidades
2010  90F3
2011  90F3 2A 2A 8C     	ld hl,(India_SP)
2012  90F6 2C           	inc l
2013  90F7 CD 5B 90     	call Extrae_address
2014  90FA 24           	inc h
2015  90FB 25           	dec h
2016  90FC 28 0E        	jr z,Ejecuta_escudo
2017  90FE 1C           	inc e
2018  90FF 1C           	inc e
2019  9100 ED 53 2A 8C  	ld (India_SP),de
2020  9104 CD 5B 90     	call Extrae_address
2021  9107 CD 9B 95     	call Pinta_Sprites
2022  910A 18 E7        	jr Pintando_entidades
2023  910C
2024  910C              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2025  910C
2026  910C              Ejecuta_escudo
2027  910C
2028  910C 3A 53 8C     	ld a,(Shield)
2029  910F A7           	and a
2030  9110 20 2F        	jr nz,Aplica_Shield
2031  9112
2032  9112              Borrando_Amadeus
2033  9112
2034  9112 21 2E 8C     	ld hl,Ctrl_3
2035  9115 CB 6E        	bit 5,(hl)
2036  9117 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2037  9119
2038  9119 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2039  911C CD 5B 90     	call Extrae_address
2040  911F 24           	inc h
2041  9120 25           	dec h
2042  9121 28 03        	jr z,Pintando_Amadeus
2043  9123 CD 9B 95     	call Pinta_Sprites
2044  9126
2045  9126              Pintando_Amadeus
2046  9126
2047  9126 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2048  9129 CD 5B 90     	call Extrae_address
2049  912C 24           	inc h
2050  912D 25           	dec h
2051  912E 28 03        	jr z,1F
2052  9130 CD 9B 95     	call Pinta_Sprites
2053  9133
2054  9133              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2055  9133
2056  9133 21 2E 8C     1 ld hl,Ctrl_3
2057  9136 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2058  9138 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2059  913A CB AE        	res 5,(hl)
2060  913C
2061  913C 3E 01        	ld a,1												; Borde azul.
2062  913E D3 FE        	out ($fe),a
2063  9140
2064  9140 C9           	ret
2065  9141
2066  9141              Aplica_Shield
2067  9141
2068  9141              ;	Bit 1 "1" (Shield_3) Sólo borra.
2069  9141              ;		  "0"     ""     Borra/Pinta.
2070  9141              ;	Bit 2    ""  RET.	 No borra, no pinta.
2071  9141
2072  9141 21 55 8C     	ld hl,Shield_3
2073  9144
2074  9144 CB 5E        	bit 3,(hl)
2075  9146 20 DE        	jr nz,Pintando_Amadeus
2076  9148
2077  9148 CB 56        	bit 2,(hl)
2078  914A 20 E7        	jr nz,1B
2079  914C
2080  914C CB 4E        	bit 1,(hl)
2081  914E C4 55 91     	call nz,Borra_Amadeus_shield
2082  9151
2083  9151 28 BF        	jr z,Borrando_Amadeus
2084  9153 18 DE        	jr 1B
2085  9155
2086  9155              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2087  9155
2088  9155              Borra_Amadeus_shield
2089  9155
2090  9155 3A 2E 8C     	ld a,(Ctrl_3)
2091  9158 CB 6F        	bit 5,a
2092  915A 28 08        	jr z,1F
2093  915C
2094  915C 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2095  915F CD 5B 90     	call Extrae_address
2096  9162 18 06        	jr 2F
2097  9164
2098  9164 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2099  9167 CD 5B 90     	call Extrae_address
2100  916A
2101  916A CD 9B 95     2 call Pinta_Sprites
2102  916D
2103  916D AF           	xor a
2104  916E 3C           	inc a											; Asegura NZ en la salida de la rutina.
2105  916F
2106  916F C9           	ret
2107  9170
2108  9170              Pinta_Amadeus_shield
2109  9170
2110  9170 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2111  9173 CD 5B 90     	call Extrae_address
2112  9176 CD 9B 95     	call Pinta_Sprites
2113  9179
2114  9179 AF           	xor a
2115  917A 3C           	inc a											; Asegura NZ en la salida de la rutina.
2116  917B
2117  917B C9           	ret
2118  917C
2119  917C              Borra_Pinta_Amadeus_shield
2120  917C
2121  917C CD 55 91     	call Borra_Amadeus_shield
2122  917F CD 70 91     	call Pinta_Amadeus_shield
2123  9182 C9           	ret
2124  9183
2125  9183              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2126  9183              ;
2127  9183              ;	19/6/24
2128  9183              ;
2129  9183
2130  9183              Teclado
2131  9183
2132  9183              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2133  9183
2134  9183 3E F7        	ld a,$f7												; "5" para disparar.
2135  9185 DB FE        	in a,($fe)
2136  9187 E6 10        	and $10
2137  9189
2138  9189 CC C8 9F     	call z,Genera_disparo_Amadeus
2139  918C
2140  918C 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2141  918E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2142  9190 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2143  9192 CC 08 9D         call z,Amadeus_a_izquierda
2144  9195
2145  9195 3E F7        	ld a,$f7
2146  9197 DB FE        	in a,($fe)
2147  9199 E6 01        	and $01
2148  919B C8           	ret z
2149  919C
2150  919C 3E F7        	ld a,$f7
2151  919E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2152  91A0 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2153  91A2 CC 20 9D     	call z,Amadeus_a_derecha
2154  91A5
2155  91A5 C9           	ret
2156  91A6
2157  91A6              ; ------------------------------------------------------------------------------------------------------------------------
2158  91A6              ;
2159  91A6              ;	06/07/24
2160  91A6              ;
2161  91A6
2162  91A6              Genera_explosion
2163  91A6
2164  91A6 21 40 8C     	ld hl,Clock_explosion
2165  91A9 35           	dec (hl)
2166  91AA 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2167  91AC
2168  91AC              Borra_entidad_colisionada
2169  91AC
2170  91AC CD B2 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2171  91AF CD B7 8F     	call Cargamos_registros_con_explosion
2172  91B2 CD A6 94     	call Genera_datos_de_impresion
2173  91B5
2174  91B5 AF           	xor a
2175  91B6 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2176  91B7
2177  91B7 C9           	ret
2178  91B8
2179  91B8              Siguiente_frame_explosion
2180  91B8
2181  91B8 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2182  91BA
2183  91BA              ; Avanza Frame de explosión.
2184  91BA
2185  91BA 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2186  91BD 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2187  91C0
2188  91C0 79           	ld a,c
2189  91C1 95           	sub l
2190  91C2 20 0B        	jr nz,1F
2191  91C4
2192  91C4              ; Fín de la entidad !!!!!!!!!!!!!
2193  91C4
2194  91C4 21 02 8C     	ld hl,Numero_parcial_de_entidades
2195  91C7 35           	dec (hl)
2196  91C8 23           	inc hl
2197  91C9 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2198  91CA
2199  91CA CD 26 93     	call Limpiamos_bandeja_DRAW
2200  91CD 18 DD        	jr Borra_entidad_colisionada
2201  91CF
2202  91CF 23           1 inc hl
2203  91D0 23           	inc hl
2204  91D1 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2205  91D4 18 D6        	jr Borra_entidad_colisionada
2206  91D6
2207  91D6              ; ----- ----- ----- ----- -----
2208  91D6
2209  91D6              Genera_explosion_Amadeus
2210  91D6
2211  91D6 21 41 8C     	ld hl,Clock_explosion_Amadeus
2212  91D9 35           	dec (hl)
2213  91DA 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2214  91DC
2215  91DC              Borra_Amadeus_impactado
2216  91DC
2217  91DC CD 24 8E     	call Change_Amadeus
2218  91DF CD C4 8F     	call Cargamos_registros_con_explosion_Amadeus
2219  91E2 CD E5 8F     	call Genera_datos_de_impresion_Amadeus
2220  91E5
2221  91E5 21 2E 8C     	ld hl,Ctrl_3
2222  91E8 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2223  91EA
2224  91EA AF           	xor a
2225  91EB 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2226  91EC
2227  91EC C9           	ret
2228  91ED
2229  91ED              Siguiente_frame_explosion_Amadeus
2230  91ED
2231  91ED 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2232  91EF
2233  91EF              ; Avanza Frame de explosión.
2234  91EF
2235  91EF 2A 77 89     	ld hl,(Pamm_Amadeus)
2236  91F2 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2237  91F5
2238  91F5 79           	ld a,c
2239  91F6 95           	sub l
2240  91F7 20 0B        	jr nz,1F
2241  91F9
2242  91F9              ; Fín de Amadeus !!!!!!!!!!!!!
2243  91F9              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2244  91F9
2245  91F9 AF           	xor a
2246  91FA 32 74 89     	ld (Impacto_Amadeus),a
2247  91FD 21 2E 8C     	ld hl,Ctrl_3
2248  9200 CB F6        	set 6,(hl)
2249  9202
2250  9202 18 D8        	jr Borra_Amadeus_impactado
2251  9204
2252  9204 23           1 inc hl
2253  9205 23           	inc hl
2254  9206 22 77 89     	ld (Pamm_Amadeus),hl
2255  9209 18 D1        	jr Borra_Amadeus_impactado
2256  920B
2257  920B              ; ---------------------------------------------------------------
2258  920B
2259  920B              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 920B              ; ******************************************************************************************************************************************************************************************
   2+ 920B              ;
   3+ 920B              ;   21/04/24
   4+ 920B              ;
   5+ 920B              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 920B              ;   (XOR) bit a bit.
   7+ 920B              ;
   8+ 920B              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 920B
  10+ 920B              Derivando_RND
  11+ 920B
  12+ 920B 21 F6 88         ld hl,Numeros_aleatorios
  13+ 920E
  14+ 920E ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9210 C5               push bc
  16+ 9211              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9211 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9214              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9214
  20+ 9214 A7           6 and a                                 ; Carry a "0".
  21+ 9215 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9217 30 02            jr nc,1F
  23+ 9219
  24+ 9219 CB C1            set 0,c
  25+ 921B
  26+ 921B 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 921C E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 921E 5F               ld e,a
  29+ 921F
  30+ 921F 7A               ld a,d
  31+ 9220 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9222 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9224
  34+ 9224 CB 3F            srl a
  35+ 9226
  36+ 9226 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9227
  38+ 9227 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9228 28 04            jr z,4F
  40+ 922A
  41+ 922A CB FF            set 7,a
  42+ 922C 18 02            jr 5F
  43+ 922E
  44+ 922E CB BF        4 res 7,a
  45+ 9230
  46+ 9230 CB 21        5 sla c
  47+ 9232 10 E0            djnz 6B
  48+ 9234
  49+ 9234 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9235
  51+ 9235 77               ld (hl),a
  52+ 9236 23               inc hl
  53+ 9237 C1               pop bc
  54+ 9238 10 D4            djnz 3B
  55+ 923A
  56+ 923A C9               ret
  57+ 923B
  58+ 923B
  59+ 923B
# file closed: RND_Derivando.asm
2260  923B              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 923B              ;---------------------------------------------------------------------------------------------------------------
   2+ 923B              ;
   3+ 923B              ;   8/3/24
   4+ 923B              ;
   5+ 923B              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 923B              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 923B              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 923B              ;	_ de la 1ª entidad del Nivel.
   9+ 923B              ;
  10+ 923B              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 923B
  12+ 923B              ;	MODIFICA: HL,DE y A.
  13+ 923B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 923B
  15+ 923B              Inicializa_Nivel
  16+ 923B
  17+ 923B 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 923E CD 5B 90     	call Extrae_address
  19+ 9241 7E           	ld a,(hl)
  20+ 9242 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9245 23           	inc hl
  22+ 9246 CD 53 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9249 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 924C CD 5C 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 924F
  26+ 924F CD 6D 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9252 C9           	ret
  28+ 9253
  29+ 9253              ; ----------------------
  30+ 9253
  31+ 9253 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9256 01 04 00     	ld bc,4
  33+ 9259 ED B0        	ldir
  34+ 925B C9           	ret
  35+ 925C
  36+ 925C 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 925D CD F7 93         call Calcula_salto_en_BC
  38+ 9260 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9263 A7               and a
  40+ 9264 ED 4A            adc hl,bc
  41+ 9266 CD 5B 90         call Extrae_address
  42+ 9269 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 926C C9               ret
  44+ 926D
  45+ 926D 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9270 CD F7 93     	call Calcula_salto_en_BC
  47+ 9273 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9276 A7               and a
  49+ 9277 ED 4A            adc hl,bc
  50+ 9279 CD 5B 90         call Extrae_address
  51+ 927C 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 927F C9           	ret
  53+ 9280
  54+ 9280              ;---------------------------------------------------------------------------------------------------------------
  55+ 9280              ;
  56+ 9280              ;   5/1/24
  57+ 9280              ;
  58+ 9280              ;	Destruye A,BC,HL,DE
  59+ 9280
  60+ 9280              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 9280              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 9280
  63+ 9280              Inicia_Entidades
  64+ 9280
  65+ 9280              ; Preparamos los punteros de las cajas de entidades:
  66+ 9280
  67+ 9280 CD 37 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9283              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9283 CD 3F 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 9286
  71+ 9286 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 9289
  73+ 9289 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 928C
  75+ 928C CD A5 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 928F
  77+ 928F 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 9292
  79+ 9292              ; En este punto:
  80+ 9292              ;
  81+ 9292              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 9292              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 9292
  84+ 9292 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 9293
  86+ 9293 7E           	ld a,(hl)
  87+ 9294 CD 11 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9297
  89+ 9297 CD 09 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 929A
  91+ 929A              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 929A
  93+ 929A CD C7 93     	call Busca_mov_masticados_segun_tipo
  94+ 929D
  95+ 929D A7           	and a
  96+ 929E 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92A0
  98+ 92A0              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92A0
 100+ 92A0              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92A0              ;	_ de este tipo de entidad.
 102+ 92A0
 103+ 92A0 CD 9F 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92A3 CD AC 9E     	call Transfiere_datos_de_contadores
 105+ 92A6
 106+ 92A6 18 06        	jr 4F
 107+ 92A8
 108+ 92A8 CD 4A 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92AB
 110+ 92AB              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92AB              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92AB              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92AB              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92AB              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92AB
 116+ 92AB CD 85 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92AE              ;																; _ Mov_masticados ya generados.
 118+ 92AE
 119+ 92AE CD 9E 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92B1
 121+ 92B1 DD E5        	push ix
 122+ 92B3 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92B4
 124+ 92B4 D5           	push de
 125+ 92B5 CD 7A 94     	call Genera_coordenadas
 126+ 92B8
 127+ 92B8 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 128+ 92BC CD B2 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92BF D1           	pop de
 130+ 92C0
 131+ 92C0 CD A6 94     	call Genera_datos_de_impresion
 132+ 92C3              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92C3              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92C3              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92C3              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92C3
 137+ 92C3 CD 49 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92C6
 139+ 92C6              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92C6
 141+ 92C6 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92CA CD 36 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92CD
 144+ 92CD CD 26 93     	call Limpiamos_bandeja_DRAW
 145+ 92D0 CD A9 90     	call Incrementa_punteros_de_cajas
 146+ 92D3
 147+ 92D3              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92D3              ; _ entidad del Nivel.
 149+ 92D3
 150+ 92D3 3A 2F 8C     	ld a,(Ctrl_4)
 151+ 92D6 E6 F0        	and $f0
 152+ 92D8 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92DB
 154+ 92DB              ; Siguiente entidad del Nivel.
 155+ 92DB
 156+ 92DB 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92DE 23           	inc hl 														; _ entidad del Nivel.
 158+ 92DF
 159+ 92DF C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92E0
 161+ 92E0 10 A7        	djnz 2B
 162+ 92E2
 163+ 92E2 C9           	ret
 164+ 92E3
 165+ 92E3              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92E3              ;
 167+ 92E3              ;	27/5/24
 168+ 92E3              ;
 169+ 92E3              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92E3              ;
 171+ 92E3
 172+ 92E3              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92E3              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92E3
 175+ 92E3 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92E6 CD 09 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92E9
 178+ 92E9
 179+ 92E9              Construye_movimientos_masticados_Amadeus
 180+ 92E9
 181+ 92E9 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92EC CD 91 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92EF              ;															; _ el (Contador_de_mov_masticados).
 184+ 92EF CD 61 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 92F2              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 92F2
 187+ 92F2              ; Generamos movimientos masticados de Amadeus.
 188+ 92F2
 189+ 92F2 06 79        	ld b,121												; $0079, 121d.
 190+ 92F4
 191+ 92F4 C5           1 push bc
 192+ 92F5 CD BE 96     	call Draw
 193+ 92F8 CD 76 8F     	call Guarda_movimiento_masticado
 194+ 92FB
 195+ 92FB CD 32 9A     	call Mov_right
 196+ 92FE CD 32 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9301
 198+ 9301 C1           	pop bc
 199+ 9302 10 F0        	djnz 1B
 200+ 9304
 201+ 9304              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9304
 203+ 9304              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9304              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9304
 206+ 9304 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9307 01 08 00     	ld bc,8
 208+ 930A A7           	and a
 209+ 930B ED 42        	sbc hl,bc
 210+ 930D 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9310
 212+ 9310 C9           	ret
 213+ 9311
 214+ 9311              ; ---------------------------------------------------------------------
 215+ 9311              ;
 216+ 9311              ;	10/02/24
 217+ 9311              ;
 218+ 9311              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9311              ;
 220+ 9311              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9311
 222+ 9311              Definicion_segun_tipo
 223+ 9311
 224+ 9311 CD F7 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9314 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9317 CD FF 93     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 931A C9           	ret
 228+ 931B
 229+ 931B              ; ---------------------------------------------------------------------
 230+ 931B              ;
 231+ 931B              ;	6/7/24
 232+ 931B
 233+ 931B
 234+ 931B              Store_Restore_cajas
 235+ 931B
 236+ 931B ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 931F CD 36 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9322 CD A9 90     	call Incrementa_punteros_de_cajas
 239+ 9325 C9           	ret
 240+ 9326
 241+ 9326              ; ---------------------------------------------------------------------
 242+ 9326              ;
 243+ 9326              ;	23/6/24
 244+ 9326              ;
 245+ 9326              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9326              ;
 247+ 9326              ;	MODIFY: HL
 248+ 9326
 249+ 9326              Limpiamos_bandeja_DRAW
 250+ 9326
 251+ 9326 ED 73 08 8C  	ld (Stack),sp
 252+ 932A 31 E0 8B     	ld sp,Vel_left
 253+ 932D
 254+ 932D AF           	xor a
 255+ 932E 67           	ld h,a
 256+ 932F 6F           	ld l,a
 257+ 9330
 258+ 9330 E5           	push hl
 259+ 9331 E5           	push hl
 260+ 9332 E5           	push hl
 261+ 9333 E5           	push hl
 262+ 9334 E5           	push hl
 263+ 9335 E5           	push hl
 264+ 9336 E5           	push hl
 265+ 9337 E5           	push hl
 266+ 9338 E5           	push hl
 267+ 9339 E5           	push hl
 268+ 933A E5           	push hl
 269+ 933B E5           	push hl
 270+ 933C E5           	push hl
 271+ 933D E5           	push hl
 272+ 933E E5           	push hl
 273+ 933F E5           	push hl
 274+ 9340 E5           	push hl
 275+ 9341 E5           	push hl
 276+ 9342
 277+ 9342 33           	inc sp
 278+ 9343
 279+ 9343 E5           	push hl
 280+ 9344 ED 7B 08 8C  	ld sp,(Stack)
 281+ 9348
 282+ 9348 C9           	ret
 283+ 9349
 284+ 9349              ; ---------------------------------------------------------------------
 285+ 9349              ;
 286+ 9349              ;	24/03/24
 287+ 9349
 288+ 9349 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 934C 2B           	dec hl
 290+ 934D 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9350 C9           	ret
 292+ 9351
 293+ 9351              ; ---------------------------------------------------------------------
 294+ 9351              ;
 295+ 9351              ;	8/5/24
 296+ 9351
 297+ 9351              Reinicia_entidad_maliciosa
 298+ 9351
 299+ 9351              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9351
 301+ 9351 CD 9F 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9354 CD AC 9E     	call Transfiere_datos_de_contadores
 303+ 9357
 304+ 9357              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9357
 306+ 9357 3A BB 8B     	ld a,(Tipo)
 307+ 935A CD 11 93     	call Definicion_segun_tipo
 308+ 935D
 309+ 935D E5           	push hl
 310+ 935E DD E1        	pop ix
 311+ 9360
 312+ 9360 DD 6E 0B     	ld l,(ix+11)
 313+ 9363 DD 66 0C     	ld h,(ix+12)
 314+ 9366
 315+ 9366 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9369
 317+ 9369 CD 9E 8F     	call Cargamos_registros_con_mov_masticado
 318+ 936C
 319+ 936C              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 936C              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 936C              ; Ejemplos.
 322+ 936C
 323+ 936C              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 936C              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 936C              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 936C              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 936C              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 936C
 329+ 936C 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 936F CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9371
 332+ 9371 7E           	ld a,(hl)
 333+ 9372 CB 2F        	sra a
 334+ 9374 CB 2F        	sra a
 335+ 9376
 336+ 9376 32 C6 8B     	ld (Velocidad),a
 337+ 9379
 338+ 9379 3E 40        	ld a,$40
 339+ 937B BE           	cp (hl)
 340+ 937C C0           	ret nz
 341+ 937D
 342+ 937D              ; Límitador.
 343+ 937D
 344+ 937D              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 937D
 346+ 937D CB 2E        	sra (hl)
 347+ 937F 21 C6 8B     	ld hl,Velocidad
 348+ 9382 CB 2E        	sra (hl)
 349+ 9384
 350+ 9384 C9           	ret
 351+ 9385
 352+ 9385              ; ---------------------------------------------------------------------
 353+ 9385              ;
 354+ 9385              ;	22/01/24
 355+ 9385
 356+ 9385 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 9388 CB 46        	bit 0,(hl)
 358+ 938A 20 0D        	jr nz,1F
 359+ 938C CB 4E        	bit 1,(hl)
 360+ 938E 20 0C        	jr nz,2F
 361+ 9390 CB 56        	bit 2,(hl)
 362+ 9392 20 0B        	jr nz,3F
 363+ 9394 CB 5E        	bit 3,(hl)
 364+ 9396 20 0A        	jr nz,4F
 365+ 9398 C9           	ret
 366+ 9399
 367+ 9399 CB E6        1 set 4,(hl)
 368+ 939B C9           	ret
 369+ 939C CB EE        2 set 5,(hl)
 370+ 939E C9           	ret
 371+ 939F CB F6        3 set 6,(hl)
 372+ 93A1 C9           	ret
 373+ 93A2 CB FE        4 set 7,(hl)
 374+ 93A4 C9           	ret
 375+ 93A5
 376+ 93A5              ; ---------------------------------------------------------------------
 377+ 93A5              ;
 378+ 93A5              ;	23/01/24
 379+ 93A5              ;
 380+ 93A5              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93A5              ;
 382+ 93A5              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93A5              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93A5              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93A5              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93A5
 387+ 93A5              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93A5
 389+ 93A5 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93A6 3D           	dec a
 391+ 93A7 20 06        	jr nz,1F
 392+ 93A9
 393+ 93A9              ; --- Tipo_1
 394+ 93A9
 395+ 93A9 21 2F 8C     	ld hl,Ctrl_4
 396+ 93AC CB C6        	set 0,(hl)
 397+ 93AE C9           	ret
 398+ 93AF
 399+ 93AF 3D           1 dec a
 400+ 93B0 20 06        	jr nz,2F
 401+ 93B2
 402+ 93B2              ; --- Tipo_2
 403+ 93B2
 404+ 93B2 21 2F 8C     	ld hl,Ctrl_4
 405+ 93B5 CB CE        	set 1,(hl)
 406+ 93B7 C9           	ret
 407+ 93B8
 408+ 93B8 3D           2 dec a
 409+ 93B9 20 06        	jr nz,3F
 410+ 93BB
 411+ 93BB              ; --- Tipo_3
 412+ 93BB
 413+ 93BB 21 2F 8C     	ld hl,Ctrl_4
 414+ 93BE CB D6        	set 2,(hl)
 415+ 93C0 C9           	ret
 416+ 93C1
 417+ 93C1              ; --- Tipo_3
 418+ 93C1
 419+ 93C1 21 2F 8C     3 ld hl,Ctrl_4
 420+ 93C4 CB D6        	set 2,(hl)
 421+ 93C6 C9           	ret
 422+ 93C7
 423+ 93C7              ; ---------------------------------------------------------------------
 424+ 93C7              ;
 425+ 93C7              ;	22/01/24
 426+ 93C7
 427+ 93C7 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93CA CB 46        	bit 0,(hl)
 429+ 93CC 20 0E        	jr nz,1F
 430+ 93CE
 431+ 93CE CB 4E        	bit 1,(hl)
 432+ 93D0 20 10        	jr nz,2F
 433+ 93D2
 434+ 93D2 CB 56        	bit 2,(hl)
 435+ 93D4 20 12        	jr nz,3F
 436+ 93D6
 437+ 93D6 CB 5E        	bit 3,(hl)
 438+ 93D8 20 14        	jr nz,4F
 439+ 93DA 18 19        	jr 6F
 440+ 93DC
 441+ 93DC              ; Entidad_de_Tipo_1.
 442+ 93DC
 443+ 93DC CB 66        1 bit 4,(hl)
 444+ 93DE 28 15        	jr z,6F
 445+ 93E0 18 10        	jr 5F
 446+ 93E2
 447+ 93E2              ; Entidad_de_Tipo_2.
 448+ 93E2
 449+ 93E2 CB 6E        2 bit 5,(hl)
 450+ 93E4 28 0F        	jr z,6F
 451+ 93E6 18 0A        	jr 5F
 452+ 93E8
 453+ 93E8              ; Entidad_de_Tipo_3.
 454+ 93E8
 455+ 93E8 CB 76        3 bit 6,(hl)
 456+ 93EA 28 09        	jr z,6F
 457+ 93EC 18 04        	jr 5F
 458+ 93EE
 459+ 93EE              ; Entidad_de_Tipo_4.
 460+ 93EE
 461+ 93EE CB 7E        4 bit 7,(hl)
 462+ 93F0 28 03        	jr z,6F
 463+ 93F2
 464+ 93F2              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 93F2
 466+ 93F2 AF           5 xor a
 467+ 93F3 3C           	inc a
 468+ 93F4 C9           	ret
 469+ 93F5
 470+ 93F5              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 93F5
 472+ 93F5 AF           6 xor a
 473+ 93F6 C9           	ret
 474+ 93F7
 475+ 93F7              ;	------------------------------------------------------------------------------------
 476+ 93F7              ;
 477+ 93F7              ;	12/01/24
 478+ 93F7              ;
 479+ 93F7              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 93F7              ;
 481+ 93F7              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 93F7              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 93F7
 484+ 93F7 CB 27        Calcula_salto_en_BC sla a
 485+ 93F9 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 93FB 4F           	ld c,a
 487+ 93FC 06 00        	ld b,0
 488+ 93FE C9           	ret
 489+ 93FF
 490+ 93FF              ; ------------------------------------------------------------------
 491+ 93FF              ;
 492+ 93FF              ;	19/1/24
 493+ 93FF              ;
 494+ 93FF              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 93FF              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 93FF
 497+ 93FF A7           Situa_en_datos_de_definicion and a
 498+ 9400 ED 4A        	adc hl,bc
 499+ 9402 CD 5B 90     	call Extrae_address
 500+ 9405 22 06 8C         ld (Datos_de_entidad),hl
 501+ 9408 C9           	ret
 502+ 9409
 503+ 9409              ; ------------------------------------------------------------------
 504+ 9409
 505+ 9409              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9409              ; 	inc de
 507+ 9409              ; 	inc de
 508+ 9409              ; 	ex de,hl
 509+ 9409              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9409              ; 	ret
 511+ 9409
 512+ 9409              ; ----------------------------------------------------------------------------------------------------------
 513+ 9409              ;
 514+ 9409              ;	24/6/24
 515+ 9409              ;
 516+ 9409              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9409              ;	_ de entidad.
 518+ 9409              ;
 519+ 9409              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9409              ;
 521+ 9409              ;
 522+ 9409              ;	MODIFICA: HL,DE y BC
 523+ 9409
 524+ 9409
 525+ 9409              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9409
 527+ 9409 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 940C 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 940D 12           	ld (de),a
 530+ 940E 23           	inc hl
 531+ 940F              ;
 532+ 940F 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9412 01 02 00     	ld bc,2
 534+ 9415 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9417              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9417 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 941A 7E           	ld a,(hl)
 538+ 941B 12           	ld (de),a
 539+ 941C 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 941D
 541+ 941D 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 9420 01 04 00     	ld bc,4
 543+ 9423 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9425
 545+ 9425 11 D8 8B     	ld de,Posicion_inicio
 546+ 9428 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 942B ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 942D
 549+ 942D 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9430 01 02 00     	ld bc,2
 551+ 9433 ED B0        	ldir
 552+ 9435
 553+ 9435 C9           	ret
 554+ 9436
 555+ 9436              ; ----------------------------------------------------------------------------------------------------------
 556+ 9436              ;
 557+ 9436              ;	1/8/24
 558+ 9436              ;
 559+ 9436
 560+ 9436              Parametros_de_bandeja_DRAW_a_caja
 561+ 9436
 562+ 9436 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 9439 01 0C 00     	ld bc,12
 564+ 943C ED B0        	ldir
 565+ 943E C9           	ret
 566+ 943F
 567+ 943F              ;---------------------------------------------------------------------------------------------------------------
 568+ 943F              ;
 569+ 943F              ;	5/1/24
 570+ 943F              ;
 571+ 943F              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 943F              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 943F              ;
 574+ 943F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 943F              ;
 576+ 943F              ;	(Numero_parcial_de_entidades)="7".
 577+ 943F              ;
 578+ 943F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 943F              ;
 580+ 943F              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 943F              ;
 582+ 943F              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 943F              ;	MODIFICA: A y B.
 584+ 943F              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 943F
 586+ 943F              Inicializa_Numero_parcial_de_entidades
 587+ 943F
 588+ 943F              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 943F
 590+ 943F 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 9442 A7           	and a
 592+ 9443
 593+ 9443              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9443              ;	jr z,$
 595+ 9443              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9443
 597+ 9443 20 03        	jr nz,3F
 598+ 9445
 599+ 9445              ; ---------- ---------- ----------
 600+ 9445
 601+ 9445              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9445              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9445
 604+ 9445 CD 3B 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9448
 606+ 9448              ; ---------- ---------- ----------
 607+ 9448
 608+ 9448 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 944B FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 944D 38 08        	jr c,1F
 611+ 944F
 612+ 944F              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 944F              ; Actualizamos variables.
 614+ 944F
 615+ 944F 3E 07        	ld a,7
 616+ 9451 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9454 47           	ld b,a
 618+ 9455 18 04        	jr 2F
 619+ 9457
 620+ 9457              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9457              ; (Numero_de_entidades)="0".
 622+ 9457
 623+ 9457 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 945A 47           	ld b,a
 625+ 945B C9           2 ret
 626+ 945C
# file closed: Rutinas_de_inicio_y_niveles.asm
2261  945C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 945C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 945C              ;
   3+ 945C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 945C              ;
   5+ 945C              ; *****************************************************************************************************************************************************************************************
   6+ 945C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 945C
   8+ 945C 7C           calcula_tercio ld a,h
   9+ 945D E6 18        	and $18
  10+ 945F CB 2F        	sra a
  11+ 9461 CB 2F        	sra a
  12+ 9463 CB 2F        	sra a
  13+ 9465 C9           	ret
  14+ 9466
# file closed: calcula_tercio.asm
2262  9466              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9466              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9466              ;
   3+ 9466              ;
   4+ 9466              ;	CLS.
   5+ 9466              ;
   6+ 9466              ;	Limpia la pantalla y define sus atributos.
   7+ 9466              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9466              ;
   9+ 9466              ;	COLORES: 0 ..... NEGRO
  10+ 9466              ;    		 1 ..... AZUL
  11+ 9466              ; 			 2 ..... ROJO
  12+ 9466              ;			 3 ..... MAGENTA
  13+ 9466              ; 			 4 ..... VERDE
  14+ 9466              ; 			 5 ..... CIAN
  15+ 9466              ;			 6 ..... AMARILLO
  16+ 9466              ; 			 7 ..... BLANCO
  17+ 9466              ;
  18+ 9466              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9466              ;
  20+ 9466              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9466
  22+ 9466
  23+ 9466 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9469 11 01 40     	LD DE,$4001
  25+ 946C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 946F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9471 ED B0        	LDIR
  28+ 9473 01 FF 02     	LD BC,767
  29+ 9476 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9477 ED B0        	LDIR
  31+ 9479 C9           	ret
  32+ 947A
# file closed: Cls.asm
2263  947A              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 947A              ; ------------------------------------------------------------------------
   2+ 947A              ;
   3+ 947A              ;	30/1/24
   4+ 947A              ;
   5+ 947A              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 947A              ;	Fila superior "0", Columna izquierda "0".
   7+ 947A              ;
   8+ 947A              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 947A              ;
  10+ 947A              ;	Modifica: A,BC y DE.
  11+ 947A
  12+ 947A 7D           Genera_coordenadas ld a,l
  13+ 947B E6 1F        	and $1f
  14+ 947D 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9480
  16+ 9480 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9481 FE 40        	cp $40
  18+ 9483 38 1C        	jr c,4F
  19+ 9485
  20+ 9485 CD 5C 94     	call calcula_tercio
  21+ 9488 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9489
  23+ 9489 1E 00        	ld e,0
  24+ 948B 7D           	ld a,l
  25+ 948C E6 E0        	and $e0
  26+ 948E 28 01        	jr z,1F
  27+ 9490 04           	inc b
  28+ 9491
  29+ 9491 04           1 inc b
  30+ 9492 05           	dec b
  31+ 9493 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9495              ;														; _ , salimos.
  33+ 9495 1C           3 inc e
  34+ 9496 D6 20        	sub 32
  35+ 9498 20 FB        	jr nz,3B
  36+ 949A 10 F5        	djnz 1B
  37+ 949C
  38+ 949C 7B           2 ld a,e
  39+ 949D 32 BD 8B     	ld (Coordenada_y),a
  40+ 94A0 C9           	ret
  41+ 94A1
  42+ 94A1 AF           4 xor a
  43+ 94A2 32 BD 8B     	ld (Coordenada_y),a
  44+ 94A5 C9           	ret
  45+ 94A6
# file closed: Genera_coordenadas.asm
2264  94A6              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94A6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94A6              ;
   3+ 94A6              ;	11/03/24
   4+ 94A6              ;
   5+ 94A6              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94A6              ;   DE contiene Puntero_objeto.
   7+ 94A6              ;   IX contiene el Puntero de impresión.
   8+ 94A6
   9+ 94A6              Genera_datos_de_impresion
  10+ 94A6
  11+ 94A6 ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94AA
  13+ 94AA 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94AD DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94AF
  16+ 94AF 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 94B2
  18+ 94B2 3E 05            ld a,5
  19+ 94B4 85               add l
  20+ 94B5 6F               ld l,a
  21+ 94B6
  22+ 94B6 F9               ld sp,hl
  23+ 94B7 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 94BA
  25+ 94BA 21 00 00         ld hl,0
  26+ 94BD
  27+ 94BD DD E5            push ix
  28+ 94BF 3B               dec sp
  29+ 94C0 ED 7A            adc hl,sp
  30+ 94C2 D5               push de
  31+ 94C3
  32+ 94C3              ; Recuperamos SP.
  33+ 94C3
  34+ 94C3 ED 7B 08 8C      ld sp,(Stack)
  35+ 94C7
  36+ 94C7 E5               push hl
  37+ 94C8 F1               pop af
  38+ 94C9 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94CA
  40+ 94CA              ; Tenemos el encabezado listo.
  41+ 94CA              ; Preparamos registros para generar los scanlines.
  42+ 94CA
  43+ 94CA DD E5            push ix
  44+ 94CC E1               pop hl                                          ; 1er scanline en HL.
  45+ 94CD
  46+ 94CD ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 94D1
  48+ 94D1              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94D1              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94D1
  51+ 94D1 7C               ld a,h
  52+ 94D2 FE 50            cp $50
  53+ 94D4 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94D6
  55+ 94D6 20 05            jr nz,2F
  56+ 94D8
  57+ 94D8 7D               ld a,l
  58+ 94D9 FE E0            cp $e0
  59+ 94DB 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94DD
  61+ 94DD 7D           2 ld a,l
  62+ 94DE FE C0            cp $c0
  63+ 94E0 D2 72 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94E3
  65+ 94E3              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94E3
  67+ 94E3 CD 70 99         call NextScan
  68+ 94E6 EB               ex de,hl
  69+ 94E7
  70+ 94E7 73               ld (hl),e
  71+ 94E8 23               inc hl
  72+ 94E9 72               ld (hl),d
  73+ 94EA 23               inc hl
  74+ 94EB
  75+ 94EB EB               ex de,hl
  76+ 94EC
  77+ 94EC CD 70 99         call NextScan
  78+ 94EF EB               ex de,hl
  79+ 94F0
  80+ 94F0 73               ld (hl),e
  81+ 94F1 23               inc hl
  82+ 94F2 72               ld (hl),d
  83+ 94F3 23               inc hl
  84+ 94F4
  85+ 94F4 EB               ex de,hl
  86+ 94F5
  87+ 94F5 CD 70 99         call NextScan
  88+ 94F8 EB               ex de,hl
  89+ 94F9
  90+ 94F9 73               ld (hl),e
  91+ 94FA 23               inc hl
  92+ 94FB 72               ld (hl),d
  93+ 94FC 23               inc hl
  94+ 94FD
  95+ 94FD EB               ex de,hl
  96+ 94FE
  97+ 94FE CD 70 99         call NextScan
  98+ 9501 EB               ex de,hl
  99+ 9502
 100+ 9502 73               ld (hl),e
 101+ 9503 23               inc hl
 102+ 9504 72               ld (hl),d
 103+ 9505 23               inc hl
 104+ 9506
 105+ 9506 EB               ex de,hl
 106+ 9507
 107+ 9507 CD 70 99         call NextScan
 108+ 950A EB               ex de,hl
 109+ 950B
 110+ 950B 73               ld (hl),e
 111+ 950C 23               inc hl
 112+ 950D 72               ld (hl),d
 113+ 950E 23               inc hl
 114+ 950F
 115+ 950F EB               ex de,hl
 116+ 9510
 117+ 9510 CD 70 99         call NextScan
 118+ 9513 EB               ex de,hl
 119+ 9514
 120+ 9514 73               ld (hl),e
 121+ 9515 23               inc hl
 122+ 9516 72               ld (hl),d
 123+ 9517 23               inc hl
 124+ 9518
 125+ 9518 EB               ex de,hl
 126+ 9519
 127+ 9519 CD 70 99         call NextScan
 128+ 951C EB               ex de,hl
 129+ 951D
 130+ 951D 73               ld (hl),e
 131+ 951E 23               inc hl
 132+ 951F 72               ld (hl),d
 133+ 9520 23               inc hl
 134+ 9521
 135+ 9521 EB               ex de,hl
 136+ 9522
 137+ 9522 CD 70 99         call NextScan
 138+ 9525 EB               ex de,hl
 139+ 9526
 140+ 9526 73               ld (hl),e
 141+ 9527 23               inc hl
 142+ 9528 72               ld (hl),d
 143+ 9529 23               inc hl
 144+ 952A
 145+ 952A EB               ex de,hl
 146+ 952B
 147+ 952B CD 70 99         call NextScan
 148+ 952E EB               ex de,hl
 149+ 952F
 150+ 952F 73               ld (hl),e
 151+ 9530 23               inc hl
 152+ 9531 72               ld (hl),d
 153+ 9532 23               inc hl
 154+ 9533
 155+ 9533 EB               ex de,hl
 156+ 9534
 157+ 9534 CD 70 99         call NextScan
 158+ 9537 EB               ex de,hl
 159+ 9538
 160+ 9538 73               ld (hl),e
 161+ 9539 23               inc hl
 162+ 953A 72               ld (hl),d
 163+ 953B 23               inc hl
 164+ 953C
 165+ 953C EB               ex de,hl
 166+ 953D
 167+ 953D CD 70 99         call NextScan
 168+ 9540 EB               ex de,hl
 169+ 9541
 170+ 9541 73               ld (hl),e
 171+ 9542 23               inc hl
 172+ 9543 72               ld (hl),d
 173+ 9544 23               inc hl
 174+ 9545
 175+ 9545 EB               ex de,hl
 176+ 9546
 177+ 9546 CD 70 99         call NextScan
 178+ 9549 EB               ex de,hl
 179+ 954A
 180+ 954A 73               ld (hl),e
 181+ 954B 23               inc hl
 182+ 954C 72               ld (hl),d
 183+ 954D 23               inc hl
 184+ 954E
 185+ 954E EB               ex de,hl
 186+ 954F
 187+ 954F CD 70 99         call NextScan
 188+ 9552 EB               ex de,hl
 189+ 9553
 190+ 9553 73               ld (hl),e
 191+ 9554 23               inc hl
 192+ 9555 72               ld (hl),d
 193+ 9556 23               inc hl
 194+ 9557
 195+ 9557 EB               ex de,hl
 196+ 9558
 197+ 9558 CD 70 99         call NextScan
 198+ 955B EB               ex de,hl
 199+ 955C
 200+ 955C 73               ld (hl),e
 201+ 955D 23               inc hl
 202+ 955E 72               ld (hl),d
 203+ 955F 23               inc hl
 204+ 9560
 205+ 9560 EB               ex de,hl
 206+ 9561
 207+ 9561 CD 70 99         call NextScan
 208+ 9564 EB               ex de,hl
 209+ 9565
 210+ 9565 73               ld (hl),e
 211+ 9566 23               inc hl
 212+ 9567 72               ld (hl),d
 213+ 9568 23               inc hl
 214+ 9569
 215+ 9569              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9569
 217+ 9569 22 28 8C         ld (Scanlines_album_SP),hl
 218+ 956C
 219+ 956C              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 956C
 221+ 956C 08               ex af,af
 222+ 956D
 223+ 956D F5               push af
 224+ 956E E1               pop hl
 225+ 956F
 226+ 956F 36 10            ld (hl),16
 227+ 9571
 228+ 9571 C9               ret
 229+ 9572
 230+ 9572              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9572
 232+ 9572              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9572
 234+ 9572 3E 57            ld a,$57
 235+ 9574 94               sub h
 236+ 9575 47               ld b,a
 237+ 9576
 238+ 9576 3E DF            ld a,$df
 239+ 9578 BD               cp l
 240+ 9579 38 04            jr c,1F
 241+ 957B
 242+ 957B 3E 08            ld a,8
 243+ 957D 80               add b
 244+ 957E 47               ld b,a
 245+ 957F
 246+ 957F              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 957F              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 957F
 249+ 957F 48           1 ld c,b
 250+ 9580 0C               inc c
 251+ 9581
 252+ 9581 04               inc b
 253+ 9582 05               dec b
 254+ 9583 20 02            jr nz,3F
 255+ 9585
 256+ 9585 18 0B            jr 6F
 257+ 9587
 258+ 9587 CD 70 99     3 call NextScan
 259+ 958A EB               ex de,hl
 260+ 958B
 261+ 958B 73               ld (hl),e
 262+ 958C 23               inc hl
 263+ 958D 72               ld (hl),d
 264+ 958E 23               inc hl
 265+ 958F
 266+ 958F EB               ex de,hl
 267+ 9590 10 F5            djnz 3B
 268+ 9592
 269+ 9592 ED 53 28 8C  6 ld (Scanlines_album_SP),de
 270+ 9596
 271+ 9596 08           5 ex af,af
 272+ 9597 F5               push af
 273+ 9598 E1               pop hl
 274+ 9599
 275+ 9599 71               ld (hl),c
 276+ 959A
 277+ 959A C9               ret
 278+ 959B
# file closed: Genera_datos_de_impresion.asm
2265  959B              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 959B              ; -----------------------------------------------------------------------------
   2+ 959B              ;
   3+ 959B              ;   11/03/24
   4+ 959B              ;
   5+ 959B
   6+ 959B              Pinta_Sprites
   7+ 959B
   8+ 959B              ;    ld hl,(Scanlines_album_SP)
   9+ 959B              ;    call Extrae_address
  10+ 959B
  11+ 959B              ;    inc h
  12+ 959B              ;    dec h
  13+ 959B              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 959B
  15+ 959B ED 73 08 8C      ld (Stack),sp
  16+ 959F
  17+ 959F EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95A0              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95A0 2C               inc l
  20+ 95A1 2C               inc l
  21+ 95A2
  22+ 95A2 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95A3
  24+ 95A3 2C               inc l
  25+ 95A4 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95A5
  27+ 95A5              ;   Seleccionamos rutina de impresión:
  28+ 95A5
  29+ 95A5 3E 10            ld a,16
  30+ 95A7 B8               cp b
  31+ 95A8 C2 A4 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95AB
  33+ 95AB              ;   Rutinas:
  34+ 95AB
  35+ 95AB              Pinta_rapido    ;   1520 t/states.
  36+ 95AB
  37+ 95AB E1               pop hl
  38+ 95AC
  39+ 95AC 1A               ld a,(de)
  40+ 95AD AE               xor (hl)
  41+ 95AE 77               ld (hl),a
  42+ 95AF 2C               inc l
  43+ 95B0 1C               inc e
  44+ 95B1 1A               ld a,(de)
  45+ 95B2 AE               xor (hl)
  46+ 95B3 77               ld (hl),a
  47+ 95B4 2C               inc l
  48+ 95B5 1C               inc e
  49+ 95B6 1A               ld a,(de)
  50+ 95B7 AE               xor (hl)
  51+ 95B8 77               ld (hl),a
  52+ 95B9 13               inc de
  53+ 95BA
  54+ 95BA E1               pop hl
  55+ 95BB
  56+ 95BB 1A               ld a,(de)
  57+ 95BC AE               xor (hl)
  58+ 95BD 77               ld (hl),a
  59+ 95BE 2C               inc l
  60+ 95BF 1C               inc e
  61+ 95C0 1A               ld a,(de)
  62+ 95C1 AE               xor (hl)
  63+ 95C2 77               ld (hl),a
  64+ 95C3 2C               inc l
  65+ 95C4 1C               inc e
  66+ 95C5 1A               ld a,(de)
  67+ 95C6 AE               xor (hl)
  68+ 95C7 77               ld (hl),a
  69+ 95C8 13               inc de
  70+ 95C9
  71+ 95C9 E1               pop hl
  72+ 95CA
  73+ 95CA 1A               ld a,(de)
  74+ 95CB AE               xor (hl)
  75+ 95CC 77               ld (hl),a
  76+ 95CD 2C               inc l
  77+ 95CE 1C               inc e
  78+ 95CF 1A               ld a,(de)
  79+ 95D0 AE               xor (hl)
  80+ 95D1 77               ld (hl),a
  81+ 95D2 2C               inc l
  82+ 95D3 1C               inc e
  83+ 95D4 1A               ld a,(de)
  84+ 95D5 AE               xor (hl)
  85+ 95D6 77               ld (hl),a
  86+ 95D7 13               inc de
  87+ 95D8
  88+ 95D8 E1               pop hl
  89+ 95D9
  90+ 95D9 1A               ld a,(de)
  91+ 95DA AE               xor (hl)
  92+ 95DB 77               ld (hl),a
  93+ 95DC 2C               inc l
  94+ 95DD 1C               inc e
  95+ 95DE 1A               ld a,(de)
  96+ 95DF AE               xor (hl)
  97+ 95E0 77               ld (hl),a
  98+ 95E1 2C               inc l
  99+ 95E2 1C               inc e
 100+ 95E3 1A               ld a,(de)
 101+ 95E4 AE               xor (hl)
 102+ 95E5 77               ld (hl),a
 103+ 95E6 13               inc de
 104+ 95E7
 105+ 95E7 E1               pop hl
 106+ 95E8
 107+ 95E8 1A               ld a,(de)
 108+ 95E9 AE               xor (hl)
 109+ 95EA 77               ld (hl),a
 110+ 95EB 2C               inc l
 111+ 95EC 1C               inc e
 112+ 95ED 1A               ld a,(de)
 113+ 95EE AE               xor (hl)
 114+ 95EF 77               ld (hl),a
 115+ 95F0 2C               inc l
 116+ 95F1 1C               inc e
 117+ 95F2 1A               ld a,(de)
 118+ 95F3 AE               xor (hl)
 119+ 95F4 77               ld (hl),a
 120+ 95F5 13               inc de
 121+ 95F6
 122+ 95F6 E1               pop hl
 123+ 95F7
 124+ 95F7 1A               ld a,(de)
 125+ 95F8 AE               xor (hl)
 126+ 95F9 77               ld (hl),a
 127+ 95FA 2C               inc l
 128+ 95FB 1C               inc e
 129+ 95FC 1A               ld a,(de)
 130+ 95FD AE               xor (hl)
 131+ 95FE 77               ld (hl),a
 132+ 95FF 2C               inc l
 133+ 9600 1C               inc e
 134+ 9601 1A               ld a,(de)
 135+ 9602 AE               xor (hl)
 136+ 9603 77               ld (hl),a
 137+ 9604 13               inc de
 138+ 9605
 139+ 9605 E1               pop hl
 140+ 9606
 141+ 9606 1A               ld a,(de)
 142+ 9607 AE               xor (hl)
 143+ 9608 77               ld (hl),a
 144+ 9609 2C               inc l
 145+ 960A 1C               inc e
 146+ 960B 1A               ld a,(de)
 147+ 960C AE               xor (hl)
 148+ 960D 77               ld (hl),a
 149+ 960E 2C               inc l
 150+ 960F 1C               inc e
 151+ 9610 1A               ld a,(de)
 152+ 9611 AE               xor (hl)
 153+ 9612 77               ld (hl),a
 154+ 9613 13               inc de
 155+ 9614
 156+ 9614 E1               pop hl
 157+ 9615
 158+ 9615 1A               ld a,(de)
 159+ 9616 AE               xor (hl)
 160+ 9617 77               ld (hl),a
 161+ 9618 2C               inc l
 162+ 9619 1C               inc e
 163+ 961A 1A               ld a,(de)
 164+ 961B AE               xor (hl)
 165+ 961C 77               ld (hl),a
 166+ 961D 2C               inc l
 167+ 961E 1C               inc e
 168+ 961F 1A               ld a,(de)
 169+ 9620 AE               xor (hl)
 170+ 9621 77               ld (hl),a
 171+ 9622 13               inc de
 172+ 9623
 173+ 9623 E1               pop hl
 174+ 9624
 175+ 9624 1A               ld a,(de)
 176+ 9625 AE               xor (hl)
 177+ 9626 77               ld (hl),a
 178+ 9627 2C               inc l
 179+ 9628 1C               inc e
 180+ 9629 1A               ld a,(de)
 181+ 962A AE               xor (hl)
 182+ 962B 77               ld (hl),a
 183+ 962C 2C               inc l
 184+ 962D 1C               inc e
 185+ 962E 1A               ld a,(de)
 186+ 962F AE               xor (hl)
 187+ 9630 77               ld (hl),a
 188+ 9631 13               inc de
 189+ 9632
 190+ 9632 E1               pop hl
 191+ 9633
 192+ 9633 1A               ld a,(de)
 193+ 9634 AE               xor (hl)
 194+ 9635 77               ld (hl),a
 195+ 9636 2C               inc l
 196+ 9637 1C               inc e
 197+ 9638 1A               ld a,(de)
 198+ 9639 AE               xor (hl)
 199+ 963A 77               ld (hl),a
 200+ 963B 2C               inc l
 201+ 963C 1C               inc e
 202+ 963D 1A               ld a,(de)
 203+ 963E AE               xor (hl)
 204+ 963F 77               ld (hl),a
 205+ 9640 13               inc de
 206+ 9641
 207+ 9641 E1               pop hl
 208+ 9642
 209+ 9642 1A               ld a,(de)
 210+ 9643 AE               xor (hl)
 211+ 9644 77               ld (hl),a
 212+ 9645 2C               inc l
 213+ 9646 1C               inc e
 214+ 9647 1A               ld a,(de)
 215+ 9648 AE               xor (hl)
 216+ 9649 77               ld (hl),a
 217+ 964A 2C               inc l
 218+ 964B 1C               inc e
 219+ 964C 1A               ld a,(de)
 220+ 964D AE               xor (hl)
 221+ 964E 77               ld (hl),a
 222+ 964F 13               inc de
 223+ 9650
 224+ 9650 E1               pop hl
 225+ 9651
 226+ 9651 1A               ld a,(de)
 227+ 9652 AE               xor (hl)
 228+ 9653 77               ld (hl),a
 229+ 9654 2C               inc l
 230+ 9655 1C               inc e
 231+ 9656 1A               ld a,(de)
 232+ 9657 AE               xor (hl)
 233+ 9658 77               ld (hl),a
 234+ 9659 2C               inc l
 235+ 965A 1C               inc e
 236+ 965B 1A               ld a,(de)
 237+ 965C AE               xor (hl)
 238+ 965D 77               ld (hl),a
 239+ 965E 13               inc de
 240+ 965F
 241+ 965F E1               pop hl
 242+ 9660
 243+ 9660 1A               ld a,(de)
 244+ 9661 AE               xor (hl)
 245+ 9662 77               ld (hl),a
 246+ 9663 2C               inc l
 247+ 9664 1C               inc e
 248+ 9665 1A               ld a,(de)
 249+ 9666 AE               xor (hl)
 250+ 9667 77               ld (hl),a
 251+ 9668 2C               inc l
 252+ 9669 1C               inc e
 253+ 966A 1A               ld a,(de)
 254+ 966B AE               xor (hl)
 255+ 966C 77               ld (hl),a
 256+ 966D 13               inc de
 257+ 966E
 258+ 966E E1               pop hl
 259+ 966F
 260+ 966F 1A               ld a,(de)
 261+ 9670 AE               xor (hl)
 262+ 9671 77               ld (hl),a
 263+ 9672 2C               inc l
 264+ 9673 1C               inc e
 265+ 9674 1A               ld a,(de)
 266+ 9675 AE               xor (hl)
 267+ 9676 77               ld (hl),a
 268+ 9677 2C               inc l
 269+ 9678 1C               inc e
 270+ 9679 1A               ld a,(de)
 271+ 967A AE               xor (hl)
 272+ 967B 77               ld (hl),a
 273+ 967C 13               inc de
 274+ 967D
 275+ 967D E1               pop hl
 276+ 967E
 277+ 967E 1A               ld a,(de)
 278+ 967F AE               xor (hl)
 279+ 9680 77               ld (hl),a
 280+ 9681 2C               inc l
 281+ 9682 1C               inc e
 282+ 9683 1A               ld a,(de)
 283+ 9684 AE               xor (hl)
 284+ 9685 77               ld (hl),a
 285+ 9686 2C               inc l
 286+ 9687 1C               inc e
 287+ 9688 1A               ld a,(de)
 288+ 9689 AE               xor (hl)
 289+ 968A 77               ld (hl),a
 290+ 968B 13               inc de
 291+ 968C
 292+ 968C E1               pop hl
 293+ 968D
 294+ 968D 1A               ld a,(de)
 295+ 968E AE               xor (hl)
 296+ 968F 77               ld (hl),a
 297+ 9690 2C               inc l
 298+ 9691 1C               inc e
 299+ 9692 1A               ld a,(de)
 300+ 9693 AE               xor (hl)
 301+ 9694 77               ld (hl),a
 302+ 9695 2C               inc l
 303+ 9696 1C               inc e
 304+ 9697 1A               ld a,(de)
 305+ 9698 AE               xor (hl)
 306+ 9699 77               ld (hl),a
 307+ 969A 13               inc de
 308+ 969B
 309+ 969B ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 969F ED 7B 08 8C      ld sp,(Stack)
 311+ 96A3 C9               ret
 312+ 96A4
 313+ 96A4              Pinta_lento
 314+ 96A4
 315+ 96A4 E1           1 pop hl
 316+ 96A5
 317+ 96A5 1A               ld a,(de)
 318+ 96A6 AE               xor (hl)
 319+ 96A7 77               ld (hl),a
 320+ 96A8 2C               inc l
 321+ 96A9 1C               inc e
 322+ 96AA 1A               ld a,(de)
 323+ 96AB AE               xor (hl)
 324+ 96AC 77               ld (hl),a
 325+ 96AD 2C               inc l
 326+ 96AE 1C               inc e
 327+ 96AF 1A               ld a,(de)
 328+ 96B0 AE               xor (hl)
 329+ 96B1 77               ld (hl),a
 330+ 96B2 13               inc de
 331+ 96B3
 332+ 96B3 10 EF            djnz 1B
 333+ 96B5
 334+ 96B5 ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 96B9 ED 7B 08 8C      ld sp,(Stack)
 336+ 96BD C9               ret
# file closed: Pinta_Sprites.asm
2266  96BE              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96BE              ; ******************************************************************************************************************************************************************************************
   2+ 96BE              ;
   3+ 96BE              ; 26/06/23
   4+ 96BE              ;
   5+ 96BE              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96BE
   7+ 96BE              Draw
   8+ 96BE
   9+ 96BE CD 64 99     	call Prepara_draw
  10+ 96C1 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96C2 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96C3 28 05        	jr z,2F
  13+ 96C5
  14+ 96C5 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96C8 18 0C        	jr 1F
  16+ 96CA
  17+ 96CA 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96CD 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96D0 CD 5C 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96D3              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96D3
  22+ 96D3 CD 03 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96D6
  24+ 96D6 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96D9 CB 6F        	bit 5,a
  26+ 96DB 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96DD
  28+ 96DD CD F2 96     	call Comprueba_limite_horizontal
  29+ 96E0 CD 82 97     	call Comprueba_limite_vertical
  30+ 96E3
  31+ 96E3              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96E3              ; -----------------------
  33+ 96E3              ; -----------------------
  34+ 96E3              ; -----------------------
  35+ 96E3
  36+ 96E3 CD D8 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96E6 CD 0F 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96E9
  39+ 96E9 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96EC CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96EE 32 C8 8B     	ld (Ctrl_0),a
  42+ 96F1
  43+ 96F1 C9           	ret
  44+ 96F2
  45+ 96F2              ; *******************************************************************************************************************************************************************************************
  46+ 96F2              ;	21/01/23
  47+ 96F2              ;
  48+ 96F2              ; 	Comprueba_limite_horizontal.
  49+ 96F2              ;
  50+ 96F2              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96F2              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96F2              ;
  53+ 96F2              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96F2              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96F2              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96F2              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96F2
  58+ 96F2
  59+ 96F2
  60+ 96F2 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96F5 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96F7 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96F9 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 96FB 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 96FE 18 09            jr 6F
  66+ 9700 CB 5F        1 bit 3,a
  67+ 9702 28 0A            jr z,2F
  68+ 9704 E6 F7            and $f7
  69+ 9706 32 C8 8B         ld (Ctrl_0),a
  70+ 9709 CD 5C 98     6 call Inicializacion
  71+ 970C 18 5B            jr 5F
  72+ 970E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 970F
  74+ 970F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 970F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 970F
  77+ 970F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9710 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9713 CD 5C 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9716 67           	ld h,a
  81+ 9717 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9718 CD 5C 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 971B 67           	ld h,a
  84+ 971C A7           	and a
  85+ 971D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 971F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9720 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 9723 FE 02        	cp 2
  89+ 9725 38 1E        	jr c,3F
  90+ 9727 28 1C        	jr z,3F
  91+ 9729 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 972A 28 23            jr z,7F
  93+ 972C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 972E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9730 E1           	pop hl
  96+ 9731
  97+ 9731              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9731              ; _para indicar con E="2" en caso necesario.
  99+ 9731
 100+ 9731 E5               push hl
 101+ 9732 C5               push bc
 102+ 9733 CD 5C 94     	call calcula_tercio
 103+ 9736 FE 01        	cp 1
 104+ 9738 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 973A CD 6A 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 973D 28 26            jr z,9F
 107+ 973F 38 24            jr c,9F
 108+ 9741 1E 00        11 ld e,0
 109+ 9743 18 22            jr 8F
 110+ 9745 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9746 28 07        	jr z, 7F
 112+ 9748 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 974A 1E 00         	ld e,0
 114+ 974C E1           	pop hl
 115+ 974D 18 04        	jr 4F
 116+ 974F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9751 18 15            jr 10F
 118+ 9753
 119+ 9753              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9753              ; _para indicar con E="2" en caso necesario.
 121+ 9753
 122+ 9753 E5           4 push hl
 123+ 9754 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9755 CD 5C 94     	call calcula_tercio
 125+ 9758 FE 01        	cp 1
 126+ 975A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 975C CD 6A 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 975F 28 04            jr z,9F
 129+ 9761 30 02            jr nc,9F
 130+ 9763 18 02        	jr 8F
 131+ 9765 1E 02        9 ld e,2
 132+ 9767 C1           8 pop bc
 133+ 9768 E1           10 pop hl
 134+ 9769 C9           5 ret
 135+ 976A
 136+ 976A              ; --------------------
 137+ 976A              ;
 138+ 976A              ; 25/08/22
 139+ 976A
 140+ 976A CD 5C 94     Comprueba_centro call calcula_tercio
 141+ 976D 67               ld h,a
 142+ 976E 08           	ex af,af
 143+ 976F FE 02        	cp 2
 144+ 9771 38 07        	jr c,1F
 145+ 9773 28 05        	jr z,1F
 146+ 9775 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9778 18 03        	jr 2F
 148+ 977A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 977D 08           2 ex af,af
 150+ 977E A7               and a
 151+ 977F ED 42            sbc hl,bc
 152+ 9781 C9               ret
 153+ 9782
 154+ 9782              ; *********************************************************************************************************************************************************************************************
 155+ 9782              ;
 156+ 9782              ;   16/8/22
 157+ 9782              ;
 158+ 9782              ;	Comprueba_limite_vertical
 159+ 9782              ;
 160+ 9782              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9782              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9782              ;
 163+ 9782
 164+ 9782 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9785 7D           	ld a,l
 166+ 9786 E6 1F        	and $1F
 167+ 9788 57           	ld d,a
 168+ 9789 3A DE 8B     	ld a,(Limite_vertical)
 169+ 978C BA           	cp d 											; Límite - Posición.
 170+ 978D 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 978E 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9791 CB 47        	bit 0,a
 173+ 9793 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9795
 175+ 9795              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9795
 177+ 9795 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9796 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9798
 180+ 9798              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9798              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9798
 183+ 9798 3A BC 8B         ld a,(Coordenada_X)
 184+ 979B 16 0F            ld d,Centro_izquierda
 185+ 979D A7               and a
 186+ 979E 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 979F 28 1E            jr z,3F
 188+ 97A1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97A3              ;                                                    ; _salimos sin modificar nada.
 190+ 97A3 18 0E            jr 2F
 191+ 97A5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97A6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97A8
 194+ 97A8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97A8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97A8
 197+ 97A8 3A BC 8B         ld a,(Coordenada_X)
 198+ 97AB 16 10            ld d,Centro_derecha
 199+ 97AD A7               and a
 200+ 97AE 92               sub d
 201+ 97AF 28 0E            jr z,3F
 202+ 97B1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97B3              ;                                                    ; _salimos sin modificar nada.
 204+ 97B3 CB 43        2 bit 0,e
 205+ 97B5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97B7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97B8 CD 4C 98         call Modificaccionne
 208+ 97BB C1           	pop bc
 209+ 97BC CD 5C 98         call Inicializacion
 210+ 97BF C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97C0
 212+ 97C0              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97C0
 214+ 97C0 C5           4 push bc
 215+ 97C1 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97C4 0A           	ld a,(bc)
 217+ 97C5 3D           	dec a
 218+ 97C6 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97C7 7D           	ld a,l
 220+ 97C8 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97C9 CB 47        	bit 0,a
 222+ 97CB 28 03        	jr z,5F
 223+ 97CD 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97CE 18 2E        	jr 7F
 225+ 97D0
 226+ 97D0              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97D0
 228+ 97D0 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97D1 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97D2 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97D5 CB 4F        	bit 1,a
 232+ 97D7 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97D9 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97DA
 235+ 97DA              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97DA
 237+ 97DA 1C               inc e
 238+ 97DB 1D               dec e
 239+ 97DC 20 07            jr nz,12F
 240+ 97DE 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97DF 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97E0 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97E3 18 44        13 jr 9F
 244+ 97E5 CB 43        12 bit 0,e
 245+ 97E7 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97E9              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97E9 C1           	pop bc
 248+ 97EA 18 D3        	jr 3B
 249+ 97EC 80           14 add b
 250+ 97ED 6F               ld l,a
 251+ 97EE 22 CB 8B     	ld (Posicion_actual),hl
 252+ 97F1 CD 4C 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97F4 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97F6 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97F8 32 C8 8B         ld (Ctrl_0),a
 256+ 97FB F1           	pop af
 257+ 97FC 18 2B        	jr 9F
 258+ 97FE
 259+ 97FE              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 97FE
 261+ 97FE F5           7 push af
 262+ 97FF 3A C8 8B     	ld a,(Ctrl_0)
 263+ 9802 CB 47        	bit 0,a
 264+ 9804 20 1D        	jr nz,8F
 265+ 9806 F1           	pop af
 266+ 9807
 267+ 9807              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9807
 269+ 9807 1C           	inc e
 270+ 9808 1D               dec e
 271+ 9809 20 07            jr nz,10F
 272+ 980B 90           	sub b
 273+ 980C 6F               ld l,a
 274+ 980D 22 CB 8B     	ld (Posicion_actual),hl
 275+ 9810 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9812              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9812 CB 43        10 bit 0,e
 278+ 9814 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9816              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9816 C1           	pop bc
 281+ 9817 18 A6        	jr 3B
 282+ 9819 90           16 sub b
 283+ 981A 6F               ld l,a
 284+ 981B 22 CB 8B     	ld (Posicion_actual),hl
 285+ 981E CD 4C 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9821 18 06            jr 9F
 287+ 9823 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9825 32 C8 8B         ld (Ctrl_0),a
 289+ 9828 F1           	pop af
 290+ 9829 C1           9 pop bc
 291+ 982A 1E 00        	ld e,0
 292+ 982C CD 5C 98         call Inicializacion
 293+ 982F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9830 08           	ex af,af
 295+ 9831 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9832 18 8B            jr 3B
 297+ 9834
 298+ 9834              ; --------------------
 299+ 9834
 300+ 9834 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9836 CD 7F 99     1 call PreviousScan
 302+ 9839 10 FB            djnz 1B
 303+ 983B 22 CB 8B     	ld (Posicion_actual),hl
 304+ 983E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 983F C9           	ret
 306+ 9840
 307+ 9840              ; --------------------
 308+ 9840
 309+ 9840 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9842 CD 70 99     1 call NextScan
 311+ 9845 10 FB            djnz 1B
 312+ 9847 22 CB 8B     	ld (Posicion_actual),hl
 313+ 984A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 984B C9           	ret
 315+ 984C
 316+ 984C              ; --------------------
 317+ 984C              ;
 318+ 984C              ;	22/01/23
 319+ 984C              ;
 320+ 984C              ;	E="1". Hemos cambiado de cuadrante.
 321+ 984C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 984C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 984C
 324+ 984C
 325+ 984C              Modificaccionne
 326+ 984C
 327+ 984C 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 984F FE 02        	cp 2
 329+ 9851 CC 34 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9854 DC 34 98         call c,Modifica_Pos_actual
 331+ 9857 C8           	ret z
 332+ 9858 CD 40 98         call Modifica_Pos_actual2
 333+ 985B C9               ret
 334+ 985C
 335+ 985C              ; *************************************************************************************************************************************************************************************************
 336+ 985C              ;
 337+ 985C              ;	13/8/22
 338+ 985C              ;
 339+ 985C              ;	Inicializacion
 340+ 985C              ;
 341+ 985C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 985C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 985C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 985C              ;
 345+ 985C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 985C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 985C              ;	_ desaparece/aparece.
 348+ 985C
 349+ 985C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 985C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 985C              ;
 352+ 985C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 985C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 985C              ; 		   [E] ="0"
 355+ 985C
 356+ 985C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 985C
 358+ 985C CD 5C 94     Inicializacion call calcula_tercio
 359+ 985F 28 36        	jr z,primit
 360+ 9861 E6 02        	and 2
 361+ 9863 20 07        	jr nz,segmit
 362+ 9865 7D           	ld a,l
 363+ 9866 FE 7F        	cp $7f
 364+ 9868 38 2D        	jr c,primit
 365+ 986A 28 2B        	jr z,primit
 366+ 986C CD D2 98     segmit call column
 367+ 986F 38 13        	jr c,tercuad
 368+ 9871 3E 04        cuarcuad ld a,4
 369+ 9873 32 DA 8B     	ld (Cuad_objeto),a
 370+ 9876 21 20 48     	ld hl,$4820
 371+ 9879 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 987C 21 DE 8B     	ld hl,Limite_vertical
 373+ 987F 36 0D        	ld (hl),$0d
 374+ 9881 08           	ex af,af
 375+ 9882 18 3C        	jr 1F
 376+ 9884              tercuad
 377+ 9884 3E 03        	ld a,3
 378+ 9886 32 DA 8B     	ld (Cuad_objeto),a
 379+ 9889 21 20 48     	ld hl,$4820
 380+ 988C 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 988F 21 DE 8B     	ld hl,Limite_vertical
 382+ 9892 36 12        	ld (hl),$12
 383+ 9894 08           	ex af,af
 384+ 9895 18 29        	jr 1F
 385+ 9897 CD D2 98     primit call column
 386+ 989A 38 13        	jr c, primcuad
 387+ 989C              segcuad
 388+ 989C 3E 02        	ld a,2
 389+ 989E 32 DA 8B     	ld (Cuad_objeto),a
 390+ 98A1 21 C0 4F     	ld hl,$4fc0
 391+ 98A4 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 98A7 21 DE 8B     	ld hl,Limite_vertical
 393+ 98AA 36 0D        	ld (hl),$0d
 394+ 98AC 08           	ex af,af
 395+ 98AD 18 11        	jr 1F
 396+ 98AF              primcuad
 397+ 98AF 3E 01        	ld a,1
 398+ 98B1 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98B4 21 C0 4F     	ld hl,$4fc0
 400+ 98B7 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98BA 21 DE 8B     	ld hl,Limite_vertical
 402+ 98BD 36 12        	ld (hl),$12
 403+ 98BF 08           	ex af,af
 404+ 98C0
 405+ 98C0 C5           1 push bc
 406+ 98C1 E5           	push hl
 407+ 98C2 D5           	push de
 408+ 98C3
 409+ 98C3 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98C6 CD 7A 94     	call Genera_coordenadas
 411+ 98C9
 412+ 98C9 D1           	pop de
 413+ 98CA E1           	pop hl
 414+ 98CB C1           	pop bc
 415+ 98CC
 416+ 98CC 21 C8 8B     	ld hl,Ctrl_0
 417+ 98CF CB EE        	set 5,(hl)
 418+ 98D1 C9           	ret
 419+ 98D2
 420+ 98D2              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98D2
 422+ 98D2              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98D2              ;
 424+ 98D2              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98D2
 426+ 98D2 7D           column ld a,l
 427+ 98D3 E6 1F        	and $1f
 428+ 98D5 FE 10         	cp $10
 429+ 98D7 C9            	ret
 430+ 98D8
 431+ 98D8              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98D8              ;
 433+ 98D8              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98D8              ;
 435+ 98D8              ; 14/12/22
 436+ 98D8              ;
 437+ 98D8              ;	Modifica: A y BC.
 438+ 98D8
 439+ 98D8 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98DB E6 01        	and 1
 441+ 98DD 28 17        	jr z,1F
 442+ 98DF
 443+ 98DF              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98DF
 445+ 98DF 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98E2 47           	ld b,a
 447+ 98E3 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98E4 79           	ld a,c
 449+ 98E5 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98E6 38 08        	jr c,2F
 451+ 98E8 47           	ld b,a
 452+ 98E9 79           	ld a,c
 453+ 98EA 90           	sub b
 454+ 98EB 32 DB 8B     	ld (Columnas),a
 455+ 98EE 18 1B        	jr 4F
 456+ 98F0 79           2 ld a,c
 457+ 98F1 32 DB 8B     	ld (Columnas),a
 458+ 98F4 18 15        	jr 4F
 459+ 98F6
 460+ 98F6              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98F6
 462+ 98F6 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 98F9 81           	add c
 464+ 98FA 3D           	dec a
 465+ 98FB D6 1F        	sub $1f
 466+ 98FD 38 08        	jr c,3F
 467+ 98FF 47           	ld b,a
 468+ 9900 79           	ld a,c
 469+ 9901 90           	sub b
 470+ 9902 32 DB 8B     	ld (Columnas),a
 471+ 9905 18 04        	jr 4F
 472+ 9907 79           3 ld a,c
 473+ 9908 32 DB 8B     	ld (Columnas),a
 474+ 990B D9           4 exx
 475+ 990C 4F           	ld c,a
 476+ 990D D9           	exx
 477+ 990E C9            ret
 478+ 990F
 479+ 990F              ; --------------------------------------------------------------------------------------------------------------------
 480+ 990F              ;
 481+ 990F              ;   19/7/23
 482+ 990F              ;
 483+ 990F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 990F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 990F              ;
 486+ 990F              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 990F              ;			HL e IY Contienen (Puntero_objeto).
 488+ 990F              ;
 489+ 990F              ;	DESTRUYE: HL,B Y A.
 490+ 990F
 491+ 990F 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9912 FE 02        	cp 2
 493+ 9914 38 18        	jr c,1F
 494+ 9916 28 16        	jr z,1F
 495+ 9918 E6 01        	and 1
 496+ 991A 28 0D        	jr z,3F
 497+ 991C
 498+ 991C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 991C
 500+ 991C CD 58 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 991F
 502+ 991F 7D           9 ld a,l
 503+ 9920 E6 1F        	and $1f
 504+ 9922 28 2A        	jr z,7F
 505+ 9924 2B           	dec hl
 506+ 9925 10 F8        	djnz 9B
 507+ 9927 18 25        	jr 7F
 508+ 9929
 509+ 9929              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9929
 511+ 9929 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 992C 18 20        	jr 7F
 513+ 992E
 514+ 992E 28 14        1 jr z,2F
 515+ 9930
 516+ 9930              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9930
 518+ 9930 CD 58 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9933
 520+ 9933 7D           4 ld a,l
 521+ 9934 E6 1F        	and $1f
 522+ 9936 28 03        	jr z,6F
 523+ 9938 2B           	dec hl
 524+ 9939 10 F8        	djnz 4B
 525+ 993B 06 0F        6 ld b,15
 526+ 993D CD 7F 99     5 call PreviousScan
 527+ 9940 10 FB        	djnz 5B
 528+ 9942 18 0A        	jr 7F
 529+ 9944
 530+ 9944              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9944
 532+ 9944 CD 58 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9947 06 0F        	ld b,15
 534+ 9949 CD 7F 99     8 call PreviousScan
 535+ 994C 10 FB        	djnz 8B
 536+ 994E
 537+ 994E E5           7 push hl
 538+ 994F DD E1        	pop ix
 539+ 9951
 540+ 9951 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 9954 E5           	push hl
 542+ 9955 FD E1        	pop iy
 543+ 9957
 544+ 9957 C9           	ret
 545+ 9958
 546+ 9958              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9958              ;
 548+ 9958              ;	2/1/23
 549+ 9958              ;
 550+ 9958              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9958              ;
 552+ 9958              ;	Tras esta rutina tenemos:
 553+ 9958              ;
 554+ 9958              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9958              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9958              ;
 557+ 9958              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9958
 559+ 9958 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 995B 3A DB 8B     	ld a,(Columnas)
 561+ 995E 3D           	dec a
 562+ 995F 20 01        	jr nz,1F
 563+ 9961 3C           	inc a
 564+ 9962 47           1 ld b,a
 565+ 9963 C9           	ret
 566+ 9964
 567+ 9964              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9964              ;
 569+ 9964              ;	Prepara_draw
 570+ 9964              ;
 571+ 9964              ;	Es una rutina de carga.
 572+ 9964              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9964              ;
 574+ 9964              ;	FUNCIONAMIENTO:
 575+ 9964              ;
 576+ 9964              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9964              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9964              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9964              ;
 580+ 9964              ;	DESTRUYE:
 581+ 9964              ;
 582+ 9964              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9964
 584+ 9964 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9967 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9968 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9969 4E           	ld c,(hl)
 588+ 996A 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 996D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 996F C9           	ret
 591+ 9970
 592+ 9970              ;----------------------------------------------------------------------------------------------------------------
 593+ 9970              ;
 594+ 9970              ;	5/08/22
 595+ 9970              ;
 596+ 9970              ;   NextScan.
 597+ 9970              ;
 598+ 9970              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9970              ;
 600+ 9970              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9970              ;
 602+ 9970              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9970              ;
 604+ 9970              ;       DESTRUIDOS: AF y HL !!!
 605+ 9970              ;
 606+ 9970              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9970              ;
 608+ 9970
 609+ 9970 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9971 7C               ld a,h
 611+ 9972 E6 07            and 7
 612+ 9974 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9975
 614+ 9975 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9976 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9978 6F               ld l,a
 617+ 9979 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 997A
 619+ 997A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 997B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 997D 67               ld h,a
 622+ 997E C9               ret
 623+ 997F
 624+ 997F              ;----------------------------------------------------------------------------------------------------------------
 625+ 997F              ;
 626+ 997F              ;	5/08/22
 627+ 997F              ;
 628+ 997F              ;   PreviousScan.
 629+ 997F              ;
 630+ 997F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 997F              ;
 632+ 997F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 997F              ;
 634+ 997F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 997F              ;
 636+ 997F              ;       DESTRUIDOS: AF y HL !!!
 637+ 997F              ;
 638+ 997F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 997F              ;
 640+ 997F
 641+ 997F 7C           PreviousScan ld a,h
 642+ 9980 25               dec h               ; Dec H.
 643+ 9981 E6 07            and 7
 644+ 9983 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9984
 646+ 9984 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9985 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9987 6F               ld l,a
 649+ 9988 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9989
 651+ 9989 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 998A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 998C 67               ld h,a
 654+ 998D C9               ret
 655+ 998E
 656+ 998E
 657+ 998E
 658+ 998E
 659+ 998E
 660+ 998E
 661+ 998E
 662+ 998E
 663+ 998E
 664+ 998E
 665+ 998E
 666+ 998E
# file closed: Draw_XOR.asm
2267  998E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 998E
   2+ 998E              ; ******************************************************************************************************************************************************************************************
   3+ 998E              ;
   4+ 998E              ;   20/05/23
   5+ 998E              ;
   6+ 998E              ;	Recompone_posicion_inicio
   7+ 998E              ;
   8+ 998E              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 998E              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 998E              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 998E              ;	_ a una u otra rutina.
  12+ 998E
  13+ 998E              Recompone_posicion_inicio
  14+ 998E
  15+ 998E 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 9991 7D           	ld a,l
  17+ 9992 E6 1F        	and $1f
  18+ 9994 28 16        	jr z,1F
  19+ 9996
  20+ 9996 FE 1F        	cp $1f
  21+ 9998 28 0D        	jr z,3F
  22+ 999A
  23+ 999A 21 C7 8B     	ld hl,Ctrl_2
  24+ 999D CB C6        	set 0,(hl)
  25+ 999F 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 99A2 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 99A5 18 08        	jr 2F
  28+ 99A7
  29+ 99A7 CD 55 9B     3 call Mov_left
  30+ 99AA 18 03        	jr 2F
  31+ 99AC
  32+ 99AC CD 32 9A     1 call Mov_right
  33+ 99AF 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99B2 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99B5 C9           	ret
  36+ 99B6
  37+ 99B6              ; ******************************************************************************************************************************************************************************************
  38+ 99B6              ;
  39+ 99B6              ;   27/05/23
  40+ 99B6              ;
  41+ 99B6              ;	Mov_down
  42+ 99B6              ;
  43+ 99B6              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99B6              ;
  45+ 99B6              ;
  46+ 99B6              Mov_down
  47+ 99B6
  48+ 99B6 CD 20 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99B9              ;																	; _ repone (Puntero_objeto).
  50+ 99B9 21 C8 8B     	ld hl,Ctrl_0
  51+ 99BC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99BE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99BE              ; 																	; _ en el caso de que no lo haya.
  54+ 99BE 3A E3 8B     	ld a,(Vel_down)
  55+ 99C1 47           	ld b,a
  56+ 99C2 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99C5 CD 5C 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99C8 E6 02        	and 2
  59+ 99CA 28 17        	jr z,1F
  60+ 99CC
  61+ 99CC              ; Nos encontramos en el último tercio de pantalla.
  62+ 99CC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99CC
  64+ 99CC 7C           	ld a,h
  65+ 99CD FE 57        	cp $57
  66+ 99CF 20 12        	jr nz,1F
  67+ 99D1
  68+ 99D1 7D           	ld a,l
  69+ 99D2 C6 20        	add $20
  70+ 99D4 30 0D        	jr nc,1F
  71+ 99D6
  72+ 99D6              ; ------------------------------
  73+ 99D6              ;
  74+ 99D6              ;	12/01/24
  75+ 99D6
  76+ 99D6              ;	call Reaparece_arriba
  77+ 99D6 CD E2 9C     	call Reinicio
  78+ 99D9
  79+ 99D9              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99D9
  81+ 99D9 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 99DC CB CF        	set 1,a
  83+ 99DE 32 2E 8C     	ld (Ctrl_3),a
  84+ 99E1
  85+ 99E1 18 08        	jr 3F
  86+ 99E3              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99E3              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99E3              ; ------------------------------
  89+ 99E3
  90+ 99E3 CD 70 99     1 call NextScan
  91+ 99E6 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99E9 10 DA            djnz 2B
  93+ 99EB CD 7A 94     3 call Genera_coordenadas
  94+ 99EE C9           	ret
  95+ 99EF
  96+ 99EF              ; ******************************************************************************************************************************************************************************************
  97+ 99EF              ;
  98+ 99EF              ;   27/05/23
  99+ 99EF              ;
 100+ 99EF              ;	Mov_up
 101+ 99EF              ;
 102+ 99EF              ; 	Mueve el Sprite hacia arriba.
 103+ 99EF              ;
 104+ 99EF              ;
 105+ 99EF              Mov_up
 106+ 99EF
 107+ 99EF CD 20 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99F2              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99F2 21 C8 8B     	ld hl,Ctrl_0
 110+ 99F5 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99F7              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99F7              ; 																		; _ en el caso de que no lo haya.
 113+ 99F7 3A E2 8B     	ld a,(Vel_up)
 114+ 99FA 47           	ld b,a
 115+ 99FB 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 99FE CD 5C 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A01 A7           	and a
 118+ 9A02 20 10        	jr nz,1F
 119+ 9A04
 120+ 9A04              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A04              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A04
 123+ 9A04 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A05 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A07 20 0B            jr nz,1F
 126+ 9A09 7D               ld a,l
 127+ 9A0A D6 20            sub $20
 128+ 9A0C 30 06            jr nc,1F
 129+ 9A0E 25               dec h
 130+ 9A0F
 131+ 9A0F              ; -----------------------------
 132+ 9A0F CD C3 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A12              ;	call Reinicio
 134+ 9A12              ; -----------------------------
 135+ 9A12
 136+ 9A12 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A14 CD 7F 99     1 call PreviousScan
 138+ 9A17 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A1A 10 E2            djnz 3B
 140+ 9A1C CD 7A 94     2 call Genera_coordenadas
 141+ 9A1F C9           	ret
 142+ 9A20
 143+ 9A20              ; -----------------------------
 144+ 9A20              ;
 145+ 9A20              ;	27/5/23
 146+ 9A20              ;
 147+ 9A20              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A20              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A20              ;
 150+ 9A20              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A20              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A20              ;
 153+ 9A20              ;	Modifica: A y (Puntero_objeto).
 154+ 9A20
 155+ 9A20 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A23 CB 47        	bit 0,a
 157+ 9A25 C8           	ret z
 158+ 9A26 CB 87        	res 0,a
 159+ 9A28 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A2B 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A2E 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A31 C9           	ret
 163+ 9A32
 164+ 9A32              ; ******************************************************************************************************************************************************************************************
 165+ 9A32              ;
 166+ 9A32              ;	19/10/22
 167+ 9A32              ;
 168+ 9A32              ;	Mov_right.
 169+ 9A32              ;
 170+ 9A32              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A32              ;
 172+ 9A32
 173+ 9A32 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A35 CB 77        	bit 6,a
 175+ 9A37 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A39
 177+ 9A39 CD 71 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A3C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A3D
 180+ 9A3D 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A40 CB E6        	set 4,(hl)
 182+ 9A42 18 52        	jr 8F
 183+ 9A44
 184+ 9A44 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A47 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A49              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A49              ; 																	; _ en el caso de que no lo haya.
 188+ 9A49 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A4C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A4E 20 46        	jr nz,8F
 191+ 9A50
 192+ 9A50 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A53 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A54 28 40        	jr z,8F
 195+ 9A56
 196+ 9A56              ; ---------- ---------- ----------
 197+ 9A56              ;
 198+ 9A56              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A56
 200+ 9A56 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A59 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A5B 28 11        	jr z,1F
 203+ 9A5D 38 06        	jr c,6F
 204+ 9A5F FE 04        	cp 4
 205+ 9A61 28 14        	jr z,7F
 206+ 9A63 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A65
 208+ 9A65              ; ---------- ---------- ----------
 209+ 9A65              ;
 210+ 9A65              ; Perfiles de velocidad
 211+ 9A65              ;
 212+ 9A65
 213+ 9A65 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A68 FE FE        	cp $fe
 215+ 9A6A 20 2A        	jr nz,8F
 216+ 9A6C 18 10        	jr 3F
 217+ 9A6E 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A71 FE FD        	cp $fd
 219+ 9A73 20 21        	jr nz,8F
 220+ 9A75 18 07        	jr 3F
 221+ 9A77 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A7A FE FB        	cp $fb
 223+ 9A7C 20 18        	jr nz,8F
 224+ 9A7E
 225+ 9A7E              ; ---------- ---------- ----------
 226+ 9A7E
 227+ 9A7E              3
 228+ 9A7E CD B1 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A81              ;	call Reinicio
 230+ 9A81
 231+ 9A81              ; ---------- ---------- ----------
 232+ 9A81              ;
 233+ 9A81              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A81
 235+ 9A81 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A83 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A84 CD 9D 9A     	call DESPLZ_DER
 238+ 9A87 C1           	pop bc
 239+ 9A88 10 F9        	djnz 5B
 240+ 9A8A 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A8D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A8E 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9A91 CD 7A 94     	call Genera_coordenadas
 244+ 9A94 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A96
 246+ 9A96              ; ---------- ---------- ----------
 247+ 9A96
 248+ 9A96 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9A99 CD 9D 9A     	call DESPLZ_DER
 250+ 9A9C C9           2 ret
 251+ 9A9D
 252+ 9A9D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9A9D              ;
 254+ 9A9D              ;	22/9/22
 255+ 9A9D              ;
 256+ 9A9D
 257+ 9A9D CD AC 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AA0 CD F8 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9AA3 CD 21 9B         call Ciclo_completo
 260+ 9AA6 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AA9 CB FE        	set 7,(hl)
 262+ 9AAB C9           	ret
 263+ 9AAC
 264+ 9AAC              ; ******************************************************************************************************************************************************************************************
 265+ 9AAC              ;	15/02/23
 266+ 9AAC              ;
 267+ 9AAC
 268+ 9AAC 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AAF 47           	ld b,a
 270+ 9AB0 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AB3 23           1 inc hl
 272+ 9AB4 23           	inc hl
 273+ 9AB5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AB7 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9ABA CD 5B 90     	call Extrae_address
 276+ 9ABD 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9AC0
 278+ 9AC0              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AC0
 280+ 9AC0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AC0              ; Cuántos movimientos hemos hecho ??
 282+ 9AC0              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AC0
 284+ 9AC0 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9AC3 EB           	ex de,hl
 286+ 9AC4 A7           	and a
 287+ 9AC5 ED 52        	sbc hl,de
 288+ 9AC7 CB 3D        	srl l
 289+ 9AC9 3E 08        6 ld a,8
 290+ 9ACB 95           	sub l
 291+ 9ACC 30 1E        	jr nc,3F
 292+ 9ACE
 293+ 9ACE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9ACE              ; B="0".
 295+ 9ACE
 296+ 9ACE 04           4 inc b
 297+ 9ACF 3C           	inc a
 298+ 9AD0 20 FC        	jr nz,4B
 299+ 9AD2 78           	ld a,b
 300+ 9AD3 08           	ex af,af
 301+ 9AD4 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AD7 23           5 inc hl
 303+ 9AD8 23           	inc hl
 304+ 9AD9 10 FC        	djnz 5B
 305+ 9ADB 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9ADE CD 5B 90     	call Extrae_address
 307+ 9AE1 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9AE4
 309+ 9AE4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AE4              ; _(Posicion_actual).
 311+ 9AE4
 312+ 9AE4 21 CB 8B     	ld hl,Posicion_actual
 313+ 9AE7 34           	inc (hl)
 314+ 9AE8 08               ex af,af
 315+ 9AE9 6F           	ld l,a
 316+ 9AEA 18 DD        	jr 6B
 317+ 9AEC
 318+ 9AEC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AEC
 320+ 9AEC 47           3 ld b,a
 321+ 9AED 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9AF0 23           2 inc hl
 323+ 9AF1 23           	inc hl
 324+ 9AF2 10 FC        	djnz 2B
 325+ 9AF4 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9AF7 C9           8 ret
 327+ 9AF8
 328+ 9AF8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9AF8              ;
 330+ 9AF8              ;	24/7/22
 331+ 9AF8              ;
 332+ 9AF8              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9AF8              ;
 334+ 9AF8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9AF8              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9AF8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9AF8
 338+ 9AF8 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9AFB A7           	and a
 340+ 9AFC 20 1F        	jr nz,1F
 341+ 9AFE D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B00 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9B03
 344+ 9B03 21 CA 8B     	ld hl,Columns
 345+ 9B06 34           	inc (hl)
 346+ 9B07 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9B0A E6 01        	and 1
 348+ 9B0C 28 0F        	jr z,1F
 349+ 9B0E 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B11 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B12 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B15 CD 7A 94     	call Genera_coordenadas
 353+ 9B18 CD 7D 9C     	call Inc_CTRL_DESPLZ
 354+ 9B1B 18 03        	jr 2F
 355+ 9B1D CD 7D 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B20 C9           2 ret
 357+ 9B21
 358+ 9B21              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B21              ;
 360+ 9B21              ;	24/7/22
 361+ 9B21              ;
 362+ 9B21              ;	Ciclo_completo.
 363+ 9B21              ;
 364+ 9B21              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B21              ;
 366+ 9B21              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B21              ; 	Decrementamos (Columns).
 368+ 9B21              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B21              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B21
 371+ 9B21
 372+ 9B21 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B24 FE FF        	cp $ff
 374+ 9B26 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B28 E6 F0        	and $f0
 376+ 9B2A 20 28        	jr nz,3F
 377+ 9B2C
 378+ 9B2C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B2C
 380+ 9B2C 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B2F 47           	ld b,a
 382+ 9B30 3E F8        	ld a,$f8
 383+ 9B32 80           	add b
 384+ 9B33 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B36 18 1C        	jr 3F
 386+ 9B38 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B3B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B3C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B3D 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B40 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B43 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B45 20 0A        	jr nz,2F
 393+ 9B47 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B4A 23           	inc hl
 395+ 9B4B 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B4E CD 7A 94     	call Genera_coordenadas
 397+ 9B51
 398+ 9B51              ; Inicia el puntero de Sprite.
 399+ 9B51
 400+ 9B51 CD 70 90     2 call Inicia_puntero_objeto_der
 401+ 9B54 C9           3 ret
 402+ 9B55
 403+ 9B55              ; ******************************************************************************************************************************************************************************************
 404+ 9B55              ;
 405+ 9B55              ;	15/02/23
 406+ 9B55              ;
 407+ 9B55              ;	Mov_left.
 408+ 9B55              ;
 409+ 9B55              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B55              ;
 411+ 9B55              Mov_left
 412+ 9B55
 413+ 9B55 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B58 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B5A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B5A              ; 																	; _ en el caso de que no lo haya.
 417+ 9B5A 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B5D CB 77        	bit 6,a
 419+ 9B5F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B61
 421+ 9B61 CD 77 9C     	call Stop_Amadeus_left
 422+ 9B64 C8           	ret z
 423+ 9B65 20 4A        	jr nz,8F
 424+ 9B67
 425+ 9B67 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B6A A7           	and a
 427+ 9B6B 20 44        	jr nz,8F
 428+ 9B6D
 429+ 9B6D 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B70 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B71 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B73
 433+ 9B73              ; ---------- ---------- ----------
 434+ 9B73
 435+ 9B73 3A E0 8B     	ld a,(Vel_left)
 436+ 9B76 FE 02        	cp 2
 437+ 9B78 28 0F        	jr z,1F
 438+ 9B7A 38 04        	jr c,6F
 439+ 9B7C FE 04        	cp 4
 440+ 9B7E 28 12        	jr z,7F
 441+ 9B80
 442+ 9B80              ; ---------- ---------- ----------
 443+ 9B80
 444+ 9B80 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B83 FE F8        	cp $f8
 446+ 9B85 20 2A        	jr nz,8F
 447+ 9B87 18 10        	jr 4F
 448+ 9B89 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B8C FE F9        	cp $f9
 450+ 9B8E 20 21        	jr nz,8F
 451+ 9B90 18 07        	jr 4F
 452+ 9B92 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9B95 FE FB        	cp $fb
 454+ 9B97 20 18        	jr nz,8F
 455+ 9B99
 456+ 9B99              ; ---------- ---------- ----------
 457+ 9B99
 458+ 9B99              4
 459+ 9B99 CD 9F 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9B9C              ;	call Reinicio
 461+ 9B9C
 462+ 9B9C              ; ---------- ---------- ----------
 463+ 9B9C
 464+ 9B9C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9B9E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9B9F
 467+ 9B9F              ;	ld hl,(Indice_Sprite_izq)
 468+ 9B9F              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9B9F
 470+ 9B9F CD B8 9B     	call DESPLZ_IZQ
 471+ 9BA2 C1           	pop bc
 472+ 9BA3 10 F9        	djnz 5B
 473+ 9BA5 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BA8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BA9 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9BAC CD 7A 94     	call Genera_coordenadas
 477+ 9BAF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BB1
 479+ 9BB1              ; ---------- ---------- ----------
 480+ 9BB1
 481+ 9BB1              ; Movemos, no hay recolocación.
 482+ 9BB1
 483+ 9BB1 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BB4 CD B8 9B     	call DESPLZ_IZQ
 485+ 9BB7 C9           2 ret
 486+ 9BB8
 487+ 9BB8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BB8              ;
 489+ 9BB8              ;	22/9/22
 490+ 9BB8
 491+ 9BB8              DESPLZ_IZQ
 492+ 9BB8
 493+ 9BB8 CD C7 9B     	call Desplaza_izquierda
 494+ 9BBB CD 13 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BBE CD 3B 9C     	call Ciclo_completo_2
 496+ 9BC1 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BC4 CB BE        	res 7,(hl)
 498+ 9BC6 C9           	ret
 499+ 9BC7
 500+ 9BC7              Desplaza_izquierda
 501+ 9BC7
 502+ 9BC7 3A E0 8B     	ld a,(Vel_left)
 503+ 9BCA 47           	ld b,a
 504+ 9BCB 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BCE 23           1 inc hl
 506+ 9BCF 23           	inc hl
 507+ 9BD0 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BD2 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BD5 CD 5B 90     	call Extrae_address
 510+ 9BD8 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BDB
 512+ 9BDB              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BDB
 514+ 9BDB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BDB              ; Cuántos movimientos hemos hecho ??
 516+ 9BDB              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BDB
 518+ 9BDB 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BDE EB           	ex de,hl
 520+ 9BDF A7           	and a
 521+ 9BE0 ED 52        	sbc hl,de
 522+ 9BE2 CB 3D        	srl l
 523+ 9BE4 3E 08        6 ld a,8
 524+ 9BE6 95           	sub l
 525+ 9BE7 30 1E        	jr nc,3F
 526+ 9BE9
 527+ 9BE9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BE9              ; B="0".
 529+ 9BE9
 530+ 9BE9 04           4 inc b
 531+ 9BEA 3C           	inc a
 532+ 9BEB 20 FC        	jr nz,4B
 533+ 9BED 78           	ld a,b
 534+ 9BEE 08           	ex af,af
 535+ 9BEF 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9BF2 23           5 inc hl
 537+ 9BF3 23           	inc hl
 538+ 9BF4 10 FC        	djnz 5B
 539+ 9BF6 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BF9 CD 5B 90     	call Extrae_address
 541+ 9BFC 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9BFF
 543+ 9BFF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9BFF              ; _(Posicion_actual).
 545+ 9BFF
 546+ 9BFF 21 CB 8B     	ld hl,Posicion_actual
 547+ 9C02 35           	dec (hl)
 548+ 9C03 08           	ex af,af
 549+ 9C04 6F           	ld l,a
 550+ 9C05 18 DD        	jr 6B
 551+ 9C07
 552+ 9C07              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C07
 554+ 9C07 47           3 ld b,a
 555+ 9C08 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C0B 23           2 inc hl
 557+ 9C0C 23           	inc hl
 558+ 9C0D 10 FC        	djnz 2B
 559+ 9C0F 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C12 C9           8 ret
 561+ 9C13
 562+ 9C13              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C13              ;
 564+ 9C13              ;	modifica_parametros_1er_DESPLZ
 565+ 9C13              ;
 566+ 9C13              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C13              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C13              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C13
 570+ 9C13 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C16 A7           	and a
 572+ 9C17 20 1E        	jr nz,1F
 573+ 9C19 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C1A 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C1D 21 CA 8B     	ld hl,Columns
 576+ 9C20 34           	inc (hl)
 577+ 9C21 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C24 E6 01        	and 1
 579+ 9C26 20 0F        	jr nz,1F
 580+ 9C28 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C2B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C2C 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C2F CD 7A 94     	call Genera_coordenadas
 584+ 9C32 CD 8E 9C     	call Dec_CTRL_DESPLZ
 585+ 9C35 18 03        	jr 2F
 586+ 9C37 CD 8E 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C3A C9           2 ret
 588+ 9C3B
 589+ 9C3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C3B
 591+ 9C3B 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C3E FE F7        	cp $f7
 593+ 9C40 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C42 30 2C        	jr nc,3F
 595+ 9C44
 596+ 9C44              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C44
 598+ 9C44 06 00        	ld b,0
 599+ 9C46 04           4 inc b
 600+ 9C47 3C           	inc a
 601+ 9C48 FE F7        	cp $f7
 602+ 9C4A 20 FA        	jr nz,4B
 603+ 9C4C 3E FF        	ld a,$ff
 604+ 9C4E 90           	sub b
 605+ 9C4F 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C52 18 1C        	jr 3F
 607+ 9C54
 608+ 9C54              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C54
 610+ 9C54 21 CA 8B     1 ld hl,Columns
 611+ 9C57 35           	dec (hl)
 612+ 9C58 AF           	xor a
 613+ 9C59 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C5C 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C5F E6 01        	and 1
 616+ 9C61 28 0A        	jr z,2F
 617+ 9C63 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C66 2B           	dec hl
 619+ 9C67 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C6A CD 7A 94     	call Genera_coordenadas
 621+ 9C6D
 622+ 9C6D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C6D
 624+ 9C6D CD 83 90     2 call Inicia_puntero_objeto_izq
 625+ 9C70 C9           3 ret
 626+ 9C71
 627+ 9C71              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C71              ;
 629+ 9C71              ;	19/10/22
 630+ 9C71              ;
 631+ 9C71              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C71              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C71
 634+ 9C71 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C74 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C76 C9           	ret
 637+ 9C77
 638+ 9C77              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C77              ;
 640+ 9C77              ;	19/10/22
 641+ 9C77              ;
 642+ 9C77              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C77              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C77
 645+ 9C77 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C7A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C7C C9           	ret
 648+ 9C7D
 649+ 9C7D              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C7D              ;
 651+ 9C7D              ;	24/7/22
 652+ 9C7D              ;
 653+ 9C7D              ;	Inc_CTRL_DESPLZ
 654+ 9C7D              ;
 655+ 9C7D              ;
 656+ 9C7D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C7D
 658+ 9C7D 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C80 3A E1 8B     	ld a,(Vel_right)
 660+ 9C83 A7           	and a
 661+ 9C84 28 06        	jr z,1F
 662+ 9C86 47           	ld b,a
 663+ 9C87 34           3 inc (hl)
 664+ 9C88 10 FD        	djnz 3B
 665+ 9C8A 18 01        	jr 2F
 666+ 9C8C 34           1 inc (hl)
 667+ 9C8D C9           2 ret
 668+ 9C8E
 669+ 9C8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C8E              ;
 671+ 9C8E              ;	5/2/23
 672+ 9C8E              ;
 673+ 9C8E              ;	Dec_CTRL_DESPLZ
 674+ 9C8E              ;
 675+ 9C8E              ;
 676+ 9C8E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C8E
 678+ 9C8E 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C91 3A E0 8B     	ld a,(Vel_left)
 680+ 9C94 A7           	and a
 681+ 9C95 28 06        	jr z,1F
 682+ 9C97 47           	ld b,a
 683+ 9C98 35           3 dec (hl)
 684+ 9C99 10 FD        	djnz 3B
 685+ 9C9B 18 01        	jr 2F
 686+ 9C9D 35           1 dec (hl)
 687+ 9C9E C9           2 ret
 688+ 9C9F
 689+ 9C9F              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9C9F
 691+ 9C9F 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CA2 01 1F 00     	ld bc,31
 693+ 9CA5 A7           	and a
 694+ 9CA6 ED 4A        	adc hl,bc
 695+ 9CA8 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9CAB 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CAE CB C6        	set 0,(hl)
 698+ 9CB0 C9           	ret
 699+ 9CB1
 700+ 9CB1              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CB1
 702+ 9CB1 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CB4 01 1F 00     	ld bc,31
 704+ 9CB7 A7           	and a
 705+ 9CB8 ED 42        	sbc hl,bc
 706+ 9CBA 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CBD 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CC0 CB CE        	set 1,(hl)
 709+ 9CC2 C9           	ret
 710+ 9CC3
 711+ 9CC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CC3
 713+ 9CC3 24           Reaparece_abajo inc h
 714+ 9CC4 01 E0 17     	ld bc,$17e0
 715+ 9CC7 A7           	and a
 716+ 9CC8 ED 4A        	adc hl,bc
 717+ 9CCA 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CCD 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CD0 CB D6        	set 2,(hl)
 720+ 9CD2 C9           	ret
 721+ 9CD3
 722+ 9CD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CD3
 724+ 9CD3 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CD6 A7           	and a
 726+ 9CD7 ED 42        	sbc hl,bc
 727+ 9CD9 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CDC 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CDF CB DE        	set 3,(hl)
 730+ 9CE1 C9           	ret
 731+ 9CE2
 732+ 9CE2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CE2              ;
 734+ 9CE2              ;	15/07/23
 735+ 9CE2
 736+ 9CE2              Reinicio
 737+ 9CE2
 738+ 9CE2              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CE2
 740+ 9CE2 AF           	xor a
 741+ 9CE3 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CE6 CD 04 9D     	call Limpia_contenido_hl
 743+ 9CE9
 744+ 9CE9 21 CB 8B     	ld hl,Posicion_actual
 745+ 9CEC CD 04 9D     	call Limpia_contenido_hl
 746+ 9CEF
 747+ 9CEF CD 5C 92     	call Inicializa_Puntero_indice_mov
 748+ 9CF2 CD 03 9E     	call Inicia_Puntero_mov
 749+ 9CF5
 750+ 9CF5 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9CF8 06 05        	ld b,5
 752+ 9CFA 77           1 ld (hl),a
 753+ 9CFB 23           	inc hl
 754+ 9CFC 10 FC        	djnz 1B
 755+ 9CFE
 756+ 9CFE 21 C7 8B     	ld hl,Ctrl_2
 757+ 9D01 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D03
 759+ 9D03 C9           	ret
 760+ 9D04
 761+ 9D04 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D05 23           	inc hl
 763+ 9D06 77           	ld (hl),a
 764+ 9D07 C9           	ret
 765+ 9D08
 766+ 9D08              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D08              ;
 768+ 9D08              ;	18/6/24
 769+ 9D08              ;
 770+ 9D08
 771+ 9D08              Amadeus_a_izquierda
 772+ 9D08
 773+ 9D08              ;	Actualiza contador de movimientos.
 774+ 9D08
 775+ 9D08 21 79 89     	ld hl,Comm_Amadeus
 776+ 9D0B 35           	dec (hl)
 777+ 9D0C 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D0E
 779+ 9D0E 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D11 2B           	dec hl
 781+ 9D12 2B           	dec hl
 782+ 9D13 2B           	dec hl
 783+ 9D14 2B           	dec hl
 784+ 9D15 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D18
 786+ 9D18 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D1B CB EE        	set 5,(hl)
 788+ 9D1D
 789+ 9D1D C9           	ret
 790+ 9D1E
 791+ 9D1E 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D1F C9           	ret
 793+ 9D20
 794+ 9D20
 795+ 9D20              Amadeus_a_derecha
 796+ 9D20
 797+ 9D20              ;	Actualiza contador de movimientos.
 798+ 9D20
 799+ 9D20 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D23 34           	inc (hl)
 801+ 9D24 3E 7A        	ld a,$7a
 802+ 9D26 BE           	cp (hl)
 803+ 9D27 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D29
 805+ 9D29 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D2C 23           	inc hl
 807+ 9D2D 23           	inc hl
 808+ 9D2E 23           	inc hl
 809+ 9D2F 23           	inc hl
 810+ 9D30 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D33
 812+ 9D33 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D36 CB EE        	set 5,(hl)
 814+ 9D38 C9           	ret
 815+ 9D39
 816+ 9D39 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D3A C9           	ret
# file closed: Direcciones.asm
2268  9D3B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D3B              ; ----- ----- ----- ----- -----
   2+ 9D3B              ;
   3+ 9D3B              ;   28/12/23
   4+ 9D3B
   5+ 9D3B              Movimiento
   6+ 9D3B
   7+ 9D3B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D3B
   9+ 9D3B 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D3E CB 57            bit 2,a
  11+ 9D40 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D42
  13+ 9D42 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D45 7E               ld a,(hl)
  15+ 9D46
  16+ 9D46              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D46
  18+ 9D46              Inicia_desplazamiento.
  19+ 9D46
  20+ 9D46              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D46
  22+ 9D46 CD 39 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D49
  24+ 9D49              ; Iniciamos (Repetimos_mov).
  25+ 9D49
  26+ 9D49 7E               ld a,(hl)
  27+ 9D4A E6 0F            and $0f
  28+ 9D4C 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D4F 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D52
  31+ 9D52              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D52
  33+ 9D52 23               inc hl
  34+ 9D53 7E               ld a,(hl)
  35+ 9D54 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D57 2B               dec hl
  37+ 9D58
  38+ 9D58 21 C7 8B         ld hl,Ctrl_2
  39+ 9D5B CB D6            set 2,(hl)
  40+ 9D5D
  41+ 9D5D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D5D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D5D
  44+ 9D5D              Desplazamiento_iniciado
  45+ 9D5D
  46+ 9D5D CD 0D 9E         call Aplica_desplazamiento
  47+ 9D60
  48+ 9D60              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D60
  50+ 9D60 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9D63 CB 4F            bit 1,a
  52+ 9D65 C0               ret nz
  53+ 9D66
  54+ 9D66 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D69 35               dec (hl)
  56+ 9D6A C0               ret nz
  57+ 9D6B
  58+ 9D6B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D6B              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D6B              ; Analiza (Cola_de_desplazamiento).
  61+ 9D6B
  62+ 9D6B 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D6E A7               and a
  64+ 9D6F CC 62 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D72 28 30            jr z,Reinicia_el_movimiento
  66+ 9D74
  67+ 9D74 FE FF            cp $ff
  68+ 9D76 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D78
  70+ 9D78 FE FE            cp $fe
  71+ 9D7A CC E7 9D         call z,Fijamos_bucle
  72+ 9D7D 28 25            jr z,Reinicia_el_movimiento
  73+ 9D7F
  74+ 9D7F FE FD            cp $fd
  75+ 9D81 20 11            jr nz,1F
  76+ 9D83
  77+ 9D83              ; ---
  78+ 9D83              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D83
  80+ 9D83 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D86 CB 5F            bit 3,a
  82+ 9D88 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D8A
  84+ 9D8A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D8A
  86+ 9D8A 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D8D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D8F
  89+ 9D8F CD F8 9D         call Inicia_Repetimos_movimiento
  90+ 9D92 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D94              ; ---
  92+ 9D94
  93+ 9D94 FE 01        1 cp 1
  94+ 9D96 CA D1 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D99
  96+ 9D99 3D               dec a
  97+ 9D9A 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9D9D
  99+ 9D9D 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DA0 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DA3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DA3 C9               ret
 103+ 9DA4
 104+ 9DA4              Reinicia_el_movimiento
 105+ 9DA4
 106+ 9DA4 3A C7 8B         ld a,(Ctrl_2)
 107+ 9DA7 CB 5F            bit 3,a
 108+ 9DA9 28 1B            jr z,2F
 109+ 9DAB
 110+ 9DAB              ; (Cola_de_desplazamiento)="254".
 111+ 9DAB
 112+ 9DAB 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DAE 35               dec (hl)
 114+ 9DAF 20 15            jr nz,2F
 115+ 9DB1
 116+ 9DB1              ; Fin de las repeticiones del último movimiento.
 117+ 9DB1
 118+ 9DB1 21 C7 8B         ld hl,Ctrl_2
 119+ 9DB4 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DB6
 121+ 9DB6 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DB9 23               inc hl
 123+ 9DBA 23               inc hl
 124+ 9DBB 23               inc hl
 125+ 9DBC 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DBF              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DBF 7E               ld a,(hl)
 128+ 9DC0 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DC3
 130+ 9DC3 C3 6B 9D         jp Cola
 131+ 9DC6
 132+ 9DC6 CD 03 9E     2 call Inicia_Puntero_mov
 133+ 9DC9
 134+ 9DC9 21 C7 8B         ld hl,Ctrl_2
 135+ 9DCC CB 96            res 2,(hl)
 136+ 9DCE
 137+ 9DCE C3 3B 9D         jp Movimiento
 138+ 9DD1
 139+ 9DD1              Siguiente_desplazamiento
 140+ 9DD1
 141+ 9DD1              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DD1              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DD1
 144+ 9DD1 21 C7 8B         ld hl,Ctrl_2
 145+ 9DD4 CB 96            res 2,(hl)
 146+ 9DD6
 147+ 9DD6 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DD9 23               inc hl
 149+ 9DDA 23               inc hl
 150+ 9DDB 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DDE
 152+ 9DDE 7E               ld a,(hl)
 153+ 9DDF A7               and a
 154+ 9DE0 CC 62 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DE3 CA A4 9D         jp z,Reinicia_el_movimiento
 156+ 9DE6
 157+ 9DE6 C9               ret
 158+ 9DE7
 159+ 9DE7              ; Subrutinas -----------------------------------------
 160+ 9DE7              ; ---------- --------- --------- ---------- ----------
 161+ 9DE7              ;
 162+ 9DE7              ;   24/07/23
 163+ 9DE7              ;
 164+ 9DE7              ;   Fijamos_bucle
 165+ 9DE7              ;
 166+ 9DE7              ;
 167+ 9DE7
 168+ 9DE7              Fijamos_bucle
 169+ 9DE7
 170+ 9DE7 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9DEA 3C               inc a
 172+ 9DEB 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9DEE
 174+ 9DEE CD 62 9E         call Incrementa_Puntero_indice_mov
 175+ 9DF1 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9DF4 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9DF7 C9               ret
 178+ 9DF8
 179+ 9DF8              ; ---------- --------- --------- ---------- ----------
 180+ 9DF8              ;
 181+ 9DF8              ;   07/7/23
 182+ 9DF8              ;
 183+ 9DF8              ;   Inicia_Repetimos_movimiento
 184+ 9DF8              ;
 185+ 9DF8              ;
 186+ 9DF8
 187+ 9DF8              Inicia_Repetimos_movimiento
 188+ 9DF8
 189+ 9DF8              ; Iniciamos (Repetimos_movimiento).
 190+ 9DF8
 191+ 9DF8 DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9DFC DD 7E 02         ld a,(ix+2)
 193+ 9DFF 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9E02
 195+ 9E02 C9               ret
 196+ 9E03
 197+ 9E03              ; ---------- --------- --------- ---------- ----------
 198+ 9E03              ;
 199+ 9E03              ;   26/6/23
 200+ 9E03              ;
 201+ 9E03              ;   Inicia_Puntero_mov
 202+ 9E03              ;
 203+ 9E03              ;
 204+ 9E03
 205+ 9E03 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E06 CD 5B 90         call Extrae_address
 207+ 9E09 22 EE 8B         ld (Puntero_mov),hl
 208+ 9E0C C9               ret
 209+ 9E0D
 210+ 9E0D              ; ---------- --------- --------- ---------- ----------
 211+ 9E0D              ;
 212+ 9E0D              ;   27/06/23
 213+ 9E0D              ;
 214+ 9E0D              ;   Aplica_movimiento.
 215+ 9E0D
 216+ 9E0D              Aplica_desplazamiento
 217+ 9E0D
 218+ 9E0D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E0D
 220+ 9E0D 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9E10
 222+ 9E10 7E               ld a,(hl)
 223+ 9E11 E6 F0            and $f0
 224+ 9E13 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E14
 226+ 9E14 CB 7E            bit 7,(hl)
 227+ 9E16 28 03            jr z,1F
 228+ 9E18 CD EF 99         call Mov_up
 229+ 9E1B 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E1E CB 76            bit 6,(hl)
 231+ 9E20 28 03            jr z,2F
 232+ 9E22 CD B6 99         call Mov_down
 233+ 9E25
 234+ 9E25              ; Se ha aplicado reinicio ???
 235+ 9E25              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E25
 237+ 9E25              ;    ld a,(Ctrl_3)
 238+ 9E25              ;    bit 1,a
 239+ 9E25              ;    ret nz
 240+ 9E25
 241+ 9E25 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E28 CB 6E            bit 5,(hl)
 243+ 9E2A 28 03            jr z,3F
 244+ 9E2C CD 55 9B         call Mov_left
 245+ 9E2F 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E32 CB 66            bit 4,(hl)
 247+ 9E34 C8               ret z
 248+ 9E35 CD 32 9A         call Mov_right
 249+ 9E38 C9               ret
 250+ 9E39
 251+ 9E39              ; ---------- --------- --------- ---------- ----------
 252+ 9E39              ;
 253+ 9E39              ;   26/06/23
 254+ 9E39              ;
 255+ 9E39              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E39
 257+ 9E39              Ajusta_velocidad_desplazamiento
 258+ 9E39
 259+ 9E39              ; 1er byte de la cadena de movimiento.
 260+ 9E39              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E39
 262+ 9E39 CD 57 9E         call Extrae_nibble_alto
 263+ 9E3C
 264+ 9E3C 32 E2 8B         ld (Vel_up),a
 265+ 9E3F 79               ld a,c
 266+ 9E40 E6 0F            and $0f
 267+ 9E42 32 E3 8B         ld (Vel_down),a
 268+ 9E45
 269+ 9E45              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E45              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E45
 272+ 9E45 23               inc hl
 273+ 9E46 CD 57 9E         call Extrae_nibble_alto
 274+ 9E49
 275+ 9E49 32 E0 8B         ld (Vel_left),a
 276+ 9E4C 79               ld a,c
 277+ 9E4D E6 0F            and $0f
 278+ 9E4F 32 E1 8B         ld (Vel_right),a
 279+ 9E52
 280+ 9E52              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E52
 282+ 9E52 23               inc hl
 283+ 9E53 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E56 C9               ret
 285+ 9E57
 286+ 9E57 06 04        Extrae_nibble_alto ld b,4
 287+ 9E59 7E               ld a,(hl)
 288+ 9E5A 4F               ld c,a
 289+ 9E5B E6 F0            and $f0
 290+ 9E5D CB 3F        1 srl a
 291+ 9E5F 10 FC            djnz 1B
 292+ 9E61 C9               ret
 293+ 9E62
 294+ 9E62              ; ---------- --------- --------- ---------- ----------
 295+ 9E62              ;
 296+ 9E62              ;   5/7/23
 297+ 9E62              ;
 298+ 9E62              ;   Incrementa_Puntero_indice_mov
 299+ 9E62
 300+ 9E62              Incrementa_Puntero_indice_mov
 301+ 9E62
 302+ 9E62 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E65 34               inc (hl)
 304+ 9E66
 305+ 9E66 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E69 01 02 00         ld bc,2
 307+ 9E6C A7               and a
 308+ 9E6D 09               add hl,bc
 309+ 9E6E 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E71
 311+ 9E71 7E               ld a,(hl)
 312+ 9E72 A7               and a
 313+ 9E73
 314+ 9E73              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E73
 316+ 9E73              ;    jr z,$
 317+ 9E73
 318+ 9E73              ;! Reinicia el Patrón de movimiento.
 319+ 9E73
 320+ 9E73 CC 78 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E76
 322+ 9E76 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E77
 324+ 9E77 C9               ret
 325+ 9E78
 326+ 9E78              ; ---------- --------- --------- ---------- ----------
 327+ 9E78              ;
 328+ 9E78              ;   15/01/24
 329+ 9E78              ;
 330+ 9E78              ;   Inicializa_Puntero_indice_mov
 331+ 9E78
 332+ 9E78              Inicializa_Puntero_indice_mov_2
 333+ 9E78
 334+ 9E78              ; Existe etiqueta de bucle principal???
 335+ 9E78
 336+ 9E78 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E7B 24               inc h
 338+ 9E7C 25               dec h
 339+ 9E7D 28 05            jr z,2F
 340+ 9E7F
 341+ 9E7F 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E82 18 14            jr 3F
 343+ 9E84
 344+ 9E84              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E84
 346+ 9E84 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E87 47               ld b,a
 348+ 9E88
 349+ 9E88 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9E8B 2B           1 dec hl
 351+ 9E8C 2B               dec hl
 352+ 9E8D 10 FC            djnz 1B
 353+ 9E8F 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9E92
 355+ 9E92 AF               xor a
 356+ 9E93 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9E96 18 06            jr 4F
 358+ 9E98
 359+ 9E98 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9E9B 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9E9E C9           4 ret
 362+ 9E9F
 363+ 9E9F              ; ----------------------------------------------------------------------
 364+ 9E9F              ;
 365+ 9E9F              ;   30/01/24
 366+ 9E9F              ;
 367+ 9E9F              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9E9F
 369+ 9E9F 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EA2 CD F7 93         call Calcula_salto_en_BC
 371+ 9EA5 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EA8 A7               and a
 373+ 9EA9 ED 4A            adc hl,bc
 374+ 9EAB C9               ret
 375+ 9EAC
 376+ 9EAC              ; ----------------------------------------------------------------------
 377+ 9EAC              ;
 378+ 9EAC              ;   30/01/24
 379+ 9EAC              ;
 380+ 9EAC              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EAC              ;
 382+ 9EAC              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EAC
 384+ 9EAC 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EAD 23               inc hl
 386+ 9EAE 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EAF 69               ld l,c
 388+ 9EB0 60               ld h,b
 389+ 9EB1 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9EB4 C9               ret
 391+ 9EB5
# file closed: Movimiento.asm
2269  9EB5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EB5              ; --------------------------------------------------------------------------------------
   2+ 9EB5              ;
   3+ 9EB5              ;   23/08/24
   4+ 9EB5              ;
   5+ 9EB5
   6+ 9EB5              Limpia_album_de_pintado_disparos
   7+ 9EB5
   8+ 9EB5              ;   Exclusiones.
   9+ 9EB5
  10+ 9EB5 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  11+ 9EB8 A7               and a
  12+ 9EB9 C8               ret z                                                               ; Salimos si no hay ningún disparo generado.
  13+ 9EBA
  14+ 9EBA 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
  15+ 9EBD A7               and a
  16+ 9EBE C8               ret z
  17+ 9EBF
  18+ 9EBF              ; ----- ----- -----
  19+ 9EBF
  20+ 9EBF AF               xor a
  21+ 9EC0
  22+ 9EC0 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
  23+ 9EC3 47               ld b,a
  24+ 9EC4 3A 1A 8C         ld a,(Num_de_bytes_album_de_disparos)
  25+ 9EC7
  26+ 9EC7 38 01            jr c,2F
  27+ 9EC9
  28+ 9EC9 C9               ret
  29+ 9ECA
  30+ 9ECA F3           2 di
  31+ 9ECB 18 FE            jr $
  32+ 9ECD FB               ei
  33+ 9ECE
  34+ 9ECE
  35+ 9ECE 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
  36+ 9ED1 47               ld b,a                                                              ; Nº de bytes a borrar en B.
  37+ 9ED2 AF               xor a                                                               ; "0".
  38+ 9ED3
  39+ 9ED3 77           1 ld (hl),a
  40+ 9ED4 2C               inc l
  41+ 9ED5 10 FC            djnz 1B
  42+ 9ED7
  43+ 9ED7 C9               ret
  44+ 9ED8
  45+ 9ED8              ; --------------------------------------------------------------------------------------
  46+ 9ED8              ;
  47+ 9ED8              ;   22/08/24
  48+ 9ED8              ;
  49+ 9ED8
  50+ 9ED8              Mueve_Disparos
  51+ 9ED8
  52+ 9ED8              ;    Exclusiones:
  53+ 9ED8
  54+ 9ED8 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  55+ 9EDB A7               and a
  56+ 9EDC 28 16            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
  57+ 9EDE
  58+ 9EDE              ; .........................
  59+ 9EDE
  60+ 9EDE              ; Nos situamos en el puntero_de_impresión de la caja.
  61+ 9EDE
  62+ 9EDE 21 26 89         ld hl,Disparo_1A+3
  63+ 9EE1 34               inc (hl)
  64+ 9EE2 35               dec (hl)
  65+ 9EE3 28 04            jr z,1F
  66+ 9EE5
  67+ 9EE5 2B               dec hl
  68+ 9EE6 CD 10 9F         call Mueve_disparo_Amadeus
  69+ 9EE9
  70+ 9EE9 21 2B 89     1 ld hl,Disparo_2A+3
  71+ 9EEC 34               inc (hl)
  72+ 9EED 35               dec (hl)
  73+ 9EEE 28 04            jr z,2F
  74+ 9EF0
  75+ 9EF0 2B               dec hl
  76+ 9EF1 CD 10 9F         call Mueve_disparo_Amadeus
  77+ 9EF4
  78+ 9EF4              ; Disparos de entidades.
  79+ 9EF4
  80+ 9EF4 3A 1D 8C     2 ld a,(Numero_de_disparos_de_entidades)
  81+ 9EF7 A7               and a
  82+ 9EF8 C8               ret z
  83+ 9EF9
  84+ 9EF9 06 07            ld b,7                                                               ; Contador de disparos.
  85+ 9EFB 21 2D 89         ld hl,Indice_de_disparos_entidades
  86+ 9EFE
  87+ 9EFE CD 5B 90     4 call Extrae_address
  88+ 9F01 13               inc de
  89+ 9F02 13               inc de
  90+ 9F03 ED 53 1F 8C      ld (Puntero_rancio_disparos_album),de
  91+ 9F07
  92+ 9F07 23               inc hl
  93+ 9F08
  94+ 9F08 34               inc (hl)                                                           ; Dispone de Puntero_objeto ???
  95+ 9F09 35               dec (hl)
  96+ 9F0A 28 00            jr z,3F
  97+ 9F0C
  98+ 9F0C EB           3 ex de,hl
  99+ 9F0D 10 EF            djnz 4B
 100+ 9F0F
 101+ 9F0F C9               ret
 102+ 9F10
 103+ 9F10              ; ----------------------
 104+ 9F10              ;
 105+ 9F10              ;
 106+ 9F10
 107+ 9F10              Mueve_disparo_Amadeus
 108+ 9F10
 109+ 9F10 CD 5B 90         call Extrae_address                                               ; Puntero_de_impresión del disparo en HL.
 110+ 9F13
 111+ 9F13 CD 7F 99         call PreviousScan
 112+ 9F16 CD 7F 99         call PreviousScan
 113+ 9F19 CD 7F 99         call PreviousScan
 114+ 9F1C CD 7F 99         call PreviousScan
 115+ 9F1F
 116+ 9F1F              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 117+ 9F1F
 118+ 9F1F 7C               ld a,h
 119+ 9F20 D6 40            sub $40
 120+ 9F22 38 05            jr c,Elimina_disparo
 121+ 9F24
 122+ 9F24               ; Introduce nuevo puntero_de_impresión en la caja.
 123+ 9F24
 124+ 9F24 EB               ex de,hl
 125+ 9F25
 126+ 9F25 73               ld (hl),e
 127+ 9F26 23               inc hl
 128+ 9F27 72               ld (hl),d
 129+ 9F28
 130+ 9F28 C9               ret
 131+ 9F29
 132+ 9F29              ; ----------------------
 133+ 9F29              ;
 134+ 9F29              ;   23/08/24
 135+ 9F29
 136+ 9F29              Elimina_disparo
 137+ 9F29
 138+ 9F29 EB               ex de,hl
 139+ 9F2A
 140+ 9F2A              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 141+ 9F2A              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 142+ 9F2A
 143+ 9F2A              ;   Disparo_1A defw 0									; Puntero objeto.
 144+ 9F2A              ;   	defw 0											; Puntero de impresión.
 145+ 9F2A              ;   	db 0											; Impacto.
 146+ 9F2A
 147+ 9F2A 2B               dec hl
 148+ 9F2B 2B               dec hl
 149+ 9F2C
 150+ 9F2C AF               xor a
 151+ 9F2D 77               ld (hl),a
 152+ 9F2E 23               inc hl
 153+ 9F2F 77               ld (hl),a                                           ; Puntero_objeto borrado.
 154+ 9F30 23               inc hl
 155+ 9F31 77               ld (hl),a
 156+ 9F32 23               inc hl
 157+ 9F33 77               ld (hl),a                                           ; Puntero_de_impresion borrado.
 158+ 9F34 23               inc hl
 159+ 9F35 77               ld (hl),a                                           ; Impacto borrado.
 160+ 9F36
 161+ 9F36 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 162+ 9F39 35               dec (hl)
 163+ 9F3A
 164+ 9F3A 3A 1E 8C         ld a,(Disparo_Amadeus)
 165+ 9F3D F6 01            or 1
 166+ 9F3F 32 1E 8C         ld (Disparo_Amadeus),a
 167+ 9F42
 168+ 9F42 21 30 8C         ld hl,Ctrl_5
 169+ 9F45 CB C6            set 0,(hl)
 170+ 9F47
 171+ 9F47
 172+ 9F47 C9               ret
 173+ 9F48
 174+ 9F48              ; --------------------------------------------------------------------------------------
 175+ 9F48              ;
 176+ 9F48              ;   21/8/24
 177+ 9F48              ;
 178+ 9F48
 179+ 9F48              Pinta_disparos
 180+ 9F48
 181+ 9F48              ;    Exclusiones:
 182+ 9F48
 183+ 9F48 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 184+ 9F4B A7               and a
 185+ 9F4C C8               ret z                                                             ; Salimos si no hay ningún disparo generado.
 186+ 9F4D
 187+ 9F4D ED 73 08 8C      ld (Stack),sp
 188+ 9F51 06 02            ld b,2
 189+ 9F53
 190+ 9F53 ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 191+ 9F57
 192+ 9F57 D1           2 pop de
 193+ 9F58
 194+ 9F58 14               inc d
 195+ 9F59 15               dec d
 196+ 9F5A
 197+ 9F5A 28 1B            jr z,1F
 198+ 9F5C
 199+ 9F5C              Imprime_scanlines_de_disparo
 200+ 9F5C
 201+ 9F5C E1               pop hl
 202+ 9F5D
 203+ 9F5D              ; Puntero objeto en DE.
 204+ 9F5D              ; Puntero_de_impresión en HL.
 205+ 9F5D
 206+ 9F5D              ; 1er scanline.
 207+ 9F5D
 208+ 9F5D 1A               ld a,(de)
 209+ 9F5E AE               xor (hl)
 210+ 9F5F 77               ld (hl),a
 211+ 9F60
 212+ 9F60 13               inc de
 213+ 9F61 2C               inc l
 214+ 9F62
 215+ 9F62 1A               ld a,(de)
 216+ 9F63 AE               xor (hl)
 217+ 9F64 77               ld (hl),a
 218+ 9F65
 219+ 9F65              ; 2º scanline.
 220+ 9F65
 221+ 9F65 E1               pop hl
 222+ 9F66 1B               dec de
 223+ 9F67
 224+ 9F67 1A               ld a,(de)
 225+ 9F68 AE               xor (hl)
 226+ 9F69 77               ld (hl),a
 227+ 9F6A
 228+ 9F6A 13               inc de
 229+ 9F6B 2C               inc l
 230+ 9F6C
 231+ 9F6C 1A               ld a,(de)
 232+ 9F6D AE               xor (hl)
 233+ 9F6E 77               ld (hl),a
 234+ 9F6F
 235+ 9F6F              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 236+ 9F6F
 237+ 9F6F 18 E6            jr 2B
 238+ 9F71
 239+ 9F71 ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
 240+ 9F75 18 E0            jr 2B
 241+ 9F77
 242+ 9F77 10 F8        1 djnz 3B
 243+ 9F79 ED 7B 08 8C      ld sp,(Stack)
 244+ 9F7D C9               ret
 245+ 9F7E
 246+ 9F7E              ; --------------------------------------------------------------------------------------
 247+ 9F7E              ;
 248+ 9F7E              ;   21/8/24
 249+ 9F7E              ;
 250+ 9F7E              ;   Modifica: HL y DE.
 251+ 9F7E
 252+ 9F7E
 253+ 9F7E              Genera_datos_de_impresion_disparos_Amadeus
 254+ 9F7E
 255+ 9F7E              ;   Exclusiones:
 256+ 9F7E
 257+ 9F7E 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 258+ 9F81 A7               and a
 259+ 9F82 C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 260+ 9F83
 261+ 9F83              ; -----
 262+ 9F83
 263+ 9F83 ED 73 08 8C      ld (Stack),sp
 264+ 9F87 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 265+ 9F8A
 266+ 9F8A 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 267+ 9F8D ED 72            sbc hl,sp                                                 ; Última caja ???
 268+ 9F8F 28 26            jr z,Salida
 269+ 9F91
 270+ 9F91 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 271+ 9F92
 272+ 9F92 14               inc d
 273+ 9F93 15               dec d
 274+ 9F94
 275+ 9F94 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 276+ 9F96
 277+ 9F96              Siguiente_disparo_Amadeus
 278+ 9F96
 279+ 9F96 D1               pop de
 280+ 9F97 33               inc sp
 281+ 9F98 18 F0            jr 1B
 282+ 9F9A
 283+ 9F9A              Genera_scanlines_de_disparo_Amadeus
 284+ 9F9A
 285+ 9F9A E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 286+ 9F9B              ;                                                             ; Puntero_de_impresión del disparo en HL.
 287+ 9F9B 33               inc sp
 288+ 9F9C ED 73 1F 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 289+ 9FA0
 290+ 9FA0 ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 291+ 9FA4
 292+ 9FA4 C1               pop bc
 293+ 9FA5 C1               pop bc
 294+ 9FA6 C1               pop bc
 295+ 9FA7
 296+ 9FA7 ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 297+ 9FAB
 298+ 9FAB E5               push hl                                                   ; Sube 2º scanline al álbum.
 299+ 9FAC CD 7F 99         call PreviousScan
 300+ 9FAF E5               push hl                                                   ; Sube 1er scanline al álbum.
 301+ 9FB0 D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 302+ 9FB1
 303+ 9FB1 ED 7B 1F 8C      ld sp,(Puntero_rancio_disparos_album)
 304+ 9FB5 18 D3            jr 1B
 305+ 9FB7
 306+ 9FB7
 307+ 9FB7              Salida
 308+ 9FB7
 309+ 9FB7              ;   Calcula el nº de bytes totales que se han almacenado en el (Album_de_pintado_disparos).
 310+ 9FB7
 311+ 9FB7 2A 14 8C         ld hl,(Album_de_pintado_disparos)
 312+ 9FBA 45               ld b,l
 313+ 9FBB 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 314+ 9FBE 7D               ld a,l
 315+ 9FBF
 316+ 9FBF 90               sub b
 317+ 9FC0 32 1A 8C         ld (Num_de_bytes_album_de_disparos),a
 318+ 9FC3
 319+ 9FC3 ED 7B 08 8C      ld sp,(Stack)
 320+ 9FC7 C9               ret
 321+ 9FC8
 322+ 9FC8              ; --------------------------------------------------------------------------------------
 323+ 9FC8              ;
 324+ 9FC8              ;   17/08/24
 325+ 9FC8              ;
 326+ 9FC8
 327+ 9FC8              Genera_disparo_Amadeus
 328+ 9FC8
 329+ 9FC8              ;   Exclusiones.
 330+ 9FC8
 331+ 9FC8 3A 1E 8C         ld a,(Disparo_Amadeus)
 332+ 9FCB A7               and a
 333+ 9FCC C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
 334+ 9FCD
 335+ 9FCD              ;! Provisionalmente sólo 1 disparo !!!!!!
 336+ 9FCD 3D               dec a
 337+ 9FCE 32 1E 8C         ld (Disparo_Amadeus),a
 338+ 9FD1
 339+ 9FD1              ;   Inc nº de disparos de Amadeus.
 340+ 9FD1
 341+ 9FD1 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 342+ 9FD4 34               inc (hl)
 343+ 9FD5
 344+ 9FD5              ; ----- ----- ----- -----
 345+ 9FD5
 346+ 9FD5              Define_puntero_objeto_disparo
 347+ 9FD5
 348+ 9FD5              ;   Inicializamos contador.
 349+ 9FD5
 350+ 9FD5 06 00            ld b,0
 351+ 9FD7 2A 75 89         ld hl,(p.imp.amadeus)
 352+ 9FDA 2C               inc l
 353+ 9FDB
 354+ 9FDB 3E 80            ld a,$80
 355+ 9FDD BE               cp (hl)
 356+ 9FDE 28 0D            jr z,1F
 357+ 9FE0
 358+ 9FE0 04               inc b
 359+ 9FE1 3E 60            ld a,$60
 360+ 9FE3 BE               cp (hl)
 361+ 9FE4 28 07            jr z,1F
 362+ 9FE6
 363+ 9FE6 04               inc b
 364+ 9FE7 3E 18            ld a,$18
 365+ 9FE9 BE               cp (hl)
 366+ 9FEA 28 01            jr z,1F
 367+ 9FEC
 368+ 9FEC 04               inc b
 369+ 9FED
 370+ 9FED              ;   Calcula el Puntero_de_impresión del disparo.
 371+ 9FED
 372+ 9FED              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 373+ 9FED
 374+ 9FED CD 7F 99     1 call PreviousScan
 375+ 9FF0
 376+ 9FF0 78               ld a,b
 377+ 9FF1 CB 3F            srl a
 378+ 9FF3 28 03            jr z,4F
 379+ 9FF5
 380+ 9FF5              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 381+ 9FF5 E5               push hl
 382+ 9FF6 18 02            jr 5F
 383+ 9FF8 2D           4 dec l
 384+ 9FF9 E5               push hl
 385+ 9FFA              ; ---
 386+ 9FFA
 387+ 9FFA              ;   Calcula el Puntero_objeto del disparo.
 388+ 9FFA
 389+ 9FFA 21 70 83     5 ld hl,Indice_disparo
 390+ 9FFD 04               inc b
 391+ 9FFE 05               dec b
 392+ 9FFF 28 04            jr z,2F
 393+ A001
 394+ A001              ;   Nos desplazamos por el índice de disparos.
 395+ A001
 396+ A001 2C           3 inc l
 397+ A002 2C               inc l
 398+ A003 10 FC            djnz 3B
 399+ A005
 400+ A005              ; --- Guarda el Puntero_objeto del disparo en la pila.
 401+ A005 CD 5B 90     2 call Extrae_address
 402+ A008 E5               push hl
 403+ A009              ; ---
 404+ A009
 405+ A009              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 406+ A009              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
 407+ A009
 408+ A009 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 409+ A00C CD 5B 90         call Extrae_address
 410+ A00F
 411+ A00F 06 02            ld b,2
 412+ A011
 413+ A011 D1           6 pop de
 414+ A012 73               ld (hl),e
 415+ A013 23               inc hl
 416+ A014 72               ld (hl),d
 417+ A015 23               inc hl
 418+ A016
 419+ A016 10 F9            djnz 6B
 420+ A018
 421+ A018              Detecta_impacto_en_disparo_de_Amadeus
 422+ A018
 423+ A018 CD 49 A0         call Detecta_impacto_en_disparo_de_Amadeus01
 424+ A01B
 425+ A01B 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 426+ A01E 23               inc hl
 427+ A01F 23               inc hl
 428+ A020 CD 5B 90         call Extrae_address
 429+ A023 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 430+ A024 28 02            jr z,7F
 431+ A026 3E 01            ld a,1
 432+ A028 77           7 ld (hl),a
 433+ A029 C8               ret z
 434+ A02A
 435+ A02A              Genera_coordenadas_de_disparo_Amadeus
 436+ A02A
 437+ A02A              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 438+ A02A              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 439+ A02A
 440+ A02A 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 441+ A02D CD 5B 90         call Extrae_address
 442+ A030 23               inc hl
 443+ A031 23               inc hl
 444+ A032
 445+ A032 CD 5B 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 446+ A035 CD 7A 94         call Genera_coordenadas
 447+ A038
 448+ A038 3D               dec a
 449+ A039
 450+ A039 21 38 8C         ld hl,Coordenadas_disparo_certero
 451+ A03C 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 452+ A03D 23               inc hl
 453+ A03E 3A BC 8B         ld a,(Coordenada_X)
 454+ A041 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 455+ A042
 456+ A042 21 35 8C         ld hl,Impacto2
 457+ A045 CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 458+ A047
 459+ A047 AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 460+ A048 C9               ret
 461+ A049
 462+ A049              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 463+ A049              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 464+ A049              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 465+ A049
 466+ A049              ; ----------------------------------------------
 467+ A049              ;
 468+ A049              ;   12/08/24
 469+ A049              ;
 470+ A049
 471+ A049
 472+ A049              Detecta_impacto_en_disparo_de_Amadeus01
 473+ A049
 474+ A049              Extraccion_de_datos
 475+ A049
 476+ A049 21 1F 89         ld hl,Indice_de_disparos_Amadeus
 477+ A04C CD 5B 90         call Extrae_address
 478+ A04F
 479+ A04F 5E               ld e,(hl)
 480+ A050 23               inc hl
 481+ A051 56               ld d,(hl)
 482+ A052 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 483+ A053
 484+ A053 4E               ld c,(hl)
 485+ A054 23               inc hl
 486+ A055 46               ld b,(hl)
 487+ A056 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 488+ A057
 489+ A057 C5               push bc
 490+ A058 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 491+ A059
 492+ A059              Detecta_impacto_
 493+ A059
 494+ A059 1A               ld a,(de)
 495+ A05A A6               and (hl)
 496+ A05B C0               ret nz
 497+ A05C
 498+ A05C 13               inc de
 499+ A05D 23               inc hl
 500+ A05E
 501+ A05E 1A               ld a,(de)
 502+ A05F A6               and (hl)
 503+ A060 C9               ret
 504+ A061
 505+ A061              ; -------------------------------------------------------------------------------------------------------------
 506+ A061              ;
 507+ A061              ;   8/8/24
 508+ A061              ;
 509+ A061              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 510+ A061              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 511+ A061              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 512+ A061              ;
 513+ A061              ;   MODIFICA: HL,DE,BC y A.
 514+ A061              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 515+ A061              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 516+ A061
 517+ A061              Colision_Entidad_Amadeus
 518+ A061
 519+ A061              ; Posible contacto de entidad con Amadeus. ?????
 520+ A061
 521+ A061              ; Exclusiones:
 522+ A061
 523+ A061 3A 53 8C         ld a,(Shield)
 524+ A064 A7               and a
 525+ A065 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 526+ A066
 527+ A066 21 2E 8C         ld hl,Ctrl_3
 528+ A069 CB 76            bit 6,(hl)
 529+ A06B C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 530+ A06C
 531+ A06C 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 532+ A06F CB 56            bit 2,(hl)
 533+ A071 C0               ret nz
 534+ A072
 535+ A072 3A BD 8B     	ld a,(Coordenada_y)
 536+ A075 FE 14        	cp $14
 537+ A077 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 538+ A078
 539+ A078 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 540+ A07B A7               and a
 541+ A07C C0               ret nz
 542+ A07D
 543+ A07D              Genera_coordenadas_X
 544+ A07D
 545+ A07D              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 546+ A07D              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 547+ A07D
 548+ A07D              ;   Limpiamos almacenes.
 549+ A07D
 550+ A07D              ;    call Limpia_Coordenadas_X
 551+ A07D
 552+ A07D              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 553+ A07D
 554+ A07D 21 3A 8C         ld hl,Coordenadas_X_Entidad
 555+ A080 3A BC 8B         ld a,(Coordenada_X)
 556+ A083 CD A5 A0         call Guarda_coordenadas_X
 557+ A086
 558+ A086              ;   Almacenamos las coordenadas X de Amadeus.
 559+ A086
 560+ A086 3A 71 89         ld a,(CX_Amadeus)
 561+ A089 CD A5 A0         call Guarda_coordenadas_X
 562+ A08C CD B9 A0         call Compara_coordenadas_X
 563+ A08F C0               ret nz
 564+ A090
 565+ A090 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ A092 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ A095
 568+ A095 2A FB 8B         ld hl,(Puntero_store_caja)
 569+ A098 2C               inc l
 570+ A099 2C               inc l
 571+ A09A 2C               inc l
 572+ A09B 2C               inc l
 573+ A09C 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 574+ A09F
 575+ A09F 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 576+ A0A2 CB D6            set 2,(hl)
 577+ A0A4
 578+ A0A4 C9               ret
 579+ A0A5
 580+ A0A5               ; ----- ----- ----- ----- -----
 581+ A0A5
 582+ A0A5 77           Guarda_coordenadas_X ld (hl),a
 583+ A0A6 3C               inc a
 584+ A0A7 2C               inc l
 585+ A0A8 77               ld (hl),a
 586+ A0A9 3C               inc a
 587+ A0AA 2C               inc l
 588+ A0AB 77               ld (hl),a
 589+ A0AC 2C               inc l
 590+ A0AD C9               ret
 591+ A0AE
 592+ A0AE AF           Limpia_Coordenadas_X xor a
 593+ A0AF 06 06            ld b,6
 594+ A0B1 21 3D 8C         ld hl,Coordenadas_X_Amadeus
 595+ A0B4 77           1 ld (hl),a
 596+ A0B5 23               inc hl
 597+ A0B6 10 FC            djnz 1B
 598+ A0B8 C9               ret
 599+ A0B9
 600+ A0B9              ; ----- ----- ----- ----- -----
 601+ A0B9
 602+ A0B9              Compara_coordenadas_X
 603+ A0B9
 604+ A0B9 DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
 605+ A0BD DD 7E 00         ld a,(ix+0)
 606+ A0C0 CD CE A0         call Comparando
 607+ A0C3 C8               ret z
 608+ A0C4
 609+ A0C4 3C               inc a
 610+ A0C5 CD DD A0         call Comparando_1
 611+ A0C8 C8               ret z
 612+ A0C9
 613+ A0C9 3C               inc a
 614+ A0CA CD DD A0         call Comparando_1
 615+ A0CD C9               ret
 616+ A0CE
 617+ A0CE              ; ----- ----- ----- ----- -----
 618+ A0CE              ;
 619+ A0CE              ;   4/12/23
 620+ A0CE              ;
 621+ A0CE              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 622+ A0CE
 623+ A0CE              Comparando
 624+ A0CE
 625+ A0CE DD 2C            inc ixl
 626+ A0D0 DD 2C            inc ixl
 627+ A0D2 DD 2C            inc ixl
 628+ A0D4
 629+ A0D4 DD 46 00         ld b,(ix+0)
 630+ A0D7 DD 4E 01         ld c,(ix+1)
 631+ A0DA DD 56 02         ld d,(ix+2)
 632+ A0DD
 633+ A0DD B8           Comparando_1 cp b
 634+ A0DE C8               ret z
 635+ A0DF B9               cp c
 636+ A0E0 C8               ret z
 637+ A0E1 BA               cp d
 638+ A0E2 C9               ret
 639+ A0E3
 640+ A0E3              ; -----------------------------------------------------------------------
 641+ A0E3              ;
 642+ A0E3              ;   04/7/24
 643+ A0E3              ;
 644+ A0E3
 645+ A0E3              Detecta_colision_nave_entidad
 646+ A0E3
 647+ A0E3              ; Exclusiones:
 648+ A0E3
 649+ A0E3              ; Salimos de la rutina si no hay advertencia de posible colisión.
 650+ A0E3
 651+ A0E3 21 35 8C     	ld hl,Impacto2
 652+ A0E6 CB 56        	bit 2,(hl)
 653+ A0E8 C8           	ret z
 654+ A0E9
 655+ A0E9              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 656+ A0E9
 657+ A0E9 2A 77 89         ld hl,(Pamm_Amadeus)
 658+ A0EC CD 5B 90         call Extrae_address
 659+ A0EF 54               ld d,h
 660+ A0F0 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 661+ A0F1
 662+ A0F1 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 663+ A0F4 06 10            ld b,16                                        ; Contador de scanlines en B.
 664+ A0F6 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 665+ A0F9
 666+ A0F9 C5           1 push bc
 667+ A0FA 06 03            ld b,3
 668+ A0FC E5               push hl
 669+ A0FD
 670+ A0FD              ; .db
 671+ A0FD
 672+ A0FD 1A           3 ld a,(de)
 673+ A0FE A7               and a
 674+ A0FF 20 03            jr nz,4F
 675+ A101
 676+ A101 2C               inc l
 677+ A102 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 678+ A104
 679+ A104 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 680+ A106 28 04            jr z,2F
 681+ A108
 682+ A108              ; Impacto.
 683+ A108 FD 2D            dec iyl
 684+ A10A 28 22            jr z,5F
 685+ A10C
 686+ A10C 1C           2 inc e
 687+ A10D 10 EE            djnz 3B
 688+ A10F
 689+ A10F E1               pop hl
 690+ A110
 691+ A110              ; Hay salto de línea en el puntero de impresión ???
 692+ A110
 693+ A110 7C               ld a,h
 694+ A111 D6 57            sub $57
 695+ A113 20 0A            jr nz,6F
 696+ A115
 697+ A115              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 698+ A115
 699+ A115 2A 75 89         ld hl,(p.imp.amadeus)
 700+ A118 3E 20            ld a,$20
 701+ A11A A7               and a
 702+ A11B 85               add l
 703+ A11C 6F               ld l,a
 704+ A11D 18 01            jr 7F
 705+ A11F
 706+ A11F 24           6 inc h
 707+ A120
 708+ A120 C1           7 pop bc
 709+ A121 10 D6            djnz 1B
 710+ A123
 711+ A123              ;   Fin de la comparativa.
 712+ A123
 713+ A123              ;   NO HAY COLISIÓN !!!!!.
 714+ A123              ;
 715+ A123              ;   .db (Impacto) de Amadeus a "0".
 716+ A123              ;   RES el bit2 de (Impacto2).
 717+ A123              ;
 718+ A123              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 719+ A123              ;   Lo colocamos a "0".
 720+ A123
 721+ A123 21 35 8C         ld hl,Impacto2
 722+ A126 CB 96            res 2,(hl)
 723+ A128 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
 724+ A12B 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 725+ A12D C9               ret
 726+ A12E
 727+ A12E              ;   COLISIÓN !!!!!.
 728+ A12E              ;
 729+ A12E              ;   .db (Impacto) de Amadeus a "1".
 730+ A12E              ;   SET el bit3 de (Impacto2).
 731+ A12E              ;
 732+ A12E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 733+ A12E
 734+ A12E E1           5 pop hl
 735+ A12F C1               pop bc
 736+ A130
 737+ A130 21 74 89         ld hl,Impacto_Amadeus
 738+ A133 36 01            ld (hl),1
 739+ A135 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 740+ A138 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 741+ A13A
 742+ A13A 11 C0 87         ld de,Indice_Explosion_entidades
 743+ A13D 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 744+ A140
 745+ A140 23               inc hl
 746+ A141 23               inc hl
 747+ A142 23               inc hl
 748+ A143
 749+ A143 73               ld (hl),e
 750+ A144 23               inc hl
 751+ A145 72               ld (hl),d
 752+ A146
 753+ A146              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 754+ A146
 755+ A146 11 60 88         ld de,Indice_Explosion_Amadeus
 756+ A149 21 77 89         ld hl,Pamm_Amadeus
 757+ A14C
 758+ A14C 73               ld (hl),e
 759+ A14D 23               inc hl
 760+ A14E 72               ld (hl),d
 761+ A14F
 762+ A14F C9               ret
 763+ A150
 764+ A150
 765+ A150
# file closed: Disparo.asm
2270  A150
2271  A150              	SAVESNA "Pruebas.sna", START
2272  A150
2273  A150
2274  A150
2275  A150
# file closed: Banco_de_pruebas.asm
