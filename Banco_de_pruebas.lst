# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1B 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD BC 8D     	call Pinta_entidades
  44  AA1C CD AE 8D     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD DE 8D     	call Guarda_parametros_DRAW
  49  AA26 CD FE 8C     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 2B 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD 01 90     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD D8 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD 10 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD EA 8D     	call Recupera_parametros_DRAW
  66  AA3F CD CC 8D     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 25 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 1B 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	12/12/23
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas										 ; ! 65 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101									; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 130+ 8592 04           	db 4 											; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0											; Variables_de_pintado
 138+ 85A0 00 00        	defw 0											;	" " " " " " "
 139+ 85A2 00 00        	defw 0											;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 145+ 85AC
 146+ 85AC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 147+ 85AE
 148+ 85AE 00           	db 0											; (Autoriza_movimiento).
 149+ 85AF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0											; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 											; (Columnas).
 156+ 85BC 00 00        	defw 0											; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 190+ 85EF
 191+ 85EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 192+ 85F1
 193+ 85F1 00           	db 0											; (Autoriza_movimiento).
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 235+ 8632
 236+ 8632 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 237+ 8634
 238+ 8634 00           	db 0											; (Autoriza_movimiento).
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 280+ 8675
 281+ 8675 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 282+ 8677
 283+ 8677 00           	db 0											; (Autoriza_movimiento).
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 325+ 86B8
 326+ 86B8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 327+ 86BA
 328+ 86BA 00           	db 0											; (Autoriza_movimiento).
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 370+ 86FB
 371+ 86FB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 372+ 86FD
 373+ 86FD 00           	db 0											; (Autoriza_movimiento).
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 415+ 873E
 416+ 873E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 417+ 8740
 418+ 8740 00           	db 0											; (Autoriza_movimiento).
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F D0 5C        	defw Almacen_de_movimientos_masticados			; Puntero_de_almacen_de_mov_masticados
 460+ 8781
 461+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 462+ 8783
 463+ 8783 00           	db 0											; (Autoriza_movimiento).
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AA 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 493+ 879C 04           	db %00000100									; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 497+ 87A3 01           	db 1											; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 AA 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 500+ 87AA
 501+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 502+ 87AC 02           	db %00000010									; (Attr).
 503+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 504+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 505+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 506+ 87B3 01           	db 1											; (Cuad_objeto).
 507+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 508+ 87B8 AA 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 509+ 87BA
# file closed: Cajas_y_disparos.asm
  97  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 43 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD 4E 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0F 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 45 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD 4E 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 45 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 15 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 0D 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD 4E 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 45 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 45 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD 4E 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 09 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 0D 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 09 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 16 00     	ld bc,22
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0F 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0F 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 07        	cp 7
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 07        	ld a,7
 209+ 88BA 32 10 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 10 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  98  88C5
  99  88C5              ; ******************************************************************************************************************************************************************************************
 100  88C5              ; Constantes.
 101  88C5              ; ******************************************************************************************************************************************************************************************
 102  88C5              ;
 103  88C5              ; 10/11/23
 104  88C5
 105  88C5              ;
 106  88C5              ; Constantes generales.
 107  88C5              ;
 108  88C5
 109  88C5              Sprite_vacio equ $f000
 110  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88C5
 115  88C5              Almacen_de_movimientos_masticados equ $5cd0				; Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 116  88C5
 117  88C5              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 118  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 119  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 120  88C5              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 121  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 122  88C5
 123  88C5              ;														; 55 Bytes.
 124  88C5
 125  88C5              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 126  88C5              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 127  88C5
 128  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 129  88C5
 130  88C5              ; ******************************************************************************************************************************************************************************************
 131  88C5              ; Variables.
 132  88C5              ; ******************************************************************************************************************************************************************************************
 133  88C5              ;
 134  88C5              ; 12/12//23
 135  88C5              ;
 136  88C5              ; Variables de DRAW. (Motor principal).
 137  88C5              ;
 138  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 139  88C5
 140  88C5 00           Filas db 0												; Filas. [DRAW]
 141  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 142  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 143  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 144  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 145  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 146  88CD
 147  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 148  88CD
 149  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 150  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 151  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 152  88CE 00           Attr db 0												; Atributos de la entidad:
 153  88CF
 154  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 155  88CF              ;
 156  88CF              ;	COLORES: 0 ..... NEGRO
 157  88CF              ;    		 1 ..... AZUL
 158  88CF              ; 			 2 ..... ROJO
 159  88CF              ;			 3 ..... MAGENTA
 160  88CF              ; 			 4 ..... VERDE
 161  88CF              ; 			 5 ..... CIAN
 162  88CF              ;			 6 ..... AMARILLO
 163  88CF              ; 			 7 ..... BLANCO
 164  88CF
 165  88CF 00 00        Indice_Sprite_der defw 0
 166  88D1 00 00        Indice_Sprite_izq defw 0
 167  88D3 00 00        Puntero_DESPLZ_der defw 0
 168  88D5 00 00        Puntero_DESPLZ_izq defw 0
 169  88D7
 170  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 171  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 172  88DA
 173  88DA              ; Variables de objeto. (Características).
 174  88DA
 175  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 176  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 177  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 178  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 179  88DE
 180  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 181  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 182  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 183  88DF 00 00 00...  Variables_de_borrado ds 6
 184  88E5
 185  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 186  88E7 00 00        	defw 0
 187  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 188  88EB 00 00 00 00  	db 0,0,0,0
 189  88EF
 190  88EF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 191  88F1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 192  88F1
 193  88F1 D0 5C        Puntero_de_almacen_de_mov_masticados defw Almacen_de_movimientos_masticados
 194  88F3
 195  88F3              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 196  88F3              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 197  88F3
 198  88F3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 199  88F3
 200  88F3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 201  88F4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 202  88F4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 203  88F4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 204  88F4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 205  88F4              ;
 206  88F4              ; 														DESCRIPCIÖN:
 207  88F4              ;
 208  88F4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 209  88F4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 210  88F4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 211  88F4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 212  88F4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 213  88F4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 214  88F4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 215  88F4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 216  88F4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 217  88F4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 218  88F4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 219  88F4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 220  88F4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 221  88F4              ;
 222  88F4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 223  88F4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 224  88F4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 225  88F4
 226  88F4              ; Movimiento. ------------------------------------------------------------------------------------------------------
 227  88F4
 228  88F4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 229  88F6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 230  88F8 00 00        Puntero_indice_mov_bucle defw 0							;
 231  88FA              ;
 232  88FA              ;
 233  88FA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 234  88FB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 235  88FB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 236  88FB 00           Incrementa_puntero_backup db 0
 237  88FC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 238  88FD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 239  88FD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 240  88FE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 241  88FF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 242  8900              ;
 243  8900              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 244  8900              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 245  8900              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 246  8900              ;
 247  8900              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 248  8900              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 249  8900              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 250  8900              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 251  8900              ;
 252  8900              ;														;	"$ff" ..... Bucle infinito de repetición.
 253  8900              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 254  8900              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 255  8900
 256  8900
 257  8900              ; Variables de funcionamiento. [DRAW].
 258  8900
 259  8900 00           Columnas db 0
 260  8901 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 261  8903              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 262  8903 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 263  8904
 264  8904              ; variables de control general.
 265  8904
 266  8904 00           Ctrl_2 db 0
 267  8905              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 268  8905              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 269  8905              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 270  8905              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 271  8905              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 272  8905              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 273  8905              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 274  8905              ;
 275  8905              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 276  8905              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 277  8905              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 278  8905              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 279  8905              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 280  8905              ;														BIT 4, ???
 281  8905              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 282  8905
 283  8905 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8906
 285  8906              ;! 65 Bytes por entidad.
 286  8906
 287  8906              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 288  8906              ;					         		---------;      ;---------
 289  8906
 290  8906
 291  8906              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 292  8906
 293  8906 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 294  8907
 295  8907              ;														DESCRIPCIÓN:
 296  8907              ;
 297  8907              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 298  8907              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 299  8907              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 300  8907              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 301  8907              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 302  8907              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 303  8907
 304  8907              ;														BIT 3, Recarga de nueva oleada.
 305  8907              ;														BIT 4, Recarga de nueva oleada.
 306  8907              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 307  8907              ;														BIT 6, **** Frame completo.
 308  8907              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 309  8907
 310  8907 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 311  8909              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 312  8909              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 313  8909              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 314  8909
 315  8909              ; Gestión de ENTIDADES y CAJAS.
 316  8909
 317  8909 00 00        Puntero_store_caja defw 0
 318  890B 00 00        Puntero_restore_caja defw 0
 319  890D 00 00        Indice_restore_caja defw 0
 320  890F 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 321  8910 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 322  8911 00           Entidades_en_curso db 0									; ..... ..... .....
 323  8912 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 324  8913              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 325  8913              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 326  8913              ;														; _ (Numero_de_malotes)="0".
 327  8913 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 328  8915 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 329  8917              ;														; _ puntero (Indice_entidades).
 330  8917
 331  8917
 332  8917              ;---------------------------------------------------------------------------------------------------------------
 333  8917              ;
 334  8917              ;	18/11/23
 335  8917              ;
 336  8917              ;	Álbumes.
 337  8917
 338  8917 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 339  8919              ;														; _variable para almacenar lo posición del puntero_
 340  8919              ; 														; _de pila, SP.
 341  8919 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 342  891B              ;														; La utiliza la rutina [Extrae_foto_registros].
 343  891B 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 344  891D 00 70        Stack_snapshot defw Album_de_fotos
 345  891F 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 346  8921
 347  8921              ;End_Snapshot defw Album_de_fotos
 348  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 349  8921 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 350  8923              ;														; _el snapshot de los registros del siguiente disparo.
 351  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 352  8923 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 353  8925
 354  8925 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 355  8926              ;
 356  8926              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 357  8926              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 358  8926
 359  8926              ; Gestión de Disparos.
 360  8926
 361  8926 00           Numero_de_disparotes db 0
 362  8927 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 363  8929 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 364  892B 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 365  892C              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 366  892C              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 367  892C 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 368  892E              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 369  892E              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 370  892E              ;														; _produzca colisión.
 371  892E 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 372  8930              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 373  8930 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 374  8933              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 375  8933 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 376  8936              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 377  8936 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 378  8937
 379  8937              ;---------------------------------------------------------------------------------------------------------------
 380  8937
 381  8937              ; Relojes y temporizaciones.
 382  8937
 383  8937 00           Contador_de_frames db 0
 384  8938 00           Contador_de_frames_2 db 0
 385  8939
 386  8939 04           Clock_explosion db 4
 387  893A 1E           Clock_Entidades_en_curso db 30
 388  893B 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 389  893C              ;														; Repite la oleada de entidades.
 390  893C 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 391  893D 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 392  893E 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 393  893F
 394  893F 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 395  8940 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 396  8941 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 397  8942
 398  8942              ;---------------------------------------------------------------------------------------------------------------
 399  8942
 400  8942              ; Gestión de NIVELES.
 401  8942
 402  8942 00           Nivel db 0												; Nivel actual del juego.
 403  8943 00 00        Puntero_indice_NIVELES defw 0
 404  8945 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 405  8947              ; 														; _ que definen el NIVEL.
 406  8947              ; Y todo comienza aquí .....
 407  8947              ;
 408  8947              ; Rutina principal *************************************************************************************************************************************************************************
 409  8947              ;
 410  8947              ;	16/11/22
 411  8947
 412  8947              START
 413  8947
 414  8947 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 415  894A 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 416  894C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 417  894E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 418  8950 F3           	DI
 419  8951
 420  8951 3E 07        	ld a,%00000111
 421  8953 CD D7 98     	call Cls
 422  8956
 423  8956 CD 27 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 424  8959
 425  8959              ; INICIALIZACIÓN.
 426  8959
 427  8959 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 428  895C CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 429  895F CD B6 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 430  8962              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 431  8962 CD D7 8C     	call Restore_entidad
 432  8965
 433  8965 21 10 89     	ld hl,Numero_parcial_de_entidades
 434  8968 46           	ld b,(hl)
 435  8969 04           	inc b
 436  896A 05           	dec b
 437  896B 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 438  896D
 439  896D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 440  896D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 441  896D              ;	Pintamos el resto de entidades:
 442  896D
 443  896D              ;	INICIA ENTIDADES !!!!!
 444  896D
 445  896D C5           1 push bc  												; Guardo el contador de entidades.
 446  896E CD 70 8B     	call Inicia_entidad
 447  8971 C1           	pop bc
 448  8972 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 449  8974
 450  8974              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 451  8974              ; (Esto se dá cuando se inicia una nueva oleada).
 452  8974
 453  8974 3A 06 89     	ld a,(Ctrl_1)
 454  8977 CB 5F        	bit 3,a
 455  8979 20 1B        	jr nz,5F											; Loop
 456  897B
 457  897B              ; 	INICIA AMADEUS !!!!!
 458  897B
 459  897B CD FE 8C     3 call Restore_Amadeus
 460  897E CD 54 8C     	call Inicia_Puntero_objeto
 461  8981 CD CA 92     	call Draw
 462  8984 CD A0 7F     	call Guarda_foto_registros
 463  8987 CD 7B 8D     	call Guarda_datos_de_borrado_Amadeus
 464  898A
 465  898A 11 7E 85     	ld de,Amadeus_db
 466  898D CD 10 8D     	call Store_Amadeus
 467  8990
 468  8990              ; 	INICIA DISPAROS !!!!!
 469  8990
 470  8990 CD CC 8B     	call Inicia_Puntero_Disparo_Entidades
 471  8993 CD D3 8B     	call Inicia_Puntero_Disparo_Amadeus
 472  8996
 473  8996              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 474  8996
 475  8996 CD B6 8B     5 call Inicia_punteros_de_cajas
 476  8999 CD D7 8C     	call Restore_entidad
 477  899C
 478  899C 3A 06 89     	ld a,(Ctrl_1)
 479  899F CB 5F        	bit 3,a
 480  89A1 28 07        	jr z,6F
 481  89A3
 482  89A3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 483  89A3
 484  89A3 21 06 89     	ld hl,Ctrl_1
 485  89A6 CB 9E        	res 3,(hl)
 486  89A8 18 07        	jr Main
 487  89AA
 488  89AA              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 489  89AA
 490  89AA 21 25 89     6 ld hl,Ctrl_3
 491  89AD CB C6        	set 0,(hl)											; Frame completo.
 492  89AF FB           	ei
 493  89B0 76           	halt
 494  89B1
 495  89B1              ; ------------------------------------
 496  89B1
 497  89B1              Main
 498  89B1              ;
 499  89B1              ;	11/12/23
 500  89B1
 501  89B1              ; Aparece nueva entidad ???
 502  89B1
 503  89B1              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 504  89B1              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 505  89B1              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 506  89B1              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 507  89B1              ;														; _un 2º bloque.
 508  89B1
 509  89B1 3A 3A 89     	ld a,(Clock_Entidades_en_curso)
 510  89B4 47           	ld b,a
 511  89B5 3A 37 89     	ld a,(Contador_de_frames)
 512  89B8 B8           	cp b
 513  89B9 20 18        	jr nz,13F
 514  89BB
 515  89BB              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 516  89BB              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 517  89BB              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 518  89BB              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 519  89BB
 520  89BB              ;	inc a
 521  89BB              ;	cp b
 522  89BB              ;	jr nz,13F
 523  89BB
 524  89BB
 525  89BB              ;23 ld (Contador_de_frames),a
 526  89BB
 527  89BB              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 528  89BB              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 529  89BB
 530  89BB 3A 10 89     21 ld a,(Numero_parcial_de_entidades)
 531  89BE 47           	ld b,a
 532  89BF 3A 11 89     	ld a,(Entidades_en_curso)
 533  89C2 B8           	cp b
 534  89C3 28 0E        	jr z,13F
 535  89C5 30 0C        	jr nc,13F
 536  89C7
 537  89C7              ; --- --- --- --- ---
 538  89C7
 539  89C7 3C           	inc a
 540  89C8 32 11 89     	ld (Entidades_en_curso),a
 541  89CB
 542  89CB              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 543  89CB
 544  89CB 3A 3A 89     	ld a,(Clock_Entidades_en_curso)
 545  89CE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 546  89CE              ;! _ IMPREDECIBLE !!!!
 547  89CE C6 32        	add 50
 548  89D0 32 3A 89     	ld (Clock_Entidades_en_curso),a
 549  89D3
 550  89D3              ; -------------------------------------------------------------------------------------------------------------
 551  89D3
 552  89D3              ; Habilita disparos.
 553  89D3
 554  89D3 21 3C 89     13 ld hl,Disparo_Amadeus
 555  89D6 11 3E 89     	ld de,CLOCK_repone_disparo_Amadeus
 556  89D9 CD 9B 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 557  89DC
 558  89DC 21 3F 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 559  89DF 11 41 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 560  89E2 CD 9B 9C     	call Habilita_disparos
 561  89E5
 562  89E5              ; COLISIONES.
 563  89E5
 564  89E5 CD CA 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 565  89E8
 566  89E8              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 567  89E8              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 568  89E8              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 569  89E8
 570  89E8 AF           	xor a
 571  89E9 32 2B 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 572  89EC
 573  89EC CD B6 8B     	call Inicia_punteros_de_cajas
 574  89EF CD D7 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 575  89F2              ; 														; _ en DRAW.
 576  89F2 3A C5 88     	ld a,(Filas)
 577  89F5 A7           	and a
 578  89F6 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 579  89F8 CD E9 8C     	call Incrementa_punteros_de_cajas
 580  89FB 18 F2        	jr 12B
 581  89FD
 582  89FD              ; ---------------------------------------------------------------------------------------
 583  89FD
 584  89FD 3A 10 89     10 ld a,(Numero_parcial_de_entidades)
 585  8A00 47               ld b,a
 586  8A01 A7           	and a
 587  8A02 20 14        	jr nz,11F
 588  8A04
 589  8A04 21 06 89     	ld hl,Ctrl_1
 590  8A07 CB 66        	bit 4,(hl)
 591  8A09 C2 A3 8A     	jp nz,16F
 592  8A0C
 593  8A0C              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 594  8A0C
 595  8A0C 21 06 89     	ld hl,Ctrl_1
 596  8A0F CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 597  8A11
 598  8A11 3A 37 89     	ld a,(Contador_de_frames)
 599  8A14 3C           	inc a
 600  8A15 32 3B 89     	ld (Activa_recarga_cajas),a
 601  8A18
 602  8A18              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 603  8A18
 604  8A18 3A 11 89     11 ld a,(Entidades_en_curso)
 605  8A1B A7           	and a
 606  8A1C CA A3 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 607  8A1F 47           	ld b,a												; No hay entidades que gestionar.
 608  8A20
 609  8A20              ; ( Código que ejecutamos con cada entidad: ).
 610  8A20
 611  8A20              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 612  8A20
 613  8A20 C5           15 push bc 												; Nº de entidades en curso.
 614  8A21
 615  8A21              ; Existe "Entidad_guía" ???.
 616  8A21              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 617  8A21
 618  8A21 3A 25 89     	ld a,(Ctrl_3)
 619  8A24 CB 4F        	bit 1,a
 620  8A26 20 05        	jr nz,22F
 621  8A28
 622  8A28              ; Activa "Entidad_guía".
 623  8A28
 624  8A28 21 04 89     	ld hl,Ctrl_2
 625  8A2B CB EE        	set 5,(hl)
 626  8A2D
 627  8A2D              ; Impacto ???
 628  8A2D
 629  8A2D 3A DE 88     22 ld a,(Impacto)
 630  8A30 A7           	and a
 631  8A31 28 31        	jr z,8F
 632  8A33
 633  8A33              ; Hay Impacto en esta entidad.
 634  8A33
 635  8A33 21 39 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 636  8A36 35           	dec (hl)
 637  8A37 C2 98 8A     	jp nz,17F
 638  8A3A
 639  8A3A              ;! Velocidad de la animación de la explosión.
 640  8A3A
 641  8A3A 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 642  8A3C              ;														; _,(velocidad de la explosión).
 643  8A3C
 644  8A3C              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 645  8A3C
 646  8A3C CD 9B 8D     	call Repone_datos_de_borrado
 647  8A3F CD F4 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 648  8A42
 649  8A42              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 650  8A42
 651  8A42 3A 04 89     	ld a,(Ctrl_2)
 652  8A45 CB 4F        	bit 1,a
 653  8A47 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 654  8A49
 655  8A49              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 656  8A49
 657  8A49 3A CD 88     	ld a,(CTRL_DESPLZ)
 658  8A4C A7           	and a
 659  8A4D 20 08        	jr nz,18F
 660  8A4F
 661  8A4F 21 84 84     	ld hl,Indice_Explosion_2x2-2
 662  8A52 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 663  8A55 18 06        	jr 19F
 664  8A57
 665  8A57 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 666  8A5A 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 667  8A5D
 668  8A5D 21 04 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 669  8A60 CB CE        	set 1,(hl)
 670  8A62 18 22        	jr 7F
 671  8A64
 672  8A64              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 673  8A64              ; _con las coordenadas de la entidad almacenada en DRAW.
 674  8A64
 675  8A64 3A 06 89     8 ld a,(Ctrl_1)
 676  8A67 CB 57        	bit 2,a
 677  8A69 28 1B        	jr z,7F
 678  8A6B
 679  8A6B 2A 2E 89     	ld hl,(Coordenadas_disparo_certero)
 680  8A6E EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 681  8A6F              ;														; E contiene la coordenada_X del disparo.
 682  8A6F 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 683  8A72              ;														; H FILA, (Coordenada_y de la entidad).
 684  8A72 A7           	and a
 685  8A73 ED 52        	sbc hl,de
 686  8A75
 687  8A75 CD E3 91     	call Determina_resultado_comparativa
 688  8A78
 689  8A78 78           	ld a,b
 690  8A79 A7           	and a
 691  8A7A 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 692  8A7C
 693  8A7C              ; ----- ----- -----
 694  8A7C
 695  8A7C 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 696  8A7E 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 697  8A81
 698  8A81 21 06 89     	ld hl,Ctrl_1
 699  8A84 CB 96        	res 2,(hl)
 700  8A86
 701  8A86 CD F4 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 702  8A89
 703  8A89 3A F3 88     	ld a,(Ctrl_0)
 704  8A8C CB 67        	bit 4,a
 705  8A8E 28 08        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 706  8A90
 707  8A90              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 708  8A90              ; [[[
 709  8A90              ;	call Detecta_disparo_entidad
 710  8A90              ; ]]]
 711  8A90 CD 97 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 712  8A93
 713  8A93 21 F3 88     	ld hl,Ctrl_0
 714  8A96 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 715  8A98
 716  8A98 CD 9C 8C     17 call Store_Restore_cajas
 717  8A9B
 718  8A9B C1           	pop bc
 719  8A9C 10 82        	djnz 15B
 720  8A9E
 721  8A9E              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 722  8A9E              ; Hemos gestionado todas las unidades.
 723  8A9E              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 724  8A9E
 725  8A9E 21 06 89     	ld hl,Ctrl_1
 726  8AA1 CB 96        	res 2,(hl)
 727  8AA3
 728  8AA3 21 25 89     16 ld hl,Ctrl_3
 729  8AA6 CB C6        	set 0,(hl)											; Frame completo.
 730  8AA8 AF           	xor a
 731  8AA9 D3 FE        	out ($fe),a
 732  8AAB FB           	ei
 733  8AAC 76           	halt
 734  8AAD
 735  8AAD              ; ----------------------------------------
 736  8AAD
 737  8AAD 3A 06 89     	ld a,(Ctrl_1) 										; Existe Loop?
 738  8AB0 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 739  8AB2 CA B1 89     	jp z,Main
 740  8AB5
 741  8AB5              ; RECARGA DE NUEVA OLEADA.
 742  8AB5
 743  8AB5 3A 37 89     	ld a,(Contador_de_frames)
 744  8AB8 47           	ld b,a
 745  8AB9 3A 3B 89     	ld a,(Activa_recarga_cajas)
 746  8ABC B8           	cp b
 747  8ABD 28 08        	jr z,20F
 748  8ABF
 749  8ABF 21 06 89     	ld hl,Ctrl_1
 750  8AC2 CB E6        	set 4,(hl)
 751  8AC4 C3 B1 89     	jp Main
 752  8AC7
 753  8AC7 21 06 89     20 ld hl,Ctrl_1
 754  8ACA CB A6        	res 4,(hl)
 755  8ACC
 756  8ACC 3A 37 89     	ld a,(Contador_de_frames)
 757  8ACF
 758  8ACF              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 759  8ACF              ;! _ IMPREDECIBLE !!!!
 760  8ACF
 761  8ACF C6 0A        	add 10
 762  8AD1 32 3A 89     	ld (Clock_Entidades_en_curso),a
 763  8AD4
 764  8AD4 C3 5C 89     	jp 4B
 765  8AD7
 766  8AD7 C9           	ret
 767  8AD8
 768  8AD8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 769  8AD8              ;
 770  8AD8              ;	16/11/23
 771  8AD8
 772  8AD8              Gestiona_Amadeus
 773  8AD8
 774  8AD8              ;! Activa/desactiva impacto con Amadeus.
 775  8AD8
 776  8AD8              ;	ld a,(Impacto)
 777  8AD8              ;	and a
 778  8AD8              ;	jr nz,2F
 779  8AD8
 780  8AD8 CD 5D 8B     	call Mov_Amadeus
 781  8ADB
 782  8ADB 3A F3 88     2 ld a,(Ctrl_0)
 783  8ADE CB 67        	bit 4,a
 784  8AE0 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 785  8AE2
 786  8AE2 CD 97 8B     	call Guarda_foto_entidad_a_pintar
 787  8AE5 CD 7B 8D     	call Guarda_datos_de_borrado_Amadeus
 788  8AE8
 789  8AE8 21 F3 88     1 ld hl,Ctrl_0
 790  8AEB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 791  8AED
 792  8AED CD 6E 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 793  8AF0
 794  8AF0              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 795  8AF0
 796  8AF0 CD 36 8C     	call Calcula_numero_de_disparotes
 797  8AF3
 798  8AF3 C9           	ret
 799  8AF4
 800  8AF4              ; --------------------------------------------------------------------------------------------------------------
 801  8AF4              ;
 802  8AF4              ;	27/05/23
 803  8AF4
 804  8AF4              Mov_obj
 805  8AF4
 806  8AF4 3A 04 89     	ld a,(Ctrl_2)
 807  8AF7 CB 4F        	bit 1,a
 808  8AF9 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 809  8AFB
 810  8AFB              ; Explosión:
 811  8AFB
 812  8AFB 3A 05 89     	ld a,(Frames_explosion)
 813  8AFE A7           	and a
 814  8AFF 20 1D        	jr nz,4F
 815  8B01
 816  8B01              ; Una alimaña menos!!!!!!!!!1
 817  8B01
 818  8B01              ; Se trataba de una Entidad_guía ???
 819  8B01
 820  8B01 3A 04 89     	ld a,(Ctrl_2)
 821  8B04 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 822  8B06 28 05        	jr z,5F
 823  8B08
 824  8B08 21 25 89     	ld hl,Ctrl_3
 825  8B0B CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 826  8B0D
 827  8B0D CD 19 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 828  8B10 21 10 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 829  8B13 35           	dec (hl)
 830  8B14 21 11 89     	ld hl,Entidades_en_curso
 831  8B17 35           	dec (hl)
 832  8B18 21 0F 89     	ld hl,Numero_de_entidades
 833  8B1B 35           	dec (hl)
 834  8B1C 18 3E        	jr 3F
 835  8B1E
 836  8B1E              ; -----
 837  8B1E
 838  8B1E              ;	`Movemos´ la explosión.
 839  8B1E
 840  8B1E 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 841  8B21 23           	inc hl
 842  8B22 23           	inc hl
 843  8B23 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 844  8B26 CD 4E 8C     	call Extrae_address
 845  8B29 22 C9 88     	ld (Puntero_objeto),hl
 846  8B2C
 847  8B2C 21 05 89     	ld hl,Frames_explosion
 848  8B2F 35           	dec (hl)
 849  8B30
 850  8B30 21 F3 88     	ld hl,Ctrl_0
 851  8B33 CB E6        	set 4,(hl)
 852  8B35
 853  8B35 18 25        	jr 3F
 854  8B37
 855  8B37 AF           2 xor a
 856  8B38 32 F3 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 857  8B3B
 858  8B3B              ; Movemos Entidades malignas.
 859  8B3B
 860  8B3B CD 46 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 861  8B3E
 862  8B3E 3A F3 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 863  8B41 CB 67        	bit 4,a
 864  8B43 C8           	ret z
 865  8B44
 866  8B44              ; Ha habido desplazamiento de la entidad maligna.
 867  8B44              ; Ha llegado a zona de AMADEUS ???
 868  8B44
 869  8B44 3A CC 88     	ld a,(Coordenada_y)
 870  8B47 FE 14        	cp $14
 871  8B49 38 08        	jr c,1F
 872  8B4B
 873  8B4B              ; ---------
 874  8B4B
 875  8B4B              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 876  8B4B              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 877  8B4B
 878  8B4B F3           	di
 879  8B4C CD 93 8F     	call Genera_coordenadas_X
 880  8B4F CD CF 8F     	call Compara_coordenadas_X
 881  8B52 FB           	ei
 882  8B53
 883  8B53              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 884  8B53
 885  8B53              ; ---------
 886  8B53
 887  8B53 CD 9E 8B     1 call Prepara_var_pintado	 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 888  8B56 CD 9B 8D     	call Repone_datos_de_borrado
 889  8B59 CD F4 8B     	call Limpia_Variables_de_borrado
 890  8B5C
 891  8B5C C9           3 ret													; _de la misma.
 892  8B5D
 893  8B5D              ; --------------------------------------------------------------------------------------------------------------
 894  8B5D              ;
 895  8B5D              ;	29/1/23
 896  8B5D
 897  8B5D              Mov_Amadeus
 898  8B5D
 899  8B5D CD 3B 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 900  8B60
 901  8B60 3A F3 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 902  8B63 CB 67        	bit 4,a
 903  8B65 C8           	ret z
 904  8B66
 905  8B66              ; ---------
 906  8B66
 907  8B66 CD 9E 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 908  8B69 CD 8B 8D     	call Repone_datos_de_borrado_Amadeus
 909  8B6C CD F4 8B     	call Limpia_Variables_de_borrado
 910  8B6F
 911  8B6F C9           	ret
 912  8B70
 913  8B70              ; -----------------------------------------------------------------------------------
 914  8B70              ;
 915  8B70              ;	12/12/23
 916  8B70              ;
 917  8B70              ;	Inicia Entidades y fija "Entidad_guía".
 918  8B70
 919  8B70 CD 54 8C     Inicia_entidad	call Inicia_Puntero_objeto
 920  8B73 CD EB 98     	call Recompone_posicion_inicio
 921  8B76 CD CA 92     	call Draw
 922  8B79
 923  8B79 E5           	push hl
 924  8B7A CD 86 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 925  8B7D E1           	pop hl
 926  8B7E
 927  8B7E CD A0 7F     	call Guarda_foto_registros
 928  8B81 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 929  8B82              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 930  8B82              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 931  8B82 CD 9C 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 932  8B85 C9           	ret
 933  8B86
 934  8B86
 935  8B86              ; --------------------------------------------------------------------------------------------------------------
 936  8B86              ;
 937  8B86              ;	12/12/23
 938  8B86              ;
 939  8B86
 940  8B86              Inicia_entidad_guia
 941  8B86
 942  8B86              ; Existe "Entidad_guía" ???
 943  8B86
 944  8B86 3A 25 89     	ld a,(Ctrl_3)
 945  8B89 CB 4F        	bit 1,a
 946  8B8B C0           	ret nz
 947  8B8C
 948  8B8C              ; Inicia Entidad_guía:
 949  8B8C
 950  8B8C 21 04 89     	ld hl,Ctrl_2
 951  8B8F CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
 952  8B91 21 25 89     	ld hl,Ctrl_3
 953  8B94 CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
 954  8B96
 955  8B96 C9           	ret
 956  8B97
 957  8B97              ; --------------------------------------------------------------------------------------------------------------
 958  8B97              ;
 959  8B97              ;	31/08/23
 960  8B97              ;
 961  8B97              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 962  8B97              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 963  8B97
 964  8B97              Guarda_foto_entidad_a_pintar
 965  8B97
 966  8B97              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 967  8B97
 968  8B97 CD CA 92     	call Draw
 969  8B9A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 970  8B9D C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 971  8B9E
 972  8B9E              ; --------------------------------------------------------------------------------------------------------------
 973  8B9E              ;
 974  8B9E              ;	19/9/23
 975  8B9E
 976  8B9E 21 C5 88     Prepara_var_pintado ld hl,Filas
 977  8BA1 11 E5 88     	ld de,Variables_de_pintado
 978  8BA4 01 08 00     	ld bc,8
 979  8BA7 ED B0        	ldir
 980  8BA9 C9           	ret
 981  8BAA
 982  8BAA              ; --------------------------------------------------------------------------------------------------------------
 983  8BAA
 984  8BAA 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
 985  8BAD 11 C5 88     	ld de,Filas
 986  8BB0 01 08 00     	ld bc,8
 987  8BB3 ED B0        	ldir
 988  8BB5 C9           	ret
 989  8BB6
 990  8BB6              ; *************************************************************************************************************************************************************
 991  8BB6              ;
 992  8BB6              ; 8/1/23
 993  8BB6              ;
 994  8BB6              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 995  8BB6              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 996  8BB6              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 997  8BB6
 998  8BB6              ; Destruye HL y DE !!!!!
 999  8BB6
1000  8BB6              Inicia_punteros_de_cajas
1001  8BB6
1002  8BB6 21 6C 85     	ld hl,Indice_de_cajas
1003  8BB9 CD 4E 8C         call Extrae_address
1004  8BBC 22 09 89         ld (Puntero_store_caja),hl
1005  8BBF 21 6E 85     	ld hl,Indice_de_cajas+2
1006  8BC2 22 0D 89     	ld (Indice_restore_caja),hl
1007  8BC5 CD 4E 8C     	call Extrae_address
1008  8BC8 22 0B 89     	ld (Puntero_restore_caja),hl
1009  8BCB C9               ret
1010  8BCC
1011  8BCC              ; *************************************************************************************************************************************************************
1012  8BCC              ;
1013  8BCC              ; 8/1/23
1014  8BCC              ;
1015  8BCC              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1016  8BCC
1017  8BCC 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1018  8BCF 22 27 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1019  8BD2 C9           	ret
1020  8BD3 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1021  8BD6 22 29 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1022  8BD9 C9           	ret
1023  8BDA
1024  8BDA              ; -------------------------------------------------------------------------------------------------------------
1025  8BDA              ;
1026  8BDA              ; 21/9/23
1027  8BDA              ;
1028  8BDA
1029  8BDA              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1030  8BDA
1031  8BDA              Limpia_album_Amadeus
1032  8BDA
1033  8BDA 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1034  8BDD 7E           	ld a,(hl)
1035  8BDE A7           	and a
1036  8BDF C8           	ret z
1037  8BE0
1038  8BE0 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1039  8BE3 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1040  8BE6 01 0B 00     	ld bc,11
1041  8BE9 AF           	xor a
1042  8BEA 77           	ld (hl),a
1043  8BEB ED B0        	ldir
1044  8BED
1045  8BED 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1046  8BF0 22 23 89     	ld (End_Snapshot_Amadeus),hl
1047  8BF3
1048  8BF3 C9           	ret
1049  8BF4
1050  8BF4 21 DF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1051  8BF7 11 E0 88     	ld de,Variables_de_borrado+1
1052  8BFA 01 05 00     	ld bc,5
1053  8BFD AF           	xor a
1054  8BFE 77           	ld (hl),a
1055  8BFF ED B0        	ldir
1056  8C01 C9           	ret
1057  8C02
1058  8C02              ; -------------------------------------------------------------------------------------------------------------
1059  8C02              ;
1060  8C02              ; 8/9/23
1061  8C02              ;
1062  8C02
1063  8C02              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1064  8C02              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1065  8C02
1066  8C02              Calcula_numero_de_malotes
1067  8C02
1068  8C02 21 00 70     	ld hl,Album_de_fotos
1069  8C05 EB           	ex de,hl
1070  8C06 2A 1D 89     	ld hl,(Stack_snapshot)
1071  8C09
1072  8C09 06 00        	ld b,0
1073  8C0B 7D           	ld a,l
1074  8C0C 93           	sub e
1075  8C0D 28 07        	jr z,1F
1076  8C0F
1077  8C0F              ; Nº de malotes no es "0".
1078  8C0F
1079  8C0F D6 06        2 sub 6
1080  8C11 04           	inc b
1081  8C12 A7           	and a
1082  8C13 20 FA        	jr nz,2B
1083  8C15 78           	ld a,b
1084  8C16
1085  8C16 32 12 89     1 ld (Numero_de_malotes),a
1086  8C19 C9           	ret
1087  8C1A
1088  8C1A              ; -------------------------------------------------------------------------------------------------------------
1089  8C1A              ;
1090  8C1A              ; 8/9/23
1091  8C1A              ;
1092  8C1A
1093  8C1A              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1094  8C1A              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1095  8C1A
1096  8C1A              Calcula_malotes_Amadeus
1097  8C1A
1098  8C1A 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1099  8C1D EB           	ex de,hl
1100  8C1E 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1101  8C21
1102  8C21 7C           	ld a,h
1103  8C22 A7           	and a
1104  8C23 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1105  8C25
1106  8C25 06 00        	ld b,0
1107  8C27 7D           	ld a,l
1108  8C28 93           	sub e
1109  8C29 28 07        	jr z,1F
1110  8C2B
1111  8C2B              ; Nº de malotes no es "0".
1112  8C2B
1113  8C2B D6 06        2 sub 6
1114  8C2D 04           	inc b
1115  8C2E A7           	and a
1116  8C2F 20 FA        	jr nz,2B
1117  8C31 78           	ld a,b
1118  8C32
1119  8C32 32 12 89     1 ld (Numero_de_malotes),a
1120  8C35 C9           	ret
1121  8C36
1122  8C36              ; -------------------------------------------------------------------------------------------------------------
1123  8C36              ;
1124  8C36              ; 28/2/23
1125  8C36              ;
1126  8C36
1127  8C36              Calcula_numero_de_disparotes
1128  8C36
1129  8C36 21 56 70     	ld hl,Album_de_fotos_disparos
1130  8C39 EB           	ex de,hl
1131  8C3A 2A 21 89     	ld hl,(End_Snapshot_disparos)
1132  8C3D
1133  8C3D 06 00        	ld b,0
1134  8C3F 7D           	ld a,l
1135  8C40 93           	sub e
1136  8C41 28 07        	jr z,1F
1137  8C43
1138  8C43              ; Nº de malotes no es "0".
1139  8C43
1140  8C43 D6 06        2 sub 6
1141  8C45 04           	inc b
1142  8C46 A7           	and a
1143  8C47 20 FA        	jr nz,2B
1144  8C49 78           	ld a,b
1145  8C4A
1146  8C4A 32 26 89     1 ld (Numero_de_disparotes),a
1147  8C4D C9           	ret
1148  8C4E
1149  8C4E              ; *************************************************************************************************************************************************************
1150  8C4E              ;
1151  8C4E              ; 20/10/22
1152  8C4E              ;
1153  8C4E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1154  8C4E              ;
1155  8C4E              ; Destruye el puntero y DE !!!!!
1156  8C4E
1157  8C4E 5E           Extrae_address ld e,(hl)
1158  8C4F 23           	inc hl
1159  8C50 56           	ld d,(hl)
1160  8C51 2B           	dec hl
1161  8C52 EB           	ex de,hl
1162  8C53 C9           	ret
1163  8C54
1164  8C54              ; *************************************************************************************************************************************************************
1165  8C54              ;
1166  8C54              ;	7/2/23
1167  8C54              ;
1168  8C54              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1169  8C54              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1170  8C54              ;
1171  8C54              ;   Destruye HL y BC !!!!!,
1172  8C54              ;
1173  8C54              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1174  8C54              ;					"0" ..... Izquierda.
1175  8C54
1176  8C54              Inicia_Puntero_objeto
1177  8C54
1178  8C54 3A D9 88     	ld a,(Cuad_objeto)
1179  8C57 E6 01        	and 1
1180  8C59 F5           	push af
1181  8C5A CC 78 8C     	call z,Inicia_puntero_objeto_izq
1182  8C5D F1           	pop af
1183  8C5E 28 2B        	jr z,1F
1184  8C60 CD 65 8C     	call Inicia_puntero_objeto_der
1185  8C63 18 26        	jr 1F
1186  8C65
1187  8C65              ; Arrancamos desde la parte izquierda de la pantalla.
1188  8C65              ; Iniciamos (Indice_Sprite_der).
1189  8C65
1190  8C65 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1191  8C68 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1192  8C6B CD 4E 8C     	call Extrae_address
1193  8C6E 22 C9 88     	ld (Puntero_objeto),hl
1194  8C71
1195  8C71 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1196  8C74 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1197  8C77 C9           	ret
1198  8C78
1199  8C78              ; Arrancamos desde la parte derecha de la pantalla.
1200  8C78              ; Iniciamos (Indice_Sprite_izq).
1201  8C78
1202  8C78 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1203  8C7B 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1204  8C7E CD 4E 8C     	call Extrae_address
1205  8C81 22 C9 88     	ld (Puntero_objeto),hl
1206  8C84
1207  8C84 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1208  8C87 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1209  8C8A C9           	ret
1210  8C8B
1211  8C8B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1212  8C8B
1213  8C8B 21 40 83     1 ld hl,Amadeus
1214  8C8E ED 4B C9 88  	ld bc,(Puntero_objeto)
1215  8C92 B7 ED 42     	sub hl,bc
1216  8C95 C0           	ret nz
1217  8C96 21 F3 88     	ld hl,Ctrl_0
1218  8C99 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1219  8C9B C9           	ret 												; _de nuestra nave en los extremos.
1220  8C9C
1221  8C9C              ; *************************************************************************************************************************************************************
1222  8C9C              ;
1223  8C9C              ;	14/5/23
1224  8C9C              ;
1225  8C9C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1226  8C9C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1227  8C9C
1228  8C9C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1229  8C9C              ;	_de la 2ª y 3ª entidad respectivamente.
1230  8C9C
1231  8C9C              Store_Restore_cajas
1232  8C9C
1233  8C9C E5           	push hl
1234  8C9D D5           	push de
1235  8C9E C5            	push bc
1236  8C9F
1237  8C9F              ;	STORE !!!!!
1238  8C9F              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1239  8C9F
1240  8C9F 21 C5 88     	ld hl,Filas
1241  8CA2 ED 5B 09 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1242  8CA6 01 41 00     	ld bc,65
1243  8CA9 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1244  8CAB
1245  8CAB              ; 	Entidad_sospechosa. 20/4/23
1246  8CAB
1247  8CAB 3A DE 88     	ld a,(Impacto)
1248  8CAE A7           	and a
1249  8CAF 28 0C        	jr z,1F
1250  8CB1
1251  8CB1 2A 09 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1252  8CB4 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1253  8CB7 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1254  8CB8 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1255  8CBA 22 2C 89     	ld (Entidad_sospechosa_de_colision),hl
1256  8CBD
1257  8CBD              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1258  8CBD
1259  8CBD 2A 0B 89     1 ld hl,(Puntero_restore_caja)
1260  8CC0 7E           	ld a,(hl)
1261  8CC1 A7           	and a
1262  8CC2 F5           	push af
1263  8CC3 28 08        	jr z,2F
1264  8CC5
1265  8CC5 11 C5 88     	ld de,Filas
1266  8CC8 01 41 00     	ld bc,65
1267  8CCB ED B0        	ldir
1268  8CCD
1269  8CCD CD E9 8C     2 call Incrementa_punteros_de_cajas
1270  8CD0
1271  8CD0 F1           	pop af
1272  8CD1 28 EA        	jr z,1B
1273  8CD3
1274  8CD3 C1           	pop bc
1275  8CD4 D1           	pop de
1276  8CD5 E1           	pop hl
1277  8CD6
1278  8CD6 C9           	ret
1279  8CD7
1280  8CD7              ; **************************************************************************************************
1281  8CD7              ;
1282  8CD7              ;	12/05/23
1283  8CD7              ;
1284  8CD7              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1285  8CD7
1286  8CD7 E5           Restore_entidad push hl
1287  8CD8 D5           	push de
1288  8CD9 C5            	push bc
1289  8CDA
1290  8CDA 2A 09 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1291  8CDD 11 C5 88     	ld de,Filas
1292  8CE0 01 41 00     	ld bc,65
1293  8CE3 ED B0        	ldir
1294  8CE5
1295  8CE5 C1           	pop bc
1296  8CE6 D1           	pop de
1297  8CE7 E1           	pop hl
1298  8CE8 C9           	ret
1299  8CE9
1300  8CE9              ; **************************************************************************************************
1301  8CE9              ;
1302  8CE9              ;	08/05/23
1303  8CE9              ;
1304  8CE9              ;	Incrementamos los dos punteros de entidades. (+1).
1305  8CE9
1306  8CE9              Incrementa_punteros_de_cajas
1307  8CE9
1308  8CE9 2A 0B 89     	ld hl,(Puntero_restore_caja)
1309  8CEC 22 09 89     	ld (Puntero_store_caja),hl
1310  8CEF 2A 0D 89     	ld hl,(Indice_restore_caja)
1311  8CF2 23           	inc hl
1312  8CF3 23           	inc hl
1313  8CF4 22 0D 89     	ld (Indice_restore_caja),hl
1314  8CF7 CD 4E 8C         call Extrae_address
1315  8CFA 22 0B 89         ld (Puntero_restore_caja),hl
1316  8CFD C9               ret
1317  8CFE
1318  8CFE              ; **************************************************************************************************
1319  8CFE              ;
1320  8CFE              ;	25/01/23
1321  8CFE              ;
1322  8CFE              ;	Restore_Amadeus
1323  8CFE              ;
1324  8CFE              ;	Cargamos en DRAW los parámetros de Amadeus.
1325  8CFE              ;
1326  8CFE
1327  8CFE E5           Restore_Amadeus	push hl
1328  8CFF D5           	push de
1329  8D00 C5            	push bc
1330  8D01 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1331  8D04 11 C5 88     	ld de,Filas
1332  8D07 01 41 00     	ld bc,65
1333  8D0A ED B0        	ldir
1334  8D0C C1           	pop bc
1335  8D0D D1           	pop de
1336  8D0E E1           	pop hl
1337  8D0F C9           	ret
1338  8D10
1339  8D10              ; *************************************************************************************************************************************************************
1340  8D10              ;
1341  8D10              ;	29/04/23
1342  8D10              ;
1343  8D10              ;	Store_Amadeus
1344  8D10              ;
1345  8D10              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1346  8D10              ;
1347  8D10              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1348  8D10              ;
1349  8D10              ;	DESTRUYE: HL y BC y DE.
1350  8D10
1351  8D10 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1352  8D13 01 41 00     	ld bc,65
1353  8D16 ED B0        	ldir
1354  8D18 C9           	ret
1355  8D19
1356  8D19              ; -----------------------------------------------------------
1357  8D19              ;
1358  8D19              ;	27/04/23
1359  8D19              ;
1360  8D19              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1361  8D19              ;
1362  8D19              ;	Destruye: HL,BC,DE,A
1363  8D19
1364  8D19 21 C5 88     Borra_datos_entidad ld hl,Filas
1365  8D1C 01 40 00     	ld bc,64
1366  8D1F AF           	xor a
1367  8D20 77           	ld (hl),a
1368  8D21 11 C6 88     	ld de,Filas+1
1369  8D24 ED B0        	ldir
1370  8D26 C9           	ret
1371  8D27
1372  8D27              ; -----------------------------------------------------------
1373  8D27
1374  8D27              ; Teclado.
1375  8D27
1376  8D27 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1377  8D29 DB FE        	in a,($fe)
1378  8D2B E6 01        	and $01
1379  8D2D 28 02        	jr z,1f
1380  8D2F 18 F6        	jr Pulsa_ENTER
1381  8D31 C9           1 ret
1382  8D32
1383  8D32              ; **************************************************************************************************
1384  8D32              ;
1385  8D32              ; Temporización.
1386  8D32
1387  8D32              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1388  8D32              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1389  8D32              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1390  8D32              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1391  8D32
1392  8D32              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1393  8D32              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1394  8D32              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1395  8D32
1396  8D32              ; A partir de $4f61 no hace falta DELAY.
1397  8D32
1398  8D32              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1399  8D32
1400  8D32 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1401  8D35 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1402  8D36 78           	LD A,B
1403  8D37 A7           	AND A
1404  8D38 20 FB        	JR NZ,wait
1405  8D3A C9           	RET
1406  8D3B
1407  8D3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1408  8D3B              ;
1409  8D3B              ;	5/3/23
1410  8D3B              ;
1411  8D3B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1412  8D3B
1413  8D3B              Movimiento_Amadeus
1414  8D3B
1415  8D3B              ; Disparo.
1416  8D3B
1417  8D3B 3A 3C 89     	ld a,(Disparo_Amadeus)
1418  8D3E A7           	and a
1419  8D3F 20 02        	jr nz,1F
1420  8D41 18 15        	jr 2F
1421  8D43
1422  8D43 3E F7        1 ld a,$f7													; "5" para disparar.
1423  8D45 DB FE        	in a,($fe)
1424  8D47 E6 10        	and $10
1425  8D49
1426  8D49 F5           	push af
1427  8D4A CC F6 8D     	call z,Genera_disparo
1428  8D4D F1           	pop af
1429  8D4E 20 08        	jr nz,2F
1430  8D50
1431  8D50 3A 3C 89     	ld a,(Disparo_Amadeus)
1432  8D53 EE 01        	xor 1
1433  8D55 32 3C 89     	ld (Disparo_Amadeus),a
1434  8D58 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1435  8D5A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1436  8D5C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1437  8D5E CC A5 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1438  8D61
1439  8D61 3E F7        	ld a,$f7
1440  8D63 DB FE        	in a,($fe)
1441  8D65 E6 01        	and $01
1442  8D67 C8           	ret z
1443  8D68
1444  8D68 3E F7        	ld a,$f7
1445  8D6A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1446  8D6C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1447  8D6E CC 87 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1448  8D71 C9           	ret
1449  8D72
1450  8D72              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1451  8D72              ;
1452  8D72              ;	Rutina provisional para que los malotes cagen balas.
1453  8D72
1454  8D72              Detecta_disparo_entidad
1455  8D72
1456  8D72 3A 3F 89     	ld a,(Disparo_entidad)
1457  8D75 A7           	and a
1458  8D76 C8           	ret z
1459  8D77
1460  8D77              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1461  8D77
1462  8D77              ;	ld a,$7f				; Detecta SPACE.
1463  8D77              ;	in a,($fe)
1464  8D77              ;	and 1
1465  8D77              ;	ret nz
1466  8D77
1467  8D77 CD F6 8D     	call Genera_disparo
1468  8D7A C9           	ret
1469  8D7B
1470  8D7B              ; ----------------------------------------------------------------------
1471  8D7B              ;
1472  8D7B              ;	8/9/23
1473  8D7B
1474  8D7B 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1475  8D7E 2B            	dec hl
1476  8D7F 7E           	ld a,(hl)
1477  8D80 A7           	and a
1478  8D81 C8           	ret z										; Salimos si es álbum está vacío.
1479  8D82
1480  8D82 11 E4 88     	ld de,Variables_de_borrado+5
1481  8D85 01 06 00     	ld bc,6
1482  8D88 ED B8        	lddr
1483  8D8A C9           	ret
1484  8D8B
1485  8D8B              ; ----------------------------------------------------------------------
1486  8D8B              ;
1487  8D8B              ;	9/9/23
1488  8D8B
1489  8D8B              Repone_datos_de_borrado_Amadeus
1490  8D8B
1491  8D8B 21 DF 88     	ld hl,Variables_de_borrado
1492  8D8E 11 AC 70     	ld de,Album_de_fotos_Amadeus
1493  8D91 01 06 00     	ld bc,6
1494  8D94 ED B0        	ldir
1495  8D96
1496  8D96 EB           	ex de,hl
1497  8D97 22 23 89     	ld (End_Snapshot_Amadeus),hl
1498  8D9A
1499  8D9A C9           	ret
1500  8D9B
1501  8D9B              ; ----------------------------------------------------------------------
1502  8D9B              ;
1503  8D9B              ;	27/10/23
1504  8D9B              ;
1505  8D9B
1506  8D9B              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1507  8D9B              ;	_ Album_de_fotos correspondiente.
1508  8D9B
1509  8D9B              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1510  8D9B              ;	_ durante el proceso de escritura.
1511  8D9B
1512  8D9B              Repone_datos_de_borrado
1513  8D9B
1514  8D9B F3           	di
1515  8D9C
1516  8D9C ED 5B 1D 89  	ld de,(Stack_snapshot)
1517  8DA0 21 DF 88     	ld hl,Variables_de_borrado
1518  8DA3 01 06 00     	ld bc,6
1519  8DA6 ED B0        	ldir
1520  8DA8 FB           	ei
1521  8DA9
1522  8DA9 EB           	ex de,hl
1523  8DAA 22 1D 89     	ld (Stack_snapshot),hl
1524  8DAD
1525  8DAD C9           	ret
1526  8DAE
1527  8DAE              ; -----------------------------------------------------------------------------------
1528  8DAE
1529  8DAE              Pinta_Amadeus
1530  8DAE
1531  8DAE 3E 06        	ld a,6
1532  8DB0 D3 FE            out ($fe),a										; Amarillo
1533  8DB2
1534  8DB2 CD 1A 8C        	call Calcula_malotes_Amadeus
1535  8DB5 CD 5A 96     	call Extrae_foto_Amadeus
1536  8DB8 CD DA 8B     	call Limpia_album_Amadeus
1537  8DBB
1538  8DBB C9           	ret
1539  8DBC
1540  8DBC              Pinta_entidades
1541  8DBC
1542  8DBC              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1543  8DBC
1544  8DBC 3A 25 89     	ld a,(Ctrl_3)
1545  8DBF CB 47        	bit 0,a
1546  8DC1 C8           	ret z
1547  8DC2
1548  8DC2 CD 02 8C     	call Calcula_numero_de_malotes
1549  8DC5 CD D8 95     	call Extrae_foto_entidades
1550  8DC8 CD 0A 80     	call Limpia_y_reinicia_Stack_Snapshot
1551  8DCB
1552  8DCB C9           	ret
1553  8DCC
1554  8DCC              ; -----------------------------------------------------------------------------------
1555  8DCC              ;
1556  8DCC              ;	10/12/23
1557  8DCC              ;
1558  8DCC              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1559  8DCC
1560  8DCC              Actualiza_relojes
1561  8DCC
1562  8DCC 3A 25 89     	ld a,(Ctrl_3)
1563  8DCF CB 47        	bit 0,a
1564  8DD1 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1565  8DD2
1566  8DD2 21 37 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1567  8DD5 34           	inc (hl)
1568  8DD6
1569  8DD6 34           	inc (hl)
1570  8DD7 35           	dec (hl)
1571  8DD8 C0           	ret nz
1572  8DD9
1573  8DD9 21 38 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1574  8DDC 34           	inc (hl)
1575  8DDD C9           	ret
1576  8DDE
1577  8DDE              ; ---------------------------------------------------------------
1578  8DDE              ;
1579  8DDE              ;	27/9/23
1580  8DDE
1581  8DDE              Guarda_parametros_DRAW
1582  8DDE
1583  8DDE 21 C5 88     	ld hl,Filas
1584  8DE1 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1585  8DE4 01 41 00     	ld bc,65
1586  8DE7 ED B0        	ldir
1587  8DE9 C9           	ret
1588  8DEA
1589  8DEA              Recupera_parametros_DRAW
1590  8DEA
1591  8DEA 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1592  8DED 11 C5 88     	ld de,Filas
1593  8DF0 01 41 00     	ld bc,65
1594  8DF3 ED B0        	ldir
1595  8DF5 C9           	ret
1596  8DF6
1597  8DF6              ; ---------------------------------------------------------------
1598  8DF6
1599  8DF6              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DF6              ; ******************************************************************************************************************************************************************************************
   2+ 8DF6              ;
   3+ 8DF6              ;   21/07/23
   4+ 8DF6              ;
   5+ 8DF6              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DF6              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DF6              ;
   8+ 8DF6              ;
   9+ 8DF6              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DF6              ;
  11+ 8DF6              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DF6              ;               _ hacen las entidades hacia abajo.
  13+ 8DF6              ;
  14+ 8DF6              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DF6              ;
  16+ 8DF6              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DF6              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DF6              ;
  19+ 8DF6              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DF6              ;           _ la bala.
  21+ 8DF6              ;
  22+ 8DF6              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DF6              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DF6              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DF6              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DF6              ;           _ en el momento de generarse la bala)).
  27+ 8DF6
  28+ 8DF6              Genera_disparo
  29+ 8DF6
  30+ 8DF6              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DF6              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DF6              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DF6              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DF6              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DF6              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DF6              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DF6
  38+ 8DF6              ; Exclusiones:
  39+ 8DF6
  40+ 8DF6 3A DD 88         ld a,(Vel_down)
  41+ 8DF9 47               ld b,a
  42+ 8DFA 3A 36 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8DFD B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8DFE D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8DFF 3A 00 89         ld a,(Columnas)
  46+ 8E02 47               ld b,a
  47+ 8E03 3A C6 88         ld a,(Columns)
  48+ 8E06 B8               cp b
  49+ 8E07 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E08
  51+ 8E08              ; ----- ----- -----
  52+ 8E08
  53+ 8E08 3A F3 88         ld a,(Ctrl_0)
  54+ 8E0B CB 77            bit 6,a
  55+ 8E0D 20 06            jr nz,14F
  56+ 8E0F
  57+ 8E0F 3A CC 88         ld a,(Coordenada_y)
  58+ 8E12 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E14 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E15
  61+ 8E15 21 00 80     14 ld hl,Indice_disparo
  62+ 8E18 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8E1B 4F               ld c,a
  64+ 8E1C 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E1E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E1E              ;                                            ""        ""       "f9", B="1"
  67+ 8E1E              ;                                            ""        ""       "fb", B="2"
  68+ 8E1E              ;                                            ""        ""       "fb", B="3"
  69+ 8E1E A7               and a
  70+ 8E1F 28 10            jr z,1F
  71+ 8E21 E6 01            and 1
  72+ 8E23 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E24
  74+ 8E24 79               ld a,c
  75+ 8E25 16 F9            ld d,$f9
  76+ 8E27 23           2 inc hl
  77+ 8E28 23               inc hl
  78+ 8E29 04               inc b
  79+ 8E2A BA               cp d
  80+ 8E2B 28 04            jr z,1F
  81+ 8E2D 14               inc d
  82+ 8E2E 14               inc d
  83+ 8E2F 18 F6            jr 2B
  84+ 8E31
  85+ 8E31 CD 4E 8C     1 call Extrae_address
  86+ 8E34 E5               push hl
  87+ 8E35 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E37 DD 21 A0 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E3B
  90+ 8E3B              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E3B              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E3B
  93+ 8E3B 3A F3 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E3E CB 77            bit 6,a
  95+ 8E40 20 04            jr nz,19F
  96+ 8E42
  97+ 8E42 AF               xor a
  98+ 8E43 32 3F 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E46
 100+ 8E46 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8E49 FE 02            cp 2
 102+ 8E4B 38 66            jr c,3F
 103+ 8E4D 28 64            jr z,3F
 104+ 8E4F
 105+ 8E4F              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E4F
 107+ 8E4F E6 01            and 1
 108+ 8E51 28 30            jr z,4F
 109+ 8E53
 110+ 8E53              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E53              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E53              ;
 113+ 8E53              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E53              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E53              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E53
 117+ 8E53 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8E56
 119+ 8E56              ;   Amadeus o entidad ???.
 120+ 8E56
 121+ 8E56 3A F3 88         ld a,(Ctrl_0)
 122+ 8E59 CB 77            bit 6,a
 123+ 8E5B 28 0A            jr z,8F
 124+ 8E5D
 125+ 8E5D              ; 	Dispara Amadeus.
 126+ 8E5D
 127+ 8E5D 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E5F CD C9 95         call PreviousScan
 129+ 8E62 CD C9 95         call PreviousScan
 130+ 8E65
 131+ 8E65              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E65              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E65              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E65              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E65
 136+ 8E65 18 11            jr 10F
 137+ 8E67
 138+ 8E67              ; 	Dispara Entidad.
 139+ 8E67
 140+ 8E67 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E6A              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E6A
 143+ 8E6A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E6A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E6A
 146+ 8E6A C5               push bc
 147+ 8E6B 06 10            ld b,16
 148+ 8E6D CD BA 95     9 call NextScan
 149+ 8E70 10 FB            djnz 9B
 150+ 8E72 C1               pop bc
 151+ 8E73 CD DD 8E         call Ajusta_disparo_parte_izquierda
 152+ 8E76 18 06            jr 17F
 153+ 8E78
 154+ 8E78              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8E78              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8E78              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8E78              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8E78
 159+ 8E78 CD DD 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8E7B CD 52 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8E7E              ;                                                      ; _al generar el disparo.
 162+ 8E7E
 163+ 8E7E              ; 	LLegados a este punto tendremos:
 164+ 8E7E              ;
 165+ 8E7E              ;       Puntero_objeto_disparo en IY.
 166+ 8E7E              ;       Rutinas_de_impresion en IX.
 167+ 8E7E              ;       Puntero_de_impresion en HL.
 168+ 8E7E              ;       Impacto/Dirección en BC.
 169+ 8E7E
 170+ 8E7E CD E5 8E     17 call Almacena_disparo
 171+ 8E81 18 52            jr 6F                                             ; RET.
 172+ 8E83
 173+ 8E83              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8E83              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8E83              ;
 176+ 8E83              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8E83              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8E83              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8E83
 180+ 8E83 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8E86
 182+ 8E86              ;   Amadeus o entidad ???.
 183+ 8E86
 184+ 8E86 3A F3 88         ld a,(Ctrl_0)
 185+ 8E89 CB 77            bit 6,a
 186+ 8E8B 28 0A            jr z,11F
 187+ 8E8D
 188+ 8E8D              ; 	Dispara Amadeus.
 189+ 8E8D
 190+ 8E8D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8E8F CD C9 95         call PreviousScan
 192+ 8E92 CD C9 95         call PreviousScan
 193+ 8E95
 194+ 8E95              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E95              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E95              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E95              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E95
 199+ 8E95 18 11            jr 13F
 200+ 8E97
 201+ 8E97              ; 	Dispara Entidad.
 202+ 8E97
 203+ 8E97 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E9A              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E9A
 206+ 8E9A              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E9A              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E9A
 209+ 8E9A C5               push bc
 210+ 8E9B 06 10            ld b,16
 211+ 8E9D CD BA 95     12 call NextScan
 212+ 8EA0 10 FB            djnz 12B
 213+ 8EA2 C1               pop bc
 214+ 8EA3
 215+ 8EA3 CD D6 8E         call Ajusta_disparo_parte_derecha
 216+ 8EA6 18 06            jr 18F
 217+ 8EA8
 218+ 8EA8              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EA8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EA8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EA8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EA8
 223+ 8EA8 CD D6 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8EAB CD 52 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EAE              ;                                                       ; _al generar el disparo.
 226+ 8EAE
 227+ 8EAE              ; LLegados a este punto tendremos:
 228+ 8EAE              ;
 229+ 8EAE              ;       Puntero_objeto_disparo en IY.
 230+ 8EAE              ;       Rutinas_de_impresion en IX.
 231+ 8EAE              ;       Puntero_de_impresion en HL.
 232+ 8EAE              ;       Impacto/Dirección en BC.
 233+ 8EAE
 234+ 8EAE CD E5 8E     18 call Almacena_disparo
 235+ 8EB1 18 22            jr 6F                                               ; RET.
 236+ 8EB3
 237+ 8EB3              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EB3
 239+ 8EB3 28 11        3 jr z,5F
 240+ 8EB5
 241+ 8EB5              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EB5              ;
 243+ 8EB5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EB5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EB5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EB5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EB5
 248+ 8EB5              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EB5              ;	   ""        ""       "f9", B="1"
 250+ 8EB5              ;	   ""        ""       "fb", B="2"
 251+ 8EB5              ; 	   ""        ""       "fb", B="3"
 252+ 8EB5
 253+ 8EB5 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8EB8 CD BA 95     	call NextScan
 255+ 8EBB
 256+ 8EBB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EBB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EBB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EBB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EBB
 261+ 8EBB CD DD 8E         call Ajusta_disparo_parte_izquierda
 262+ 8EBE
 263+ 8EBE              ; 	No se produce impacto. B="$80"
 264+ 8EBE              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EBE
 266+ 8EBE 01 80 80         ld bc,$8080
 267+ 8EC1
 268+ 8EC1              ; 	LLegados a este punto tendremos:
 269+ 8EC1              ;
 270+ 8EC1              ;       Puntero_objeto_disparo en IY.
 271+ 8EC1              ;       Rutinas_de_impresion en IX.
 272+ 8EC1              ;       Puntero_de_impresion en HL.
 273+ 8EC1              ;       Impacto/Dirección en BC.
 274+ 8EC1
 275+ 8EC1 CD E5 8E         call Almacena_disparo
 276+ 8EC4 18 0F            jr 6F                                           ; RET.
 277+ 8EC6
 278+ 8EC6              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8EC6              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8EC6              ;
 281+ 8EC6              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8EC6              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8EC6              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8EC6              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8EC6
 286+ 8EC6 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8EC9 CD BA 95     	call NextScan
 288+ 8ECC
 289+ 8ECC              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8ECC              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8ECC              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8ECC              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8ECC
 294+ 8ECC CD D6 8E         call Ajusta_disparo_parte_derecha
 295+ 8ECF
 296+ 8ECF              ; 	No se produce impacto. B="$80"
 297+ 8ECF              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8ECF
 299+ 8ECF 01 80 80     15 ld bc,$8080
 300+ 8ED2
 301+ 8ED2              ; 	LLegados a este punto tendremos:
 302+ 8ED2              ;
 303+ 8ED2              ;       Puntero_objeto_disparo en IY.
 304+ 8ED2              ;       Rutinas_de_impresion en IX.
 305+ 8ED2              ;       Puntero_de_impresion en HL.
 306+ 8ED2              ;       Impacto/Dirección en BC.
 307+ 8ED2
 308+ 8ED2 CD E5 8E         call Almacena_disparo
 309+ 8ED5
 310+ 8ED5 C9           6 ret
 311+ 8ED6
 312+ 8ED6              ; ----------------------------------------------------------------
 313+ 8ED6              ;
 314+ 8ED6              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8ED6              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8ED6              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8ED6
 318+ 8ED6 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8ED7 FE 02            cp 2
 320+ 8ED9 38 01            jr c,1F
 321+ 8EDB 23               inc hl
 322+ 8EDC C9           1 ret
 323+ 8EDD
 324+ 8EDD 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8EDE FE 01        	cp 1
 326+ 8EE0 20 01        	jr nz,1F
 327+ 8EE2 2B           	dec hl
 328+ 8EE3 2B           1 dec hl
 329+ 8EE4 C9               ret
 330+ 8EE5
 331+ 8EE5              ; ----------------------------------------------------------------
 332+ 8EE5              ;
 333+ 8EE5              ;   25/02/23
 334+ 8EE5              ;
 335+ 8EE5              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8EE5              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8EE5              ;
 338+ 8EE5              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8EE5              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8EE5
 341+ 8EE5              Almacena_disparo
 342+ 8EE5
 343+ 8EE5 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8EE6 F1               pop af
 345+ 8EE7 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8EE8
 347+ 8EE8 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8EE9 E6 01            and 1
 349+ 8EEB 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8EED              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8EED              ; 	Dispara AMADEUS.
 352+ 8EED
 353+ 8EED              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8EED              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8EED              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8EED              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8EED
 358+ 8EED C5               push bc
 359+ 8EEE 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8EF1 2A 29 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8EF4 A7               and a
 362+ 8EF5 ED 42            sbc hl,bc
 363+ 8EF7 CC D3 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8EFA C1               pop bc
 365+ 8EFB 28 54            jr z,4F
 366+ 8EFD
 367+ 8EFD 2A 29 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F00 23               inc hl
 369+ 8F01 23               inc hl
 370+ 8F02 22 29 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F05              ;                                                   ; _ Disparo_(+1).
 372+ 8F05 18 18            jr 2F
 373+ 8F07
 374+ 8F07              ; Dispara una entidad.
 375+ 8F07
 376+ 8F07 C5           1 push bc
 377+ 8F08 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F0B 2A 27 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F0E A7               and a
 380+ 8F0F ED 42            sbc hl,bc
 381+ 8F11 CC CC 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F14 C1               pop bc
 383+ 8F15 28 3A            jr z,4F
 384+ 8F17
 385+ 8F17 2A 27 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F1A 23               inc hl
 387+ 8F1B 23               inc hl
 388+ 8F1C 22 27 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F1F              ;                                                   ; _ Disparo_(+1).
 390+ 8F1F CD 4E 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F22              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F22              ;
 393+ 8F22              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F22              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F22              ;                                                     Puntero_de_impresion en HL.
 396+ 8F22              ;                                                     Impacto/Dirección en BC.
 397+ 8F22
 398+ 8F22 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F23 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F24 23               inc hl                                          ; _ al siguiente.
 401+ 8F25 A7               and a
 402+ 8F26 20 C0            jr nz,3B
 403+ 8F28
 404+ 8F28 08               ex af,af
 405+ 8F29 ED 73 17 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F2D F9               ld sp,hl
 407+ 8F2E
 408+ 8F2E DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F30 F5               push af                                         ; Puntero de impresión.
 410+ 8F31 FD E5            push iy                                         ; Puntero objeto.
 411+ 8F33 C5               push bc                                         ; Control.
 412+ 8F34
 413+ 8F34 ED 7B 17 89      ld sp,(Stack)
 414+ 8F38
 415+ 8F38              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F38
 417+ 8F38 21 06 89     	ld hl,Ctrl_1
 418+ 8F3B CB C6        	set 0,(hl)
 419+ 8F3D
 420+ 8F3D DD E5        	push ix
 421+ 8F3F E1               pop hl
 422+ 8F40 F5               push af
 423+ 8F41 DD E1            pop ix
 424+ 8F43
 425+ 8F43 CD A0 7F     	call Guarda_foto_registros
 426+ 8F46
 427+ 8F46 21 06 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F49 CB 86        	res 0,(hl)
 429+ 8F4B
 430+ 8F4B              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F4B              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F4B
 433+ 8F4B CD D3 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F4E CD CC 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F51
 436+ 8F51 C9           4 ret
 437+ 8F52
 438+ 8F52              ; ----------------------------------------------------------------
 439+ 8F52              ;
 440+ 8F52              ;   4/3/23
 441+ 8F52              ;
 442+ 8F52              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F52              ;   _ al generarse el disparo.
 444+ 8F52              ;
 445+ 8F52              ;       "$80" ..... No se produce colisión.
 446+ 8F52              ;       "$81" ..... Se produce colisión.
 447+ 8F52              ;
 448+ 8F52              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F52              ;         _ que forman el disparo.
 450+ 8F52
 451+ 8F52
 452+ 8F52              Comprueba_Colision
 453+ 8F52
 454+ 8F52              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F52
 456+ 8F52 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F54 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F55
 459+ 8F55 CD 8B 8F         call Modifica_H_Velocidad_disparo
 460+ 8F58
 461+ 8F58 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F59 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F5B 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F5D
 465+ 8F5D 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F5F CD 7B 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F62
 468+ 8F62 7B               ld a,e
 469+ 8F63 E6 01            and 1
 470+ 8F65 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F67              ;                                                  ; _ para activar IMPACTO.
 472+ 8F67 E1               pop hl
 473+ 8F68 E5               push hl
 474+ 8F69 CD BA 95         call NextScan
 475+ 8F6C
 476+ 8F6C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F6D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F6F 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F71              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F71 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8F73 CD 7B 8F         call Bucle_2
 482+ 8F76
 483+ 8F76 43           1 ld b,e
 484+ 8F77 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8F78 FD E1            pop iy
 486+ 8F7A C9               ret
 487+ 8F7B
 488+ 8F7B              ; ---------- ----------
 489+ 8F7B
 490+ 8F7B 06 02        Bucle_2 ld b,2
 491+ 8F7D FD 7E 00     2 ld a,(iy)
 492+ 8F80 A6               and (hl)
 493+ 8F81 28 02            jr z,1F
 494+ 8F83 1E 81            ld e,$81
 495+ 8F85 23           1 inc hl
 496+ 8F86 FD 23            inc iy
 497+ 8F88 10 F3            djnz 2B
 498+ 8F8A C9               ret
 499+ 8F8B
 500+ 8F8B              ; ---------- ----------
 501+ 8F8B              ;
 502+ 8F8B              ;   21/7/23
 503+ 8F8B
 504+ 8F8B              Modifica_H_Velocidad_disparo
 505+ 8F8B
 506+ 8F8B 3A 36 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8F8E FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8F90 D0               ret nc                                         ; _ incrementamos H.
 509+ 8F91 24               inc h
 510+ 8F92
 511+ 8F92 C9               ret
 512+ 8F93
 513+ 8F93              ; -------------------------------------------------------------------------------------------------------------
 514+ 8F93              ;
 515+ 8F93              ;   04/12/23
 516+ 8F93              ;
 517+ 8F93              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8F93              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8F93              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8F93              ;
 521+ 8F93              ;   MODIFICA: HL,DE,B y A.
 522+ 8F93
 523+ 8F93              Genera_coordenadas_X
 524+ 8F93
 525+ 8F93              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8F93              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8F93
 528+ 8F93              ;   Limpiamos almacenes.
 529+ 8F93
 530+ 8F93 CD C4 8F         call Limpia_Coordenadas_X
 531+ 8F96
 532+ 8F96              ;   Almacenamos coordenadas X.
 533+ 8F96
 534+ 8F96              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8F96
 536+ 8F96 2A EF 88         ld hl,(Puntero_de_impresion)
 537+ 8F99 11 33 89         ld de,Coordenadas_X_Entidad
 538+ 8F9C 06 02            ld b,2
 539+ 8F9E
 540+ 8F9E 3A CD 88         ld a,(CTRL_DESPLZ)
 541+ 8FA1 A7               and a
 542+ 8FA2 28 01            jr z,1F
 543+ 8FA4 04               inc b
 544+ 8FA5
 545+ 8FA5 CD BB 8F     1 call Guarda_coordenadas_X
 546+ 8FA8
 547+ 8FA8              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8FA8
 549+ 8FA8 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 8FAB 11 30 89         ld de,Coordenadas_X_Amadeus
 551+ 8FAE 06 02            ld b,2
 552+ 8FB0
 553+ 8FB0 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 8FB3 A7               and a
 555+ 8FB4 28 01            jr z,2F
 556+ 8FB6 04               inc b
 557+ 8FB7
 558+ 8FB7 CD BB 8F     2 call Guarda_coordenadas_X
 559+ 8FBA
 560+ 8FBA              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8FBA
 562+ 8FBA C9               ret
 563+ 8FBB
 564+ 8FBB              ; ----- ----- ----- ----- -----
 565+ 8FBB
 566+ 8FBB 7D           Guarda_coordenadas_X  ld a,l
 567+ 8FBC E6 1F            and $1f
 568+ 8FBE 12           1 ld (de),a
 569+ 8FBF 3C               inc a
 570+ 8FC0 13               inc de
 571+ 8FC1 10 FB            djnz 1B
 572+ 8FC3 C9               ret
 573+ 8FC4
 574+ 8FC4 AF           Limpia_Coordenadas_X xor a
 575+ 8FC5 06 06            ld b,6
 576+ 8FC7 21 30 89         ld hl,Coordenadas_X_Amadeus
 577+ 8FCA 77           1 ld (hl),a
 578+ 8FCB 23               inc hl
 579+ 8FCC 10 FC            djnz 1B
 580+ 8FCE C9               ret
 581+ 8FCF
 582+ 8FCF              ; ----- ----- ----- ----- -----
 583+ 8FCF
 584+ 8FCF              Compara_coordenadas_X
 585+ 8FCF
 586+ 8FCF 06 03            ld b,3
 587+ 8FD1 11 35 89         ld de,Coordenadas_X_Entidad+2
 588+ 8FD4
 589+ 8FD4 1A               ld a,(de)
 590+ 8FD5 A7               and a
 591+ 8FD6 20 01            jr nz,2F
 592+ 8FD8 05               dec b
 593+ 8FD9
 594+ 8FD9 1B           2 dec de
 595+ 8FDA 1B               dec de
 596+ 8FDB 21 30 89         ld hl,Coordenadas_X_Amadeus
 597+ 8FDE
 598+ 8FDE D5           1 push de
 599+ 8FDF E5               push hl
 600+ 8FE0 C5               push bc
 601+ 8FE1
 602+ 8FE1 CD EB 8F         call Comparando
 603+ 8FE4
 604+ 8FE4 C1               pop bc
 605+ 8FE5 E1               pop hl
 606+ 8FE6 D1               pop de
 607+ 8FE7
 608+ 8FE7 13               inc de
 609+ 8FE8 10 F4            djnz 1B
 610+ 8FEA
 611+ 8FEA C9               ret
 612+ 8FEB
 613+ 8FEB              ; ----- ----- ----- ----- -----
 614+ 8FEB              ;
 615+ 8FEB              ;   4/12/23
 616+ 8FEB              ;
 617+ 8FEB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8FEB
 619+ 8FEB 06 03        Comparando ld b,3
 620+ 8FED 1A               ld a,(de)
 621+ 8FEE 4E           2 ld c,(hl)
 622+ 8FEF B9               cp c
 623+ 8FF0 28 04            jr z,1F
 624+ 8FF2 23               inc hl
 625+ 8FF3 10 F9            djnz 2B
 626+ 8FF5 C9               ret
 627+ 8FF6
 628+ 8FF6 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8FF8 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8FFB 21 2B 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8FFE CB D6            set 2,(hl)
 632+ 9000 C9               ret
 633+ 9001
 634+ 9001              ; -----------------------------------------------------------------------
 635+ 9001              ;
 636+ 9001              ;   7/12/23
 637+ 9001              ;
 638+ 9001
 639+ 9001              Detecta_colision_nave_entidad
 640+ 9001
 641+ 9001              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9001
 643+ 9001 FD 2A C9 88      ld iy,(Puntero_objeto)
 644+ 9005 2A EF 88         ld hl,(Puntero_de_impresion)
 645+ 9008
 646+ 9008 E5               push hl
 647+ 9009
 648+ 9009              ; ----- ----- -----
 649+ 9009 1E 00            ld e,0                                         ; Indica impacto.
 650+ 900B 06 0A            ld b,10
 651+ 900D CD 3D 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9010 7B               ld a,e
 653+ 9011 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9013 38 0E            jr c,3F
 655+ 9015
 656+ 9015              ; LLegados a este punto:
 657+ 9015              ;
 658+ 9015              ;   HAY COLISIÓN !!!!!.
 659+ 9015              ;
 660+ 9015              ;   .db (Impacto) de Amadeus a "1".
 661+ 9015              ;   SET el bit3 de (Impacto2).
 662+ 9015              ;
 663+ 9015              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9015
 665+ 9015 21 DE 88         ld hl,Impacto
 666+ 9018 36 01            ld (hl),1
 667+ 901A 21 2B 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 901D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 901F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9021
 671+ 9021 18 18            jr 1F
 672+ 9023
 673+ 9023              ; -----
 674+ 9023
 675+ 9023 E1           3 pop hl
 676+ 9024 CD BA 95         call NextScan
 677+ 9027 E5               push hl
 678+ 9028 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9029 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 902B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 902D 30 0C            jr nc,1F
 682+ 902F              ;                                                  ; _ 2º scanline si esto es así.
 683+ 902F 10 DC            djnz 2B
 684+ 9031
 685+ 9031              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9031
 687+ 9031              ; LLegados a este punto:
 688+ 9031              ;
 689+ 9031              ;   NO HAY COLISIÓN !!!!!.
 690+ 9031              ;
 691+ 9031              ;   .db (Impacto) de Amadeus a "0".
 692+ 9031              ;   RES el bit2 de (Impacto2).
 693+ 9031              ;
 694+ 9031              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9031              ;   Lo colocamos a "0".
 696+ 9031
 697+ 9031 21 2B 89         ld hl,Impacto2
 698+ 9034 CB 96            res 2,(hl)
 699+ 9036 2A 2C 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9039 36 00            ld (hl),0
 701+ 903B
 702+ 903B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 903C C9               ret
 704+ 903D
 705+ 903D               ; ---------- ----------
 706+ 903D
 707+ 903D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 903E 3A C6 88         ld a,(Columns)
 709+ 9041 47               ld b,a
 710+ 9042 FD 7E 00     2 ld a,(iy)
 711+ 9045 BE               cp (hl)
 712+ 9046 28 01            jr z,1F
 713+ 9048
 714+ 9048 1C               inc e
 715+ 9049
 716+ 9049 23           1 inc hl
 717+ 904A FD 23            inc iy
 718+ 904C 10 F4            djnz 2B
 719+ 904E C1               pop bc
 720+ 904F C9               ret
 721+ 9050
 722+ 9050              ; -------------------------------------------------------------------------------------------------------------
 723+ 9050              ;
 724+ 9050              ;   13/03/23
 725+ 9050              ;
 726+ 9050              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9050              ;
 728+ 9050              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9050
 730+ 9050 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9053 7E               ld a,(hl)
 732+ 9054 A7               and a
 733+ 9055 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9056
 735+ 9056 44               ld b,h
 736+ 9057 4D               ld c,l
 737+ 9058 2A 1F 89         ld hl,(Stack_snapshot_disparos)
 738+ 905B E5               push hl
 739+ 905C A7               and a
 740+ 905D ED 42            sbc hl,bc
 741+ 905F E5               push hl
 742+ 9060 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9061
 744+ 9061 E1               pop hl
 745+ 9062 54               ld d,h
 746+ 9063 5D               ld e,l
 747+ 9064 1B               dec de
 748+ 9065 ED B8            lddr                                                ; Limpiamos.
 749+ 9067
 750+ 9067 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 906A 22 1F 89         ld (Stack_snapshot_disparos),hl
 752+ 906D
 753+ 906D C9               ret
 754+ 906E
 755+ 906E              ; -------------------------------------------------------------------------------------------------------------
 756+ 906E              ;
 757+ 906E              ;   18/07/23
 758+ 906E              ;
 759+ 906E
 760+ 906E              Motor_de_disparos
 761+ 906E
 762+ 906E              ; Gestiona DISPAROS DE AMADEUS.
 763+ 906E
 764+ 906E 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9071 2A 29 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9074
 767+ 9074 CD 4E 8C     2 call Extrae_address
 768+ 9077 7E               ld a,(hl)
 769+ 9078 A7               and a
 770+ 9079 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 907B
 772+ 907B              ; ----- ----- ----- ----- ----- -----
 773+ 907B
 774+ 907B C5               push bc
 775+ 907C CD 40 91         call foto_disparo_a_borrar
 776+ 907F
 777+ 907F              ; Existe colisión con este disparo???
 778+ 907F
 779+ 907F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9080 7E               ld a,(hl)
 781+ 9081 2B               dec hl
 782+ 9082 E6 01            and 1
 783+ 9084 28 1D            jr z,9F
 784+ 9086
 785+ 9086              ;   En este punto:
 786+ 9086              ;
 787+ 9086              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9086              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9086              ;   _con la entidad).
 790+ 9086              ;
 791+ 9086              ;   Disparo_2A defw 0                                ; Control.
 792+ 9086              ;    defw 0                                          ; Puntero objeto.
 793+ 9086              ;    defw 0                                          ; Puntero de impresión.
 794+ 9086              ;    defw 0                                          ; Rutina de impresión.
 795+ 9086
 796+ 9086 E5               push hl
 797+ 9087
 798+ 9087 06 04            ld b,4
 799+ 9089 23           19 inc hl
 800+ 908A 10 FD            djnz 19B
 801+ 908C
 802+ 908C CD 4E 8C         call Extrae_address
 803+ 908F CD 83 9C         call Genera_coordenadas_disparo
 804+ 9092
 805+ 9092              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9092
 807+ 9092 21 2E 89         ld hl,Coordenadas_disparo_certero
 808+ 9095 72               ld (hl),d
 809+ 9096 23               inc hl
 810+ 9097 73               ld (hl),e
 811+ 9098
 812+ 9098              ; Elimino el disparo de la base de datos.
 813+ 9098
 814+ 9098 E1               pop hl
 815+ 9099 CD BF 91         call Elimina_disparo_de_base_de_datos
 816+ 909C 21 2B 89         ld hl,Impacto2
 817+ 909F CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 90A1
 819+ 90A1 18 06            jr 11F
 820+ 90A3
 821+ 90A3 CD 69 91     9 call Mueve_disparo
 822+ 90A6 CD 40 91         call foto_disparo_a_borrar
 823+ 90A9
 824+ 90A9 C1           11 pop bc
 825+ 90AA 18 04            jr 7F
 826+ 90AC
 827+ 90AC              ; ----- ----- ----- ----- ----- -----
 828+ 90AC
 829+ 90AC ED 42        1 sbc hl,bc
 830+ 90AE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 90B0
 832+ 90B0 2A 29 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 90B3 23               inc hl
 834+ 90B4 23               inc hl
 835+ 90B5 22 29 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 90B8 18 BA            jr 2B
 837+ 90BA
 838+ 90BA CD D3 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 90BD              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 90BD
 841+ 90BD              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 90BD
 843+ 90BD 01 6A 85         ld bc,Disparo_11
 844+ 90C0 2A 27 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 90C3
 846+ 90C3 CD 4E 8C     5 call Extrae_address
 847+ 90C6 7E               ld a,(hl)
 848+ 90C7 A7               and a
 849+ 90C8 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 90CA
 851+ 90CA              ; ----- ----- ----- ----- ----- -----
 852+ 90CA
 853+ 90CA C5               push bc
 854+ 90CB CD 40 91         call foto_disparo_a_borrar
 855+ 90CE
 856+ 90CE              ; Existe colisión con este disparo???
 857+ 90CE
 858+ 90CE 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 90CF 7E               ld a,(hl)
 860+ 90D0 2B               dec hl
 861+ 90D1 E6 01            and 1
 862+ 90D3 28 4D            jr z,10F
 863+ 90D5
 864+ 90D5              ;! La colisión se produce con Amadeus???
 865+ 90D5              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 90D5
 867+ 90D5 E5               push hl
 868+ 90D6
 869+ 90D6 06 04            ld b,4
 870+ 90D8 23           16 inc hl
 871+ 90D9 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 90DB
 873+ 90DB CD 4E 8C         call Extrae_address
 874+ 90DE CD 83 9C         call Genera_coordenadas_disparo
 875+ 90E1
 876+ 90E1 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 90E2 FE 16            cp $16
 878+ 90E4 38 2A            jr c,15F
 879+ 90E6
 880+ 90E6
 881+ 90E6              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 90E6
 883+ 90E6 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 90E7
 885+ 90E7              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 90E7
 887+ 90E7 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 90EA
 889+ 90EA              ; Coordenada X de Amadeus en D.
 890+ 90EA
 891+ 90EA 7D               ld a,l
 892+ 90EB E6 1F            and $1F
 893+ 90ED 57               ld d,a
 894+ 90EE
 895+ 90EE 21 86 85         ld hl,Amadeus_db+8
 896+ 90F1 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 90F2
 898+ 90F2 21 30 89         ld hl,Coordenadas_X_Amadeus
 899+ 90F5 CD BB 8F         call Guarda_coordenadas_X
 900+ 90F8
 901+ 90F8 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 90F9
 903+ 90F9              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 90F9
 905+ 90F9 06 02            ld b,2
 906+ 90FB C5           20 push bc
 907+ 90FC
 908+ 90FC 06 03            ld b,3
 909+ 90FE 21 30 89         ld hl,Coordenadas_X_Amadeus
 910+ 9101 7E           18 ld a,(hl)
 911+ 9102 BA               cp d
 912+ 9103 20 04            jr nz,17F
 913+ 9105
 914+ 9105              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9105
 916+ 9105 C1               pop bc
 917+ 9106 E1               pop hl
 918+ 9107 18 0D            jr 14F
 919+ 9109
 920+ 9109 23           17 inc hl
 921+ 910A 10 F5            djnz 18B
 922+ 910C
 923+ 910C 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 910D
 925+ 910D C1               pop bc
 926+ 910E 10 EB            djnz 20B
 927+ 9110
 928+ 9110
 929+ 9110              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9110              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9110
 932+ 9110 E1           15 pop hl
 933+ 9111 23               inc hl
 934+ 9112 35               dec (hl)
 935+ 9113 2B               dec hl
 936+ 9114 18 0C            jr 10F
 937+ 9116
 938+ 9116              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9116              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9116
 941+ 9116 E5           14 push hl
 942+ 9117 CD BF 91         call Elimina_disparo_de_base_de_datos
 943+ 911A 21 2B 89         ld hl,Impacto2
 944+ 911D CB CE            set 1,(hl)
 945+ 911F E1               pop hl
 946+ 9120 18 06            jr 12F
 947+ 9122
 948+ 9122              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9122
 950+ 9122 CD 69 91     10 call Mueve_disparo
 951+ 9125 CD 40 91         call foto_disparo_a_borrar
 952+ 9128 C1           12 pop bc
 953+ 9129
 954+ 9129 18 04            jr 8F
 955+ 912B
 956+ 912B              ; ----- ----- ----- ----- ----- -----
 957+ 912B
 958+ 912B ED 42        4 sbc hl,bc
 959+ 912D 28 0A            jr z,6F
 960+ 912F
 961+ 912F 2A 27 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9132 23               inc hl
 963+ 9133 23               inc hl
 964+ 9134 22 27 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9137 18 8A            jr 5B
 966+ 9139
 967+ 9139 CD CC 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 913C CD C4 8F         call Limpia_Coordenadas_X
 969+ 913F C9               ret
 970+ 9140
 971+ 9140              ; ------------------------------------------------------------------
 972+ 9140
 973+ 9140              foto_disparo_a_borrar
 974+ 9140
 975+ 9140 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9141 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9142 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9143
 979+ 9143 E5               push hl
 980+ 9144 23               inc hl
 981+ 9145 23               inc hl
 982+ 9146 ED 73 17 89      ld (Stack),sp
 983+ 914A F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 914B FD E1            pop iy
 985+ 914D DD E1            pop ix
 986+ 914F E1               pop hl
 987+ 9150 ED 7B 17 89      ld sp,(Stack)
 988+ 9154 3A 06 89         ld a,(Ctrl_1)
 989+ 9157 CB C7            set 0,a
 990+ 9159 32 06 89         ld (Ctrl_1),a
 991+ 915C CD A0 7F         call Guarda_foto_registros
 992+ 915F 3A 06 89         ld a,(Ctrl_1)
 993+ 9162 CB 87            res 0,a
 994+ 9164 32 06 89         ld (Ctrl_1),a
 995+ 9167 E1               pop hl
 996+ 9168 C9               ret
 997+ 9169
 998+ 9169              ;---------------------------------------------------
 999+ 9169              ;
1000+ 9169              ;   18/07/23
1001+ 9169              ;
1002+ 9169
1003+ 9169              Mueve_disparo
1004+ 9169
1005+ 9169              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9169              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9169              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9169
1009+ 9169 E5               push hl
1010+ 916A
1011+ 916A 7E               ld a,(hl)
1012+ 916B
1013+ 916B 06 04            ld b,4
1014+ 916D 23           1 inc hl
1015+ 916E 10 FD            djnz 1B
1016+ 9170
1017+ 9170              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9170
1019+ 9170 CD 4E 8C         call Extrae_address
1020+ 9173
1021+ 9173 E6 01            and 1
1022+ 9175 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9177
1024+ 9177              ; Disparo hacia arriba, (Amadeus).
1025+ 9177
1026+ 9177              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9177              ; _ de la dificultad.
1028+ 9177
1029+ 9177 CD C9 95         call PreviousScan
1030+ 917A CD C9 95         call PreviousScan
1031+ 917D CD C9 95         call PreviousScan
1032+ 9180 CD C9 95         call PreviousScan
1033+ 9183
1034+ 9183              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9183
1036+ 9183 7C               ld a,h
1037+ 9184 FE 40            cp $40
1038+ 9186 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9188
1040+ 9188              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9188
1042+ 9188 EB               ex de,hl
1043+ 9189 06 04            ld b,4
1044+ 918B 2B           6 dec hl
1045+ 918C 10 FD            djnz 6B
1046+ 918E
1047+ 918E CD BF 91         call Elimina_disparo_de_base_de_datos
1048+ 9191 E1               pop hl
1049+ 9192 18 10            jr 7F
1050+ 9194
1051+ 9194              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9194              ; HL contiene el puntero de impresión del disparo.
1053+ 9194              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9194
1055+ 9194 D5           3 push de
1056+ 9195 C5               push bc
1057+ 9196
1058+ 9196 CD 52 8F         call Comprueba_Colision
1059+ 9199
1060+ 9199              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9199
1062+ 9199 78               ld a,b
1063+ 919A
1064+ 919A C1               pop bc
1065+ 919B D1               pop de
1066+ 919C
1067+ 919C EB               ex de,hl
1068+ 919D
1069+ 919D 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 919E 23               inc hl                                      ; _ movimiento.
1071+ 919F 72               ld (hl),d
1072+ 91A0
1073+ 91A0 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 91A1
1075+ 91A1 23               inc hl                                      ; _ en curso.
1076+ 91A2 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 91A3 2B               dec hl
1078+ 91A4
1079+ 91A4 C9           7 ret
1080+ 91A5
1081+ 91A5              ; Disparo hacia abajo, (Entidad).
1082+ 91A5
1083+ 91A5 3A 36 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 91A8 47               ld b,a
1085+ 91A9
1086+ 91A9 CD BA 95     4 call NextScan
1087+ 91AC 10 FB            djnz 4B
1088+ 91AE
1089+ 91AE              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 91AE
1091+ 91AE 7C               ld a,h
1092+ 91AF FE 58            cp $58
1093+ 91B1 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 91B3
1095+ 91B3 EB               ex de,hl
1096+ 91B4 06 04            ld b,4
1097+ 91B6 2B           5 dec hl
1098+ 91B7 10 FD            djnz 5B
1099+ 91B9
1100+ 91B9 CD BF 91         call Elimina_disparo_de_base_de_datos
1101+ 91BC E1               pop hl
1102+ 91BD 18 E5            jr 7B
1103+ 91BF
1104+ 91BF              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 91BF
1106+ 91BF 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 91C2 AF               xor a
1108+ 91C3 77               ld (hl),a
1109+ 91C4 54               ld d,h
1110+ 91C5 5D               ld e,l
1111+ 91C6 13               inc de
1112+ 91C7 ED B0            ldir
1113+ 91C9 C9               ret
1114+ 91CA
1115+ 91CA              ; -----------------------------------------------------------------
1116+ 91CA              ;
1117+ 91CA              ;   7/12/23
1118+ 91CA              ;
1119+ 91CA
1120+ 91CA 3A 2B 89     Selector_de_impactos ld a,(Impacto2)
1121+ 91CD A7               and a
1122+ 91CE C8               ret z
1123+ 91CF
1124+ 91CF              ; Analizamos si hay impacto por disparos.
1125+ 91CF
1126+ 91CF              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 91CF
1128+ 91CF CB 4F            bit 1,a
1129+ 91D1 28 07            jr z,1F
1130+ 91D3
1131+ 91D3 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 91D6 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 91D8 18 08            jr 2F
1134+ 91DA
1135+ 91DA CB 47        1 bit 0,a
1136+ 91DC C8               ret z
1137+ 91DD
1138+ 91DD              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 91DD
1140+ 91DD 21 06 89         ld hl,Ctrl_1
1141+ 91E0 CB D6            set 2,(hl)
1142+ 91E2
1143+ 91E2 C9           2 ret
1144+ 91E3
1145+ 91E3              ; -----------------------------------------------------------------
1146+ 91E3              ;
1147+ 91E3              ;   25/04/23
1148+ 91E3              ;
1149+ 91E3
1150+ 91E3              Determina_resultado_comparativa
1151+ 91E3
1152+ 91E3              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 91E3              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 91E3              ;
1155+ 91E3              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 91E3              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 91E3              ;
1158+ 91E3              ;   SBC HL,DE
1159+ 91E3
1160+ 91E3              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 91E3              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 91E3
1163+ 91E3              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 91E3              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 91E3
1166+ 91E3
1167+ 91E3 3A D9 88         ld a,(Cuad_objeto)
1168+ 91E6 FE 02            cp 2
1169+ 91E8 28 26            jr z,2F
1170+ 91EA 38 24            jr c,2F
1171+ 91EC
1172+ 91EC              ; Cuadrantes 3º y 4º
1173+ 91EC
1174+ 91EC E6 01            and 1
1175+ 91EE 28 10            jr z,4F
1176+ 91F0
1177+ 91F0              ; Cuadrante 3º
1178+ 91F0
1179+ 91F0 7C               ld a,h
1180+ 91F1 06 00            ld b,0
1181+ 91F3
1182+ 91F3 CD 7E 92         call Compara_cositas_H3
1183+ 91F6
1184+ 91F6 04               inc b
1185+ 91F7 05               dec b
1186+ 91F8 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 91F9
1188+ 91F9 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 91FA 06 00            ld b,0
1190+ 91FC
1191+ 91FC CD 90 92         call Compara_cositas_L3
1192+ 91FF C9               ret
1193+ 9200
1194+ 9200              ; Cuadrante 4º
1195+ 9200
1196+ 9200 7C           4 ld a,h
1197+ 9201 06 00            ld b,0
1198+ 9203
1199+ 9203 CD A2 92         call Compara_cositas_H4
1200+ 9206
1201+ 9206 04               inc b
1202+ 9207 05               dec b
1203+ 9208 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9209
1205+ 9209 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 920A 06 00            ld b,0
1207+ 920C
1208+ 920C CD B8 92         call Compara_cositas_L4
1209+ 920F C9               ret
1210+ 9210
1211+ 9210              ; Cuadrantes 1º y 2º.
1212+ 9210
1213+ 9210 28 10        2 jr z,3F
1214+ 9212
1215+ 9212              ; 1er Cuadrante
1216+ 9212
1217+ 9212 7C               ld a,h
1218+ 9213 06 00            ld b,0
1219+ 9215
1220+ 9215 CD 56 92         call Compara_cositas_H1
1221+ 9218
1222+ 9218 04               inc b
1223+ 9219 05               dec b
1224+ 921A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 921B
1226+ 921B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 921C 06 00            ld b,0
1228+ 921E
1229+ 921E CD 6C 92         call Compara_cositas_L1
1230+ 9221 C9               ret
1231+ 9222
1232+ 9222
1233+ 9222              ; 2º Cuadrante
1234+ 9222
1235+ 9222 7C           3 ld a,h
1236+ 9223 06 00            ld b,0
1237+ 9225
1238+ 9225 CD 32 92         call Compara_cositas_H2
1239+ 9228
1240+ 9228 04               inc b
1241+ 9229 05               dec b
1242+ 922A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 922B
1244+ 922B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 922C 06 00            ld b,0
1246+ 922E
1247+ 922E CD 44 92         call Compara_cositas_L2
1248+ 9231 C9               ret
1249+ 9232
1250+ 9232 A7           Compara_cositas_H2 and a
1251+ 9233 28 0D            jr z,1F
1252+ 9235              ;    cp $fd
1253+ 9235              ;    jr z,1F
1254+ 9235              ;    cp $fe
1255+ 9235              ;    jr z,1F
1256+ 9235 FE FF            cp $ff
1257+ 9237 28 09            jr z,1F
1258+ 9239 FE 01            cp $01
1259+ 923B 28 05            jr z,1F
1260+ 923D FE 02            cp $02
1261+ 923F 28 01            jr z,1F
1262+ 9241 C0               ret nz
1263+ 9242 04           1 inc b
1264+ 9243 C9               ret
1265+ 9244
1266+ 9244 A7           Compara_cositas_L2 and a
1267+ 9245 28 0D            jr z,1F
1268+ 9247              ;    cp $fd
1269+ 9247              ;    jr z,1F
1270+ 9247 FE FE            cp $fe
1271+ 9249 28 09            jr z,1F
1272+ 924B FE FF            cp $ff
1273+ 924D 28 05            jr z,1F
1274+ 924F FE 01            cp $01
1275+ 9251 28 01            jr z,1F
1276+ 9253              ;    cp $02
1277+ 9253              ;    jr z,1F
1278+ 9253 C0               ret nz
1279+ 9254 04           1 inc b
1280+ 9255 C9               ret
1281+ 9256
1282+ 9256 A7           Compara_cositas_H1 and a
1283+ 9257 28 11            jr z,1F
1284+ 9259              ;    cp $fd
1285+ 9259              ;    jr z,1F
1286+ 9259              ;    cp $fe
1287+ 9259              ;    jr z,1F
1288+ 9259 FE FF            cp $ff
1289+ 925B 28 0D            jr z,1F
1290+ 925D FE 01            cp $01
1291+ 925F 28 09            jr z,1F
1292+ 9261 FE 02            cp $02
1293+ 9263 28 05            jr z,1F
1294+ 9265 FE 03            cp $03
1295+ 9267 28 01            jr z,1F
1296+ 9269 C0               ret nz
1297+ 926A 04           1 inc b
1298+ 926B C9               ret
1299+ 926C
1300+ 926C A7           Compara_cositas_L1 and a
1301+ 926D 28 0D            jr z,1F
1302+ 926F              ;    cp $fd
1303+ 926F              ;    jr z,1F
1304+ 926F              ;    cp $fe
1305+ 926F              ;    jr z,1F
1306+ 926F              ;    cp $ff
1307+ 926F              ;    jr z,1F
1308+ 926F FE 01            cp $01
1309+ 9271 28 09            jr z,1F
1310+ 9273 FE 02            cp $02
1311+ 9275 28 05            jr z,1F
1312+ 9277 FE 03            cp $03
1313+ 9279 28 01            jr z,1F
1314+ 927B C0               ret nz
1315+ 927C 04           1 inc b
1316+ 927D C9               ret
1317+ 927E
1318+ 927E A7           Compara_cositas_H3 and a
1319+ 927F 28 0D            jr z,1F
1320+ 9281              ;    cp $fd
1321+ 9281              ;    jr z,1F
1322+ 9281 FE FE            cp $fe
1323+ 9283 28 09            jr z,1F
1324+ 9285 FE FF            cp $ff
1325+ 9287 28 05            jr z,1F
1326+ 9289 FE 01            cp $01
1327+ 928B 28 01            jr z,1F
1328+ 928D              ;    cp $02
1329+ 928D              ;    jr z,1F
1330+ 928D              ;    cp $03
1331+ 928D              ;    jr z,1F
1332+ 928D C0               ret nz
1333+ 928E 04           1 inc b
1334+ 928F C9               ret
1335+ 9290
1336+ 9290 A7           Compara_cositas_L3 and a
1337+ 9291 28 0D            jr z,1F
1338+ 9293              ;    cp $fd
1339+ 9293              ;    jr z,1F
1340+ 9293              ;    cp $fe
1341+ 9293              ;    jr z,1F
1342+ 9293              ;    cp $ff
1343+ 9293              ;    jr z,1F
1344+ 9293 FE 01            cp $01
1345+ 9295 28 09            jr z,1F
1346+ 9297 FE 02            cp $02
1347+ 9299 28 05            jr z,1F
1348+ 929B FE 03            cp $03
1349+ 929D 28 01            jr z,1F
1350+ 929F C0               ret nz
1351+ 92A0 04           1 inc b
1352+ 92A1 C9               ret
1353+ 92A2
1354+ 92A2 A7           Compara_cositas_H4 and a
1355+ 92A3 28 11            jr z,1F
1356+ 92A5 FE FD            cp $fd
1357+ 92A7 28 0D            jr z,1F
1358+ 92A9 FE FE            cp $fe
1359+ 92AB 28 09            jr z,1F
1360+ 92AD FE FF            cp $ff
1361+ 92AF 28 05            jr z,1F
1362+ 92B1 FE 01            cp $01
1363+ 92B3 28 01            jr z,1F
1364+ 92B5              ;    cp $02
1365+ 92B5              ;    jr z,1F
1366+ 92B5              ;    cp $03
1367+ 92B5              ;    jr z,1F
1368+ 92B5 C0               ret nz
1369+ 92B6 04           1 inc b
1370+ 92B7 C9               ret
1371+ 92B8
1372+ 92B8 A7           Compara_cositas_L4 and a
1373+ 92B9 28 0D            jr z,1F
1374+ 92BB              ;    cp $fd
1375+ 92BB              ;    jr z,1F
1376+ 92BB FE FE            cp $fe
1377+ 92BD 28 09            jr z,1F
1378+ 92BF FE FF            cp $ff
1379+ 92C1 28 05            jr z,1F
1380+ 92C3 FE 01            cp $01
1381+ 92C5 28 01            jr z,1F
1382+ 92C7              ;    cp $02
1383+ 92C7              ;    jr z,1F
1384+ 92C7              ;    cp $03
1385+ 92C7              ;    jr z,1F
1386+ 92C7 C0               ret nz
1387+ 92C8 04           1 inc b
1388+ 92C9 C9               ret
# file closed: Disparo.asm
1600  92CA              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92CA              ; ******************************************************************************************************************************************************************************************
   2+ 92CA              ;
   3+ 92CA              ; 26/06/23
   4+ 92CA              ;
   5+ 92CA              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92CA
   7+ 92CA CD AE 95     Draw call Prepara_draw
   8+ 92CD 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92CE A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92CF 28 05        	jr z,2F
  11+ 92D1
  12+ 92D1 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92D4 18 0C        	jr 1F
  14+ 92D6
  15+ 92D6 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 92D9 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 92DC CD 6B 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 92DF              ;													; _la esquina superior izquierda de la pantalla.
  19+ 92DF CD 0E 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 92E2
  21+ 92E2 3A F3 88     1 ld a,(Ctrl_0)
  22+ 92E5 CB 6F        	bit 5,a
  23+ 92E7 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 92E9
  25+ 92E9 CD 01 93     	call Comprueba_limite_horizontal
  26+ 92EC CD 91 93     	call Comprueba_limite_vertical
  27+ 92EF
  28+ 92EF              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 92EF              ; -----------------------
  30+ 92EF              ; -----------------------
  31+ 92EF              ; -----------------------
  32+ 92EF
  33+ 92EF CD DE 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 92F2 CD 15 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 92F5 CD 74 95     	call Define_rutina_de_impresion
  36+ 92F8
  37+ 92F8 3A F3 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 92FB CB AF        	res 5,a											; _a ser de utilidad.
  39+ 92FD 32 F3 88     	ld (Ctrl_0),a
  40+ 9300
  41+ 9300 C9           	ret
  42+ 9301
  43+ 9301              ; *******************************************************************************************************************************************************************************************
  44+ 9301              ;	21/01/23
  45+ 9301              ;
  46+ 9301              ; 	Comprueba_limite_horizontal.
  47+ 9301              ;
  48+ 9301              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 9301              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 9301              ;
  51+ 9301              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 9301              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 9301              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 9301              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 9301
  56+ 9301
  57+ 9301
  58+ 9301 3A F3 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9304 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9306 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9308 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 930A 32 F3 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 930D 18 09            jr 6F
  64+ 930F CB 5F        1 bit 3,a
  65+ 9311 28 0A            jr z,2F
  66+ 9313 E6 F7            and $f7
  67+ 9315 32 F3 88         ld (Ctrl_0),a
  68+ 9318 CD 6B 94     6 call Inicializacion
  69+ 931B 18 5B            jr 5F
  70+ 931D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 931E
  72+ 931E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 931E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 931E
  75+ 931E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 931F 2A 01 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 9322 CD CD 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9325 67           	ld h,a
  79+ 9326 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9327 CD CD 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 932A 67           	ld h,a
  82+ 932B A7           	and a
  83+ 932C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 932E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 932F 3A D9 88     	ld a,(Cuad_objeto)
  86+ 9332 FE 02        	cp 2
  87+ 9334 38 1E        	jr c,3F
  88+ 9336 28 1C        	jr z,3F
  89+ 9338 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9339 28 23            jr z,7F
  91+ 933B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 933D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 933F E1           	pop hl
  94+ 9340
  95+ 9340              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9340              ; _para indicar con E="2" en caso necesario.
  97+ 9340
  98+ 9340 E5               push hl
  99+ 9341 C5               push bc
 100+ 9342 CD CD 98     	call calcula_tercio
 101+ 9345 FE 01        	cp 1
 102+ 9347 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9349 CD 79 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 934C 28 26            jr z,9F
 105+ 934E 38 24            jr c,9F
 106+ 9350 1E 00        11 ld e,0
 107+ 9352 18 22            jr 8F
 108+ 9354 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9355 28 07        	jr z, 7F
 110+ 9357 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9359 1E 00         	ld e,0
 112+ 935B E1           	pop hl
 113+ 935C 18 04        	jr 4F
 114+ 935E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9360 18 15            jr 10F
 116+ 9362
 117+ 9362              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9362              ; _para indicar con E="2" en caso necesario.
 119+ 9362
 120+ 9362 E5           4 push hl
 121+ 9363 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9364 CD CD 98     	call calcula_tercio
 123+ 9367 FE 01        	cp 1
 124+ 9369 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 936B CD 79 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 936E 28 04            jr z,9F
 127+ 9370 30 02            jr nc,9F
 128+ 9372 18 02        	jr 8F
 129+ 9374 1E 02        9 ld e,2
 130+ 9376 C1           8 pop bc
 131+ 9377 E1           10 pop hl
 132+ 9378 C9           5 ret
 133+ 9379
 134+ 9379              ; --------------------
 135+ 9379              ;
 136+ 9379              ; 25/08/22
 137+ 9379
 138+ 9379 CD CD 98     Comprueba_centro call calcula_tercio
 139+ 937C 67               ld h,a
 140+ 937D 08           	ex af,af
 141+ 937E FE 02        	cp 2
 142+ 9380 38 07        	jr c,1F
 143+ 9382 28 05        	jr z,1F
 144+ 9384 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9387 18 03        	jr 2F
 146+ 9389 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 938C 08           2 ex af,af
 148+ 938D A7               and a
 149+ 938E ED 42            sbc hl,bc
 150+ 9390 C9               ret
 151+ 9391
 152+ 9391              ; *********************************************************************************************************************************************************************************************
 153+ 9391              ;
 154+ 9391              ;   16/8/22
 155+ 9391              ;
 156+ 9391              ;	Comprueba_limite_vertical
 157+ 9391              ;
 158+ 9391              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9391              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9391              ;
 161+ 9391
 162+ 9391 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9394 7D           	ld a,l
 164+ 9395 E6 1F        	and $1F
 165+ 9397 57           	ld d,a
 166+ 9398 3A 03 89     	ld a,(Limite_vertical)
 167+ 939B BA           	cp d 											; Límite - Posición.
 168+ 939C 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 939D 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 93A0 CB 47        	bit 0,a
 171+ 93A2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 93A4
 173+ 93A4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 93A4
 175+ 93A4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 93A5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 93A7
 178+ 93A7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 93A7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 93A7
 181+ 93A7 3A CB 88         ld a,(Coordenada_X)
 182+ 93AA 16 0F            ld d,Centro_izquierda
 183+ 93AC A7               and a
 184+ 93AD 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 93AE 28 1E            jr z,3F
 186+ 93B0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 93B2              ;                                                    ; _salimos sin modificar nada.
 188+ 93B2 18 0E            jr 2F
 189+ 93B4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 93B5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 93B7
 192+ 93B7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 93B7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 93B7
 195+ 93B7 3A CB 88         ld a,(Coordenada_X)
 196+ 93BA 16 10            ld d,Centro_derecha
 197+ 93BC A7               and a
 198+ 93BD 92               sub d
 199+ 93BE 28 0E            jr z,3F
 200+ 93C0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 93C2              ;                                                    ; _salimos sin modificar nada.
 202+ 93C2 CB 43        2 bit 0,e
 203+ 93C4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 93C6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 93C7 CD 5B 94         call Modificaccionne
 206+ 93CA C1           	pop bc
 207+ 93CB CD 6B 94         call Inicializacion
 208+ 93CE C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 93CF
 210+ 93CF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 93CF
 212+ 93CF C5           4 push bc
 213+ 93D0 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 93D3 0A           	ld a,(bc)
 215+ 93D4 3D           	dec a
 216+ 93D5 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 93D6 7D           	ld a,l
 218+ 93D7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 93D8 CB 47        	bit 0,a
 220+ 93DA 28 03        	jr z,5F
 221+ 93DC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 93DD 18 2E        	jr 7F
 223+ 93DF
 224+ 93DF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 93DF
 226+ 93DF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 93E0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 93E1 3A F3 88     	ld a,(Ctrl_0)
 229+ 93E4 CB 4F        	bit 1,a
 230+ 93E6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 93E8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 93E9
 233+ 93E9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 93E9
 235+ 93E9 1C               inc e
 236+ 93EA 1D               dec e
 237+ 93EB 20 07            jr nz,12F
 238+ 93ED 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 93EE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 93EF 22 C7 88     	ld (Posicion_actual),hl
 241+ 93F2 18 44        13 jr 9F
 242+ 93F4 CB 43        12 bit 0,e
 243+ 93F6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 93F8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 93F8 C1           	pop bc
 246+ 93F9 18 D3        	jr 3B
 247+ 93FB 80           14 add b
 248+ 93FC 6F               ld l,a
 249+ 93FD 22 C7 88     	ld (Posicion_actual),hl
 250+ 9400 CD 5B 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 9403 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9405 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9407 32 F3 88         ld (Ctrl_0),a
 254+ 940A F1           	pop af
 255+ 940B 18 2B        	jr 9F
 256+ 940D
 257+ 940D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 940D
 259+ 940D F5           7 push af
 260+ 940E 3A F3 88     	ld a,(Ctrl_0)
 261+ 9411 CB 47        	bit 0,a
 262+ 9413 20 1D        	jr nz,8F
 263+ 9415 F1           	pop af
 264+ 9416
 265+ 9416              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9416
 267+ 9416 1C           	inc e
 268+ 9417 1D               dec e
 269+ 9418 20 07            jr nz,10F
 270+ 941A 90           	sub b
 271+ 941B 6F               ld l,a
 272+ 941C 22 C7 88     	ld (Posicion_actual),hl
 273+ 941F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 9421              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 9421 CB 43        10 bit 0,e
 276+ 9423 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9425              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9425 C1           	pop bc
 279+ 9426 18 A6        	jr 3B
 280+ 9428 90           16 sub b
 281+ 9429 6F               ld l,a
 282+ 942A 22 C7 88     	ld (Posicion_actual),hl
 283+ 942D CD 5B 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9430 18 06            jr 9F
 285+ 9432 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9434 32 F3 88         ld (Ctrl_0),a
 287+ 9437 F1           	pop af
 288+ 9438 C1           9 pop bc
 289+ 9439 1E 00        	ld e,0
 290+ 943B CD 6B 94         call Inicializacion
 291+ 943E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 943F 08           	ex af,af
 293+ 9440 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9441 18 8B            jr 3B
 295+ 9443
 296+ 9443              ; --------------------
 297+ 9443
 298+ 9443 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9445 CD C9 95     1 call PreviousScan
 300+ 9448 10 FB            djnz 1B
 301+ 944A 22 C7 88     	ld (Posicion_actual),hl
 302+ 944D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 944E C9           	ret
 304+ 944F
 305+ 944F              ; --------------------
 306+ 944F
 307+ 944F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9451 CD BA 95     1 call NextScan
 309+ 9454 10 FB            djnz 1B
 310+ 9456 22 C7 88     	ld (Posicion_actual),hl
 311+ 9459 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 945A C9           	ret
 313+ 945B
 314+ 945B              ; --------------------
 315+ 945B              ;
 316+ 945B              ;	22/01/23
 317+ 945B              ;
 318+ 945B              ;	E="1". Hemos cambiado de cuadrante.
 319+ 945B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 945B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 945B
 322+ 945B
 323+ 945B              Modificaccionne
 324+ 945B
 325+ 945B 3A D9 88     	ld a,(Cuad_objeto)
 326+ 945E FE 02        	cp 2
 327+ 9460 CC 43 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9463 DC 43 94         call c,Modifica_Pos_actual
 329+ 9466 C8           	ret z
 330+ 9467 CD 4F 94         call Modifica_Pos_actual2
 331+ 946A C9               ret
 332+ 946B
 333+ 946B              ; *************************************************************************************************************************************************************************************************
 334+ 946B              ;
 335+ 946B              ;	13/8/22
 336+ 946B              ;
 337+ 946B              ;	Inicializacion
 338+ 946B              ;
 339+ 946B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 946B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 946B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 946B              ;
 343+ 946B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 946B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 946B              ;	_ desaparece/aparece.
 346+ 946B
 347+ 946B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 946B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 946B              ;
 350+ 946B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 946B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 946B              ; 		   [E] ="0"
 353+ 946B
 354+ 946B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 946B
 356+ 946B CD CD 98     Inicializacion call calcula_tercio
 357+ 946E 28 36        	jr z,primit
 358+ 9470 E6 02        	and 2
 359+ 9472 20 07        	jr nz,segmit
 360+ 9474 7D           	ld a,l
 361+ 9475 FE 7F        	cp $7f
 362+ 9477 38 2D        	jr c,primit
 363+ 9479 28 2B        	jr z,primit
 364+ 947B CD D8 94     segmit call column
 365+ 947E 38 13        	jr c,tercuad
 366+ 9480 3E 04        cuarcuad ld a,4
 367+ 9482 32 D9 88     	ld (Cuad_objeto),a
 368+ 9485 21 20 48     	ld hl,$4820
 369+ 9488 22 01 89     	ld (Limite_horizontal),hl
 370+ 948B 21 03 89     	ld hl,Limite_vertical
 371+ 948E 36 0D        	ld (hl),$0d
 372+ 9490 08           	ex af,af
 373+ 9491 18 3C        	jr 1F
 374+ 9493              tercuad
 375+ 9493 3E 03        	ld a,3
 376+ 9495 32 D9 88     	ld (Cuad_objeto),a
 377+ 9498 21 20 48     	ld hl,$4820
 378+ 949B 22 01 89     	ld (Limite_horizontal),hl
 379+ 949E 21 03 89     	ld hl,Limite_vertical
 380+ 94A1 36 12        	ld (hl),$12
 381+ 94A3 08           	ex af,af
 382+ 94A4 18 29        	jr 1F
 383+ 94A6 CD D8 94     primit call column
 384+ 94A9 38 13        	jr c, primcuad
 385+ 94AB              segcuad
 386+ 94AB 3E 02        	ld a,2
 387+ 94AD 32 D9 88     	ld (Cuad_objeto),a
 388+ 94B0 21 C0 4F     	ld hl,$4fc0
 389+ 94B3 22 01 89     	ld (Limite_horizontal),hl
 390+ 94B6 21 03 89     	ld hl,Limite_vertical
 391+ 94B9 36 0D        	ld (hl),$0d
 392+ 94BB 08           	ex af,af
 393+ 94BC 18 11        	jr 1F
 394+ 94BE              primcuad
 395+ 94BE 3E 01        	ld a,1
 396+ 94C0 32 D9 88     	ld (Cuad_objeto),a
 397+ 94C3 21 C0 4F     	ld hl,$4fc0
 398+ 94C6 22 01 89     	ld (Limite_horizontal),hl
 399+ 94C9 21 03 89     	ld hl,Limite_vertical
 400+ 94CC 36 12        	ld (hl),$12
 401+ 94CE 08           	ex af,af
 402+ 94CF CD 58 9C     1 call Genera_coordenadas
 403+ 94D2 21 F3 88     	ld hl,Ctrl_0
 404+ 94D5 CB EE        	set 5,(hl)
 405+ 94D7 C9           	ret
 406+ 94D8
 407+ 94D8              ; ------------------------------------------------------------------------------------------------------------------
 408+ 94D8
 409+ 94D8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 94D8              ;
 411+ 94D8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 94D8
 413+ 94D8 7D           column ld a,l
 414+ 94D9 E6 1F        	and $1f
 415+ 94DB FE 10         	cp $10
 416+ 94DD C9            	ret
 417+ 94DE
 418+ 94DE              ; --------------------------------------------------------------------------------------------------------------------
 419+ 94DE              ;
 420+ 94DE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 94DE              ;
 422+ 94DE              ; 14/12/22
 423+ 94DE              ;
 424+ 94DE              ;	Modifica: A y BC.
 425+ 94DE
 426+ 94DE 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 94E1 E6 01        	and 1
 428+ 94E3 28 17        	jr z,1F
 429+ 94E5
 430+ 94E5              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 94E5
 432+ 94E5 3A CB 88     	ld a,(Coordenada_X)
 433+ 94E8 47           	ld b,a
 434+ 94E9 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 94EA 79           	ld a,c
 436+ 94EB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 94EC 38 08        	jr c,2F
 438+ 94EE 47           	ld b,a
 439+ 94EF 79           	ld a,c
 440+ 94F0 90           	sub b
 441+ 94F1 32 00 89     	ld (Columnas),a
 442+ 94F4 18 1B        	jr 4F
 443+ 94F6 79           2 ld a,c
 444+ 94F7 32 00 89     	ld (Columnas),a
 445+ 94FA 18 15        	jr 4F
 446+ 94FC
 447+ 94FC              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 94FC
 449+ 94FC 3A CB 88     1 ld a,(Coordenada_X)
 450+ 94FF 81           	add c
 451+ 9500 3D           	dec a
 452+ 9501 D6 1F        	sub $1f
 453+ 9503 38 08        	jr c,3F
 454+ 9505 47           	ld b,a
 455+ 9506 79           	ld a,c
 456+ 9507 90           	sub b
 457+ 9508 32 00 89     	ld (Columnas),a
 458+ 950B 18 04        	jr 4F
 459+ 950D 79           3 ld a,c
 460+ 950E 32 00 89     	ld (Columnas),a
 461+ 9511 D9           4 exx
 462+ 9512 4F           	ld c,a
 463+ 9513 D9           	exx
 464+ 9514 C9            ret
 465+ 9515
 466+ 9515              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9515              ;
 468+ 9515              ;   19/7/23
 469+ 9515              ;
 470+ 9515              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9515              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9515              ;
 473+ 9515              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9515              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9515              ;
 476+ 9515              ;	DESTRUYE: HL,B Y A.
 477+ 9515
 478+ 9515 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9518 FE 02        	cp 2
 480+ 951A 38 18        	jr c,1F
 481+ 951C 28 16        	jr z,1F
 482+ 951E E6 01        	and 1
 483+ 9520 28 0D        	jr z,3F
 484+ 9522
 485+ 9522              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 9522
 487+ 9522 CD 68 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9525
 489+ 9525 7D           9 ld a,l
 490+ 9526 E6 1F        	and $1f
 491+ 9528 28 2A        	jr z,7F
 492+ 952A 2B           	dec hl
 493+ 952B 10 F8        	djnz 9B
 494+ 952D 18 25        	jr 7F
 495+ 952F
 496+ 952F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 952F
 498+ 952F 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 9532 18 20        	jr 7F
 500+ 9534
 501+ 9534 28 14        1 jr z,2F
 502+ 9536
 503+ 9536              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9536
 505+ 9536 CD 68 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9539
 507+ 9539 7D           4 ld a,l
 508+ 953A E6 1F        	and $1f
 509+ 953C 28 03        	jr z,6F
 510+ 953E 2B           	dec hl
 511+ 953F 10 F8        	djnz 4B
 512+ 9541 06 0F        6 ld b,15
 513+ 9543 CD C9 95     5 call PreviousScan
 514+ 9546 10 FB        	djnz 5B
 515+ 9548 18 0A        	jr 7F
 516+ 954A
 517+ 954A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 954A
 519+ 954A CD 68 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 954D 06 0F        	ld b,15
 521+ 954F CD C9 95     8 call PreviousScan
 522+ 9552 10 FB        	djnz 8B
 523+ 9554
 524+ 9554 E5           7 push hl
 525+ 9555 DD E1        	pop ix
 526+ 9557
 527+ 9557 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 955A E5           	push hl
 529+ 955B FD E1        	pop iy
 530+ 955D
 531+ 955D              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 955D
 533+ 955D 3A F3 88     	ld a,(Ctrl_0)
 534+ 9560 CB 77        	bit 6,a
 535+ 9562 C8           	ret z
 536+ 9563
 537+ 9563              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9563              ; _ entidad / Amadeus´.
 539+ 9563
 540+ 9563 DD 22 A8 85  	ld (p.imp.amadeus),ix
 541+ 9567
 542+ 9567 C9           	ret
 543+ 9568
 544+ 9568              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9568              ;
 546+ 9568              ;	2/1/23
 547+ 9568              ;
 548+ 9568              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9568              ;
 550+ 9568              ;	Tras esta rutina tenemos:
 551+ 9568              ;
 552+ 9568              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9568              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9568              ;
 555+ 9568              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9568
 557+ 9568 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 956B 3A 00 89     	ld a,(Columnas)
 559+ 956E 3D           	dec a
 560+ 956F 20 01        	jr nz,1F
 561+ 9571 3C           	inc a
 562+ 9572 47           1 ld b,a
 563+ 9573 C9           	ret
 564+ 9574
 565+ 9574              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9574              ;
 567+ 9574              ;	3/1/23
 568+ 9574              ;
 569+ 9574              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9574              ;
 571+ 9574              ;	Destruye: A,B,HL y DE.
 572+ 9574
 573+ 9574              Define_rutina_de_impresion
 574+ 9574
 575+ 9574 3A C6 88     	ld a,(Columns)
 576+ 9577 47           	ld b,a
 577+ 9578 3A 00 89     	ld a,(Columnas)
 578+ 957B B8           	cp b
 579+ 957C 20 0D        	jr nz,2f
 580+ 957E
 581+ 957E              ;	La entidad se imprime entera.
 582+ 957E
 583+ 957E 21 9D 96     	ld hl, Indice_entidades_completas
 584+ 9581 E6 01        	and 1
 585+ 9583 28 02        	jr z,1F
 586+ 9585
 587+ 9585 23           	inc hl
 588+ 9586 23           	inc hl
 589+ 9587
 590+ 9587 CD 4E 8C     1 call Extrae_address
 591+ 958A C9           	ret		;	ret
 592+ 958B
 593+ 958B              ;	La entidad no se imprime entera en pantalla.
 594+ 958B
 595+ 958B 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 958E E6 01        	and 1
 597+ 9590 28 17        	jr z,3F
 598+ 9592
 599+ 9592              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9592
 601+ 9592 21 A1 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9595 3A C6 88     4 ld a,(Columns)
 603+ 9598 E6 01        	and 1
 604+ 959A 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 959C
 606+ 959C 23           	inc hl
 607+ 959D 23           	inc hl
 608+ 959E
 609+ 959E 3A 00 89     	ld a,(Columnas)
 610+ 95A1 E6 01        	and 1
 611+ 95A3 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 95A5
 613+ 95A5 23           	inc hl
 614+ 95A6 23           	inc hl
 615+ 95A7
 616+ 95A7 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 95A9
 618+ 95A9 21 A7 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 95AC 18 E7        	jr 4B
 620+ 95AE
 621+ 95AE              ; --------------------------------------------------------------------------------------------------------------------
 622+ 95AE              ;
 623+ 95AE              ;	Prepara_draw
 624+ 95AE              ;
 625+ 95AE              ;	Es una rutina de carga.
 626+ 95AE              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 95AE              ;
 628+ 95AE              ;	FUNCIONAMIENTO:
 629+ 95AE              ;
 630+ 95AE              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 95AE              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 95AE              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 95AE              ;
 634+ 95AE              ;	DESTRUYE:
 635+ 95AE              ;
 636+ 95AE              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 95AE
 638+ 95AE 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 95B1 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 95B2 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 95B3 4E           	ld c,(hl)
 642+ 95B4 2A C7 88     	ld hl,(Posicion_actual)
 643+ 95B7 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 95B9 C9           	ret
 645+ 95BA
 646+ 95BA              ;----------------------------------------------------------------------------------------------------------------
 647+ 95BA              ;
 648+ 95BA              ;	5/08/22
 649+ 95BA              ;
 650+ 95BA              ;   NextScan.
 651+ 95BA              ;
 652+ 95BA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 95BA              ;
 654+ 95BA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 95BA              ;
 656+ 95BA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 95BA              ;
 658+ 95BA              ;       DESTRUIDOS: AF y HL !!!
 659+ 95BA              ;
 660+ 95BA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 95BA              ;
 662+ 95BA
 663+ 95BA 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 95BB 7C               ld a,h
 665+ 95BC E6 07            and 7
 666+ 95BE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 95BF
 668+ 95BF 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 95C0 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 95C2 6F               ld l,a
 671+ 95C3 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 95C4
 673+ 95C4 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 95C5 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 95C7 67               ld h,a
 676+ 95C8 C9               ret
 677+ 95C9
 678+ 95C9              ;----------------------------------------------------------------------------------------------------------------
 679+ 95C9              ;
 680+ 95C9              ;	5/08/22
 681+ 95C9              ;
 682+ 95C9              ;   PreviousScan.
 683+ 95C9              ;
 684+ 95C9              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 95C9              ;
 686+ 95C9              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 95C9              ;
 688+ 95C9              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 95C9              ;
 690+ 95C9              ;       DESTRUIDOS: AF y HL !!!
 691+ 95C9              ;
 692+ 95C9              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 95C9              ;
 694+ 95C9
 695+ 95C9 7C           PreviousScan ld a,h
 696+ 95CA 25               dec h               ; Dec H.
 697+ 95CB E6 07            and 7
 698+ 95CD C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 95CE
 700+ 95CE 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 95CF D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 95D1 6F               ld l,a
 703+ 95D2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 95D3
 705+ 95D3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 95D4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 95D6 67               ld h,a
 708+ 95D7 C9               ret
 709+ 95D8
 710+ 95D8              ; -----------------------------------------------------------------------------------
 711+ 95D8              ;
 712+ 95D8              ;	31/7/23
 713+ 95D8              ;
 714+ 95D8              ;	Rutina principal de pintado de entidades.
 715+ 95D8              ;	Extrae la foto del frame, (entidades).
 716+ 95D8
 717+ 95D8              Extrae_foto_entidades
 718+ 95D8
 719+ 95D8 21 01 70     	ld hl,Album_de_fotos+1
 720+ 95DB 7E           	ld a,(hl)
 721+ 95DC A7           	and a
 722+ 95DD C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 95DE
 724+ 95DE              ;	No hay datos, (entidades para pintar en este frame).
 725+ 95DE
 726+ 95DE 3A 12 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 95E1 A7           	and a
 728+ 95E2 C8           	ret z
 729+ 95E3
 730+ 95E3              ; -----------------------------------
 731+ 95E3
 732+ 95E3 ED 73 17 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 95E7 31 00 70     	ld sp,Album_de_fotos
 734+ 95EA
 735+ 95EA FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 95EC E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 95ED D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 95EE
 739+ 95EE ED 73 19 89  	ld (Stack_2),sp
 740+ 95F2 ED 7B 17 89  	ld sp,(Stack)
 741+ 95F6
 742+ 95F6              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 95F6
 744+ 95F6 3E CD        	ld a,$cd
 745+ 95F8 32 00 96     	ld (Imprime),a
 746+ 95FB EB           	ex de,hl
 747+ 95FC 22 01 96     	ld (Imprime+1),hl
 748+ 95FF EB           	ex de,hl
 749+ 9600
 750+ 9600              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 9600
 752+ 9600 00 00 00     Imprime db 0,0,0
 753+ 9603
 754+ 9603 ED 73 17 89  	ld (Stack),sp
 755+ 9607
 756+ 9607 3A 12 89     	ld a,(Numero_de_malotes)
 757+ 960A 3D           	dec a
 758+ 960B 28 09        	jr z,1F
 759+ 960D 32 12 89      	ld (Numero_de_malotes),a
 760+ 9610
 761+ 9610 ED 7B 19 89  	ld sp,(Stack_2)
 762+ 9614 18 D4        	jr 2B
 763+ 9616
 764+ 9616 AF           1 xor a
 765+ 9617 32 19 89     	ld (Stack_2),a
 766+ 961A
 767+ 961A C9           	ret
 768+ 961B
 769+ 961B              ; -----------------------------------------------------------------------------------
 770+ 961B              ;
 771+ 961B              ;	28/2/23
 772+ 961B              ;
 773+ 961B              ;	Pinta los disparos generados.
 774+ 961B
 775+ 961B              Extrae_foto_disparos
 776+ 961B
 777+ 961B 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 961E 7E               ld a,(hl)
 779+ 961F A7               and a
 780+ 9620 C8               ret z
 781+ 9621
 782+ 9621 3A 26 89     	ld a,(Numero_de_disparotes)
 783+ 9624 A7           	and a
 784+ 9625 C8           	ret z
 785+ 9626 ED 73 17 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 962A 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 962D
 788+ 962D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 962F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9630 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 9631
 792+ 9631 ED 73 19 89  	ld (Stack_2),sp
 793+ 9635 ED 7B 17 89  	ld sp,(Stack)
 794+ 9639
 795+ 9639              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9639
 797+ 9639 3E CD        	ld a,$cd
 798+ 963B 32 43 96     	ld (Imprime2),a
 799+ 963E EB           	ex de,hl
 800+ 963F 22 44 96     	ld (Imprime2+1),hl
 801+ 9642 EB           	ex de,hl
 802+ 9643
 803+ 9643              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 9643
 805+ 9643 00 00 00     Imprime2 db 0,0,0
 806+ 9646
 807+ 9646 3A 26 89     	ld a,(Numero_de_disparotes)
 808+ 9649 3D           	dec a
 809+ 964A 28 09        	jr z,1F
 810+ 964C 32 26 89      	ld (Numero_de_disparotes),a
 811+ 964F
 812+ 964F ED 7B 19 89  	ld sp,(Stack_2)
 813+ 9653 18 D8        	jr 2B
 814+ 9655
 815+ 9655 AF           1 xor a
 816+ 9656 32 19 89     	ld (Stack_2),a
 817+ 9659 C9           	ret
 818+ 965A
 819+ 965A              ; -----------------------------------------------------------------------------------
 820+ 965A              ;
 821+ 965A              ;	4/9/23
 822+ 965A              ;
 823+ 965A              ;	Rutina principal de pintado de Amadeus.
 824+ 965A              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 965A
 826+ 965A 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 965D 7E           	ld a,(hl)
 828+ 965E A7           	and a
 829+ 965F C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 9660
 831+ 9660 3A 12 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9663 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9664 C8           	ret z
 834+ 9665
 835+ 9665              ; -----------------------------------
 836+ 9665
 837+ 9665 ED 73 17 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9669 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 966C
 840+ 966C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 966E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 966F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 9670
 844+ 9670 ED 73 19 89  	ld (Stack_2),sp
 845+ 9674 ED 7B 17 89  	ld sp,(Stack)
 846+ 9678
 847+ 9678              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9678
 849+ 9678 3E CD        	ld a,$cd
 850+ 967A 32 82 96     	ld (Imprime_Amadeus),a
 851+ 967D EB           	ex de,hl
 852+ 967E 22 83 96     	ld (Imprime_Amadeus+1),hl
 853+ 9681 EB           	ex de,hl
 854+ 9682
 855+ 9682              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 9682
 857+ 9682 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9685
 859+ 9685 ED 73 17 89  	ld (Stack),sp
 860+ 9689
 861+ 9689 3A 12 89     	ld a,(Numero_de_malotes)
 862+ 968C 3D           	dec a
 863+ 968D 28 09        	jr z,1F
 864+ 968F 32 12 89      	ld (Numero_de_malotes),a
 865+ 9692
 866+ 9692 ED 7B 19 89  	ld sp,(Stack_2)
 867+ 9696 18 D4        	jr 2B
 868+ 9698
 869+ 9698 AF           1 xor a
 870+ 9699 32 19 89     	ld (Stack_2),a
 871+ 969C
 872+ 969C C9           	ret
# file closed: Draw_XOR.asm
1601  969D              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 969D              ;   índices de Rutinas de impresión.
   2+ 969D
   3+ 969D AD 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 969F DA 96            defw Pinta_Amadeus_3x2
   5+ 96A1
   6+ 96A1 30 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96A3 D0 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96A5 84 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96A7
  10+ 96A7 5A 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96A9 5E 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96AB 12 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96AD
  14+ 96AD
  15+ 96AD              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96AD              ;
  17+ 96AD              ;   12/12/22
  18+ 96AD              ;
  19+ 96AD              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96AD              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96AD              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96AD              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96AD              ;
  24+ 96AD              ;   Modifica: DE y HL.
  25+ 96AD
  26+ 96AD ED 73 17 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96B1 FD F9        	ld sp,iy
  28+ 96B3 06 10            ld b,16
  29+ 96B5 D1           1 pop de
  30+ 96B6 7B               ld a,e
  31+ 96B7 AE               xor (hl)
  32+ 96B8 77           	ld (hl),a
  33+ 96B9 23           	inc hl
  34+ 96BA 7A               ld a,d
  35+ 96BB AE               xor (hl)
  36+ 96BC 77           	ld (hl),a
  37+ 96BD 2B           	dec hl
  38+ 96BE 24           	inc h
  39+ 96BF 7C               ld a,h
  40+ 96C0 E6 07            and 7
  41+ 96C2 20 0A            jr nz,2F
  42+ 96C4 7D               ld a,l
  43+ 96C5 C6 20            add a,$20
  44+ 96C7 6F               ld l,a
  45+ 96C8 38 04            jr c,2F
  46+ 96CA 7C               ld a,h
  47+ 96CB D6 08            sub 8
  48+ 96CD 67               ld h,a
  49+ 96CE 7C           2 ld a,h
  50+ 96CF FE 58            cp $58
  51+ 96D1 28 02            jr z,3F
  52+ 96D3 10 E0            djnz 1B
  53+ 96D5 ED 7B 17 89  3 ld sp,(Stack)
  54+ 96D9 C9           	ret
  55+ 96DA
  56+ 96DA ED 73 17 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96DE FD F9        	ld sp,iy
  58+ 96E0 06 08            ld b,8
  59+ 96E2 D1           1 pop de
  60+ 96E3 7B               ld a,e
  61+ 96E4 AE               xor (hl)
  62+ 96E5 77           	ld (hl),a
  63+ 96E6 23           	inc hl
  64+ 96E7 7A               ld a,d
  65+ 96E8 AE               xor (hl)
  66+ 96E9 77           	ld (hl),a
  67+ 96EA 23           	inc hl
  68+ 96EB D1           	pop de
  69+ 96EC 7B               ld a,e
  70+ 96ED AE               xor (hl)
  71+ 96EE 77           	ld (hl),a
  72+ 96EF 2B           	dec hl
  73+ 96F0 2B           	dec hl
  74+ 96F1 24           	inc h
  75+ 96F2 7C               ld a,h
  76+ 96F3 E6 07            and 7
  77+ 96F5 20 0A            jr nz,2F
  78+ 96F7 7D               ld a,l
  79+ 96F8 C6 20            add a,$20
  80+ 96FA 6F               ld l,a
  81+ 96FB 38 04            jr c,2F
  82+ 96FD 7C               ld a,h
  83+ 96FE D6 08            sub 8
  84+ 9700 67               ld h,a
  85+ 9701 7C           2 ld a,h
  86+ 9702 FE 58            cp $58
  87+ 9704 28 25            jr z,4F
  88+ 9706 7A               ld a,d
  89+ 9707 AE               xor (hl)
  90+ 9708 77               ld (hl),a
  91+ 9709 D1           	pop de
  92+ 970A 23           	inc hl
  93+ 970B 7B               ld a,e
  94+ 970C AE               xor (hl)
  95+ 970D 77           	ld (hl),a
  96+ 970E 23           	inc hl
  97+ 970F 7A               ld a,d
  98+ 9710 AE               xor (hl)
  99+ 9711 77           	ld (hl),a
 100+ 9712 2B           	dec hl
 101+ 9713 2B           	dec hl
 102+ 9714 24           	inc h
 103+ 9715 7C               ld a,h
 104+ 9716 E6 07            and 7
 105+ 9718 20 0A            jr nz,3F
 106+ 971A 7D               ld a,l
 107+ 971B C6 20            add a,$20
 108+ 971D 6F               ld l,a
 109+ 971E 38 04            jr c,3F
 110+ 9720 7C               ld a,h
 111+ 9721 D6 08            sub 8
 112+ 9723 67               ld h,a
 113+ 9724 7C           3 ld a,h
 114+ 9725 FE 58            cp $58
 115+ 9727 28 02            jr z,4F
 116+ 9729 10 B7            djnz 1B
 117+ 972B ED 7B 17 89  4 ld sp,(Stack)
 118+ 972F C9           	ret
 119+ 9730
 120+ 9730              ; ---------------------------------------------------
 121+ 9730
 122+ 9730 ED 73 17 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9734 FD F9        	ld sp,iy
 124+ 9736
 125+ 9736              ; >>>
 126+ 9736
 127+ 9736 06 10            ld b,16
 128+ 9738 D1           1 pop de
 129+ 9739 7A           	ld a,d
 130+ 973A AE           	xor (hl)
 131+ 973B 77           	ld (hl),a
 132+ 973C 24           	inc h
 133+ 973D 7C               ld a,h
 134+ 973E E6 07            and 7
 135+ 9740 20 0C            jr nz,2F
 136+ 9742 7D               ld a,l
 137+ 9743 C6 20            add a,$20
 138+ 9745 6F               ld l,a
 139+ 9746 38 06            jr c,2F
 140+ 9748 7C               ld a,h
 141+ 9749 D6 08            sub 8
 142+ 974B 67               ld h,a
 143+ 974C 18 00            jr 2F
 144+ 974E 7C           2 ld a,h
 145+ 974F FE 58            cp $58
 146+ 9751 28 02            jr z,3F
 147+ 9753 10 E3            djnz 1B
 148+ 9755 ED 7B 17 89  3 ld sp,(Stack)
 149+ 9759 C9           	ret
 150+ 975A
 151+ 975A ED 73 17 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 975E FD F9        	ld sp,iy
 153+ 9760
 154+ 9760              ; >>>
 155+ 9760
 156+ 9760 06 10            ld b,16
 157+ 9762 D1           1 pop de
 158+ 9763 7B           	ld a,e
 159+ 9764 AE           	xor (hl)
 160+ 9765 77           	ld (hl),a
 161+ 9766 24           	inc h
 162+ 9767 7C               ld a,h
 163+ 9768 E6 07            and 7
 164+ 976A 20 0C            jr nz,2F
 165+ 976C 7D               ld a,l
 166+ 976D C6 20            add a,$20
 167+ 976F 6F               ld l,a
 168+ 9770 38 06            jr c,2F
 169+ 9772 7C               ld a,h
 170+ 9773 D6 08            sub 8
 171+ 9775 67               ld h,a
 172+ 9776 18 00            jr 2F
 173+ 9778 7C           2 ld a,h
 174+ 9779 FE 58            cp $58
 175+ 977B 28 02            jr z,3F
 176+ 977D 10 E3            djnz 1B
 177+ 977F ED 7B 17 89  3 ld sp,(Stack)
 178+ 9783 C9           	ret
 179+ 9784
 180+ 9784              ; ---------------------------------------------------
 181+ 9784
 182+ 9784 ED 73 17 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9788 FD F9        	ld sp,iy
 184+ 978A 06 08            ld b,8
 185+ 978C D1           1 pop de
 186+ 978D 7A           	ld a,d
 187+ 978E AE           	xor (hl)
 188+ 978F 77           	ld (hl),a
 189+ 9790 23           	inc hl
 190+ 9791 D1           	pop de
 191+ 9792 7B           	ld a,e
 192+ 9793 AE           	xor (hl)
 193+ 9794 77           	ld (hl),a
 194+ 9795 2B           	dec hl
 195+ 9796 24            	inc h
 196+ 9797 7C               ld a,h
 197+ 9798 E6 07            and 7
 198+ 979A 20 0A            jr nz,2F
 199+ 979C 7D               ld a,l
 200+ 979D C6 20            add a,$20
 201+ 979F 6F               ld l,a
 202+ 97A0 38 04            jr c,2F
 203+ 97A2 7C               ld a,h
 204+ 97A3 D6 08            sub 8
 205+ 97A5 67               ld h,a
 206+ 97A6 7C           2 ld a,h
 207+ 97A7 FE 58            cp $58
 208+ 97A9 28 20            jr z,4F
 209+ 97AB D1               pop de
 210+ 97AC 7B           	ld a,e
 211+ 97AD AE           	xor (hl)
 212+ 97AE 77           	ld (hl),a
 213+ 97AF 23           	inc hl
 214+ 97B0 7A           	ld a,d
 215+ 97B1 AE           	xor (hl)
 216+ 97B2 77           	ld (hl),a
 217+ 97B3 2B           	dec hl
 218+ 97B4 24           	inc h
 219+ 97B5 7C               ld a,h
 220+ 97B6 E6 07            and 7
 221+ 97B8 20 0A            jr nz,3F
 222+ 97BA 7D               ld a,l
 223+ 97BB C6 20            add a,$20
 224+ 97BD 6F               ld l,a
 225+ 97BE 38 04            jr c,3F
 226+ 97C0 7C               ld a,h
 227+ 97C1 D6 08            sub 8
 228+ 97C3 67               ld h,a
 229+ 97C4 7C           3 ld a,h
 230+ 97C5 FE 58            cp $58
 231+ 97C7 28 02            jr z,4F
 232+ 97C9 10 C1            djnz 1B
 233+ 97CB ED 7B 17 89  4 ld sp,(Stack)
 234+ 97CF C9           	ret
 235+ 97D0
 236+ 97D0 ED 73 17 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97D4 FD F9        	ld sp,iy
 238+ 97D6 06 08            ld b,8
 239+ 97D8 D1           1 pop de
 240+ 97D9 D1           	pop de
 241+ 97DA 7B           	ld a,e
 242+ 97DB AE           	xor (hl)
 243+ 97DC 77           	ld (hl),a
 244+ 97DD 24            	inc h
 245+ 97DE 7C               ld a,h
 246+ 97DF E6 07            and 7
 247+ 97E1 20 0A            jr nz,2F
 248+ 97E3 7D               ld a,l
 249+ 97E4 C6 20            add a,$20
 250+ 97E6 6F               ld l,a
 251+ 97E7 38 04            jr c,2F
 252+ 97E9 7C               ld a,h
 253+ 97EA D6 08            sub 8
 254+ 97EC 67               ld h,a
 255+ 97ED 7C           2 ld a,h
 256+ 97EE FE 58            cp $58
 257+ 97F0 28 1B            jr z,4F
 258+ 97F2 D1               pop de
 259+ 97F3 7A           	ld a,d
 260+ 97F4 AE           	xor (hl)
 261+ 97F5 77           	ld (hl),a
 262+ 97F6 24           	inc h
 263+ 97F7 7C               ld a,h
 264+ 97F8 E6 07            and 7
 265+ 97FA 20 0A            jr nz,3F
 266+ 97FC 7D               ld a,l
 267+ 97FD C6 20            add a,$20
 268+ 97FF 6F               ld l,a
 269+ 9800 38 04            jr c,3F
 270+ 9802 7C               ld a,h
 271+ 9803 D6 08            sub 8
 272+ 9805 67               ld h,a
 273+ 9806 7C           3 ld a,h
 274+ 9807 FE 58            cp $58
 275+ 9809 28 02            jr z,4F
 276+ 980B 10 CB            djnz 1B
 277+ 980D ED 7B 17 89  4 ld sp,(Stack)
 278+ 9811 C9           	ret
 279+ 9812
 280+ 9812 ED 73 17 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9816 FD F9        	ld sp,iy
 282+ 9818 06 08            ld b,8
 283+ 981A D1           1 pop de
 284+ 981B 7B           	ld a,e
 285+ 981C AE           	xor (hl)
 286+ 981D 77           	ld (hl),a
 287+ 981E 23           	inc hl
 288+ 981F 7A           	ld a,d
 289+ 9820 AE           	xor (hl)
 290+ 9821 77           	ld (hl),a
 291+ 9822 2B           	dec hl
 292+ 9823 24             	inc h
 293+ 9824 7C               ld a,h
 294+ 9825 E6 07            and 7
 295+ 9827 20 0A            jr nz,2F
 296+ 9829 7D               ld a,l
 297+ 982A C6 20            add a,$20
 298+ 982C 6F               ld l,a
 299+ 982D 38 04            jr c,2F
 300+ 982F 7C               ld a,h
 301+ 9830 D6 08            sub 8
 302+ 9832 67               ld h,a
 303+ 9833 7C           2 ld a,h
 304+ 9834 FE 58            cp $58
 305+ 9836 28 21            jr z,4F
 306+ 9838 D1               pop de
 307+ 9839 7A           	ld a,d
 308+ 983A AE           	xor (hl)
 309+ 983B 77           	ld (hl),a
 310+ 983C 23           	inc hl
 311+ 983D D1               pop de
 312+ 983E 7B           	ld a,e
 313+ 983F AE           	xor (hl)
 314+ 9840 77           	ld (hl),a
 315+ 9841 2B           	dec hl
 316+ 9842 24           	inc h
 317+ 9843 7C               ld a,h
 318+ 9844 E6 07            and 7
 319+ 9846 20 0A            jr nz,3F
 320+ 9848 7D               ld a,l
 321+ 9849 C6 20            add a,$20
 322+ 984B 6F               ld l,a
 323+ 984C 38 04            jr c,3F
 324+ 984E 7C               ld a,h
 325+ 984F D6 08            sub 8
 326+ 9851 67               ld h,a
 327+ 9852 7C           3 ld a,h
 328+ 9853 FE 58            cp $58
 329+ 9855 28 02            jr z,4F
 330+ 9857 10 C1            djnz 1B
 331+ 9859 ED 7B 17 89  4 ld sp,(Stack)
 332+ 985D C9           	ret
 333+ 985E
 334+ 985E ED 73 17 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9862 FD F9        	ld sp,iy
 336+ 9864 06 08            ld b,8
 337+ 9866 D1           1 pop de
 338+ 9867 7B           	ld a,e
 339+ 9868 AE           	xor (hl)
 340+ 9869 77           	ld (hl),a
 341+ 986A 24            	inc h
 342+ 986B 7C               ld a,h
 343+ 986C E6 07            and 7
 344+ 986E 20 0A            jr nz,2F
 345+ 9870 7D               ld a,l
 346+ 9871 C6 20            add a,$20
 347+ 9873 6F               ld l,a
 348+ 9874 38 04            jr c,2F
 349+ 9876 7C               ld a,h
 350+ 9877 D6 08            sub 8
 351+ 9879 67               ld h,a
 352+ 987A 7C           2 ld a,h
 353+ 987B FE 58            cp $58
 354+ 987D 28 1C            jr z,4F
 355+ 987F D1               pop de
 356+ 9880 7A           	ld a,d
 357+ 9881 AE           	xor (hl)
 358+ 9882 77           	ld (hl),a
 359+ 9883 24           	inc h
 360+ 9884 7C               ld a,h
 361+ 9885 E6 07            and 7
 362+ 9887 20 0A            jr nz,3F
 363+ 9889 7D               ld a,l
 364+ 988A C6 20            add a,$20
 365+ 988C 6F               ld l,a
 366+ 988D 38 04            jr c,3F
 367+ 988F 7C               ld a,h
 368+ 9890 D6 08            sub 8
 369+ 9892 67               ld h,a
 370+ 9893 7C           3 ld a,h
 371+ 9894 FE 58            cp $58
 372+ 9896 28 03            jr z,4F
 373+ 9898 D1               pop de
 374+ 9899 10 CB            djnz 1B
 375+ 989B ED 7B 17 89  4 ld sp,(Stack)
 376+ 989F C9           	ret
 377+ 98A0
 378+ 98A0              ; ---------------------------------------------------
 379+ 98A0              ;
 380+ 98A0              ;   27/02/23
 381+ 98A0              ;
 382+ 98A0              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98A0              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98A0              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98A0
 386+ 98A0 ED 73 17 89  Pinta_Disparo ld (Stack),sp
 387+ 98A4 FD F9            ld sp,iy
 388+ 98A6 06 03            ld b,3
 389+ 98A8 D1           1 pop de
 390+ 98A9 7B               ld a,e
 391+ 98AA AE               xor (hl)
 392+ 98AB 77               ld (hl),a
 393+ 98AC 23               inc hl
 394+ 98AD 7A               ld a,d
 395+ 98AE AE               xor (hl)
 396+ 98AF 77               ld (hl),a
 397+ 98B0 2B               dec hl
 398+ 98B1
 399+ 98B1 24               inc h
 400+ 98B2 7C               ld a,h
 401+ 98B3 E6 07            and 7
 402+ 98B5 20 0A            jr nz,2F
 403+ 98B7 7D               ld a,l
 404+ 98B8 C6 20            add a,$20
 405+ 98BA 6F               ld l,a
 406+ 98BB 38 04            jr c,2F
 407+ 98BD 7C               ld a,h
 408+ 98BE D6 08            sub 8
 409+ 98C0 67               ld h,a
 410+ 98C1 7C           2 ld a,h
 411+ 98C2 FE 58            cp $58
 412+ 98C4 28 02            jr z,3F
 413+ 98C6
 414+ 98C6 10 E0            djnz 1B
 415+ 98C8 ED 7B 17 89  3 ld sp,(Stack)
 416+ 98CC C9               ret
 417+ 98CD
# file closed: Rutinas_de_impresion_sprites.asm
1602  98CD              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98CD              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98CD              ;
   3+ 98CD              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98CD              ;
   5+ 98CD              ; *****************************************************************************************************************************************************************************************
   6+ 98CD              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98CD
   8+ 98CD 7C           calcula_tercio ld a,h
   9+ 98CE E6 18        	and $18
  10+ 98D0 CB 2F        	sra a
  11+ 98D2 CB 2F        	sra a
  12+ 98D4 CB 2F        	sra a
  13+ 98D6 C9           	ret
  14+ 98D7
# file closed: calcula_tercio.asm
1603  98D7              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98D7              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98D7              ;
   3+ 98D7              ;
   4+ 98D7              ;	CLS.
   5+ 98D7              ;
   6+ 98D7              ;	Limpia la pantalla y define sus atributos.
   7+ 98D7              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98D7              ;
   9+ 98D7              ;	COLORES: 0 ..... NEGRO
  10+ 98D7              ;    		 1 ..... AZUL
  11+ 98D7              ; 			 2 ..... ROJO
  12+ 98D7              ;			 3 ..... MAGENTA
  13+ 98D7              ; 			 4 ..... VERDE
  14+ 98D7              ; 			 5 ..... CIAN
  15+ 98D7              ;			 6 ..... AMARILLO
  16+ 98D7              ; 			 7 ..... BLANCO
  17+ 98D7              ;
  18+ 98D7              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98D7              ;
  20+ 98D7              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98D7
  22+ 98D7
  23+ 98D7 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98DA 11 01 40     	LD DE,$4001
  25+ 98DD 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98E0 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98E2 ED B0        	LDIR
  28+ 98E4 01 FF 02     	LD BC,767
  29+ 98E7 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98E8 ED B0        	LDIR
  31+ 98EA C9           	ret
  32+ 98EB
# file closed: Cls.asm
1604  98EB              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98EB              ; ******************************************************************************************************************************************************************************************
   2+ 98EB              ;
   3+ 98EB              ;   20/05/23
   4+ 98EB              ;
   5+ 98EB              ;	Recompone_posicion_inicio
   6+ 98EB              ;
   7+ 98EB              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98EB              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98EB              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98EB              ;	_ a una u otra rutina.
  11+ 98EB
  12+ 98EB              Recompone_posicion_inicio
  13+ 98EB
  14+ 98EB 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 98EE 7D           	ld a,l
  16+ 98EF E6 1F        	and $1f
  17+ 98F1 28 16        	jr z,1F
  18+ 98F3
  19+ 98F3 FE 1F        	cp $1f
  20+ 98F5 28 0D        	jr z,3F
  21+ 98F7
  22+ 98F7 21 04 89     	ld hl,Ctrl_2
  23+ 98FA CB C6        	set 0,(hl)
  24+ 98FC 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 98FF 22 07 89     	ld (Repone_puntero_objeto),hl
  26+ 9902 18 08        	jr 2F
  27+ 9904
  28+ 9904 CD A5 9A     3 call Mov_left
  29+ 9907 18 03        	jr 2F
  30+ 9909
  31+ 9909 CD 87 99     1 call Mov_right
  32+ 990C 21 00 F0     2 ld hl,Sprite_vacio
  33+ 990F 22 C9 88     	ld (Puntero_objeto),hl
  34+ 9912 C9           	ret
  35+ 9913
  36+ 9913              ; ******************************************************************************************************************************************************************************************
  37+ 9913              ;
  38+ 9913              ;   27/05/23
  39+ 9913              ;
  40+ 9913              ;	Mov_down
  41+ 9913              ;
  42+ 9913              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9913              ;
  44+ 9913              ;
  45+ 9913              Mov_down
  46+ 9913
  47+ 9913 CD 75 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9916              ;																	; _ repone (Puntero_objeto).
  49+ 9916 21 F3 88     	ld hl,Ctrl_0
  50+ 9919 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 991B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 991B              ; 																	; _ en el caso de que no lo haya.
  53+ 991B 3A DD 88     	ld a,(Vel_down)
  54+ 991E 47           	ld b,a
  55+ 991F 2A C7 88         ld hl,(Posicion_actual)
  56+ 9922 CD CD 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9925 E6 02        	and 2
  58+ 9927 28 0F        	jr z,1F
  59+ 9929
  60+ 9929              ; Nos encontramos en el último tercio de pantalla.
  61+ 9929              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9929
  63+ 9929 7C           	ld a,h
  64+ 992A FE 57        	cp $57
  65+ 992C 20 0A        	jr nz,1F
  66+ 992E
  67+ 992E 7D           	ld a,l
  68+ 992F C6 20        	add $20
  69+ 9931 30 05        	jr nc,1F
  70+ 9933
  71+ 9933              ; ------------------------------
  72+ 9933              ;	call Reaparece_arriba
  73+ 9933 CD 32 9C     	call Reinicio
  74+ 9936              ; ------------------------------
  75+ 9936
  76+ 9936 18 08        	jr 3F
  77+ 9938 CD BA 95     1 call NextScan
  78+ 993B 22 C7 88     	ld (Posicion_actual),hl
  79+ 993E 10 E2            djnz 2B
  80+ 9940 CD 58 9C     3 call Genera_coordenadas
  81+ 9943 C9           	ret
  82+ 9944
  83+ 9944              ; ******************************************************************************************************************************************************************************************
  84+ 9944              ;
  85+ 9944              ;   27/05/23
  86+ 9944              ;
  87+ 9944              ;	Mov_up
  88+ 9944              ;
  89+ 9944              ; 	Mueve el Sprite hacia arriba.
  90+ 9944              ;
  91+ 9944              ;
  92+ 9944              Mov_up
  93+ 9944
  94+ 9944 CD 75 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9947              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9947 21 F3 88     	ld hl,Ctrl_0
  97+ 994A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 994C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 994C              ; 																		; _ en el caso de que no lo haya.
 100+ 994C 3A DC 88     	ld a,(Vel_up)
 101+ 994F 47           	ld b,a
 102+ 9950 2A C7 88     	ld hl,(Posicion_actual)
 103+ 9953 CD CD 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9956 A7           	and a
 105+ 9957 20 10        	jr nz,1F
 106+ 9959
 107+ 9959              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9959              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9959
 110+ 9959 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 995A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 995C 20 0B            jr nz,1F
 113+ 995E 7D               ld a,l
 114+ 995F D6 20            sub $20
 115+ 9961 30 06            jr nc,1F
 116+ 9963 25               dec h
 117+ 9964
 118+ 9964              ; -----------------------------
 119+ 9964 CD 13 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9967              ;	call Reinicio
 121+ 9967              ; -----------------------------
 122+ 9967
 123+ 9967 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9969 CD C9 95     1 call PreviousScan
 125+ 996C 22 C7 88     	ld (Posicion_actual),hl
 126+ 996F 10 E2            djnz 3B
 127+ 9971 CD 58 9C     2 call Genera_coordenadas
 128+ 9974 C9           	ret
 129+ 9975
 130+ 9975              ; -----------------------------
 131+ 9975              ;
 132+ 9975              ;	27/5/23
 133+ 9975              ;
 134+ 9975              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9975              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9975              ;
 137+ 9975              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9975              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9975              ;
 140+ 9975              ;	Modifica: A y (Puntero_objeto).
 141+ 9975
 142+ 9975 3A 04 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9978 CB 47        	bit 0,a
 144+ 997A C8           	ret z
 145+ 997B CB 87        	res 0,a
 146+ 997D 32 04 89     	ld (Ctrl_2),a
 147+ 9980 2A 07 89     	ld hl,(Repone_puntero_objeto)
 148+ 9983 22 C9 88     	ld (Puntero_objeto),hl
 149+ 9986 C9           	ret
 150+ 9987
 151+ 9987              ; ******************************************************************************************************************************************************************************************
 152+ 9987              ;
 153+ 9987              ;	19/10/22
 154+ 9987              ;
 155+ 9987              ;	Mov_right.
 156+ 9987              ;
 157+ 9987              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9987              ;
 159+ 9987
 160+ 9987 21 F3 88     Mov_right ld hl,Ctrl_0
 161+ 998A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 998C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 998C              ; 																	; _ en el caso de que no lo haya.
 164+ 998C 3A F3 88     	ld a,(Ctrl_0)
 165+ 998F CB 77        	bit 6,a
 166+ 9991 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9993
 168+ 9993 CD C1 9B     	call Stop_Amadeus_right
 169+ 9996 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9997 18 4D        	jr 8F
 171+ 9999
 172+ 9999 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 999C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 999E 20 46        	jr nz,8F
 175+ 99A0
 176+ 99A0 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 99A3 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 99A4 28 40        	jr z,8F
 179+ 99A6
 180+ 99A6              ; ---------- ---------- ----------
 181+ 99A6              ;
 182+ 99A6              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 99A6
 184+ 99A6 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 99A9 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 99AB 28 11        	jr z,1F
 187+ 99AD 38 06        	jr c,6F
 188+ 99AF FE 04        	cp 4
 189+ 99B1 28 14        	jr z,7F
 190+ 99B3 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 99B5
 192+ 99B5              ; ---------- ---------- ----------
 193+ 99B5              ;
 194+ 99B5              ; Perfiles de velocidad
 195+ 99B5              ;
 196+ 99B5
 197+ 99B5 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 99B8 FE FE        	cp $fe
 199+ 99BA 20 2A        	jr nz,8F
 200+ 99BC 18 10        	jr 3F
 201+ 99BE 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 99C1 FE FD        	cp $fd
 203+ 99C3 20 21        	jr nz,8F
 204+ 99C5 18 07        	jr 3F
 205+ 99C7 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 99CA FE FB        	cp $fb
 207+ 99CC 20 18        	jr nz,8F
 208+ 99CE
 209+ 99CE              ; ---------- ---------- ----------
 210+ 99CE
 211+ 99CE              3
 212+ 99CE CD 01 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 99D1              ;	call Reinicio
 214+ 99D1
 215+ 99D1              ; ---------- ---------- ----------
 216+ 99D1              ;
 217+ 99D1              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 99D1
 219+ 99D1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 99D3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 99D4 CD ED 99     	call DESPLZ_DER
 222+ 99D7 C1           	pop bc
 223+ 99D8 10 F9        	djnz 5B
 224+ 99DA 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 99DD 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 99DE 22 C7 88     	ld (Posicion_actual),hl
 227+ 99E1 CD 58 9C     	call Genera_coordenadas
 228+ 99E4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 99E6
 230+ 99E6              ; ---------- ---------- ----------
 231+ 99E6
 232+ 99E6 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 99E9 CD ED 99     	call DESPLZ_DER
 234+ 99EC C9           2 ret
 235+ 99ED
 236+ 99ED              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 99ED              ;
 238+ 99ED              ;	22/9/22
 239+ 99ED              ;
 240+ 99ED
 241+ 99ED CD FC 99     DESPLZ_DER call Desplaza_derecha
 242+ 99F0 CD 48 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 99F3 CD 71 9A         call Ciclo_completo
 244+ 99F6 21 F3 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 99F9 CB FE        	set 7,(hl)
 246+ 99FB C9           	ret
 247+ 99FC
 248+ 99FC              ; ******************************************************************************************************************************************************************************************
 249+ 99FC              ;	15/02/23
 250+ 99FC              ;
 251+ 99FC
 252+ 99FC 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 99FF 47           	ld b,a
 254+ 9A00 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A03 23           1 inc hl
 256+ 9A04 23           	inc hl
 257+ 9A05 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A07 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A0A CD 4E 8C     	call Extrae_address
 260+ 9A0D 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9A10
 262+ 9A10              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A10
 264+ 9A10              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A10              ; Cuántos movimientos hemos hecho ??
 266+ 9A10              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A10
 268+ 9A10 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A13 EB           	ex de,hl
 270+ 9A14 A7           	and a
 271+ 9A15 ED 52        	sbc hl,de
 272+ 9A17 CB 3D        	srl l
 273+ 9A19 3E 08        6 ld a,8
 274+ 9A1B 95           	sub l
 275+ 9A1C 30 1E        	jr nc,3F
 276+ 9A1E
 277+ 9A1E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A1E              ; B="0".
 279+ 9A1E
 280+ 9A1E 04           4 inc b
 281+ 9A1F 3C           	inc a
 282+ 9A20 20 FC        	jr nz,4B
 283+ 9A22 78           	ld a,b
 284+ 9A23 08           	ex af,af
 285+ 9A24 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9A27 23           5 inc hl
 287+ 9A28 23           	inc hl
 288+ 9A29 10 FC        	djnz 5B
 289+ 9A2B 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A2E CD 4E 8C     	call Extrae_address
 291+ 9A31 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9A34
 293+ 9A34              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A34              ; _(Posicion_actual).
 295+ 9A34
 296+ 9A34 21 C7 88     	ld hl,Posicion_actual
 297+ 9A37 34           	inc (hl)
 298+ 9A38 08               ex af,af
 299+ 9A39 6F           	ld l,a
 300+ 9A3A 18 DD        	jr 6B
 301+ 9A3C
 302+ 9A3C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A3C
 304+ 9A3C 47           3 ld b,a
 305+ 9A3D 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A40 23           2 inc hl
 307+ 9A41 23           	inc hl
 308+ 9A42 10 FC        	djnz 2B
 309+ 9A44 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A47 C9           8 ret
 311+ 9A48
 312+ 9A48              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A48              ;
 314+ 9A48              ;	24/7/22
 315+ 9A48              ;
 316+ 9A48              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A48              ;
 318+ 9A48              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A48              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A48              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A48
 322+ 9A48 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A4B A7           	and a
 324+ 9A4C 20 1F        	jr nz,1F
 325+ 9A4E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A50 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9A53
 328+ 9A53 21 C6 88     	ld hl,Columns
 329+ 9A56 34           	inc (hl)
 330+ 9A57 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9A5A E6 01        	and 1
 332+ 9A5C 28 0F        	jr z,1F
 333+ 9A5E 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A61 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A62 22 C7 88     	ld (Posicion_actual),hl
 336+ 9A65 CD 58 9C     	call Genera_coordenadas
 337+ 9A68 CD CD 9B     	call Inc_CTRL_DESPLZ
 338+ 9A6B 18 03        	jr 2F
 339+ 9A6D CD CD 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A70 C9           2 ret
 341+ 9A71
 342+ 9A71              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A71              ;
 344+ 9A71              ;	24/7/22
 345+ 9A71              ;
 346+ 9A71              ;	Ciclo_completo.
 347+ 9A71              ;
 348+ 9A71              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A71              ;
 350+ 9A71              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A71              ; 	Decrementamos (Columns).
 352+ 9A71              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A71              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A71
 355+ 9A71
 356+ 9A71 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A74 FE FF        	cp $ff
 358+ 9A76 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A78 E6 F0        	and $f0
 360+ 9A7A 20 28        	jr nz,3F
 361+ 9A7C
 362+ 9A7C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A7C
 364+ 9A7C 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9A7F 47           	ld b,a
 366+ 9A80 3E F8        	ld a,$f8
 367+ 9A82 80           	add b
 368+ 9A83 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9A86 18 1C        	jr 3F
 370+ 9A88 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A8B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A8C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A8D 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9A90 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A93 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A95 20 0A        	jr nz,2F
 377+ 9A97 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A9A 23           	inc hl
 379+ 9A9B 22 C7 88     	ld (Posicion_actual),hl
 380+ 9A9E CD 58 9C     	call Genera_coordenadas
 381+ 9AA1
 382+ 9AA1              ; Inicia el puntero de Sprite.
 383+ 9AA1
 384+ 9AA1 CD 65 8C     2 call Inicia_puntero_objeto_der
 385+ 9AA4 C9           3 ret
 386+ 9AA5
 387+ 9AA5              ; ******************************************************************************************************************************************************************************************
 388+ 9AA5              ;
 389+ 9AA5              ;	15/02/23
 390+ 9AA5              ;
 391+ 9AA5              ;	Mov_left.
 392+ 9AA5              ;
 393+ 9AA5              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9AA5              ;
 395+ 9AA5              Mov_left
 396+ 9AA5
 397+ 9AA5 21 F3 88     	ld hl,Ctrl_0
 398+ 9AA8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9AAA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9AAA              ; 																	; _ en el caso de que no lo haya.
 401+ 9AAA 3A F3 88     	ld a,(Ctrl_0)
 402+ 9AAD CB 77        	bit 6,a
 403+ 9AAF 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9AB1
 405+ 9AB1 CD C7 9B     	call Stop_Amadeus_left
 406+ 9AB4 C8           	ret z
 407+ 9AB5 20 4A        	jr nz,8F
 408+ 9AB7
 409+ 9AB7 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9ABA A7           	and a
 411+ 9ABB 20 44        	jr nz,8F
 412+ 9ABD
 413+ 9ABD 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9AC0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9AC1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9AC3
 417+ 9AC3              ; ---------- ---------- ----------
 418+ 9AC3
 419+ 9AC3 3A DA 88     	ld a,(Vel_left)
 420+ 9AC6 FE 02        	cp 2
 421+ 9AC8 28 0F        	jr z,1F
 422+ 9ACA 38 04        	jr c,6F
 423+ 9ACC FE 04        	cp 4
 424+ 9ACE 28 12        	jr z,7F
 425+ 9AD0
 426+ 9AD0              ; ---------- ---------- ----------
 427+ 9AD0
 428+ 9AD0 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9AD3 FE F8        	cp $f8
 430+ 9AD5 20 2A        	jr nz,8F
 431+ 9AD7 18 10        	jr 4F
 432+ 9AD9 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9ADC FE F9        	cp $f9
 434+ 9ADE 20 21        	jr nz,8F
 435+ 9AE0 18 07        	jr 4F
 436+ 9AE2 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9AE5 FE FB        	cp $fb
 438+ 9AE7 20 18        	jr nz,8F
 439+ 9AE9
 440+ 9AE9              ; ---------- ---------- ----------
 441+ 9AE9
 442+ 9AE9              4
 443+ 9AE9 CD EF 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9AEC              ;	call Reinicio
 445+ 9AEC
 446+ 9AEC              ; ---------- ---------- ----------
 447+ 9AEC
 448+ 9AEC 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9AEE C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9AEF
 451+ 9AEF              ;	ld hl,(Indice_Sprite_izq)
 452+ 9AEF              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9AEF
 454+ 9AEF CD 08 9B     	call DESPLZ_IZQ
 455+ 9AF2 C1           	pop bc
 456+ 9AF3 10 F9        	djnz 5B
 457+ 9AF5 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9AF8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9AF9 22 C7 88     	ld (Posicion_actual),hl
 460+ 9AFC CD 58 9C     	call Genera_coordenadas
 461+ 9AFF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B01
 463+ 9B01              ; ---------- ---------- ----------
 464+ 9B01
 465+ 9B01              ; Movemos, no hay recolocación.
 466+ 9B01
 467+ 9B01 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9B04 CD 08 9B     	call DESPLZ_IZQ
 469+ 9B07 C9           2 ret
 470+ 9B08
 471+ 9B08              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B08              ;
 473+ 9B08              ;	22/9/22
 474+ 9B08
 475+ 9B08              DESPLZ_IZQ
 476+ 9B08
 477+ 9B08 CD 17 9B     	call Desplaza_izquierda
 478+ 9B0B CD 63 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B0E CD 8B 9B     	call Ciclo_completo_2
 480+ 9B11 21 F3 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B14 CB BE        	res 7,(hl)
 482+ 9B16 C9           	ret
 483+ 9B17
 484+ 9B17              Desplaza_izquierda
 485+ 9B17
 486+ 9B17 3A DA 88     	ld a,(Vel_left)
 487+ 9B1A 47           	ld b,a
 488+ 9B1B 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B1E 23           1 inc hl
 490+ 9B1F 23           	inc hl
 491+ 9B20 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B22 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B25 CD 4E 8C     	call Extrae_address
 494+ 9B28 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9B2B
 496+ 9B2B              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B2B
 498+ 9B2B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B2B              ; Cuántos movimientos hemos hecho ??
 500+ 9B2B              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B2B
 502+ 9B2B 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B2E EB           	ex de,hl
 504+ 9B2F A7           	and a
 505+ 9B30 ED 52        	sbc hl,de
 506+ 9B32 CB 3D        	srl l
 507+ 9B34 3E 08        6 ld a,8
 508+ 9B36 95           	sub l
 509+ 9B37 30 1E        	jr nc,3F
 510+ 9B39
 511+ 9B39              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B39              ; B="0".
 513+ 9B39
 514+ 9B39 04           4 inc b
 515+ 9B3A 3C           	inc a
 516+ 9B3B 20 FC        	jr nz,4B
 517+ 9B3D 78           	ld a,b
 518+ 9B3E 08           	ex af,af
 519+ 9B3F 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B42 23           5 inc hl
 521+ 9B43 23           	inc hl
 522+ 9B44 10 FC        	djnz 5B
 523+ 9B46 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B49 CD 4E 8C     	call Extrae_address
 525+ 9B4C 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9B4F
 527+ 9B4F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B4F              ; _(Posicion_actual).
 529+ 9B4F
 530+ 9B4F 21 C7 88     	ld hl,Posicion_actual
 531+ 9B52 35           	dec (hl)
 532+ 9B53 08           	ex af,af
 533+ 9B54 6F           	ld l,a
 534+ 9B55 18 DD        	jr 6B
 535+ 9B57
 536+ 9B57              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B57
 538+ 9B57 47           3 ld b,a
 539+ 9B58 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9B5B 23           2 inc hl
 541+ 9B5C 23           	inc hl
 542+ 9B5D 10 FC        	djnz 2B
 543+ 9B5F 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B62 C9           8 ret
 545+ 9B63
 546+ 9B63              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B63              ;
 548+ 9B63              ;	modifica_parametros_1er_DESPLZ
 549+ 9B63              ;
 550+ 9B63              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B63              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B63              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B63
 554+ 9B63 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B66 A7           	and a
 556+ 9B67 20 1E        	jr nz,1F
 557+ 9B69 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B6A 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9B6D 21 C6 88     	ld hl,Columns
 560+ 9B70 34           	inc (hl)
 561+ 9B71 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9B74 E6 01        	and 1
 563+ 9B76 20 0F        	jr nz,1F
 564+ 9B78 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B7B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B7C 22 C7 88     	ld (Posicion_actual),hl
 567+ 9B7F CD 58 9C     	call Genera_coordenadas
 568+ 9B82 CD DE 9B     	call Dec_CTRL_DESPLZ
 569+ 9B85 18 03        	jr 2F
 570+ 9B87 CD DE 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B8A C9           2 ret
 572+ 9B8B
 573+ 9B8B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B8B
 575+ 9B8B 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B8E FE F7        	cp $f7
 577+ 9B90 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B92 30 2C        	jr nc,3F
 579+ 9B94
 580+ 9B94              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B94
 582+ 9B94 06 00        	ld b,0
 583+ 9B96 04           4 inc b
 584+ 9B97 3C           	inc a
 585+ 9B98 FE F7        	cp $f7
 586+ 9B9A 20 FA        	jr nz,4B
 587+ 9B9C 3E FF        	ld a,$ff
 588+ 9B9E 90           	sub b
 589+ 9B9F 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9BA2 18 1C        	jr 3F
 591+ 9BA4
 592+ 9BA4              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9BA4
 594+ 9BA4 21 C6 88     1 ld hl,Columns
 595+ 9BA7 35           	dec (hl)
 596+ 9BA8 AF           	xor a
 597+ 9BA9 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9BAC 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9BAF E6 01        	and 1
 600+ 9BB1 28 0A        	jr z,2F
 601+ 9BB3 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9BB6 2B           	dec hl
 603+ 9BB7 22 C7 88     	ld (Posicion_actual),hl
 604+ 9BBA CD 58 9C     	call Genera_coordenadas
 605+ 9BBD
 606+ 9BBD              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9BBD
 608+ 9BBD CD 78 8C     2 call Inicia_puntero_objeto_izq
 609+ 9BC0 C9           3 ret
 610+ 9BC1
 611+ 9BC1              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9BC1              ;
 613+ 9BC1              ;	19/10/22
 614+ 9BC1              ;
 615+ 9BC1              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9BC1              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9BC1
 618+ 9BC1 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9BC4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9BC6 C9           	ret
 621+ 9BC7
 622+ 9BC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9BC7              ;
 624+ 9BC7              ;	19/10/22
 625+ 9BC7              ;
 626+ 9BC7              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9BC7              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9BC7
 629+ 9BC7 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9BCA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9BCC C9           	ret
 632+ 9BCD
 633+ 9BCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9BCD              ;
 635+ 9BCD              ;	24/7/22
 636+ 9BCD              ;
 637+ 9BCD              ;	Inc_CTRL_DESPLZ
 638+ 9BCD              ;
 639+ 9BCD              ;
 640+ 9BCD              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9BCD
 642+ 9BCD 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9BD0 3A DB 88     	ld a,(Vel_right)
 644+ 9BD3 A7           	and a
 645+ 9BD4 28 06        	jr z,1F
 646+ 9BD6 47           	ld b,a
 647+ 9BD7 34           3 inc (hl)
 648+ 9BD8 10 FD        	djnz 3B
 649+ 9BDA 18 01        	jr 2F
 650+ 9BDC 34           1 inc (hl)
 651+ 9BDD C9           2 ret
 652+ 9BDE
 653+ 9BDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9BDE              ;
 655+ 9BDE              ;	5/2/23
 656+ 9BDE              ;
 657+ 9BDE              ;	Dec_CTRL_DESPLZ
 658+ 9BDE              ;
 659+ 9BDE              ;
 660+ 9BDE              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9BDE
 662+ 9BDE 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9BE1 3A DA 88     	ld a,(Vel_left)
 664+ 9BE4 A7           	and a
 665+ 9BE5 28 06        	jr z,1F
 666+ 9BE7 47           	ld b,a
 667+ 9BE8 35           3 dec (hl)
 668+ 9BE9 10 FD        	djnz 3B
 669+ 9BEB 18 01        	jr 2F
 670+ 9BED 35           1 dec (hl)
 671+ 9BEE C9           2 ret
 672+ 9BEF
 673+ 9BEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9BEF
 675+ 9BEF 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9BF2 01 1F 00     	ld bc,31
 677+ 9BF5 A7           	and a
 678+ 9BF6 ED 4A        	adc hl,bc
 679+ 9BF8 22 C7 88     	ld (Posicion_actual),hl
 680+ 9BFB 21 F3 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9BFE CB C6        	set 0,(hl)
 682+ 9C00 C9           	ret
 683+ 9C01
 684+ 9C01              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C01
 686+ 9C01 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C04 01 1F 00     	ld bc,31
 688+ 9C07 A7           	and a
 689+ 9C08 ED 42        	sbc hl,bc
 690+ 9C0A 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C0D 21 F3 88     	ld hl,Ctrl_0
 692+ 9C10 CB CE        	set 1,(hl)
 693+ 9C12 C9           	ret
 694+ 9C13
 695+ 9C13              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C13
 697+ 9C13 24           Reaparece_abajo inc h
 698+ 9C14 01 E0 17     	ld bc,$17e0
 699+ 9C17 A7           	and a
 700+ 9C18 ED 4A        	adc hl,bc
 701+ 9C1A 22 C7 88     	ld (Posicion_actual),hl
 702+ 9C1D 21 F3 88     	ld hl,Ctrl_0
 703+ 9C20 CB D6        	set 2,(hl)
 704+ 9C22 C9           	ret
 705+ 9C23
 706+ 9C23              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C23
 708+ 9C23 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C26 A7           	and a
 710+ 9C27 ED 42        	sbc hl,bc
 711+ 9C29 22 C7 88     	ld (Posicion_actual),hl
 712+ 9C2C 21 F3 88     	ld hl,Ctrl_0
 713+ 9C2F CB DE        	set 3,(hl)
 714+ 9C31 C9           	ret
 715+ 9C32
 716+ 9C32              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C32              ;
 718+ 9C32              ;	15/07/23
 719+ 9C32
 720+ 9C32              Reinicio
 721+ 9C32
 722+ 9C32              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C32
 724+ 9C32 AF           	xor a
 725+ 9C33 21 F8 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C36 CD 54 9C     	call Limpia_contenido_hl
 727+ 9C39
 728+ 9C39 21 C7 88     	ld hl,Posicion_actual
 729+ 9C3C CD 54 9C     	call Limpia_contenido_hl
 730+ 9C3F
 731+ 9C3F CD 84 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C42 CD 0E 9F     	call Inicia_Puntero_mov
 733+ 9C45
 734+ 9C45 21 FA 88     	ld hl,Incrementa_puntero
 735+ 9C48 06 05        	ld b,5
 736+ 9C4A 77           1 ld (hl),a
 737+ 9C4B 23           	inc hl
 738+ 9C4C 10 FC        	djnz 1B
 739+ 9C4E
 740+ 9C4E 21 04 89     	ld hl,Ctrl_2
 741+ 9C51 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C53
 743+ 9C53 C9           	ret
 744+ 9C54
 745+ 9C54 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C55 23           	inc hl
 747+ 9C56 77           	ld (hl),a
 748+ 9C57 C9           	ret
 749+ 9C58
 750+ 9C58
# file closed: Direcciones.asm
1605  9C58              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C58              ; ------------------------------------------------------------------------
   2+ 9C58              ;
   3+ 9C58              ;	02/04/23
   4+ 9C58              ;
   5+ 9C58              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C58              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C58              ;
   8+ 9C58              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C58              ;
  10+ 9C58              ;	Modifica: A,BC y DE.
  11+ 9C58
  12+ 9C58 C5           Genera_coordenadas push bc
  13+ 9C59 E5           	push hl
  14+ 9C5A D5           	push de
  15+ 9C5B
  16+ 9C5B 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9C5E
  18+ 9C5E 7D           	ld a,l
  19+ 9C5F E6 1F        	and $1f
  20+ 9C61 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C64
  22+ 9C64 CD CD 98     	call calcula_tercio
  23+ 9C67 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C68
  25+ 9C68 1E 00        	ld e,0
  26+ 9C6A 7D           	ld a,l
  27+ 9C6B E6 E0        	and $e0
  28+ 9C6D 28 01        	jr z,1F
  29+ 9C6F 04           	inc b
  30+ 9C70
  31+ 9C70 04           1 inc b
  32+ 9C71 05           	dec b
  33+ 9C72 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C74              ;														; _ , salimos.
  35+ 9C74 1C           3 inc e
  36+ 9C75 D6 20        	sub 32
  37+ 9C77 20 FB        	jr nz,3B
  38+ 9C79 10 F5        	djnz 1B
  39+ 9C7B
  40+ 9C7B 7B           2 ld a,e
  41+ 9C7C 32 CC 88     	ld (Coordenada_y),a
  42+ 9C7F
  43+ 9C7F D1           	pop de
  44+ 9C80 E1           	pop hl
  45+ 9C81 C1           	pop bc
  46+ 9C82
  47+ 9C82 C9           	ret
  48+ 9C83
  49+ 9C83              ; ------------------------------------------------------------------------
  50+ 9C83              ;	28/05/23
  51+ 9C83              ;
  52+ 9C83              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C83              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C83              ;
  55+ 9C83              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C83              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C83              ;
  58+ 9C83              ;		DE="$120d"
  59+ 9C83              ;
  60+ 9C83              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C83              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C83              ;
  63+ 9C83              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C83
  65+ 9C83              ;	Modifica: A,BC y DE.
  66+ 9C83
  67+ 9C83
  68+ 9C83              Genera_coordenadas_disparo
  69+ 9C83
  70+ 9C83              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C83
  72+ 9C83 7D           	ld a,l
  73+ 9C84 E6 1F        	and $1f
  74+ 9C86 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C87 CD CD 98     	call calcula_tercio
  76+ 9C8A 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C8B 1E 00        	ld e,0
  78+ 9C8D 7D           	ld a,l
  79+ 9C8E E6 E0        	and $e0
  80+ 9C90 28 01        	jr z,1F
  81+ 9C92 04           	inc b
  82+ 9C93 1C           1 inc e
  83+ 9C94 D6 20        	sub 32
  84+ 9C96 20 FB        	jr nz,1B
  85+ 9C98 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C9A C9           	ret
  87+ 9C9B
# file closed: Genera_coordenadas.asm
1606  9C9B              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C9B              ; Relojes y temporizaciones.
   2+ 9C9B
   3+ 9C9B              ; ------------------------------------------------------
   4+ 9C9B              ;
   5+ 9C9B              ;	16/7/23
   6+ 9C9B              ;
   7+ 9C9B              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C9B              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C9B              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C9B              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C9B              ;
  12+ 9C9B              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C9B              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C9B
  15+ 9C9B              ; Disparo_entidad db 1
  16+ 9C9B              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C9B              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C9B
  19+ 9C9B              Habilita_disparos
  20+ 9C9B
  21+ 9C9B 7E           	ld a,(hl)
  22+ 9C9C A7           	and a
  23+ 9C9D C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C9E
  25+ 9C9E EB           	ex de,hl
  26+ 9C9F
  27+ 9C9F 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9CA0 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9CA1
  30+ 9CA1              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9CA1
  32+ 9CA1 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9CA2 7E           	ld a,(hl)
  34+ 9CA3 23           	inc hl
  35+ 9CA4 77           	ld (hl),a
  36+ 9CA5
  37+ 9CA5 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9CA6 3E 01        	ld a,1
  39+ 9CA8 77           	ld (hl),a
  40+ 9CA9 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1607  9CAA              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CAA
   2+ 9CAA
   3+ 9CAA              ;   07/07/23
   4+ 9CAA              ;
   5+ 9CAA              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CAA              ;
   7+ 9CAA              ;   Codificación:
   8+ 9CAA              ;
   9+ 9CAA              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CAA              ;
  11+ 9CAA              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CAA              ;
  13+ 9CAA              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CAA              ;
  15+ 9CAA              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CAA              ;
  17+ 9CAA              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CAA              ;                               ..... %01000010 Vel_up 4
  19+ 9CAA              ;                                               Vel_down 2
  20+ 9CAA              ;                               ..... $42
  21+ 9CAA              ;
  22+ 9CAA              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CAA              ;
  24+ 9CAA              ;                               ..... %01000010 Vel_left 4
  25+ 9CAA              ;                                               Vel_right 2
  26+ 9CAA              ;                               ..... $42
  27+ 9CAA              ;
  28+ 9CAA              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CAA              ;
  30+ 9CAA              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CAA              ;
  32+ 9CAA              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CAA              ;
  34+ 9CAA              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CAA              ;                                     $53
  36+ 9CAA              ;
  37+ 9CAA              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CAA              ;
  39+ 9CAA              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CAA              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CAA              ;
  42+ 9CAA              ;                       Arriba ..... $81
  43+ 9CAA              ;                       Arriba - izquierda ..... $a1
  44+ 9CAA              ;                       Arriba - derecha ..... $91
  45+ 9CAA              ;
  46+ 9CAA              ;                       Abajo ..... $41
  47+ 9CAA              ;                       Abajo - izquierda ..... $61
  48+ 9CAA              ;                       Abajo - derecha ..... $51
  49+ 9CAA              ;
  50+ 9CAA              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CAA              ;
  52+ 9CAA              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CAA              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CAA              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CAA              ;
  56+ 9CAA              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CAA              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CAA              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CAA              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CAA              ;
  61+ 9CAA              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CAA              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CAA              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CAA              ;
  65+ 9CAA              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CAA              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CAA              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CAA              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CAA
  70+ 9CAA              ; ----- ----- ----- ----- -----
  71+ 9CAA
  72+ 9CAA D6 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CAC DE 9C            defw F_1
  74+ 9CAE E8 9C            defw F_2
  75+ 9CB0 F2 9C            defw Codo_abajo_derecha
  76+ 9CB2 26 9D            defw Derecha_y_subiendo
  77+ 9CB4 30 9D            defw Derecha_y_subiendo_1
  78+ 9CB6 3A 9D            defw F_3
  79+ 9CB8 44 9D            defw F_4
  80+ 9CBA 4E 9D            defw Derecha_y_bajando
  81+ 9CBC 58 9D            defw Derecha_y_bajando_1
  82+ 9CBE 62 9D            defw Derecha_y_bajando_2
  83+ 9CC0 6C 9D            defw Codo_derecha_abajo
  84+ 9CC2 9C 9D            defw Codo_abajo_izq.
  85+ 9CC4 D0 9D            defw Izquierda_y_subiendo
  86+ 9CC6 DA 9D            defw Izquierda_y_subiendo_1
  87+ 9CC8 E4 9D            defw F_5
  88+ 9CCA EE 9D            defw F_6
  89+ 9CCC F8 9D            defw Izquierda_y_bajando
  90+ 9CCE 02 9E            defw Izquierda_y_bajando_1
  91+ 9CD0 0C 9E            defw Izquierda_y_bajando_2
  92+ 9CD2 16 9E            defw Codo_izquierda_abajo
  93+ 9CD4 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9CD6
  95+ 9CD6 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9CDA 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9CDE
  98+ 9CDE 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9CE2 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9CE6 08 00
 100+ 9CE8 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9CEC 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9CF0 0F FE
 102+ 9CF2
 103+ 9CF2 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9CF6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9CFA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9CFE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D02 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D06 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D0A 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D0E 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D12 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D16 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D1A 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D1E 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D22 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D26
 117+ 9D26 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D2A 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D2E 06 00
 119+ 9D30
 120+ 9D30 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D34 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D38 02 00
 122+ 9D3A
 123+ 9D3A 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D3E 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D42 04 00
 125+ 9D44 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D48 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D4C 08 00
 127+ 9D4E
 128+ 9D4E 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D52 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D56 02 00
 130+ 9D58
 131+ 9D58 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D5C 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D60 06 00
 133+ 9D62
 134+ 9D62 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D66 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D6A 06 00
 136+ 9D6C
 137+ 9D6C              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D6C
 139+ 9D6C 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D70 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D74 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D78 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D7C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D80 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D84 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D88 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D8C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D90 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D94 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D98 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D9C
 152+ 9D9C 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9DA0 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9DA4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9DA8 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9DAC 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9DB0 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9DB4 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9DB8 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9DBC 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9DC0 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9DC4 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9DC8 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9DCC 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9DD0
 166+ 9DD0 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9DD4 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9DD8 06 00
 168+ 9DDA
 169+ 9DDA 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9DDE 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9DE2 02 00
 171+ 9DE4
 172+ 9DE4 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9DE8 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9DEC 04 00
 174+ 9DEE 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9DF2 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9DF6 08 00
 176+ 9DF8
 177+ 9DF8 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9DFC 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E00 02 00
 179+ 9E02
 180+ 9E02 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E06 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E0A 06 00
 182+ 9E0C
 183+ 9E0C 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E10 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E14 06 00
 185+ 9E16
 186+ 9E16 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E1A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E1E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E22 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E26 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E2A 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E2E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E32 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E36 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E3A 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E3E 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E42 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E46
 199+ 9E46              ; ----- ----- ----- ----- -----
 200+ 9E46              ;
 201+ 9E46              ;   27/06/23
 202+ 9E46
 203+ 9E46              Movimiento
 204+ 9E46
 205+ 9E46              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E46
 207+ 9E46              ;    ld hl,(Posicion_actual)
 208+ 9E46
 209+ 9E46 3A 04 89         ld a,(Ctrl_2)
 210+ 9E49 CB 57            bit 2,a
 211+ 9E4B 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E4D
 213+ 9E4D 2A F6 88         ld hl,(Puntero_mov)
 214+ 9E50 7E               ld a,(hl)
 215+ 9E51
 216+ 9E51              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E51
 218+ 9E51              Inicia_desplazamiento.
 219+ 9E51
 220+ 9E51              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E51
 222+ 9E51 CD 45 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E54
 224+ 9E54              ; Iniciamos (Repetimos_mov).
 225+ 9E54
 226+ 9E54 7E               ld a,(hl)
 227+ 9E55 E6 0F            and $0f
 228+ 9E57 32 FC 88         ld (Repetimos_desplazamiento),a
 229+ 9E5A 32 FD 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E5D
 231+ 9E5D              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E5D
 233+ 9E5D 23               inc hl
 234+ 9E5E 7E               ld a,(hl)
 235+ 9E5F 32 FF 88         ld (Cola_de_desplazamiento),a
 236+ 9E62 2B               dec hl
 237+ 9E63
 238+ 9E63 21 04 89         ld hl,Ctrl_2
 239+ 9E66 CB D6            set 2,(hl)
 240+ 9E68
 241+ 9E68              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E68              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E68
 244+ 9E68              Desplazamiento_iniciado
 245+ 9E68
 246+ 9E68 CD 19 9F         call Aplica_desplazamiento
 247+ 9E6B
 248+ 9E6B 3A 04 89         ld a,(Ctrl_2)
 249+ 9E6E CB 67            bit 4,a
 250+ 9E70 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E71
 252+ 9E71 21 FC 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E74 35               dec (hl)
 254+ 9E75 C0               ret nz
 255+ 9E76
 256+ 9E76              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E76              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E76              ; Analiza (Cola_de_desplazamiento).
 259+ 9E76
 260+ 9E76 3A FF 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E79 A7               and a
 262+ 9E7A CC 6E 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E7D 28 30            jr z,Reinicia_el_movimiento
 264+ 9E7F
 265+ 9E7F FE FF            cp $ff
 266+ 9E81 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E83
 268+ 9E83 FE FE            cp $fe
 269+ 9E85 CC F2 9E         call z,Fijamos_bucle
 270+ 9E88 28 25            jr z,Reinicia_el_movimiento
 271+ 9E8A
 272+ 9E8A FE FD            cp $fd
 273+ 9E8C 20 11            jr nz,1F
 274+ 9E8E
 275+ 9E8E              ; ---
 276+ 9E8E              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E8E
 278+ 9E8E 3A 04 89         ld a,(Ctrl_2)
 279+ 9E91 CB 5F            bit 3,a
 280+ 9E93 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E95
 282+ 9E95              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E95
 284+ 9E95 21 04 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E98 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E9A
 287+ 9E9A CD 03 9F         call Inicia_Repetimos_movimiento
 288+ 9E9D 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E9F              ; ---
 290+ 9E9F
 291+ 9E9F FE 01        1 cp 1
 292+ 9EA1 CA DC 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9EA4
 294+ 9EA4 3D               dec a
 295+ 9EA5 32 FF 88         ld (Cola_de_desplazamiento),a
 296+ 9EA8
 297+ 9EA8 3A FD 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9EAB 32 FC 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9EAE              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9EAE C9               ret
 301+ 9EAF
 302+ 9EAF              Reinicia_el_movimiento
 303+ 9EAF
 304+ 9EAF 3A 04 89         ld a,(Ctrl_2)
 305+ 9EB2 CB 5F            bit 3,a
 306+ 9EB4 28 1B            jr z,2F
 307+ 9EB6
 308+ 9EB6              ; (Cola_de_desplazamiento)="254".
 309+ 9EB6
 310+ 9EB6 21 FE 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9EB9 35               dec (hl)
 312+ 9EBA 20 15            jr nz,2F
 313+ 9EBC
 314+ 9EBC              ; Fin de las repeticiones del último movimiento.
 315+ 9EBC
 316+ 9EBC 21 04 89         ld hl,Ctrl_2
 317+ 9EBF CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9EC1
 319+ 9EC1 2A F6 88         ld hl,(Puntero_mov)
 320+ 9EC4 23               inc hl
 321+ 9EC5 23               inc hl
 322+ 9EC6 23               inc hl
 323+ 9EC7 22 F6 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9ECA              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9ECA 7E               ld a,(hl)
 326+ 9ECB 32 FF 88         ld (Cola_de_desplazamiento),a
 327+ 9ECE
 328+ 9ECE C3 76 9E         jp Cola
 329+ 9ED1
 330+ 9ED1 CD 0E 9F     2 call Inicia_Puntero_mov
 331+ 9ED4
 332+ 9ED4 21 04 89         ld hl,Ctrl_2
 333+ 9ED7 CB 96            res 2,(hl)
 334+ 9ED9
 335+ 9ED9 C3 46 9E         jp Movimiento
 336+ 9EDC
 337+ 9EDC              Siguiente_desplazamiento
 338+ 9EDC
 339+ 9EDC              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9EDC              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9EDC
 342+ 9EDC 21 04 89         ld hl,Ctrl_2
 343+ 9EDF CB 96            res 2,(hl)
 344+ 9EE1
 345+ 9EE1 2A F6 88         ld hl,(Puntero_mov)
 346+ 9EE4 23               inc hl
 347+ 9EE5 23               inc hl
 348+ 9EE6 22 F6 88         ld (Puntero_mov),hl
 349+ 9EE9
 350+ 9EE9 7E               ld a,(hl)
 351+ 9EEA A7               and a
 352+ 9EEB CC 6E 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9EEE CA AF 9E         jp z,Reinicia_el_movimiento
 354+ 9EF1
 355+ 9EF1 C9               ret
 356+ 9EF2
 357+ 9EF2              ; Subrutinas -----------------------------------------
 358+ 9EF2              ; ---------- --------- --------- ---------- ----------
 359+ 9EF2              ;
 360+ 9EF2              ;   24/07/23
 361+ 9EF2              ;
 362+ 9EF2              ;   Fijamos_bucle
 363+ 9EF2              ;
 364+ 9EF2              ;
 365+ 9EF2
 366+ 9EF2              Fijamos_bucle
 367+ 9EF2
 368+ 9EF2 3A FA 88         ld a,(Incrementa_puntero)
 369+ 9EF5 3C               inc a
 370+ 9EF6 32 FB 88         ld (Incrementa_puntero_backup),a
 371+ 9EF9
 372+ 9EF9 CD 6E 9F         call Incrementa_Puntero_indice_mov
 373+ 9EFC 2A F4 88         ld hl,(Puntero_indice_mov)
 374+ 9EFF 22 F8 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9F02 C9               ret
 376+ 9F03
 377+ 9F03              ; ---------- --------- --------- ---------- ----------
 378+ 9F03              ;
 379+ 9F03              ;   07/7/23
 380+ 9F03              ;
 381+ 9F03              ;   Inicia_Repetimos_movimiento
 382+ 9F03              ;
 383+ 9F03              ;
 384+ 9F03
 385+ 9F03              Inicia_Repetimos_movimiento
 386+ 9F03
 387+ 9F03              ; Iniciamos (Repetimos_movimiento).
 388+ 9F03
 389+ 9F03 DD 2A F6 88      ld ix,(Puntero_mov)
 390+ 9F07 DD 7E 02         ld a,(ix+2)
 391+ 9F0A 32 FE 88         ld (Repetimos_movimiento),a
 392+ 9F0D
 393+ 9F0D C9               ret
 394+ 9F0E
 395+ 9F0E              ; ---------- --------- --------- ---------- ----------
 396+ 9F0E              ;
 397+ 9F0E              ;   26/6/23
 398+ 9F0E              ;
 399+ 9F0E              ;   Inicia_Puntero_mov
 400+ 9F0E              ;
 401+ 9F0E              ;
 402+ 9F0E
 403+ 9F0E 2A F4 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F11 5E               ld e,(hl)
 405+ 9F12 23               inc hl
 406+ 9F13 56               ld d,(hl)
 407+ 9F14 EB               ex de,hl
 408+ 9F15 22 F6 88         ld (Puntero_mov),hl
 409+ 9F18 C9               ret
 410+ 9F19
 411+ 9F19              ; ---------- --------- --------- ---------- ----------
 412+ 9F19              ;
 413+ 9F19              ;   27/06/23
 414+ 9F19              ;
 415+ 9F19              ;   Aplica_movimiento.
 416+ 9F19
 417+ 9F19              Aplica_desplazamiento
 418+ 9F19
 419+ 9F19              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F19
 421+ 9F19 2A F6 88         ld hl, (Puntero_mov)
 422+ 9F1C
 423+ 9F1C 7E               ld a,(hl)
 424+ 9F1D E6 F0            and $f0
 425+ 9F1F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F20
 427+ 9F20 CB 7E            bit 7,(hl)
 428+ 9F22 28 03            jr z,1F
 429+ 9F24 CD 44 99         call Mov_up
 430+ 9F27 2A F6 88     1 ld hl, (Puntero_mov)
 431+ 9F2A CB 76            bit 6,(hl)
 432+ 9F2C 28 03            jr z,2F
 433+ 9F2E CD 13 99         call Mov_down
 434+ 9F31 2A F6 88     2 ld hl, (Puntero_mov)
 435+ 9F34 CB 6E            bit 5,(hl)
 436+ 9F36 28 03            jr z,3F
 437+ 9F38 CD A5 9A         call Mov_left
 438+ 9F3B 2A F6 88     3 ld hl, (Puntero_mov)
 439+ 9F3E CB 66            bit 4,(hl)
 440+ 9F40 C8               ret z
 441+ 9F41 CD 87 99         call Mov_right
 442+ 9F44 C9               ret
 443+ 9F45
 444+ 9F45              ; ---------- --------- --------- ---------- ----------
 445+ 9F45              ;
 446+ 9F45              ;   26/06/23
 447+ 9F45              ;
 448+ 9F45              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F45
 450+ 9F45              Ajusta_velocidad_desplazamiento
 451+ 9F45
 452+ 9F45              ; 1er byte de la cadena de movimiento.
 453+ 9F45              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F45
 455+ 9F45 CD 63 9F         call Extrae_nibble_alto
 456+ 9F48
 457+ 9F48 32 DC 88         ld (Vel_up),a
 458+ 9F4B 79               ld a,c
 459+ 9F4C E6 0F            and $0f
 460+ 9F4E 32 DD 88         ld (Vel_down),a
 461+ 9F51
 462+ 9F51              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F51              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F51
 465+ 9F51 23               inc hl
 466+ 9F52 CD 63 9F         call Extrae_nibble_alto
 467+ 9F55
 468+ 9F55 32 DA 88         ld (Vel_left),a
 469+ 9F58 79               ld a,c
 470+ 9F59 E6 0F            and $0f
 471+ 9F5B 32 DB 88         ld (Vel_right),a
 472+ 9F5E
 473+ 9F5E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F5E
 475+ 9F5E 23               inc hl
 476+ 9F5F 22 F6 88         ld (Puntero_mov),hl
 477+ 9F62 C9               ret
 478+ 9F63
 479+ 9F63 06 04        Extrae_nibble_alto ld b,4
 480+ 9F65 7E               ld a,(hl)
 481+ 9F66 4F               ld c,a
 482+ 9F67 E6 F0            and $f0
 483+ 9F69 CB 3F        1 srl a
 484+ 9F6B 10 FC            djnz 1B
 485+ 9F6D C9               ret
 486+ 9F6E
 487+ 9F6E              ; ---------- --------- --------- ---------- ----------
 488+ 9F6E              ;
 489+ 9F6E              ;   5/7/23
 490+ 9F6E              ;
 491+ 9F6E              ;   Incrementa_Puntero_indice_mov
 492+ 9F6E
 493+ 9F6E              Incrementa_Puntero_indice_mov
 494+ 9F6E
 495+ 9F6E 21 FA 88         ld hl,Incrementa_puntero
 496+ 9F71 34               inc (hl)
 497+ 9F72
 498+ 9F72 2A F4 88         ld hl,(Puntero_indice_mov)
 499+ 9F75 01 02 00         ld bc,2
 500+ 9F78 A7               and a
 501+ 9F79 09               add hl,bc
 502+ 9F7A 22 F4 88         ld (Puntero_indice_mov),hl
 503+ 9F7D
 504+ 9F7D 7E               ld a,(hl)
 505+ 9F7E A7               and a
 506+ 9F7F
 507+ 9F7F              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F7F
 509+ 9F7F              ;    jr z,$
 510+ 9F7F
 511+ 9F7F              ;! Reinicia el Patrón de movimiento.
 512+ 9F7F
 513+ 9F7F CC 84 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F82
 515+ 9F82 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F83
 517+ 9F83 C9               ret
 518+ 9F84
 519+ 9F84
 520+ 9F84              ; ---------- --------- --------- ---------- ----------
 521+ 9F84              ;
 522+ 9F84              ;   24/07/23
 523+ 9F84              ;
 524+ 9F84              ;   Inicializa_Puntero_indice_mov
 525+ 9F84
 526+ 9F84              Inicializa_Puntero_indice_mov
 527+ 9F84
 528+ 9F84              ; Existe etiqueta de bucle principal???
 529+ 9F84
 530+ 9F84 2A F8 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F87 24               inc h
 532+ 9F88 25               dec h
 533+ 9F89 28 05            jr z,2F
 534+ 9F8B
 535+ 9F8B 22 F4 88         ld (Puntero_indice_mov),hl
 536+ 9F8E 18 14            jr 3F
 537+ 9F90
 538+ 9F90              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F90
 540+ 9F90 3A FA 88     2 ld a,(Incrementa_puntero)
 541+ 9F93 47               ld b,a
 542+ 9F94
 543+ 9F94 2A F4 88         ld hl,(Puntero_indice_mov)
 544+ 9F97 2B           1 dec hl
 545+ 9F98 2B               dec hl
 546+ 9F99 10 FC            djnz 1B
 547+ 9F9B 22 F4 88         ld (Puntero_indice_mov),hl
 548+ 9F9E
 549+ 9F9E AF               xor a
 550+ 9F9F 32 FA 88         ld (Incrementa_puntero),a
 551+ 9FA2 18 06            jr 4F
 552+ 9FA4
 553+ 9FA4 3A FB 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9FA7 32 FA 88         ld (Incrementa_puntero),a
 555+ 9FAA C9           4 ret
 556+ 9FAB
 557+ 9FAB
 558+ 9FAB
# file closed: Patrones_de_mov.asm
1608  9FAB              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9FAB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9FAB              ;
   3+ 9FAB              ;	12/12/23
   4+ 9FAB              ;
   5+ 9FAB              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9FAB
   7+ 9FAB              ;	ADC HL,SP	LD (addr),SP
   8+ 9FAB              ;	ADD HL,SP	LD SP,(addr)
   9+ 9FAB              ;	ADD IX,SP	LD SP,nn
  10+ 9FAB              ; 	ADD IY,SP	LD SP,HL
  11+ 9FAB              ;				LD SP,IX
  12+ 9FAB              ;	DEC SP		LD SP,IY
  13+ 9FAB
  14+ 9FAB              ;	EX (SP),HL
  15+ 9FAB              ;	EX (SP),IX
  16+ 9FAB              ;	EX (SP),IY
  17+ 9FAB
  18+ 9FAB              ;	INC SP
  19+ 9FAB
  20+ 9FAB                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 17 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ;   Se trata de una entidad guía ???
  39+ 7FA5
  40+ 7FA5 3A 04 89         ld a,(Ctrl_2)
  41+ 7FA8 CB 6F            bit 5,a
  42+ 7FAA 28 00            jr z,9F
  43+ 7FAC
  44+ 7FAC              ;   Entidad_guía.
  45+ 7FAC              ;   Guardamos las variables_de_borrado en el {Almacen_de_movimientos_masticados}. Compondrán el siguiente movimiento de_
  46+ 7FAC              ;   _las entidades fantasma.
  47+ 7FAC
  48+ 7FAC
  49+ 7FAC              ;    jr $
  50+ 7FAC
  51+ 7FAC              ;    ld sp,(Puntero_de_almacen_de_mov_masticados)
  52+ 7FAC
  53+ 7FAC              ;    push hl
  54+ 7FAC              ;    push ix
  55+ 7FAC              ;    push iy
  56+ 7FAC
  57+ 7FAC              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  58+ 7FAC
  59+ 7FAC 31 E5 88     9 ld sp,Variables_de_borrado+6
  60+ 7FAF
  61+ 7FAF E5               push hl
  62+ 7FB0 DD E5            push ix
  63+ 7FB2 FD E5            push iy
  64+ 7FB4
  65+ 7FB4 31 F1 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  66+ 7FB7 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  67+ 7FB9              ;                                                 ; _ con las coordenadas_X de Amadeus.
  68+ 7FB9
  69+ 7FB9 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  70+ 7FBC
  71+ 7FBC E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  72+ 7FBD DD E5            push ix                                       ; IX contiene el puntero de impresión.
  73+ 7FBF FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  74+ 7FC1
  75+ 7FC1              ; Disparo o entidad?
  76+ 7FC1
  77+ 7FC1 3A 06 89         ld a,(Ctrl_1)
  78+ 7FC4 CB 47            bit 0,a
  79+ 7FC6 28 05            jr z,2F
  80+ 7FC8
  81+ 7FC8 2A 1F 89         ld hl,(Stack_snapshot_disparos)
  82+ 7FCB 18 0F            jr 4F
  83+ 7FCD
  84+ 7FCD              ; No es disparo. Entidad/Amadeus ????
  85+ 7FCD
  86+ 7FCD 3A F3 88     2 ld a,(Ctrl_0)
  87+ 7FD0 CB 77            bit 6,a
  88+ 7FD2 28 05            jr z,7F
  89+ 7FD4
  90+ 7FD4              ; Guardamos foto de Amadeus.
  91+ 7FD4
  92+ 7FD4 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  93+ 7FD7 18 03            jr 4F
  94+ 7FD9
  95+ 7FD9 2A 1D 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  96+ 7FDC
  97+ 7FDC 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  98+ 7FDE
  99+ 7FDE D1           1 pop de
 100+ 7FDF 73               ld (hl),e
 101+ 7FE0 23               inc hl
 102+ 7FE1 72               ld (hl),d
 103+ 7FE2 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 104+ 7FE3 10 F9            djnz 1B
 105+ 7FE5
 106+ 7FE5              ; Disparo o entidad ?
 107+ 7FE5
 108+ 7FE5 3A 06 89         ld a,(Ctrl_1)
 109+ 7FE8 CB 47            bit 0,a
 110+ 7FEA 28 05            jr z,5F
 111+ 7FEC
 112+ 7FEC 22 1F 89         ld (Stack_snapshot_disparos),hl
 113+ 7FEF 18 13            jr 6F
 114+ 7FF1
 115+ 7FF1              ; Entidad o Amadeus ?
 116+ 7FF1
 117+ 7FF1 3A F3 88     5 ld a,(Ctrl_0)
 118+ 7FF4 CB 77            bit 6,a
 119+ 7FF6 28 09            jr z,8F
 120+ 7FF8
 121+ 7FF8 22 23 89         ld (End_Snapshot_Amadeus),hl
 122+ 7FFB ED 7B 17 89      ld sp,(Stack)
 123+ 7FFF FB               ei
 124+ 8000 C9               ret
 125+ 8001
 126+ 8001 22 1D 89     8 ld (Stack_snapshot),hl
 127+ 8004 ED 7B 17 89  6 ld sp,(Stack)
 128+ 8008
 129+ 8008 FB               ei
 130+ 8009 C9               ret
 131+ 800A
 132+ 800A              ; -----------------------------------------------------------------------------
 133+ 800A              ;
 134+ 800A              ;   21/11/23
 135+ 800A
 136+ 800A              Limpia_y_reinicia_Stack_Snapshot
 137+ 800A
 138+ 800A              ;   Limpia Album_de_fotos.
 139+ 800A
 140+ 800A 2A 1D 89         ld hl,(Stack_snapshot)
 141+ 800D 7D               ld a,l
 142+ 800E A7               and a
 143+ 800F C8               ret z   ;   Salimos si el álbum está vacío.
 144+ 8010
 145+ 8010 47               ld b,a
 146+ 8011 04               inc b
 147+ 8012
 148+ 8012 36 00        1 ld (hl),0
 149+ 8014 2D               dec l
 150+ 8015 10 FB            djnz 1B
 151+ 8017
 152+ 8017              ;   Reinicializa (Stack_snapshot).
 153+ 8017
 154+ 8017 AF               xor a
 155+ 8018 32 1D 89         ld (Stack_snapshot),a
 156+ 801B
 157+ 801B C9               ret
# file closed: Guarda_foto_registros.asm
1609  801C
1610  801C              	SAVESNA "Pruebas.sna", START
1611  801C
1612  801C
1613  801C
1614  801C
# file closed: Banco_de_pruebas.asm
