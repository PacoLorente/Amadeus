# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E2 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A E8 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 03        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20
  41  AA20              ;	call Borra_sprites
  42  AA20
  43  AA20 CD BE 81     	call Pinta_Sprites
  44  AA23              ;	call Extrae_Scanlines_album
  45  AA23
  46  AA23              ;	ld a,6
  47  AA23              ;	out ($fe),a
  48  AA23              ;	call Pinta_Amadeus										; Borde amarillo.
  49  AA23
  50  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  51  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  52  AA23
  53  AA23              ;	ld a,7
  54  AA23              ;	out ($fe),a												; Borde blanco.
  55  AA23              ;	call Guarda_parametros_DRAW
  56  AA23              ;	call Restore_Amadeus
  57  AA23
  58  AA23              ; Posible colisión Entidad-Amadeus ???
  59  AA23
  60  AA23              ;	ld a,(Impacto2)
  61  AA23              ;	bit 2,a
  62  AA23              ;	jr z,1F
  63  AA23
  64  AA23              ;	call Detecta_colision_nave_entidad
  65  AA23
  66  AA23              ;1 ld a,4
  67  AA23              ;	out ($fe),a
  68  AA23              ;	call Gestiona_Amadeus
  69  AA23
  70  AA23              ;	ld a,7
  71  AA23              ;	out ($fe),a											; Borde blanco.
  72  AA23              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  73  AA23              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  74  AA23
  75  AA23              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  76  AA23
  77  AA23              ;	call Recupera_parametros_DRAW
  78  AA23
  79  AA23 CD E0 8B     1 call Actualiza_relojes
  80  AA26
  81  AA26 21 E8 89     	ld hl,Ctrl_3
  82  AA29 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  83  AA2B
  84  AA2B FD E1        	pop iy
  85  AA2D DD E1        	pop ix
  86  AA2F F1           	pop af
  87  AA30 C1           	pop bc
  88  AA31 D1           	pop de
  89  AA32 E1           	pop hl
  90  AA33 D9           	exx
  91  AA34 C1           	pop bc
  92  AA35 D1           	pop de
  93  AA36 E1           	pop hl
  94  AA37 08           	ex af,af'
  95  AA38 F1           	pop af
  96  AA39 08           	ex af,af'
  97  AA3A D9           	exx
  98  AA3B
  99  AA3B ED 7B E2 89  	ld sp,(Stack_3)
 100  AA3F
 101  AA3F FB           	ei
 102  AA40
 103  AA40 3E 01        	ld a,1												; Borde azul.
 104  AA42 D3 FE        	out ($fe),a
 105  AA44
 106  AA44 C9           	ret
 107  AA45
 108  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 109  AA45
 110  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 111  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8715 00 00        	defw 0
 141+ 8717
 142+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8719 40           	db $40												; (Ctrl_0).
 144+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 871E 00 00
 145+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8726 00           	db 0 												; (Columnas).
 149+ 8727 00 00        	defw 0												; (Limite_horizontal).
 150+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 872C
 152+ 872C              ; ---------- ---------- ---------- ---------- ----------
 153+ 872C              ;
 154+ 872C              ;	22/01/24
 155+ 872C              ;
 156+ 872C              ; 	Cada caja tiene 19 bytes !!!
 157+ 872C
 158+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 872F 00           	db %00000000										; (Attr).
 160+ 8730              ;	db 0												; (Cuad_objeto).
 161+ 8730 00           	db 0												; (Impacto).
 162+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 873D 00           	db 0												; (Ctrl_0).
 167+ 873E 00           	db 0												; (Ctrl_2).
 168+ 873F
 169+ 873F              ; ---------- ---------- ---------- ---------- ----------
 170+ 873F
 171+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 8742 00           	db %00000000										; (Attr).
 173+ 8743              ;	db 0												; (Cuad_objeto).
 174+ 8743 00           	db 0												; (Impacto).
 175+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 8750 00           	db 0												; (Ctrl_0).
 180+ 8751 00           	db 0												; (Ctrl_2).
 181+ 8752
 182+ 8752              ; ---------- ---------- ---------- ---------- ----------
 183+ 8752
 184+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8755 00           	db %00000000										; (Attr).
 186+ 8756              ;	db 0												; (Cuad_objeto).
 187+ 8756 00           	db 0												; (Impacto).
 188+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8763 00           	db 0												; (Ctrl_0).
 193+ 8764 00           	db 0												; (Ctrl_2).
 194+ 8765
 195+ 8765              ; ---------- ---------- ---------- ---------- ----------
 196+ 8765
 197+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8768 00           	db %00000000										; (Attr).
 199+ 8769              ;	db 0												; (Cuad_objeto).
 200+ 8769 00           	db 0												; (Impacto).
 201+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 8776 00           	db 0												; (Ctrl_0).
 206+ 8777 00           	db 0												; (Ctrl_2).
 207+ 8778
 208+ 8778              ; ---------- ---------- ---------- ---------- ----------
 209+ 8778
 210+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 877B 00           	db %00000000										; (Attr).
 212+ 877C              ;	db 0												; (Cuad_objeto).
 213+ 877C 00           	db 0												; (Impacto).
 214+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 8789 00           	db 0												; (Ctrl_0).
 219+ 878A 00           	db 0												; (Ctrl_2).
 220+ 878B
 221+ 878B              ; ---------- ---------- ---------- ---------- ----------
 222+ 878B
 223+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 878E 00           	db %00000000										; (Attr).
 225+ 878F              ;	db 0												; (Cuad_objeto).
 226+ 878F 00           	db 0												; (Impacto).
 227+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 879C 00           	db 0												; (Ctrl_0).
 232+ 879D 00           	db 0												; (Ctrl_2).
 233+ 879E
 234+ 879E              ; ---------- ---------- ---------- ---------- ----------
 235+ 879E
 236+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 87A1 00           	db %00000000										; (Attr).
 238+ 87A2              ;	db 0												; (Cuad_objeto).
 239+ 87A2 00           	db 0												; (Impacto).
 240+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 87AF 00           	db 0												; (Ctrl_0).
 245+ 87B0 00           	db 0												; (Ctrl_2).
 246+ 87B1
 247+ 87B1              ; -------------------------------------------------------------------------------------
 248+ 87B1              ;
 249+ 87B1              ;	11/1/24
 250+ 87B1              ;
 251+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 87B1              ;
 253+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 87B1
 258+ 87B1              Indice_de_definiciones_de_entidades
 259+ 87B1
 260+ 87B1 B5 87        	defw Entidad_1
 261+ 87B3 C2 87        	defw Entidad_2
 262+ 87B5
 263+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 87B5
 265+ 87B5              ;	BADSAT, (Satélite malvado).
 266+ 87B5
 267+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87B8 04           	db %00000100										; (Attr).
 269+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 272+ 87BF 01           	db 1												; (Cuad_objeto).
 273+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87C2
 275+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87C5 02           	db %00000010										; (Attr).
 277+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87CC 01           	db 1												; (Cuad_objeto).
 281+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87CF
# file closed: Cajas_y_disparos.asm
 112  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 113  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 7A 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 02           Nivel_1 db 2									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 897A
  19+ 897A 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897B 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8983 01 02
  22+ 8985 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8989 01 02
  23+ 898B
# file closed: Niveles.asm
 114  898B
 115  898B              ; ******************************************************************************************************************************************************************************************
 116  898B              ; Constantes.
 117  898B              ; ******************************************************************************************************************************************************************************************
 118  898B              ;
 119  898B              ; 09/03/24
 120  898B
 121  898B              ;
 122  898B              ; Constantes.
 123  898B              ;
 124  898B
 125  898B              Sprite_vacio equ $eae0
 126  898B
 127  898B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 128  898B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 129  898B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 130  898B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 131  898B
 132  898B              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 133  898B              ;Almacen_de_scanlines_masticados equ $e900
 134  898B              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 135  898B              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 136  898B              ;
 137  898B              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 138  898B
 139  898B              ;                                                       ;	35 bytes por entidad.
 140  898B              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 141  898B              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 142  898B              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 143  898B              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 144  898B
 145  898B
 146  898B              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 147  898B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 148  898B              ;														; 55 Bytes.
 149  898B
 150  898B              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 151  898B
 152  898B              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 153  898B
 154  898B
 155  898B              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 156  898B
 157  898B              ; ******************************************************************************************************************************************************************************************
 158  898B              ; Variables.
 159  898B              ; ******************************************************************************************************************************************************************************************
 160  898B              ;
 161  898B              ; 18/01/24
 162  898B              ;
 163  898B              ; Variables de DRAW. (Motor principal).	42 Bytes.
 164  898B              ;
 165  898B
 166  898B              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 167  898B
 168  898B 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 169  898C              ;															- Patrón de movimiento.
 170  898C              ;															- Aspecto
 171  898C 00           Filas db 0												; Filas. [DRAW]
 172  898D 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 173  898E 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 174  8990 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 175  8992 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 176  8993 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 177  8994
 178  8994              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 179  8994
 180  8994 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 181  8995              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 182  8995              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 183  8995 00           Attr db 0												; Atributos de la entidad:
 184  8996
 185  8996              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 186  8996              ;
 187  8996              ;	COLORES: 0 ..... NEGRO
 188  8996              ;    		 1 ..... AZUL
 189  8996              ; 			 2 ..... ROJO
 190  8996              ;			 3 ..... MAGENTA
 191  8996              ; 			 4 ..... VERDE
 192  8996              ; 			 5 ..... CIAN
 193  8996              ;			 6 ..... AMARILLO
 194  8996              ; 			 7 ..... BLANCO
 195  8996
 196  8996 00 00        Indice_Sprite_der defw 0
 197  8998 00 00        Indice_Sprite_izq defw 0
 198  899A 00 00        Puntero_DESPLZ_der defw 0
 199  899C 00 00        Puntero_DESPLZ_izq defw 0
 200  899E
 201  899E 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 202  89A0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 203  89A1
 204  89A1              ; Variables de objeto. (Características).
 205  89A1
 206  89A1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 207  89A2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 208  89A2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 209  89A2 00 00 00...  Variables_de_borrado ds 6
 210  89A8
 211  89A8 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 212  89AA              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 213  89AA
 214  89AA 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 215  89AC
 216  89AC              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 217  89AC              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 218  89AC
 219  89AC 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 220  89AE              ;														; _palabras que componen el "movimiento_masticado".
 221  89AE
 222  89AE              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 223  89AE
 224  89AE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 225  89AF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 226  89AF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 227  89AF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 228  89AF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 229  89AF              ;
 230  89AF              ; 														DESCRIPCIÖN:
 231  89AF              ;
 232  89AF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 233  89AF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 234  89AF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 235  89AF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 236  89AF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 237  89AF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 238  89AF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 239  89AF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 240  89AF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 241  89AF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 242  89AF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 243  89AF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 244  89AF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 245  89AF              ;
 246  89AF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 247  89AF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 248  89AF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 249  89AF
 250  89AF              ; Variables de funcionamiento. [DRAW].
 251  89AF
 252  89AF 00           Columnas db 0
 253  89B0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 254  89B2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 255  89B2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 256  89B3
 257  89B3              ; variables de control general.
 258  89B3
 259  89B3 00           Ctrl_2 db 0
 260  89B4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 261  89B4              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 262  89B4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 263  89B4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 264  89B4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 265  89B4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 266  89B4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 267  89B4              ;
 268  89B4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 269  89B4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 270  89B4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 271  89B4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 272  89B4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 273  89B4              ;														BIT 4, ???
 274  89B4              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 275  89B4
 276  89B4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 277  89B5
 278  89B5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 279  89B5
 280  89B5              ;					         		---------;      ;---------
 281  89B5
 282  89B5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 283  89B5
 284  89B5              Perfiles_de_velocidad
 285  89B5
 286  89B5 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 287  89B6 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 288  89B7 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 289  89B8 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 290  89B9
 291  89B9              ; Contadores de 16 bits.
 292  89B9
 293  89B9 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 294  89BB 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 295  89BD 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 296  89BF 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 297  89C1
 298  89C1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 299  89C1
 300  89C1              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 301  89C1              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 302  89C1              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 303  89C1
 304  89C1              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 305  89C1
 306  89C1 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 307  89C3 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 308  89C5 00 00        Puntero_indice_mov_bucle defw 0							;
 309  89C7              ;
 310  89C7              ;
 311  89C7 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 312  89C8              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 313  89C8              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 314  89C8 00           Incrementa_puntero_backup db 0
 315  89C9 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 316  89CA              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 317  89CA 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 318  89CB 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 319  89CC 00           Cola_de_desplazamiento db 0								; Este byte indica:
 320  89CD              ;
 321  89CD              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 322  89CD              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 323  89CD              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 324  89CD              ;
 325  89CD              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 326  89CD              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 327  89CD              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 328  89CD              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 329  89CD              ;
 330  89CD              ;														;	"$ff" ..... Bucle infinito de repetición.
 331  89CD              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 332  89CD              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 333  89CD              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 334  89CD
 335  89CD 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 336  89CE
 337  89CE              ;														DESCRIPCIÓN:
 338  89CE              ;
 339  89CE              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 340  89CE              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 341  89CE              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 342  89CE              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 343  89CE              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 344  89CE              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 345  89CE
 346  89CE              ;														BIT 3, Recarga de nueva oleada.
 347  89CE              ;														BIT 4, Recarga de nueva oleada.
 348  89CE              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 349  89CE              ;														BIT 6, **** Frame completo.
 350  89CE              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 351  89CE
 352  89CE 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 353  89D0              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 354  89D0              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 355  89D0              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 356  89D0
 357  89D0              ; Gestión de ENTIDADES y CAJAS.
 358  89D0
 359  89D0 00 00        Puntero_store_caja defw 0
 360  89D2 00 00        Puntero_restore_caja defw 0
 361  89D4 00 00        Indice_restore_caja defw 0
 362  89D6 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 363  89D7 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 364  89D8 00           Entidades_en_curso db 0									; ..... ..... .....
 365  89D9 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 366  89DA              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 367  89DA              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 368  89DA              ;														; _ (Numero_de_malotes)="0".
 369  89DA 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 370  89DC 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 371  89DE              ;														; _ puntero (Indice_entidades).
 372  89DE
 373  89DE              ;---------------------------------------------------------------------------------------------------------------
 374  89DE              ;
 375  89DE              ;	11/01/24
 376  89DE              ;
 377  89DE              ;	Álbumes.
 378  89DE
 379  89DE 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 380  89E0              ;														; _variable para almacenar lo posición del puntero_
 381  89E0              ; 														; _de pila, SP.
 382  89E0 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 383  89E2              ;														; La utiliza la rutina [Extrae_foto_registros].
 384  89E2 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 385  89E4
 386  89E4 00 80        Scanlines_album_SP defw Scanlines_album
 387  89E6
 388  89E6              ;Scanlines_album_disparos_SP defw Scanlines_album_disparos
 389  89E6
 390  89E6 00 80        End_Snapshot defw Scanlines_album
 391  89E8              ;														; Inicialmente está situado el la posición $7000, Scanlines_album.
 392  89E8              ;End_Snapshot_disparos defw Scanlines_album_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 393  89E8              ;														; _el snapshot de los registros del siguiente disparo.
 394  89E8              ;														; Inicialmente está situado en la posición $7060, Scanlines_album_disparos.
 395  89E8              ;End_Snapshot_Amadeus defw Scanlines_album_Amadeus
 396  89E8
 397  89E8 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 398  89E9              ;
 399  89E9              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 400  89E9              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 401  89E9              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 402  89E9
 403  89E9 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 404  89EA              ;
 405  89EA              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 406  89EA              ;
 407  89EA              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 408  89EA              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 409  89EA              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 410  89EA              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 411  89EA              ;
 412  89EA              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 413  89EA              ;															_ masticados ya generados.
 414  89EA              ;
 415  89EA              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 416  89EA              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 417  89EA              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 418  89EA              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 419  89EA
 420  89EA
 421  89EA              ; Gestión de Disparos.
 422  89EA
 423  89EA              ;;Numero_de_disparotes db 0
 424  89EA              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 425  89EA              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 426  89EA              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 427  89EA              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 428  89EA              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 429  89EA              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 430  89EA              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 431  89EA              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 432  89EA              ;														; _produzca colisión.
 433  89EA              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 434  89EA              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 435  89EA              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 436  89EA              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 437  89EA 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 438  89ED              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 439  89ED              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 440  89ED
 441  89ED              ;---------------------------------------------------------------------------------------------------------------
 442  89ED
 443  89ED              ; Relojes y temporizaciones.
 444  89ED
 445  89ED 00           Contador_de_frames db 0
 446  89EE 00           Contador_de_frames_2 db 0
 447  89EF
 448  89EF              ;Clock_explosion db 4
 449  89EF 14           Clock_Entidades_en_curso db 20
 450  89F0 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 451  89F1              ;														; Repite la oleada de entidades.
 452  89F1              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 453  89F1              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 454  89F1              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 455  89F1
 456  89F1              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 457  89F1              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 458  89F1              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 459  89F1
 460  89F1              ;---------------------------------------------------------------------------------------------------------------
 461  89F1
 462  89F1              ; Gestión de NIVELES.
 463  89F1
 464  89F1 00           Nivel db 0												; Nivel actual del juego.
 465  89F2 00 00        Puntero_indice_NIVELES defw 0
 466  89F4 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 467  89F6              ; 														; _ que definen el NIVEL.
 468  89F6              ; Y todo comienza aquí .....
 469  89F6              ;
 470  89F6              ; 	INICIO  *************************************************************************************************************************************************************************
 471  89F6              ;
 472  89F6              ;	5/1/24
 473  89F6
 474  89F6              START
 475  89F6
 476  89F6 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 477  89F9 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 478  89FB ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 479  89FD ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 480  89FF F3           	DI
 481  8A00
 482  8A00              ;	ld a,%00000111
 483  8A00              ;	call Cls
 484  8A00 CD CC 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 485  8A03
 486  8A03              ; INICIALIZACIÓN.
 487  8A03
 488  8A03              ;	Inicializa 1er Nivel.
 489  8A03
 490  8A03 21 6B 89     	ld hl,Indice_de_niveles
 491  8A06 22 F2 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 492  8A09 CD F2 8B     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 493  8A0C              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 494  8A0C              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 495  8A0C              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 496  8A0C
 497  8A0C              ;	Provisional, (para desarrollo).
 498  8A0C              	;-
 499  8A0C              ;	ld hl,Numero_parcial_de_entidades
 500  8A0C              ;	ld b,(hl)
 501  8A0C              ;	inc b
 502  8A0C              ;	dec b
 503  8A0C              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 504  8A0C
 505  8A0C CD 37 8C     4 call Inicia_Entidades
 506  8A0F
 507  8A0F CD 22 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 508  8A12
 509  8A12              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 510  8A12              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 511  8A12              ; (Esto se dá cuando se inicia una nueva oleada).
 512  8A12
 513  8A12              ;	ld a,(Ctrl_1)
 514  8A12              ;	bit 3,a
 515  8A12              ;	jr nz,5F											 ; Loop
 516  8A12
 517  8A12              ; 	INICIA AMADEUS !!!!!
 518  8A12
 519  8A12              ;3 call Restore_Amadeus
 520  8A12              ;	call Inicia_Puntero_objeto
 521  8A12              ;	call Draw
 522  8A12
 523  8A12              ;	call Guarda_movimiento_masticado	;! Provisional
 524  8A12
 525  8A12              ;	call Genera_datos_de_impresion
 526  8A12              ;	call Guarda_datos_de_borrado_Amadeus
 527  8A12
 528  8A12              ;	ld de,Amadeus_db
 529  8A12              ;	call Store_Amadeus
 530  8A12
 531  8A12              ; 	INICIA DISPAROS !!!!!
 532  8A12
 533  8A12              ;	call Inicia_Puntero_Disparo_Entidades
 534  8A12              ;	call Inicia_Puntero_Disparo_Amadeus
 535  8A12
 536  8A12              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 537  8A12
 538  8A12              ;5 call Inicia_punteros_de_cajas
 539  8A12              ;	call Restore_entidad
 540  8A12
 541  8A12              ;	ld a,(Ctrl_1)
 542  8A12              ;	bit 3,a
 543  8A12              ;	jr z,6F
 544  8A12
 545  8A12              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 546  8A12
 547  8A12              ;	ld hl,Ctrl_1
 548  8A12              ;	res 3,(hl)
 549  8A12              ;	jr Main
 550  8A12
 551  8A12              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 552  8A12
 553  8A12              6
 554  8A12
 555  8A12              ;	call Calcula_numero_de_malotes
 556  8A12
 557  8A12              ; Damos por concluida la construcción del FRAME.
 558  8A12              ; Inicializamos (Scanlines_album_SP).
 559  8A12
 560  8A12 21 00 80     	ld hl,Scanlines_album
 561  8A15 22 E4 89     	ld (Scanlines_album_SP),hl
 562  8A18
 563  8A18 21 E8 89     	ld hl,Ctrl_3
 564  8A1B CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 565  8A1D
 566  8A1D FB           	ei
 567  8A1E 76           	halt
 568  8A1F
 569  8A1F              ; ------------------------------------
 570  8A1F
 571  8A1F              Main
 572  8A1F              ;
 573  8A1F              ;	11/12/23
 574  8A1F
 575  8A1F              ; Aparece nueva entidad ???
 576  8A1F
 577  8A1F              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 578  8A1F              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 579  8A1F              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 580  8A1F              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 581  8A1F              ;														; _un 2º bloque.
 582  8A1F
 583  8A1F              ;	call Genera_scanlines_masticados_a_borrar
 584  8A1F              ;	call Limpia_Almacen_de_scanlines_masticados
 585  8A1F
 586  8A1F              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 587  8A1F              ; 													 	; _(Scanlines_album_SP).
 588  8A1F
 589  8A1F 3A EF 89     	ld a,(Clock_Entidades_en_curso)
 590  8A22 47           	ld b,a
 591  8A23 3A ED 89     	ld a,(Contador_de_frames)
 592  8A26 B8           	cp b
 593  8A27 20 1E        	jr nz,13F
 594  8A29
 595  8A29              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 596  8A29              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 597  8A29
 598  8A29 3A D7 89     21 ld a,(Numero_parcial_de_entidades)
 599  8A2C 47           	ld b,a
 600  8A2D 3A D8 89     	ld a,(Entidades_en_curso)
 601  8A30 B8           	cp b
 602  8A31 28 14        	jr z,13F
 603  8A33 30 12        	jr nc,13F
 604  8A35
 605  8A35 3C           	inc a
 606  8A36 32 D8 89     	ld (Entidades_en_curso),a
 607  8A39
 608  8A39 FE 02        	cp 2
 609  8A3B F3           	di
 610  8A3C 28 FE        	jr z,$
 611  8A3E FB           	ei
 612  8A3F
 613  8A3F              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 614  8A3F
 615  8A3F 3A EF 89     	ld a,(Clock_Entidades_en_curso)
 616  8A42              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 617  8A42              ;! _ IMPREDECIBLE !!!!
 618  8A42 C6 64        	add 100
 619  8A44 32 EF 89     	ld (Clock_Entidades_en_curso),a
 620  8A47
 621  8A47              ; -------------------------------------------------------------------------------------------------------------
 622  8A47
 623  8A47              ; Habilita disparos.
 624  8A47
 625  8A47              13
 626  8A47
 627  8A47              ;	ld hl,Disparo_Amadeus
 628  8A47              ;	ld de,CLOCK_repone_disparo_Amadeus
 629  8A47              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 630  8A47
 631  8A47              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 632  8A47              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 633  8A47              ;	call Habilita_disparos
 634  8A47
 635  8A47              ; COLISIONES.
 636  8A47
 637  8A47              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 638  8A47
 639  8A47              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 640  8A47              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 641  8A47              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 642  8A47
 643  8A47              ;	xor a
 644  8A47              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 645  8A47
 646  8A47              ;	call Inicia_punteros_de_cajas
 647  8A47              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 648  8A47              ; 														; _ en DRAW.
 649  8A47
 650  8A47              ;	ld a,(Filas)
 651  8A47              ;	and a
 652  8A47              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 653  8A47              ;	call Incrementa_punteros_de_cajas
 654  8A47              ;	jr 12B
 655  8A47
 656  8A47              ; ---------------------------------------------------------------------------------------
 657  8A47
 658  8A47 3A D7 89     10 ld a,(Numero_parcial_de_entidades)
 659  8A4A 47               ld b,a
 660  8A4B A7           	and a
 661  8A4C 20 00        	jr nz,11F
 662  8A4E
 663  8A4E              ;	ld hl,Ctrl_1;
 664  8A4E              ;	bit 4,(hl)
 665  8A4E              ;	jp nz,16F
 666  8A4E
 667  8A4E              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 668  8A4E
 669  8A4E              ;	ld hl,Ctrl_1
 670  8A4E              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 671  8A4E
 672  8A4E              ;	ld a,(Contador_de_frames)
 673  8A4E              ;	inc a
 674  8A4E              ;	ld (Activa_recarga_cajas),a
 675  8A4E
 676  8A4E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 677  8A4E
 678  8A4E 3A D8 89     11 ld a,(Entidades_en_curso)
 679  8A51 A7           	and a
 680  8A52 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 681  8A54 47           	ld b,a												; No hay entidades que gestionar.
 682  8A55
 683  8A55              ; ( Código que ejecutamos con cada entidad: ).
 684  8A55
 685  8A55              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 686  8A55
 687  8A55 C5           15 push bc 												; Nº de entidades en curso.
 688  8A56
 689  8A56 CD 8B 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 690  8A59
 691  8A59 3A E8 89     	ld a,(Ctrl_3)
 692  8A5C CB 57        	bit 2,a
 693  8A5E F3           	di
 694  8A5F 20 FE        	jr nz,$
 695  8A61 FB           	ei
 696  8A62
 697  8A62              ; Existe "Entidad_guía" ???.
 698  8A62              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 699  8A62
 700  8A62              ;	ld a,(Ctrl_3)
 701  8A62              ;	bit 1,a
 702  8A62              ;	jr nz,22F
 703  8A62
 704  8A62              ; Almacén de "Movimientos_masticados" lleno ???
 705  8A62              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 706  8A62              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 707  8A62
 708  8A62              ;;	ld a,(Ctrl_3)
 709  8A62              ;;	bit 3,a
 710  8A62              ;;	jr nz,22F
 711  8A62
 712  8A62              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 713  8A62
 714  8A62              ;	ld hl,Ctrl_2
 715  8A62              ;	set 5,(hl)
 716  8A62              ;	ld hl,Ctrl_3
 717  8A62              ;	set 1,(hl)
 718  8A62
 719  8A62              ; Impacto ???
 720  8A62
 721  8A62              ;22 ld a,(Impacto)
 722  8A62              ;	and a
 723  8A62              ;	jr z,8F
 724  8A62
 725  8A62              ; Hay Impacto en esta entidad.
 726  8A62
 727  8A62              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 728  8A62              ;	dec (hl)
 729  8A62              ;	jp nz,17F
 730  8A62
 731  8A62              ;! Velocidad de la animación de la explosión.
 732  8A62
 733  8A62              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 734  8A62              ;														; _,(velocidad de la explosión).
 735  8A62              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 736  8A62
 737  8A62              ;	call Repone_datos_de_borrado
 738  8A62              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 739  8A62
 740  8A62              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 741  8A62
 742  8A62              ;	ld a,(Ctrl_2)
 743  8A62              ;	bit 1,a
 744  8A62              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 745  8A62
 746  8A62              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 747  8A62
 748  8A62              ;	ld a,(CTRL_DESPLZ)
 749  8A62              ;	and a
 750  8A62              ;	jr nz,18F
 751  8A62
 752  8A62              ;	ld hl,Indice_Explosion_2x2-2
 753  8A62              ;	ld (Puntero_DESPLZ_der),hl
 754  8A62              ;	jr 19F
 755  8A62
 756  8A62              ;18 ld hl,Indice_Explosion_2x3-2
 757  8A62              ;	ld (Puntero_DESPLZ_der),hl
 758  8A62
 759  8A62              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 760  8A62              ;	set 1,(hl)
 761  8A62              ;	jr 7F
 762  8A62
 763  8A62              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 764  8A62              ; _con las coordenadas de la entidad almacenada en DRAW.
 765  8A62
 766  8A62              ;8 ld a,(Ctrl_1)
 767  8A62              ;	bit 2,a
 768  8A62              ;	jr z,7F
 769  8A62
 770  8A62              ;	ld hl,(Coordenadas_disparo_certero)
 771  8A62              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 772  8A62              ;														; E contiene la coordenada_X del disparo.
 773  8A62              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 774  8A62              ;														; H FILA, (Coordenada_y de la entidad).
 775  8A62              ;	and a
 776  8A62              ;	sbc hl,de
 777  8A62
 778  8A62              ;	call Determina_resultado_comparativa
 779  8A62
 780  8A62              ;	ld a,b
 781  8A62              ;	and a
 782  8A62              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 783  8A62
 784  8A62              ; ----- ----- -----
 785  8A62
 786  8A62              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 787  8A62              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 788  8A62
 789  8A62              ;	ld hl,Ctrl_1
 790  8A62              ;	res 2,(hl)
 791  8A62
 792  8A62 CD 81 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 793  8A65
 794  8A65              ;	ld a,(Ctrl_0)
 795  8A65              ;	bit 4,a
 796  8A65              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 797  8A65
 798  8A65              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 799  8A65              ; [[[
 800  8A65              ;	call Detecta_disparo_entidad
 801  8A65              ; ]]]
 802  8A65
 803  8A65 CD A1 8C     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 804  8A68
 805  8A68              ;	ld hl,Ctrl_0
 806  8A68              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 807  8A68
 808  8A68 CD 91 8C     17 call Store_Restore_cajas
 809  8A6B
 810  8A6B C1           	pop bc
 811  8A6C
 812  8A6C 10 E7        	djnz 15B
 813  8A6E
 814  8A6E CD 22 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 815  8A71
 816  8A71              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 817  8A71              ; Hemos gestionado todas las unidades.
 818  8A71              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 819  8A71
 820  8A71              ;	ld hl,Ctrl_1
 821  8A71              ;	res 2,(hl)
 822  8A71
 823  8A71
 824  8A71              16
 825  8A71 CD 38 8B     	call Calcula_numero_de_malotes 						; Si el nº de malotes es "0" no generamos scanlines masticados. No ha habido movimiento.
 826  8A74
 827  8A74 21 E8 89     	ld hl,Ctrl_3
 828  8A77 CB C6        	set 0,(hl)											; Frame completo.
 829  8A79
 830  8A79 AF           	xor a
 831  8A7A D3 FE        	out ($fe),a
 832  8A7C 76           	halt
 833  8A7D
 834  8A7D              ; ----------------------------------------
 835  8A7D
 836  8A7D              ;	ld a,(Ctrl_1) 										; Existe Loop?
 837  8A7D              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 838  8A7D CA 1F 8A     	jp z,Main
 839  8A80
 840  8A80              ; RECARGA DE NUEVA OLEADA.
 841  8A80
 842  8A80              ;	ld a,(Contador_de_frames)
 843  8A80              ;	ld b,a
 844  8A80              ;	ld a,(Activa_recarga_cajas)
 845  8A80              ;	cp b
 846  8A80              ;	jr z,20F
 847  8A80
 848  8A80              ;	ld hl,Ctrl_1
 849  8A80              ;	set 4,(hl)
 850  8A80              ;	jp Main
 851  8A80
 852  8A80              ;20 ld hl,Ctrl_1
 853  8A80              ;	res 4,(hl)
 854  8A80
 855  8A80              ;	ld a,(Contador_de_frames)
 856  8A80
 857  8A80              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 858  8A80              ;! _ IMPREDECIBLE !!!!
 859  8A80
 860  8A80              ;	add 10
 861  8A80              ;	ld (Clock_Entidades_en_curso),a
 862  8A80
 863  8A80              ;	jp 4B
 864  8A80
 865  8A80 C9           	ret
 866  8A81
 867  8A81              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 868  8A81              ;
 869  8A81              ;	16/11/23
 870  8A81
 871  8A81              ;;Gestiona_Amadeus
 872  8A81
 873  8A81              ;! Activa/desactiva impacto con Amadeus.
 874  8A81
 875  8A81              ;	ld a,(Impacto)
 876  8A81              ;	and a
 877  8A81              ;	jr nz,2F
 878  8A81
 879  8A81              ;;	call Mov_Amadeus
 880  8A81
 881  8A81              ;;2 ld a,(Ctrl_0)
 882  8A81              ;;	bit 4,a
 883  8A81              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 884  8A81
 885  8A81              ;;	call Guarda_foto_entidad_a_pintar
 886  8A81              ;;	call Guarda_datos_de_borrado_Amadeus
 887  8A81
 888  8A81              ;;1 ld hl,Ctrl_0
 889  8A81              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 890  8A81
 891  8A81              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 892  8A81
 893  8A81              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 894  8A81
 895  8A81              ;	call Calcula_numero_de_disparotes
 896  8A81
 897  8A81              ;;	ret
 898  8A81
 899  8A81              ; -----------------------------
 900  8A81              ;
 901  8A81              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 902  8A81              ;
 903  8A81              ;	INPUTS: B a de estar a "0".
 904  8A81
 905  8A81              ;Prepara_Borra_sprites
 906  8A81
 907  8A81              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 908  8A81              ;	ld a,l
 909  8A81              ;	ret z
 910  8A81
 911  8A81              ;	srl a
 912  8A81
 913  8A81              ;2 sub 16
 914  8A81              ;	jr z,1F
 915  8A81              ;	inc b
 916  8A81              ;	jr 2B
 917  8A81
 918  8A81              ;1 inc b
 919  8A81
 920  8A81              ;	exx
 921  8A81              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 922  8A81              ;	exx
 923  8A81
 924  8A81              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 925  8A81              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 926  8A81
 927  8A81              ;	ret
 928  8A81
 929  8A81              ; --------------------------------------------------------------------------------------------------------------
 930  8A81              ;
 931  8A81              ;	15/12/23
 932  8A81
 933  8A81              Mov_obj
 934  8A81
 935  8A81              ;	ld a,(Ctrl_2)
 936  8A81              ;	bit 1,a
 937  8A81              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 938  8A81
 939  8A81              ; Explosión:
 940  8A81
 941  8A81              ;	ld a,(Frames_explosion)
 942  8A81              ;	and a
 943  8A81              ;	jr nz,4F
 944  8A81
 945  8A81              ;!  Una alimaña menos!!!!!!!!!1
 946  8A81
 947  8A81              ; Se trataba de una Entidad_guía ???
 948  8A81
 949  8A81              ;	ld a,(Ctrl_2)
 950  8A81              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 951  8A81              ;	jr z,5F
 952  8A81
 953  8A81              ;	ld hl,Ctrl_3
 954  8A81              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 955  8A81
 956  8A81              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 957  8A81              ;!! _generado puede ser distinto, (aletoriedad).
 958  8A81
 959  8A81              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 960  8A81              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 961  8A81              ;	dec (hl)
 962  8A81              ;	ld hl,Entidades_en_curso
 963  8A81              ;	dec (hl)
 964  8A81              ;	ld hl,Numero_de_entidades
 965  8A81              ;	dec (hl)
 966  8A81              ;	jr 3F
 967  8A81
 968  8A81              ; -----
 969  8A81
 970  8A81              ;	`Movemos´ la explosión.
 971  8A81
 972  8A81              ;4 ld hl,(Puntero_DESPLZ_der)
 973  8A81              ;	inc hl
 974  8A81              ;	inc hl
 975  8A81              ;	call Extrae_address
 976  8A81              ;;	ld (Puntero_objeto),hl
 977  8A81
 978  8A81              ;;	ld hl,Frames_explosion
 979  8A81              ;;	dec (hl)
 980  8A81
 981  8A81              ;;	ld hl,Ctrl_0
 982  8A81              ;;	set 4,(hl);;
 983  8A81
 984  8A81              ;;	jr 3F
 985  8A81
 986  8A81              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 987  8A81
 988  8A81              ;2 xor a
 989  8A81              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 990  8A81
 991  8A81              ; Movemos Entidades malignas.
 992  8A81              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 993  8A81
 994  8A81              ;	ld a,(Ctrl_2)
 995  8A81              ;	bit 5,a
 996  8A81              ;	jr nz,8F
 997  8A81
 998  8A81              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 999  8A81              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1000  8A81              ;	jr 7F
1001  8A81
1002  8A81              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1003  8A81
1004  8A81              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1005  8A81              ;	bit 4,a
1006  8A81              ;	ret z
1007  8A81
1008  8A81              ; Ha habido desplazamiento de la entidad maligna.
1009  8A81              ; Ha llegado a zona de AMADEUS ???
1010  8A81
1011  8A81              ;7 ld a,(Coordenada_y)
1012  8A81              ;	cp $14
1013  8A81              ;	jr c,1F
1014  8A81
1015  8A81              ; ---------
1016  8A81
1017  8A81              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1018  8A81              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1019  8A81
1020  8A81              ;	di
1021  8A81              ;	call Genera_coordenadas_X
1022  8A81              ;	call Compara_coordenadas_X
1023  8A81              ;	ei
1024  8A81
1025  8A81              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1026  8A81
1027  8A81              ; ---------
1028  8A81
1029  8A81              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1030  8A81              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1031  8A81              ;	call Limpia_Variables_de_borrado
1032  8A81
1033  8A81 C9           3 ret
1034  8A82
1035  8A82              ; --------------------------------------------------------------------------------------------------------------
1036  8A82              ;
1037  8A82              ;	29/1/23
1038  8A82
1039  8A82              ;Mov_Amadeus
1040  8A82
1041  8A82              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1042  8A82
1043  8A82              ;	call Mov_right
1044  8A82
1045  8A82              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1046  8A82              ;	bit 4,a
1047  8A82              ;	ret z
1048  8A82
1049  8A82              ; ---------
1050  8A82
1051  8A82              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1052  8A82              ;	call Repone_datos_de_borrado_Amadeus
1053  8A82              ;	call Limpia_Variables_de_borrado
1054  8A82
1055  8A82              ;	ret
1056  8A82
1057  8A82              ; -----------------------------------------------------------------------------------
1058  8A82              ;
1059  8A82              ;	20/01/24
1060  8A82              ;
1061  8A82              ;
1062  8A82
1063  8A82              Construye_movimientos_masticados_entidad
1064  8A82
1065  8A82 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1066  8A85 E5           	push hl
1067  8A86 CD C6 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1068  8A89              ;															; _ el (Contador_de_mov_masticados).
1069  8A89 CD 56 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1070  8A8C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1071  8A8C              ;	call Recompone_posicion_inicio
1072  8A8C
1073  8A8C CD E8 8D     1 call Draw
1074  8A8F CD AB 8A     	call Guarda_movimiento_masticado
1075  8A92
1076  8A92 CD CE 97     	call Movimiento
1077  8A95
1078  8A95 3A E8 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1079  8A98 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1080  8A9A 28 F0        	jr z,1B
1081  8A9C
1082  8A9C              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1083  8A9C              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1084  8A9C
1085  8A9C E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1086  8A9D 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1087  8AA0
1088  8AA0              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1089  8AA0
1090  8AA0 CD 32 99     	call Situa_en_contador_general_de_mov_masticados
1091  8AA3
1092  8AA3              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1093  8AA3              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1094  8AA3
1095  8AA3 ED 4B AC 89  	ld bc,(Contador_de_mov_masticados)
1096  8AA7 71           	ld (hl),c
1097  8AA8 23           	inc hl
1098  8AA9 70           	ld (hl),b
1099  8AAA
1100  8AAA C9           	ret
1101  8AAB
1102  8AAB              ; -----------------------------------------------------------------------------------
1103  8AAB              ;
1104  8AAB              ;	28/12/23
1105  8AAB              ;
1106  8AAB              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1107  8AAB              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1108  8AAB
1109  8AAB              Guarda_movimiento_masticado
1110  8AAB
1111  8AAB ED 73 DE 89  	ld (Stack),sp
1112  8AAF ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1113  8AB3
1114  8AB3              ;	push hl
1115  8AB3 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1116  8AB5 FD E5            push iy 												; Pushea Puntero_objeto.
1117  8AB7
1118  8AB7 ED 7B DE 89      ld sp,(Stack)
1119  8ABB
1120  8ABB 2A AC 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1121  8ABE 23           	inc hl
1122  8ABF 22 AC 89     	ld (Contador_de_mov_masticados),hl
1123  8AC2
1124  8AC2 CD C6 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1125  8AC5              ;															; _ el (Contador_de_mov_masticados).
1126  8AC5 C9               ret
1127  8AC6
1128  8AC6              ; --------------------------------------------------------------------------------------------------------------
1129  8AC6              ;
1130  8AC6              ;	12/1/24
1131  8AC6              ;
1132  8AC6              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1133  8AC6
1134  8AC6              Actualiza_Puntero_de_almacen_de_mov_masticados
1135  8AC6
1136  8AC6 2A AA 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1137  8AC9 01 04 00     	ld bc,4
1138  8ACC A7           	and a
1139  8ACD ED 4A        	adc hl,bc
1140  8ACF 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1141  8AD2 C9           	ret
1142  8AD3
1143  8AD3              ; --------------------------------------------------------------------------------------------------------------
1144  8AD3              ;
1145  8AD3              ;	09/03/24
1146  8AD3              ;
1147  8AD3              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1148  8AD3              ;
1149  8AD3              ;	IX contiene el puntero de impresión.
1150  8AD3              ;	DE contiene (Puntero_objeto).
1151  8AD3
1152  8AD3
1153  8AD3 ED 73 DE 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1154  8AD7 ED 7B AA 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1155  8ADB
1156  8ADB D1           	pop de 															; DE contiene Puntero_objeto
1157  8ADC DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1158  8ADE
1159  8ADE ED 73 AA 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1160  8AE2
1161  8AE2 ED 7B DE 89  	ld sp,(Stack)
1162  8AE6
1163  8AE6 C9           	ret
1164  8AE7
1165  8AE7              ; --------------------------------------------------------------------------------------------------------------
1166  8AE7              ;
1167  8AE7              ;	28/12/23
1168  8AE7              ;
1169  8AE7              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1170  8AE7              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1171  8AE7
1172  8AE7              Guarda_foto_entidad_a_pintar
1173  8AE7
1174  8AE7 3A AE 89     	ld a,(Ctrl_0)
1175  8AEA CB 77        	bit 6,a
1176  8AEC 28 04        	jr z,5F
1177  8AEE
1178  8AEE              ;	Guarda la foto de Amadeus.
1179  8AEE
1180  8AEE              ;	call Draw
1181  8AEE              ;	call Guarda_movimiento_masticado	;! Provisional
1182  8AEE CD BF 80     	call Genera_datos_de_impresion
1183  8AF1 C9           	ret
1184  8AF2
1185  8AF2              ; ENTIDADES!
1186  8AF2              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1187  8AF2
1188  8AF2 3A E8 89     5 ld a,(Ctrl_3)
1189  8AF5 CB 5F        	bit 3,a
1190  8AF7 28 01        	jr z,1F
1191  8AF9
1192  8AF9              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1193  8AF9
1194  8AF9              4
1195  8AF9              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1196  8AF9 C9           	ret
1197  8AFA
1198  8AFA              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1199  8AFA
1200  8AFA 3A E8 89     1 ld a,(Ctrl_3)
1201  8AFD CB 57        	bit 2,a
1202  8AFF 20 10        	jr nz,6F
1203  8B01
1204  8B01              ; Entidad guía o fantasma ???
1205  8B01
1206  8B01 3A B3 89     	ld a,(Ctrl_2)
1207  8B04 CB 6F        	bit 5,a
1208  8B06 20 10        	jr nz,3F
1209  8B08
1210  8B08              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1211  8B08
1212  8B08 18 EF        	jr 4B
1213  8B0A
1214  8B0A              ; ENTIDAD_GUÍA:
1215  8B0A              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1216  8B0A              ; _guardando "movimientos_masticados".
1217  8B0A
1218  8B0A 3A E8 89     2 ld a,(Ctrl_3)
1219  8B0D CB 57        	bit 2,a
1220  8B0F 28 07        	jr z,3F
1221  8B11
1222  8B11              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1223  8B11              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1224  8B11
1225  8B11 CB 97        6 res 2,a
1226  8B13 CB DF        	set 3,a
1227  8B15 32 E8 89     	ld (Ctrl_3),a
1228  8B18
1229  8B18
1230  8B18              ;	Esto sólo lo ejecuta una entidad guía.
1231  8B18
1232  8B18 CD E8 8D     3 	call Draw
1233  8B1B CD AB 8A     	call Guarda_movimiento_masticado
1234  8B1E CD BF 80     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1235  8B21
1236  8B21              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1237  8B21              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1238  8B21
1239  8B21              ;	call Convierte_guia_en_fantasma
1240  8B21 C9           	ret
1241  8B22
1242  8B22              ; *************************************************************************************************************************************************************
1243  8B22              ;
1244  8B22              ; 8/1/23
1245  8B22              ;
1246  8B22              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1247  8B22              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1248  8B22              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1249  8B22
1250  8B22              ; Destruye HL y DE !!!!!
1251  8B22
1252  8B22              Inicia_punteros_de_cajas
1253  8B22
1254  8B22 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1255  8B25 CD 50 8B         call Extrae_address
1256  8B28 22 D0 89         ld (Puntero_store_caja),hl
1257  8B2B 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1258  8B2E 22 D4 89     	ld (Indice_restore_caja),hl
1259  8B31 CD 50 8B     	call Extrae_address
1260  8B34 22 D2 89     	ld (Puntero_restore_caja),hl
1261  8B37 C9               ret
1262  8B38
1263  8B38              ; *************************************************************************************************************************************************************
1264  8B38              ;
1265  8B38              ; 8/1/23
1266  8B38              ;
1267  8B38              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1268  8B38
1269  8B38              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1270  8B38              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1271  8B38              ;	ret
1272  8B38              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1273  8B38              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1274  8B38              ;	ret
1275  8B38
1276  8B38              ; -------------------------------------------------------------------------------------------------------------
1277  8B38              ;
1278  8B38              ; 21/9/23
1279  8B38              ;
1280  8B38
1281  8B38              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1282  8B38
1283  8B38              ;;Limpia_album_Amadeus
1284  8B38              ;
1285  8B38              ;;	ld hl,Scanlines_album_Amadeus
1286  8B38              ;;	ld a,(hl)
1287  8B38              ;;	and a
1288  8B38              ;;	ret z
1289  8B38
1290  8B38              ;;	ld hl,Scanlines_album_Amadeus;
1291  8B38              ;;	ld de,Scanlines_album_Amadeus+1
1292  8B38              ;;	ld bc,11
1293  8B38              ;;	xor a
1294  8B38              ;;	ld (hl),a
1295  8B38              ;;	ldir
1296  8B38
1297  8B38              ;;	ld hl,Scanlines_album_Amadeus
1298  8B38              ;;	ld (End_Snapshot_Amadeus),hl
1299  8B38
1300  8B38              ;;	ret
1301  8B38
1302  8B38              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1303  8B38              ;	ld de,Variables_de_borrado+1
1304  8B38              ;	ld bc,5
1305  8B38              ;	xor a
1306  8B38              ;	ld (hl),a
1307  8B38              ;	ldir
1308  8B38              ;	ret
1309  8B38
1310  8B38              ; -------------------------------------------------------------------------------------------------------------
1311  8B38              ;
1312  8B38              ; 	21/02/24
1313  8B38              ;
1314  8B38              ;	MODIFICA: AF,HL,BC,DE
1315  8B38              ;
1316  8B38              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1317  8B38              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1318  8B38
1319  8B38              Calcula_numero_de_malotes
1320  8B38
1321  8B38 21 00 80     	ld hl,Scanlines_album
1322  8B3B EB           	ex de,hl
1323  8B3C 2A E4 89     	ld hl,(Scanlines_album_SP)
1324  8B3F
1325  8B3F 06 00        	ld b,0
1326  8B41 7D           	ld a,l
1327  8B42 93           	sub e
1328  8B43 28 07        	jr z,1F
1329  8B45
1330  8B45              ; Nº de malotes no es "0".
1331  8B45
1332  8B45 D6 06        2 sub 6
1333  8B47 04           	inc b
1334  8B48 A7           	and a
1335  8B49 20 FA        	jr nz,2B
1336  8B4B 78           	ld a,b
1337  8B4C
1338  8B4C 32 D9 89     1 ld (Numero_de_malotes),a
1339  8B4F C9           	ret
1340  8B50
1341  8B50              ; -------------------------------------------------------------------------------------------------------------
1342  8B50              ;
1343  8B50              ; 8/9/23
1344  8B50              ;
1345  8B50
1346  8B50              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1347  8B50              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1348  8B50
1349  8B50              ;Calcula_malotes_Amadeus
1350  8B50
1351  8B50              ;	ld hl,Scanlines_album_Amadeus
1352  8B50              ;	ex de,hl
1353  8B50              ;	ld hl,(End_Snapshot_Amadeus)
1354  8B50
1355  8B50              ;	ld a,h
1356  8B50              ;	and a
1357  8B50              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1358  8B50
1359  8B50              ;	ld b,0
1360  8B50              ;	ld a,l
1361  8B50              ;	sub e
1362  8B50              ;	jr z,1F
1363  8B50
1364  8B50              ; Nº de malotes no es "0".
1365  8B50
1366  8B50              ;2 sub 6
1367  8B50              ;	inc b
1368  8B50              ;	and a
1369  8B50              ;	jr nz,2B
1370  8B50              ;	ld a,b
1371  8B50
1372  8B50              ;1 ld (Numero_de_malotes),a
1373  8B50              ;	ret
1374  8B50
1375  8B50              ; -------------------------------------------------------------------------------------------------------------
1376  8B50              ;
1377  8B50              ; 28/2/23
1378  8B50              ;
1379  8B50
1380  8B50              ;;Calcula_numero_de_disparotes
1381  8B50
1382  8B50              ;	ld hl,Scanlines_album_disparos
1383  8B50              ;	ex de,hl
1384  8B50              ;	ld hl,(End_Snapshot_disparos)
1385  8B50
1386  8B50              ;	ld b,0
1387  8B50              ;	ld a,l
1388  8B50              ;	sub e
1389  8B50              ;	jr z,1F
1390  8B50
1391  8B50              ; Nº de malotes no es "0".
1392  8B50
1393  8B50              ;2 sub 6
1394  8B50              ;	inc b
1395  8B50              ;	and a
1396  8B50              ;	jr nz,2B
1397  8B50              ;	ld a,b
1398  8B50
1399  8B50              ;1 ld (Numero_de_disparotes),a
1400  8B50              ;	ret
1401  8B50
1402  8B50              ; *************************************************************************************************************************************************************
1403  8B50              ;
1404  8B50              ; 20/10/22
1405  8B50              ;
1406  8B50              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1407  8B50              ;
1408  8B50              ; Destruye el puntero y DE !!!!!
1409  8B50
1410  8B50 5E           Extrae_address ld e,(hl)
1411  8B51 23           	inc hl
1412  8B52 56           	ld d,(hl)
1413  8B53 2B           	dec hl
1414  8B54 EB           	ex de,hl
1415  8B55 C9           	ret
1416  8B56
1417  8B56              ; *************************************************************************************************************************************************************
1418  8B56              ;
1419  8B56              ;	20/1/24
1420  8B56              ;
1421  8B56              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1422  8B56              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1423  8B56              ;
1424  8B56              ;   Destruye HL y BC !!!!!,
1425  8B56              ;
1426  8B56              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1427  8B56              ;					"0" ..... Izquierda.
1428  8B56
1429  8B56              Inicia_Puntero_objeto
1430  8B56
1431  8B56 3A A0 89     	ld a,(Cuad_objeto)
1432  8B59 E6 01        	and 1
1433  8B5B F5           	push af
1434  8B5C CC 78 8B     	call z,Inicia_puntero_objeto_izq
1435  8B5F F1           	pop af
1436  8B60 C8           	ret z
1437  8B61 CD 65 8B     	call Inicia_puntero_objeto_der
1438  8B64 C9           	ret
1439  8B65
1440  8B65              ; Arrancamos desde la parte izquierda de la pantalla.
1441  8B65              ; Iniciamos (Indice_Sprite_der).
1442  8B65
1443  8B65 2A 96 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1444  8B68 22 9A 89     	ld (Puntero_DESPLZ_der),hl
1445  8B6B CD 50 8B     	call Extrae_address
1446  8B6E 22 90 89     	ld (Puntero_objeto),hl
1447  8B71
1448  8B71 2A 98 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1449  8B74 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1450  8B77 C9           	ret
1451  8B78
1452  8B78              ; Arrancamos desde la parte derecha de la pantalla.
1453  8B78              ; Iniciamos (Indice_Sprite_izq).
1454  8B78
1455  8B78 2A 98 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1456  8B7B 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
1457  8B7E CD 50 8B     	call Extrae_address
1458  8B81 22 90 89     	ld (Puntero_objeto),hl
1459  8B84
1460  8B84 2A 96 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1461  8B87 22 9A 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1462  8B8A C9           	ret
1463  8B8B
1464  8B8B              ; **************************************************************************************************
1465  8B8B              ;
1466  8B8B              ;	31/01/24
1467  8B8B              ;
1468  8B8B              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1469  8B8B
1470  8B8B              Restore_entidad
1471  8B8B
1472  8B8B 2A D0 89     	ld hl,(Puntero_store_caja)
1473  8B8E 11 8B 89     	ld de,Bandeja_DRAW
1474  8B91 7E           	ld a,(hl)
1475  8B92 12           	ld (de),a
1476  8B93 23           	inc hl 											; (Tipo).
1477  8B94
1478  8B94 11 92 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1479  8B97 01 02 00     	ld bc,2
1480  8B9A ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1481  8B9C
1482  8B9C 13           	inc de
1483  8B9D 7E           	ld a,(hl)
1484  8B9E 12           	ld (de),a 										; Transferimos (Attr).
1485  8B9F 23           	inc hl
1486  8BA0
1487  8BA0 11 A1 89     	ld de,Impacto
1488  8BA3
1489  8BA3 7E           	ld a,(hl)
1490  8BA4 12           	ld (de),a 										; Transferimos (Impacto).
1491  8BA5 23           	inc hl
1492  8BA6
1493  8BA6 13           	inc de
1494  8BA7
1495  8BA7 01 06 00     	ld bc,6
1496  8BAA ED B0        	ldir
1497  8BAC
1498  8BAC 01 07 00     	ld bc,7
1499  8BAF ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1500  8BB1              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1501  8BB1 11 B3 89     	ld de,Ctrl_2
1502  8BB4
1503  8BB4 7E           	ld a,(hl)
1504  8BB5 12           	ld (de),a 										; Transferimos (Ctrl_2).
1505  8BB6
1506  8BB6 C9           	ret
1507  8BB7
1508  8BB7              ; **************************************************************************************************
1509  8BB7              ;
1510  8BB7              ;	08/05/23
1511  8BB7              ;
1512  8BB7              ;	Incrementamos los dos punteros de entidades. (+1).
1513  8BB7
1514  8BB7              Incrementa_punteros_de_cajas
1515  8BB7
1516  8BB7 2A D2 89     	ld hl,(Puntero_restore_caja)
1517  8BBA 22 D0 89     	ld (Puntero_store_caja),hl
1518  8BBD 2A D4 89     	ld hl,(Indice_restore_caja)
1519  8BC0 23           	inc hl
1520  8BC1 23           	inc hl
1521  8BC2 22 D4 89     	ld (Indice_restore_caja),hl
1522  8BC5 CD 50 8B         call Extrae_address
1523  8BC8 22 D2 89         ld (Puntero_restore_caja),hl
1524  8BCB C9               ret
1525  8BCC
1526  8BCC              ; **************************************************************************************************
1527  8BCC              ;
1528  8BCC              ;	21/12/23
1529  8BCC              ;
1530  8BCC              ;	Restore_Amadeus
1531  8BCC              ;
1532  8BCC              ;	Cargamos en DRAW los parámetros de Amadeus.
1533  8BCC              ;
1534  8BCC
1535  8BCC              ;Restore_Amadeus	push hl
1536  8BCC              ;	push de
1537  8BCC              ; 	push bc
1538  8BCC              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1539  8BCC              ;	ld de,Bandeja_DRAW
1540  8BCC              ;	ld bc,42
1541  8BCC              ;	ldir
1542  8BCC              ;	pop bc
1543  8BCC              ;	pop de
1544  8BCC              ;	pop hl
1545  8BCC              ;	ret
1546  8BCC
1547  8BCC              ; *************************************************************************************************************************************************************
1548  8BCC              ;
1549  8BCC              ;	21/12/23
1550  8BCC              ;
1551  8BCC              ;	Store_Amadeus
1552  8BCC              ;
1553  8BCC              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1554  8BCC              ;
1555  8BCC              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1556  8BCC              ;
1557  8BCC              ;	DESTRUYE: HL y BC y DE.
1558  8BCC
1559  8BCC              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1560  8BCC              ;	ld bc,42
1561  8BCC              ;	ldir
1562  8BCC              ;	ret
1563  8BCC
1564  8BCC              ; -----------------------------------------------------------
1565  8BCC              ;
1566  8BCC              ;	21/12/23
1567  8BCC              ;
1568  8BCC              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1569  8BCC              ;
1570  8BCC              ;	Destruye: HL,BC,DE,A
1571  8BCC
1572  8BCC              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1573  8BCC              ;	ld bc,41
1574  8BCC              ;	xor a
1575  8BCC              ;	ld (hl),a;
1576  8BCC              ;	ld de,Bandeja_DRAW+1
1577  8BCC              ;	ldir
1578  8BCC              ;	ret
1579  8BCC
1580  8BCC              ; -----------------------------------------------------------
1581  8BCC
1582  8BCC              ; Teclado.
1583  8BCC
1584  8BCC 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1585  8BCE DB FE        	in a,($fe)
1586  8BD0 E6 01        	and $01
1587  8BD2 28 02        	jr z,1f
1588  8BD4 18 F6        	jr Pulsa_ENTER
1589  8BD6 C9           1 ret
1590  8BD7
1591  8BD7              ; **************************************************************************************************
1592  8BD7              ;
1593  8BD7              ; Temporización.
1594  8BD7
1595  8BD7              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1596  8BD7              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1597  8BD7              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1598  8BD7              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1599  8BD7
1600  8BD7              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1601  8BD7              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1602  8BD7              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1603  8BD7
1604  8BD7              ; A partir de $4f61 no hace falta DELAY.
1605  8BD7
1606  8BD7              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1607  8BD7
1608  8BD7 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1609  8BDA 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1610  8BDB 78           	LD A,B
1611  8BDC A7           	AND A
1612  8BDD 20 FB        	JR NZ,wait
1613  8BDF C9           	RET
1614  8BE0
1615  8BE0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1616  8BE0              ;
1617  8BE0              ;	5/3/23
1618  8BE0              ;
1619  8BE0              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1620  8BE0
1621  8BE0              ;Movimiento_Amadeus
1622  8BE0
1623  8BE0              ; Disparo.
1624  8BE0
1625  8BE0              ;	ld a,(Disparo_Amadeus)
1626  8BE0              ;	and a
1627  8BE0              ;	jr nz,1F
1628  8BE0              ;	jr 2F
1629  8BE0
1630  8BE0              ;1 ld a,$f7													; "5" para disparar.
1631  8BE0              ;	in a,($fe)
1632  8BE0              ;	and $10
1633  8BE0
1634  8BE0              ;	push af
1635  8BE0              ;	call z,Genera_disparo
1636  8BE0              ;	pop af
1637  8BE0              ;	jr nz,2F
1638  8BE0
1639  8BE0              ;	ld a,(Disparo_Amadeus)
1640  8BE0              ;	xor 1
1641  8BE0              ;	ld (Disparo_Amadeus),a
1642  8BE0              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1643  8BE0              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1644  8BE0              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1645  8BE0              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1646  8BE0
1647  8BE0              ;	ld a,$f7
1648  8BE0              ;	in a,($fe)
1649  8BE0              ;	and $01
1650  8BE0              ;	ret z
1651  8BE0
1652  8BE0              ;	ld a,$f7
1653  8BE0              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1654  8BE0              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1655  8BE0              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1656  8BE0              ;	ret
1657  8BE0
1658  8BE0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1659  8BE0              ;
1660  8BE0              ;	Rutina provisional para que los malotes cagen balas.
1661  8BE0
1662  8BE0              ;Detecta_disparo_entidad
1663  8BE0
1664  8BE0              ;	ld a,(Disparo_entidad)
1665  8BE0              ;	and a
1666  8BE0              ;	ret z
1667  8BE0
1668  8BE0              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1669  8BE0
1670  8BE0              ;	ld a,$7f				; Detecta SPACE.
1671  8BE0              ;	in a,($fe)
1672  8BE0              ;	and 1
1673  8BE0              ;	ret nz
1674  8BE0
1675  8BE0              ;	call Genera_disparo
1676  8BE0              ;	ret
1677  8BE0
1678  8BE0              ; ----------------------------------------------------------------------
1679  8BE0              ;
1680  8BE0              ;	8/9/23
1681  8BE0
1682  8BE0              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1683  8BE0              ; 	dec hl
1684  8BE0              ;	ld a,(hl)
1685  8BE0              ;	and a
1686  8BE0              ;	ret z										; Salimos si es álbum está vacío.
1687  8BE0
1688  8BE0              ;	ld de,Variables_de_borrado+5
1689  8BE0              ;	ld bc,6
1690  8BE0              ;	lddr
1691  8BE0              ;	ret
1692  8BE0
1693  8BE0              ; ----------------------------------------------------------------------
1694  8BE0              ;
1695  8BE0              ;	9/9/23
1696  8BE0
1697  8BE0              ;Repone_datos_de_borrado_Amadeus
1698  8BE0
1699  8BE0              ;	ld hl,Variables_de_borrado
1700  8BE0              ;	ld de,Scanlines_album_Amadeus
1701  8BE0              ;	ld bc,6
1702  8BE0              ;	ldir
1703  8BE0
1704  8BE0              ;	ex de,hl
1705  8BE0              ;	ld (End_Snapshot_Amadeus),hl
1706  8BE0
1707  8BE0              ;	ret
1708  8BE0
1709  8BE0              ; ----------------------------------------------------------------------
1710  8BE0              ;
1711  8BE0              ;	27/10/23
1712  8BE0              ;
1713  8BE0
1714  8BE0              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1715  8BE0              ;	_ Scanlines_album correspondiente.
1716  8BE0
1717  8BE0              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1718  8BE0              ;	_ durante el proceso de escritura.
1719  8BE0
1720  8BE0              ;Repone_datos_de_borrado
1721  8BE0
1722  8BE0              ;	ld de,(Scanlines_album_SP)
1723  8BE0              ;	ld hl,Variables_de_borrado
1724  8BE0              ;	ld bc,6
1725  8BE0              ;	ldir
1726  8BE0
1727  8BE0              ;	ex de,hl
1728  8BE0              ;	ld (Scanlines_album_SP),hl
1729  8BE0
1730  8BE0              ;	ret
1731  8BE0
1732  8BE0              ; --------------------------------------------------------------------------------------
1733  8BE0
1734  8BE0              ;Pinta_Amadeus
1735  8BE0
1736  8BE0              ;   	call Calcula_malotes_Amadeus
1737  8BE0              ;	call Extrae_foto_Amadeus
1738  8BE0              ;	call Limpia_album_Amadeus
1739  8BE0
1740  8BE0              ;	ret
1741  8BE0
1742  8BE0              ; -----------------------------------------------------------------------------------
1743  8BE0              ;
1744  8BE0              ;	10/12/23
1745  8BE0              ;
1746  8BE0              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1747  8BE0
1748  8BE0              Actualiza_relojes
1749  8BE0
1750  8BE0 3A E8 89     	ld a,(Ctrl_3)
1751  8BE3 CB 47        	bit 0,a
1752  8BE5 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1753  8BE6
1754  8BE6 21 ED 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1755  8BE9 34           	inc (hl)
1756  8BEA
1757  8BEA 34           	inc (hl)
1758  8BEB 35           	dec (hl)
1759  8BEC C0           	ret nz
1760  8BED
1761  8BED 21 EE 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1762  8BF0 34           	inc (hl)
1763  8BF1 C9           	ret
1764  8BF2
1765  8BF2              ; ---------------------------------------------------------------
1766  8BF2
1767  8BF2              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8BF2              ;---------------------------------------------------------------------------------------------------------------
   2+ 8BF2              ;
   3+ 8BF2              ;   8/3/24
   4+ 8BF2              ;
   5+ 8BF2              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8BF2              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8BF2              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8BF2              ;	_ de la 1ª entidad del Nivel.
   9+ 8BF2              ;
  10+ 8BF2              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8BF2
  12+ 8BF2              ;	MODIFICA: HL,DE y A.
  13+ 8BF2              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8BF2
  15+ 8BF2              Inicializa_Nivel
  16+ 8BF2
  17+ 8BF2 2A F2 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8BF5 CD 50 8B     	call Extrae_address
  19+ 8BF8 7E           	ld a,(hl)
  20+ 8BF9 32 D6 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8BFC 23           	inc hl
  22+ 8BFD CD 0A 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8C00 22 F4 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C03 CD 13 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C06
  26+ 8C06 CD 24 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C09 C9           	ret
  28+ 8C0A
  29+ 8C0A              ; ----------------------
  30+ 8C0A
  31+ 8C0A 11 B5 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C0D 01 04 00     	ld bc,4
  33+ 8C10 ED B0        	ldir
  34+ 8C12 C9           	ret
  35+ 8C13
  36+ 8C13 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C14 CD 64 8D         call Calcula_salto_en_BC
  38+ 8C17 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C1A A7               and a
  40+ 8C1B ED 4A            adc hl,bc
  41+ 8C1D CD 50 8B         call Extrae_address
  42+ 8C20 22 C1 89         ld (Puntero_indice_mov),hl
  43+ 8C23 C9               ret
  44+ 8C24
  45+ 8C24 3A 8B 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8C27 CD 64 8D     	call Calcula_salto_en_BC
  47+ 8C2A 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8C2D A7               and a
  49+ 8C2E ED 4A            adc hl,bc
  50+ 8C30 CD 50 8B         call Extrae_address
  51+ 8C33 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8C36 C9           	ret
  53+ 8C37
  54+ 8C37              ;---------------------------------------------------------------------------------------------------------------
  55+ 8C37              ;
  56+ 8C37              ;   5/1/24
  57+ 8C37              ;
  58+ 8C37              ;	Destruye A,BC,HL,DE
  59+ 8C37
  60+ 8C37              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8C37              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8C37
  63+ 8C37              Inicia_Entidades
  64+ 8C37
  65+ 8C37              ; Preparamos los punteros de las cajas de entidades:
  66+ 8C37
  67+ 8C37 CD 22 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8C3A              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8C3A CD CB 8D     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8C3D
  71+ 8C3D 2A F4 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8C40
  73+ 8C40 22 F4 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8C43
  75+ 8C43 CD 12 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8C46
  77+ 8C46 2A F4 89     	ld hl,(Datos_de_nivel)
  78+ 8C49
  79+ 8C49              ; En este punto:
  80+ 8C49              ;
  81+ 8C49              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8C49              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8C49
  84+ 8C49 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8C4A
  86+ 8C4A 7E           	ld a,(hl)
  87+ 8C4B CD 87 8C     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8C4E
  89+ 8C4E CD 76 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8C51
  91+ 8C51              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8C51
  93+ 8C51 CD 34 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8C54
  95+ 8C54 A7           	and a
  96+ 8C55 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8C57
  98+ 8C57              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8C57
 100+ 8C57              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8C57              ;	_ de este tipo de entidad.
 102+ 8C57
 103+ 8C57 CD 32 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8C5A CD 3F 99     	call Transfiere_datos_de_contadores
 105+ 8C5D
 106+ 8C5D 18 06        	jr 4F
 107+ 8C5F
 108+ 8C5F CD 82 8A     3 call Construye_movimientos_masticados_entidad
 109+ 8C62
 110+ 8C62              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8C62              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8C62              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8C62              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8C62              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8C62
 116+ 8C62 CD F2 8C     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8C65              ;																; _ Mov_masticados ya generados.
 118+ 8C65 CD A1 8C     4 call Guarda_foto_de_mov_masticado
 119+ 8C68
 120+ 8C68              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8C68
 122+ 8C68 2A A8 89     	ld hl,(Puntero_de_impresion)
 123+ 8C6B CD 75 99     	call Genera_coordenadas
 124+ 8C6E CD 9D 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8C71 CD AB 8C     	call Limpiamos_bandeja_DRAW
 126+ 8C74 CD B7 8B     	call Incrementa_punteros_de_cajas
 127+ 8C77
 128+ 8C77              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8C77              ; _ entidad del Nivel.
 130+ 8C77
 131+ 8C77 3A E9 89     	ld a,(Ctrl_4)
 132+ 8C7A E6 F0        	and $f0
 133+ 8C7C 32 E9 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8C7F
 135+ 8C7F              ; Siguiente entidad del Nivel.
 136+ 8C7F
 137+ 8C7F 2A F4 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8C82 23           	inc hl 														; _ entidad del Nivel.
 139+ 8C83
 140+ 8C83 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8C84
 142+ 8C84 10 BA        	djnz 2B
 143+ 8C86
 144+ 8C86 C9           	ret
 145+ 8C87
 146+ 8C87              ; ---------------------------------------------------------------------
 147+ 8C87              ;
 148+ 8C87              ;	10/02/24
 149+ 8C87              ;
 150+ 8C87              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8C87              ;
 152+ 8C87              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8C87
 154+ 8C87              Definicion_segun_tipo
 155+ 8C87
 156+ 8C87 CD 64 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8C8A 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8C8D CD 6C 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8C90 C9           	ret
 160+ 8C91
 161+ 8C91              ; ---------------------------------------------------------------------
 162+ 8C91              ;
 163+ 8C91              ;	30/01/24
 164+ 8C91
 165+ 8C91
 166+ 8C91              Store_Restore_cajas
 167+ 8C91
 168+ 8C91              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8C91
 170+ 8C91 2A A8 89     	ld hl,(Puntero_de_impresion)
 171+ 8C94 CD 75 99     	call Genera_coordenadas
 172+ 8C97
 173+ 8C97 CD 9D 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8C9A CD AB 8C     	call Limpiamos_bandeja_DRAW
 175+ 8C9D
 176+ 8C9D              ; 	Entidad_sospechosa. 20/4/23
 177+ 8C9D
 178+ 8C9D              ;	ld a,(Impacto)
 179+ 8C9D              ;	and a
 180+ 8C9D              ;	jr z,1F
 181+ 8C9D
 182+ 8C9D              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8C9D              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8C9D              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8C9D              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8C9D              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8C9D
 188+ 8C9D
 189+ 8C9D              ;1 ld hl,(Puntero_restore_caja)
 190+ 8C9D              ;	ld a,(hl)
 191+ 8C9D              ;	and a
 192+ 8C9D              ;	push af
 193+ 8C9D              ;	jr z,2F
 194+ 8C9D
 195+ 8C9D              ;	di
 196+ 8C9D              ;	ld de,Bandeja_DRAW
 197+ 8C9D              ;	ld bc,42
 198+ 8C9D              ;	ldir
 199+ 8C9D              ;	ei
 200+ 8C9D
 201+ 8C9D CD B7 8B     2 call Incrementa_punteros_de_cajas
 202+ 8CA0 C9           	ret
 203+ 8CA1
 204+ 8CA1
 205+ 8CA1              ; ---------------------------------------------------------------------
 206+ 8CA1              ;
 207+ 8CA1              ;	29/01/24
 208+ 8CA1
 209+ 8CA1              Guarda_foto_de_mov_masticado
 210+ 8CA1
 211+ 8CA1 CD D3 8A     	call Cargamos_registros_con_mov_masticado
 212+ 8CA4 CD BF 80     	call Genera_datos_de_impresion
 213+ 8CA7              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8CA7              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8CA7              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8CA7              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8CA7
 218+ 8CA7 CD B6 8C     	call Decrementa_Contador_de_mov_masticados
 219+ 8CAA C9           	ret
 220+ 8CAB
 221+ 8CAB              ; ---------------------------------------------------------------------
 222+ 8CAB              ;
 223+ 8CAB              ;	25/01/24
 224+ 8CAB
 225+ 8CAB 21 8B 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8CAE 06 2A        	ld b,42
 227+ 8CB0 AF           	xor a
 228+ 8CB1
 229+ 8CB1 77           1 ld (hl),a
 230+ 8CB2 23           	inc hl
 231+ 8CB3 10 FC        	djnz 1B
 232+ 8CB5
 233+ 8CB5 C9           	ret
 234+ 8CB6
 235+ 8CB6              ; ---------------------------------------------------------------------
 236+ 8CB6              ;
 237+ 8CB6              ;	22/01/24
 238+ 8CB6
 239+ 8CB6 2A AC 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8CB9 2B           	dec hl
 241+ 8CBA
 242+ 8CBA 24           	inc h
 243+ 8CBB 25           	dec h
 244+ 8CBC
 245+ 8CBC FC C3 8C     	call m,Reinicia_entidad_maliciosa
 246+ 8CBF
 247+ 8CBF              ;	jr nz,1F
 248+ 8CBF
 249+ 8CBF              ;	inc l
 250+ 8CBF              ;	dec l
 251+ 8CBF
 252+ 8CBF              ;	di
 253+ 8CBF              ;	jr z,$
 254+ 8CBF              ;	ei
 255+ 8CBF
 256+ 8CBF 22 AC 89     1 ld (Contador_de_mov_masticados),hl
 257+ 8CC2 C9           	ret
 258+ 8CC3
 259+ 8CC3              ; ---------------------------------------------------------------------
 260+ 8CC3              ;
 261+ 8CC3              ;	10/2/24
 262+ 8CC3
 263+ 8CC3              Reinicia_entidad_maliciosa
 264+ 8CC3
 265+ 8CC3              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8CC3
 267+ 8CC3 CD 32 99     	call Situa_en_contador_general_de_mov_masticados
 268+ 8CC6 CD 3F 99     	call Transfiere_datos_de_contadores
 269+ 8CC9
 270+ 8CC9              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8CC9
 272+ 8CC9 3A 8B 89     	ld a,(Tipo)
 273+ 8CCC CD 87 8C     	call Definicion_segun_tipo
 274+ 8CCF
 275+ 8CCF E5           	push hl
 276+ 8CD0 DD E1        	pop ix
 277+ 8CD2
 278+ 8CD2 DD 6E 0B     	ld l,(ix+11)
 279+ 8CD5 DD 66 0C     	ld h,(ix+12)
 280+ 8CD8
 281+ 8CD8 22 AA 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8CDB
 283+ 8CDB              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8CDB              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8CDB
 286+ 8CDB 2A E4 89     	ld hl,(Scanlines_album_SP)
 287+ 8CDE 01 06 00     	ld bc,6
 288+ 8CE1 A7           	and a
 289+ 8CE2 ED 42        	sbc hl,bc
 290+ 8CE4 22 E4 89     	ld (Scanlines_album_SP),hl
 291+ 8CE7
 292+ 8CE7 CD D3 8A     	call Cargamos_registros_con_mov_masticado
 293+ 8CEA CD BF 80     	call Genera_datos_de_impresion
 294+ 8CED
 295+ 8CED 2A AC 89     	ld hl,(Contador_de_mov_masticados)
 296+ 8CF0 2B           	dec hl
 297+ 8CF1
 298+ 8CF1 C9           	ret
 299+ 8CF2
 300+ 8CF2
 301+ 8CF2
 302+ 8CF2
 303+ 8CF2              ; ---------------------------------------------------------------------
 304+ 8CF2              ;
 305+ 8CF2              ;	22/01/24
 306+ 8CF2
 307+ 8CF2 21 E9 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8CF5 CB 46        	bit 0,(hl)
 309+ 8CF7 20 0D        	jr nz,1F
 310+ 8CF9 CB 4E        	bit 1,(hl)
 311+ 8CFB 20 0C        	jr nz,2F
 312+ 8CFD CB 56        	bit 2,(hl)
 313+ 8CFF 20 0B        	jr nz,3F
 314+ 8D01 CB 5E        	bit 3,(hl)
 315+ 8D03 20 0A        	jr nz,4F
 316+ 8D05 C9           	ret
 317+ 8D06
 318+ 8D06 CB E6        1 set 4,(hl)
 319+ 8D08 C9           	ret
 320+ 8D09 CB EE        2 set 5,(hl)
 321+ 8D0B C9           	ret
 322+ 8D0C CB F6        3 set 6,(hl)
 323+ 8D0E C9           	ret
 324+ 8D0F CB FE        4 set 7,(hl)
 325+ 8D11 C9           	ret
 326+ 8D12
 327+ 8D12              ; ---------------------------------------------------------------------
 328+ 8D12              ;
 329+ 8D12              ;	23/01/24
 330+ 8D12              ;
 331+ 8D12              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8D12              ;
 333+ 8D12              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8D12              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8D12              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8D12              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8D12
 338+ 8D12              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8D12
 340+ 8D12 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8D13 3D           	dec a
 342+ 8D14 20 06        	jr nz,1F
 343+ 8D16
 344+ 8D16              ; --- Tipo_1
 345+ 8D16
 346+ 8D16 21 E9 89     	ld hl,Ctrl_4
 347+ 8D19 CB C6        	set 0,(hl)
 348+ 8D1B C9           	ret
 349+ 8D1C
 350+ 8D1C 3D           1 dec a
 351+ 8D1D 20 06        	jr nz,2F
 352+ 8D1F
 353+ 8D1F              ; --- Tipo_2
 354+ 8D1F
 355+ 8D1F 21 E9 89     	ld hl,Ctrl_4
 356+ 8D22 CB CE        	set 1,(hl)
 357+ 8D24 C9           	ret
 358+ 8D25
 359+ 8D25 3D           2 dec a
 360+ 8D26 20 06        	jr nz,3F
 361+ 8D28
 362+ 8D28              ; --- Tipo_3
 363+ 8D28
 364+ 8D28 21 E9 89     	ld hl,Ctrl_4
 365+ 8D2B CB D6        	set 2,(hl)
 366+ 8D2D C9           	ret
 367+ 8D2E
 368+ 8D2E              ; --- Tipo_3
 369+ 8D2E
 370+ 8D2E 21 E9 89     3 ld hl,Ctrl_4
 371+ 8D31 CB D6        	set 2,(hl)
 372+ 8D33 C9           	ret
 373+ 8D34
 374+ 8D34              ; ---------------------------------------------------------------------
 375+ 8D34              ;
 376+ 8D34              ;	22/01/24
 377+ 8D34
 378+ 8D34 21 E9 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8D37 CB 46        	bit 0,(hl)
 380+ 8D39 20 0E        	jr nz,1F
 381+ 8D3B
 382+ 8D3B CB 4E        	bit 1,(hl)
 383+ 8D3D 20 10        	jr nz,2F
 384+ 8D3F
 385+ 8D3F CB 56        	bit 2,(hl)
 386+ 8D41 20 12        	jr nz,3F
 387+ 8D43
 388+ 8D43 CB 5E        	bit 3,(hl)
 389+ 8D45 20 14        	jr nz,4F
 390+ 8D47 18 19        	jr 6F
 391+ 8D49
 392+ 8D49              ; Entidad_de_Tipo_1.
 393+ 8D49
 394+ 8D49 CB 66        1 bit 4,(hl)
 395+ 8D4B 28 15        	jr z,6F
 396+ 8D4D 18 10        	jr 5F
 397+ 8D4F
 398+ 8D4F              ; Entidad_de_Tipo_2.
 399+ 8D4F
 400+ 8D4F CB 6E        2 bit 5,(hl)
 401+ 8D51 28 0F        	jr z,6F
 402+ 8D53 18 0A        	jr 5F
 403+ 8D55
 404+ 8D55              ; Entidad_de_Tipo_3.
 405+ 8D55
 406+ 8D55 CB 76        3 bit 6,(hl)
 407+ 8D57 28 09        	jr z,6F
 408+ 8D59 18 04        	jr 5F
 409+ 8D5B
 410+ 8D5B              ; Entidad_de_Tipo_4.
 411+ 8D5B
 412+ 8D5B CB 7E        4 bit 7,(hl)
 413+ 8D5D 28 03        	jr z,6F
 414+ 8D5F
 415+ 8D5F              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8D5F
 417+ 8D5F AF           5 xor a
 418+ 8D60 3C           	inc a
 419+ 8D61 C9           	ret
 420+ 8D62
 421+ 8D62              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8D62
 423+ 8D62 AF           6 xor a
 424+ 8D63 C9           	ret
 425+ 8D64
 426+ 8D64              ;	------------------------------------------------------------------------------------
 427+ 8D64              ;
 428+ 8D64              ;	12/01/24
 429+ 8D64              ;
 430+ 8D64              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8D64              ;
 432+ 8D64              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8D64              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8D64
 435+ 8D64 CB 27        Calcula_salto_en_BC sla a
 436+ 8D66 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8D68 4F           	ld c,a
 438+ 8D69 06 00        	ld b,0
 439+ 8D6B C9           	ret
 440+ 8D6C
 441+ 8D6C              ; ------------------------------------------------------------------
 442+ 8D6C              ;
 443+ 8D6C              ;	19/1/24
 444+ 8D6C              ;
 445+ 8D6C              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8D6C              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8D6C
 448+ 8D6C A7           Situa_en_datos_de_definicion and a
 449+ 8D6D ED 4A        	adc hl,bc
 450+ 8D6F CD 50 8B     	call Extrae_address
 451+ 8D72 22 DC 89         ld (Datos_de_entidad),hl
 452+ 8D75 C9           	ret
 453+ 8D76
 454+ 8D76              ; ------------------------------------------------------------------
 455+ 8D76
 456+ 8D76              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8D76              ; 	inc de
 458+ 8D76              ; 	inc de
 459+ 8D76              ; 	ex de,hl
 460+ 8D76              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8D76              ; 	ret
 462+ 8D76
 463+ 8D76              ; ----------------------------------------------------------------------------------------------------------
 464+ 8D76              ;
 465+ 8D76              ;	31/1/24
 466+ 8D76              ;
 467+ 8D76              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8D76              ;	_ de entidad.
 469+ 8D76              ;
 470+ 8D76              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8D76              ;
 472+ 8D76              ;
 473+ 8D76              ;	MODIFICA: HL,DE y BC
 474+ 8D76
 475+ 8D76
 476+ 8D76              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8D76
 478+ 8D76 11 8B 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8D79 01 03 00     	ld bc,3
 480+ 8D7C ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8D7E              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8D7E 11 95 89     	ld de,Attr									; DE en (Attr).
 483+ 8D81 01 05 00     	ld bc,5
 484+ 8D84 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8D86              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8D86 11 9E 89     	ld de,Posicion_inicio
 487+ 8D89 01 03 00     	ld bc,3
 488+ 8D8C ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8D8E              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8D8E 11 AA 89     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8D91 01 02 00     	ld bc,2
 492+ 8D94 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8D96
 494+ 8D96 11 B4 89     	ld de,Frames_explosion
 495+ 8D99 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8D9B 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8D9C
 498+ 8D9C C9           	ret
 499+ 8D9D
 500+ 8D9D              ; ----------------------------------------------------------------------------------------------------------
 501+ 8D9D              ;
 502+ 8D9D              ;	22/01/24
 503+ 8D9D              ;
 504+ 8D9D              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8D9D              ;
 506+ 8D9D              ;	Las cajas contienen entidades iniciadas:
 507+ 8D9D              ;
 508+ 8D9D              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8D9D              ;
 510+ 8D9D              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8D9D              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8D9D              ;
 513+ 8D9D              ;	MODIFICA: HL,DE y BC
 514+ 8D9D
 515+ 8D9D 21 8B 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8DA0 ED 5B D0 89  	ld de,(Puntero_store_caja)
 517+ 8DA4 7E           	ld a,(hl)
 518+ 8DA5 12           	ld (de),a
 519+ 8DA6 13           	inc de 													; (Tipo).
 520+ 8DA7
 521+ 8DA7 21 92 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8DAA 01 02 00     	ld bc,2
 523+ 8DAD ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8DAF              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8DAF 23           	inc hl
 526+ 8DB0 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8DB1 12           	ld (de),a
 528+ 8DB2 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8DB3
 530+ 8DB3 21 A1 89     	ld hl,Impacto
 531+ 8DB6 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8DB7 12           	ld (de),a
 533+ 8DB8 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8DB9              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8DB9 23           	inc hl
 536+ 8DBA 01 06 00     	ld bc,6
 537+ 8DBD ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8DBF              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8DBF 01 07 00     	ld bc,7
 540+ 8DC2 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8DC4              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8DC4              ;															; HL apunta ahora a (Columnas).
 543+ 8DC4 21 B3 89     	ld hl,Ctrl_2
 544+ 8DC7 7E           	ld a,(hl)
 545+ 8DC8 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8DC9 13           	inc de
 547+ 8DCA
 548+ 8DCA C9           	ret
 549+ 8DCB
 550+ 8DCB              ;---------------------------------------------------------------------------------------------------------------
 551+ 8DCB              ;
 552+ 8DCB              ;	5/1/24
 553+ 8DCB              ;
 554+ 8DCB              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8DCB              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8DCB              ;
 557+ 8DCB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8DCB              ;
 559+ 8DCB              ;	(Numero_parcial_de_entidades)="7".
 560+ 8DCB              ;
 561+ 8DCB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8DCB              ;
 563+ 8DCB              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8DCB              ;
 565+ 8DCB              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8DCB              ;	MODIFICA: A y B.
 567+ 8DCB              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8DCB
 569+ 8DCB              Inicializa_Numero_parcial_de_entidades
 570+ 8DCB
 571+ 8DCB              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8DCB
 573+ 8DCB 3A D6 89     	ld a,(Numero_de_entidades)
 574+ 8DCE A7           	and a
 575+ 8DCF
 576+ 8DCF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8DCF              ;	jr z,$
 578+ 8DCF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8DCF
 580+ 8DCF 20 03        	jr nz,3F
 581+ 8DD1
 582+ 8DD1              ; ---------- ---------- ----------
 583+ 8DD1
 584+ 8DD1              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8DD1              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8DD1
 587+ 8DD1 CD F2 8B     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8DD4
 589+ 8DD4              ; ---------- ---------- ----------
 590+ 8DD4
 591+ 8DD4 3A D6 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8DD7 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8DD9 38 08        	jr c,1F
 594+ 8DDB
 595+ 8DDB              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8DDB              ; Actualizamos variables.
 597+ 8DDB
 598+ 8DDB 3E 07        	ld a,7
 599+ 8DDD 32 D7 89     	ld (Numero_parcial_de_entidades),a
 600+ 8DE0 47           	ld b,a
 601+ 8DE1 18 04        	jr 2F
 602+ 8DE3
 603+ 8DE3              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8DE3              ; (Numero_de_entidades)="0".
 605+ 8DE3
 606+ 8DE3 32 D7 89     1 ld (Numero_parcial_de_entidades),a
 607+ 8DE6 47           	ld b,a
 608+ 8DE7 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1768  8DE8              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DE8              ; ******************************************************************************************************************************************************************************************
   2+ 8DE8              ;
   3+ 8DE8              ; 26/06/23
   4+ 8DE8              ;
   5+ 8DE8              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DE8
   7+ 8DE8              Draw
   8+ 8DE8
   9+ 8DE8 CD D2 90     	call Prepara_draw
  10+ 8DEB 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8DEC A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8DED 28 05        	jr z,2F
  13+ 8DEF
  14+ 8DEF 3A A0 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8DF2 18 0C        	jr 1F
  16+ 8DF4
  17+ 8DF4 2A 9E 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8DF7 22 8E 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8DFA CD 86 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8DFD              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8DFD
  22+ 8DFD CD 96 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8E00
  24+ 8E00 3A AE 89     1 ld a,(Ctrl_0)
  25+ 8E03 CB 6F        	bit 5,a
  26+ 8E05 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8E07
  28+ 8E07 CD 1C 8E     	call Comprueba_limite_horizontal
  29+ 8E0A CD AC 8E     	call Comprueba_limite_vertical
  30+ 8E0D
  31+ 8E0D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8E0D              ; -----------------------
  33+ 8E0D              ; -----------------------
  34+ 8E0D              ; -----------------------
  35+ 8E0D
  36+ 8E0D CD 02 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8E10 CD 39 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8E13              ;	call Define_rutina_de_impresion
  39+ 8E13
  40+ 8E13 3A AE 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8E16 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8E18 32 AE 89     	ld (Ctrl_0),a
  43+ 8E1B
  44+ 8E1B C9           	ret
  45+ 8E1C
  46+ 8E1C              ; *******************************************************************************************************************************************************************************************
  47+ 8E1C              ;	21/01/23
  48+ 8E1C              ;
  49+ 8E1C              ; 	Comprueba_limite_horizontal.
  50+ 8E1C              ;
  51+ 8E1C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8E1C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8E1C              ;
  54+ 8E1C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8E1C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8E1C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8E1C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8E1C
  59+ 8E1C
  60+ 8E1C
  61+ 8E1C 3A AE 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8E1F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8E21 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8E23 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8E25 32 AE 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8E28 18 09            jr 6F
  67+ 8E2A CB 5F        1 bit 3,a
  68+ 8E2C 28 0A            jr z,2F
  69+ 8E2E E6 F7            and $f7
  70+ 8E30 32 AE 89         ld (Ctrl_0),a
  71+ 8E33 CD 86 8F     6 call Inicializacion
  72+ 8E36 18 5B            jr 5F
  73+ 8E38 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8E39
  75+ 8E39              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8E39              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8E39
  78+ 8E39 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8E3A 2A B0 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8E3D CD 57 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8E40 67           	ld h,a
  82+ 8E41 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8E42 CD 57 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8E45 67           	ld h,a
  85+ 8E46 A7           	and a
  86+ 8E47 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8E49 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8E4A 3A A0 89     	ld a,(Cuad_objeto)
  89+ 8E4D FE 02        	cp 2
  90+ 8E4F 38 1E        	jr c,3F
  91+ 8E51 28 1C        	jr z,3F
  92+ 8E53 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8E54 28 23            jr z,7F
  94+ 8E56 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8E58 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8E5A E1           	pop hl
  97+ 8E5B
  98+ 8E5B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8E5B              ; _para indicar con E="2" en caso necesario.
 100+ 8E5B
 101+ 8E5B E5               push hl
 102+ 8E5C C5               push bc
 103+ 8E5D CD 57 99     	call calcula_tercio
 104+ 8E60 FE 01        	cp 1
 105+ 8E62 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8E64 CD 94 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8E67 28 26            jr z,9F
 108+ 8E69 38 24            jr c,9F
 109+ 8E6B 1E 00        11 ld e,0
 110+ 8E6D 18 22            jr 8F
 111+ 8E6F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8E70 28 07        	jr z, 7F
 113+ 8E72 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8E74 1E 00         	ld e,0
 115+ 8E76 E1           	pop hl
 116+ 8E77 18 04        	jr 4F
 117+ 8E79 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8E7B 18 15            jr 10F
 119+ 8E7D
 120+ 8E7D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8E7D              ; _para indicar con E="2" en caso necesario.
 122+ 8E7D
 123+ 8E7D E5           4 push hl
 124+ 8E7E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8E7F CD 57 99     	call calcula_tercio
 126+ 8E82 FE 01        	cp 1
 127+ 8E84 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8E86 CD 94 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8E89 28 04            jr z,9F
 130+ 8E8B 30 02            jr nc,9F
 131+ 8E8D 18 02        	jr 8F
 132+ 8E8F 1E 02        9 ld e,2
 133+ 8E91 C1           8 pop bc
 134+ 8E92 E1           10 pop hl
 135+ 8E93 C9           5 ret
 136+ 8E94
 137+ 8E94              ; --------------------
 138+ 8E94              ;
 139+ 8E94              ; 25/08/22
 140+ 8E94
 141+ 8E94 CD 57 99     Comprueba_centro call calcula_tercio
 142+ 8E97 67               ld h,a
 143+ 8E98 08           	ex af,af
 144+ 8E99 FE 02        	cp 2
 145+ 8E9B 38 07        	jr c,1F
 146+ 8E9D 28 05        	jr z,1F
 147+ 8E9F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8EA2 18 03        	jr 2F
 149+ 8EA4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8EA7 08           2 ex af,af
 151+ 8EA8 A7               and a
 152+ 8EA9 ED 42            sbc hl,bc
 153+ 8EAB C9               ret
 154+ 8EAC
 155+ 8EAC              ; *********************************************************************************************************************************************************************************************
 156+ 8EAC              ;
 157+ 8EAC              ;   16/8/22
 158+ 8EAC              ;
 159+ 8EAC              ;	Comprueba_limite_vertical
 160+ 8EAC              ;
 161+ 8EAC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8EAC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8EAC              ;
 164+ 8EAC
 165+ 8EAC 2A 8E 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8EAF 7D           	ld a,l
 167+ 8EB0 E6 1F        	and $1F
 168+ 8EB2 57           	ld d,a
 169+ 8EB3 3A B2 89     	ld a,(Limite_vertical)
 170+ 8EB6 BA           	cp d 											; Límite - Posición.
 171+ 8EB7 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8EB8 3A A0 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8EBB CB 47        	bit 0,a
 174+ 8EBD 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8EBF
 176+ 8EBF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8EBF
 178+ 8EBF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8EC0 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8EC2
 181+ 8EC2              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8EC2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8EC2
 184+ 8EC2 3A 92 89         ld a,(Coordenada_X)
 185+ 8EC5 16 0F            ld d,Centro_izquierda
 186+ 8EC7 A7               and a
 187+ 8EC8 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8EC9 28 1E            jr z,3F
 189+ 8ECB 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8ECD              ;                                                    ; _salimos sin modificar nada.
 191+ 8ECD 18 0E            jr 2F
 192+ 8ECF 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8ED0 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8ED2
 195+ 8ED2              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8ED2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8ED2
 198+ 8ED2 3A 92 89         ld a,(Coordenada_X)
 199+ 8ED5 16 10            ld d,Centro_derecha
 200+ 8ED7 A7               and a
 201+ 8ED8 92               sub d
 202+ 8ED9 28 0E            jr z,3F
 203+ 8EDB 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8EDD              ;                                                    ; _salimos sin modificar nada.
 205+ 8EDD CB 43        2 bit 0,e
 206+ 8EDF 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8EE1 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8EE2 CD 76 8F         call Modificaccionne
 209+ 8EE5 C1           	pop bc
 210+ 8EE6 CD 86 8F         call Inicializacion
 211+ 8EE9 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8EEA
 213+ 8EEA              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8EEA
 215+ 8EEA C5           4 push bc
 216+ 8EEB 01 8D 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8EEE 0A           	ld a,(bc)
 218+ 8EEF 3D           	dec a
 219+ 8EF0 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8EF1 7D           	ld a,l
 221+ 8EF2 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8EF3 CB 47        	bit 0,a
 223+ 8EF5 28 03        	jr z,5F
 224+ 8EF7 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8EF8 18 2E        	jr 7F
 226+ 8EFA
 227+ 8EFA              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8EFA
 229+ 8EFA 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8EFB F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8EFC 3A AE 89     	ld a,(Ctrl_0)
 232+ 8EFF CB 4F        	bit 1,a
 233+ 8F01 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8F03 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8F04
 236+ 8F04              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8F04
 238+ 8F04 1C               inc e
 239+ 8F05 1D               dec e
 240+ 8F06 20 07            jr nz,12F
 241+ 8F08 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8F09 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8F0A 22 8E 89     	ld (Posicion_actual),hl
 244+ 8F0D 18 44        13 jr 9F
 245+ 8F0F CB 43        12 bit 0,e
 246+ 8F11 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8F13              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8F13 C1           	pop bc
 249+ 8F14 18 D3        	jr 3B
 250+ 8F16 80           14 add b
 251+ 8F17 6F               ld l,a
 252+ 8F18 22 8E 89     	ld (Posicion_actual),hl
 253+ 8F1B CD 76 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8F1E 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8F20 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8F22 32 AE 89         ld (Ctrl_0),a
 257+ 8F25 F1           	pop af
 258+ 8F26 18 2B        	jr 9F
 259+ 8F28
 260+ 8F28              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8F28
 262+ 8F28 F5           7 push af
 263+ 8F29 3A AE 89     	ld a,(Ctrl_0)
 264+ 8F2C CB 47        	bit 0,a
 265+ 8F2E 20 1D        	jr nz,8F
 266+ 8F30 F1           	pop af
 267+ 8F31
 268+ 8F31              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8F31
 270+ 8F31 1C           	inc e
 271+ 8F32 1D               dec e
 272+ 8F33 20 07            jr nz,10F
 273+ 8F35 90           	sub b
 274+ 8F36 6F               ld l,a
 275+ 8F37 22 8E 89     	ld (Posicion_actual),hl
 276+ 8F3A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8F3C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8F3C CB 43        10 bit 0,e
 279+ 8F3E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8F40              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8F40 C1           	pop bc
 282+ 8F41 18 A6        	jr 3B
 283+ 8F43 90           16 sub b
 284+ 8F44 6F               ld l,a
 285+ 8F45 22 8E 89     	ld (Posicion_actual),hl
 286+ 8F48 CD 76 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 8F4B 18 06            jr 9F
 288+ 8F4D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 8F4F 32 AE 89         ld (Ctrl_0),a
 290+ 8F52 F1           	pop af
 291+ 8F53 C1           9 pop bc
 292+ 8F54 1E 00        	ld e,0
 293+ 8F56 CD 86 8F         call Inicializacion
 294+ 8F59 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 8F5A 08           	ex af,af
 296+ 8F5B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 8F5C 18 8B            jr 3B
 298+ 8F5E
 299+ 8F5E              ; --------------------
 300+ 8F5E
 301+ 8F5E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 8F60 CD ED 90     1 call PreviousScan
 303+ 8F63 10 FB            djnz 1B
 304+ 8F65 22 8E 89     	ld (Posicion_actual),hl
 305+ 8F68 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 8F69 C9           	ret
 307+ 8F6A
 308+ 8F6A              ; --------------------
 309+ 8F6A
 310+ 8F6A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 8F6C CD DE 90     1 call NextScan
 312+ 8F6F 10 FB            djnz 1B
 313+ 8F71 22 8E 89     	ld (Posicion_actual),hl
 314+ 8F74 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 8F75 C9           	ret
 316+ 8F76
 317+ 8F76              ; --------------------
 318+ 8F76              ;
 319+ 8F76              ;	22/01/23
 320+ 8F76              ;
 321+ 8F76              ;	E="1". Hemos cambiado de cuadrante.
 322+ 8F76              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 8F76              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 8F76
 325+ 8F76
 326+ 8F76              Modificaccionne
 327+ 8F76
 328+ 8F76 3A A0 89     	ld a,(Cuad_objeto)
 329+ 8F79 FE 02        	cp 2
 330+ 8F7B CC 5E 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 8F7E DC 5E 8F         call c,Modifica_Pos_actual
 332+ 8F81 C8           	ret z
 333+ 8F82 CD 6A 8F         call Modifica_Pos_actual2
 334+ 8F85 C9               ret
 335+ 8F86
 336+ 8F86              ; *************************************************************************************************************************************************************************************************
 337+ 8F86              ;
 338+ 8F86              ;	13/8/22
 339+ 8F86              ;
 340+ 8F86              ;	Inicializacion
 341+ 8F86              ;
 342+ 8F86              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 8F86              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 8F86              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 8F86              ;
 346+ 8F86              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 8F86              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 8F86              ;	_ desaparece/aparece.
 349+ 8F86
 350+ 8F86              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 8F86              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 8F86              ;
 353+ 8F86              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 8F86              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 8F86              ; 		   [E] ="0"
 356+ 8F86
 357+ 8F86              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 8F86
 359+ 8F86 CD 57 99     Inicializacion call calcula_tercio
 360+ 8F89 28 36        	jr z,primit
 361+ 8F8B E6 02        	and 2
 362+ 8F8D 20 07        	jr nz,segmit
 363+ 8F8F 7D           	ld a,l
 364+ 8F90 FE 7F        	cp $7f
 365+ 8F92 38 2D        	jr c,primit
 366+ 8F94 28 2B        	jr z,primit
 367+ 8F96 CD FC 8F     segmit call column
 368+ 8F99 38 13        	jr c,tercuad
 369+ 8F9B 3E 04        cuarcuad ld a,4
 370+ 8F9D 32 A0 89     	ld (Cuad_objeto),a
 371+ 8FA0 21 20 48     	ld hl,$4820
 372+ 8FA3 22 B0 89     	ld (Limite_horizontal),hl
 373+ 8FA6 21 B2 89     	ld hl,Limite_vertical
 374+ 8FA9 36 0D        	ld (hl),$0d
 375+ 8FAB 08           	ex af,af
 376+ 8FAC 18 3C        	jr 1F
 377+ 8FAE              tercuad
 378+ 8FAE 3E 03        	ld a,3
 379+ 8FB0 32 A0 89     	ld (Cuad_objeto),a
 380+ 8FB3 21 20 48     	ld hl,$4820
 381+ 8FB6 22 B0 89     	ld (Limite_horizontal),hl
 382+ 8FB9 21 B2 89     	ld hl,Limite_vertical
 383+ 8FBC 36 12        	ld (hl),$12
 384+ 8FBE 08           	ex af,af
 385+ 8FBF 18 29        	jr 1F
 386+ 8FC1 CD FC 8F     primit call column
 387+ 8FC4 38 13        	jr c, primcuad
 388+ 8FC6              segcuad
 389+ 8FC6 3E 02        	ld a,2
 390+ 8FC8 32 A0 89     	ld (Cuad_objeto),a
 391+ 8FCB 21 C0 4F     	ld hl,$4fc0
 392+ 8FCE 22 B0 89     	ld (Limite_horizontal),hl
 393+ 8FD1 21 B2 89     	ld hl,Limite_vertical
 394+ 8FD4 36 0D        	ld (hl),$0d
 395+ 8FD6 08           	ex af,af
 396+ 8FD7 18 11        	jr 1F
 397+ 8FD9              primcuad
 398+ 8FD9 3E 01        	ld a,1
 399+ 8FDB 32 A0 89     	ld (Cuad_objeto),a
 400+ 8FDE 21 C0 4F     	ld hl,$4fc0
 401+ 8FE1 22 B0 89     	ld (Limite_horizontal),hl
 402+ 8FE4 21 B2 89     	ld hl,Limite_vertical
 403+ 8FE7 36 12        	ld (hl),$12
 404+ 8FE9 08           	ex af,af
 405+ 8FEA
 406+ 8FEA C5           1 push bc
 407+ 8FEB E5           	push hl
 408+ 8FEC D5           	push de
 409+ 8FED
 410+ 8FED 2A 8E 89     	ld hl,(Posicion_actual)
 411+ 8FF0 CD 75 99     	call Genera_coordenadas
 412+ 8FF3
 413+ 8FF3 D1           	pop de
 414+ 8FF4 E1           	pop hl
 415+ 8FF5 C1           	pop bc
 416+ 8FF6
 417+ 8FF6 21 AE 89     	ld hl,Ctrl_0
 418+ 8FF9 CB EE        	set 5,(hl)
 419+ 8FFB C9           	ret
 420+ 8FFC
 421+ 8FFC              ; ------------------------------------------------------------------------------------------------------------------
 422+ 8FFC
 423+ 8FFC              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 8FFC              ;
 425+ 8FFC              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 8FFC
 427+ 8FFC 7D           column ld a,l
 428+ 8FFD E6 1F        	and $1f
 429+ 8FFF FE 10         	cp $10
 430+ 9001 C9            	ret
 431+ 9002
 432+ 9002              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9002              ;
 434+ 9002              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9002              ;
 436+ 9002              ; 14/12/22
 437+ 9002              ;
 438+ 9002              ;	Modifica: A y BC.
 439+ 9002
 440+ 9002 3A A0 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9005 E6 01        	and 1
 442+ 9007 28 17        	jr z,1F
 443+ 9009
 444+ 9009              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9009
 446+ 9009 3A 92 89     	ld a,(Coordenada_X)
 447+ 900C 47           	ld b,a
 448+ 900D 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 900E 79           	ld a,c
 450+ 900F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9010 38 08        	jr c,2F
 452+ 9012 47           	ld b,a
 453+ 9013 79           	ld a,c
 454+ 9014 90           	sub b
 455+ 9015 32 AF 89     	ld (Columnas),a
 456+ 9018 18 1B        	jr 4F
 457+ 901A 79           2 ld a,c
 458+ 901B 32 AF 89     	ld (Columnas),a
 459+ 901E 18 15        	jr 4F
 460+ 9020
 461+ 9020              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9020
 463+ 9020 3A 92 89     1 ld a,(Coordenada_X)
 464+ 9023 81           	add c
 465+ 9024 3D           	dec a
 466+ 9025 D6 1F        	sub $1f
 467+ 9027 38 08        	jr c,3F
 468+ 9029 47           	ld b,a
 469+ 902A 79           	ld a,c
 470+ 902B 90           	sub b
 471+ 902C 32 AF 89     	ld (Columnas),a
 472+ 902F 18 04        	jr 4F
 473+ 9031 79           3 ld a,c
 474+ 9032 32 AF 89     	ld (Columnas),a
 475+ 9035 D9           4 exx
 476+ 9036 4F           	ld c,a
 477+ 9037 D9           	exx
 478+ 9038 C9            ret
 479+ 9039
 480+ 9039              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9039              ;
 482+ 9039              ;   19/7/23
 483+ 9039              ;
 484+ 9039              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9039              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9039              ;
 487+ 9039              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9039              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9039              ;
 490+ 9039              ;	DESTRUYE: HL,B Y A.
 491+ 9039
 492+ 9039 3A A0 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 903C FE 02        	cp 2
 494+ 903E 38 18        	jr c,1F
 495+ 9040 28 16        	jr z,1F
 496+ 9042 E6 01        	and 1
 497+ 9044 28 0D        	jr z,3F
 498+ 9046
 499+ 9046              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9046
 501+ 9046 CD 8C 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9049
 503+ 9049 7D           9 ld a,l
 504+ 904A E6 1F        	and $1f
 505+ 904C 28 2A        	jr z,7F
 506+ 904E 2B           	dec hl
 507+ 904F 10 F8        	djnz 9B
 508+ 9051 18 25        	jr 7F
 509+ 9053
 510+ 9053              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9053
 512+ 9053 2A 8E 89     3 ld hl,(Posicion_actual)
 513+ 9056 18 20        	jr 7F
 514+ 9058
 515+ 9058 28 14        1 jr z,2F
 516+ 905A
 517+ 905A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 905A
 519+ 905A CD 8C 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 905D
 521+ 905D 7D           4 ld a,l
 522+ 905E E6 1F        	and $1f
 523+ 9060 28 03        	jr z,6F
 524+ 9062 2B           	dec hl
 525+ 9063 10 F8        	djnz 4B
 526+ 9065 06 0F        6 ld b,15
 527+ 9067 CD ED 90     5 call PreviousScan
 528+ 906A 10 FB        	djnz 5B
 529+ 906C 18 0A        	jr 7F
 530+ 906E
 531+ 906E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 906E
 533+ 906E CD 8C 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9071 06 0F        	ld b,15
 535+ 9073 CD ED 90     8 call PreviousScan
 536+ 9076 10 FB        	djnz 8B
 537+ 9078
 538+ 9078 E5           7 push hl
 539+ 9079 DD E1        	pop ix
 540+ 907B
 541+ 907B 2A 90 89     	ld hl,(Puntero_objeto)
 542+ 907E E5           	push hl
 543+ 907F FD E1        	pop iy
 544+ 9081
 545+ 9081              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9081
 547+ 9081 3A AE 89     	ld a,(Ctrl_0)
 548+ 9084 CB 77        	bit 6,a
 549+ 9086 C8           	ret z
 550+ 9087
 551+ 9087              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9087              ; _ entidad / Amadeus´.
 553+ 9087
 554+ 9087 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 908B
 556+ 908B C9           	ret
 557+ 908C
 558+ 908C              ; --------------------------------------------------------------------------------------------------------------------
 559+ 908C              ;
 560+ 908C              ;	2/1/23
 561+ 908C              ;
 562+ 908C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 908C              ;
 564+ 908C              ;	Tras esta rutina tenemos:
 565+ 908C              ;
 566+ 908C              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 908C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 908C              ;
 569+ 908C              ;	DESTRUYE!!!!! HL,B y A.
 570+ 908C
 571+ 908C 2A 8E 89     Operandos ld hl,(Posicion_actual)
 572+ 908F 3A AF 89     	ld a,(Columnas)
 573+ 9092 3D           	dec a
 574+ 9093 20 01        	jr nz,1F
 575+ 9095 3C           	inc a
 576+ 9096 47           1 ld b,a
 577+ 9097 C9           	ret
 578+ 9098
 579+ 9098              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9098              ;
 581+ 9098              ;	3/1/23
 582+ 9098              ;
 583+ 9098              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9098              ;
 585+ 9098              ;	Destruye: A,B,HL y DE.
 586+ 9098
 587+ 9098              Define_rutina_de_impresion
 588+ 9098
 589+ 9098 3A 8D 89     	ld a,(Columns)
 590+ 909B 47           	ld b,a
 591+ 909C 3A AF 89     	ld a,(Columnas)
 592+ 909F B8           	cp b
 593+ 90A0 20 0D        	jr nz,2f
 594+ 90A2
 595+ 90A2              ;	La entidad se imprime entera.
 596+ 90A2
 597+ 90A2 21 3F 91     	ld hl, Indice_entidades_completas
 598+ 90A5 E6 01        	and 1
 599+ 90A7 28 02        	jr z,1F
 600+ 90A9
 601+ 90A9 23           	inc hl
 602+ 90AA 23           	inc hl
 603+ 90AB
 604+ 90AB CD 50 8B     1 call Extrae_address
 605+ 90AE C9           	ret		;	ret
 606+ 90AF
 607+ 90AF              ;	La entidad no se imprime entera en pantalla.
 608+ 90AF
 609+ 90AF 3A A0 89     2 ld a,(Cuad_objeto)
 610+ 90B2 E6 01        	and 1
 611+ 90B4 28 17        	jr z,3F
 612+ 90B6
 613+ 90B6              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 90B6
 615+ 90B6 21 43 91     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 90B9 3A 8D 89     4 ld a,(Columns)
 617+ 90BC E6 01        	and 1
 618+ 90BE 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 90C0
 620+ 90C0 23           	inc hl
 621+ 90C1 23           	inc hl
 622+ 90C2
 623+ 90C2 3A AF 89     	ld a,(Columnas)
 624+ 90C5 E6 01        	and 1
 625+ 90C7 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 90C9
 627+ 90C9 23           	inc hl
 628+ 90CA 23           	inc hl
 629+ 90CB
 630+ 90CB 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 90CD
 632+ 90CD 21 49 91     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 90D0 18 E7        	jr 4B
 634+ 90D2
 635+ 90D2              ; --------------------------------------------------------------------------------------------------------------------
 636+ 90D2              ;
 637+ 90D2              ;	Prepara_draw
 638+ 90D2              ;
 639+ 90D2              ;	Es una rutina de carga.
 640+ 90D2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 90D2              ;
 642+ 90D2              ;	FUNCIONAMIENTO:
 643+ 90D2              ;
 644+ 90D2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 90D2              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 90D2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 90D2              ;
 648+ 90D2              ;	DESTRUYE:
 649+ 90D2              ;
 650+ 90D2              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 90D2
 652+ 90D2 21 8C 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 90D5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 90D6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 90D7 4E           	ld c,(hl)
 656+ 90D8 2A 8E 89     	ld hl,(Posicion_actual)
 657+ 90DB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 90DD C9           	ret
 659+ 90DE
 660+ 90DE              ;----------------------------------------------------------------------------------------------------------------
 661+ 90DE              ;
 662+ 90DE              ;	5/08/22
 663+ 90DE              ;
 664+ 90DE              ;   NextScan.
 665+ 90DE              ;
 666+ 90DE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 90DE              ;
 668+ 90DE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 90DE              ;
 670+ 90DE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 90DE              ;
 672+ 90DE              ;       DESTRUIDOS: AF y HL !!!
 673+ 90DE              ;
 674+ 90DE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 90DE              ;
 676+ 90DE
 677+ 90DE 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 90DF 7C               ld a,h
 679+ 90E0 E6 07            and 7
 680+ 90E2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 90E3
 682+ 90E3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 90E4 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 90E6 6F               ld l,a
 685+ 90E7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 90E8
 687+ 90E8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 90E9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 90EB 67               ld h,a
 690+ 90EC C9               ret
 691+ 90ED
 692+ 90ED              ;----------------------------------------------------------------------------------------------------------------
 693+ 90ED              ;
 694+ 90ED              ;	5/08/22
 695+ 90ED              ;
 696+ 90ED              ;   PreviousScan.
 697+ 90ED              ;
 698+ 90ED              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 90ED              ;
 700+ 90ED              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 90ED              ;
 702+ 90ED              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 90ED              ;
 704+ 90ED              ;       DESTRUIDOS: AF y HL !!!
 705+ 90ED              ;
 706+ 90ED              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 90ED              ;
 708+ 90ED
 709+ 90ED 7C           PreviousScan ld a,h
 710+ 90EE 25               dec h               ; Dec H.
 711+ 90EF E6 07            and 7
 712+ 90F1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 90F2
 714+ 90F2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 90F3 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 90F5 6F               ld l,a
 717+ 90F6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 90F7
 719+ 90F7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 90F8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 90FA 67               ld h,a
 722+ 90FB C9               ret
 723+ 90FC
 724+ 90FC              ; -----------------------------------------------------------------------------------
 725+ 90FC              ;
 726+ 90FC              ;	31/7/23
 727+ 90FC              ;
 728+ 90FC              ;	Rutina principal de pintado de entidades.
 729+ 90FC              ;	Extrae la foto del frame, (entidades).
 730+ 90FC
 731+ 90FC              Extrae_Scanlines_album
 732+ 90FC
 733+ 90FC 21 01 80     	ld hl,Scanlines_album+1
 734+ 90FF 7E           	ld a,(hl)
 735+ 9100 A7           	and a
 736+ 9101 C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 9102
 738+ 9102              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9102
 740+ 9102 3A D9 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9105 A7           	and a
 742+ 9106 C8           	ret z
 743+ 9107
 744+ 9107              ; -----------------------------------
 745+ 9107
 746+ 9107 ED 73 DE 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 910B 31 00 80     	ld sp,Scanlines_album
 748+ 910E
 749+ 910E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9110 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9111 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9112
 753+ 9112 ED 73 E0 89  	ld (Stack_2),sp
 754+ 9116 ED 7B DE 89  	ld sp,(Stack)
 755+ 911A
 756+ 911A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 911A
 758+ 911A 3E CD        	ld a,$cd
 759+ 911C 32 24 91     	ld (Imprime),a
 760+ 911F EB           	ex de,hl
 761+ 9120 22 25 91     	ld (Imprime+1),hl
 762+ 9123 EB           	ex de,hl
 763+ 9124
 764+ 9124              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9124
 766+ 9124 00 00 00     Imprime db 0,0,0
 767+ 9127
 768+ 9127 ED 73 DE 89  	ld (Stack),sp
 769+ 912B
 770+ 912B 3A D9 89     	ld a,(Numero_de_malotes)
 771+ 912E 3D           	dec a
 772+ 912F 28 09        	jr z,1F
 773+ 9131 32 D9 89      	ld (Numero_de_malotes),a
 774+ 9134
 775+ 9134 ED 7B E0 89  	ld sp,(Stack_2)
 776+ 9138 18 D4        	jr 2B
 777+ 913A
 778+ 913A AF           1 xor a
 779+ 913B 32 E0 89     	ld (Stack_2),a
 780+ 913E
 781+ 913E C9           	ret
 782+ 913F
 783+ 913F              ; -----------------------------------------------------------------------------------
 784+ 913F              ;
 785+ 913F              ;	28/2/23
 786+ 913F              ;
 787+ 913F              ;	Pinta los disparos generados.
 788+ 913F
 789+ 913F              ;Extrae_foto_disparos
 790+ 913F
 791+ 913F              ;	ld hl,Scanlines_album_disparos+1
 792+ 913F              ;    ld a,(hl)
 793+ 913F              ;    and a
 794+ 913F              ;    ret z
 795+ 913F
 796+ 913F              ;	ld a,(Numero_de_disparotes)
 797+ 913F              ;	and a
 798+ 913F              ;	ret z
 799+ 913F              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 913F              ;	ld sp,Scanlines_album_disparos
 801+ 913F
 802+ 913F              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 913F              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 913F              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 913F
 806+ 913F              ;	ld (Stack_2),sp
 807+ 913F              ;	ld sp,(Stack)
 808+ 913F
 809+ 913F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 913F
 811+ 913F              ;	ld a,$cd
 812+ 913F              ;	ld (Imprime2),a
 813+ 913F              ;	ex de,hl
 814+ 913F              ;	ld (Imprime2+1),hl
 815+ 913F              ;	ex de,hl
 816+ 913F
 817+ 913F              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 913F
 819+ 913F              ;Imprime2 db 0,0,0
 820+ 913F
 821+ 913F              ;	ld a,(Numero_de_disparotes)
 822+ 913F              ;	dec a
 823+ 913F              ;	jr z,1F
 824+ 913F              ; 	ld (Numero_de_disparotes),a
 825+ 913F
 826+ 913F              ;	ld sp,(Stack_2)
 827+ 913F              ;	jr 2B
 828+ 913F
 829+ 913F              ;1 xor a
 830+ 913F              ;	ld (Stack_2),a
 831+ 913F              ;	ret
 832+ 913F
 833+ 913F              ; -----------------------------------------------------------------------------------
 834+ 913F              ;
 835+ 913F              ;	4/9/23
 836+ 913F              ;
 837+ 913F              ;	Rutina principal de pintado de Amadeus.
 838+ 913F              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 913F
 840+ 913F              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 913F              ;	ld a,(hl)
 842+ 913F              ;	and a
 843+ 913F              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 913F
 845+ 913F              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 913F              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 913F              ;	ret z
 848+ 913F
 849+ 913F              ; -----------------------------------
 850+ 913F
 851+ 913F              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 913F              ;	ld sp,Scanlines_album_Amadeus
 853+ 913F
 854+ 913F              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 913F              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 913F              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 913F
 858+ 913F              ;	ld (Stack_2),sp
 859+ 913F              ;	ld sp,(Stack)
 860+ 913F
 861+ 913F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 913F
 863+ 913F              ;	ld a,$cd
 864+ 913F              ;	ld (Imprime_Amadeus),a
 865+ 913F              ;	ex de,hl
 866+ 913F              ;	ld (Imprime_Amadeus+1),hl
 867+ 913F              ;	ex de,hl
 868+ 913F
 869+ 913F              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 913F
 871+ 913F              ;Imprime_Amadeus db 0,0,0
 872+ 913F
 873+ 913F              ;	ld (Stack),sp
 874+ 913F
 875+ 913F              ;	ld a,(Numero_de_malotes)
 876+ 913F              ;	dec a
 877+ 913F              ;	jr z,1F
 878+ 913F              ; 	ld (Numero_de_malotes),a
 879+ 913F
 880+ 913F              ;	ld sp,(Stack_2)
 881+ 913F              ;	jr 2B
 882+ 913F
 883+ 913F              ;1 xor a
 884+ 913F              ;	ld (Stack_2),a
 885+ 913F
 886+ 913F              ;	ret
 887+ 913F
 888+ 913F
 889+ 913F
 890+ 913F
 891+ 913F
 892+ 913F
# file closed: Draw_XOR.asm
1769  913F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 913F              ;   índices de Rutinas de impresión.
   2+ 913F
   3+ 913F 4F 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9141 E3 91            defw Pinta_Amadeus_3x2
   5+ 9143
   6+ 9143 B7 92        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9145 57 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9147 0B 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9149
  10+ 9149 E1 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 914B E5 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 914D 99 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 914F
  14+ 914F
  15+ 914F              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 914F              ;
  17+ 914F              ;   28/2/24
  18+ 914F              ;
  19+ 914F              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 914F              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 914F              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 914F              ;
  23+ 914F              ;   Modifica: AF,HL,BC y DE.
  24+ 914F
  25+ 914F              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 914F
  27+ 914F D9               exx
  28+ 9150 36 01            ld (hl),1
  29+ 9152 2C               inc l
  30+ 9153 D9               exx
  31+ 9154
  32+ 9154 FD E5            push iy
  33+ 9156 D1               pop de
  34+ 9157
  35+ 9157 ED 73 DE 89      ld (Stack),sp
  36+ 915B F9           	ld sp,hl
  37+ 915C 06 10            ld b,16
  38+ 915E
  39+ 915E E1               pop hl
  40+ 915F 1A               ld a,(de)
  41+ 9160 77               ld (hl),a
  42+ 9161 1C           	inc e
  43+ 9162 2C               inc l
  44+ 9163 1A               ld a,(de)
  45+ 9164 77               ld (hl),a
  46+ 9165 1C               inc e
  47+ 9166
  48+ 9166 E1               pop hl
  49+ 9167 1A               ld a,(de)
  50+ 9168 77               ld (hl),a
  51+ 9169 1C           	inc e
  52+ 916A 2C               inc l
  53+ 916B 1A               ld a,(de)
  54+ 916C 77               ld (hl),a
  55+ 916D 1C               inc e
  56+ 916E
  57+ 916E E1               pop hl
  58+ 916F 1A               ld a,(de)
  59+ 9170 77               ld (hl),a
  60+ 9171 1C           	inc e
  61+ 9172 2C               inc l
  62+ 9173 1A               ld a,(de)
  63+ 9174 77               ld (hl),a
  64+ 9175 1C               inc e
  65+ 9176
  66+ 9176 E1               pop hl
  67+ 9177 1A               ld a,(de)
  68+ 9178 77               ld (hl),a
  69+ 9179 1C           	inc e
  70+ 917A 2C               inc l
  71+ 917B 1A               ld a,(de)
  72+ 917C 77               ld (hl),a
  73+ 917D 1C               inc e
  74+ 917E
  75+ 917E E1               pop hl
  76+ 917F 1A               ld a,(de)
  77+ 9180 77               ld (hl),a
  78+ 9181 1C           	inc e
  79+ 9182 2C               inc l
  80+ 9183 1A               ld a,(de)
  81+ 9184 77               ld (hl),a
  82+ 9185 1C               inc e
  83+ 9186
  84+ 9186 E1               pop hl
  85+ 9187 1A               ld a,(de)
  86+ 9188 77               ld (hl),a
  87+ 9189 1C           	inc e
  88+ 918A 2C               inc l
  89+ 918B 1A               ld a,(de)
  90+ 918C 77               ld (hl),a
  91+ 918D 1C               inc e
  92+ 918E
  93+ 918E E1               pop hl
  94+ 918F 1A               ld a,(de)
  95+ 9190 77               ld (hl),a
  96+ 9191 1C           	inc e
  97+ 9192 2C               inc l
  98+ 9193 1A               ld a,(de)
  99+ 9194 77               ld (hl),a
 100+ 9195 1C               inc e
 101+ 9196
 102+ 9196 E1               pop hl
 103+ 9197 1A               ld a,(de)
 104+ 9198 77               ld (hl),a
 105+ 9199 1C           	inc e
 106+ 919A 2C               inc l
 107+ 919B 1A               ld a,(de)
 108+ 919C 77               ld (hl),a
 109+ 919D 1C               inc e
 110+ 919E
 111+ 919E E1               pop hl
 112+ 919F 1A               ld a,(de)
 113+ 91A0 77               ld (hl),a
 114+ 91A1 1C           	inc e
 115+ 91A2 2C               inc l
 116+ 91A3 1A               ld a,(de)
 117+ 91A4 77               ld (hl),a
 118+ 91A5 1C               inc e
 119+ 91A6
 120+ 91A6 E1               pop hl
 121+ 91A7 1A               ld a,(de)
 122+ 91A8 77               ld (hl),a
 123+ 91A9 1C           	inc e
 124+ 91AA 2C               inc l
 125+ 91AB 1A               ld a,(de)
 126+ 91AC 77               ld (hl),a
 127+ 91AD 1C               inc e
 128+ 91AE
 129+ 91AE E1               pop hl
 130+ 91AF 1A               ld a,(de)
 131+ 91B0 77               ld (hl),a
 132+ 91B1 1C           	inc e
 133+ 91B2 2C               inc l
 134+ 91B3 1A               ld a,(de)
 135+ 91B4 77               ld (hl),a
 136+ 91B5 1C               inc e
 137+ 91B6
 138+ 91B6 E1               pop hl
 139+ 91B7 1A               ld a,(de)
 140+ 91B8 77               ld (hl),a
 141+ 91B9 1C           	inc e
 142+ 91BA 2C               inc l
 143+ 91BB 1A               ld a,(de)
 144+ 91BC 77               ld (hl),a
 145+ 91BD 1C               inc e
 146+ 91BE
 147+ 91BE E1               pop hl
 148+ 91BF 1A               ld a,(de)
 149+ 91C0 77               ld (hl),a
 150+ 91C1 1C           	inc e
 151+ 91C2 2C               inc l
 152+ 91C3 1A               ld a,(de)
 153+ 91C4 77               ld (hl),a
 154+ 91C5 1C               inc e
 155+ 91C6
 156+ 91C6 E1               pop hl
 157+ 91C7 1A               ld a,(de)
 158+ 91C8 77               ld (hl),a
 159+ 91C9 1C           	inc e
 160+ 91CA 2C               inc l
 161+ 91CB 1A               ld a,(de)
 162+ 91CC 77               ld (hl),a
 163+ 91CD 1C               inc e
 164+ 91CE
 165+ 91CE E1               pop hl
 166+ 91CF 1A               ld a,(de)
 167+ 91D0 77               ld (hl),a
 168+ 91D1 1C           	inc e
 169+ 91D2 2C               inc l
 170+ 91D3 1A               ld a,(de)
 171+ 91D4 77               ld (hl),a
 172+ 91D5 1C               inc e
 173+ 91D6
 174+ 91D6 E1               pop hl
 175+ 91D7 1A               ld a,(de)
 176+ 91D8 77               ld (hl),a
 177+ 91D9 1C           	inc e
 178+ 91DA 2C               inc l
 179+ 91DB 1A               ld a,(de)
 180+ 91DC 77               ld (hl),a
 181+ 91DD 1C               inc e
 182+ 91DE
 183+ 91DE ED 7B DE 89      ld sp,(Stack)
 184+ 91E2
 185+ 91E2 C9           	ret
 186+ 91E3
 187+ 91E3              Pinta_Amadeus_3x2
 188+ 91E3
 189+ 91E3 D9               exx
 190+ 91E4 36 02            ld (hl),2
 191+ 91E6 2C               inc l
 192+ 91E7 D9               exx
 193+ 91E8
 194+ 91E8 FD E5            push iy
 195+ 91EA D1               pop de
 196+ 91EB
 197+ 91EB ED 73 DE 89      ld (Stack),sp
 198+ 91EF F9               ld sp,hl
 199+ 91F0 06 10            ld b,16
 200+ 91F2
 201+ 91F2 E1               pop hl
 202+ 91F3 1A               ld a,(de)
 203+ 91F4 77               ld (hl),a
 204+ 91F5 1C               inc e
 205+ 91F6 2C               inc l
 206+ 91F7 1A               ld a,(de)
 207+ 91F8 77               ld (hl),a
 208+ 91F9 1C               inc e
 209+ 91FA 2C               inc l
 210+ 91FB 1A               ld a,(de)
 211+ 91FC 77               ld (hl),a
 212+ 91FD 1C               inc e
 213+ 91FE
 214+ 91FE E1               pop hl
 215+ 91FF 1A               ld a,(de)
 216+ 9200 77               ld (hl),a
 217+ 9201 1C               inc e
 218+ 9202 2C               inc l
 219+ 9203 1A               ld a,(de)
 220+ 9204 77               ld (hl),a
 221+ 9205 1C               inc e
 222+ 9206 2C               inc l
 223+ 9207 1A               ld a,(de)
 224+ 9208 77               ld (hl),a
 225+ 9209 1C               inc e
 226+ 920A
 227+ 920A E1               pop hl
 228+ 920B 1A               ld a,(de)
 229+ 920C 77               ld (hl),a
 230+ 920D 1C               inc e
 231+ 920E 2C               inc l
 232+ 920F 1A               ld a,(de)
 233+ 9210 77               ld (hl),a
 234+ 9211 1C               inc e
 235+ 9212 2C               inc l
 236+ 9213 1A               ld a,(de)
 237+ 9214 77               ld (hl),a
 238+ 9215 1C               inc e
 239+ 9216
 240+ 9216 E1               pop hl
 241+ 9217 1A               ld a,(de)
 242+ 9218 77               ld (hl),a
 243+ 9219 1C               inc e
 244+ 921A 2C               inc l
 245+ 921B 1A               ld a,(de)
 246+ 921C 77               ld (hl),a
 247+ 921D 1C               inc e
 248+ 921E 2C               inc l
 249+ 921F 1A               ld a,(de)
 250+ 9220 77               ld (hl),a
 251+ 9221 1C               inc e
 252+ 9222
 253+ 9222 E1               pop hl
 254+ 9223 1A               ld a,(de)
 255+ 9224 77               ld (hl),a
 256+ 9225 1C               inc e
 257+ 9226 2C               inc l
 258+ 9227 1A               ld a,(de)
 259+ 9228 77               ld (hl),a
 260+ 9229 1C               inc e
 261+ 922A 2C               inc l
 262+ 922B 1A               ld a,(de)
 263+ 922C 77               ld (hl),a
 264+ 922D 1C               inc e
 265+ 922E
 266+ 922E E1               pop hl
 267+ 922F 1A               ld a,(de)
 268+ 9230 77               ld (hl),a
 269+ 9231 1C               inc e
 270+ 9232 2C               inc l
 271+ 9233 1A               ld a,(de)
 272+ 9234 77               ld (hl),a
 273+ 9235 1C               inc e
 274+ 9236 2C               inc l
 275+ 9237 1A               ld a,(de)
 276+ 9238 77               ld (hl),a
 277+ 9239 1C               inc e
 278+ 923A
 279+ 923A E1               pop hl
 280+ 923B 1A               ld a,(de)
 281+ 923C 77               ld (hl),a
 282+ 923D 1C               inc e
 283+ 923E 2C               inc l
 284+ 923F 1A               ld a,(de)
 285+ 9240 77               ld (hl),a
 286+ 9241 1C               inc e
 287+ 9242 2C               inc l
 288+ 9243 1A               ld a,(de)
 289+ 9244 77               ld (hl),a
 290+ 9245 1C               inc e
 291+ 9246
 292+ 9246 E1               pop hl
 293+ 9247 1A               ld a,(de)
 294+ 9248 77               ld (hl),a
 295+ 9249 1C               inc e
 296+ 924A 2C               inc l
 297+ 924B 1A               ld a,(de)
 298+ 924C 77               ld (hl),a
 299+ 924D 1C               inc e
 300+ 924E 2C               inc l
 301+ 924F 1A               ld a,(de)
 302+ 9250 77               ld (hl),a
 303+ 9251 1C               inc e
 304+ 9252
 305+ 9252 E1               pop hl
 306+ 9253 1A               ld a,(de)
 307+ 9254 77               ld (hl),a
 308+ 9255 1C               inc e
 309+ 9256 2C               inc l
 310+ 9257 1A               ld a,(de)
 311+ 9258 77               ld (hl),a
 312+ 9259 1C               inc e
 313+ 925A 2C               inc l
 314+ 925B 1A               ld a,(de)
 315+ 925C 77               ld (hl),a
 316+ 925D 1C               inc e
 317+ 925E
 318+ 925E E1               pop hl
 319+ 925F 1A               ld a,(de)
 320+ 9260 77               ld (hl),a
 321+ 9261 1C               inc e
 322+ 9262 2C               inc l
 323+ 9263 1A               ld a,(de)
 324+ 9264 77               ld (hl),a
 325+ 9265 1C               inc e
 326+ 9266 2C               inc l
 327+ 9267 1A               ld a,(de)
 328+ 9268 77               ld (hl),a
 329+ 9269 1C               inc e
 330+ 926A
 331+ 926A E1               pop hl
 332+ 926B 1A               ld a,(de)
 333+ 926C 77               ld (hl),a
 334+ 926D 1C               inc e
 335+ 926E 2C               inc l
 336+ 926F 1A               ld a,(de)
 337+ 9270 77               ld (hl),a
 338+ 9271 1C               inc e
 339+ 9272 2C               inc l
 340+ 9273 1A               ld a,(de)
 341+ 9274 77               ld (hl),a
 342+ 9275 1C               inc e
 343+ 9276
 344+ 9276 E1               pop hl
 345+ 9277 1A               ld a,(de)
 346+ 9278 77               ld (hl),a
 347+ 9279 1C               inc e
 348+ 927A 2C               inc l
 349+ 927B 1A               ld a,(de)
 350+ 927C 77               ld (hl),a
 351+ 927D 1C               inc e
 352+ 927E 2C               inc l
 353+ 927F 1A               ld a,(de)
 354+ 9280 77               ld (hl),a
 355+ 9281 1C               inc e
 356+ 9282
 357+ 9282 E1               pop hl
 358+ 9283 1A               ld a,(de)
 359+ 9284 77               ld (hl),a
 360+ 9285 1C               inc e
 361+ 9286 2C               inc l
 362+ 9287 1A               ld a,(de)
 363+ 9288 77               ld (hl),a
 364+ 9289 1C               inc e
 365+ 928A 2C               inc l
 366+ 928B 1A               ld a,(de)
 367+ 928C 77               ld (hl),a
 368+ 928D 1C               inc e
 369+ 928E
 370+ 928E E1               pop hl
 371+ 928F 1A               ld a,(de)
 372+ 9290 77               ld (hl),a
 373+ 9291 1C               inc e
 374+ 9292 2C               inc l
 375+ 9293 1A               ld a,(de)
 376+ 9294 77               ld (hl),a
 377+ 9295 1C               inc e
 378+ 9296 2C               inc l
 379+ 9297 1A               ld a,(de)
 380+ 9298 77               ld (hl),a
 381+ 9299 1C               inc e
 382+ 929A
 383+ 929A E1               pop hl
 384+ 929B 1A               ld a,(de)
 385+ 929C 77               ld (hl),a
 386+ 929D 1C               inc e
 387+ 929E 2C               inc l
 388+ 929F 1A               ld a,(de)
 389+ 92A0 77               ld (hl),a
 390+ 92A1 1C               inc e
 391+ 92A2 2C               inc l
 392+ 92A3 1A               ld a,(de)
 393+ 92A4 77               ld (hl),a
 394+ 92A5 1C               inc e
 395+ 92A6
 396+ 92A6 E1               pop hl
 397+ 92A7 1A               ld a,(de)
 398+ 92A8 77               ld (hl),a
 399+ 92A9 1C               inc e
 400+ 92AA 2C               inc l
 401+ 92AB 1A               ld a,(de)
 402+ 92AC 77               ld (hl),a
 403+ 92AD 1C               inc e
 404+ 92AE 2C               inc l
 405+ 92AF 1A               ld a,(de)
 406+ 92B0 77               ld (hl),a
 407+ 92B1 1C               inc e
 408+ 92B2
 409+ 92B2 ED 7B DE 89      ld sp,(Stack)
 410+ 92B6
 411+ 92B6 C9               ret
 412+ 92B7
 413+ 92B7              ; ---------------------------------------------------
 414+ 92B7
 415+ 92B7 ED 73 DE 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 92BB FD F9        	ld sp,iy
 417+ 92BD
 418+ 92BD              ; >>>
 419+ 92BD
 420+ 92BD 06 10            ld b,16
 421+ 92BF D1           1 pop de
 422+ 92C0 7A           	ld a,d
 423+ 92C1 AE           	xor (hl)
 424+ 92C2 77           	ld (hl),a
 425+ 92C3 24           	inc h
 426+ 92C4 7C               ld a,h
 427+ 92C5 E6 07            and 7
 428+ 92C7 20 0C            jr nz,2F
 429+ 92C9 7D               ld a,l
 430+ 92CA C6 20            add a,$20
 431+ 92CC 6F               ld l,a
 432+ 92CD 38 06            jr c,2F
 433+ 92CF 7C               ld a,h
 434+ 92D0 D6 08            sub 8
 435+ 92D2 67               ld h,a
 436+ 92D3 18 00            jr 2F
 437+ 92D5 7C           2 ld a,h
 438+ 92D6 FE 58            cp $58
 439+ 92D8 28 02            jr z,3F
 440+ 92DA 10 E3            djnz 1B
 441+ 92DC ED 7B DE 89  3 ld sp,(Stack)
 442+ 92E0 C9           	ret
 443+ 92E1
 444+ 92E1 ED 73 DE 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 92E5 FD F9        	ld sp,iy
 446+ 92E7
 447+ 92E7              ; >>>
 448+ 92E7
 449+ 92E7 06 10            ld b,16
 450+ 92E9 D1           1 pop de
 451+ 92EA 7B           	ld a,e
 452+ 92EB AE           	xor (hl)
 453+ 92EC 77           	ld (hl),a
 454+ 92ED 24           	inc h
 455+ 92EE 7C               ld a,h
 456+ 92EF E6 07            and 7
 457+ 92F1 20 0C            jr nz,2F
 458+ 92F3 7D               ld a,l
 459+ 92F4 C6 20            add a,$20
 460+ 92F6 6F               ld l,a
 461+ 92F7 38 06            jr c,2F
 462+ 92F9 7C               ld a,h
 463+ 92FA D6 08            sub 8
 464+ 92FC 67               ld h,a
 465+ 92FD 18 00            jr 2F
 466+ 92FF 7C           2 ld a,h
 467+ 9300 FE 58            cp $58
 468+ 9302 28 02            jr z,3F
 469+ 9304 10 E3            djnz 1B
 470+ 9306 ED 7B DE 89  3 ld sp,(Stack)
 471+ 930A C9           	ret
 472+ 930B
 473+ 930B              ; ---------------------------------------------------
 474+ 930B
 475+ 930B ED 73 DE 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 930F FD F9        	ld sp,iy
 477+ 9311 06 08            ld b,8
 478+ 9313 D1           1 pop de
 479+ 9314 7A           	ld a,d
 480+ 9315 AE           	xor (hl)
 481+ 9316 77           	ld (hl),a
 482+ 9317 23           	inc hl
 483+ 9318 D1           	pop de
 484+ 9319 7B           	ld a,e
 485+ 931A AE           	xor (hl)
 486+ 931B 77           	ld (hl),a
 487+ 931C 2B           	dec hl
 488+ 931D 24            	inc h
 489+ 931E 7C               ld a,h
 490+ 931F E6 07            and 7
 491+ 9321 20 0A            jr nz,2F
 492+ 9323 7D               ld a,l
 493+ 9324 C6 20            add a,$20
 494+ 9326 6F               ld l,a
 495+ 9327 38 04            jr c,2F
 496+ 9329 7C               ld a,h
 497+ 932A D6 08            sub 8
 498+ 932C 67               ld h,a
 499+ 932D 7C           2 ld a,h
 500+ 932E FE 58            cp $58
 501+ 9330 28 20            jr z,4F
 502+ 9332 D1               pop de
 503+ 9333 7B           	ld a,e
 504+ 9334 AE           	xor (hl)
 505+ 9335 77           	ld (hl),a
 506+ 9336 23           	inc hl
 507+ 9337 7A           	ld a,d
 508+ 9338 AE           	xor (hl)
 509+ 9339 77           	ld (hl),a
 510+ 933A 2B           	dec hl
 511+ 933B 24           	inc h
 512+ 933C 7C               ld a,h
 513+ 933D E6 07            and 7
 514+ 933F 20 0A            jr nz,3F
 515+ 9341 7D               ld a,l
 516+ 9342 C6 20            add a,$20
 517+ 9344 6F               ld l,a
 518+ 9345 38 04            jr c,3F
 519+ 9347 7C               ld a,h
 520+ 9348 D6 08            sub 8
 521+ 934A 67               ld h,a
 522+ 934B 7C           3 ld a,h
 523+ 934C FE 58            cp $58
 524+ 934E 28 02            jr z,4F
 525+ 9350 10 C1            djnz 1B
 526+ 9352 ED 7B DE 89  4 ld sp,(Stack)
 527+ 9356 C9           	ret
 528+ 9357
 529+ 9357 ED 73 DE 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 935B FD F9        	ld sp,iy
 531+ 935D 06 08            ld b,8
 532+ 935F D1           1 pop de
 533+ 9360 D1           	pop de
 534+ 9361 7B           	ld a,e
 535+ 9362 AE           	xor (hl)
 536+ 9363 77           	ld (hl),a
 537+ 9364 24            	inc h
 538+ 9365 7C               ld a,h
 539+ 9366 E6 07            and 7
 540+ 9368 20 0A            jr nz,2F
 541+ 936A 7D               ld a,l
 542+ 936B C6 20            add a,$20
 543+ 936D 6F               ld l,a
 544+ 936E 38 04            jr c,2F
 545+ 9370 7C               ld a,h
 546+ 9371 D6 08            sub 8
 547+ 9373 67               ld h,a
 548+ 9374 7C           2 ld a,h
 549+ 9375 FE 58            cp $58
 550+ 9377 28 1B            jr z,4F
 551+ 9379 D1               pop de
 552+ 937A 7A           	ld a,d
 553+ 937B AE           	xor (hl)
 554+ 937C 77           	ld (hl),a
 555+ 937D 24           	inc h
 556+ 937E 7C               ld a,h
 557+ 937F E6 07            and 7
 558+ 9381 20 0A            jr nz,3F
 559+ 9383 7D               ld a,l
 560+ 9384 C6 20            add a,$20
 561+ 9386 6F               ld l,a
 562+ 9387 38 04            jr c,3F
 563+ 9389 7C               ld a,h
 564+ 938A D6 08            sub 8
 565+ 938C 67               ld h,a
 566+ 938D 7C           3 ld a,h
 567+ 938E FE 58            cp $58
 568+ 9390 28 02            jr z,4F
 569+ 9392 10 CB            djnz 1B
 570+ 9394 ED 7B DE 89  4 ld sp,(Stack)
 571+ 9398 C9           	ret
 572+ 9399
 573+ 9399 ED 73 DE 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 939D FD F9        	ld sp,iy
 575+ 939F 06 08            ld b,8
 576+ 93A1 D1           1 pop de
 577+ 93A2 7B           	ld a,e
 578+ 93A3 AE           	xor (hl)
 579+ 93A4 77           	ld (hl),a
 580+ 93A5 23           	inc hl
 581+ 93A6 7A           	ld a,d
 582+ 93A7 AE           	xor (hl)
 583+ 93A8 77           	ld (hl),a
 584+ 93A9 2B           	dec hl
 585+ 93AA 24             	inc h
 586+ 93AB 7C               ld a,h
 587+ 93AC E6 07            and 7
 588+ 93AE 20 0A            jr nz,2F
 589+ 93B0 7D               ld a,l
 590+ 93B1 C6 20            add a,$20
 591+ 93B3 6F               ld l,a
 592+ 93B4 38 04            jr c,2F
 593+ 93B6 7C               ld a,h
 594+ 93B7 D6 08            sub 8
 595+ 93B9 67               ld h,a
 596+ 93BA 7C           2 ld a,h
 597+ 93BB FE 58            cp $58
 598+ 93BD 28 21            jr z,4F
 599+ 93BF D1               pop de
 600+ 93C0 7A           	ld a,d
 601+ 93C1 AE           	xor (hl)
 602+ 93C2 77           	ld (hl),a
 603+ 93C3 23           	inc hl
 604+ 93C4 D1               pop de
 605+ 93C5 7B           	ld a,e
 606+ 93C6 AE           	xor (hl)
 607+ 93C7 77           	ld (hl),a
 608+ 93C8 2B           	dec hl
 609+ 93C9 24           	inc h
 610+ 93CA 7C               ld a,h
 611+ 93CB E6 07            and 7
 612+ 93CD 20 0A            jr nz,3F
 613+ 93CF 7D               ld a,l
 614+ 93D0 C6 20            add a,$20
 615+ 93D2 6F               ld l,a
 616+ 93D3 38 04            jr c,3F
 617+ 93D5 7C               ld a,h
 618+ 93D6 D6 08            sub 8
 619+ 93D8 67               ld h,a
 620+ 93D9 7C           3 ld a,h
 621+ 93DA FE 58            cp $58
 622+ 93DC 28 02            jr z,4F
 623+ 93DE 10 C1            djnz 1B
 624+ 93E0 ED 7B DE 89  4 ld sp,(Stack)
 625+ 93E4 C9           	ret
 626+ 93E5
 627+ 93E5 ED 73 DE 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 93E9 FD F9        	ld sp,iy
 629+ 93EB 06 08            ld b,8
 630+ 93ED D1           1 pop de
 631+ 93EE 7B           	ld a,e
 632+ 93EF AE           	xor (hl)
 633+ 93F0 77           	ld (hl),a
 634+ 93F1 24            	inc h
 635+ 93F2 7C               ld a,h
 636+ 93F3 E6 07            and 7
 637+ 93F5 20 0A            jr nz,2F
 638+ 93F7 7D               ld a,l
 639+ 93F8 C6 20            add a,$20
 640+ 93FA 6F               ld l,a
 641+ 93FB 38 04            jr c,2F
 642+ 93FD 7C               ld a,h
 643+ 93FE D6 08            sub 8
 644+ 9400 67               ld h,a
 645+ 9401 7C           2 ld a,h
 646+ 9402 FE 58            cp $58
 647+ 9404 28 1C            jr z,4F
 648+ 9406 D1               pop de
 649+ 9407 7A           	ld a,d
 650+ 9408 AE           	xor (hl)
 651+ 9409 77           	ld (hl),a
 652+ 940A 24           	inc h
 653+ 940B 7C               ld a,h
 654+ 940C E6 07            and 7
 655+ 940E 20 0A            jr nz,3F
 656+ 9410 7D               ld a,l
 657+ 9411 C6 20            add a,$20
 658+ 9413 6F               ld l,a
 659+ 9414 38 04            jr c,3F
 660+ 9416 7C               ld a,h
 661+ 9417 D6 08            sub 8
 662+ 9419 67               ld h,a
 663+ 941A 7C           3 ld a,h
 664+ 941B FE 58            cp $58
 665+ 941D 28 03            jr z,4F
 666+ 941F D1               pop de
 667+ 9420 10 CB            djnz 1B
 668+ 9422 ED 7B DE 89  4 ld sp,(Stack)
 669+ 9426 C9           	ret
 670+ 9427
 671+ 9427              ; ---------------------------------------------------
 672+ 9427              ;
 673+ 9427              ;   27/02/23
 674+ 9427              ;
 675+ 9427              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 9427              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 9427              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 9427
 679+ 9427 ED 73 DE 89  Pinta_Disparo ld (Stack),sp
 680+ 942B FD F9            ld sp,iy
 681+ 942D 06 03            ld b,3
 682+ 942F D1           1 pop de
 683+ 9430 7B               ld a,e
 684+ 9431 AE               xor (hl)
 685+ 9432 77               ld (hl),a
 686+ 9433 23               inc hl
 687+ 9434 7A               ld a,d
 688+ 9435 AE               xor (hl)
 689+ 9436 77               ld (hl),a
 690+ 9437 2B               dec hl
 691+ 9438
 692+ 9438 24               inc h
 693+ 9439 7C               ld a,h
 694+ 943A E6 07            and 7
 695+ 943C 20 0A            jr nz,2F
 696+ 943E 7D               ld a,l
 697+ 943F C6 20            add a,$20
 698+ 9441 6F               ld l,a
 699+ 9442 38 04            jr c,2F
 700+ 9444 7C               ld a,h
 701+ 9445 D6 08            sub 8
 702+ 9447 67               ld h,a
 703+ 9448 7C           2 ld a,h
 704+ 9449 FE 58            cp $58
 705+ 944B 28 02            jr z,3F
 706+ 944D
 707+ 944D 10 E0            djnz 1B
 708+ 944F ED 7B DE 89  3 ld sp,(Stack)
 709+ 9453 C9               ret
 710+ 9454
# file closed: Rutinas_de_impresion_sprites.asm
1770  9454              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9454
   2+ 9454              ; ******************************************************************************************************************************************************************************************
   3+ 9454              ;
   4+ 9454              ;   20/05/23
   5+ 9454              ;
   6+ 9454              ;	Recompone_posicion_inicio
   7+ 9454              ;
   8+ 9454              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9454              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9454              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9454              ;	_ a una u otra rutina.
  12+ 9454
  13+ 9454              Recompone_posicion_inicio
  14+ 9454
  15+ 9454 2A 9E 89     	ld hl,(Posicion_inicio)
  16+ 9457 7D           	ld a,l
  17+ 9458 E6 1F        	and $1f
  18+ 945A 28 16        	jr z,1F
  19+ 945C
  20+ 945C FE 1F        	cp $1f
  21+ 945E 28 0D        	jr z,3F
  22+ 9460
  23+ 9460 21 B3 89     	ld hl,Ctrl_2
  24+ 9463 CB C6        	set 0,(hl)
  25+ 9465 2A 90 89     	ld hl,(Puntero_objeto)
  26+ 9468 22 CE 89     	ld (Repone_puntero_objeto),hl
  27+ 946B 18 08        	jr 2F
  28+ 946D
  29+ 946D CD 1B 96     3 call Mov_left
  30+ 9470 18 03        	jr 2F
  31+ 9472
  32+ 9472 CD F8 94     1 call Mov_right
  33+ 9475 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9478 22 90 89     	ld (Puntero_objeto),hl
  35+ 947B C9           	ret
  36+ 947C
  37+ 947C              ; ******************************************************************************************************************************************************************************************
  38+ 947C              ;
  39+ 947C              ;   27/05/23
  40+ 947C              ;
  41+ 947C              ;	Mov_down
  42+ 947C              ;
  43+ 947C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 947C              ;
  45+ 947C              ;
  46+ 947C              Mov_down
  47+ 947C
  48+ 947C CD E6 94     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 947F              ;																	; _ repone (Puntero_objeto).
  50+ 947F 21 AE 89     	ld hl,Ctrl_0
  51+ 9482 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9484              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9484              ; 																	; _ en el caso de que no lo haya.
  54+ 9484 3A B8 89     	ld a,(Vel_down)
  55+ 9487 47           	ld b,a
  56+ 9488 2A 8E 89         ld hl,(Posicion_actual)
  57+ 948B CD 57 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 948E E6 02        	and 2
  59+ 9490 28 17        	jr z,1F
  60+ 9492
  61+ 9492              ; Nos encontramos en el último tercio de pantalla.
  62+ 9492              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9492
  64+ 9492 7C           	ld a,h
  65+ 9493 FE 57        	cp $57
  66+ 9495 20 12        	jr nz,1F
  67+ 9497
  68+ 9497 7D           	ld a,l
  69+ 9498 C6 20        	add $20
  70+ 949A 30 0D        	jr nc,1F
  71+ 949C
  72+ 949C              ; ------------------------------
  73+ 949C              ;
  74+ 949C              ;	12/01/24
  75+ 949C
  76+ 949C              ;	call Reaparece_arriba
  77+ 949C CD A8 97     	call Reinicio
  78+ 949F
  79+ 949F              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 949F
  81+ 949F 3A E8 89     	ld a,(Ctrl_3)
  82+ 94A2 CB CF        	set 1,a
  83+ 94A4 32 E8 89     	ld (Ctrl_3),a
  84+ 94A7
  85+ 94A7 18 08        	jr 3F
  86+ 94A9              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 94A9              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 94A9              ; ------------------------------
  89+ 94A9
  90+ 94A9 CD DE 90     1 call NextScan
  91+ 94AC 22 8E 89     	ld (Posicion_actual),hl
  92+ 94AF 10 DA            djnz 2B
  93+ 94B1 CD 75 99     3 call Genera_coordenadas
  94+ 94B4 C9           	ret
  95+ 94B5
  96+ 94B5              ; ******************************************************************************************************************************************************************************************
  97+ 94B5              ;
  98+ 94B5              ;   27/05/23
  99+ 94B5              ;
 100+ 94B5              ;	Mov_up
 101+ 94B5              ;
 102+ 94B5              ; 	Mueve el Sprite hacia arriba.
 103+ 94B5              ;
 104+ 94B5              ;
 105+ 94B5              Mov_up
 106+ 94B5
 107+ 94B5 CD E6 94     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 94B8              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 94B8 21 AE 89     	ld hl,Ctrl_0
 110+ 94BB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 94BD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 94BD              ; 																		; _ en el caso de que no lo haya.
 113+ 94BD 3A B7 89     	ld a,(Vel_up)
 114+ 94C0 47           	ld b,a
 115+ 94C1 2A 8E 89     	ld hl,(Posicion_actual)
 116+ 94C4 CD 57 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 94C7 A7           	and a
 118+ 94C8 20 10        	jr nz,1F
 119+ 94CA
 120+ 94CA              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 94CA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 94CA
 123+ 94CA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 94CB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 94CD 20 0B            jr nz,1F
 126+ 94CF 7D               ld a,l
 127+ 94D0 D6 20            sub $20
 128+ 94D2 30 06            jr nc,1F
 129+ 94D4 25               dec h
 130+ 94D5
 131+ 94D5              ; -----------------------------
 132+ 94D5 CD 89 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 94D8              ;	call Reinicio
 134+ 94D8              ; -----------------------------
 135+ 94D8
 136+ 94D8 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 94DA CD ED 90     1 call PreviousScan
 138+ 94DD 22 8E 89     	ld (Posicion_actual),hl
 139+ 94E0 10 E2            djnz 3B
 140+ 94E2 CD 75 99     2 call Genera_coordenadas
 141+ 94E5 C9           	ret
 142+ 94E6
 143+ 94E6              ; -----------------------------
 144+ 94E6              ;
 145+ 94E6              ;	27/5/23
 146+ 94E6              ;
 147+ 94E6              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 94E6              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 94E6              ;
 150+ 94E6              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 94E6              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 94E6              ;
 153+ 94E6              ;	Modifica: A y (Puntero_objeto).
 154+ 94E6
 155+ 94E6 3A B3 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 94E9 CB 47        	bit 0,a
 157+ 94EB C8           	ret z
 158+ 94EC CB 87        	res 0,a
 159+ 94EE 32 B3 89     	ld (Ctrl_2),a
 160+ 94F1 2A CE 89     	ld hl,(Repone_puntero_objeto)
 161+ 94F4 22 90 89     	ld (Puntero_objeto),hl
 162+ 94F7 C9           	ret
 163+ 94F8
 164+ 94F8              ; ******************************************************************************************************************************************************************************************
 165+ 94F8              ;
 166+ 94F8              ;	19/10/22
 167+ 94F8              ;
 168+ 94F8              ;	Mov_right.
 169+ 94F8              ;
 170+ 94F8              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 94F8              ;
 172+ 94F8
 173+ 94F8 3A AE 89     Mov_right ld a,(Ctrl_0)
 174+ 94FB CB 77        	bit 6,a
 175+ 94FD 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 94FF
 177+ 94FF CD 37 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9502 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9503
 180+ 9503 21 AE 89     	ld hl,Ctrl_0
 181+ 9506 CB E6        	set 4,(hl)
 182+ 9508 18 52        	jr 8F
 183+ 950A
 184+ 950A 21 AE 89     10 ld hl,Ctrl_0
 185+ 950D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 950F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 950F              ; 																	; _ en el caso de que no lo haya.
 188+ 950F 3A 92 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9512 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9514 20 46        	jr nz,8F
 191+ 9516
 192+ 9516 3A 94 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9519 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 951A 28 40        	jr z,8F
 195+ 951C
 196+ 951C              ; ---------- ---------- ----------
 197+ 951C              ;
 198+ 951C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 951C
 200+ 951C 3A B6 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 951F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9521 28 11        	jr z,1F
 203+ 9523 38 06        	jr c,6F
 204+ 9525 FE 04        	cp 4
 205+ 9527 28 14        	jr z,7F
 206+ 9529 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 952B
 208+ 952B              ; ---------- ---------- ----------
 209+ 952B              ;
 210+ 952B              ; Perfiles de velocidad
 211+ 952B              ;
 212+ 952B
 213+ 952B 3A 94 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 952E FE FE        	cp $fe
 215+ 9530 20 2A        	jr nz,8F
 216+ 9532 18 10        	jr 3F
 217+ 9534 3A 94 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9537 FE FD        	cp $fd
 219+ 9539 20 21        	jr nz,8F
 220+ 953B 18 07        	jr 3F
 221+ 953D 3A 94 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9540 FE FB        	cp $fb
 223+ 9542 20 18        	jr nz,8F
 224+ 9544
 225+ 9544              ; ---------- ---------- ----------
 226+ 9544
 227+ 9544              3
 228+ 9544 CD 77 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9547              ;	call Reinicio
 230+ 9547
 231+ 9547              ; ---------- ---------- ----------
 232+ 9547              ;
 233+ 9547              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9547
 235+ 9547 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9549 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 954A CD 63 95     	call DESPLZ_DER
 238+ 954D C1           	pop bc
 239+ 954E 10 F9        	djnz 5B
 240+ 9550 2A 8E 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9553 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9554 22 8E 89     	ld (Posicion_actual),hl
 243+ 9557 CD 75 99     	call Genera_coordenadas
 244+ 955A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 955C
 246+ 955C              ; ---------- ---------- ----------
 247+ 955C
 248+ 955C 2A 8E 89     8 ld hl,(Posicion_actual)
 249+ 955F CD 63 95     	call DESPLZ_DER
 250+ 9562 C9           2 ret
 251+ 9563
 252+ 9563              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9563              ;
 254+ 9563              ;	22/9/22
 255+ 9563              ;
 256+ 9563
 257+ 9563 CD 72 95     DESPLZ_DER call Desplaza_derecha
 258+ 9566 CD BE 95         call modifica_parametros_1er_DESPLZ_2
 259+ 9569 CD E7 95         call Ciclo_completo
 260+ 956C 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 956F CB FE        	set 7,(hl)
 262+ 9571 C9           	ret
 263+ 9572
 264+ 9572              ; ******************************************************************************************************************************************************************************************
 265+ 9572              ;	15/02/23
 266+ 9572              ;
 267+ 9572
 268+ 9572 3A B6 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9575 47           	ld b,a
 270+ 9576 2A 9A 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9579 23           1 inc hl
 272+ 957A 23           	inc hl
 273+ 957B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 957D 22 9A 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9580 CD 50 8B     	call Extrae_address
 276+ 9583 22 90 89     	ld (Puntero_objeto),hl
 277+ 9586
 278+ 9586              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9586
 280+ 9586              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9586              ; Cuántos movimientos hemos hecho ??
 282+ 9586              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9586
 284+ 9586 2A 96 89     7 ld hl,(Indice_Sprite_der)
 285+ 9589 EB           	ex de,hl
 286+ 958A A7           	and a
 287+ 958B ED 52        	sbc hl,de
 288+ 958D CB 3D        	srl l
 289+ 958F 3E 08        6 ld a,8
 290+ 9591 95           	sub l
 291+ 9592 30 1E        	jr nc,3F
 292+ 9594
 293+ 9594              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9594              ; B="0".
 295+ 9594
 296+ 9594 04           4 inc b
 297+ 9595 3C           	inc a
 298+ 9596 20 FC        	jr nz,4B
 299+ 9598 78           	ld a,b
 300+ 9599 08           	ex af,af
 301+ 959A 2A 96 89     	ld hl,(Indice_Sprite_der)
 302+ 959D 23           5 inc hl
 303+ 959E 23           	inc hl
 304+ 959F 10 FC        	djnz 5B
 305+ 95A1 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 306+ 95A4 CD 50 8B     	call Extrae_address
 307+ 95A7 22 90 89     	ld (Puntero_objeto),hl
 308+ 95AA
 309+ 95AA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 95AA              ; _(Posicion_actual).
 311+ 95AA
 312+ 95AA 21 8E 89     	ld hl,Posicion_actual
 313+ 95AD 34           	inc (hl)
 314+ 95AE 08               ex af,af
 315+ 95AF 6F           	ld l,a
 316+ 95B0 18 DD        	jr 6B
 317+ 95B2
 318+ 95B2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 95B2
 320+ 95B2 47           3 ld b,a
 321+ 95B3 2A 98 89     	ld hl,(Indice_Sprite_izq)
 322+ 95B6 23           2 inc hl
 323+ 95B7 23           	inc hl
 324+ 95B8 10 FC        	djnz 2B
 325+ 95BA 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 95BD C9           8 ret
 327+ 95BE
 328+ 95BE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 95BE              ;
 330+ 95BE              ;	24/7/22
 331+ 95BE              ;
 332+ 95BE              ;	modifica_parametros_1er_DESPLZ_2
 333+ 95BE              ;
 334+ 95BE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 95BE              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 95BE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 95BE
 338+ 95BE 3A 94 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 95C1 A7           	and a
 340+ 95C2 20 1F        	jr nz,1F
 341+ 95C4 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 95C6 32 94 89         ld (CTRL_DESPLZ),a
 343+ 95C9
 344+ 95C9 21 8D 89     	ld hl,Columns
 345+ 95CC 34           	inc (hl)
 346+ 95CD 3A A0 89     	ld a,(Cuad_objeto)
 347+ 95D0 E6 01        	and 1
 348+ 95D2 28 0F        	jr z,1F
 349+ 95D4 2A 8E 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 95D7 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 95D8 22 8E 89     	ld (Posicion_actual),hl
 352+ 95DB CD 75 99     	call Genera_coordenadas
 353+ 95DE CD 43 97     	call Inc_CTRL_DESPLZ
 354+ 95E1 18 03        	jr 2F
 355+ 95E3 CD 43 97     1 call Inc_CTRL_DESPLZ
 356+ 95E6 C9           2 ret
 357+ 95E7
 358+ 95E7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 95E7              ;
 360+ 95E7              ;	24/7/22
 361+ 95E7              ;
 362+ 95E7              ;	Ciclo_completo.
 363+ 95E7              ;
 364+ 95E7              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 95E7              ;
 366+ 95E7              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 95E7              ; 	Decrementamos (Columns).
 368+ 95E7              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 95E7              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 95E7
 371+ 95E7
 372+ 95E7 3A 94 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 95EA FE FF        	cp $ff
 374+ 95EC 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 95EE E6 F0        	and $f0
 376+ 95F0 20 28        	jr nz,3F
 377+ 95F2
 378+ 95F2              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 95F2
 380+ 95F2 3A 94 89     	ld a,(CTRL_DESPLZ)
 381+ 95F5 47           	ld b,a
 382+ 95F6 3E F8        	ld a,$f8
 383+ 95F8 80           	add b
 384+ 95F9 32 94 89     	ld (CTRL_DESPLZ),a
 385+ 95FC 18 1C        	jr 3F
 386+ 95FE 21 8D 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9601 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9602 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9603 32 94 89     	ld (CTRL_DESPLZ),a
 390+ 9606 3A A0 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9609 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 960B 20 0A        	jr nz,2F
 393+ 960D 2A 8E 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9610 23           	inc hl
 395+ 9611 22 8E 89     	ld (Posicion_actual),hl
 396+ 9614 CD 75 99     	call Genera_coordenadas
 397+ 9617
 398+ 9617              ; Inicia el puntero de Sprite.
 399+ 9617
 400+ 9617 CD 65 8B     2 call Inicia_puntero_objeto_der
 401+ 961A C9           3 ret
 402+ 961B
 403+ 961B              ; ******************************************************************************************************************************************************************************************
 404+ 961B              ;
 405+ 961B              ;	15/02/23
 406+ 961B              ;
 407+ 961B              ;	Mov_left.
 408+ 961B              ;
 409+ 961B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 961B              ;
 411+ 961B              Mov_left
 412+ 961B
 413+ 961B 21 AE 89     	ld hl,Ctrl_0
 414+ 961E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9620              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9620              ; 																	; _ en el caso de que no lo haya.
 417+ 9620 3A AE 89     	ld a,(Ctrl_0)
 418+ 9623 CB 77        	bit 6,a
 419+ 9625 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9627
 421+ 9627 CD 3D 97     	call Stop_Amadeus_left
 422+ 962A C8           	ret z
 423+ 962B 20 4A        	jr nz,8F
 424+ 962D
 425+ 962D 3A 92 89     11 ld a,(Coordenada_X)
 426+ 9630 A7           	and a
 427+ 9631 20 44        	jr nz,8F
 428+ 9633
 429+ 9633 3A 94 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9636 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9637 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9639
 433+ 9639              ; ---------- ---------- ----------
 434+ 9639
 435+ 9639 3A B5 89     	ld a,(Vel_left)
 436+ 963C FE 02        	cp 2
 437+ 963E 28 0F        	jr z,1F
 438+ 9640 38 04        	jr c,6F
 439+ 9642 FE 04        	cp 4
 440+ 9644 28 12        	jr z,7F
 441+ 9646
 442+ 9646              ; ---------- ---------- ----------
 443+ 9646
 444+ 9646 3A 94 89     6 ld a,(CTRL_DESPLZ)
 445+ 9649 FE F8        	cp $f8
 446+ 964B 20 2A        	jr nz,8F
 447+ 964D 18 10        	jr 4F
 448+ 964F 3A 94 89     1 ld a,(CTRL_DESPLZ)
 449+ 9652 FE F9        	cp $f9
 450+ 9654 20 21        	jr nz,8F
 451+ 9656 18 07        	jr 4F
 452+ 9658 3A 94 89     7 ld a,(CTRL_DESPLZ)
 453+ 965B FE FB        	cp $fb
 454+ 965D 20 18        	jr nz,8F
 455+ 965F
 456+ 965F              ; ---------- ---------- ----------
 457+ 965F
 458+ 965F              4
 459+ 965F CD 65 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9662              ;	call Reinicio
 461+ 9662
 462+ 9662              ; ---------- ---------- ----------
 463+ 9662
 464+ 9662 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9664 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9665
 467+ 9665              ;	ld hl,(Indice_Sprite_izq)
 468+ 9665              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9665
 470+ 9665 CD 7E 96     	call DESPLZ_IZQ
 471+ 9668 C1           	pop bc
 472+ 9669 10 F9        	djnz 5B
 473+ 966B 2A 8E 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 966E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 966F 22 8E 89     	ld (Posicion_actual),hl
 476+ 9672 CD 75 99     	call Genera_coordenadas
 477+ 9675 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9677
 479+ 9677              ; ---------- ---------- ----------
 480+ 9677
 481+ 9677              ; Movemos, no hay recolocación.
 482+ 9677
 483+ 9677 2A 8E 89     8 ld hl,(Posicion_actual)
 484+ 967A CD 7E 96     	call DESPLZ_IZQ
 485+ 967D C9           2 ret
 486+ 967E
 487+ 967E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 967E              ;
 489+ 967E              ;	22/9/22
 490+ 967E
 491+ 967E              DESPLZ_IZQ
 492+ 967E
 493+ 967E CD 8D 96     	call Desplaza_izquierda
 494+ 9681 CD D9 96         call modifica_parametros_1er_DESPLZ
 495+ 9684 CD 01 97     	call Ciclo_completo_2
 496+ 9687 21 AE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 968A CB BE        	res 7,(hl)
 498+ 968C C9           	ret
 499+ 968D
 500+ 968D              Desplaza_izquierda
 501+ 968D
 502+ 968D 3A B5 89     	ld a,(Vel_left)
 503+ 9690 47           	ld b,a
 504+ 9691 2A 9C 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9694 23           1 inc hl
 506+ 9695 23           	inc hl
 507+ 9696 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9698 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 969B CD 50 8B     	call Extrae_address
 510+ 969E 22 90 89     	ld (Puntero_objeto),hl
 511+ 96A1
 512+ 96A1              ; Modifica (Puntero_DESPLZ_der).
 513+ 96A1
 514+ 96A1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96A1              ; Cuántos movimientos hemos hecho ??
 516+ 96A1              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96A1
 518+ 96A1 2A 98 89     7 ld hl,(Indice_Sprite_izq)
 519+ 96A4 EB           	ex de,hl
 520+ 96A5 A7           	and a
 521+ 96A6 ED 52        	sbc hl,de
 522+ 96A8 CB 3D        	srl l
 523+ 96AA 3E 08        6 ld a,8
 524+ 96AC 95           	sub l
 525+ 96AD 30 1E        	jr nc,3F
 526+ 96AF
 527+ 96AF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 96AF              ; B="0".
 529+ 96AF
 530+ 96AF 04           4 inc b
 531+ 96B0 3C           	inc a
 532+ 96B1 20 FC        	jr nz,4B
 533+ 96B3 78           	ld a,b
 534+ 96B4 08           	ex af,af
 535+ 96B5 2A 98 89     	ld hl,(Indice_Sprite_izq)
 536+ 96B8 23           5 inc hl
 537+ 96B9 23           	inc hl
 538+ 96BA 10 FC        	djnz 5B
 539+ 96BC 22 9C 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 96BF CD 50 8B     	call Extrae_address
 541+ 96C2 22 90 89     	ld (Puntero_objeto),hl
 542+ 96C5
 543+ 96C5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 96C5              ; _(Posicion_actual).
 545+ 96C5
 546+ 96C5 21 8E 89     	ld hl,Posicion_actual
 547+ 96C8 35           	dec (hl)
 548+ 96C9 08           	ex af,af
 549+ 96CA 6F           	ld l,a
 550+ 96CB 18 DD        	jr 6B
 551+ 96CD
 552+ 96CD              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 96CD
 554+ 96CD 47           3 ld b,a
 555+ 96CE 2A 96 89     	ld hl,(Indice_Sprite_der)
 556+ 96D1 23           2 inc hl
 557+ 96D2 23           	inc hl
 558+ 96D3 10 FC        	djnz 2B
 559+ 96D5 22 9A 89     	ld (Puntero_DESPLZ_der),hl
 560+ 96D8 C9           8 ret
 561+ 96D9
 562+ 96D9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 96D9              ;
 564+ 96D9              ;	modifica_parametros_1er_DESPLZ
 565+ 96D9              ;
 566+ 96D9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 96D9              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 96D9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 96D9
 570+ 96D9 3A 94 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 96DC A7           	and a
 572+ 96DD 20 1E        	jr nz,1F
 573+ 96DF 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 96E0 32 94 89         ld (CTRL_DESPLZ),a
 575+ 96E3 21 8D 89     	ld hl,Columns
 576+ 96E6 34           	inc (hl)
 577+ 96E7 3A A0 89     	ld a,(Cuad_objeto)
 578+ 96EA E6 01        	and 1
 579+ 96EC 20 0F        	jr nz,1F
 580+ 96EE 2A 8E 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 96F1 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 96F2 22 8E 89     	ld (Posicion_actual),hl
 583+ 96F5 CD 75 99     	call Genera_coordenadas
 584+ 96F8 CD 54 97     	call Dec_CTRL_DESPLZ
 585+ 96FB 18 03        	jr 2F
 586+ 96FD CD 54 97     1 call Dec_CTRL_DESPLZ
 587+ 9700 C9           2 ret
 588+ 9701
 589+ 9701              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9701
 591+ 9701 3A 94 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9704 FE F7        	cp $f7
 593+ 9706 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9708 30 2C        	jr nc,3F
 595+ 970A
 596+ 970A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 970A
 598+ 970A 06 00        	ld b,0
 599+ 970C 04           4 inc b
 600+ 970D 3C           	inc a
 601+ 970E FE F7        	cp $f7
 602+ 9710 20 FA        	jr nz,4B
 603+ 9712 3E FF        	ld a,$ff
 604+ 9714 90           	sub b
 605+ 9715 32 94 89     	ld (CTRL_DESPLZ),a
 606+ 9718 18 1C        	jr 3F
 607+ 971A
 608+ 971A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 971A
 610+ 971A 21 8D 89     1 ld hl,Columns
 611+ 971D 35           	dec (hl)
 612+ 971E AF           	xor a
 613+ 971F 32 94 89     	ld (CTRL_DESPLZ),a
 614+ 9722 3A A0 89     	ld a,(Cuad_objeto)
 615+ 9725 E6 01        	and 1
 616+ 9727 28 0A        	jr z,2F
 617+ 9729 2A 8E 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 972C 2B           	dec hl
 619+ 972D 22 8E 89     	ld (Posicion_actual),hl
 620+ 9730 CD 75 99     	call Genera_coordenadas
 621+ 9733
 622+ 9733              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9733
 624+ 9733 CD 78 8B     2 call Inicia_puntero_objeto_izq
 625+ 9736 C9           3 ret
 626+ 9737
 627+ 9737              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9737              ;
 629+ 9737              ;	19/10/22
 630+ 9737              ;
 631+ 9737              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9737              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9737
 634+ 9737 3A 92 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 973A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 973C C9           	ret
 637+ 973D
 638+ 973D              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 973D              ;
 640+ 973D              ;	19/10/22
 641+ 973D              ;
 642+ 973D              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 973D              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 973D
 645+ 973D 3A 92 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9740 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9742 C9           	ret
 648+ 9743
 649+ 9743              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9743              ;
 651+ 9743              ;	24/7/22
 652+ 9743              ;
 653+ 9743              ;	Inc_CTRL_DESPLZ
 654+ 9743              ;
 655+ 9743              ;
 656+ 9743              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9743
 658+ 9743 21 94 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9746 3A B6 89     	ld a,(Vel_right)
 660+ 9749 A7           	and a
 661+ 974A 28 06        	jr z,1F
 662+ 974C 47           	ld b,a
 663+ 974D 34           3 inc (hl)
 664+ 974E 10 FD        	djnz 3B
 665+ 9750 18 01        	jr 2F
 666+ 9752 34           1 inc (hl)
 667+ 9753 C9           2 ret
 668+ 9754
 669+ 9754              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9754              ;
 671+ 9754              ;	5/2/23
 672+ 9754              ;
 673+ 9754              ;	Dec_CTRL_DESPLZ
 674+ 9754              ;
 675+ 9754              ;
 676+ 9754              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9754
 678+ 9754 21 94 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9757 3A B5 89     	ld a,(Vel_left)
 680+ 975A A7           	and a
 681+ 975B 28 06        	jr z,1F
 682+ 975D 47           	ld b,a
 683+ 975E 35           3 dec (hl)
 684+ 975F 10 FD        	djnz 3B
 685+ 9761 18 01        	jr 2F
 686+ 9763 35           1 dec (hl)
 687+ 9764 C9           2 ret
 688+ 9765
 689+ 9765              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9765
 691+ 9765 2A 8E 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9768 01 1F 00     	ld bc,31
 693+ 976B A7           	and a
 694+ 976C ED 4A        	adc hl,bc
 695+ 976E 22 8E 89     	ld (Posicion_actual),hl
 696+ 9771 21 AE 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9774 CB C6        	set 0,(hl)
 698+ 9776 C9           	ret
 699+ 9777
 700+ 9777              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9777
 702+ 9777 2A 8E 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 977A 01 1F 00     	ld bc,31
 704+ 977D A7           	and a
 705+ 977E ED 42        	sbc hl,bc
 706+ 9780 22 8E 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9783 21 AE 89     	ld hl,Ctrl_0
 708+ 9786 CB CE        	set 1,(hl)
 709+ 9788 C9           	ret
 710+ 9789
 711+ 9789              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9789
 713+ 9789 24           Reaparece_abajo inc h
 714+ 978A 01 E0 17     	ld bc,$17e0
 715+ 978D A7           	and a
 716+ 978E ED 4A        	adc hl,bc
 717+ 9790 22 8E 89     	ld (Posicion_actual),hl
 718+ 9793 21 AE 89     	ld hl,Ctrl_0
 719+ 9796 CB D6        	set 2,(hl)
 720+ 9798 C9           	ret
 721+ 9799
 722+ 9799              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9799
 724+ 9799 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 979C A7           	and a
 726+ 979D ED 42        	sbc hl,bc
 727+ 979F 22 8E 89     	ld (Posicion_actual),hl
 728+ 97A2 21 AE 89     	ld hl,Ctrl_0
 729+ 97A5 CB DE        	set 3,(hl)
 730+ 97A7 C9           	ret
 731+ 97A8
 732+ 97A8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 97A8              ;
 734+ 97A8              ;	15/07/23
 735+ 97A8
 736+ 97A8              Reinicio
 737+ 97A8
 738+ 97A8              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 97A8
 740+ 97A8 AF           	xor a
 741+ 97A9 21 C5 89     	ld hl,Puntero_indice_mov_bucle
 742+ 97AC CD CA 97     	call Limpia_contenido_hl
 743+ 97AF
 744+ 97AF 21 8E 89     	ld hl,Posicion_actual
 745+ 97B2 CD CA 97     	call Limpia_contenido_hl
 746+ 97B5
 747+ 97B5 CD 13 8C     	call Inicializa_Puntero_indice_mov
 748+ 97B8 CD 96 98     	call Inicia_Puntero_mov
 749+ 97BB
 750+ 97BB 21 C7 89     	ld hl,Incrementa_puntero
 751+ 97BE 06 05        	ld b,5
 752+ 97C0 77           1 ld (hl),a
 753+ 97C1 23           	inc hl
 754+ 97C2 10 FC        	djnz 1B
 755+ 97C4
 756+ 97C4 21 B3 89     	ld hl,Ctrl_2
 757+ 97C7 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 97C9
 759+ 97C9 C9           	ret
 760+ 97CA
 761+ 97CA 77           Limpia_contenido_hl	ld (hl),a
 762+ 97CB 23           	inc hl
 763+ 97CC 77           	ld (hl),a
 764+ 97CD C9           	ret
 765+ 97CE
 766+ 97CE
# file closed: Direcciones.asm
1771  97CE              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 97CE              ; ----- ----- ----- ----- -----
   2+ 97CE              ;
   3+ 97CE              ;   28/12/23
   4+ 97CE
   5+ 97CE              Movimiento
   6+ 97CE
   7+ 97CE              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 97CE
   9+ 97CE 3A B3 89         ld a,(Ctrl_2)
  10+ 97D1 CB 57            bit 2,a
  11+ 97D3 20 1B            jr nz, Desplazamiento_iniciado
  12+ 97D5
  13+ 97D5 2A C3 89         ld hl,(Puntero_mov)
  14+ 97D8 7E               ld a,(hl)
  15+ 97D9
  16+ 97D9              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 97D9
  18+ 97D9              Inicia_desplazamiento.
  19+ 97D9
  20+ 97D9              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 97D9
  22+ 97D9 CD CC 98         call Ajusta_velocidad_desplazamiento
  23+ 97DC
  24+ 97DC              ; Iniciamos (Repetimos_mov).
  25+ 97DC
  26+ 97DC 7E               ld a,(hl)
  27+ 97DD E6 0F            and $0f
  28+ 97DF 32 C9 89         ld (Repetimos_desplazamiento),a
  29+ 97E2 32 CA 89         ld (Repetimos_desplazamiento_backup),a
  30+ 97E5
  31+ 97E5              ; Iniciamos (Cola_de_desplazamiento).
  32+ 97E5
  33+ 97E5 23               inc hl
  34+ 97E6 7E               ld a,(hl)
  35+ 97E7 32 CC 89         ld (Cola_de_desplazamiento),a
  36+ 97EA 2B               dec hl
  37+ 97EB
  38+ 97EB 21 B3 89         ld hl,Ctrl_2
  39+ 97EE CB D6            set 2,(hl)
  40+ 97F0
  41+ 97F0              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 97F0              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 97F0
  44+ 97F0              Desplazamiento_iniciado
  45+ 97F0
  46+ 97F0 CD A0 98         call Aplica_desplazamiento
  47+ 97F3
  48+ 97F3              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 97F3
  50+ 97F3 3A E8 89         ld a,(Ctrl_3)
  51+ 97F6 CB 4F            bit 1,a
  52+ 97F8 C0               ret nz
  53+ 97F9
  54+ 97F9 21 C9 89     3 ld hl,Repetimos_desplazamiento
  55+ 97FC 35               dec (hl)
  56+ 97FD C0               ret nz
  57+ 97FE
  58+ 97FE              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 97FE              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 97FE              ; Analiza (Cola_de_desplazamiento).
  61+ 97FE
  62+ 97FE 3A CC 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 9801 A7               and a
  64+ 9802 CC F5 98         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9805 28 30            jr z,Reinicia_el_movimiento
  66+ 9807
  67+ 9807 FE FF            cp $ff
  68+ 9809 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 980B
  70+ 980B FE FE            cp $fe
  71+ 980D CC 7A 98         call z,Fijamos_bucle
  72+ 9810 28 25            jr z,Reinicia_el_movimiento
  73+ 9812
  74+ 9812 FE FD            cp $fd
  75+ 9814 20 11            jr nz,1F
  76+ 9816
  77+ 9816              ; ---
  78+ 9816              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9816
  80+ 9816 3A B3 89         ld a,(Ctrl_2)
  81+ 9819 CB 5F            bit 3,a
  82+ 981B 20 1A            jr nz,Reinicia_el_movimiento
  83+ 981D
  84+ 981D              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 981D
  86+ 981D 21 B3 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9820 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9822
  89+ 9822 CD 8B 98         call Inicia_Repetimos_movimiento
  90+ 9825 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9827              ; ---
  92+ 9827
  93+ 9827 FE 01        1 cp 1
  94+ 9829 CA 64 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 982C
  96+ 982C 3D               dec a
  97+ 982D 32 CC 89         ld (Cola_de_desplazamiento),a
  98+ 9830
  99+ 9830 3A CA 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9833 32 C9 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9836              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9836 C9               ret
 103+ 9837
 104+ 9837              Reinicia_el_movimiento
 105+ 9837
 106+ 9837 3A B3 89         ld a,(Ctrl_2)
 107+ 983A CB 5F            bit 3,a
 108+ 983C 28 1B            jr z,2F
 109+ 983E
 110+ 983E              ; (Cola_de_desplazamiento)="254".
 111+ 983E
 112+ 983E 21 CB 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9841 35               dec (hl)
 114+ 9842 20 15            jr nz,2F
 115+ 9844
 116+ 9844              ; Fin de las repeticiones del último movimiento.
 117+ 9844
 118+ 9844 21 B3 89         ld hl,Ctrl_2
 119+ 9847 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9849
 121+ 9849 2A C3 89         ld hl,(Puntero_mov)
 122+ 984C 23               inc hl
 123+ 984D 23               inc hl
 124+ 984E 23               inc hl
 125+ 984F 22 C3 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9852              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9852 7E               ld a,(hl)
 128+ 9853 32 CC 89         ld (Cola_de_desplazamiento),a
 129+ 9856
 130+ 9856 C3 FE 97         jp Cola
 131+ 9859
 132+ 9859 CD 96 98     2 call Inicia_Puntero_mov
 133+ 985C
 134+ 985C 21 B3 89         ld hl,Ctrl_2
 135+ 985F CB 96            res 2,(hl)
 136+ 9861
 137+ 9861 C3 CE 97         jp Movimiento
 138+ 9864
 139+ 9864              Siguiente_desplazamiento
 140+ 9864
 141+ 9864              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9864              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9864
 144+ 9864 21 B3 89         ld hl,Ctrl_2
 145+ 9867 CB 96            res 2,(hl)
 146+ 9869
 147+ 9869 2A C3 89         ld hl,(Puntero_mov)
 148+ 986C 23               inc hl
 149+ 986D 23               inc hl
 150+ 986E 22 C3 89         ld (Puntero_mov),hl
 151+ 9871
 152+ 9871 7E               ld a,(hl)
 153+ 9872 A7               and a
 154+ 9873 CC F5 98         call z,Incrementa_Puntero_indice_mov
 155+ 9876 CA 37 98         jp z,Reinicia_el_movimiento
 156+ 9879
 157+ 9879 C9               ret
 158+ 987A
 159+ 987A              ; Subrutinas -----------------------------------------
 160+ 987A              ; ---------- --------- --------- ---------- ----------
 161+ 987A              ;
 162+ 987A              ;   24/07/23
 163+ 987A              ;
 164+ 987A              ;   Fijamos_bucle
 165+ 987A              ;
 166+ 987A              ;
 167+ 987A
 168+ 987A              Fijamos_bucle
 169+ 987A
 170+ 987A 3A C7 89         ld a,(Incrementa_puntero)
 171+ 987D 3C               inc a
 172+ 987E 32 C8 89         ld (Incrementa_puntero_backup),a
 173+ 9881
 174+ 9881 CD F5 98         call Incrementa_Puntero_indice_mov
 175+ 9884 2A C1 89         ld hl,(Puntero_indice_mov)
 176+ 9887 22 C5 89         ld (Puntero_indice_mov_bucle),hl
 177+ 988A C9               ret
 178+ 988B
 179+ 988B              ; ---------- --------- --------- ---------- ----------
 180+ 988B              ;
 181+ 988B              ;   07/7/23
 182+ 988B              ;
 183+ 988B              ;   Inicia_Repetimos_movimiento
 184+ 988B              ;
 185+ 988B              ;
 186+ 988B
 187+ 988B              Inicia_Repetimos_movimiento
 188+ 988B
 189+ 988B              ; Iniciamos (Repetimos_movimiento).
 190+ 988B
 191+ 988B DD 2A C3 89      ld ix,(Puntero_mov)
 192+ 988F DD 7E 02         ld a,(ix+2)
 193+ 9892 32 CB 89         ld (Repetimos_movimiento),a
 194+ 9895
 195+ 9895 C9               ret
 196+ 9896
 197+ 9896              ; ---------- --------- --------- ---------- ----------
 198+ 9896              ;
 199+ 9896              ;   26/6/23
 200+ 9896              ;
 201+ 9896              ;   Inicia_Puntero_mov
 202+ 9896              ;
 203+ 9896              ;
 204+ 9896
 205+ 9896 2A C1 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9899 CD 50 8B         call Extrae_address
 207+ 989C 22 C3 89         ld (Puntero_mov),hl
 208+ 989F C9               ret
 209+ 98A0
 210+ 98A0              ; ---------- --------- --------- ---------- ----------
 211+ 98A0              ;
 212+ 98A0              ;   27/06/23
 213+ 98A0              ;
 214+ 98A0              ;   Aplica_movimiento.
 215+ 98A0
 216+ 98A0              Aplica_desplazamiento
 217+ 98A0
 218+ 98A0              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98A0
 220+ 98A0 2A C3 89         ld hl, (Puntero_mov)
 221+ 98A3
 222+ 98A3 7E               ld a,(hl)
 223+ 98A4 E6 F0            and $f0
 224+ 98A6 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 98A7
 226+ 98A7 CB 7E            bit 7,(hl)
 227+ 98A9 28 03            jr z,1F
 228+ 98AB CD B5 94         call Mov_up
 229+ 98AE 2A C3 89     1 ld hl, (Puntero_mov)
 230+ 98B1 CB 76            bit 6,(hl)
 231+ 98B3 28 03            jr z,2F
 232+ 98B5 CD 7C 94         call Mov_down
 233+ 98B8
 234+ 98B8              ; Se ha aplicado reinicio ???
 235+ 98B8              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 98B8
 237+ 98B8              ;    ld a,(Ctrl_3)
 238+ 98B8              ;    bit 1,a
 239+ 98B8              ;    ret nz
 240+ 98B8
 241+ 98B8 2A C3 89     2 ld hl, (Puntero_mov)
 242+ 98BB CB 6E            bit 5,(hl)
 243+ 98BD 28 03            jr z,3F
 244+ 98BF CD 1B 96         call Mov_left
 245+ 98C2 2A C3 89     3 ld hl, (Puntero_mov)
 246+ 98C5 CB 66            bit 4,(hl)
 247+ 98C7 C8               ret z
 248+ 98C8 CD F8 94         call Mov_right
 249+ 98CB C9               ret
 250+ 98CC
 251+ 98CC              ; ---------- --------- --------- ---------- ----------
 252+ 98CC              ;
 253+ 98CC              ;   26/06/23
 254+ 98CC              ;
 255+ 98CC              ;   Ajusta_velocidad_desplazamiento.
 256+ 98CC
 257+ 98CC              Ajusta_velocidad_desplazamiento
 258+ 98CC
 259+ 98CC              ; 1er byte de la cadena de movimiento.
 260+ 98CC              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 98CC
 262+ 98CC CD EA 98         call Extrae_nibble_alto
 263+ 98CF
 264+ 98CF 32 B7 89         ld (Vel_up),a
 265+ 98D2 79               ld a,c
 266+ 98D3 E6 0F            and $0f
 267+ 98D5 32 B8 89         ld (Vel_down),a
 268+ 98D8
 269+ 98D8              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 98D8              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 98D8
 272+ 98D8 23               inc hl
 273+ 98D9 CD EA 98         call Extrae_nibble_alto
 274+ 98DC
 275+ 98DC 32 B5 89         ld (Vel_left),a
 276+ 98DF 79               ld a,c
 277+ 98E0 E6 0F            and $0f
 278+ 98E2 32 B6 89         ld (Vel_right),a
 279+ 98E5
 280+ 98E5              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 98E5
 282+ 98E5 23               inc hl
 283+ 98E6 22 C3 89         ld (Puntero_mov),hl
 284+ 98E9 C9               ret
 285+ 98EA
 286+ 98EA 06 04        Extrae_nibble_alto ld b,4
 287+ 98EC 7E               ld a,(hl)
 288+ 98ED 4F               ld c,a
 289+ 98EE E6 F0            and $f0
 290+ 98F0 CB 3F        1 srl a
 291+ 98F2 10 FC            djnz 1B
 292+ 98F4 C9               ret
 293+ 98F5
 294+ 98F5              ; ---------- --------- --------- ---------- ----------
 295+ 98F5              ;
 296+ 98F5              ;   5/7/23
 297+ 98F5              ;
 298+ 98F5              ;   Incrementa_Puntero_indice_mov
 299+ 98F5
 300+ 98F5              Incrementa_Puntero_indice_mov
 301+ 98F5
 302+ 98F5 21 C7 89         ld hl,Incrementa_puntero
 303+ 98F8 34               inc (hl)
 304+ 98F9
 305+ 98F9 2A C1 89         ld hl,(Puntero_indice_mov)
 306+ 98FC 01 02 00         ld bc,2
 307+ 98FF A7               and a
 308+ 9900 09               add hl,bc
 309+ 9901 22 C1 89         ld (Puntero_indice_mov),hl
 310+ 9904
 311+ 9904 7E               ld a,(hl)
 312+ 9905 A7               and a
 313+ 9906
 314+ 9906              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9906
 316+ 9906              ;    jr z,$
 317+ 9906
 318+ 9906              ;! Reinicia el Patrón de movimiento.
 319+ 9906
 320+ 9906 CC 0B 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 9909
 322+ 9909 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 990A
 324+ 990A C9               ret
 325+ 990B
 326+ 990B              ; ---------- --------- --------- ---------- ----------
 327+ 990B              ;
 328+ 990B              ;   15/01/24
 329+ 990B              ;
 330+ 990B              ;   Inicializa_Puntero_indice_mov
 331+ 990B
 332+ 990B              Inicializa_Puntero_indice_mov_2
 333+ 990B
 334+ 990B              ; Existe etiqueta de bucle principal???
 335+ 990B
 336+ 990B 2A C5 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 990E 24               inc h
 338+ 990F 25               dec h
 339+ 9910 28 05            jr z,2F
 340+ 9912
 341+ 9912 22 C1 89         ld (Puntero_indice_mov),hl
 342+ 9915 18 14            jr 3F
 343+ 9917
 344+ 9917              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9917
 346+ 9917 3A C7 89     2 ld a,(Incrementa_puntero)
 347+ 991A 47               ld b,a
 348+ 991B
 349+ 991B 2A C1 89         ld hl,(Puntero_indice_mov)
 350+ 991E 2B           1 dec hl
 351+ 991F 2B               dec hl
 352+ 9920 10 FC            djnz 1B
 353+ 9922 22 C1 89         ld (Puntero_indice_mov),hl
 354+ 9925
 355+ 9925 AF               xor a
 356+ 9926 32 C7 89         ld (Incrementa_puntero),a
 357+ 9929 18 06            jr 4F
 358+ 992B
 359+ 992B 3A C8 89     3 ld a,(Incrementa_puntero_backup)
 360+ 992E 32 C7 89         ld (Incrementa_puntero),a
 361+ 9931 C9           4 ret
 362+ 9932
 363+ 9932              ; ----------------------------------------------------------------------
 364+ 9932              ;
 365+ 9932              ;   30/01/24
 366+ 9932              ;
 367+ 9932              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9932
 369+ 9932 3A 8B 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9935 CD 64 8D         call Calcula_salto_en_BC
 371+ 9938 21 B9 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 993B A7               and a
 373+ 993C ED 4A            adc hl,bc
 374+ 993E C9               ret
 375+ 993F
 376+ 993F              ; ----------------------------------------------------------------------
 377+ 993F              ;
 378+ 993F              ;   30/01/24
 379+ 993F              ;
 380+ 993F              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 993F              ;
 382+ 993F              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 993F
 384+ 993F 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9940 23               inc hl
 386+ 9941 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9942 69               ld l,c
 388+ 9943 60               ld h,b
 389+ 9944 22 AC 89         ld (Contador_de_mov_masticados),hl
 390+ 9947 C9               ret
 391+ 9948
# file closed: Movimiento.asm
1772  9948              ;	include "Disparo.asm"
1773  9948              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9948              ; Relojes y temporizaciones.
   2+ 9948
   3+ 9948              ; ------------------------------------------------------
   4+ 9948              ;
   5+ 9948              ;	16/7/23
   6+ 9948              ;
   7+ 9948              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9948              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9948              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9948              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9948              ;
  12+ 9948              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9948              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9948
  15+ 9948              ; Disparo_entidad db 1
  16+ 9948              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9948              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9948
  19+ 9948              Habilita_disparos
  20+ 9948
  21+ 9948 7E           	ld a,(hl)
  22+ 9949 A7           	and a
  23+ 994A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 994B
  25+ 994B EB           	ex de,hl
  26+ 994C
  27+ 994C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 994D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 994E
  30+ 994E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 994E
  32+ 994E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 994F 7E           	ld a,(hl)
  34+ 9950 23           	inc hl
  35+ 9951 77           	ld (hl),a
  36+ 9952
  37+ 9952 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9953 3E 01        	ld a,1
  39+ 9955 77           	ld (hl),a
  40+ 9956 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1774  9957              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9957              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9957              ;
   3+ 9957              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9957              ;
   5+ 9957              ; *****************************************************************************************************************************************************************************************
   6+ 9957              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9957
   8+ 9957 7C           calcula_tercio ld a,h
   9+ 9958 E6 18        	and $18
  10+ 995A CB 2F        	sra a
  11+ 995C CB 2F        	sra a
  12+ 995E CB 2F        	sra a
  13+ 9960 C9           	ret
  14+ 9961
# file closed: calcula_tercio.asm
1775  9961              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9961              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9961              ;
   3+ 9961              ;
   4+ 9961              ;	CLS.
   5+ 9961              ;
   6+ 9961              ;	Limpia la pantalla y define sus atributos.
   7+ 9961              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9961              ;
   9+ 9961              ;	COLORES: 0 ..... NEGRO
  10+ 9961              ;    		 1 ..... AZUL
  11+ 9961              ; 			 2 ..... ROJO
  12+ 9961              ;			 3 ..... MAGENTA
  13+ 9961              ; 			 4 ..... VERDE
  14+ 9961              ; 			 5 ..... CIAN
  15+ 9961              ;			 6 ..... AMARILLO
  16+ 9961              ; 			 7 ..... BLANCO
  17+ 9961              ;
  18+ 9961              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9961              ;
  20+ 9961              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9961
  22+ 9961
  23+ 9961 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9964 11 01 40     	LD DE,$4001
  25+ 9967 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 996A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 996C ED B0        	LDIR
  28+ 996E 01 FF 02     	LD BC,767
  29+ 9971 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9972 ED B0        	LDIR
  31+ 9974 C9           	ret
  32+ 9975
# file closed: Cls.asm
1776  9975              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9975              ; ------------------------------------------------------------------------
   2+ 9975              ;
   3+ 9975              ;	30/1/24
   4+ 9975              ;
   5+ 9975              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9975              ;	Fila superior "0", Columna izquierda "0".
   7+ 9975              ;
   8+ 9975              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9975              ;
  10+ 9975              ;	Modifica: A,BC y DE.
  11+ 9975
  12+ 9975 7D           Genera_coordenadas ld a,l
  13+ 9976 E6 1F        	and $1f
  14+ 9978 32 92 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 997B
  16+ 997B 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 997C FE 40        	cp $40
  18+ 997E 38 1C        	jr c,4F
  19+ 9980
  20+ 9980 CD 57 99     	call calcula_tercio
  21+ 9983 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9984
  23+ 9984 1E 00        	ld e,0
  24+ 9986 7D           	ld a,l
  25+ 9987 E6 E0        	and $e0
  26+ 9989 28 01        	jr z,1F
  27+ 998B 04           	inc b
  28+ 998C
  29+ 998C 04           1 inc b
  30+ 998D 05           	dec b
  31+ 998E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9990              ;														; _ , salimos.
  33+ 9990 1C           3 inc e
  34+ 9991 D6 20        	sub 32
  35+ 9993 20 FB        	jr nz,3B
  36+ 9995 10 F5        	djnz 1B
  37+ 9997
  38+ 9997 7B           2 ld a,e
  39+ 9998 32 93 89     	ld (Coordenada_y),a
  40+ 999B C9           	ret
  41+ 999C
  42+ 999C AF           4 xor a
  43+ 999D 32 93 89     	ld (Coordenada_y),a
  44+ 99A0 C9           	ret
  45+ 99A1
  46+ 99A1              ; ------------------------------------------------------------------------
  47+ 99A1              ;	28/05/23
  48+ 99A1              ;
  49+ 99A1              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 99A1              ;	Fila superior "0", Columna izquierda "0".
  51+ 99A1              ;
  52+ 99A1              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 99A1              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 99A1              ;
  55+ 99A1              ;		DE="$120d"
  56+ 99A1              ;
  57+ 99A1              ;		D, (Coordenada_X), Columnas, $12
  58+ 99A1              ;		E, (Coordenada_y), Filas, $0d
  59+ 99A1              ;
  60+ 99A1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 99A1
  62+ 99A1              ;	Modifica: A,BC y DE.
  63+ 99A1
  64+ 99A1
  65+ 99A1              Genera_coordenadas_disparo
  66+ 99A1
  67+ 99A1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 99A1
  69+ 99A1 7D           	ld a,l
  70+ 99A2 E6 1F        	and $1f
  71+ 99A4 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 99A5 CD 57 99     	call calcula_tercio
  73+ 99A8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 99A9 1E 00        	ld e,0
  75+ 99AB 7D           	ld a,l
  76+ 99AC E6 E0        	and $e0
  77+ 99AE 28 01        	jr z,1F
  78+ 99B0 04           	inc b
  79+ 99B1 1C           1 inc e
  80+ 99B2 D6 20        	sub 32
  81+ 99B4 20 FB        	jr nz,1B
  82+ 99B6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 99B8 C9           	ret
  84+ 99B9
# file closed: Genera_coordenadas.asm
1777  99B9              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 99B9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 99B9              ;
   3+ 99B9              ;	11/03/24
   4+ 99B9              ;
   5+ 99B9                  org $80bf
   6+ 80BF
   7+ 80BF              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   8+ 80BF              ;   DE contiene Puntero_objeto.
   9+ 80BF              ;   IX contiene el Puntero de impresión.
  10+ 80BF
  11+ 80BF              Genera_datos_de_impresion
  12+ 80BF
  13+ 80BF ED 73 DE 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  14+ 80C3 31 AA 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  15+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  16+ 80C8
  17+ 80C8 2A E4 89         ld hl,(Scanlines_album_SP)
  18+ 80CB
  19+ 80CB 3E 05            ld a,5
  20+ 80CD 85               add l
  21+ 80CE 6F               ld l,a
  22+ 80CF
  23+ 80CF F9               ld sp,hl
  24+ 80D0 22 E4 89         ld (Scanlines_album_SP),hl
  25+ 80D3
  26+ 80D3 21 00 00         ld hl,0
  27+ 80D6
  28+ 80D6 DD E5            push ix
  29+ 80D8 3B               dec sp
  30+ 80D9 ED 7A            adc hl,sp
  31+ 80DB D5               push de
  32+ 80DC
  33+ 80DC              ; Recuperamos SP.
  34+ 80DC
  35+ 80DC ED 7B DE 89      ld sp,(Stack)
  36+ 80E0
  37+ 80E0 E5               push hl
  38+ 80E1 F1               pop af
  39+ 80E2 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  40+ 80E3
  41+ 80E3              ; Tenemos el encabezado listo.
  42+ 80E3              ; Preparamos registros para generar los scanlines.
  43+ 80E3
  44+ 80E3 DD E5            push ix
  45+ 80E5 E1               pop hl                                          ; 1er scanline en HL.
  46+ 80E6
  47+ 80E6 ED 5B E4 89      ld de,(Scanlines_album_SP)
  48+ 80EA
  49+ 80EA              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  50+ 80EA              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  51+ 80EA
  52+ 80EA 7C               ld a,h
  53+ 80EB FE 50            cp $50
  54+ 80ED 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  55+ 80EF
  56+ 80EF 20 05            jr nz,2F
  57+ 80F1
  58+ 80F1 7D               ld a,l
  59+ 80F2 FE E0            cp $e0
  60+ 80F4 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  61+ 80F6
  62+ 80F6 7D           2 ld a,l
  63+ 80F7 FE C0            cp $c0
  64+ 80F9 D2 8B 81         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  65+ 80FC
  66+ 80FC              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  67+ 80FC
  68+ 80FC CD DE 90         call NextScan
  69+ 80FF EB               ex de,hl
  70+ 8100
  71+ 8100 73               ld (hl),e
  72+ 8101 2C               inc l
  73+ 8102 72               ld (hl),d
  74+ 8103 2C               inc l
  75+ 8104
  76+ 8104 EB               ex de,hl
  77+ 8105
  78+ 8105 CD DE 90         call NextScan
  79+ 8108 EB               ex de,hl
  80+ 8109
  81+ 8109 73               ld (hl),e
  82+ 810A 2C               inc l
  83+ 810B 72               ld (hl),d
  84+ 810C 2C               inc l
  85+ 810D
  86+ 810D EB               ex de,hl
  87+ 810E
  88+ 810E CD DE 90         call NextScan
  89+ 8111 EB               ex de,hl
  90+ 8112
  91+ 8112 73               ld (hl),e
  92+ 8113 2C               inc l
  93+ 8114 72               ld (hl),d
  94+ 8115 2C               inc l
  95+ 8116
  96+ 8116 EB               ex de,hl
  97+ 8117
  98+ 8117 CD DE 90         call NextScan
  99+ 811A EB               ex de,hl
 100+ 811B
 101+ 811B 73               ld (hl),e
 102+ 811C 2C               inc l
 103+ 811D 72               ld (hl),d
 104+ 811E 2C               inc l
 105+ 811F
 106+ 811F EB               ex de,hl
 107+ 8120
 108+ 8120 CD DE 90         call NextScan
 109+ 8123 EB               ex de,hl
 110+ 8124
 111+ 8124 73               ld (hl),e
 112+ 8125 2C               inc l
 113+ 8126 72               ld (hl),d
 114+ 8127 2C               inc l
 115+ 8128
 116+ 8128 EB               ex de,hl
 117+ 8129
 118+ 8129 CD DE 90         call NextScan
 119+ 812C EB               ex de,hl
 120+ 812D
 121+ 812D 73               ld (hl),e
 122+ 812E 2C               inc l
 123+ 812F 72               ld (hl),d
 124+ 8130 2C               inc l
 125+ 8131
 126+ 8131 EB               ex de,hl
 127+ 8132
 128+ 8132 CD DE 90         call NextScan
 129+ 8135 EB               ex de,hl
 130+ 8136
 131+ 8136 73               ld (hl),e
 132+ 8137 2C               inc l
 133+ 8138 72               ld (hl),d
 134+ 8139 2C               inc l
 135+ 813A
 136+ 813A EB               ex de,hl
 137+ 813B
 138+ 813B CD DE 90         call NextScan
 139+ 813E EB               ex de,hl
 140+ 813F
 141+ 813F 73               ld (hl),e
 142+ 8140 2C               inc l
 143+ 8141 72               ld (hl),d
 144+ 8142 2C               inc l
 145+ 8143
 146+ 8143 EB               ex de,hl
 147+ 8144
 148+ 8144 CD DE 90         call NextScan
 149+ 8147 EB               ex de,hl
 150+ 8148
 151+ 8148 73               ld (hl),e
 152+ 8149 2C               inc l
 153+ 814A 72               ld (hl),d
 154+ 814B 2C               inc l
 155+ 814C
 156+ 814C EB               ex de,hl
 157+ 814D
 158+ 814D CD DE 90         call NextScan
 159+ 8150 EB               ex de,hl
 160+ 8151
 161+ 8151 73               ld (hl),e
 162+ 8152 2C               inc l
 163+ 8153 72               ld (hl),d
 164+ 8154 2C               inc l
 165+ 8155
 166+ 8155 EB               ex de,hl
 167+ 8156
 168+ 8156 CD DE 90         call NextScan
 169+ 8159 EB               ex de,hl
 170+ 815A
 171+ 815A 73               ld (hl),e
 172+ 815B 2C               inc l
 173+ 815C 72               ld (hl),d
 174+ 815D 2C               inc l
 175+ 815E
 176+ 815E EB               ex de,hl
 177+ 815F
 178+ 815F CD DE 90         call NextScan
 179+ 8162 EB               ex de,hl
 180+ 8163
 181+ 8163 73               ld (hl),e
 182+ 8164 2C               inc l
 183+ 8165 72               ld (hl),d
 184+ 8166 2C               inc l
 185+ 8167
 186+ 8167 EB               ex de,hl
 187+ 8168
 188+ 8168 CD DE 90         call NextScan
 189+ 816B EB               ex de,hl
 190+ 816C
 191+ 816C 73               ld (hl),e
 192+ 816D 2C               inc l
 193+ 816E 72               ld (hl),d
 194+ 816F 2C               inc l
 195+ 8170
 196+ 8170 EB               ex de,hl
 197+ 8171
 198+ 8171 CD DE 90         call NextScan
 199+ 8174 EB               ex de,hl
 200+ 8175
 201+ 8175 73               ld (hl),e
 202+ 8176 2C               inc l
 203+ 8177 72               ld (hl),d
 204+ 8178 2C               inc l
 205+ 8179
 206+ 8179 EB               ex de,hl
 207+ 817A
 208+ 817A CD DE 90         call NextScan
 209+ 817D EB               ex de,hl
 210+ 817E
 211+ 817E 73               ld (hl),e
 212+ 817F 2C               inc l
 213+ 8180 72               ld (hl),d
 214+ 8181 2C               inc l
 215+ 8182
 216+ 8182              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 217+ 8182
 218+ 8182 22 E4 89         ld (Scanlines_album_SP),hl
 219+ 8185
 220+ 8185              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 221+ 8185
 222+ 8185 08               ex af,af
 223+ 8186
 224+ 8186 F5               push af
 225+ 8187 E1               pop hl
 226+ 8188
 227+ 8188 36 10            ld (hl),16
 228+ 818A
 229+ 818A C9               ret
 230+ 818B
 231+ 818B              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 232+ 818B
 233+ 818B              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 234+ 818B
 235+ 818B 3E 57            ld a,$57
 236+ 818D 94               sub h
 237+ 818E 47               ld b,a
 238+ 818F
 239+ 818F 3E DF            ld a,$df
 240+ 8191 BD               cp l
 241+ 8192 38 04            jr c,1F
 242+ 8194
 243+ 8194 3E 08            ld a,8
 244+ 8196 80               add b
 245+ 8197 47               ld b,a
 246+ 8198
 247+ 8198              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 248+ 8198              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 249+ 8198
 250+ 8198 48           1 ld c,b
 251+ 8199 0C               inc c
 252+ 819A
 253+ 819A CD DE 90     3 call NextScan
 254+ 819D EB               ex de,hl
 255+ 819E
 256+ 819E 73               ld (hl),e
 257+ 819F 2C               inc l
 258+ 81A0 72               ld (hl),d
 259+ 81A1 2C               inc l
 260+ 81A2
 261+ 81A2 EB               ex de,hl
 262+ 81A3
 263+ 81A3 10 F5            djnz 3B
 264+ 81A5
 265+ 81A5 08               ex af,af
 266+ 81A6 F5               push af
 267+ 81A7 E1               pop hl
 268+ 81A8
 269+ 81A8 71               ld (hl),c
 270+ 81A9
 271+ 81A9 C9               ret
 272+ 81AA
 273+ 81AA              ; -----------------------------------------------------------------------------
 274+ 81AA              ;
 275+ 81AA              ;   21/11/23
 276+ 81AA
 277+ 81AA              Limpia_y_reinicia_Scanlines_album
 278+ 81AA
 279+ 81AA              ;   Limpia Scanlines_album.
 280+ 81AA
 281+ 81AA 2A E4 89         ld hl,(Scanlines_album_SP)
 282+ 81AD 7D               ld a,l
 283+ 81AE A7               and a
 284+ 81AF C8               ret z   ;   Salimos si el álbum está vacío.
 285+ 81B0
 286+ 81B0 47               ld b,a
 287+ 81B1 04               inc b
 288+ 81B2
 289+ 81B2 36 00        1 ld (hl),0
 290+ 81B4 2D               dec l
 291+ 81B5 10 FB            djnz 1B
 292+ 81B7
 293+ 81B7              ;   Reinicializa (Scanlines_album_SP).
 294+ 81B7
 295+ 81B7 21 00 80         ld hl,Scanlines_album
 296+ 81BA 22 E4 89         ld (Scanlines_album_SP),hl
 297+ 81BD
 298+ 81BD C9               ret
 299+ 81BE
 300+ 81BE              ; -----------------------------------------------------------------------------
 301+ 81BE              ;
 302+ 81BE              ;   11/03/24
 303+ 81BE
 304+ 81BE 18 FE        Pinta_Sprites jr $
# file closed: Genera_datos_de_impresion.asm
1778  81C0
1779  81C0              	SAVESNA "Pruebas.sna", START
1780  81C0
1781  81C0
1782  81C0
1783  81C0
# file closed: Banco_de_pruebas.asm
