# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF EA 82        	defw $82ea															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	12/10/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $f880													; 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Amadeus equ $dbdc						; ($dbdc - $ddbf), 483 bytes. $1e3. Movimientos masticados de Amadeus.
  32  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $ddc0					; $ddc0 - $eb1b ..... 3419 bytes. $0d5b.
  33  FE01              Almacen_de_movimientos_masticados_Entidad_2 equ $eb1c					; $eb1c -
  34  FE01
  35  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  36  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  37  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  38  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  39  FE01
  40  FE01              Amadeus_disparos_scanlines_album equ $827c	;	($827c - $8281) 		; 6 Bytes, (1 único disparo).
  41  FE01              Amadeus_disparos_scanlines_album_2 equ $8282	;	($8284 - $8289)
  42  FE01
  43  FE01              Entidades_disparos_scanlines_album equ $8288	;	($828c - $82bc)		; 49 bytes, (7 disparos, 7 bytes cada uno), $31.
  44  FE01              Entidades_disparos_scanlines_album_2 equ $82b9	;	($82bf - $82f1)
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82ea
  61  82EA
  62  82EA F5           	push af
  63  82EB E5           	push hl
  64  82EC
  65  82EC              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82EC 21 73 8C     	ld hl,Ctrl_3
  67  82EF CB 46        	bit 0,(hl)
  68  82F1 28 FE        	jr z,$
  69  82F3              ;! -------------------
  70  82F3
  71  82F3              ; Disparos.
  72  82F3
  73  82F3 CD 30 A2     	call Pinta_disparos_Amadeus
  74  82F6 CD 01 9F     	call Pinta_disparos_Entidades
  75  82F9
  76  82F9              ; Shield -----------------------
  77  82F9
  78  82F9              Temporizacion_shield
  79  82F9
  80  82F9 21 9D 8C     	ld hl,Shield
  81  82FC 7E           	ld a,(hl)
  82  82FD A7           	and a
  83  82FE 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  84  8300
  85  8300 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  86  8301
  87  8301 23           	inc hl
  88  8302 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  89  8303
  90  8303 20 17        	jr nz,Incrementa_FRAMES
  91  8305
  92  8305              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  93  8305
  94  8305              Cambio_de_estado
  95  8305
  96  8305              ;	Indica cambio de estado.
  97  8305
  98  8305 23           	inc hl						;	Sitúa en (Shield_3).
  99  8306
 100  8306 CB 5E        	bit 3,(hl)
 101  8308 28 05        	jr z,2F
 102  830A
 103  830A CD 6A 91     	call Inicia_Shield
 104  830D
 105  830D 18 0D        	jr Incrementa_FRAMES
 106  830F
 107  830F CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 108  8311
 109  8311              ;	Carga en (Shield_2) la siguiente temporización.
 110  8311
 111  8311 2A 9B 8C     	ld hl,(Puntero_datos_shield)
 112  8314 23           	inc hl
 113  8315 22 9B 8C     	ld (Puntero_datos_shield),hl
 114  8318 7E           	ld a,(hl)
 115  8319 32 9E 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 116  831C
 117  831C              Incrementa_FRAMES
 118  831C
 119  831C 2A 78 5C     	ld hl,(FRAMES)
 120  831F 23           	inc hl
 121  8320 22 78 5C     	ld (FRAMES),hl
 122  8323
 123  8323 7C           	ld a,h
 124  8324 B5           	or l
 125  8325 20 04        	jr nz,1F
 126  8327
 127  8327 21 7A 5C     	ld hl,FRAMES_3
 128  832A 34           	inc (hl)
 129  832B
 130  832B D5           1 push de
 131  832C C5           	push bc
 132  832D
 133  832D CD 7A 91     	call Actualiza_pantalla
 134  8330
 135  8330 C1           	pop bc
 136  8331 D1           	pop de
 137  8332 E1           	pop hl
 138  8333 F1           	pop af
 139  8334
 140  8334 FB           	ei
 141  8335
 142  8335 C9           	ret
 143  8336
 144  8336              ; --------------------------------------------------------------------------------
 145  8336
 146  8336              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 8336              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8336              ;
   3+ 8336              ;	17/02/23
   4+ 8336              ;
   5+ 8336              ;	Sprites e índices.
   6+ 8336
   7+ 8336              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 18 00 00     Disparo_de_entidad_derecho DEFB $18,$00,$00
  12+ 8373 00 00 18     Disparo_de_entidad_izquierdo DEFB $00,$00,$18
  13+ 8376
  14+ 8376 7E 83        Indice_disparo_Amadeus defw Disparo_0
  15+ 8378 82 83        	defw Disparo_f9
  16+ 837A 86 83        	defw Disparo_fb
  17+ 837C 8A 83        	defw Disparo_fd
  18+ 837E
  19+ 837E              ; Disparo (CTRL_DESPLZ)="0".
  20+ 837E 01 80        Disparo_0 DEFB $01,$80
  21+ 8380 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  22+ 8382              ; Disparo (CTRL_DESPLZ)="f9"
  23+ 8382 00 60        Disparo_f9 DEFB $00,$60
  24+ 8384 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  25+ 8386              ; Disparo (CTRL_DESPLZ)="fb"
  26+ 8386 18 00        Disparo_fb DEFB $18,$00
  27+ 8388 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  28+ 838A              ; Disparo (CTRL_DESPLZ)="fd"
  29+ 838A 06 00        Disparo_fd DEFB $06,$00
  30+ 838C 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  31+ 838E
  32+ 838E              ; ----------------------------------------------------------------------------------------
  33+ 838E
  34+ 838E              ; Badsat_izq. 2x2.
  35+ 838E
  36+ 838E 9E 83        Indice_Badsat_izq defw Badsat_izquierda
  37+ 8390 00 85        	defw Badsat_izq_fe
  38+ 8392 C0 84        	defw Badsat_izq_fd
  39+ 8394 90 84        	defw Badsat_izq_fc
  40+ 8396 60 84        	defw Badsat_izq_fb
  41+ 8398 30 84        	defw Badsat_izq_fa
  42+ 839A 00 84        	defw Badsat_izq_f9
  43+ 839C CE 83        	defw Badsat_izq_f8
  44+ 839E
  45+ 839E 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  46+ 83A1 02 14 00     	DEFB 	$02,$14,$00
  47+ 83A4 02 2A 00     	DEFB 	$02,$2A,$00
  48+ 83A7 02 55 00     	DEFB 	$02,$55,$00
  49+ 83AA 02 AA 00     	DEFB	$02,$AA,$00
  50+ 83AD 02 54 00     	DEFB 	$02,$54,$00
  51+ 83B0 7F E8 00     	DEFB 	$7F,$E8,$00
  52+ 83B3 03 60 00     	DEFB 	$03,$60,$00
  53+ 83B6 0A E0 00     	DEFB	$0A,$E0,$00
  54+ 83B9 17 F8 00     	DEFB 	$17,$F8,$00
  55+ 83BC 2B E8 00     	DEFB 	$2B,$E8,$00
  56+ 83BF 54 40 00     	DEFB 	$54,$40,$00
  57+ 83C2 AA 60 00     	DEFB	$AA,$60,$00
  58+ 83C5 54 00 00     	DEFB 	$54,$00,$00
  59+ 83C8 28 00 00     	DEFB 	$28,$00,$00
  60+ 83CB 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  61+ 83CE
  62+ 83CE 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  62+ 83D2 0A 00 01 15
  63+ 83D6 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  63+ 83DA 01 55 00 01
  64+ 83DE 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  64+ 83E2 00 01 B0 00
  65+ 83E6 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  65+ 83EA FC 00 15 F4
  66+ 83EE 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  66+ 83F2 55 30 00 2A
  67+ 83F6 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  67+ 83FA 00 08 00 00
  68+ 83FE
  69+ 83FE              	org $8400
  70+ 8400
  71+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  71+ 8404 85 00 00 8A
  72+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  72+ 840C 00 AA 80 00
  73+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  73+ 8414 00 00 D8 00
  74+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  74+ 841C FE 00 0A FA
  75+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  75+ 8424 2A 98 00 15
  76+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  76+ 842C 00 04 00 00
  77+ 8430
  78+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  78+ 8434 42 80 00 45
  79+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  79+ 843C 00 55 40 00
  80+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  80+ 8444 00 00 6C 00
  81+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  81+ 844C FF 00 05 7D
  82+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  82+ 8454 15 4C 00 0A
  83+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  83+ 845C 00 02 00 00
  84+ 8460
  85+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  85+ 8464 21 40 00 22
  86+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  86+ 846C 00 2A A0 00
  87+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  87+ 8474 80 00 36 00
  88+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  88+ 847C 7F 80 02 BE
  89+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  89+ 8484 0A A6 00 05
  90+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  90+ 848C 00 01 00 00
  91+ 8490
  92+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  92+ 8494 10 A0 00 11
  93+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  93+ 849C 00 15 50 00
  94+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  94+ 84A4 40 00 1B 00
  95+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  95+ 84AC BF C0 01 5F
  96+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  96+ 84B4 05 53 00 02
  97+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  97+ 84BC 00 00 80 00
  98+ 84C0
  99+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  99+ 84C4 08 50 00 08
 100+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 100+ 84CC 00 0A A8 00
 101+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 101+ 84D4 A0 00 0D 80
 102+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 102+ 84DC 5F F8 00 AF
 103+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 103+ 84E4 02 A9 00 01
 104+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 104+ 84EC 00 00 40 00
 105+ 84F0
 106+ 84F0              	org $8500
 107+ 8500
 108+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 108+ 8504 04 28 00 04
 109+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 109+ 850C 00 05 54 00
 110+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 110+ 8514 D0 00 06 C0
 111+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 111+ 851C 2F FC 00 57
 112+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 112+ 8524 01 54 80 00
 113+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 113+ 852C 00 00 20 00
 114+ 8530
 115+ 8530
 116+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 117+ 8532 70 85        	defw Badsat_der_f8
 118+ 8534 A0 85        	defw Badsat_der_f9
 119+ 8536 D0 85        	defw Badsat_der_fa
 120+ 8538 00 86        	defw Badsat_der_fb
 121+ 853A 30 86        	defw Badsat_der_fc
 122+ 853C 60 86        	defw Badsat_der_fd
 123+ 853E 90 86        	defw Badsat_der_fe
 124+ 8540
 125+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 126+ 8543 28 40 00     	DEFB    $28,$40,$00
 127+ 8546 54 40 00     	DEFB	$54,$40,$00
 128+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 129+ 854C 55 40 00     	DEFB	$55,$40,$00
 130+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 131+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 132+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 133+ 8558 07 50 00     	DEFB	$07,$50,$00
 134+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 135+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 136+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 137+ 8564 06 55 00     	DEFB	$06,$55,$00
 138+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 139+ 856A 00 14 00     	DEFB	$00,$14,$00
 140+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 141+ 8570
 142+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 142+ 8574 20 00 2A 20
 143+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 143+ 857C 2A A0 00 15
 144+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 144+ 8584 00 03 60 00
 145+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 145+ 858C F4 00 0B EA
 146+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 146+ 8594 03 2A 80 00
 147+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 147+ 859C 00 00 04 00
 148+ 85A0
 149+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 149+ 85A4 10 00 15 10
 150+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 150+ 85AC 15 50 00 0A
 151+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 151+ 85B4 80 01 B0 00
 152+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 152+ 85BC FA 00 05 F5
 153+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 153+ 85C4 01 95 40 00
 154+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 154+ 85CC 00 00 02 00
 155+ 85D0
 156+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 156+ 85D4 08 00 0A 88
 157+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 157+ 85DC 0A A8 00 05
 158+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 158+ 85E4 C0 00 D8 00
 159+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 159+ 85EC FD 00 02 FA
 160+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 160+ 85F4 00 CA A0 00
 161+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 161+ 85FC 80 00 01 00
 162+ 8600
 163+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 163+ 8604 84 00 05 44
 164+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 164+ 860C 05 54 00 02
 165+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 165+ 8614 E0 00 6C 00
 166+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 166+ 861C FE 80 01 7D
 167+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 167+ 8624 00 65 50 00
 168+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 168+ 862C 40 00 00 80
 169+ 8630
 170+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 170+ 8634 42 00 02 A2
 171+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 171+ 863C 02 AA 00 01
 172+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 172+ 8644 F0 00 36 00
 173+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 173+ 864C FF 40 00 BE
 174+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 174+ 8654 00 32 A8 00
 175+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 175+ 865C A0 00 00 40
 176+ 8660
 177+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 177+ 8664 A1 00 01 51
 178+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 178+ 866C 01 55 00 00
 179+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 179+ 8674 F8 00 1B 00
 180+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 180+ 867C FF A0 00 1F
 181+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 181+ 8684 00 09 54 00
 182+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 182+ 868C 50 00 00 20
 183+ 8690
 184+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 184+ 8694 50 80 00 A8
 185+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 185+ 869C 00 AA 80 00
 186+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 186+ 86A4 FC 00 0D 80
 187+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 187+ 86AC FF D0 00 0F
 188+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 188+ 86B4 00 04 AA 00
 189+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 189+ 86BC 28 00 00 10
 190+ 86C0
 191+ 86C0              ; ----------------------------------------------------------------------------------------
 192+ 86C0
 193+ 86C0              ; Amadeus. 2x2.
 194+ 86C0
 195+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 196+ 86C2 00 00        	defw 0
 197+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 86C6 00 00        	defw 0
 199+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 86CA 00 00        	defw 0
 201+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 203+ 86D0
 204+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 205+ 86D2 00 00        	defw 0
 206+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 86D6 00 00        	defw 0
 208+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 86DA 00 00        	defw 0
 210+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 212+ 86E0
 213+ 86E0              	org $8700
 214+ 8700
 215+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 216+ 8703 23 C4 00     	DEFB	$23,$C4,0
 217+ 8706 26 64 00     	DEFB	$26,$64,0
 218+ 8709 24 24 00     	DEFB	$24,$24,0
 219+ 870C 2C 34 00     	DEFB	$2C,$34,0
 220+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 221+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 222+ 8715 67 E6 00     	DEFB	$67,$E6,0
 223+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 224+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 225+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 226+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 227+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 228+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 229+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 230+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 231+ 8730
 232+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 232+ 8734 F1 00 09 99
 233+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 233+ 873C 0B 0D 00 1B
 234+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 234+ 8744 80 19 F9 80
 235+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 235+ 874C F3 C0 3D FB
 236+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 236+ 8754 3E F7 C0 3E
 237+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 237+ 875C 40 1C 63 80
 238+ 8760
 239+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 239+ 8764 3C 40 02 66
 240+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 240+ 876C 02 C3 40 06
 241+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 241+ 8774 60 06 7E 60
 242+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 242+ 877C 3C F0 0F 7E
 243+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 243+ 8784 0F BD F0 0F
 244+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 244+ 878C 10 07 18 E0
 245+ 8790
 246+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 246+ 8794 8F 10 00 99
 247+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 247+ 879C 00 B0 D0 01
 248+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 248+ 87A4 D8 01 9F 98
 249+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 249+ 87AC CF 3C 03 DF
 250+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 250+ 87B4 03 EF 7C 03
 251+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 251+ 87BC 44 01 C6 38
 252+ 87C0
 253+ 87C0              ; ----------------------------------------------------------------------------------------
 254+ 87C0
 255+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 256+ 87C2 00 88        	defw Explosion_entidades_2
 257+ 87C4 30 88        	defw Explosion_entidades_3
 258+ 87C6
 259+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 260+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 261+ 87CC 04 38 40     	DEFB	$04,$38,$40
 262+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 263+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 264+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 265+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 266+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 267+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 268+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 269+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 270+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 271+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 272+ 87ED 03 00 40     	DEFB	$03,$00,$40
 273+ 87F0 04 00 00     	DEFB	$04,$00,$00
 274+ 87F3 08 00 00     	DEFB	$08,$00,$00
 275+ 87F6
 276+ 87F6              	org $8800
 277+ 8800
 278+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 278+ 8804 38 10 03 BC
 279+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 279+ 880C 04 06 C0 00
 280+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 280+ 8814 00 03 DD 80
 281+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 281+ 881C 3A 70 01 9C
 282+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 282+ 8824 04 F8 80 06
 283+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 283+ 882C 00 00 00 00
 284+ 8830
 285+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 285+ 8834 00 20 08 00
 286+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 286+ 883C 00 06 00 00
 287+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 287+ 8844 00 00 14 30
 288+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 288+ 884C 38 00 01 08
 289+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 289+ 8854 00 80 00 04
 290+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 290+ 885C 10 08 00 20
 291+ 8860
 292+ 8860              ; ------------------------------------------
 293+ 8860
 294+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 295+ 8862 96 88        	defw Explosion_Amadeus_2
 296+ 8864 C6 88        	defw Explosion_Amadeus_3
 297+ 8866
 298+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 299+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 300+ 886C 02 66 56     	DEFB	$02,$66,$56
 301+ 886F 02 42 48     	DEFB	$02,$42,$48
 302+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 303+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 304+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 305+ 887B 06 79 68     	DEFB	$06,$79,$68
 306+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 307+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 308+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 309+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 310+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 311+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 312+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 313+ 8893 07 19 80     	DEFB	$07,$19,$80
 314+ 8896
 315+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 316+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 317+ 889C 00 66 56     	DEFB	$00,$66,$56
 318+ 889F 04 42 48     	DEFB	$04,$42,$48
 319+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 320+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 321+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 322+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 323+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 324+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 325+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 326+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 327+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 328+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 329+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 330+ 88C3 07 19 80     	DEFB	$07,$19,$80
 331+ 88C6
 332+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 333+ 88C9 00 00 00     	DEFB	$00,$00,$00
 334+ 88CC 00 00 00     	DEFB	$00,$00,$00
 335+ 88CF 00 00 40     	DEFB	$00,$00,$40
 336+ 88D2 00 00 30     	DEFB	$00,$00,$30
 337+ 88D5 00 00 08     	DEFB	$00,$00,$08
 338+ 88D8 00 82 40     	DEFB	$00,$82,$40
 339+ 88DB 04 04 68     	DEFB	$04,$04,$68
 340+ 88DE 04 20 58     	DEFB	$04,$20,$58
 341+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 342+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 343+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 344+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 345+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 346+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 347+ 88F3 07 11 80     	DEFB	$07,$11,$80
 348+ 88F6
# file closed: Sprites_e_indices.asm
 147  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B C0 DD        Indice_de_almacenes_de_mov_masticados defw Almacen_de_movimientos_masticados_Entidad_1
  29+ 891D 1C EB        	defw Almacen_de_movimientos_masticados_Entidad_2
  30+ 891F              ;	defw ...
  31+ 891F              ; 	defw ...
  32+ 891F 00 00        	defw 0
  33+ 8921
  34+ 8921 44 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  35+ 8923              ;	defw ...
  36+ 8923              ; 	defw ...
  37+ 8923 00 00        	defw 0
  38+ 8925
  39+ 8925              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  40+ 8925
  41+ 8925 00 00        Disparo_Amad defw 0									; Puntero objeto.
  42+ 8927 00 00        	defw 0											; Puntero de impresión.
  43+ 8929
  44+ 8929 60 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892B 5A 89        	defw Disparo_2
  46+ 892D 54 89        	defw Disparo_3
  47+ 892F 4E 89        	defw Disparo_4
  48+ 8931 48 89        	defw Disparo_5
  49+ 8933 42 89        	defw Disparo_6
  50+ 8935 3C 89        	defw Disparo_7
  51+ 8937
  52+ 8937 00 00 00     	db 0,0,0								; Puntero objeto.
  53+ 893A 00 00        	defw 0									; Puntero de impresión.
  54+ 893C 00           Disparo_7 db 0	     						; Control.
  55+ 893D
  56+ 893D 00 00 00     	db 0,0,0								; Puntero objeto.
  57+ 8940 00 00        	defw 0									; Puntero de impresión.
  58+ 8942 00           Disparo_6 db 0		    					; Control.
  59+ 8943
  60+ 8943 00 00 00     	db 0,0,0								; Puntero objeto.
  61+ 8946 00 00        	defw 0									; Puntero de impresión.
  62+ 8948 00           Disparo_5 db 0			    				; Control.
  63+ 8949
  64+ 8949 00 00 00     	db 0,0,0								; Puntero objeto.
  65+ 894C 00 00        	defw 0									; Puntero de impresión.
  66+ 894E 00           Disparo_4 db 0				     			; Control.
  67+ 894F
  68+ 894F 00 00 00     	db 0,0,0								; Puntero objeto.
  69+ 8952 00 00        	defw 0									; Puntero de impresión.
  70+ 8954 00           Disparo_3 db 0					    		; Control.
  71+ 8955
  72+ 8955 00 00 00     	db 0,0,0								; Puntero objeto.
  73+ 8958 00 00        	defw 0									; Puntero de impresión.
  74+ 895A 00           Disparo_2 db 0						    	; Control.
  75+ 895B
  76+ 895B 00 00 00     	db 0,0,0								; Puntero objeto.
  77+ 895E 00 00        	defw 0									; Puntero de impresión.
  78+ 8960 00           Disparo_1 db 0							    ; Control.
  79+ 8961
  80+ 8961              ; -------------------------------------------------------------------------------------
  81+ 8961              ;
  82+ 8961              ;	Índice de cajas_Masters.
  83+ 8961              ;
  84+ 8961              ;	11/11/24
  85+ 8961              ;
  86+ 8961              ;	12 bytes.
  87+ 8961
  88+ 8961              Indice_de_cajas_master
  89+ 8961
  90+ 8961 6B 89        	defw Caja_master_1
  91+ 8963 77 89        	defw Caja_master_2
  92+ 8965 83 89        	defw Caja_master_3
  93+ 8967 8F 89        	defw Caja_master_4
  94+ 8969 9B 89        	defw Caja_master_5
  95+ 896B
  96+ 896B 00 00 00     Caja_master_1 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
  97+ 896E 00           	db 0												; (Contador_de_vueltas).
  98+ 896F 00           	db 0												; (Impacto).
  99+ 8970 00 00        	defw 0												; (Puntero_de_impresion).
 100+ 8972 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 101+ 8974 00 00        	defw 0 												; (Contador_de_mov_masticados).
 102+ 8976 00           	db 0												; (Velocidad).
 103+ 8977
 104+ 8977              ; ---------- ---------- ---------- ---------- ----------
 105+ 8977
 106+ 8977 00 00 00     Caja_master_2 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 107+ 897A 00           	db 0 												; (Contador_de_vueltas).
 108+ 897B 00           	db 0												; (Impacto).
 109+ 897C 00 00        	defw 0												; (Puntero_de_impresion).
 110+ 897E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 111+ 8980 00 00        	defw 0 												; (Contador_de_mov_masticados).
 112+ 8982 00           	db 0												; (Velocidad).
 113+ 8983
 114+ 8983              ; ---------- ---------- ---------- ---------- ----------
 115+ 8983
 116+ 8983 00 00 00     Caja_master_3 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 117+ 8986 00           	db 0 												; (Contador_de_vueltas).
 118+ 8987 00           	db 0												; (Impacto).
 119+ 8988 00 00        	defw 0												; (Puntero_de_impresion).
 120+ 898A 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 121+ 898C 00 00        	defw 0 												; (Contador_de_mov_masticados).
 122+ 898E 00           	db 0												; (Velocidad).
 123+ 898F
 124+ 898F              ; ---------- ---------- ---------- ---------- ----------
 125+ 898F
 126+ 898F 00 00 00     Caja_master_4 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 127+ 8992 00           	db 0 												; (Contador_de_vueltas).
 128+ 8993 00           	db 0												; (Impacto).
 129+ 8994 00 00        	defw 0												; (Puntero_de_impresion).
 130+ 8996 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 131+ 8998 00 00        	defw 0 												; (Contador_de_mov_masticados).
 132+ 899A 00           	db 0												; (Velocidad).
 133+ 899B
 134+ 899B              ; ---------- ---------- ---------- ---------- ----------
 135+ 899B
 136+ 899B 00 00 00     Caja_master_5 db 0,0,0									; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 137+ 899E 00           	db 0 												; (Contador_de_vueltas).
 138+ 899F 00           	db 0												; (Impacto).
 139+ 89A0 00 00        	defw 0												; (Puntero_de_impresion).
 140+ 89A2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 141+ 89A4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 142+ 89A6 00           	db 0												; (Velocidad).
 143+ 89A7
 144+ 89A7              ; -------------------------------------------------------------------------------------
 145+ 89A7              ;
 146+ 89A7              ;	Índice de cajas de entidades.
 147+ 89A7              ;
 148+ 89A7              ;	18/1/24
 149+ 89A7              ;
 150+ 89A7
 151+ 89A7              Indice_de_cajas_de_entidades
 152+ 89A7
 153+ 89A7 C5 89        	defw Caja_1
 154+ 89A9 D1 89        	defw Caja_2
 155+ 89AB DD 89        	defw Caja_3
 156+ 89AD E9 89        	defw Caja_4
 157+ 89AF F5 89        	defw Caja_5
 158+ 89B1 01 8A        	defw Caja_6
 159+ 89B3 0D 8A        	defw Caja_7
 160+ 89B5
 161+ 89B5 00 00        	defw 0
 162+ 89B7 00 00        	defw 0
 163+ 89B9
 164+ 89B9              ; -------------------------
 165+ 89B9
 166+ 89B9              ; Relleno para que no se corrompa el movimiento. ?????
 167+ 89B9
 168+ 89B9              ;	db 0
 169+ 89B9
 170+ 89B9              ; ---------- ---------- ---------- ---------- ----------
 171+ 89B9              ;
 172+ 89B9              ;	28/05/24
 173+ 89B9              ;
 174+ 89B9              ; 	Cada caja tiene 14 bytes !!!
 175+ 89B9              ;
 176+ 89B9              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 177+ 89B9
 178+ 89B9 00           Amadeus_BOX db 0										; (Tipo).
 179+ 89BA 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 180+ 89BC 00           	db 0												; (Contador_de_vueltas).
 181+ 89BD 00           Impacto_Amadeus	db 0									; (Impacto).
 182+ 89BE 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 183+ 89C0 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C2 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 185+ 89C4 00           	db 0												; (Velocidad).
 186+ 89C5
 187+ 89C5              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C5              ;
 189+ 89C5              ;	22/01/24
 190+ 89C5              ;
 191+ 89C5              ; 	Cada caja tiene 12 bytes !!!
 192+ 89C5
 193+ 89C5 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 194+ 89C8 00           	db 0												; (Contador_de_vueltas).
 195+ 89C9 00           	db 0												; (Impacto).
 196+ 89CA 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 89CC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 89CE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 89D0 00           	db 0												; (Velocidad).
 200+ 89D1
 201+ 89D1              ; ---------- ---------- ---------- ---------- ----------
 202+ 89D1
 203+ 89D1 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 204+ 89D4 00           	db 0 												; (Contador_de_vueltas).
 205+ 89D5 00           	db 0												; (Impacto).
 206+ 89D6 00 00        	defw 0												; (Puntero_de_impresion).
 207+ 89D8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 208+ 89DA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 209+ 89DC 00           	db 0												; (Velocidad).
 210+ 89DD
 211+ 89DD              ; ---------- ---------- ---------- ---------- ----------
 212+ 89DD
 213+ 89DD 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 214+ 89E0 00           	db 0 												; (Contador_de_vueltas).
 215+ 89E1 00           	db 0												; (Impacto).
 216+ 89E2 00 00        	defw 0												; (Puntero_de_impresion).
 217+ 89E4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 218+ 89E6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 219+ 89E8 00           	db 0												; (Velocidad).
 220+ 89E9
 221+ 89E9              ; ---------- ---------- ---------- ---------- ----------
 222+ 89E9
 223+ 89E9 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 224+ 89EC 00           	db 0 												; (Contador_de_vueltas).
 225+ 89ED 00           	db 0												; (Impacto).
 226+ 89EE 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 89F0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 89F2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 89F4 00           	db 0												; (Velocidad).
 230+ 89F5
 231+ 89F5              ; ---------- ---------- ---------- ---------- ----------
 232+ 89F5
 233+ 89F5 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 234+ 89F8 00           	db 0 												; (Contador_de_vueltas).
 235+ 89F9 00           	db 0												; (Impacto).
 236+ 89FA 00 00        	defw 0												; (Puntero_de_impresion).
 237+ 89FC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 238+ 89FE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 239+ 8A00 00           	db 0												; (Velocidad).
 240+ 8A01
 241+ 8A01              ; ---------- ---------- ---------- ---------- ----------
 242+ 8A01
 243+ 8A01 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 244+ 8A04 00           	db 0 												; (Contador_de_vueltas).
 245+ 8A05 00           	db 0												; (Impacto).
 246+ 8A06 00 00        	defw 0												; (Puntero_de_impresion).
 247+ 8A08 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 248+ 8A0A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 249+ 8A0C 00           	db 0												; (Velocidad).
 250+ 8A0D
 251+ 8A0D              ; ---------- ---------- ---------- ---------- ----------
 252+ 8A0D
 253+ 8A0D 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 254+ 8A10 00           	db 0 												; (Contador_de_vueltas).
 255+ 8A11 00           	db 0												; (Impacto).
 256+ 8A12 00 00        	defw 0												; (Puntero_de_impresion).
 257+ 8A14 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 258+ 8A16 00 00        	defw 0 												; (Contador_de_mov_masticados).
 259+ 8A18 00           	db 0												; (Velocidad).
 260+ 8A19
 261+ 8A19              ; -------------------------------------------------------------------------------------
 262+ 8A19              ;
 263+ 8A19              ;	10/11/24
 264+ 8A19              ;
 265+ 8A19              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 266+ 8A19              ;
 267+ 8A19              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 268+ 8A19              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 269+ 8A19              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 270+ 8A19              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 271+ 8A19
 272+ 8A19              Indice_de_definiciones_de_entidades
 273+ 8A19
 274+ 8A19 1D 8A        	defw Entidad_1
 275+ 8A1B 2A 8A        	defw Entidad_2
 276+ 8A1D
 277+ 8A1D              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 278+ 8A1D
 279+ 8A1D              ;	BADSAT, (Satélite malvado). ------------------------------------------------------------------------------------------------------------------------------------
 280+ 8A1D
 281+ 8A1D 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 282+ 8A20 01           	db 1												; (Contador_de_vueltas).
 283+ 8A21 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 284+ 8A23 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 285+ 8A25
 286+ 8A25              ; Aleatoriedad en la posición de inicio de la entidad.
 287+ 8A25              ; BadSat siempre aparecerá por la parte superior de la pantalla, $40xx. (Cuad_objeto) tendrá valor 1 o 2 dependiendo de si aparece por la mitad izquierda o derecha.
 288+ 8A25
 289+ 8A25 03 40        Pos_inicio_entidad1	defw $4003	                        ; (Posicion_inicio).
 290+ 8A27 00           	db 0												; (Cuad_objeto).
 291+ 8A28
 292+ 8A28 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 293+ 8A2A
 294+ 8A2A              ;	-----------------------------------------------------------------------------------------------------------------------------------------------------------------
 295+ 8A2A
 296+ 8A2A 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 297+ 8A2D 01           	db 1												; (Contador_de_vueltas).
 298+ 8A2E 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 299+ 8A30 8E 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 300+ 8A32 40 50        	defw $5040                                      	; (Posicion_inicio).
 301+ 8A34 01           	db 1												; (Cuad_objeto).
 302+ 8A35 C0 DD        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 303+ 8A37
 304+ 8A37              ; -------------------------------------------------------------------------------------
 305+ 8A37              ;
 306+ 8A37              ;	28/05/24
 307+ 8A37              ;
 308+ 8A37              ;	Definición de Amadeus.
 309+ 8A37              ;
 310+ 8A37              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 311+ 8A37              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 312+ 8A37
 313+ 8A37 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 314+ 8A3A 00           	db 0												; (Contador_de_vueltas).
 315+ 8A3B C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 316+ 8A3D D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 317+ 8A3F C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 318+ 8A41 03           	db 3												; (Cuad_objeto).
 319+ 8A42 DC DB        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 148  8A44              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A44
   2+ 8A44
   3+ 8A44              ;   07/07/23
   4+ 8A44              ;
   5+ 8A44              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A44              ;
   7+ 8A44              ;   Codificación:
   8+ 8A44              ;
   9+ 8A44              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A44              ;
  11+ 8A44              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A44              ;
  13+ 8A44              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A44              ;
  15+ 8A44              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A44              ;
  17+ 8A44              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A44              ;                               ..... %01000010 Vel_up 4
  19+ 8A44              ;                                               Vel_down 2
  20+ 8A44              ;                               ..... $42
  21+ 8A44              ;
  22+ 8A44              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A44              ;
  24+ 8A44              ;                               ..... %01000010 Vel_left 4
  25+ 8A44              ;                                               Vel_right 2
  26+ 8A44              ;                               ..... $42
  27+ 8A44              ;
  28+ 8A44              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A44              ;
  30+ 8A44              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A44              ;
  32+ 8A44              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A44              ;
  34+ 8A44              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A44              ;                                     $53
  36+ 8A44              ;
  37+ 8A44              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A44              ;
  39+ 8A44              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A44              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A44              ;
  42+ 8A44              ;                       Arriba ..... $81
  43+ 8A44              ;                       Arriba - izquierda ..... $a1
  44+ 8A44              ;                       Arriba - derecha ..... $91
  45+ 8A44              ;
  46+ 8A44              ;                       Abajo ..... $41
  47+ 8A44              ;                       Abajo - izquierda ..... $61
  48+ 8A44              ;                       Abajo - derecha ..... $51
  49+ 8A44              ;
  50+ 8A44              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A44              ;
  52+ 8A44              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A44              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A44              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A44              ;
  56+ 8A44              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A44              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A44              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A44              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A44              ;
  61+ 8A44              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A44              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A44              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A44              ;
  65+ 8A44              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A44              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A44              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A44              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A44
  70+ 8A44              ; ----- ----- ----- ----- -----
  71+ 8A44
  72+ 8A44 70 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A46 78 8A            defw F_1
  74+ 8A48 82 8A            defw F_2
  75+ 8A4A 8C 8A            defw Codo_abajo_derecha
  76+ 8A4C C0 8A            defw Derecha_y_subiendo
  77+ 8A4E CA 8A            defw Derecha_y_subiendo_1
  78+ 8A50 D4 8A            defw F_3
  79+ 8A52 DE 8A            defw F_4
  80+ 8A54 E8 8A            defw Derecha_y_bajando
  81+ 8A56 F2 8A            defw Derecha_y_bajando_1
  82+ 8A58 FC 8A            defw Derecha_y_bajando_2
  83+ 8A5A 06 8B            defw Codo_derecha_abajo
  84+ 8A5C 36 8B            defw Codo_abajo_izq.
  85+ 8A5E 6A 8B            defw Izquierda_y_subiendo
  86+ 8A60 74 8B            defw Izquierda_y_subiendo_1
  87+ 8A62 7E 8B            defw F_5
  88+ 8A64 88 8B            defw F_6
  89+ 8A66 92 8B            defw Izquierda_y_bajando
  90+ 8A68 9C 8B            defw Izquierda_y_bajando_1
  91+ 8A6A A6 8B            defw Izquierda_y_bajando_2
  92+ 8A6C B0 8B            defw Codo_izquierda_abajo
  93+ 8A6E 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A70
  95+ 8A70 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A74 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A78
  98+ 8A78 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A7C 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A80 08 00
 100+ 8A82
 101+ 8A82 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A86 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A8A 0F FE
 103+ 8A8C
 104+ 8A8C 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A90 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A94 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A98 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A9C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8AA0 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8AA4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8AA8 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8AAC 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AB0 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AB4 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AB8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8ABC 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AC0
 118+ 8AC0 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AC4 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8AC8 06 00
 120+ 8ACA
 121+ 8ACA 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8ACE 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AD2 02 00
 123+ 8AD4
 124+ 8AD4 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8AD8 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ADC 04 00
 126+ 8ADE
 127+ 8ADE 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AE2 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AE6 08 00
 129+ 8AE8
 130+ 8AE8 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AEC 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AF0 02 00
 132+ 8AF2
 133+ 8AF2 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AF6 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AFA 06 00
 135+ 8AFC
 136+ 8AFC 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8B00 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8B04 06 00
 138+ 8B06
 139+ 8B06              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8B06
 141+ 8B06 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8B0A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B0E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B12 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B16 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B1A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B1E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B22 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B26 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B2A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B2E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B32 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B36
 154+ 8B36 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B3A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B3E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B42 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B46 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B4A 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B4E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B52 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B56 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B5A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B5E 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B62 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B66 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B6A
 168+ 8B6A 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B6E 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B72 06 00
 170+ 8B74
 171+ 8B74 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B78 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B7C 02 00
 173+ 8B7E
 174+ 8B7E 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B82 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B86 04 00
 176+ 8B88
 177+ 8B88 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B8C 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B90 08 00
 179+ 8B92
 180+ 8B92 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B96 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B9A 02 00
 182+ 8B9C
 183+ 8B9C 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8BA0 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8BA4 06 00
 185+ 8BA6
 186+ 8BA6 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8BAA 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BAE 06 00
 188+ 8BB0
 189+ 8BB0 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BB4 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BB8 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BBC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BC0 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BC4 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BC8 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BCC 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BD0 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BD4 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BD8 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BDC 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BE0
 202+ 8BE0
 203+ 8BE0
 204+ 8BE0
 205+ 8BE0
 206+ 8BE0
 207+ 8BE0
 208+ 8BE0
 209+ 8BE0
 210+ 8BE0
# file closed: Patrones_de_mov.asm
 149  8BE0              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BE0              ; 19/1/24
   2+ 8BE0
   3+ 8BE0              Indice_de_niveles
   4+ 8BE0
   5+ 8BE0 E8 8B        	defw Nivel_1
   6+ 8BE2 EF 8B        	defw Nivel_2
   7+ 8BE4
   8+ 8BE4              ;	...
   9+ 8BE4              ;	...
  10+ 8BE4              ;	+ Niveles ...
  11+ 8BE4
  12+ 8BE4 00 00        	defw 0
  13+ 8BE6 00 00        	defw 0
  14+ 8BE8
  15+ 8BE8 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BE9 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  16+ 8BED 01 01
  17+ 8BEF
  18+ 8BEF 0C           Nivel_2 db 12									; Nº de entidades.
  19+ 8BF0 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 8BF4 01 02
  20+ 8BF6 02 01 01 01  	db 2,1,1,1,1,2
  20+ 8BFA 01 02
  21+ 8BFC
# file closed: Niveles.asm
 150  8BFC
 151  8BFC              ; --------------------------------------------------------------------------------
 152  8BFC              ;
 153  8BFC              ; 12/05/24
 154  8BFC              ;
 155  8BFC              ; Parámetros DRAW.
 156  8BFC              ;
 157  8BFC
 158  8BFC              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  8BFC
 160  8BFC 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  8BFD              ;															- Patrón de movimiento.
 162  8BFD 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 163  8BFE 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 164  8BFF
 165  8BFF 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 166  8C00              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 167  8C00
 168  8C00              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 169  8C00              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 170  8C00              ; Ejemplos.
 171  8C00
 172  8C00              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 173  8C00              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 174  8C00              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 175  8C00              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 176  8C00              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 177  8C00
 178  8C00 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  8C01              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  8C01              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  8C01
 182  8C01 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 183  8C03              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 184  8C03
 185  8C03 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 186  8C05
 187  8C05              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 188  8C05
 189  8C05 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 190  8C07              ;														; _palabras que componen el "movimiento_masticado".
 191  8C07
 192  8C07              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 193  8C07
 194  8C07 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 195  8C08              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 196  8C08              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 197  8C08              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 198  8C08              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 199  8C08
 200  8C08 00           Ctrl_2 db 0
 201  8C09              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  8C09              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 203  8C09              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  8C09              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  8C09              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  8C09              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  8C09              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  8C09              ;
 209  8C09              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  8C09              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  8C09              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  8C09              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  8C09              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  8C09              ;														BIT 4, ???
 215  8C09              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 216  8C09
 217  8C09 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 218  8C0A              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 219  8C0A              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 220  8C0A              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 221  8C0A              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 222  8C0A              ;
 223  8C0A              ; 														DESCRIPCIÖN:
 224  8C0A              ;
 225  8C0A              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 226  8C0A              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 227  8C0A              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 228  8C0A              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 229  8C0A              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 230  8C0A              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 231  8C0A              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 232  8C0A              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 233  8C0A              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 234  8C0A              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 235  8C0A              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 236  8C0A              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 237  8C0A              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 238  8C0A              ;
 239  8C0A              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 240  8C0A              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 241  8C0A              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 242  8C0A
 243  8C0A              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 244  8C0A
 245  8C0A 00           Filas db 0												; Filas. [DRAW]
 246  8C0B 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 247  8C0C 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 248  8C0E 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 249  8C10
 250  8C10              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 251  8C10
 252  8C10 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 253  8C11              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 254  8C11              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 255  8C11
 256  8C11              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 257  8C11
 258  8C11              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 259  8C11              ;
 260  8C11              ;	COLORES: 0 ..... NEGRO
 261  8C11              ;    		 1 ..... AZUL
 262  8C11              ; 			 2 ..... ROJO
 263  8C11              ;			 3 ..... MAGENTA
 264  8C11              ; 			 4 ..... VERDE
 265  8C11              ; 			 5 ..... CIAN
 266  8C11              ;			 6 ..... AMARILLO
 267  8C11              ; 			 7 ..... BLANCO
 268  8C11
 269  8C11 00 00        Indice_Sprite_der defw 0
 270  8C13 00 00        Indice_Sprite_izq defw 0
 271  8C15 00 00        Puntero_DESPLZ_der defw 0
 272  8C17 00 00        Puntero_DESPLZ_izq defw 0
 273  8C19
 274  8C19 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 275  8C1B 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 276  8C1C 00           Columnas db 0
 277  8C1D 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 278  8C1F              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8C1F 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 280  8C20
 281  8C20              ; variables de control general.
 282  8C20
 283  8C20 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  8C21
 285  8C21              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 286  8C21
 287  8C21              Perfiles_de_velocidad
 288  8C21
 289  8C21 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 290  8C22 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 291  8C23 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 292  8C24 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 293  8C25
 294  8C25              ; Contadores de 16 bits.
 295  8C25
 296  8C25 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 297  8C27 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 298  8C29 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 299  8C2B 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 300  8C2D
 301  8C2D              ; Movimiento. ------------------------------------------------------------------------------------------------------
 302  8C2D
 303  8C2D 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 304  8C2F 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 305  8C31 00 00        Puntero_indice_mov_bucle defw 0							;
 306  8C33              ;
 307  8C33              ;
 308  8C33 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 309  8C34              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 310  8C34              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 311  8C34 00           Incrementa_puntero_backup db 0
 312  8C35 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 313  8C36              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 314  8C36 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 315  8C37 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 316  8C38 00           Cola_de_desplazamiento db 0								; Este byte indica:
 317  8C39              ;
 318  8C39              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 319  8C39              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 320  8C39              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 321  8C39              ;
 322  8C39              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 323  8C39              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 324  8C39              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 325  8C39              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 326  8C39              ;
 327  8C39              ;														;	"$ff" ..... Bucle infinito de repetición.
 328  8C39              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 329  8C39              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 330  8C39
 331  8C39 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 332  8C3A
 333  8C3A              ;														DESCRIPCIÓN:
 334  8C3A              ;
 335  8C3A              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 336  8C3A              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 337  8C3A              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 338  8C3A              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 339  8C3A              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 340  8C3A              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 341  8C3A
 342  8C3A              ;														BIT 3, Recarga de nueva oleada.
 343  8C3A              ;														BIT 4, Recarga de nueva oleada.
 344  8C3A              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 345  8C3A              ;														BIT 6, **** Frame completo.
 346  8C3A              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 347  8C3A
 348  8C3A 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 349  8C3C              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 350  8C3C              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 351  8C3C              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 352  8C3C
 353  8C3C              ; Gestión de ENTIDADES y CAJAS.
 354  8C3C
 355  8C3C 00 00        Puntero_store_caja defw 0
 356  8C3E 00 00        Puntero_restore_caja defw 0
 357  8C40 00 00        Indice_restore_caja defw 0
 358  8C42 00 00        Puntero_indice_master defw 0
 359  8C44
 360  8C44 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 361  8C45 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 362  8C46 00           Entidades_en_curso db 0									; Entidades en pantalla.
 363  8C47
 364  8C47 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  8C49 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  8C4B              ;														; _ puntero (Indice_entidades).
 367  8C4B
 368  8C4B              ;---------------------------------------------------------------------------------------------------------------
 369  8C4B              ;
 370  8C4B              ;	13/10/24
 371  8C4B              ;
 372  8C4B              ;	Álbumes.
 373  8C4B
 374  8C4B 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8C4D              ;														; _variable para almacenar lo posición del puntero_
 376  8C4D              ; 														; _de pila, SP.
 377  8C4D 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8C4F              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8C4F
 380  8C4F              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8C4F
 382  8C4F 00 00        Album_de_pintado defw 0
 383  8C51 00 00        Album_de_borrado defw 0
 384  8C53 00 00        Album_de_pintado_Amadeus defw 0
 385  8C55 00 00        Album_de_borrado_Amadeus defw 0
 386  8C57
 387  8C57 00 00        Album_de_pintado_disparos_Amadeus defw 0
 388  8C59 00 00        Album_de_borrado_disparos_Amadeus defw 0
 389  8C5B
 390  8C5B 00 00        Album_de_pintado_disparos_Entidades defw 0
 391  8C5D 00 00        Album_de_borrado_disparos_Entidades defw 0
 392  8C5F
 393  8C5F
 394  8C5F 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 395  8C61
 396  8C61 00           Num_de_bytes_album_de_disparos db 0
 397  8C62 00           Num_de_bytes_album_de_disparos_borrado db 0
 398  8C63
 399  8C63 07           Numero_de_disparos_de_entidades db 7
 400  8C64
 401  8C64 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 402  8C65 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 403  8C66
 404  8C66 00 00        Techo_Scanlines_album defw 0
 405  8C68 00 00        Techo_Scanlines_album_2 defw 0
 406  8C6A 00           Switch db 0
 407  8C6B 00 00        Techo defw 0
 408  8C6D 00 00        Scanlines_album_SP defw 0
 409  8C6F 00 89        India_SP defw Tabla_de_pintado
 410  8C71 03 89        India_2_SP defw Tabla_de_pintado+3
 411  8C73
 412  8C73 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 413  8C74              ;
 414  8C74              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 415  8C74              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 416  8C74              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 417  8C74              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 418  8C74              ;																Habilita el borrado/pintado de sprites.
 419  8C74              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 420  8C74              ;																_ a la baja.
 421  8C74              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 422  8C74              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 423  8C74              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 424  8C74              ; 																_ el último frame de la explosión de nuestra nave.
 425  8C74              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 426  8C74              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 427  8C74
 428  8C74 00           Ctrl_4 db 0
 429  8C75 00           Ctrl_5 db 0												;	BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 430  8C76              ;															BIT	2, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la derecha.
 431  8C76              ;															BIT	3, "1" Indica que tras consecutivos desplazamientos del disparo hay que modificar el (Puntero_de_impresión) dos posiciones a la izquierda.
 432  8C76
 433  8C76              ; Gestión de Disparos.
 434  8C76
 435  8C76 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 436  8C78 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 437  8C7A 00           Impacto2 db 0											; Byte de control de impactos.
 438  8C7B
 439  8C7B              ;
 440  8C7B              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 441  8C7B              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 442  8C7B              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 443  8C7B              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 444  8C7B
 445  8C7B
 446  8C7B
 447  8C7B
 448  8C7B
 449  8C7B
 450  8C7B
 451  8C7B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 452  8C7D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 453  8C7D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 454  8C7D
 455  8C7D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 456  8C7F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 457  8C7F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 458  8C82              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 459  8C82 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 460  8C85              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 461  8C85
 462  8C85              ;---------------------------------------------------------------------------------------------------------------
 463  8C85
 464  8C85              ; Relojes y temporizaciones.
 465  8C85
 466  8C85 04           Clock_explosion db 4													; Temporización de las explosiones, (velocidad de la explosión).
 467  8C86 05           Clock_explosion_Amadeus db 5
 468  8C87 64           Temp_new_live db 100													; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 469  8C88
 470  8C88 F6 88        RND_SP defw Numeros_aleatorios											; Puntero que se irá desplazando por el SET de nº aleatorios.
 471  8C8A F6 88        Puntero_num_aleatorios_disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 472  8C8C 00           Numero_rnd_disparos db 0
 473  8C8D
 474  8C8D 00 00        Clock_next_entity defw 0												; Transcurrido este tiempo aparece una nueva entidad.
 475  8C8F 00           Activa_recarga_cajas db 0												; Esta señal espera (Secundero)+X para habilitar el Loop.
 476  8C90              ;																		; Repite la oleada de entidades.
 477  8C90 A0           Repone_CLOCK_disparos db $a0											; Reloj, decreciente.
 478  8C91 A0           CLOCK_disparos_de_entidades db $a0
 479  8C92
 480  8C92              ;---------------------------------------------------------------------------------------------------------------
 481  8C92
 482  8C92              ; Gestión de NIVELES.
 483  8C92
 484  8C92 00           Nivel db 0												; Nivel actual del juego.
 485  8C93 00 00        Puntero_indice_NIVELES defw 0
 486  8C95 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C97              ; 														; _ que definen el NIVEL.
 488  8C97
 489  8C97              ; ---------------------------------------------------------------------------------------------------------------
 490  8C97
 491  8C97              ; Temporizaciones Shield.
 492  8C97
 493  8C97 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C9B 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C9D 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C9E 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C9F 00           Shield_3 db 0
 498  8CA0
 499  8CA0 03           Lives db 3
 500  8CA1
 501  8CA1              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8CA1              ;
 503  8CA1              ;	10/11/24
 504  8CA1
 505  8CA1              START
 506  8CA1
 507  8CA1 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8CA4 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8CA6 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8CA8 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8CAA F3           	DI
 512  8CAB
 513  8CAB              ; Limpiamos pantalla.
 514  8CAB
 515  8CAB 3E 07        	ld a,%00000111
 516  8CAD CD AE 94     	call Cls
 517  8CB0 CD 5F 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8CB3
 519  8CB3              INICIALIZACION
 520  8CB3
 521  8CB3 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8CB5 CD AC 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8CB8 CD F4 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8CBB 6F           	ld l,a
 525  8CBC 26 00        	ld h,0
 526  8CBE 22 8D 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CC1
 528  8CC1              ; 	Con nuestros nº aleatorios mágicos podremos darle magia a nuestros patrones de movimiento.
 529  8CC1              ;	Vamos a generar los movimientos masticados de las entidades.
 530  8CC1
 531  8CC1 CD DC 92     	call Genera_movimientos_masticados_del_nivel
 532  8CC4
 533  8CC4              ;	Una vez construidas las distintas coreografías de las entidades que componen el nivel, vamos a inicializarlo.
 534  8CC4
 535  8CC4 18 FE        	jr $
 536  8CC6
 537  8CC6              ;	Inicia los álbumes de líneas.
 538  8CC6
 539  8CC6 CD AD 90     	call Inicia_albumes_de_lineas
 540  8CC9              ;
 541  8CC9 CD BD 90     	call Inicia_albumes_de_lineas_Amadeus
 542  8CCC CD CA 90     	call Inicia_albumes_de_disparos
 543  8CCF
 544  8CCF              4
 545  8CCF
 546  8CCF              ;	call Inicia_Entidades
 547  8CCF CD 9A 93     	call Inicia_Amadeus
 548  8CD2
 549  8CD2              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 550  8CD2              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 551  8CD2              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 552  8CD2
 553  8CD2 11 B9 89     	ld de,Amadeus_BOX
 554  8CD5 CD 7E 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 555  8CD8 CD DD 93     	call Limpiamos_bandeja_DRAW
 556  8CDB
 557  8CDB              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 558  8CDB
 559  8CDB 06 3C        	ld b,60
 560  8CDD CD 54 9D     2 call Amadeus_a_izquierda
 561  8CE0 10 FB        	djnz 2B
 562  8CE2
 563  8CE2 CD 8B 90     	call Genera_datos_de_impresion_Amadeus
 564  8CE5
 565  8CE5              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 566  8CE5
 567  8CE5 CD E6 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 568  8CE8
 569  8CE8 CD 6A 91     	call Inicia_Shield
 570  8CEB
 571  8CEB 2A 6D 8C     6 ld hl,(Scanlines_album_SP)
 572  8CEE 22 66 8C     	ld (Techo_Scanlines_album),hl
 573  8CF1
 574  8CF1 2A 51 8C     	ld hl,(Album_de_borrado)
 575  8CF4 22 6D 8C     	ld (Scanlines_album_SP),hl
 576  8CF7
 577  8CF7 21 00 89     	ld hl,Tabla_de_pintado
 578  8CFA 22 6F 8C     	ld (India_SP),hl
 579  8CFD
 580  8CFD 21 73 8C     	ld hl,Ctrl_3
 581  8D00 CB C6        	set 0,(hl) 											; Indica Frame completo.
 582  8D02 CB D6        	set 2,(hl)
 583  8D04 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 584  8D06
 585  8D06 FB           	ei 													; Ha de apuntar a $5c3a.
 586  8D07
 587  8D07 76           	halt
 588  8D08
 589  8D08              ; ------------------------------------
 590  8D08
 591  8D08              Main
 592  8D08              ;
 593  8D08              ; 07/11/24.
 594  8D08
 595  8D08              ; Gestión de disparos.
 596  8D08
 597  8D08 CD C9 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 598  8D0B CD 47 9F     	call Motor_de_disparos_entidades
 599  8D0E CD DC A1     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 600  8D11
 601  8D11              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 602  8D11              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 603  8D11              ; Este hecho lo indica el bit2 de (Impacto2).
 604  8D11
 605  8D11 CD 79 A3     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 606  8D14
 607  8D14              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 608  8D14
 609  8D14 21 91 8C     	ld hl,CLOCK_disparos_de_entidades
 610  8D17 35           	dec (hl)
 611  8D18 CC 10 8E     	call z,Autoriza_disparo_de_entidades
 612  8D1B
 613  8D1B 2A 8D 8C     	ld hl,(Clock_next_entity)
 614  8D1E ED 4B 78 5C  	ld bc,(FRAMES)
 615  8D22 A7           	and a
 616  8D23 ED 42        	sbc hl,bc
 617  8D25 20 16        	jr nz,1F
 618  8D27
 619  8D27              ; GESTIÓN DE ENTIDADES.
 620  8D27
 621  8D27              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 622  8D27              ; _ (Clock_next_entity) para la siguiente entidad.
 623  8D27
 624  8D27              ; --- Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 625  8D27              ; --- Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 626  8D27              ; --- Entidades_en_curso db 0								; Entidades en pantalla.
 627  8D27
 628  8D27 21 45 8C     	ld hl,Numero_parcial_de_entidades
 629  8D2A 46           	ld b,(hl)
 630  8D2B 3A 46 8C     	ld a,(Entidades_en_curso)									; Entidades que hay en pantalla.
 631  8D2E B8           	cp b
 632  8D2F 28 0C        	jr z,1F
 633  8D31 30 0A        	jr nc,1F
 634  8D33
 635  8D33              ;	Incrementamos (Entidades_en_curso) y DEC (Numero_parcial_de_entidades) y (Numero_de_entidades).
 636  8D33
 637  8D33 3C           	inc a
 638  8D34 32 46 8C     	ld (Entidades_en_curso),a
 639  8D37
 640  8D37              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 641  8D37
 642  8D37 CD F4 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 643  8D3A CD 10 8F     	call Define_Clock_next_entity
 644  8D3D
 645  8D3D 3A 46 8C     1 ld a,(Entidades_en_curso)
 646  8D40 A7           	and a
 647  8D41 CA BB 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 648  8D44 47           	ld b,a												; No hay entidades que gestionar.
 649  8D45
 650  8D45              ; ( Código que ejecutamos con cada entidad: ).
 651  8D45
 652  8D45              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 653  8D45              ;
 654  8D45              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 655  8D45
 656  8D45 21 00 89     	ld hl,Tabla_de_pintado
 657  8D48 22 6F 8C     	ld (India_SP),hl
 658  8D4B
 659  8D4B 21 73 8C     	ld hl,Ctrl_3
 660  8D4E CB D6        	set 2,(hl)
 661  8D50 CD 9E 8E     	call Change
 662  8D53
 663  8D53 C5           2 push bc 												; Nº de entidades en curso.
 664  8D54
 665  8D54 CD 37 91     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 666  8D57 ED 5B 6D 8C  	ld de,(Scanlines_album_SP)
 667  8D5B
 668  8D5B              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 669  8D5B
 670  8D5B              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 671  8D5B              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 672  8D5B
 673  8D5B 3A 7A 8C     	ld a,(Impacto2)
 674  8D5E CB 5F        	bit 3,a
 675  8D60 C4 73 A1     	call nz,Compara_con_coordenadas_de_disparo
 676  8D63
 677  8D63 3A 00 8C     	ld a,(Impacto)
 678  8D66 CB 4F        	bit 1,a
 679  8D68 C4 47 92     	call nz,Genera_explosion
 680  8D6B 20 31        	jr nz,Gestiona_siguiente_entidad
 681  8D6D
 682  8D6D 3A 00 8C     	ld a,(Impacto)
 683  8D70 A7           	and a
 684  8D71 28 0C        	jr z,3F
 685  8D73
 686  8D73              ; IMPACTO en entidad por colisión con Amadeus.
 687  8D73
 688  8D73              ; 5/7/24
 689  8D73              ; Nota importante:
 690  8D73              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 691  8D73              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 692  8D73              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 693  8D73
 694  8D73 3A BD 89     	ld a,(Impacto_Amadeus)
 695  8D76 A7           	and a
 696  8D77 C4 47 92     	call nz,Genera_explosion
 697  8D7A 20 22        	jr nz,Gestiona_siguiente_entidad
 698  8D7C
 699  8D7C              ; Falsa colisión !!!
 700  8D7C
 701  8D7C 32 00 8C     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 702  8D7F
 703  8D7F              ; -------------------------------------------
 704  8D7F
 705  8D7F CD 54 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 706  8D82 CD 7C 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 707  8D85 CD 44 90     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 708  8D88 CD EE 94     	call Genera_datos_de_impresion
 709  8D8B CD 00 94     	call Decrementa_Contador_de_mov_masticados
 710  8D8E
 711  8D8E              ; -------------------------------------------
 712  8D8E
 713  8D8E              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 714  8D8E
 715  8D8E 2A 01 8C     	ld hl,(Puntero_de_impresion)
 716  8D91 CD C2 94     	call Genera_coordenadas
 717  8D94
 718  8D94              ; TODO: Generamos disparo ???
 719  8D94
 720  8D94 3A 65 8C     	ld a,(Permiso_de_disparo_Entidades)
 721  8D97 A7           	and a
 722  8D98 C4 25 8E     	call nz,Entidad_genera_disparo_si_procede
 723  8D9B
 724  8D9B CD F7 A2     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 725  8D9E
 726  8D9E              Gestiona_siguiente_entidad
 727  8D9E
 728  8D9E CD D2 93      	call Store_Restore_cajas
 729  8DA1 C1           	pop bc
 730  8DA2 10 AF        	djnz 2B
 731  8DA4
 732  8DA4              ; Hemos gestionado todas las entidades.
 733  8DA4              ; ----- ----- -----
 734  8DA4
 735  8DA4 CD 68 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 736  8DA7 CD 7F 8F     	call Ordena_tabla_de_impresion
 737  8DAA CD E6 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 738  8DAD
 739  8DAD CD 25 8F     	call Borra_diferencia
 740  8DB0
 741  8DB0 3A 73 8C     	ld a,(Ctrl_3)
 742  8DB3 CB 5F        	bit 3,a
 743  8DB5 20 04        	jr nz,Gestion_de_Amadeus
 744  8DB7
 745  8DB7 EB           	ex de,hl
 746  8DB8 71           	ld (hl),c
 747  8DB9 2C           	inc l
 748  8DBA 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 749  8DBB
 750  8DBB              ;! GESTIONA AMADEUS !!!!!!!!!!
 751  8DBB
 752  8DBB              Gestion_de_Amadeus
 753  8DBB
 754  8DBB 21 73 8C     	ld hl,Ctrl_3
 755  8DBE CB 76        	bit 6,(hl)
 756  8DC0 28 13        	jr z,Amadeus_vivo
 757  8DC2
 758  8DC2              ; Amadeus ha sido destruido.
 759  8DC2              ; Decrementa (Temp_new_live).
 760  8DC2
 761  8DC2 21 87 8C     	ld hl,Temp_new_live
 762  8DC5 35           	dec (hl)
 763  8DC6 20 26        	jr nz,End_frame
 764  8DC8
 765  8DC8              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 766  8DC8
 767  8DC8 21 A0 8C     	ld hl,Lives
 768  8DCB 35           	dec (hl)
 769  8DCC
 770  8DCC              ;! Fin del juego
 771  8DCC
 772  8DCC F3           	di
 773  8DCD 28 FE        	jr z,$
 774  8DCF FB           	ei
 775  8DD0
 776  8DD0              ; Nueva nave.
 777  8DD0
 778  8DD0 CD 42 8E     	call Reinicia_Amadeus
 779  8DD3 18 19        	jr End_frame
 780  8DD5
 781  8DD5              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 782  8DD5
 783  8DD5              Amadeus_vivo
 784  8DD5
 785  8DD5 3A BD 89     	ld a,(Impacto_Amadeus)
 786  8DD8 A7           	and a
 787  8DD9 C4 77 92     	call nz, Genera_explosion_Amadeus
 788  8DDC 20 10        	jr nz, End_frame
 789  8DDE
 790  8DDE CD 24 92     	call Teclado
 791  8DE1 21 73 8C     	ld hl,Ctrl_3
 792  8DE4
 793  8DE4 CB 6E        	bit 5,(hl)
 794  8DE6 28 06        	jr z,End_frame
 795  8DE8
 796  8DE8              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 797  8DE8
 798  8DE8 CD B9 8E     	call Change_Amadeus
 799  8DEB CD 8B 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 800  8DEE
 801  8DEE              End_frame
 802  8DEE
 803  8DEE              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 804  8DEE              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 805  8DEE
 806  8DEE CD 9E A0     	call Genera_datos_de_impresion_disparos_Entidades
 807  8DF1 CD 62 A2     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 808  8DF4 CD B8 A1     	call Calcula_bytes_pintado_disparos
 809  8DF7 CD C5 A1     	call Limpia_album_de_pintado_disparos_entidades
 810  8DFA
 811  8DFA              ; ------------ ------------- --------------
 812  8DFA
 813  8DFA 2A 51 8C     	ld hl,(Album_de_borrado)
 814  8DFD 22 6D 8C     	ld (Scanlines_album_SP),hl
 815  8E00
 816  8E00 21 73 8C     	ld hl,Ctrl_3
 817  8E03 CB C6        	set 0,(hl) 											; Indica Frame completo.
 818  8E05 CB 9E        	res 3,(hl)
 819  8E07 CB A6        	res 4,(hl)
 820  8E09
 821  8E09 AF           	xor a
 822  8E0A D3 FE        	out ($fe),a
 823  8E0C
 824  8E0C 76           	halt
 825  8E0D
 826  8E0D              ; ----------------------------------------
 827  8E0D
 828  8E0D              ;	ld a,(Ctrl_1) 										; Existe Loop?
 829  8E0D              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 830  8E0D CA 08 8D     	jp z,Main
 831  8E10
 832  8E10              ;------------------------------------------
 833  8E10              ;
 834  8E10              ;	07/11/24
 835  8E10
 836  8E10              Autoriza_disparo_de_entidades
 837  8E10
 838  8E10 3E 01        	ld a,1
 839  8E12 32 65 8C     	ld (Permiso_de_disparo_Entidades),a
 840  8E15
 841  8E15 3A 90 8C     	ld a,(Repone_CLOCK_disparos)
 842  8E18 FE 19        	cp 25								; 25 fps. Es el tiempo mínimo que habrá entre disparo y disparo de entidad.
 843  8E1A 38 02        	jr c,1F
 844  8E1C
 845  8E1C              ;	Este valor marca la frecuencia con la que se generan los disparos de las entidades.
 846  8E1C              ;	Un valor alto hace que en muy poco tiempo las entidades generen muchos disparos.
 847  8E1C              ;	Un valor bajo hace que la curva de generación de disparos sea más lenta.
 848  8E1C
 849  8E1C D6 03        	sub 3
 850  8E1E
 851  8E1E 32 90 8C     1 ld (Repone_CLOCK_disparos),a
 852  8E21 32 91 8C     	ld (CLOCK_disparos_de_entidades),a
 853  8E24
 854  8E24 C9           	ret
 855  8E25
 856  8E25              ;------------------------------------------
 857  8E25              ;
 858  8E25              ;	14/09/24
 859  8E25              ;
 860  8E25              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 861  8E25
 862  8E25              Entidad_genera_disparo_si_procede
 863  8E25
 864  8E25 2A 8A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 865  8E28 CB 06        	rlc (hl)
 866  8E2A
 867  8E2A DC EE A0     	call c,Genera_disparo_de_entidad_maldosa
 868  8E2D
 869  8E2D C9           	ret
 870  8E2E
 871  8E2E              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 872  8E2E              ;
 873  8E2E              ;	30/09/24
 874  8E2E
 875  8E2E              Actuaiza_sp_de_disparos_de_entidades
 876  8E2E
 877  8E2E 2A 8A 8C     	ld hl,(Puntero_num_aleatorios_disparos)
 878  8E31 23           	inc hl
 879  8E32 22 8A 8C     	ld (Puntero_num_aleatorios_disparos),hl
 880  8E35
 881  8E35 11 FD 88     	ld de,Numeros_aleatorios+7
 882  8E38 7B           	ld a,e
 883  8E39 95           	sub l
 884  8E3A C0           	ret nz
 885  8E3B
 886  8E3B 21 F6 88     1 ld hl,Numeros_aleatorios
 887  8E3E 22 8A 8C     2 ld (Puntero_num_aleatorios_disparos),hl
 888  8E41 C9           	ret
 889  8E42
 890  8E42              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
 891  8E42              ;
 892  8E42              ;	24/07/24
 893  8E42
 894  8E42              Reinicia_Amadeus
 895  8E42
 896  8E42              ;	Reinicia posición y estado.
 897  8E42
 898  8E42 21 CF 50     	ld hl,$50cf
 899  8E45 22 BE 89     	ld (p.imp.amadeus),hl						; Inicializa el puntero de impresión.
 900  8E48 21 CC DC     	ld hl,$dccc
 901  8E4B 22 C0 89     	ld (Pamm_Amadeus),hl						; Inicializa el puntero de almacén de movimientos masticados.
 902  8E4E 21 3D 00     	ld hl,$003d
 903  8E51 22 C2 89     	ld (Comm_Amadeus),hl						; Inicializa el contador de movimientos masticados.
 904  8E54
 905  8E54              ;	limpiamos el álbum de borrado.
 906  8E54
 907  8E54 2A 55 8C     	ld hl,(Album_de_borrado_Amadeus)
 908  8E57
 909  8E57 AF           	xor a
 910  8E58 77           	ld (hl),a
 911  8E59
 912  8E59 E5           	push hl
 913  8E5A D1           	pop de
 914  8E5B 13           	inc de
 915  8E5C
 916  8E5C 01 23 00     	ld bc,35
 917  8E5F ED B0        	ldir
 918  8E61
 919  8E61 CD 8B 90     	call Genera_datos_de_impresion_Amadeus
 920  8E64
 921  8E64              ;	Reinicia temporizaciones.
 922  8E64
 923  8E64 CD 6A 91     	call Inicia_Shield
 924  8E67
 925  8E67 3E 5A        	ld a,90
 926  8E69 32 9D 8C     	ld (Shield),a
 927  8E6C
 928  8E6C 3E 64        	ld a,100
 929  8E6E 32 87 8C     	ld (Temp_new_live),a
 930  8E71
 931  8E71              ; 	Restauramos el FLAG: Amadeus vivo.
 932  8E71
 933  8E71 21 73 8C     	ld hl,Ctrl_3
 934  8E74 CB B6        	res 6,(hl)
 935  8E76
 936  8E76              ;	Fuerza la impresión de la nave en el siguiente frame.
 937  8E76
 938  8E76 21 73 8C      	ld hl,Ctrl_3
 939  8E79 CB EE        	set 5,(hl)
 940  8E7B
 941  8E7B C9           	ret
 942  8E7C
 943  8E7C              ; --------------------------------------------------------------------------------------------------------------
 944  8E7C              ;
 945  8E7C              ;	7/11/24
 946  8E7C
 947  8E7C              Ajusta_velocidad_entidad
 948  8E7C
 949  8E7C 3A 07 8C     	ld a,(Velocidad)
 950  8E7F A7           	and a
 951  8E80 C8           	ret z 								; En la 1ª vuelta (Contador_de_vueltas) será "1" o "2", dependiendo de si queremos_
 952  8E81              	;									  _una o dos vueltas "lentas" iniciales. En ambos casos, (Velocidad)="0", pues:
 953  8E81              	;									  _ (Velocidad)=(Contador_de_vueltas)/4.
 954  8E81
 955  8E81
 956  8E81              ; Incrementa (Contador_de_vueltas)x2.
 957  8E81              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 958  8E81
 959  8E81              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 960  8E81              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 961  8E81              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 962  8E81              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 963  8E81              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 964  8E81
 965  8E81
 966  8E81 CB 27        	sla a 								;	Multiplica x2 (Velocidad) en cada FRAME.
 967  8E83 32 07 8C     	ld (Velocidad),a
 968  8E86 E6 10        	and $10
 969  8E88 C8           	ret z
 970  8E89
 971  8E89              ; Restaura (Velocidad) a razón del nº de vueltas. Se ha superado (Velocidad)x8.
 972  8E89
 973  8E89 3A FF 8B     	ld a,(Contador_de_vueltas)
 974  8E8C CB 2F        	sra a
 975  8E8E CB 2F        	sra a
 976  8E90 32 07 8C     	ld (Velocidad),a
 977  8E93
 978  8E93 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 979  8E96 23           	inc hl
 980  8E97 23           	inc hl
 981  8E98 23           	inc hl
 982  8E99 23           	inc hl
 983  8E9A 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 984  8E9D
 985  8E9D C9           	ret
 986  8E9E
 987  8E9E              ; --------------------------------------------------------------------------------------------------------------
 988  8E9E              ;
 989  8E9E              ;	25/08/24
 990  8E9E
 991  8E9E              Change
 992  8E9E
 993  8E9E 3A 6A 8C     	ld a,(Switch)
 994  8EA1 EE 01        	xor 1
 995  8EA3 32 6A 8C     	ld (Switch),a
 996  8EA6 2A 4F 8C     	ld hl,(Album_de_pintado)
 997  8EA9 ED 5B 51 8C  	ld de,(Album_de_borrado)
 998  8EAD EB           	ex de,hl
 999  8EAE 22 4F 8C     	ld (Album_de_pintado),hl
1000  8EB1 22 6D 8C     	ld (Scanlines_album_SP),hl
1001  8EB4 ED 53 51 8C  	ld (Album_de_borrado),de
1002  8EB8 C9           	ret
1003  8EB9
1004  8EB9              Change_Amadeus
1005  8EB9
1006  8EB9 2A 53 8C     	ld hl,(Album_de_pintado_Amadeus)
1007  8EBC ED 5B 55 8C  	ld de,(Album_de_borrado_Amadeus)
1008  8EC0 EB           	ex de,hl
1009  8EC1 22 53 8C     	ld (Album_de_pintado_Amadeus),hl
1010  8EC4 ED 53 55 8C  	ld (Album_de_borrado_Amadeus),de
1011  8EC8 C9           	ret
1012  8EC9
1013  8EC9              Change_Disparos
1014  8EC9
1015  8EC9              ; Álbumes de Amadeus.
1016  8EC9
1017  8EC9 2A 57 8C     1 ld hl,(Album_de_pintado_disparos_Amadeus)
1018  8ECC ED 5B 59 8C  	ld de,(Album_de_borrado_disparos_Amadeus)
1019  8ED0 EB           	ex de,hl
1020  8ED1 22 57 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1021  8ED4 ED 53 59 8C  	ld (Album_de_borrado_disparos_Amadeus),de
1022  8ED8 CD AD A1     	call Limpia_album_de_pintado_disparos_Amadeus
1023  8EDB
1024  8EDB              ; Álbumes de entidades.
1025  8EDB
1026  8EDB 2A 5B 8C     	ld hl,(Album_de_pintado_disparos_Entidades)
1027  8EDE ED 5B 5D 8C  	ld de,(Album_de_borrado_disparos_Entidades)
1028  8EE2 EB           	ex de,hl
1029  8EE3 22 5B 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1030  8EE6 ED 53 5D 8C  	ld (Album_de_borrado_disparos_Entidades),de
1031  8EEA 22 5F 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1032  8EED
1033  8EED 3A 61 8C     	ld a,(Num_de_bytes_album_de_disparos)
1034  8EF0 32 62 8C     	ld (Num_de_bytes_album_de_disparos_borrado),a
1035  8EF3
1036  8EF3 C9           	ret
1037  8EF4
1038  8EF4              ; ------------------------------------
1039  8EF4              ;
1040  8EF4              ; 1/05/24
1041  8EF4
1042  8EF4              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1043  8EF4              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1044  8EF4
1045  8EF4              ;	DESTRUYE: HL,DE,A
1046  8EF4              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1047  8EF4
1048  8EF4              ;	Variables implicadas: (RND_SP).
1049  8EF4
1050  8EF4              Extrae_numero_aleatorio_y_avanza
1051  8EF4
1052  8EF4 21 00 89     	ld hl,Tabla_de_pintado
1053  8EF7 EB           	ex de,hl
1054  8EF8 2A 88 8C     	ld hl,(RND_SP)
1055  8EFB EB           	ex de,hl
1056  8EFC A7           	and a
1057  8EFD ED 52        	sbc hl,de
1058  8EFF
1059  8EFF 2A 88 8C     	ld hl,(RND_SP)
1060  8F02 20 06        	jr nz,1F
1061  8F04
1062  8F04              ; Sitúa HL al principio de la tabla de nº aleatorios.
1063  8F04
1064  8F04 21 F6 88     	ld hl,Numeros_aleatorios
1065  8F07 22 88 8C     	ld (RND_SP),HL
1066  8F0A
1067  8F0A              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1068  8F0A
1069  8F0A 7E           1 ld a,(hl)
1070  8F0B 23           	inc hl
1071  8F0C 22 88 8C     	ld (RND_SP),hl
1072  8F0F C9           	ret
1073  8F10
1074  8F10              ; ------------------------------------
1075  8F10              ;
1076  8F10              ; 1/05/24
1077  8F10
1078  8F10              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1079  8F10              ; (1 a 4 segundos).
1080  8F10              ; Actualizamos (Clock_next_entity) con A.
1081  8F10
1082  8F10              ;	DESTRUYE: A y B.
1083  8F10              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1084  8F10              ;			 Actualiza (Clock_next_entity) con A.
1085  8F10
1086  8F10              ;	Variables implicadas: (Clock_next_entity).
1087  8F10
1088  8F10              ; Notas:
1089  8F10
1090  8F10              ; 	$32 1 seg.
1091  8F10              ; 	$64 2 seg.
1092  8F10              ; 	$96 3 seg.
1093  8F10              ; 	$c8 4 seg.
1094  8F10              ; 	$fa 5 seg.
1095  8F10
1096  8F10              ; $ffff 1310,7 seg, 22 minutos.
1097  8F10
1098  8F10              ;	$0100  5 seg. aproximadamente.
1099  8F10              ;	$0200 10 seg. aproximadamente.
1100  8F10              ;	$0300 15 seg. aproximadamente.
1101  8F10              ;	$0400 20 seg. aproximadamente.
1102  8F10              ;	$0500 25 seg. aproximadamente.
1103  8F10              ;	$0600 30 seg. aproximadamente.
1104  8F10
1105  8F10              Define_Clock_next_entity
1106  8F10
1107  8F10 FE 34        	cp $34
1108  8F12 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1109  8F14
1110  8F14              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1111  8F14
1112  8F14 4F           3 ld c,a
1113  8F15 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1114  8F17 2A 78 5C     	ld hl,(FRAMES)
1115  8F1A A7           	and a
1116  8F1B ED 4A        	adc hl,bc
1117  8F1D 22 8D 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1118  8F20 C9           	ret
1119  8F21
1120  8F21 3E 34        1 ld a,$34
1121  8F23 18 EF        	jr 3B
1122  8F25
1123  8F25              ; ------------------------------------
1124  8F25              ;
1125  8F25              ; 18/03/24
1126  8F25
1127  8F25              Borra_diferencia
1128  8F25
1129  8F25 ED 4B 6D 8C  	ld bc,(Scanlines_album_SP)
1130  8F29
1131  8F29 3A 6A 8C     	ld a,(Switch)
1132  8F2C A7           	and a
1133  8F2D 28 08        	jr z,2F
1134  8F2F
1135  8F2F 2A 68 8C     	ld hl,(Techo_Scanlines_album_2)
1136  8F32 11 68 8C     	ld de,Techo_Scanlines_album_2
1137  8F35 18 06        	jr 3F
1138  8F37
1139  8F37 2A 66 8C     2 ld hl,(Techo_Scanlines_album)
1140  8F3A 11 66 8C     	ld de,Techo_Scanlines_album
1141  8F3D
1142  8F3D              ; Diferencia.
1143  8F3D
1144  8F3D ED 42        3 sbc hl,bc
1145  8F3F
1146  8F3F C8           	ret z
1147  8F40 D8           	ret c
1148  8F41
1149  8F41              ; Nuevo techo, (más bajo que el anterior).
1150  8F41              ; Fijamos nuevo techo y borramos bytes sobrantes.
1151  8F41
1152  8F41 EB           	ex de,hl
1153  8F42
1154  8F42 71           	ld (hl),c
1155  8F43 2C           	inc l
1156  8F44 70           	ld (hl),b
1157  8F45
1158  8F45 AF           	xor a
1159  8F46 43           	ld b,e
1160  8F47
1161  8F47 2A 6D 8C     	ld hl,(Scanlines_album_SP)
1162  8F4A
1163  8F4A 77           1 ld (hl),a
1164  8F4B 23           	inc hl
1165  8F4C 10 FC        	djnz 1B
1166  8F4E
1167  8F4E              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1168  8F4E
1169  8F4E 21 73 8C     	ld hl,Ctrl_3
1170  8F51 CB DE        	set 3,(hl)
1171  8F53
1172  8F53 C9           	ret
1173  8F54
1174  8F54              ; --------------------------------------------------------------------------------------------------------------
1175  8F54              ;
1176  8F54              ;	26/3/24
1177  8F54
1178  8F54              Recauda_informacion_de_entidad_en_curso
1179  8F54
1180  8F54              ; Almacena la Coordenada Y de la entidad en curso.
1181  8F54
1182  8F54              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1183  8F54
1184  8F54 3A FE 8B     	ld a,(Coordenada_y)
1185  8F57 2A 6F 8C     	ld hl,(India_SP)
1186  8F5A 77           	ld (hl),a
1187  8F5B 2C           	inc l
1188  8F5C
1189  8F5C              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1190  8F5C
1191  8F5C ED 5B 6D 8C  	ld de,(Scanlines_album_SP)
1192  8F60
1193  8F60 73           	ld (hl),e
1194  8F61 2C           	inc l
1195  8F62 72           	ld (hl),d
1196  8F63 2C           	inc l
1197  8F64
1198  8F64 22 6F 8C     	ld (India_SP),hl
1199  8F67
1200  8F67 C9           	ret
1201  8F68
1202  8F68              ; --------------------------------------------------------------------------------------------------------------
1203  8F68              ;
1204  8F68              ;	27/03/24
1205  8F68              ;
1206  8F68
1207  8F68              Inicializa_India_y_limpia_Tabla_de_impresion
1208  8F68
1209  8F68 2A 6F 8C     	ld hl,(India_SP)
1210  8F6B 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1211  8F6E
1212  8F6E 79           	ld a,c
1213  8F6F 95           	sub l
1214  8F70 28 06        	jr z,2F
1215  8F72 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1216  8F73              ;														; _ y pasamos a inicializar (India_SP).
1217  8F73 AF           	xor a
1218  8F74
1219  8F74 77           1 ld (hl),a
1220  8F75 2C           	inc l
1221  8F76 10 FC        	djnz 1B												; Limpia Tabla.
1222  8F78
1223  8F78 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1224  8F7B 22 6F 8C     	ld (India_SP),hl
1225  8F7E
1226  8F7E C9           	ret
1227  8F7F
1228  8F7F              ; --------------------------------------------------------------------------------------------------------------
1229  8F7F              ;
1230  8F7F              ;	31/3/24
1231  8F7F
1232  8F7F              Ordena_tabla_de_impresion
1233  8F7F
1234  8F7F              ; 5794 T/states.
1235  8F7F              ; 6278 T/states.
1236  8F7F              ; 5310 T/states.
1237  8F7F
1238  8F7F              ; Inicializamos punteros (India_SP) e (India_2_SP).
1239  8F7F              ; Inicializamos contador de comparaciones, [C].
1240  8F7F              ; Cargamos los registros A y B para efectuar comparación.
1241  8F7F
1242  8F7F FD 2E 00     	ld iyl,0
1243  8F82
1244  8F82 3A 46 8C     	ld a,(Entidades_en_curso)
1245  8F85 FE 04        	cp 4 	;	4
1246  8F87 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1247  8F88
1248  8F88 3D           	dec a
1249  8F89 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1250  8F8A 51           	ld d,c 										; Copia de respaldo.
1251  8F8B
1252  8F8B 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1253  8F8C
1254  8F8C 21 03 89     	ld hl,Tabla_de_pintado+3
1255  8F8F 46           	ld b,(hl)
1256  8F90 22 71 8C     	ld (India_2_SP),hl
1257  8F93
1258  8F93 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1259  8F94 DC BC 8F     	call c, Avanza_India_2_SP
1260  8F97 CC BC 8F     	call z, Avanza_India_2_SP
1261  8F9A
1262  8F9A FD 2D        	dec iyl
1263  8F9C 28 18        	jr z,2F
1264  8F9E
1265  8F9E
1266  8F9E              ; --------------------------------------------------------------------------------------------------------------
1267  8F9E              ;
1268  8F9E              ;	7/4/24
1269  8F9E
1270  8F9E              Trueque
1271  8F9E
1272  8F9E              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1273  8F9E              ;  			A contiene en nº de fila de (India_SP).
1274  8F9E              ;			HL contiene (India_2_SP).
1275  8F9E
1276  8F9E D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1277  8F9F E5           	push hl										; Preservo (India_2_SP).
1278  8FA0
1279  8FA0 ED 5B 6F 8C  	ld de,(India_SP)
1280  8FA4 EB           	ex de,hl
1281  8FA5 70           	ld (hl),b
1282  8FA6 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1283  8FA7
1284  8FA7 CD E8 8F     	call Intercambia_1_byte
1285  8FAA CD E8 8F     	call Intercambia_1_byte
1286  8FAD
1287  8FAD
1288  8FAD              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1289  8FAD              ; Recuperamos (India_2_SP) en HL.
1290  8FAD
1291  8FAD 2A 6F 8C     	ld hl,(India_SP)
1292  8FB0 7E           	ld a,(hl)
1293  8FB1
1294  8FB1 E1           	pop hl
1295  8FB2 D1           	pop de
1296  8FB3
1297  8FB3              ; --------------------------------------------------------------------------------------------------------------
1298  8FB3
1299  8FB3 CD BC 8F     	call Avanza_India_2_SP
1300  8FB6
1301  8FB6 14           2 inc d
1302  8FB7 15           	dec d
1303  8FB8 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1304  8FB9 18 D8        	jr 1B
1305  8FBB
1306  8FBB C9           	ret
1307  8FBC
1308  8FBC              ; ----- ----- ----- ----- -----
1309  8FBC
1310  8FBC              Avanza_India_2_SP
1311  8FBC
1312  8FBC 0D           	dec c
1313  8FBD 28 0A        	jr z,Avanza_punteros_indios
1314  8FBF
1315  8FBF FD 2C        	inc iyl
1316  8FC1
1317  8FC1 2C           	inc l
1318  8FC2 2C           	inc l
1319  8FC3 2C           	inc l
1320  8FC4
1321  8FC4 46           	ld b,(hl)
1322  8FC5 22 71 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1323  8FC8
1324  8FC8 C9           	ret
1325  8FC9
1326  8FC9              ; ----- ----- ----- ----- -----
1327  8FC9
1328  8FC9              Avanza_punteros_indios
1329  8FC9
1330  8FC9 15           	dec d
1331  8FCA 28 15        	jr z,Prepara_salida
1332  8FCC
1333  8FCC 4A           	ld c,d
1334  8FCD
1335  8FCD 2A 6F 8C     	ld hl,(India_SP)
1336  8FD0 2C           	inc l
1337  8FD1 2C           	inc l
1338  8FD2 2C           	inc l
1339  8FD3 7E           	ld a,(hl)
1340  8FD4 22 6F 8C     	ld (India_SP),hl
1341  8FD7
1342  8FD7 2C           	inc l
1343  8FD8 2C           	inc l
1344  8FD9 2C           	inc l
1345  8FDA 46           	ld b,(hl)
1346  8FDB 22 71 8C     	ld (India_2_SP),hl
1347  8FDE
1348  8FDE FD 2C        	inc iyl
1349  8FE0
1350  8FE0 C9           	ret
1351  8FE1
1352  8FE1              Prepara_salida
1353  8FE1
1354  8FE1 21 00 89     	ld hl,Tabla_de_pintado
1355  8FE4 22 6F 8C     	ld (India_SP),hl
1356  8FE7 C9           	ret
1357  8FE8
1358  8FE8
1359  8FE8 2C           Intercambia_1_byte inc l
1360  8FE9 1C           	inc e
1361  8FEA 46           	ld b,(hl)
1362  8FEB 1A           	ld a,(de)
1363  8FEC EB           	ex de,hl
1364  8FED 70           	ld (hl),b
1365  8FEE 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1366  8FEF C9           	ret
1367  8FF0
1368  8FF0              ; -----------------------------------------------------------------------------------
1369  8FF0              ;
1370  8FF0              ;	20/01/24
1371  8FF0              ;
1372  8FF0              ;
1373  8FF0
1374  8FF0              Construye_movimientos_masticados_entidad
1375  8FF0
1376  8FF0 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1377  8FF3 E5           	push hl
1378  8FF4 CD 37 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1379  8FF7              ;															; _ el (Contador_de_mov_masticados).
1380  8FF7 CD 02 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1381  8FFA              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1382  8FFA CD DA 99     	call Recompone_posicion_inicio
1383  8FFD
1384  8FFD CD 0A 97     1 call Draw
1385  9000 CD 1C 90     	call Guarda_movimiento_masticado
1386  9003
1387  9003 CD 87 9D     	call Movimiento
1388  9006
1389  9006 3A 73 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1390  9009 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1391  900B 28 F0        	jr z,1B
1392  900D
1393  900D              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1394  900D              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1395  900D
1396  900D E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1397  900E 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1398  9011
1399  9011              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1400  9011
1401  9011 CD EB 9E     	call Situa_en_contador_general_de_mov_masticados
1402  9014
1403  9014              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1404  9014              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1405  9014
1406  9014 ED 4B 05 8C  	ld bc,(Contador_de_mov_masticados)
1407  9018
1408  9018 71           	ld (hl),c
1409  9019 23           	inc hl
1410  901A 70           	ld (hl),b
1411  901B
1412  901B C9           	ret
1413  901C
1414  901C              ; -----------------------------------------------------------------------------------
1415  901C              ;
1416  901C              ;	28/12/23
1417  901C              ;
1418  901C              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1419  901C              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1420  901C
1421  901C              Guarda_movimiento_masticado
1422  901C
1423  901C ED 73 4B 8C  	ld (Stack),sp
1424  9020 ED 7B 03 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1425  9024
1426  9024 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1427  9026 FD E5            push iy 												; Pushea Puntero_objeto.
1428  9028
1429  9028 ED 7B 4B 8C      ld sp,(Stack)
1430  902C
1431  902C 2A 05 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1432  902F 23           	inc hl
1433  9030 22 05 8C     	ld (Contador_de_mov_masticados),hl
1434  9033
1435  9033 CD 37 90         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1436  9036              ;															; _ el (Contador_de_mov_masticados).
1437  9036 C9               ret
1438  9037
1439  9037              ; --------------------------------------------------------------------------------------------------------------
1440  9037              ;
1441  9037              ;	12/1/24
1442  9037              ;
1443  9037              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1444  9037
1445  9037              Actualiza_Puntero_de_almacen_de_mov_masticados
1446  9037
1447  9037 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1448  903A 01 04 00     	ld bc,4
1449  903D A7           	and a
1450  903E ED 4A        	adc hl,bc
1451  9040 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1452  9043 C9           	ret
1453  9044
1454  9044              ; --------------------------------------------------------------------------------------------------------------
1455  9044              ;
1456  9044              ;	24/03/24
1457  9044              ;
1458  9044              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1459  9044              ;
1460  9044              ;	IX contiene el puntero de impresión.
1461  9044              ;	DE contiene (Puntero_objeto).
1462  9044
1463  9044
1464  9044              Cargamos_registros_con_mov_masticado
1465  9044
1466  9044 ED 73 4B 8C  	ld (Stack),sp
1467  9048 ED 7B 03 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1468  904C
1469  904C D1           	pop de 															; DE contiene Puntero_objeto
1470  904D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1471  904F
1472  904F ED 73 03 8C  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1473  9053 ED 7B 4B 8C  	ld sp,(Stack)
1474  9057
1475  9057 7B           	ld a,e
1476  9058 82           	add d															; Comprueba si ya no hay datos en el almacén.
1477  9059
1478  9059 CC 08 94     	call z,Reinicia_entidad_maliciosa
1479  905C
1480  905C C9           	ret
1481  905D
1482  905D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1483  905D              ;
1484  905D              ;	22/7/24
1485  905D
1486  905D              Cargamos_registros_con_explosion
1487  905D
1488  905D
1489  905D 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1490  9060 CD FC 90     	call Extrae_address
1491  9063
1492  9063 5D           	ld e,l
1493  9064 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1494  9065
1495  9065 DD 2A 01 8C  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1496  9069
1497  9069 C9           	ret
1498  906A
1499  906A
1500  906A              Cargamos_registros_con_explosion_Amadeus
1501  906A
1502  906A 2A C0 89     	ld hl,(Pamm_Amadeus)
1503  906D CD FC 90     	call Extrae_address
1504  9070
1505  9070 5D           	ld e,l
1506  9071 54           	ld d,h
1507  9072
1508  9072 DD 2A BE 89  	ld ix,(p.imp.amadeus)
1509  9076
1510  9076 C9           	ret
1511  9077
1512  9077              ; --------------------------------------------------------------------------------------------------------------
1513  9077              ;
1514  9077              ;	17/06/24
1515  9077              ;
1516  9077              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1517  9077              ;
1518  9077              ;	IX contiene el puntero de impresión.
1519  9077              ;	DE contiene (Puntero_objeto).
1520  9077
1521  9077
1522  9077              Cargamos_registros_con_mov_masticado_Amadeus
1523  9077
1524  9077 ED 73 4B 8C  	ld (Stack),sp
1525  907B ED 7B C0 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1526  907F D1           	pop de 															; DE contiene Puntero_objeto
1527  9080 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1528  9082 DD 22 BE 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1529  9086 ED 7B 4B 8C  	ld sp,(Stack)
1530  908A C9           	ret
1531  908B
1532  908B              ; ---------------------------------------------------------------------------------------------------------------------
1533  908B              ;
1534  908B              ;	18/6/24
1535  908B              ;
1536  908B              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1537  908B
1538  908B              Genera_datos_de_impresion_Amadeus
1539  908B
1540  908B 3A BD 89     	ld a,(Impacto_Amadeus)
1541  908E A7           	and a
1542  908F 20 03        	jr nz,1F
1543  9091
1544  9091              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1545  9091              ; _apuntando a la correspondiente explosión.
1546  9091
1547  9091 CD 77 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1548  9094
1549  9094 DD 7D        1 ld a,ixl
1550  9096 E6 1F        	and $1f
1551  9098 32 BA 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1552  909B
1553  909B 2A 6D 8C     	ld hl,(Scanlines_album_SP)
1554  909E E5           	push hl
1555  909F
1556  909F 2A 53 8C     	ld hl,(Album_de_pintado_Amadeus)
1557  90A2 22 6D 8C     	ld (Scanlines_album_SP),hl
1558  90A5
1559  90A5 CD EE 94     	call Genera_datos_de_impresion
1560  90A8
1561  90A8 E1           	pop hl
1562  90A9 22 6D 8C     	ld (Scanlines_album_SP),hl
1563  90AC
1564  90AC C9           	ret
1565  90AD
1566  90AD              ; ---------------------------------------------------------------------------------------------------------------------
1567  90AD              ;
1568  90AD              ;	13/03/24
1569  90AD              ;
1570  90AD              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1571  90AD
1572  90AD              Inicia_albumes_de_lineas
1573  90AD
1574  90AD 21 00 80     	ld hl,Scanlines_album
1575  90B0 22 4F 8C     	ld (Album_de_pintado),hl
1576  90B3 22 6D 8C     	ld (Scanlines_album_SP),hl
1577  90B6
1578  90B6 21 1A 81     	ld hl,Scanlines_album_2
1579  90B9 22 51 8C     	ld (Album_de_borrado),hl
1580  90BC
1581  90BC C9           	ret
1582  90BD
1583  90BD              Inicia_albumes_de_lineas_Amadeus
1584  90BD
1585  90BD 21 34 82     	ld hl,Amadeus_scanlines_album
1586  90C0 22 53 8C     	ld (Album_de_pintado_Amadeus),hl
1587  90C3 21 58 82     	ld hl,Amadeus_scanlines_album_2
1588  90C6 22 55 8C     	ld (Album_de_borrado_Amadeus),hl
1589  90C9
1590  90C9 C9           	ret
1591  90CA
1592  90CA              Inicia_albumes_de_disparos
1593  90CA
1594  90CA 21 7C 82     	ld hl,Amadeus_disparos_scanlines_album
1595  90CD 22 57 8C     	ld (Album_de_pintado_disparos_Amadeus),hl
1596  90D0 21 82 82     	ld hl,Amadeus_disparos_scanlines_album_2
1597  90D3 22 59 8C     	ld (Album_de_borrado_disparos_Amadeus),hl
1598  90D6
1599  90D6 21 88 82     	ld hl,Entidades_disparos_scanlines_album
1600  90D9 22 5B 8C     	ld (Album_de_pintado_disparos_Entidades),hl
1601  90DC 22 5F 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1602  90DF
1603  90DF 21 B9 82     	ld hl,Entidades_disparos_scanlines_album_2
1604  90E2 22 5D 8C     	ld (Album_de_borrado_disparos_Entidades),hl
1605  90E5
1606  90E5 C9           	ret
1607  90E6
1608  90E6              ; ---------------------------------------------------------------------------------------------------------------------
1609  90E6              ;
1610  90E6              ; 8/1/23
1611  90E6              ;
1612  90E6              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1613  90E6              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1614  90E6              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1615  90E6
1616  90E6              ; Destruye HL y DE !!!!!
1617  90E6
1618  90E6              Inicia_punteros_de_cajas
1619  90E6
1620  90E6 21 A7 89     	ld hl,Indice_de_cajas_de_entidades
1621  90E9 CD FC 90         call Extrae_address
1622  90EC 22 3C 8C         ld (Puntero_store_caja),hl
1623  90EF 21 A9 89     	ld hl,Indice_de_cajas_de_entidades+2
1624  90F2 22 40 8C     	ld (Indice_restore_caja),hl
1625  90F5 CD FC 90     	call Extrae_address
1626  90F8 22 3E 8C     	ld (Puntero_restore_caja),hl
1627  90FB C9               ret
1628  90FC
1629  90FC              ; *************************************************************************************************************************************************************
1630  90FC
1631  90FC              ;
1632  90FC              ; 20/10/22
1633  90FC              ;
1634  90FC              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1635  90FC              ;
1636  90FC              ; Destruye el puntero y DE !!!!!
1637  90FC
1638  90FC 5E           Extrae_address ld e,(hl)
1639  90FD 23           	inc hl
1640  90FE 56           	ld d,(hl)
1641  90FF 2B           	dec hl
1642  9100 EB           	ex de,hl
1643  9101 C9           	ret
1644  9102
1645  9102              ; *************************************************************************************************************************************************************
1646  9102              ;
1647  9102              ;	20/1/24
1648  9102              ;
1649  9102              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1650  9102              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1651  9102              ;
1652  9102              ;   Destruye HL y BC !!!!!,
1653  9102              ;
1654  9102              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1655  9102              ;					"0" ..... Izquierda.
1656  9102
1657  9102              Inicia_Puntero_objeto
1658  9102
1659  9102 3A 1B 8C     	ld a,(Cuad_objeto)
1660  9105 E6 01        	and 1
1661  9107 F5           	push af
1662  9108 CC 24 91     	call z,Inicia_puntero_objeto_izq
1663  910B F1           	pop af
1664  910C C8           	ret z
1665  910D CD 11 91     	call Inicia_puntero_objeto_der
1666  9110 C9           	ret
1667  9111
1668  9111              ; Arrancamos desde la parte izquierda de la pantalla.
1669  9111              ; Iniciamos (Indice_Sprite_der).
1670  9111
1671  9111 2A 11 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1672  9114 22 15 8C     	ld (Puntero_DESPLZ_der),hl
1673  9117 CD FC 90     	call Extrae_address
1674  911A 22 0E 8C     	ld (Puntero_objeto),hl
1675  911D
1676  911D 2A 13 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1677  9120 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
1678  9123 C9           	ret
1679  9124
1680  9124              ; Arrancamos desde la parte derecha de la pantalla.
1681  9124              ; Iniciamos (Indice_Sprite_izq).
1682  9124
1683  9124 2A 13 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1684  9127 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
1685  912A CD FC 90     	call Extrae_address
1686  912D 22 0E 8C     	ld (Puntero_objeto),hl
1687  9130
1688  9130 2A 11 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1689  9133 22 15 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1690  9136 C9           	ret
1691  9137
1692  9137              ; **************************************************************************************************
1693  9137              ;
1694  9137              ;	06/07/24
1695  9137              ;
1696  9137              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1697  9137
1698  9137              Restore_entidad
1699  9137
1700  9137 2A 3C 8C     	ld hl,(Puntero_store_caja)
1701  913A 7E           	ld a,(hl)
1702  913B A7           	and a
1703  913C CC 4A 91     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1704  913F 28 F6        	jr z,Restore_entidad
1705  9141
1706  9141 11 FC 8B     	ld de,Bandeja_DRAW
1707  9144 01 0C 00     	ld bc,12
1708  9147 ED B0        	ldir
1709  9149 C9           	ret
1710  914A
1711  914A              ; **************************************************************************************************
1712  914A              ;
1713  914A              ;	08/05/23
1714  914A              ;
1715  914A              ;	Incrementamos los dos punteros de entidades. (+1).
1716  914A
1717  914A              Incrementa_punteros_de_cajas
1718  914A
1719  914A 2A 3E 8C     	ld hl,(Puntero_restore_caja)
1720  914D 22 3C 8C     	ld (Puntero_store_caja),hl
1721  9150 2A 40 8C     	ld hl,(Indice_restore_caja)
1722  9153 23           	inc hl
1723  9154 23           	inc hl
1724  9155 22 40 8C     	ld (Indice_restore_caja),hl
1725  9158 CD FC 90         call Extrae_address
1726  915B 22 3E 8C         ld (Puntero_restore_caja),hl
1727  915E C9               ret
1728  915F
1729  915F              ; -----------------------------------------------------------
1730  915F
1731  915F              ; Teclado.
1732  915F
1733  915F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1734  9161 DB FE        	in a,($fe)
1735  9163 E6 01        	and $01
1736  9165 28 02        	jr z,1f
1737  9167 18 F6        	jr Pulsa_ENTER
1738  9169 C9           1 ret
1739  916A
1740  916A              ; **************************************************************************************************
1741  916A              ;
1742  916A              ; Temporización.
1743  916A
1744  916A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1745  916A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1746  916A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1747  916A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1748  916A
1749  916A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1750  916A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1751  916A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1752  916A
1753  916A              ; A partir de $4f61 no hace falta DELAY.
1754  916A
1755  916A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1756  916A
1757  916A              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1758  916A              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1759  916A              ;	LD A,B
1760  916A              ;	AND A
1761  916A              ;	JR NZ,wait
1762  916A              ;	RET
1763  916A
1764  916A              ; ---------------------------------------------------------------------------------------------------------------
1765  916A              ;
1766  916A              ;	13/07/24
1767  916A              ;
1768  916A
1769  916A              Inicia_Shield
1770  916A
1771  916A 21 97 8C     	ld hl,Datos_Shield
1772  916D 22 9B 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1773  9170
1774  9170 7E           	ld a,(hl)
1775  9171 32 9E 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1776  9174
1777  9174 3E 01        	ld a,1
1778  9176 32 9F 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1779  9179
1780  9179 C9           	ret
1781  917A
1782  917A              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1783  917A              ;
1784  917A              ;	4/6/24
1785  917A              ;
1786  917A              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1787  917A              ;
1788  917A              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1789  917A              ;
1790  917A
1791  917A              Actualiza_pantalla
1792  917A
1793  917A 3E 02        	ld a,2
1794  917C D3 FE        	out ($fe),a
1795  917E
1796  917E 3A 73 8C     	ld a,(Ctrl_3)
1797  9181 CB 57        	bit 2,a
1798  9183 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1799  9185
1800  9185              Borrando_entidades
1801  9185
1802  9185 2A 6D 8C     	ld hl,(Scanlines_album_SP)
1803  9188 CD FC 90     	call Extrae_address
1804  918B 24           	inc h
1805  918C 25           	dec h
1806  918D 28 05        	jr z,Pintando_entidades
1807  918F CD E7 95     	call Pinta_Sprites
1808  9192 18 F1        	jr Borrando_entidades
1809  9194
1810  9194              Pintando_entidades
1811  9194
1812  9194 2A 6F 8C     	ld hl,(India_SP)
1813  9197 2C           	inc l
1814  9198 CD FC 90     	call Extrae_address
1815  919B 24           	inc h
1816  919C 25           	dec h
1817  919D 28 0E        	jr z,Ejecuta_escudo
1818  919F 1C           	inc e
1819  91A0 1C           	inc e
1820  91A1 ED 53 6F 8C  	ld (India_SP),de
1821  91A5 CD FC 90     	call Extrae_address
1822  91A8 CD E7 95     	call Pinta_Sprites
1823  91AB 18 E7        	jr Pintando_entidades
1824  91AD
1825  91AD              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1826  91AD
1827  91AD              Ejecuta_escudo
1828  91AD
1829  91AD 3A 9D 8C     	ld a,(Shield)
1830  91B0 A7           	and a
1831  91B1 20 2F        	jr nz,Aplica_Shield
1832  91B3
1833  91B3              Borrando_Amadeus
1834  91B3
1835  91B3 21 73 8C     	ld hl,Ctrl_3
1836  91B6 CB 6E        	bit 5,(hl)
1837  91B8 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1838  91BA
1839  91BA 2A 55 8C     	ld hl,(Album_de_borrado_Amadeus)
1840  91BD CD FC 90     	call Extrae_address
1841  91C0 24           	inc h
1842  91C1 25           	dec h
1843  91C2 28 03        	jr z,Pintando_Amadeus
1844  91C4 CD E7 95     	call Pinta_Sprites
1845  91C7
1846  91C7              Pintando_Amadeus
1847  91C7
1848  91C7 2A 53 8C     	ld hl,(Album_de_pintado_Amadeus)
1849  91CA CD FC 90     	call Extrae_address
1850  91CD 24           	inc h
1851  91CE 25           	dec h
1852  91CF 28 03        	jr z,1F
1853  91D1 CD E7 95     	call Pinta_Sprites
1854  91D4
1855  91D4              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1856  91D4
1857  91D4 21 73 8C     1 ld hl,Ctrl_3
1858  91D7 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1859  91D9 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1860  91DB CB AE        	res 5,(hl)
1861  91DD
1862  91DD 3E 01        	ld a,1												; Borde azul.
1863  91DF D3 FE        	out ($fe),a
1864  91E1
1865  91E1 C9           	ret
1866  91E2
1867  91E2              Aplica_Shield
1868  91E2
1869  91E2              ;	Bit 1 "1" (Shield_3) Sólo borra.
1870  91E2              ;		  "0"     ""     Borra/Pinta.
1871  91E2              ;	Bit 2    ""  RET.	 No borra, no pinta.
1872  91E2
1873  91E2 21 9F 8C     	ld hl,Shield_3
1874  91E5
1875  91E5 CB 5E        	bit 3,(hl)
1876  91E7 20 DE        	jr nz,Pintando_Amadeus
1877  91E9
1878  91E9 CB 56        	bit 2,(hl)
1879  91EB 20 E7        	jr nz,1B
1880  91ED
1881  91ED CB 4E        	bit 1,(hl)
1882  91EF C4 F6 91     	call nz,Borra_Amadeus_shield
1883  91F2
1884  91F2 28 BF        	jr z,Borrando_Amadeus
1885  91F4 18 DE        	jr 1B
1886  91F6
1887  91F6              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1888  91F6
1889  91F6              Borra_Amadeus_shield
1890  91F6
1891  91F6 3A 73 8C     	ld a,(Ctrl_3)
1892  91F9 CB 6F        	bit 5,a
1893  91FB 28 08        	jr z,1F
1894  91FD
1895  91FD 2A 55 8C     	ld hl,(Album_de_borrado_Amadeus)
1896  9200 CD FC 90     	call Extrae_address
1897  9203 18 06        	jr 2F
1898  9205
1899  9205 2A 53 8C     1 ld hl,(Album_de_pintado_Amadeus)
1900  9208 CD FC 90     	call Extrae_address
1901  920B
1902  920B CD E7 95     2 call Pinta_Sprites
1903  920E
1904  920E AF           	xor a
1905  920F 3C           	inc a											; Asegura NZ en la salida de la rutina.
1906  9210
1907  9210 C9           	ret
1908  9211
1909  9211              Pinta_Amadeus_shield
1910  9211
1911  9211 2A 53 8C     	ld hl,(Album_de_pintado_Amadeus)
1912  9214 CD FC 90     	call Extrae_address
1913  9217 CD E7 95     	call Pinta_Sprites
1914  921A
1915  921A AF           	xor a
1916  921B 3C           	inc a											; Asegura NZ en la salida de la rutina.
1917  921C
1918  921C C9           	ret
1919  921D
1920  921D              Borra_Pinta_Amadeus_shield
1921  921D
1922  921D CD F6 91     	call Borra_Amadeus_shield
1923  9220 CD 11 92     	call Pinta_Amadeus_shield
1924  9223 C9           	ret
1925  9224
1926  9224              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1927  9224              ;
1928  9224              ;	19/6/24
1929  9224              ;
1930  9224
1931  9224              Teclado
1932  9224
1933  9224              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
1934  9224
1935  9224 3E F7        	ld a,$f7												; "5" para disparar.
1936  9226 DB FE        	in a,($fe)
1937  9228 E6 10        	and $10
1938  922A
1939  922A CC 81 A2     	call z,Genera_disparo_Amadeus
1940  922D
1941  922D 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1942  922F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1943  9231 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1944  9233 CC 54 9D         call z,Amadeus_a_izquierda
1945  9236
1946  9236 3E F7        	ld a,$f7
1947  9238 DB FE        	in a,($fe)
1948  923A E6 01        	and $01
1949  923C C8           	ret z
1950  923D
1951  923D 3E F7        	ld a,$f7
1952  923F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1953  9241 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1954  9243 CC 6C 9D     	call z,Amadeus_a_derecha
1955  9246
1956  9246 C9           	ret
1957  9247
1958  9247              ; ------------------------------------------------------------------------------------------------------------------------
1959  9247              ;
1960  9247              ;	06/07/24
1961  9247              ;
1962  9247
1963  9247              Genera_explosion
1964  9247
1965  9247 21 85 8C     	ld hl,Clock_explosion
1966  924A 35           	dec (hl)
1967  924B 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
1968  924D
1969  924D              Borra_entidad_colisionada
1970  924D
1971  924D CD 54 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
1972  9250 CD 5D 90     	call Cargamos_registros_con_explosion
1973  9253 CD EE 94     	call Genera_datos_de_impresion
1974  9256
1975  9256 AF           	xor a
1976  9257 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
1977  9258
1978  9258 C9           	ret
1979  9259
1980  9259              Siguiente_frame_explosion
1981  9259
1982  9259 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
1983  925B
1984  925B              ; Avanza Frame de explosión.
1985  925B
1986  925B 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1987  925E 01 C4 87     	ld bc,Indice_Explosion_entidades+4
1988  9261
1989  9261 79           	ld a,c
1990  9262 95           	sub l
1991  9263 20 0B        	jr nz,1F
1992  9265
1993  9265              ; Fín de la entidad !!!!!!!!!!!!!
1994  9265
1995  9265 21 45 8C     	ld hl,Numero_parcial_de_entidades
1996  9268 35           	dec (hl)
1997  9269 23           	inc hl
1998  926A 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
1999  926B
2000  926B CD DD 93     	call Limpiamos_bandeja_DRAW
2001  926E 18 DD        	jr Borra_entidad_colisionada
2002  9270
2003  9270 23           1 inc hl
2004  9271 23           	inc hl
2005  9272 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
2006  9275 18 D6        	jr Borra_entidad_colisionada
2007  9277
2008  9277              ; ----- ----- ----- ----- -----
2009  9277
2010  9277              Genera_explosion_Amadeus
2011  9277
2012  9277 21 86 8C     	ld hl,Clock_explosion_Amadeus
2013  927A 35           	dec (hl)
2014  927B 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2015  927D
2016  927D              Borra_Amadeus_impactado
2017  927D
2018  927D CD B9 8E     	call Change_Amadeus
2019  9280 CD 6A 90     	call Cargamos_registros_con_explosion_Amadeus
2020  9283 CD 8B 90     	call Genera_datos_de_impresion_Amadeus
2021  9286
2022  9286 21 73 8C     	ld hl,Ctrl_3
2023  9289 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2024  928B
2025  928B AF           	xor a
2026  928C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2027  928D
2028  928D C9           	ret
2029  928E
2030  928E              Siguiente_frame_explosion_Amadeus
2031  928E
2032  928E 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2033  9290
2034  9290              ; Avanza Frame de explosión.
2035  9290
2036  9290 2A C0 89     	ld hl,(Pamm_Amadeus)
2037  9293 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2038  9296
2039  9296 79           	ld a,c
2040  9297 95           	sub l
2041  9298 20 0B        	jr nz,1F
2042  929A
2043  929A              ; Fín de Amadeus !!!!!!!!!!!!!
2044  929A              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2045  929A
2046  929A AF           	xor a
2047  929B 32 BD 89     	ld (Impacto_Amadeus),a
2048  929E 21 73 8C     	ld hl,Ctrl_3
2049  92A1 CB F6        	set 6,(hl)
2050  92A3
2051  92A3 18 D8        	jr Borra_Amadeus_impactado
2052  92A5
2053  92A5 23           1 inc hl
2054  92A6 23           	inc hl
2055  92A7 22 C0 89     	ld (Pamm_Amadeus),hl
2056  92AA 18 D1        	jr Borra_Amadeus_impactado
2057  92AC
2058  92AC              ; ---------------------------------------------------------------
2059  92AC
2060  92AC              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 92AC              ; ******************************************************************************************************************************************************************************************
   2+ 92AC              ;
   3+ 92AC              ;   21/04/24
   4+ 92AC              ;
   5+ 92AC              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 92AC              ;   (XOR) bit a bit.
   7+ 92AC              ;
   8+ 92AC              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 92AC
  10+ 92AC              Derivando_RND
  11+ 92AC
  12+ 92AC 21 F6 88         ld hl,Numeros_aleatorios
  13+ 92AF
  14+ 92AF ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 92B1 C5               push bc
  16+ 92B2              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 92B2 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 92B5              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 92B5
  20+ 92B5 A7           6 and a                                 ; Carry a "0".
  21+ 92B6 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 92B8 30 02            jr nc,1F
  23+ 92BA
  24+ 92BA CB C1            set 0,c
  25+ 92BC
  26+ 92BC 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 92BD E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 92BF 5F               ld e,a
  29+ 92C0
  30+ 92C0 7A               ld a,d
  31+ 92C1 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 92C3 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 92C5
  34+ 92C5 CB 3F            srl a
  35+ 92C7
  36+ 92C7 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 92C8
  38+ 92C8 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 92C9 28 04            jr z,4F
  40+ 92CB
  41+ 92CB CB FF            set 7,a
  42+ 92CD 18 02            jr 5F
  43+ 92CF
  44+ 92CF CB BF        4 res 7,a
  45+ 92D1
  46+ 92D1 CB 21        5 sla c
  47+ 92D3 10 E0            djnz 6B
  48+ 92D5
  49+ 92D5 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 92D6
  51+ 92D6 77               ld (hl),a
  52+ 92D7 23               inc hl
  53+ 92D8 C1               pop bc
  54+ 92D9 10 D4            djnz 3B
  55+ 92DB
  56+ 92DB C9               ret
  57+ 92DC
  58+ 92DC
  59+ 92DC
# file closed: RND_Derivando.asm
2061  92DC              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 92DC              ;---------------------------------------------------------------------------------------------------------------
   2+ 92DC              ;
   3+ 92DC              ;   12/11/24
   4+ 92DC
   5+ 92DC              ;	Prepara las CAJAS MASTER y genera los movimientos masticados de todas las entidades que aparecerán en el nivel.
   6+ 92DC
   7+ 92DC
   8+ 92DC              Genera_movimientos_masticados_del_nivel
   9+ 92DC
  10+ 92DC CD 1C 93     	call Inicializa_Nivel
  11+ 92DF
  12+ 92DF              ; 	Tras ejecutar [Inicializa_Nivel] tenemos:
  13+ 92DF
  14+ 92DF              ;	(Puntero_indice_NIVELES) apunta al nivel en el que nos encontramos, (dentro del índice).
  15+ 92DF              ;	(Numero_de_entidades) contiene el nº de entidades que conforman el nivel.
  16+ 92DF              ;	(Datos_de_nivel) apunta al .db, (tipo) de la 1ª entidad del Nivel.
  17+ 92DF
  18+ 92DF 3A 44 8C     	ld a,(Numero_de_entidades)
  19+ 92E2 47           	ld b,a
  20+ 92E3 C5           1 push bc														; Push (Numero_de_entidades).
  21+ 92E4
  22+ 92E4 E5            	push hl														; (Datos_de_nivel).
  23+ 92E5 7E           	ld a,(hl)													; A contiene el (Tipo) de la entidad del Nivel.
  24+ 92E6
  25+ 92E6              ;	Preparamos el puntero_master para que apunte al .defw correspondiente del índice según el (Tipo) de entidad.
  26+ 92E6
  27+ 92E6 CD 3C 94         call Calcula_salto_en_BC
  28+ 92E9 21 61 89         ld hl,Indice_de_cajas_master
  29+ 92EC A7               and a
  30+ 92ED ED 4A            adc hl,bc
  31+ 92EF 22 42 8C       	ld (Puntero_indice_master),hl
  32+ 92F2
  33+ 92F2              ;	Caja Master inicializada ???
  34+ 92F2
  35+ 92F2 CD FC 90     	call Extrae_address
  36+ 92F5 7E           	ld a,(hl)
  37+ 92F6 A7           	and a
  38+ 92F7 20 1D        	jr nz,Movimientos_masticados_construidos
  39+ 92F9
  40+ 92F9              ;	Se han construido los "Movimientos masticados" de este (Tipo) de entidad ?
  41+ 92F9
  42+ 92F9 E1           	pop hl
  43+ 92FA 7E           	ld a,(hl)
  44+ 92FB E5           	push hl
  45+ 92FC
  46+ 92FC CD C8 93     	call Definicion_segun_tipo
  47+ 92FF CD 51 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición de entidad en DRAW.
  48+ 9302
  49+ 9302 3A FC 8B     	ld a,(Tipo)
  50+ 9305 CD 2F 93     	call Situa_Puntero_indice_mov			 	 				; Sitúa (Puntero_indice_mov) según el (Tipo) de entidad en el 1er .defw del índice de su coreogradía.
  51+ 9308
  52+ 9308              ; 	Antes de empezar a generar los "movimientos masticados" de esta entidad necesitamos determinar su (Posicion_inicio).
  53+ 9308
  54+ 9308              ;	ld hl,(RND_SP)												; RND_SP Puntero que se va desplazando por el SET de nº aleatorios.
  55+ 9308              ;	ld a,(hl)
  56+ 9308              ;	and $1f														; Define el nº de columna por el que va a aparecer la entidad.
  57+ 9308
  58+ 9308              ;	ld hl,Posicion_inicio
  59+ 9308              ;	ld (hl),a
  60+ 9308
  61+ 9308              ;	Ya disponemos de una (Posicion_inicio) aleatoria y la definición de la entidad en la "Bandeja DRAW".
  62+ 9308              ;	Generamos "Movimientos masticados" de la entidad.
  63+ 9308
  64+ 9308 CD F0 8F     	call Construye_movimientos_masticados_entidad
  65+ 930B
  66+ 930B              ; 	Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
  67+ 930B              ; 	(Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
  68+ 930B              ; 	(Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
  69+ 930B              ; 	Contador_general_de_mov_masticados de este tipo de entidad actualizado.
  70+ 930B              ; 	Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
  71+ 930B
  72+ 930B 2A 42 8C     	ld hl,(Puntero_indice_master)
  73+ 930E CD FC 90     	call Extrae_address
  74+ 9311
  75+ 9311 5D           	ld e,l
  76+ 9312 54           	ld d,h
  77+ 9313
  78+ 9313 CD 7E 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades Master completa.
  79+ 9316
  80+ 9316              Movimientos_masticados_construidos
  81+ 9316
  82+ 9316 E1           	pop hl
  83+ 9317 2C           	inc l														; Datos_de_nivel +1 en HL.
  84+ 9318
  85+ 9318 C1           	pop bc														; Pop (Numero_de_entidades).
  86+ 9319 10 C8        	djnz 1B
  87+ 931B C9           	ret
  88+ 931C
  89+ 931C              ;---------------------------------------------------------------------------------------------------------------
  90+ 931C              ;
  91+ 931C              ;   9/11/24
  92+ 931C              ;
  93+ 931C              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  94+ 931C              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  95+ 931C              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  96+ 931C              ;	_ de la 1ª entidad del Nivel.
  97+ 931C              ;
  98+ 931C              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  99+ 931C
 100+ 931C              ;	MODIFICA: HL,DE y A.
 101+ 931C              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
 102+ 931C
 103+ 931C              Inicializa_Nivel
 104+ 931C
 105+ 931C              ;	Inicializa 1er Nivel y sitúa (Puntero_indice_NIVELES) en el 2º Nivel.
 106+ 931C
 107+ 931C 21 E0 8B     	ld hl,Indice_de_niveles
 108+ 931F CD FC 90     	call Extrae_address
 109+ 9322 ED 53 93 8C  	ld (Puntero_indice_NIVELES),de				 ; Situamos (Puntero_indice_NIVELES) en el 2º Nivel del índice.
 110+ 9326
 111+ 9326 7E           	ld a,(hl)
 112+ 9327 32 44 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
 113+ 932A
 114+ 932A 2C           	inc l
 115+ 932B 22 95 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
 116+ 932E
 117+ 932E C9           	ret
 118+ 932F
 119+ 932F              ; ----------------------
 120+ 932F
 121+ 932F              ; Fija_velocidades ld de,Perfiles_de_velocidad
 122+ 932F              ; 	ld bc,4
 123+ 932F              ; 	ldir
 124+ 932F              ; 	ret
 125+ 932F
 126+ 932F 7E           Situa_Puntero_indice_mov ld a,(hl)     	 							; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
 127+ 9330 CD 3C 94         call Calcula_salto_en_BC
 128+ 9333 21 21 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
 129+ 9336 A7               and a
 130+ 9337 ED 4A            adc hl,bc
 131+ 9339 CD FC 90         call Extrae_address
 132+ 933C 22 2D 8C         ld (Puntero_indice_mov),hl
 133+ 933F C9               ret
 134+ 9340
 135+ 9340              ;Situa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
 136+ 9340              ;	call Calcula_salto_en_BC
 137+ 9340              ;	ld hl,Indice_de_almacenes_de_mov_masticados
 138+ 9340              ;    and a
 139+ 9340              ;    adc hl,bc
 140+ 9340              ;    call Extrae_address
 141+ 9340              ;	ld (Puntero_de_almacen_de_mov_masticados),hl
 142+ 9340              ;	ret
 143+ 9340
 144+ 9340              ;---------------------------------------------------------------------------------------------------------------
 145+ 9340              ;
 146+ 9340              ;   5/1/24
 147+ 9340              ;
 148+ 9340              ;	Destruye A,BC,HL,DE
 149+ 9340
 150+ 9340              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
 151+ 9340              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
 152+ 9340
 153+ 9340              Inicia_Entidades
 154+ 9340
 155+ 9340              ; Preparamos los punteros de las cajas de entidades:
 156+ 9340
 157+ 9340 CD E6 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 158+ 9343              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 159+ 9343 CD 87 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
 160+ 9346
 161+ 9346 2A 95 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
 162+ 9349
 163+ 9349 22 95 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
 164+ 934C
 165+ 934C              ;	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
 166+ 934C
 167+ 934C 2A 95 8C     	ld hl,(Datos_de_nivel)
 168+ 934F
 169+ 934F              ; En este punto:
 170+ 934F              ;
 171+ 934F              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
 172+ 934F              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 173+ 934F
 174+ 934F C5           1 push bc 														; Guardo el nº de cajas a rellenar.
 175+ 9350
 176+ 9350 7E           	ld a,(hl)
 177+ 9351 CD C8 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 178+ 9354
 179+ 9354 CD 51 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 180+ 9357
 181+ 9357              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 182+ 9357
 183+ 9357              ;	call Busca_mov_masticados_segun_tipo
 184+ 9357
 185+ 9357 A7           	and a
 186+ 9358 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 187+ 935A
 188+ 935A              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 189+ 935A
 190+ 935A              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 191+ 935A              ;	_ de este tipo de entidad.
 192+ 935A
 193+ 935A CD EB 9E     	call Situa_en_contador_general_de_mov_masticados
 194+ 935D CD F8 9E     	call Transfiere_datos_de_contadores
 195+ 9360
 196+ 9360 18 03        	jr 4F
 197+ 9362
 198+ 9362 CD F0 8F     3 call Construye_movimientos_masticados_entidad
 199+ 9365
 200+ 9365              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 201+ 9365              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 202+ 9365              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 203+ 9365              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 204+ 9365              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 205+ 9365
 206+ 9365              ;	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 207+ 9365              ;																; _ Mov_masticados ya generados.
 208+ 9365
 209+ 9365 CD 44 90     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 210+ 9368
 211+ 9368 DD E5        	push ix
 212+ 936A E1           	pop hl 														; (Puntero_de_impresion) en HL.
 213+ 936B
 214+ 936B D5           	push de
 215+ 936C CD C2 94     	call Genera_coordenadas
 216+ 936F
 217+ 936F ED 5B 6D 8C  	ld de,(Scanlines_album_SP)
 218+ 9373 CD 54 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 219+ 9376 D1           	pop de
 220+ 9377
 221+ 9377 CD EE 94     	call Genera_datos_de_impresion
 222+ 937A              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 223+ 937A              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 224+ 937A              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 225+ 937A              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 226+ 937A
 227+ 937A CD 00 94     	call Decrementa_Contador_de_mov_masticados
 228+ 937D
 229+ 937D              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 230+ 937D
 231+ 937D ED 5B 3C 8C  	ld de,(Puntero_store_caja)
 232+ 9381 CD 7E 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 233+ 9384
 234+ 9384 CD DD 93     	call Limpiamos_bandeja_DRAW
 235+ 9387 CD 4A 91     	call Incrementa_punteros_de_cajas
 236+ 938A
 237+ 938A              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 238+ 938A              ; _ entidad del Nivel.
 239+ 938A
 240+ 938A 3A 74 8C     	ld a,(Ctrl_4)
 241+ 938D E6 F0        	and $f0
 242+ 938F 32 74 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 243+ 9392
 244+ 9392              ; Siguiente entidad del Nivel.
 245+ 9392
 246+ 9392 2A 95 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 247+ 9395 23           	inc hl 														; _ entidad del Nivel.
 248+ 9396
 249+ 9396 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 250+ 9397
 251+ 9397 10 B0        	djnz 2B
 252+ 9399
 253+ 9399 C9           	ret
 254+ 939A
 255+ 939A              ; -------------------------------------------------------------------------------------------------------------------
 256+ 939A              ;
 257+ 939A              ;	27/5/24
 258+ 939A              ;
 259+ 939A              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 260+ 939A              ;
 261+ 939A
 262+ 939A              ; 	Cargamos la definición de Amadeus en DRAW.
 263+ 939A              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 264+ 939A
 265+ 939A 21 37 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 266+ 939D CD 51 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 267+ 93A0
 268+ 93A0
 269+ 93A0              Construye_movimientos_masticados_Amadeus
 270+ 93A0
 271+ 93A0 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 272+ 93A3 CD 37 90     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 273+ 93A6              ;															; _ el (Contador_de_mov_masticados).
 274+ 93A6 CD 02 91     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 275+ 93A9              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 276+ 93A9
 277+ 93A9              ; Generamos movimientos masticados de Amadeus.
 278+ 93A9
 279+ 93A9 06 79        	ld b,121												; $0079, 121d.
 280+ 93AB
 281+ 93AB C5           1 push bc
 282+ 93AC CD 0A 97     	call Draw
 283+ 93AF CD 1C 90     	call Guarda_movimiento_masticado
 284+ 93B2
 285+ 93B2 CD 7E 9A     	call Mov_right
 286+ 93B5 CD 7E 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 287+ 93B8
 288+ 93B8 C1           	pop bc
 289+ 93B9 10 F0        	djnz 1B
 290+ 93BB
 291+ 93BB              ; Todos los movimientos masticados de Amadeus se han creado.
 292+ 93BB
 293+ 93BB              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 294+ 93BB              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 295+ 93BB
 296+ 93BB 2A 03 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 297+ 93BE 01 08 00     	ld bc,8
 298+ 93C1 A7           	and a
 299+ 93C2 ED 42        	sbc hl,bc
 300+ 93C4 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 301+ 93C7
 302+ 93C7 C9           	ret
 303+ 93C8
 304+ 93C8              ; ---------------------------------------------------------------------
 305+ 93C8              ;
 306+ 93C8              ;	10/02/24
 307+ 93C8              ;
 308+ 93C8              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 309+ 93C8              ;
 310+ 93C8              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 311+ 93C8
 312+ 93C8              Definicion_segun_tipo
 313+ 93C8
 314+ 93C8 CD 3C 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 315+ 93CB 21 19 8A     	ld hl,Indice_de_definiciones_de_entidades
 316+ 93CE CD 47 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 317+ 93D1 C9           	ret
 318+ 93D2
 319+ 93D2              ; ---------------------------------------------------------------------
 320+ 93D2              ;
 321+ 93D2              ;	6/7/24
 322+ 93D2
 323+ 93D2
 324+ 93D2              Store_Restore_cajas
 325+ 93D2
 326+ 93D2 ED 5B 3C 8C  	ld de,(Puntero_store_caja)
 327+ 93D6 CD 7E 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 328+ 93D9 CD 4A 91     	call Incrementa_punteros_de_cajas
 329+ 93DC C9           	ret
 330+ 93DD
 331+ 93DD              ; ---------------------------------------------------------------------
 332+ 93DD              ;
 333+ 93DD              ;	23/6/24
 334+ 93DD              ;
 335+ 93DD              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 336+ 93DD              ;
 337+ 93DD              ;	MODIFY: HL
 338+ 93DD
 339+ 93DD              Limpiamos_bandeja_DRAW
 340+ 93DD
 341+ 93DD ED 73 4B 8C  	ld (Stack),sp
 342+ 93E1 31 21 8C     	ld sp,Vel_left
 343+ 93E4
 344+ 93E4 AF           	xor a
 345+ 93E5 67           	ld h,a
 346+ 93E6 6F           	ld l,a
 347+ 93E7
 348+ 93E7 E5           	push hl
 349+ 93E8 E5           	push hl
 350+ 93E9 E5           	push hl
 351+ 93EA E5           	push hl
 352+ 93EB E5           	push hl
 353+ 93EC E5           	push hl
 354+ 93ED E5           	push hl
 355+ 93EE E5           	push hl
 356+ 93EF E5           	push hl
 357+ 93F0 E5           	push hl
 358+ 93F1 E5           	push hl
 359+ 93F2 E5           	push hl
 360+ 93F3 E5           	push hl
 361+ 93F4 E5           	push hl
 362+ 93F5 E5           	push hl
 363+ 93F6 E5           	push hl
 364+ 93F7 E5           	push hl
 365+ 93F8 E5           	push hl
 366+ 93F9
 367+ 93F9 33           	inc sp
 368+ 93FA
 369+ 93FA E5           	push hl
 370+ 93FB ED 7B 4B 8C  	ld sp,(Stack)
 371+ 93FF
 372+ 93FF C9           	ret
 373+ 9400
 374+ 9400              ; ---------------------------------------------------------------------
 375+ 9400              ;
 376+ 9400              ;	24/03/24
 377+ 9400
 378+ 9400 2A 05 8C     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 379+ 9403 2B           	dec hl
 380+ 9404 22 05 8C     	ld (Contador_de_mov_masticados),hl
 381+ 9407 C9           	ret
 382+ 9408
 383+ 9408              ; ---------------------------------------------------------------------
 384+ 9408              ;
 385+ 9408              ;	7/11/24
 386+ 9408
 387+ 9408              Reinicia_entidad_maliciosa
 388+ 9408
 389+ 9408              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 390+ 9408
 391+ 9408 CD EB 9E     	call Situa_en_contador_general_de_mov_masticados
 392+ 940B CD F8 9E     	call Transfiere_datos_de_contadores
 393+ 940E
 394+ 940E              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 395+ 940E
 396+ 940E 3A FC 8B     	ld a,(Tipo)
 397+ 9411 CD C8 93     	call Definicion_segun_tipo
 398+ 9414
 399+ 9414 E5           	push hl
 400+ 9415 DD E1        	pop ix
 401+ 9417
 402+ 9417 DD 6E 0B     	ld l,(ix+11)
 403+ 941A DD 66 0C     	ld h,(ix+12)
 404+ 941D
 405+ 941D 22 03 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 406+ 9420
 407+ 9420 CD 44 90     	call Cargamos_registros_con_mov_masticado
 408+ 9423
 409+ 9423              ; Incrementa (Contador_de_vueltas)x2.
 410+ 9423              ; (Velocidad) de la entidad será: (Contador_de_vueltas)/4.
 411+ 9423
 412+ 9423              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 413+ 9423              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 414+ 9423              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 415+ 9423              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 416+ 9423              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 417+ 9423
 418+ 9423 21 FF 8B     	ld hl,Contador_de_vueltas
 419+ 9426 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 420+ 9428
 421+ 9428 7E           	ld a,(hl)
 422+ 9429 CB 2F        	sra a
 423+ 942B CB 2F        	sra a
 424+ 942D
 425+ 942D 32 07 8C     	ld (Velocidad),a
 426+ 9430
 427+ 9430 3E 40        	ld a,$40
 428+ 9432 BE           	cp (hl)
 429+ 9433 C0           	ret nz
 430+ 9434
 431+ 9434              ; Límitador.
 432+ 9434
 433+ 9434              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 434+ 9434
 435+ 9434 CB 2E        	sra (hl)
 436+ 9436 21 07 8C     	ld hl,Velocidad
 437+ 9439 CB 2E        	sra (hl)
 438+ 943B
 439+ 943B C9           	ret
 440+ 943C
 441+ 943C              ;	------------------------------------------------------------------------------------
 442+ 943C              ;
 443+ 943C              ;	09/11/24
 444+ 943C              ;
 445+ 943C              ;	INPUTS:	A contiene el (Tipo) de entidad.
 446+ 943C              ;
 447+ 943C              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 448+ 943C              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 449+ 943C
 450+ 943C A7           Calcula_salto_en_BC and a
 451+ 943D 28 04        	jr z,1F
 452+ 943F CB 27        	sla a
 453+ 9441 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 454+ 9443 4F           1 ld c,a
 455+ 9444 06 00        	ld b,0
 456+ 9446 C9           	ret
 457+ 9447
 458+ 9447              ; ------------------------------------------------------------------
 459+ 9447              ;
 460+ 9447              ;	19/1/24
 461+ 9447              ;
 462+ 9447              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 463+ 9447              ;	Actualiza (Datos_de_entidad) con esa dirección.
 464+ 9447
 465+ 9447 A7           Situa_en_datos_de_definicion and a
 466+ 9448 ED 4A        	adc hl,bc
 467+ 944A CD FC 90     	call Extrae_address
 468+ 944D 22 49 8C         ld (Datos_de_entidad),hl
 469+ 9450 C9           	ret
 470+ 9451
 471+ 9451              ; ------------------------------------------------------------------
 472+ 9451
 473+ 9451              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 474+ 9451              ; 	inc de
 475+ 9451              ; 	inc de
 476+ 9451              ; 	ex de,hl
 477+ 9451              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 478+ 9451              ; 	ret
 479+ 9451
 480+ 9451              ; ----------------------------------------------------------------------------------------------------------
 481+ 9451              ;
 482+ 9451              ;	24/6/24
 483+ 9451              ;
 484+ 9451              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 485+ 9451              ;	_ de entidad.
 486+ 9451              ;
 487+ 9451              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 488+ 9451              ;
 489+ 9451              ;
 490+ 9451              ;	MODIFICA: HL,DE y BC
 491+ 9451
 492+ 9451
 493+ 9451              Definicion_de_entidad_a_bandeja_DRAW
 494+ 9451
 495+ 9451 11 FC 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 496+ 9454 7E           	ld a,(hl) 									; Volcamos Tipo.
 497+ 9455 12           	ld (de),a
 498+ 9456 23           	inc hl
 499+ 9457              ;
 500+ 9457 11 0A 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 501+ 945A 01 02 00     	ld bc,2
 502+ 945D ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 503+ 945F              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 504+ 945F 11 FF 8B     	ld de,Contador_de_vueltas
 505+ 9462 7E           	ld a,(hl)
 506+ 9463 12           	ld (de),a
 507+ 9464 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 508+ 9465
 509+ 9465 11 11 8C     	ld de,Indice_Sprite_der
 510+ 9468 01 04 00     	ld bc,4
 511+ 946B ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 512+ 946D
 513+ 946D 11 19 8C     	ld de,Posicion_inicio
 514+ 9470 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 515+ 9473 ED B0        	ldir 									; Vuelco (Frames_explosion).
 516+ 9475
 517+ 9475 11 03 8C     	ld de,Puntero_de_almacen_de_mov_masticados
 518+ 9478 01 02 00     	ld bc,2
 519+ 947B ED B0        	ldir
 520+ 947D
 521+ 947D C9           	ret
 522+ 947E
 523+ 947E              ; ----------------------------------------------------------------------------------------------------------
 524+ 947E              ;
 525+ 947E              ;	1/8/24
 526+ 947E              ;
 527+ 947E
 528+ 947E              Parametros_de_bandeja_DRAW_a_caja
 529+ 947E
 530+ 947E 21 FC 8B     	ld hl,Bandeja_DRAW
 531+ 9481 01 0C 00     	ld bc,12
 532+ 9484 ED B0        	ldir
 533+ 9486 C9           	ret
 534+ 9487
 535+ 9487              ;---------------------------------------------------------------------------------------------------------------
 536+ 9487              ;
 537+ 9487              ;	5/1/24
 538+ 9487              ;
 539+ 9487              ;	INICIALIZA (Numero_parcial_de_entidades).
 540+ 9487              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 541+ 9487              ;
 542+ 9487              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 543+ 9487              ;
 544+ 9487              ;	(Numero_parcial_de_entidades)="7".
 545+ 9487              ;
 546+ 9487              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 547+ 9487              ;
 548+ 9487              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 549+ 9487              ;
 550+ 9487              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 551+ 9487              ;	MODIFICA: A y B.
 552+ 9487              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 553+ 9487
 554+ 9487              Inicializa_Numero_parcial_de_entidades
 555+ 9487
 556+ 9487              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 557+ 9487
 558+ 9487 3A 44 8C     	ld a,(Numero_de_entidades)
 559+ 948A A7           	and a
 560+ 948B
 561+ 948B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 562+ 948B              ;	jr z,$
 563+ 948B              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 564+ 948B
 565+ 948B 20 03        	jr nz,3F
 566+ 948D
 567+ 948D              ; ---------- ---------- ----------
 568+ 948D
 569+ 948D              ;! RESET para pruebas. Omitir esta línea en modo normal.
 570+ 948D              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 571+ 948D
 572+ 948D CD 1C 93     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 573+ 9490
 574+ 9490              ; ---------- ---------- ----------
 575+ 9490
 576+ 9490 3A 44 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 577+ 9493 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 578+ 9495 38 08        	jr c,1F
 579+ 9497
 580+ 9497              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 581+ 9497              ; Actualizamos variables.
 582+ 9497
 583+ 9497 3E 07        	ld a,7
 584+ 9499 32 45 8C     	ld (Numero_parcial_de_entidades),a
 585+ 949C 47           	ld b,a
 586+ 949D 18 04        	jr 2F
 587+ 949F
 588+ 949F              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 589+ 949F              ; (Numero_de_entidades)="0".
 590+ 949F
 591+ 949F 32 45 8C     1 ld (Numero_parcial_de_entidades),a
 592+ 94A2 47           	ld b,a
 593+ 94A3 C9           2 ret
 594+ 94A4
# file closed: Rutinas_de_inicio_y_niveles.asm
2062  94A4              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94A4              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94A4              ;
   3+ 94A4              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94A4              ;
   5+ 94A4              ; *****************************************************************************************************************************************************************************************
   6+ 94A4              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94A4
   8+ 94A4 7C           calcula_tercio ld a,h
   9+ 94A5 E6 18        	and $18
  10+ 94A7 CB 2F        	sra a
  11+ 94A9 CB 2F        	sra a
  12+ 94AB CB 2F        	sra a
  13+ 94AD C9           	ret
  14+ 94AE
# file closed: calcula_tercio.asm
2063  94AE              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94AE              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94AE              ;
   3+ 94AE              ;
   4+ 94AE              ;	CLS.
   5+ 94AE              ;
   6+ 94AE              ;	Limpia la pantalla y define sus atributos.
   7+ 94AE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94AE              ;
   9+ 94AE              ;	COLORES: 0 ..... NEGRO
  10+ 94AE              ;    		 1 ..... AZUL
  11+ 94AE              ; 			 2 ..... ROJO
  12+ 94AE              ;			 3 ..... MAGENTA
  13+ 94AE              ; 			 4 ..... VERDE
  14+ 94AE              ; 			 5 ..... CIAN
  15+ 94AE              ;			 6 ..... AMARILLO
  16+ 94AE              ; 			 7 ..... BLANCO
  17+ 94AE              ;
  18+ 94AE              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94AE              ;
  20+ 94AE              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94AE
  22+ 94AE
  23+ 94AE 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94B1 11 01 40     	LD DE,$4001
  25+ 94B4 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94B7 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94B9 ED B0        	LDIR
  28+ 94BB 01 FF 02     	LD BC,767
  29+ 94BE 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94BF ED B0        	LDIR
  31+ 94C1 C9           	ret
  32+ 94C2
# file closed: Cls.asm
2064  94C2              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94C2              ; ------------------------------------------------------------------------
   2+ 94C2              ;
   3+ 94C2              ;	30/1/24
   4+ 94C2              ;
   5+ 94C2              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94C2              ;	Fila superior "0", Columna izquierda "0".
   7+ 94C2              ;
   8+ 94C2              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94C2              ;
  10+ 94C2              ;	Modifica: A,BC y DE.
  11+ 94C2
  12+ 94C2 7D           Genera_coordenadas ld a,l
  13+ 94C3 E6 1F        	and $1f
  14+ 94C5 32 FD 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94C8
  16+ 94C8 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94C9 FE 40        	cp $40
  18+ 94CB 38 1C        	jr c,4F
  19+ 94CD
  20+ 94CD CD A4 94     	call calcula_tercio
  21+ 94D0 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94D1
  23+ 94D1 1E 00        	ld e,0
  24+ 94D3 7D           	ld a,l
  25+ 94D4 E6 E0        	and $e0
  26+ 94D6 28 01        	jr z,1F
  27+ 94D8 04           	inc b
  28+ 94D9
  29+ 94D9 04           1 inc b
  30+ 94DA 05           	dec b
  31+ 94DB 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94DD              ;														; _ , salimos.
  33+ 94DD 1C           3 inc e
  34+ 94DE D6 20        	sub 32
  35+ 94E0 20 FB        	jr nz,3B
  36+ 94E2 10 F5        	djnz 1B
  37+ 94E4
  38+ 94E4 7B           2 ld a,e
  39+ 94E5 32 FE 8B     	ld (Coordenada_y),a
  40+ 94E8 C9           	ret
  41+ 94E9
  42+ 94E9 AF           4 xor a
  43+ 94EA 32 FE 8B     	ld (Coordenada_y),a
  44+ 94ED C9           	ret
  45+ 94EE
# file closed: Genera_coordenadas.asm
2065  94EE              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94EE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94EE              ;
   3+ 94EE              ;	20/09/24
   4+ 94EE              ;
   5+ 94EE              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94EE              ;   DE contiene Puntero_objeto.
   7+ 94EE              ;   IX contiene el Puntero de impresión.
   8+ 94EE
   9+ 94EE              Genera_datos_de_impresion
  10+ 94EE
  11+ 94EE ED 73 4B 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94F2
  13+ 94F2 31 03 8C         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94F5 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94F7
  16+ 94F7 2A 6D 8C         ld hl,(Scanlines_album_SP)
  17+ 94FA
  18+ 94FA 3E 05            ld a,5
  19+ 94FC 85               add l
  20+ 94FD 6F               ld l,a
  21+ 94FE
  22+ 94FE F9               ld sp,hl
  23+ 94FF 22 6D 8C         ld (Scanlines_album_SP),hl
  24+ 9502
  25+ 9502 21 00 00         ld hl,0
  26+ 9505
  27+ 9505 DD E5            push ix
  28+ 9507 3B               dec sp
  29+ 9508 ED 7A            adc hl,sp
  30+ 950A D5               push de
  31+ 950B
  32+ 950B              ; Recuperamos SP.
  33+ 950B
  34+ 950B ED 7B 4B 8C      ld sp,(Stack)
  35+ 950F
  36+ 950F E5               push hl
  37+ 9510 F1               pop af
  38+ 9511 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 9512
  40+ 9512              ; Tenemos el encabezado listo.
  41+ 9512              ; Preparamos registros para generar los scanlines.
  42+ 9512
  43+ 9512 DD E5            push ix
  44+ 9514 E1               pop hl                                          ; 1er scanline en HL.
  45+ 9515
  46+ 9515 ED 5B 6D 8C      ld de,(Scanlines_album_SP)
  47+ 9519
  48+ 9519              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9519              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9519
  51+ 9519 7C               ld a,h
  52+ 951A FE 50            cp $50
  53+ 951C 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 951E
  55+ 951E 20 05            jr nz,2F
  56+ 9520
  57+ 9520 7D               ld a,l
  58+ 9521 FE E0            cp $e0
  59+ 9523 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 9525
  61+ 9525 7D           2 ld a,l
  62+ 9526 FE C0            cp $c0
  63+ 9528 D2 BE 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 952B
  65+ 952B              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 952B
  67+ 952B CD BC 99         call NextScan
  68+ 952E EB               ex de,hl
  69+ 952F
  70+ 952F 73               ld (hl),e
  71+ 9530 23               inc hl
  72+ 9531 72               ld (hl),d
  73+ 9532 23               inc hl
  74+ 9533
  75+ 9533 EB               ex de,hl
  76+ 9534
  77+ 9534 CD BC 99         call NextScan
  78+ 9537 EB               ex de,hl
  79+ 9538
  80+ 9538 73               ld (hl),e
  81+ 9539 23               inc hl
  82+ 953A 72               ld (hl),d
  83+ 953B 23               inc hl
  84+ 953C
  85+ 953C EB               ex de,hl
  86+ 953D
  87+ 953D CD BC 99         call NextScan
  88+ 9540 EB               ex de,hl
  89+ 9541
  90+ 9541 73               ld (hl),e
  91+ 9542 23               inc hl
  92+ 9543 72               ld (hl),d
  93+ 9544 23               inc hl
  94+ 9545
  95+ 9545 EB               ex de,hl
  96+ 9546
  97+ 9546 CD BC 99         call NextScan
  98+ 9549 EB               ex de,hl
  99+ 954A
 100+ 954A 73               ld (hl),e
 101+ 954B 23               inc hl
 102+ 954C 72               ld (hl),d
 103+ 954D 23               inc hl
 104+ 954E
 105+ 954E EB               ex de,hl
 106+ 954F
 107+ 954F CD BC 99         call NextScan
 108+ 9552 EB               ex de,hl
 109+ 9553
 110+ 9553 73               ld (hl),e
 111+ 9554 23               inc hl
 112+ 9555 72               ld (hl),d
 113+ 9556 23               inc hl
 114+ 9557
 115+ 9557 EB               ex de,hl
 116+ 9558
 117+ 9558 CD BC 99         call NextScan
 118+ 955B EB               ex de,hl
 119+ 955C
 120+ 955C 73               ld (hl),e
 121+ 955D 23               inc hl
 122+ 955E 72               ld (hl),d
 123+ 955F 23               inc hl
 124+ 9560
 125+ 9560 EB               ex de,hl
 126+ 9561
 127+ 9561 CD BC 99         call NextScan
 128+ 9564 EB               ex de,hl
 129+ 9565
 130+ 9565 73               ld (hl),e
 131+ 9566 23               inc hl
 132+ 9567 72               ld (hl),d
 133+ 9568 23               inc hl
 134+ 9569
 135+ 9569 EB               ex de,hl
 136+ 956A
 137+ 956A CD BC 99         call NextScan
 138+ 956D EB               ex de,hl
 139+ 956E
 140+ 956E 73               ld (hl),e
 141+ 956F 23               inc hl
 142+ 9570 72               ld (hl),d
 143+ 9571 23               inc hl
 144+ 9572
 145+ 9572 EB               ex de,hl
 146+ 9573
 147+ 9573 CD BC 99         call NextScan
 148+ 9576 EB               ex de,hl
 149+ 9577
 150+ 9577 73               ld (hl),e
 151+ 9578 23               inc hl
 152+ 9579 72               ld (hl),d
 153+ 957A 23               inc hl
 154+ 957B
 155+ 957B EB               ex de,hl
 156+ 957C
 157+ 957C CD BC 99         call NextScan
 158+ 957F EB               ex de,hl
 159+ 9580
 160+ 9580 73               ld (hl),e
 161+ 9581 23               inc hl
 162+ 9582 72               ld (hl),d
 163+ 9583 23               inc hl
 164+ 9584
 165+ 9584 EB               ex de,hl
 166+ 9585
 167+ 9585 CD BC 99         call NextScan
 168+ 9588 EB               ex de,hl
 169+ 9589
 170+ 9589 73               ld (hl),e
 171+ 958A 23               inc hl
 172+ 958B 72               ld (hl),d
 173+ 958C 23               inc hl
 174+ 958D
 175+ 958D EB               ex de,hl
 176+ 958E
 177+ 958E CD BC 99         call NextScan
 178+ 9591 EB               ex de,hl
 179+ 9592
 180+ 9592 73               ld (hl),e
 181+ 9593 23               inc hl
 182+ 9594 72               ld (hl),d
 183+ 9595 23               inc hl
 184+ 9596
 185+ 9596 EB               ex de,hl
 186+ 9597
 187+ 9597 CD BC 99         call NextScan
 188+ 959A EB               ex de,hl
 189+ 959B
 190+ 959B 73               ld (hl),e
 191+ 959C 23               inc hl
 192+ 959D 72               ld (hl),d
 193+ 959E 23               inc hl
 194+ 959F
 195+ 959F EB               ex de,hl
 196+ 95A0
 197+ 95A0 CD BC 99         call NextScan
 198+ 95A3 EB               ex de,hl
 199+ 95A4
 200+ 95A4 73               ld (hl),e
 201+ 95A5 23               inc hl
 202+ 95A6 72               ld (hl),d
 203+ 95A7 23               inc hl
 204+ 95A8
 205+ 95A8 EB               ex de,hl
 206+ 95A9
 207+ 95A9 CD BC 99         call NextScan
 208+ 95AC EB               ex de,hl
 209+ 95AD
 210+ 95AD              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95AD              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95AD              ;   _ generar sus scanlines.
 213+ 95AD
 214+ 95AD              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95AD
 216+ 95AD 73               ld (hl),e
 217+ 95AE 23               inc hl
 218+ 95AF 72               ld (hl),d
 219+ 95B0 23               inc hl
 220+ 95B1
 221+ 95B1              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95B1
 223+ 95B1 22 6D 8C         ld (Scanlines_album_SP),hl
 224+ 95B4
 225+ 95B4 EB               ex de,hl
 226+ 95B5
 227+ 95B5              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95B5
 229+ 95B5              ;    call NextScan
 230+ 95B5              ;    call NextScan
 231+ 95B5
 232+ 95B5 22 78 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95B8
 234+ 95B8              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95B8
 236+ 95B8 08               ex af,af
 237+ 95B9
 238+ 95B9 F5               push af
 239+ 95BA E1               pop hl
 240+ 95BB
 241+ 95BB 36 10            ld (hl),16
 242+ 95BD
 243+ 95BD C9               ret
 244+ 95BE
 245+ 95BE              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95BE
 247+ 95BE              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95BE
 249+ 95BE 3E 57            ld a,$57
 250+ 95C0 94               sub h
 251+ 95C1 47               ld b,a
 252+ 95C2
 253+ 95C2 3E DF            ld a,$df
 254+ 95C4 BD               cp l
 255+ 95C5 38 04            jr c,1F
 256+ 95C7
 257+ 95C7 3E 08            ld a,8
 258+ 95C9 80               add b
 259+ 95CA 47               ld b,a
 260+ 95CB
 261+ 95CB              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95CB              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95CB
 264+ 95CB 48           1 ld c,b
 265+ 95CC 0C               inc c
 266+ 95CD
 267+ 95CD 04               inc b
 268+ 95CE 05               dec b
 269+ 95CF 20 02            jr nz,3F
 270+ 95D1
 271+ 95D1 18 0B            jr 6F
 272+ 95D3
 273+ 95D3 CD BC 99     3 call NextScan
 274+ 95D6 EB               ex de,hl
 275+ 95D7
 276+ 95D7 73               ld (hl),e
 277+ 95D8 23               inc hl
 278+ 95D9 72               ld (hl),d
 279+ 95DA 23               inc hl
 280+ 95DB
 281+ 95DB EB               ex de,hl
 282+ 95DC 10 F5            djnz 3B
 283+ 95DE
 284+ 95DE ED 53 6D 8C  6 ld (Scanlines_album_SP),de
 285+ 95E2
 286+ 95E2 08           5 ex af,af
 287+ 95E3 F5               push af
 288+ 95E4 E1               pop hl
 289+ 95E5
 290+ 95E5 71               ld (hl),c
 291+ 95E6
 292+ 95E6 C9               ret
 293+ 95E7
# file closed: Genera_datos_de_impresion.asm
2066  95E7              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95E7              ; -----------------------------------------------------------------------------
   2+ 95E7              ;
   3+ 95E7              ;   11/03/24
   4+ 95E7              ;
   5+ 95E7
   6+ 95E7              Pinta_Sprites
   7+ 95E7
   8+ 95E7              ;    ld hl,(Scanlines_album_SP)
   9+ 95E7              ;    call Extrae_address
  10+ 95E7
  11+ 95E7              ;    inc h
  12+ 95E7              ;    dec h
  13+ 95E7              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95E7
  15+ 95E7 ED 73 4B 8C      ld (Stack),sp
  16+ 95EB
  17+ 95EB EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95EC              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95EC 2C               inc l
  20+ 95ED 2C               inc l
  21+ 95EE
  22+ 95EE 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95EF
  24+ 95EF 2C               inc l
  25+ 95F0 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95F1
  27+ 95F1              ;   Seleccionamos rutina de impresión:
  28+ 95F1
  29+ 95F1 3E 10            ld a,16
  30+ 95F3 B8               cp b
  31+ 95F4 C2 F0 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95F7
  33+ 95F7              ;   Rutinas:
  34+ 95F7
  35+ 95F7              Pinta_rapido    ;   1520 t/states.
  36+ 95F7
  37+ 95F7 E1               pop hl
  38+ 95F8
  39+ 95F8 1A               ld a,(de)
  40+ 95F9 AE               xor (hl)
  41+ 95FA 77               ld (hl),a
  42+ 95FB 2C               inc l
  43+ 95FC 1C               inc e
  44+ 95FD 1A               ld a,(de)
  45+ 95FE AE               xor (hl)
  46+ 95FF 77               ld (hl),a
  47+ 9600 2C               inc l
  48+ 9601 1C               inc e
  49+ 9602 1A               ld a,(de)
  50+ 9603 AE               xor (hl)
  51+ 9604 77               ld (hl),a
  52+ 9605 13               inc de
  53+ 9606
  54+ 9606 E1               pop hl
  55+ 9607
  56+ 9607 1A               ld a,(de)
  57+ 9608 AE               xor (hl)
  58+ 9609 77               ld (hl),a
  59+ 960A 2C               inc l
  60+ 960B 1C               inc e
  61+ 960C 1A               ld a,(de)
  62+ 960D AE               xor (hl)
  63+ 960E 77               ld (hl),a
  64+ 960F 2C               inc l
  65+ 9610 1C               inc e
  66+ 9611 1A               ld a,(de)
  67+ 9612 AE               xor (hl)
  68+ 9613 77               ld (hl),a
  69+ 9614 13               inc de
  70+ 9615
  71+ 9615 E1               pop hl
  72+ 9616
  73+ 9616 1A               ld a,(de)
  74+ 9617 AE               xor (hl)
  75+ 9618 77               ld (hl),a
  76+ 9619 2C               inc l
  77+ 961A 1C               inc e
  78+ 961B 1A               ld a,(de)
  79+ 961C AE               xor (hl)
  80+ 961D 77               ld (hl),a
  81+ 961E 2C               inc l
  82+ 961F 1C               inc e
  83+ 9620 1A               ld a,(de)
  84+ 9621 AE               xor (hl)
  85+ 9622 77               ld (hl),a
  86+ 9623 13               inc de
  87+ 9624
  88+ 9624 E1               pop hl
  89+ 9625
  90+ 9625 1A               ld a,(de)
  91+ 9626 AE               xor (hl)
  92+ 9627 77               ld (hl),a
  93+ 9628 2C               inc l
  94+ 9629 1C               inc e
  95+ 962A 1A               ld a,(de)
  96+ 962B AE               xor (hl)
  97+ 962C 77               ld (hl),a
  98+ 962D 2C               inc l
  99+ 962E 1C               inc e
 100+ 962F 1A               ld a,(de)
 101+ 9630 AE               xor (hl)
 102+ 9631 77               ld (hl),a
 103+ 9632 13               inc de
 104+ 9633
 105+ 9633 E1               pop hl
 106+ 9634
 107+ 9634 1A               ld a,(de)
 108+ 9635 AE               xor (hl)
 109+ 9636 77               ld (hl),a
 110+ 9637 2C               inc l
 111+ 9638 1C               inc e
 112+ 9639 1A               ld a,(de)
 113+ 963A AE               xor (hl)
 114+ 963B 77               ld (hl),a
 115+ 963C 2C               inc l
 116+ 963D 1C               inc e
 117+ 963E 1A               ld a,(de)
 118+ 963F AE               xor (hl)
 119+ 9640 77               ld (hl),a
 120+ 9641 13               inc de
 121+ 9642
 122+ 9642 E1               pop hl
 123+ 9643
 124+ 9643 1A               ld a,(de)
 125+ 9644 AE               xor (hl)
 126+ 9645 77               ld (hl),a
 127+ 9646 2C               inc l
 128+ 9647 1C               inc e
 129+ 9648 1A               ld a,(de)
 130+ 9649 AE               xor (hl)
 131+ 964A 77               ld (hl),a
 132+ 964B 2C               inc l
 133+ 964C 1C               inc e
 134+ 964D 1A               ld a,(de)
 135+ 964E AE               xor (hl)
 136+ 964F 77               ld (hl),a
 137+ 9650 13               inc de
 138+ 9651
 139+ 9651 E1               pop hl
 140+ 9652
 141+ 9652 1A               ld a,(de)
 142+ 9653 AE               xor (hl)
 143+ 9654 77               ld (hl),a
 144+ 9655 2C               inc l
 145+ 9656 1C               inc e
 146+ 9657 1A               ld a,(de)
 147+ 9658 AE               xor (hl)
 148+ 9659 77               ld (hl),a
 149+ 965A 2C               inc l
 150+ 965B 1C               inc e
 151+ 965C 1A               ld a,(de)
 152+ 965D AE               xor (hl)
 153+ 965E 77               ld (hl),a
 154+ 965F 13               inc de
 155+ 9660
 156+ 9660 E1               pop hl
 157+ 9661
 158+ 9661 1A               ld a,(de)
 159+ 9662 AE               xor (hl)
 160+ 9663 77               ld (hl),a
 161+ 9664 2C               inc l
 162+ 9665 1C               inc e
 163+ 9666 1A               ld a,(de)
 164+ 9667 AE               xor (hl)
 165+ 9668 77               ld (hl),a
 166+ 9669 2C               inc l
 167+ 966A 1C               inc e
 168+ 966B 1A               ld a,(de)
 169+ 966C AE               xor (hl)
 170+ 966D 77               ld (hl),a
 171+ 966E 13               inc de
 172+ 966F
 173+ 966F E1               pop hl
 174+ 9670
 175+ 9670 1A               ld a,(de)
 176+ 9671 AE               xor (hl)
 177+ 9672 77               ld (hl),a
 178+ 9673 2C               inc l
 179+ 9674 1C               inc e
 180+ 9675 1A               ld a,(de)
 181+ 9676 AE               xor (hl)
 182+ 9677 77               ld (hl),a
 183+ 9678 2C               inc l
 184+ 9679 1C               inc e
 185+ 967A 1A               ld a,(de)
 186+ 967B AE               xor (hl)
 187+ 967C 77               ld (hl),a
 188+ 967D 13               inc de
 189+ 967E
 190+ 967E E1               pop hl
 191+ 967F
 192+ 967F 1A               ld a,(de)
 193+ 9680 AE               xor (hl)
 194+ 9681 77               ld (hl),a
 195+ 9682 2C               inc l
 196+ 9683 1C               inc e
 197+ 9684 1A               ld a,(de)
 198+ 9685 AE               xor (hl)
 199+ 9686 77               ld (hl),a
 200+ 9687 2C               inc l
 201+ 9688 1C               inc e
 202+ 9689 1A               ld a,(de)
 203+ 968A AE               xor (hl)
 204+ 968B 77               ld (hl),a
 205+ 968C 13               inc de
 206+ 968D
 207+ 968D E1               pop hl
 208+ 968E
 209+ 968E 1A               ld a,(de)
 210+ 968F AE               xor (hl)
 211+ 9690 77               ld (hl),a
 212+ 9691 2C               inc l
 213+ 9692 1C               inc e
 214+ 9693 1A               ld a,(de)
 215+ 9694 AE               xor (hl)
 216+ 9695 77               ld (hl),a
 217+ 9696 2C               inc l
 218+ 9697 1C               inc e
 219+ 9698 1A               ld a,(de)
 220+ 9699 AE               xor (hl)
 221+ 969A 77               ld (hl),a
 222+ 969B 13               inc de
 223+ 969C
 224+ 969C E1               pop hl
 225+ 969D
 226+ 969D 1A               ld a,(de)
 227+ 969E AE               xor (hl)
 228+ 969F 77               ld (hl),a
 229+ 96A0 2C               inc l
 230+ 96A1 1C               inc e
 231+ 96A2 1A               ld a,(de)
 232+ 96A3 AE               xor (hl)
 233+ 96A4 77               ld (hl),a
 234+ 96A5 2C               inc l
 235+ 96A6 1C               inc e
 236+ 96A7 1A               ld a,(de)
 237+ 96A8 AE               xor (hl)
 238+ 96A9 77               ld (hl),a
 239+ 96AA 13               inc de
 240+ 96AB
 241+ 96AB E1               pop hl
 242+ 96AC
 243+ 96AC 1A               ld a,(de)
 244+ 96AD AE               xor (hl)
 245+ 96AE 77               ld (hl),a
 246+ 96AF 2C               inc l
 247+ 96B0 1C               inc e
 248+ 96B1 1A               ld a,(de)
 249+ 96B2 AE               xor (hl)
 250+ 96B3 77               ld (hl),a
 251+ 96B4 2C               inc l
 252+ 96B5 1C               inc e
 253+ 96B6 1A               ld a,(de)
 254+ 96B7 AE               xor (hl)
 255+ 96B8 77               ld (hl),a
 256+ 96B9 13               inc de
 257+ 96BA
 258+ 96BA E1               pop hl
 259+ 96BB
 260+ 96BB 1A               ld a,(de)
 261+ 96BC AE               xor (hl)
 262+ 96BD 77               ld (hl),a
 263+ 96BE 2C               inc l
 264+ 96BF 1C               inc e
 265+ 96C0 1A               ld a,(de)
 266+ 96C1 AE               xor (hl)
 267+ 96C2 77               ld (hl),a
 268+ 96C3 2C               inc l
 269+ 96C4 1C               inc e
 270+ 96C5 1A               ld a,(de)
 271+ 96C6 AE               xor (hl)
 272+ 96C7 77               ld (hl),a
 273+ 96C8 13               inc de
 274+ 96C9
 275+ 96C9 E1               pop hl
 276+ 96CA
 277+ 96CA 1A               ld a,(de)
 278+ 96CB AE               xor (hl)
 279+ 96CC 77               ld (hl),a
 280+ 96CD 2C               inc l
 281+ 96CE 1C               inc e
 282+ 96CF 1A               ld a,(de)
 283+ 96D0 AE               xor (hl)
 284+ 96D1 77               ld (hl),a
 285+ 96D2 2C               inc l
 286+ 96D3 1C               inc e
 287+ 96D4 1A               ld a,(de)
 288+ 96D5 AE               xor (hl)
 289+ 96D6 77               ld (hl),a
 290+ 96D7 13               inc de
 291+ 96D8
 292+ 96D8 E1               pop hl
 293+ 96D9
 294+ 96D9 1A               ld a,(de)
 295+ 96DA AE               xor (hl)
 296+ 96DB 77               ld (hl),a
 297+ 96DC 2C               inc l
 298+ 96DD 1C               inc e
 299+ 96DE 1A               ld a,(de)
 300+ 96DF AE               xor (hl)
 301+ 96E0 77               ld (hl),a
 302+ 96E1 2C               inc l
 303+ 96E2 1C               inc e
 304+ 96E3 1A               ld a,(de)
 305+ 96E4 AE               xor (hl)
 306+ 96E5 77               ld (hl),a
 307+ 96E6 13               inc de
 308+ 96E7
 309+ 96E7 ED 73 6D 8C      ld (Scanlines_album_SP),sp
 310+ 96EB ED 7B 4B 8C      ld sp,(Stack)
 311+ 96EF C9               ret
 312+ 96F0
 313+ 96F0              Pinta_lento
 314+ 96F0
 315+ 96F0 E1           1 pop hl
 316+ 96F1
 317+ 96F1 1A               ld a,(de)
 318+ 96F2 AE               xor (hl)
 319+ 96F3 77               ld (hl),a
 320+ 96F4 2C               inc l
 321+ 96F5 1C               inc e
 322+ 96F6 1A               ld a,(de)
 323+ 96F7 AE               xor (hl)
 324+ 96F8 77               ld (hl),a
 325+ 96F9 2C               inc l
 326+ 96FA 1C               inc e
 327+ 96FB 1A               ld a,(de)
 328+ 96FC AE               xor (hl)
 329+ 96FD 77               ld (hl),a
 330+ 96FE 13               inc de
 331+ 96FF
 332+ 96FF 10 EF            djnz 1B
 333+ 9701
 334+ 9701 ED 73 6D 8C      ld (Scanlines_album_SP),sp
 335+ 9705 ED 7B 4B 8C      ld sp,(Stack)
 336+ 9709 C9               ret
# file closed: Pinta_Sprites.asm
2067  970A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 970A              ; ******************************************************************************************************************************************************************************************
   2+ 970A              ;
   3+ 970A              ; 26/06/23
   4+ 970A              ;
   5+ 970A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 970A
   7+ 970A              Draw
   8+ 970A
   9+ 970A CD B0 99     	call Prepara_draw
  10+ 970D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 970E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 970F 28 05        	jr z,2F
  13+ 9711
  14+ 9711 3A 1B 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9714 18 0C        	jr 1F
  16+ 9716
  17+ 9716 2A 19 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9719 22 0C 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 971C CD A8 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 971F              ;													; _la esquina superior izquierda de la pantalla.
  21+ 971F
  22+ 971F CD 4F 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9722
  24+ 9722 3A 09 8C     1 ld a,(Ctrl_0)
  25+ 9725 CB 6F        	bit 5,a
  26+ 9727 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9729
  28+ 9729 CD 3E 97     	call Comprueba_limite_horizontal
  29+ 972C CD CE 97     	call Comprueba_limite_vertical
  30+ 972F
  31+ 972F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 972F              ; -----------------------
  33+ 972F              ; -----------------------
  34+ 972F              ; -----------------------
  35+ 972F
  36+ 972F CD 24 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9732 CD 5B 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9735
  39+ 9735 3A 09 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9738 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 973A 32 09 8C     	ld (Ctrl_0),a
  42+ 973D
  43+ 973D C9           	ret
  44+ 973E
  45+ 973E              ; *******************************************************************************************************************************************************************************************
  46+ 973E              ;	21/01/23
  47+ 973E              ;
  48+ 973E              ; 	Comprueba_limite_horizontal.
  49+ 973E              ;
  50+ 973E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 973E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 973E              ;
  53+ 973E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 973E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 973E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 973E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 973E
  58+ 973E
  59+ 973E
  60+ 973E 3A 09 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9741 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9743 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9745 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9747 32 09 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 974A 18 09            jr 6F
  66+ 974C CB 5F        1 bit 3,a
  67+ 974E 28 0A            jr z,2F
  68+ 9750 E6 F7            and $f7
  69+ 9752 32 09 8C         ld (Ctrl_0),a
  70+ 9755 CD A8 98     6 call Inicializacion
  71+ 9758 18 5B            jr 5F
  72+ 975A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 975B
  74+ 975B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 975B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 975B
  77+ 975B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 975C 2A 1D 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 975F CD A4 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9762 67           	ld h,a
  81+ 9763 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9764 CD A4 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9767 67           	ld h,a
  84+ 9768 A7           	and a
  85+ 9769 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 976B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 976C 3A 1B 8C     	ld a,(Cuad_objeto)
  88+ 976F FE 02        	cp 2
  89+ 9771 38 1E        	jr c,3F
  90+ 9773 28 1C        	jr z,3F
  91+ 9775 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9776 28 23            jr z,7F
  93+ 9778 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 977A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 977C E1           	pop hl
  96+ 977D
  97+ 977D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 977D              ; _para indicar con E="2" en caso necesario.
  99+ 977D
 100+ 977D E5               push hl
 101+ 977E C5               push bc
 102+ 977F CD A4 94     	call calcula_tercio
 103+ 9782 FE 01        	cp 1
 104+ 9784 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9786 CD B6 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9789 28 26            jr z,9F
 107+ 978B 38 24            jr c,9F
 108+ 978D 1E 00        11 ld e,0
 109+ 978F 18 22            jr 8F
 110+ 9791 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9792 28 07        	jr z, 7F
 112+ 9794 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9796 1E 00         	ld e,0
 114+ 9798 E1           	pop hl
 115+ 9799 18 04        	jr 4F
 116+ 979B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 979D 18 15            jr 10F
 118+ 979F
 119+ 979F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 979F              ; _para indicar con E="2" en caso necesario.
 121+ 979F
 122+ 979F E5           4 push hl
 123+ 97A0 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97A1 CD A4 94     	call calcula_tercio
 125+ 97A4 FE 01        	cp 1
 126+ 97A6 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97A8 CD B6 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97AB 28 04            jr z,9F
 129+ 97AD 30 02            jr nc,9F
 130+ 97AF 18 02        	jr 8F
 131+ 97B1 1E 02        9 ld e,2
 132+ 97B3 C1           8 pop bc
 133+ 97B4 E1           10 pop hl
 134+ 97B5 C9           5 ret
 135+ 97B6
 136+ 97B6              ; --------------------
 137+ 97B6              ;
 138+ 97B6              ; 25/08/22
 139+ 97B6
 140+ 97B6 CD A4 94     Comprueba_centro call calcula_tercio
 141+ 97B9 67               ld h,a
 142+ 97BA 08           	ex af,af
 143+ 97BB FE 02        	cp 2
 144+ 97BD 38 07        	jr c,1F
 145+ 97BF 28 05        	jr z,1F
 146+ 97C1 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97C4 18 03        	jr 2F
 148+ 97C6 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97C9 08           2 ex af,af
 150+ 97CA A7               and a
 151+ 97CB ED 42            sbc hl,bc
 152+ 97CD C9               ret
 153+ 97CE
 154+ 97CE              ; *********************************************************************************************************************************************************************************************
 155+ 97CE              ;
 156+ 97CE              ;   16/8/22
 157+ 97CE              ;
 158+ 97CE              ;	Comprueba_limite_vertical
 159+ 97CE              ;
 160+ 97CE              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97CE              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97CE              ;
 163+ 97CE
 164+ 97CE 2A 0C 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97D1 7D           	ld a,l
 166+ 97D2 E6 1F        	and $1F
 167+ 97D4 57           	ld d,a
 168+ 97D5 3A 1F 8C     	ld a,(Limite_vertical)
 169+ 97D8 BA           	cp d 											; Límite - Posición.
 170+ 97D9 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97DA 3A 1B 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97DD CB 47        	bit 0,a
 173+ 97DF 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97E1
 175+ 97E1              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97E1
 177+ 97E1 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97E2 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97E4
 180+ 97E4              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97E4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97E4
 183+ 97E4 3A FD 8B         ld a,(Coordenada_X)
 184+ 97E7 16 0F            ld d,Centro_izquierda
 185+ 97E9 A7               and a
 186+ 97EA 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97EB 28 1E            jr z,3F
 188+ 97ED 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97EF              ;                                                    ; _salimos sin modificar nada.
 190+ 97EF 18 0E            jr 2F
 191+ 97F1 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97F2 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97F4
 194+ 97F4              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97F4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97F4
 197+ 97F4 3A FD 8B         ld a,(Coordenada_X)
 198+ 97F7 16 10            ld d,Centro_derecha
 199+ 97F9 A7               and a
 200+ 97FA 92               sub d
 201+ 97FB 28 0E            jr z,3F
 202+ 97FD 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97FF              ;                                                    ; _salimos sin modificar nada.
 204+ 97FF CB 43        2 bit 0,e
 205+ 9801 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9803 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9804 CD 98 98         call Modificaccionne
 208+ 9807 C1           	pop bc
 209+ 9808 CD A8 98         call Inicializacion
 210+ 980B C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 980C
 212+ 980C              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 980C
 214+ 980C C5           4 push bc
 215+ 980D 01 0B 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9810 0A           	ld a,(bc)
 217+ 9811 3D           	dec a
 218+ 9812 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9813 7D           	ld a,l
 220+ 9814 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9815 CB 47        	bit 0,a
 222+ 9817 28 03        	jr z,5F
 223+ 9819 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 981A 18 2E        	jr 7F
 225+ 981C
 226+ 981C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 981C
 228+ 981C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 981D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 981E 3A 09 8C     	ld a,(Ctrl_0)
 231+ 9821 CB 4F        	bit 1,a
 232+ 9823 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9825 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9826
 235+ 9826              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9826
 237+ 9826 1C               inc e
 238+ 9827 1D               dec e
 239+ 9828 20 07            jr nz,12F
 240+ 982A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 982B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 982C 22 0C 8C     	ld (Posicion_actual),hl
 243+ 982F 18 44        13 jr 9F
 244+ 9831 CB 43        12 bit 0,e
 245+ 9833 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9835              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9835 C1           	pop bc
 248+ 9836 18 D3        	jr 3B
 249+ 9838 80           14 add b
 250+ 9839 6F               ld l,a
 251+ 983A 22 0C 8C     	ld (Posicion_actual),hl
 252+ 983D CD 98 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9840 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9842 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9844 32 09 8C         ld (Ctrl_0),a
 256+ 9847 F1           	pop af
 257+ 9848 18 2B        	jr 9F
 258+ 984A
 259+ 984A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 984A
 261+ 984A F5           7 push af
 262+ 984B 3A 09 8C     	ld a,(Ctrl_0)
 263+ 984E CB 47        	bit 0,a
 264+ 9850 20 1D        	jr nz,8F
 265+ 9852 F1           	pop af
 266+ 9853
 267+ 9853              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9853
 269+ 9853 1C           	inc e
 270+ 9854 1D               dec e
 271+ 9855 20 07            jr nz,10F
 272+ 9857 90           	sub b
 273+ 9858 6F               ld l,a
 274+ 9859 22 0C 8C     	ld (Posicion_actual),hl
 275+ 985C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 985E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 985E CB 43        10 bit 0,e
 278+ 9860 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9862              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9862 C1           	pop bc
 281+ 9863 18 A6        	jr 3B
 282+ 9865 90           16 sub b
 283+ 9866 6F               ld l,a
 284+ 9867 22 0C 8C     	ld (Posicion_actual),hl
 285+ 986A CD 98 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 986D 18 06            jr 9F
 287+ 986F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9871 32 09 8C         ld (Ctrl_0),a
 289+ 9874 F1           	pop af
 290+ 9875 C1           9 pop bc
 291+ 9876 1E 00        	ld e,0
 292+ 9878 CD A8 98         call Inicializacion
 293+ 987B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 987C 08           	ex af,af
 295+ 987D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 987E 18 8B            jr 3B
 297+ 9880
 298+ 9880              ; --------------------
 299+ 9880
 300+ 9880 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9882 CD CB 99     1 call PreviousScan
 302+ 9885 10 FB            djnz 1B
 303+ 9887 22 0C 8C     	ld (Posicion_actual),hl
 304+ 988A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 988B C9           	ret
 306+ 988C
 307+ 988C              ; --------------------
 308+ 988C
 309+ 988C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 988E CD BC 99     1 call NextScan
 311+ 9891 10 FB            djnz 1B
 312+ 9893 22 0C 8C     	ld (Posicion_actual),hl
 313+ 9896 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9897 C9           	ret
 315+ 9898
 316+ 9898              ; --------------------
 317+ 9898              ;
 318+ 9898              ;	22/01/23
 319+ 9898              ;
 320+ 9898              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9898              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9898              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9898
 324+ 9898
 325+ 9898              Modificaccionne
 326+ 9898
 327+ 9898 3A 1B 8C     	ld a,(Cuad_objeto)
 328+ 989B FE 02        	cp 2
 329+ 989D CC 80 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98A0 DC 80 98         call c,Modifica_Pos_actual
 331+ 98A3 C8           	ret z
 332+ 98A4 CD 8C 98         call Modifica_Pos_actual2
 333+ 98A7 C9               ret
 334+ 98A8
 335+ 98A8              ; *************************************************************************************************************************************************************************************************
 336+ 98A8              ;
 337+ 98A8              ;	13/8/22
 338+ 98A8              ;
 339+ 98A8              ;	Inicializacion
 340+ 98A8              ;
 341+ 98A8              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98A8              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98A8              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98A8              ;
 345+ 98A8              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98A8              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98A8              ;	_ desaparece/aparece.
 348+ 98A8
 349+ 98A8              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98A8              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98A8              ;
 352+ 98A8              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98A8              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98A8              ; 		   [E] ="0"
 355+ 98A8
 356+ 98A8              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98A8
 358+ 98A8 CD A4 94     Inicializacion call calcula_tercio
 359+ 98AB 28 36        	jr z,primit
 360+ 98AD E6 02        	and 2
 361+ 98AF 20 07        	jr nz,segmit
 362+ 98B1 7D           	ld a,l
 363+ 98B2 FE 7F        	cp $7f
 364+ 98B4 38 2D        	jr c,primit
 365+ 98B6 28 2B        	jr z,primit
 366+ 98B8 CD 1E 99     segmit call column
 367+ 98BB 38 13        	jr c,tercuad
 368+ 98BD 3E 04        cuarcuad ld a,4
 369+ 98BF 32 1B 8C     	ld (Cuad_objeto),a
 370+ 98C2 21 20 48     	ld hl,$4820
 371+ 98C5 22 1D 8C     	ld (Limite_horizontal),hl
 372+ 98C8 21 1F 8C     	ld hl,Limite_vertical
 373+ 98CB 36 0D        	ld (hl),$0d
 374+ 98CD 08           	ex af,af
 375+ 98CE 18 3C        	jr 1F
 376+ 98D0              tercuad
 377+ 98D0 3E 03        	ld a,3
 378+ 98D2 32 1B 8C     	ld (Cuad_objeto),a
 379+ 98D5 21 20 48     	ld hl,$4820
 380+ 98D8 22 1D 8C     	ld (Limite_horizontal),hl
 381+ 98DB 21 1F 8C     	ld hl,Limite_vertical
 382+ 98DE 36 12        	ld (hl),$12
 383+ 98E0 08           	ex af,af
 384+ 98E1 18 29        	jr 1F
 385+ 98E3 CD 1E 99     primit call column
 386+ 98E6 38 13        	jr c, primcuad
 387+ 98E8              segcuad
 388+ 98E8 3E 02        	ld a,2
 389+ 98EA 32 1B 8C     	ld (Cuad_objeto),a
 390+ 98ED 21 C0 4F     	ld hl,$4fc0
 391+ 98F0 22 1D 8C     	ld (Limite_horizontal),hl
 392+ 98F3 21 1F 8C     	ld hl,Limite_vertical
 393+ 98F6 36 0D        	ld (hl),$0d
 394+ 98F8 08           	ex af,af
 395+ 98F9 18 11        	jr 1F
 396+ 98FB              primcuad
 397+ 98FB 3E 01        	ld a,1
 398+ 98FD 32 1B 8C     	ld (Cuad_objeto),a
 399+ 9900 21 C0 4F     	ld hl,$4fc0
 400+ 9903 22 1D 8C     	ld (Limite_horizontal),hl
 401+ 9906 21 1F 8C     	ld hl,Limite_vertical
 402+ 9909 36 12        	ld (hl),$12
 403+ 990B 08           	ex af,af
 404+ 990C
 405+ 990C C5           1 push bc
 406+ 990D E5           	push hl
 407+ 990E D5           	push de
 408+ 990F
 409+ 990F 2A 0C 8C     	ld hl,(Posicion_actual)
 410+ 9912 CD C2 94     	call Genera_coordenadas
 411+ 9915
 412+ 9915 D1           	pop de
 413+ 9916 E1           	pop hl
 414+ 9917 C1           	pop bc
 415+ 9918
 416+ 9918 21 09 8C     	ld hl,Ctrl_0
 417+ 991B CB EE        	set 5,(hl)
 418+ 991D C9           	ret
 419+ 991E
 420+ 991E              ; ------------------------------------------------------------------------------------------------------------------
 421+ 991E
 422+ 991E              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 991E              ;
 424+ 991E              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 991E
 426+ 991E 7D           column ld a,l
 427+ 991F E6 1F        	and $1f
 428+ 9921 FE 10         	cp $10
 429+ 9923 C9            	ret
 430+ 9924
 431+ 9924              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9924              ;
 433+ 9924              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9924              ;
 435+ 9924              ; 14/12/22
 436+ 9924              ;
 437+ 9924              ;	Modifica: A y BC.
 438+ 9924
 439+ 9924 3A 1B 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9927 E6 01        	and 1
 441+ 9929 28 17        	jr z,1F
 442+ 992B
 443+ 992B              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 992B
 445+ 992B 3A FD 8B     	ld a,(Coordenada_X)
 446+ 992E 47           	ld b,a
 447+ 992F 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9930 79           	ld a,c
 449+ 9931 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9932 38 08        	jr c,2F
 451+ 9934 47           	ld b,a
 452+ 9935 79           	ld a,c
 453+ 9936 90           	sub b
 454+ 9937 32 1C 8C     	ld (Columnas),a
 455+ 993A 18 1B        	jr 4F
 456+ 993C 79           2 ld a,c
 457+ 993D 32 1C 8C     	ld (Columnas),a
 458+ 9940 18 15        	jr 4F
 459+ 9942
 460+ 9942              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9942
 462+ 9942 3A FD 8B     1 ld a,(Coordenada_X)
 463+ 9945 81           	add c
 464+ 9946 3D           	dec a
 465+ 9947 D6 1F        	sub $1f
 466+ 9949 38 08        	jr c,3F
 467+ 994B 47           	ld b,a
 468+ 994C 79           	ld a,c
 469+ 994D 90           	sub b
 470+ 994E 32 1C 8C     	ld (Columnas),a
 471+ 9951 18 04        	jr 4F
 472+ 9953 79           3 ld a,c
 473+ 9954 32 1C 8C     	ld (Columnas),a
 474+ 9957 D9           4 exx
 475+ 9958 4F           	ld c,a
 476+ 9959 D9           	exx
 477+ 995A C9            ret
 478+ 995B
 479+ 995B              ; --------------------------------------------------------------------------------------------------------------------
 480+ 995B              ;
 481+ 995B              ;   19/7/23
 482+ 995B              ;
 483+ 995B              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 995B              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 995B              ;
 486+ 995B              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 995B              ;			HL e IY Contienen (Puntero_objeto).
 488+ 995B              ;
 489+ 995B              ;	DESTRUYE: HL,B Y A.
 490+ 995B
 491+ 995B 3A 1B 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 995E FE 02        	cp 2
 493+ 9960 38 18        	jr c,1F
 494+ 9962 28 16        	jr z,1F
 495+ 9964 E6 01        	and 1
 496+ 9966 28 0D        	jr z,3F
 497+ 9968
 498+ 9968              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9968
 500+ 9968 CD A4 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 996B
 502+ 996B 7D           9 ld a,l
 503+ 996C E6 1F        	and $1f
 504+ 996E 28 2A        	jr z,7F
 505+ 9970 2B           	dec hl
 506+ 9971 10 F8        	djnz 9B
 507+ 9973 18 25        	jr 7F
 508+ 9975
 509+ 9975              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9975
 511+ 9975 2A 0C 8C     3 ld hl,(Posicion_actual)
 512+ 9978 18 20        	jr 7F
 513+ 997A
 514+ 997A 28 14        1 jr z,2F
 515+ 997C
 516+ 997C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 997C
 518+ 997C CD A4 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 997F
 520+ 997F 7D           4 ld a,l
 521+ 9980 E6 1F        	and $1f
 522+ 9982 28 03        	jr z,6F
 523+ 9984 2B           	dec hl
 524+ 9985 10 F8        	djnz 4B
 525+ 9987 06 0F        6 ld b,15
 526+ 9989 CD CB 99     5 call PreviousScan
 527+ 998C 10 FB        	djnz 5B
 528+ 998E 18 0A        	jr 7F
 529+ 9990
 530+ 9990              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9990
 532+ 9990 CD A4 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9993 06 0F        	ld b,15
 534+ 9995 CD CB 99     8 call PreviousScan
 535+ 9998 10 FB        	djnz 8B
 536+ 999A
 537+ 999A E5           7 push hl
 538+ 999B DD E1        	pop ix
 539+ 999D
 540+ 999D 2A 0E 8C     	ld hl,(Puntero_objeto)
 541+ 99A0 E5           	push hl
 542+ 99A1 FD E1        	pop iy
 543+ 99A3
 544+ 99A3 C9           	ret
 545+ 99A4
 546+ 99A4              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99A4              ;
 548+ 99A4              ;	2/1/23
 549+ 99A4              ;
 550+ 99A4              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99A4              ;
 552+ 99A4              ;	Tras esta rutina tenemos:
 553+ 99A4              ;
 554+ 99A4              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99A4              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99A4              ;
 557+ 99A4              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99A4
 559+ 99A4 2A 0C 8C     Operandos ld hl,(Posicion_actual)
 560+ 99A7 3A 1C 8C     	ld a,(Columnas)
 561+ 99AA 3D           	dec a
 562+ 99AB 20 01        	jr nz,1F
 563+ 99AD 3C           	inc a
 564+ 99AE 47           1 ld b,a
 565+ 99AF C9           	ret
 566+ 99B0
 567+ 99B0              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99B0              ;
 569+ 99B0              ;	Prepara_draw
 570+ 99B0              ;
 571+ 99B0              ;	Es una rutina de carga.
 572+ 99B0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99B0              ;
 574+ 99B0              ;	FUNCIONAMIENTO:
 575+ 99B0              ;
 576+ 99B0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99B0              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99B0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99B0              ;
 580+ 99B0              ;	DESTRUYE:
 581+ 99B0              ;
 582+ 99B0              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99B0
 584+ 99B0 21 0A 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99B3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99B4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99B5 4E           	ld c,(hl)
 588+ 99B6 2A 0C 8C     	ld hl,(Posicion_actual)
 589+ 99B9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99BB C9           	ret
 591+ 99BC
 592+ 99BC              ;----------------------------------------------------------------------------------------------------------------
 593+ 99BC              ;
 594+ 99BC              ;	5/08/22
 595+ 99BC              ;
 596+ 99BC              ;   NextScan.
 597+ 99BC              ;
 598+ 99BC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99BC              ;
 600+ 99BC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99BC              ;
 602+ 99BC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99BC              ;
 604+ 99BC              ;       DESTRUIDOS: AF y HL !!!
 605+ 99BC              ;
 606+ 99BC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99BC              ;
 608+ 99BC
 609+ 99BC 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99BD 7C               ld a,h
 611+ 99BE E6 07            and 7
 612+ 99C0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99C1
 614+ 99C1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99C2 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99C4 6F               ld l,a
 617+ 99C5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99C6
 619+ 99C6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99C7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99C9 67               ld h,a
 622+ 99CA C9               ret
 623+ 99CB
 624+ 99CB              ;----------------------------------------------------------------------------------------------------------------
 625+ 99CB              ;
 626+ 99CB              ;	5/08/22
 627+ 99CB              ;
 628+ 99CB              ;   PreviousScan.
 629+ 99CB              ;
 630+ 99CB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99CB              ;
 632+ 99CB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99CB              ;
 634+ 99CB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99CB              ;
 636+ 99CB              ;       DESTRUIDOS: AF y HL !!!
 637+ 99CB              ;
 638+ 99CB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99CB              ;
 640+ 99CB
 641+ 99CB 7C           PreviousScan ld a,h
 642+ 99CC 25               dec h               ; Dec H.
 643+ 99CD E6 07            and 7
 644+ 99CF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99D0
 646+ 99D0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99D1 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99D3 6F               ld l,a
 649+ 99D4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99D5
 651+ 99D5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99D6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99D8 67               ld h,a
 654+ 99D9 C9               ret
 655+ 99DA
 656+ 99DA
 657+ 99DA
 658+ 99DA
 659+ 99DA
 660+ 99DA
 661+ 99DA
 662+ 99DA
 663+ 99DA
 664+ 99DA
 665+ 99DA
 666+ 99DA
# file closed: Draw_XOR.asm
2068  99DA              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99DA
   2+ 99DA              ; ******************************************************************************************************************************************************************************************
   3+ 99DA              ;
   4+ 99DA              ;   20/05/23
   5+ 99DA              ;
   6+ 99DA              ;	Recompone_posicion_inicio
   7+ 99DA              ;
   8+ 99DA              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99DA              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99DA              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99DA              ;	_ a una u otra rutina.
  12+ 99DA
  13+ 99DA              Recompone_posicion_inicio
  14+ 99DA
  15+ 99DA 2A 19 8C     	ld hl,(Posicion_inicio)
  16+ 99DD 7D           	ld a,l
  17+ 99DE E6 1F        	and $1f
  18+ 99E0 28 16        	jr z,1F
  19+ 99E2
  20+ 99E2 FE 1F        	cp $1f
  21+ 99E4 28 0D        	jr z,3F
  22+ 99E6
  23+ 99E6 21 08 8C     	ld hl,Ctrl_2
  24+ 99E9 CB C6        	set 0,(hl)
  25+ 99EB 2A 0E 8C     	ld hl,(Puntero_objeto)
  26+ 99EE 22 3A 8C     	ld (Repone_puntero_objeto),hl
  27+ 99F1 18 08        	jr 2F
  28+ 99F3
  29+ 99F3 CD A1 9B     3 call Mov_left
  30+ 99F6 18 03        	jr 2F
  31+ 99F8
  32+ 99F8 CD 7E 9A     1 call Mov_right
  33+ 99FB 21 80 F8     2 ld hl,Sprite_vacio
  34+ 99FE 22 0E 8C     	ld (Puntero_objeto),hl
  35+ 9A01 C9           	ret
  36+ 9A02
  37+ 9A02              ; ******************************************************************************************************************************************************************************************
  38+ 9A02              ;
  39+ 9A02              ;   27/05/23
  40+ 9A02              ;
  41+ 9A02              ;	Mov_down
  42+ 9A02              ;
  43+ 9A02              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A02              ;
  45+ 9A02              ;
  46+ 9A02              Mov_down
  47+ 9A02
  48+ 9A02 CD 6C 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A05              ;																	; _ repone (Puntero_objeto).
  50+ 9A05 21 09 8C     	ld hl,Ctrl_0
  51+ 9A08 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A0A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A0A              ; 																	; _ en el caso de que no lo haya.
  54+ 9A0A 3A 24 8C     	ld a,(Vel_down)
  55+ 9A0D 47           	ld b,a
  56+ 9A0E 2A 0C 8C         ld hl,(Posicion_actual)
  57+ 9A11 CD A4 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A14 E6 02        	and 2
  59+ 9A16 28 17        	jr z,1F
  60+ 9A18
  61+ 9A18              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A18              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A18
  64+ 9A18 7C           	ld a,h
  65+ 9A19 FE 57        	cp $57
  66+ 9A1B 20 12        	jr nz,1F
  67+ 9A1D
  68+ 9A1D 7D           	ld a,l
  69+ 9A1E C6 20        	add $20
  70+ 9A20 30 0D        	jr nc,1F
  71+ 9A22
  72+ 9A22              ; ------------------------------
  73+ 9A22              ;
  74+ 9A22              ;	12/01/24
  75+ 9A22
  76+ 9A22              ;	call Reaparece_arriba
  77+ 9A22 CD 2E 9D     	call Reinicio
  78+ 9A25
  79+ 9A25              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A25
  81+ 9A25 3A 73 8C     	ld a,(Ctrl_3)
  82+ 9A28 CB CF        	set 1,a
  83+ 9A2A 32 73 8C     	ld (Ctrl_3),a
  84+ 9A2D
  85+ 9A2D 18 08        	jr 3F
  86+ 9A2F              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A2F              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A2F              ; ------------------------------
  89+ 9A2F
  90+ 9A2F CD BC 99     1 call NextScan
  91+ 9A32 22 0C 8C     	ld (Posicion_actual),hl
  92+ 9A35 10 DA            djnz 2B
  93+ 9A37 CD C2 94     3 call Genera_coordenadas
  94+ 9A3A C9           	ret
  95+ 9A3B
  96+ 9A3B              ; ******************************************************************************************************************************************************************************************
  97+ 9A3B              ;
  98+ 9A3B              ;   27/05/23
  99+ 9A3B              ;
 100+ 9A3B              ;	Mov_up
 101+ 9A3B              ;
 102+ 9A3B              ; 	Mueve el Sprite hacia arriba.
 103+ 9A3B              ;
 104+ 9A3B              ;
 105+ 9A3B              Mov_up
 106+ 9A3B
 107+ 9A3B CD 6C 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A3E              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A3E 21 09 8C     	ld hl,Ctrl_0
 110+ 9A41 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A43              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A43              ; 																		; _ en el caso de que no lo haya.
 113+ 9A43 3A 23 8C     	ld a,(Vel_up)
 114+ 9A46 47           	ld b,a
 115+ 9A47 2A 0C 8C     	ld hl,(Posicion_actual)
 116+ 9A4A CD A4 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A4D A7           	and a
 118+ 9A4E 20 10        	jr nz,1F
 119+ 9A50
 120+ 9A50              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A50              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A50
 123+ 9A50 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A51 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A53 20 0B            jr nz,1F
 126+ 9A55 7D               ld a,l
 127+ 9A56 D6 20            sub $20
 128+ 9A58 30 06            jr nc,1F
 129+ 9A5A 25               dec h
 130+ 9A5B
 131+ 9A5B              ; -----------------------------
 132+ 9A5B CD 0F 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A5E              ;	call Reinicio
 134+ 9A5E              ; -----------------------------
 135+ 9A5E
 136+ 9A5E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A60 CD CB 99     1 call PreviousScan
 138+ 9A63 22 0C 8C     	ld (Posicion_actual),hl
 139+ 9A66 10 E2            djnz 3B
 140+ 9A68 CD C2 94     2 call Genera_coordenadas
 141+ 9A6B C9           	ret
 142+ 9A6C
 143+ 9A6C              ; -----------------------------
 144+ 9A6C              ;
 145+ 9A6C              ;	27/5/23
 146+ 9A6C              ;
 147+ 9A6C              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A6C              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A6C              ;
 150+ 9A6C              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A6C              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A6C              ;
 153+ 9A6C              ;	Modifica: A y (Puntero_objeto).
 154+ 9A6C
 155+ 9A6C 3A 08 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A6F CB 47        	bit 0,a
 157+ 9A71 C8           	ret z
 158+ 9A72 CB 87        	res 0,a
 159+ 9A74 32 08 8C     	ld (Ctrl_2),a
 160+ 9A77 2A 3A 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A7A 22 0E 8C     	ld (Puntero_objeto),hl
 162+ 9A7D C9           	ret
 163+ 9A7E
 164+ 9A7E              ; ******************************************************************************************************************************************************************************************
 165+ 9A7E              ;
 166+ 9A7E              ;	19/10/22
 167+ 9A7E              ;
 168+ 9A7E              ;	Mov_right.
 169+ 9A7E              ;
 170+ 9A7E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A7E              ;
 172+ 9A7E
 173+ 9A7E 3A 09 8C     Mov_right ld a,(Ctrl_0)
 174+ 9A81 CB 77        	bit 6,a
 175+ 9A83 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A85
 177+ 9A85 CD BD 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A88 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A89
 180+ 9A89 21 09 8C     	ld hl,Ctrl_0
 181+ 9A8C CB E6        	set 4,(hl)
 182+ 9A8E 18 52        	jr 8F
 183+ 9A90
 184+ 9A90 21 09 8C     10 ld hl,Ctrl_0
 185+ 9A93 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A95              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A95              ; 																	; _ en el caso de que no lo haya.
 188+ 9A95 3A FD 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A98 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A9A 20 46        	jr nz,8F
 191+ 9A9C
 192+ 9A9C 3A 10 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A9F A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AA0 28 40        	jr z,8F
 195+ 9AA2
 196+ 9AA2              ; ---------- ---------- ----------
 197+ 9AA2              ;
 198+ 9AA2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AA2
 200+ 9AA2 3A 22 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AA5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AA7 28 11        	jr z,1F
 203+ 9AA9 38 06        	jr c,6F
 204+ 9AAB FE 04        	cp 4
 205+ 9AAD 28 14        	jr z,7F
 206+ 9AAF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AB1
 208+ 9AB1              ; ---------- ---------- ----------
 209+ 9AB1              ;
 210+ 9AB1              ; Perfiles de velocidad
 211+ 9AB1              ;
 212+ 9AB1
 213+ 9AB1 3A 10 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AB4 FE FE        	cp $fe
 215+ 9AB6 20 2A        	jr nz,8F
 216+ 9AB8 18 10        	jr 3F
 217+ 9ABA 3A 10 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ABD FE FD        	cp $fd
 219+ 9ABF 20 21        	jr nz,8F
 220+ 9AC1 18 07        	jr 3F
 221+ 9AC3 3A 10 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AC6 FE FB        	cp $fb
 223+ 9AC8 20 18        	jr nz,8F
 224+ 9ACA
 225+ 9ACA              ; ---------- ---------- ----------
 226+ 9ACA
 227+ 9ACA              3
 228+ 9ACA CD FD 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ACD              ;	call Reinicio
 230+ 9ACD
 231+ 9ACD              ; ---------- ---------- ----------
 232+ 9ACD              ;
 233+ 9ACD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ACD
 235+ 9ACD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9ACF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AD0 CD E9 9A     	call DESPLZ_DER
 238+ 9AD3 C1           	pop bc
 239+ 9AD4 10 F9        	djnz 5B
 240+ 9AD6 2A 0C 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AD9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ADA 22 0C 8C     	ld (Posicion_actual),hl
 243+ 9ADD CD C2 94     	call Genera_coordenadas
 244+ 9AE0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AE2
 246+ 9AE2              ; ---------- ---------- ----------
 247+ 9AE2
 248+ 9AE2 2A 0C 8C     8 ld hl,(Posicion_actual)
 249+ 9AE5 CD E9 9A     	call DESPLZ_DER
 250+ 9AE8 C9           2 ret
 251+ 9AE9
 252+ 9AE9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AE9              ;
 254+ 9AE9              ;	22/9/22
 255+ 9AE9              ;
 256+ 9AE9
 257+ 9AE9 CD F8 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9AEC CD 44 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AEF CD 6D 9B         call Ciclo_completo
 260+ 9AF2 21 09 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AF5 CB FE        	set 7,(hl)
 262+ 9AF7 C9           	ret
 263+ 9AF8
 264+ 9AF8              ; ******************************************************************************************************************************************************************************************
 265+ 9AF8              ;	15/02/23
 266+ 9AF8              ;
 267+ 9AF8
 268+ 9AF8 3A 22 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9AFB 47           	ld b,a
 270+ 9AFC 2A 15 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AFF 23           1 inc hl
 272+ 9B00 23           	inc hl
 273+ 9B01 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B03 22 15 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B06 CD FC 90     	call Extrae_address
 276+ 9B09 22 0E 8C     	ld (Puntero_objeto),hl
 277+ 9B0C
 278+ 9B0C              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B0C
 280+ 9B0C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B0C              ; Cuántos movimientos hemos hecho ??
 282+ 9B0C              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B0C
 284+ 9B0C 2A 11 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9B0F EB           	ex de,hl
 286+ 9B10 A7           	and a
 287+ 9B11 ED 52        	sbc hl,de
 288+ 9B13 CB 3D        	srl l
 289+ 9B15 3E 08        6 ld a,8
 290+ 9B17 95           	sub l
 291+ 9B18 30 1E        	jr nc,3F
 292+ 9B1A
 293+ 9B1A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B1A              ; B="0".
 295+ 9B1A
 296+ 9B1A 04           4 inc b
 297+ 9B1B 3C           	inc a
 298+ 9B1C 20 FC        	jr nz,4B
 299+ 9B1E 78           	ld a,b
 300+ 9B1F 08           	ex af,af
 301+ 9B20 2A 11 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B23 23           5 inc hl
 303+ 9B24 23           	inc hl
 304+ 9B25 10 FC        	djnz 5B
 305+ 9B27 22 15 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B2A CD FC 90     	call Extrae_address
 307+ 9B2D 22 0E 8C     	ld (Puntero_objeto),hl
 308+ 9B30
 309+ 9B30              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B30              ; _(Posicion_actual).
 311+ 9B30
 312+ 9B30 21 0C 8C     	ld hl,Posicion_actual
 313+ 9B33 34           	inc (hl)
 314+ 9B34 08               ex af,af
 315+ 9B35 6F           	ld l,a
 316+ 9B36 18 DD        	jr 6B
 317+ 9B38
 318+ 9B38              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B38
 320+ 9B38 47           3 ld b,a
 321+ 9B39 2A 13 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B3C 23           2 inc hl
 323+ 9B3D 23           	inc hl
 324+ 9B3E 10 FC        	djnz 2B
 325+ 9B40 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B43 C9           8 ret
 327+ 9B44
 328+ 9B44              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B44              ;
 330+ 9B44              ;	24/7/22
 331+ 9B44              ;
 332+ 9B44              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B44              ;
 334+ 9B44              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B44              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B44              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B44
 338+ 9B44 3A 10 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B47 A7           	and a
 340+ 9B48 20 1F        	jr nz,1F
 341+ 9B4A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B4C 32 10 8C         ld (CTRL_DESPLZ),a
 343+ 9B4F
 344+ 9B4F 21 0B 8C     	ld hl,Columns
 345+ 9B52 34           	inc (hl)
 346+ 9B53 3A 1B 8C     	ld a,(Cuad_objeto)
 347+ 9B56 E6 01        	and 1
 348+ 9B58 28 0F        	jr z,1F
 349+ 9B5A 2A 0C 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B5D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B5E 22 0C 8C     	ld (Posicion_actual),hl
 352+ 9B61 CD C2 94     	call Genera_coordenadas
 353+ 9B64 CD C9 9C     	call Inc_CTRL_DESPLZ
 354+ 9B67 18 03        	jr 2F
 355+ 9B69 CD C9 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B6C C9           2 ret
 357+ 9B6D
 358+ 9B6D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B6D              ;
 360+ 9B6D              ;	24/7/22
 361+ 9B6D              ;
 362+ 9B6D              ;	Ciclo_completo.
 363+ 9B6D              ;
 364+ 9B6D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B6D              ;
 366+ 9B6D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B6D              ; 	Decrementamos (Columns).
 368+ 9B6D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B6D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B6D
 371+ 9B6D
 372+ 9B6D 3A 10 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B70 FE FF        	cp $ff
 374+ 9B72 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B74 E6 F0        	and $f0
 376+ 9B76 20 28        	jr nz,3F
 377+ 9B78
 378+ 9B78              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B78
 380+ 9B78 3A 10 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B7B 47           	ld b,a
 382+ 9B7C 3E F8        	ld a,$f8
 383+ 9B7E 80           	add b
 384+ 9B7F 32 10 8C     	ld (CTRL_DESPLZ),a
 385+ 9B82 18 1C        	jr 3F
 386+ 9B84 21 0B 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B87 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B88 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B89 32 10 8C     	ld (CTRL_DESPLZ),a
 390+ 9B8C 3A 1B 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B8F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B91 20 0A        	jr nz,2F
 393+ 9B93 2A 0C 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B96 23           	inc hl
 395+ 9B97 22 0C 8C     	ld (Posicion_actual),hl
 396+ 9B9A CD C2 94     	call Genera_coordenadas
 397+ 9B9D
 398+ 9B9D              ; Inicia el puntero de Sprite.
 399+ 9B9D
 400+ 9B9D CD 11 91     2 call Inicia_puntero_objeto_der
 401+ 9BA0 C9           3 ret
 402+ 9BA1
 403+ 9BA1              ; ******************************************************************************************************************************************************************************************
 404+ 9BA1              ;
 405+ 9BA1              ;	15/02/23
 406+ 9BA1              ;
 407+ 9BA1              ;	Mov_left.
 408+ 9BA1              ;
 409+ 9BA1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BA1              ;
 411+ 9BA1              Mov_left
 412+ 9BA1
 413+ 9BA1 21 09 8C     	ld hl,Ctrl_0
 414+ 9BA4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BA6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BA6              ; 																	; _ en el caso de que no lo haya.
 417+ 9BA6 3A 09 8C     	ld a,(Ctrl_0)
 418+ 9BA9 CB 77        	bit 6,a
 419+ 9BAB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BAD
 421+ 9BAD CD C3 9C     	call Stop_Amadeus_left
 422+ 9BB0 C8           	ret z
 423+ 9BB1 20 4A        	jr nz,8F
 424+ 9BB3
 425+ 9BB3 3A FD 8B     11 ld a,(Coordenada_X)
 426+ 9BB6 A7           	and a
 427+ 9BB7 20 44        	jr nz,8F
 428+ 9BB9
 429+ 9BB9 3A 10 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BBC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BBD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BBF
 433+ 9BBF              ; ---------- ---------- ----------
 434+ 9BBF
 435+ 9BBF 3A 21 8C     	ld a,(Vel_left)
 436+ 9BC2 FE 02        	cp 2
 437+ 9BC4 28 0F        	jr z,1F
 438+ 9BC6 38 04        	jr c,6F
 439+ 9BC8 FE 04        	cp 4
 440+ 9BCA 28 12        	jr z,7F
 441+ 9BCC
 442+ 9BCC              ; ---------- ---------- ----------
 443+ 9BCC
 444+ 9BCC 3A 10 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BCF FE F8        	cp $f8
 446+ 9BD1 20 2A        	jr nz,8F
 447+ 9BD3 18 10        	jr 4F
 448+ 9BD5 3A 10 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BD8 FE F9        	cp $f9
 450+ 9BDA 20 21        	jr nz,8F
 451+ 9BDC 18 07        	jr 4F
 452+ 9BDE 3A 10 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BE1 FE FB        	cp $fb
 454+ 9BE3 20 18        	jr nz,8F
 455+ 9BE5
 456+ 9BE5              ; ---------- ---------- ----------
 457+ 9BE5
 458+ 9BE5              4
 459+ 9BE5 CD EB 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BE8              ;	call Reinicio
 461+ 9BE8
 462+ 9BE8              ; ---------- ---------- ----------
 463+ 9BE8
 464+ 9BE8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BEA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BEB
 467+ 9BEB              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BEB              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BEB
 470+ 9BEB CD 04 9C     	call DESPLZ_IZQ
 471+ 9BEE C1           	pop bc
 472+ 9BEF 10 F9        	djnz 5B
 473+ 9BF1 2A 0C 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BF4 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BF5 22 0C 8C     	ld (Posicion_actual),hl
 476+ 9BF8 CD C2 94     	call Genera_coordenadas
 477+ 9BFB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BFD
 479+ 9BFD              ; ---------- ---------- ----------
 480+ 9BFD
 481+ 9BFD              ; Movemos, no hay recolocación.
 482+ 9BFD
 483+ 9BFD 2A 0C 8C     8 ld hl,(Posicion_actual)
 484+ 9C00 CD 04 9C     	call DESPLZ_IZQ
 485+ 9C03 C9           2 ret
 486+ 9C04
 487+ 9C04              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C04              ;
 489+ 9C04              ;	22/9/22
 490+ 9C04
 491+ 9C04              DESPLZ_IZQ
 492+ 9C04
 493+ 9C04 CD 13 9C     	call Desplaza_izquierda
 494+ 9C07 CD 5F 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C0A CD 87 9C     	call Ciclo_completo_2
 496+ 9C0D 21 09 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C10 CB BE        	res 7,(hl)
 498+ 9C12 C9           	ret
 499+ 9C13
 500+ 9C13              Desplaza_izquierda
 501+ 9C13
 502+ 9C13 3A 21 8C     	ld a,(Vel_left)
 503+ 9C16 47           	ld b,a
 504+ 9C17 2A 17 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C1A 23           1 inc hl
 506+ 9C1B 23           	inc hl
 507+ 9C1C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C1E 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C21 CD FC 90     	call Extrae_address
 510+ 9C24 22 0E 8C     	ld (Puntero_objeto),hl
 511+ 9C27
 512+ 9C27              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C27
 514+ 9C27              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C27              ; Cuántos movimientos hemos hecho ??
 516+ 9C27              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C27
 518+ 9C27 2A 13 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C2A EB           	ex de,hl
 520+ 9C2B A7           	and a
 521+ 9C2C ED 52        	sbc hl,de
 522+ 9C2E CB 3D        	srl l
 523+ 9C30 3E 08        6 ld a,8
 524+ 9C32 95           	sub l
 525+ 9C33 30 1E        	jr nc,3F
 526+ 9C35
 527+ 9C35              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C35              ; B="0".
 529+ 9C35
 530+ 9C35 04           4 inc b
 531+ 9C36 3C           	inc a
 532+ 9C37 20 FC        	jr nz,4B
 533+ 9C39 78           	ld a,b
 534+ 9C3A 08           	ex af,af
 535+ 9C3B 2A 13 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C3E 23           5 inc hl
 537+ 9C3F 23           	inc hl
 538+ 9C40 10 FC        	djnz 5B
 539+ 9C42 22 17 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C45 CD FC 90     	call Extrae_address
 541+ 9C48 22 0E 8C     	ld (Puntero_objeto),hl
 542+ 9C4B
 543+ 9C4B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C4B              ; _(Posicion_actual).
 545+ 9C4B
 546+ 9C4B 21 0C 8C     	ld hl,Posicion_actual
 547+ 9C4E 35           	dec (hl)
 548+ 9C4F 08           	ex af,af
 549+ 9C50 6F           	ld l,a
 550+ 9C51 18 DD        	jr 6B
 551+ 9C53
 552+ 9C53              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C53
 554+ 9C53 47           3 ld b,a
 555+ 9C54 2A 11 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C57 23           2 inc hl
 557+ 9C58 23           	inc hl
 558+ 9C59 10 FC        	djnz 2B
 559+ 9C5B 22 15 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C5E C9           8 ret
 561+ 9C5F
 562+ 9C5F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C5F              ;
 564+ 9C5F              ;	modifica_parametros_1er_DESPLZ
 565+ 9C5F              ;
 566+ 9C5F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C5F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C5F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C5F
 570+ 9C5F 3A 10 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C62 A7           	and a
 572+ 9C63 20 1E        	jr nz,1F
 573+ 9C65 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C66 32 10 8C         ld (CTRL_DESPLZ),a
 575+ 9C69 21 0B 8C     	ld hl,Columns
 576+ 9C6C 34           	inc (hl)
 577+ 9C6D 3A 1B 8C     	ld a,(Cuad_objeto)
 578+ 9C70 E6 01        	and 1
 579+ 9C72 20 0F        	jr nz,1F
 580+ 9C74 2A 0C 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C77 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C78 22 0C 8C     	ld (Posicion_actual),hl
 583+ 9C7B CD C2 94     	call Genera_coordenadas
 584+ 9C7E CD DA 9C     	call Dec_CTRL_DESPLZ
 585+ 9C81 18 03        	jr 2F
 586+ 9C83 CD DA 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C86 C9           2 ret
 588+ 9C87
 589+ 9C87              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C87
 591+ 9C87 3A 10 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C8A FE F7        	cp $f7
 593+ 9C8C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C8E 30 2C        	jr nc,3F
 595+ 9C90
 596+ 9C90              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C90
 598+ 9C90 06 00        	ld b,0
 599+ 9C92 04           4 inc b
 600+ 9C93 3C           	inc a
 601+ 9C94 FE F7        	cp $f7
 602+ 9C96 20 FA        	jr nz,4B
 603+ 9C98 3E FF        	ld a,$ff
 604+ 9C9A 90           	sub b
 605+ 9C9B 32 10 8C     	ld (CTRL_DESPLZ),a
 606+ 9C9E 18 1C        	jr 3F
 607+ 9CA0
 608+ 9CA0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CA0
 610+ 9CA0 21 0B 8C     1 ld hl,Columns
 611+ 9CA3 35           	dec (hl)
 612+ 9CA4 AF           	xor a
 613+ 9CA5 32 10 8C     	ld (CTRL_DESPLZ),a
 614+ 9CA8 3A 1B 8C     	ld a,(Cuad_objeto)
 615+ 9CAB E6 01        	and 1
 616+ 9CAD 28 0A        	jr z,2F
 617+ 9CAF 2A 0C 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CB2 2B           	dec hl
 619+ 9CB3 22 0C 8C     	ld (Posicion_actual),hl
 620+ 9CB6 CD C2 94     	call Genera_coordenadas
 621+ 9CB9
 622+ 9CB9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CB9
 624+ 9CB9 CD 24 91     2 call Inicia_puntero_objeto_izq
 625+ 9CBC C9           3 ret
 626+ 9CBD
 627+ 9CBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CBD              ;
 629+ 9CBD              ;	19/10/22
 630+ 9CBD              ;
 631+ 9CBD              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CBD              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CBD
 634+ 9CBD 3A FD 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CC0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CC2 C9           	ret
 637+ 9CC3
 638+ 9CC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CC3              ;
 640+ 9CC3              ;	19/10/22
 641+ 9CC3              ;
 642+ 9CC3              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CC3              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CC3
 645+ 9CC3 3A FD 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CC6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CC8 C9           	ret
 648+ 9CC9
 649+ 9CC9              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CC9              ;
 651+ 9CC9              ;	24/7/22
 652+ 9CC9              ;
 653+ 9CC9              ;	Inc_CTRL_DESPLZ
 654+ 9CC9              ;
 655+ 9CC9              ;
 656+ 9CC9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CC9
 658+ 9CC9 21 10 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CCC 3A 22 8C     	ld a,(Vel_right)
 660+ 9CCF A7           	and a
 661+ 9CD0 28 06        	jr z,1F
 662+ 9CD2 47           	ld b,a
 663+ 9CD3 34           3 inc (hl)
 664+ 9CD4 10 FD        	djnz 3B
 665+ 9CD6 18 01        	jr 2F
 666+ 9CD8 34           1 inc (hl)
 667+ 9CD9 C9           2 ret
 668+ 9CDA
 669+ 9CDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CDA              ;
 671+ 9CDA              ;	5/2/23
 672+ 9CDA              ;
 673+ 9CDA              ;	Dec_CTRL_DESPLZ
 674+ 9CDA              ;
 675+ 9CDA              ;
 676+ 9CDA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CDA
 678+ 9CDA 21 10 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CDD 3A 21 8C     	ld a,(Vel_left)
 680+ 9CE0 A7           	and a
 681+ 9CE1 28 06        	jr z,1F
 682+ 9CE3 47           	ld b,a
 683+ 9CE4 35           3 dec (hl)
 684+ 9CE5 10 FD        	djnz 3B
 685+ 9CE7 18 01        	jr 2F
 686+ 9CE9 35           1 dec (hl)
 687+ 9CEA C9           2 ret
 688+ 9CEB
 689+ 9CEB              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CEB
 691+ 9CEB 2A 0C 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CEE 01 1F 00     	ld bc,31
 693+ 9CF1 A7           	and a
 694+ 9CF2 ED 4A        	adc hl,bc
 695+ 9CF4 22 0C 8C     	ld (Posicion_actual),hl
 696+ 9CF7 21 09 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9CFA CB C6        	set 0,(hl)
 698+ 9CFC C9           	ret
 699+ 9CFD
 700+ 9CFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CFD
 702+ 9CFD 2A 0C 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D00 01 1F 00     	ld bc,31
 704+ 9D03 A7           	and a
 705+ 9D04 ED 42        	sbc hl,bc
 706+ 9D06 22 0C 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D09 21 09 8C     	ld hl,Ctrl_0
 708+ 9D0C CB CE        	set 1,(hl)
 709+ 9D0E C9           	ret
 710+ 9D0F
 711+ 9D0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D0F
 713+ 9D0F 24           Reaparece_abajo inc h
 714+ 9D10 01 E0 17     	ld bc,$17e0
 715+ 9D13 A7           	and a
 716+ 9D14 ED 4A        	adc hl,bc
 717+ 9D16 22 0C 8C     	ld (Posicion_actual),hl
 718+ 9D19 21 09 8C     	ld hl,Ctrl_0
 719+ 9D1C CB D6        	set 2,(hl)
 720+ 9D1E C9           	ret
 721+ 9D1F
 722+ 9D1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D1F
 724+ 9D1F 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D22 A7           	and a
 726+ 9D23 ED 42        	sbc hl,bc
 727+ 9D25 22 0C 8C     	ld (Posicion_actual),hl
 728+ 9D28 21 09 8C     	ld hl,Ctrl_0
 729+ 9D2B CB DE        	set 3,(hl)
 730+ 9D2D C9           	ret
 731+ 9D2E
 732+ 9D2E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D2E              ;
 734+ 9D2E              ;	15/07/23
 735+ 9D2E
 736+ 9D2E              Reinicio
 737+ 9D2E
 738+ 9D2E              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D2E
 740+ 9D2E AF           	xor a
 741+ 9D2F 21 31 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D32 CD 50 9D     	call Limpia_contenido_hl
 743+ 9D35
 744+ 9D35 21 0C 8C     	ld hl,Posicion_actual
 745+ 9D38 CD 50 9D     	call Limpia_contenido_hl
 746+ 9D3B
 747+ 9D3B CD 2F 93     	call Situa_Puntero_indice_mov
 748+ 9D3E CD 4F 9E     	call Inicia_Puntero_mov
 749+ 9D41
 750+ 9D41 21 33 8C     	ld hl,Incrementa_puntero
 751+ 9D44 06 05        	ld b,5
 752+ 9D46 77           1 ld (hl),a
 753+ 9D47 23           	inc hl
 754+ 9D48 10 FC        	djnz 1B
 755+ 9D4A
 756+ 9D4A 21 08 8C     	ld hl,Ctrl_2
 757+ 9D4D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D4F
 759+ 9D4F C9           	ret
 760+ 9D50
 761+ 9D50 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D51 23           	inc hl
 763+ 9D52 77           	ld (hl),a
 764+ 9D53 C9           	ret
 765+ 9D54
 766+ 9D54              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D54              ;
 768+ 9D54              ;	18/6/24
 769+ 9D54              ;
 770+ 9D54
 771+ 9D54              Amadeus_a_izquierda
 772+ 9D54
 773+ 9D54              ;	Actualiza contador de movimientos.
 774+ 9D54
 775+ 9D54 21 C2 89     	ld hl,Comm_Amadeus
 776+ 9D57 35           	dec (hl)
 777+ 9D58 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D5A
 779+ 9D5A 2A C0 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D5D 2B           	dec hl
 781+ 9D5E 2B           	dec hl
 782+ 9D5F 2B           	dec hl
 783+ 9D60 2B           	dec hl
 784+ 9D61 22 C0 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D64
 786+ 9D64 21 73 8C     	ld hl,Ctrl_3
 787+ 9D67 CB EE        	set 5,(hl)
 788+ 9D69
 789+ 9D69 C9           	ret
 790+ 9D6A
 791+ 9D6A 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D6B C9           	ret
 793+ 9D6C
 794+ 9D6C
 795+ 9D6C              Amadeus_a_derecha
 796+ 9D6C
 797+ 9D6C              ;	Actualiza contador de movimientos.
 798+ 9D6C
 799+ 9D6C 21 C2 89     	ld hl,Comm_Amadeus
 800+ 9D6F 34           	inc (hl)
 801+ 9D70 3E 7A        	ld a,$7a
 802+ 9D72 BE           	cp (hl)
 803+ 9D73 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D75
 805+ 9D75 2A C0 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D78 23           	inc hl
 807+ 9D79 23           	inc hl
 808+ 9D7A 23           	inc hl
 809+ 9D7B 23           	inc hl
 810+ 9D7C 22 C0 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D7F
 812+ 9D7F 21 73 8C     	ld hl,Ctrl_3
 813+ 9D82 CB EE        	set 5,(hl)
 814+ 9D84 C9           	ret
 815+ 9D85
 816+ 9D85 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D86 C9           	ret
# file closed: Direcciones.asm
2069  9D87              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D87              ; ----- ----- ----- ----- -----
   2+ 9D87              ;
   3+ 9D87              ;   28/12/23
   4+ 9D87
   5+ 9D87              Movimiento
   6+ 9D87
   7+ 9D87              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D87
   9+ 9D87 3A 08 8C         ld a,(Ctrl_2)
  10+ 9D8A CB 57            bit 2,a
  11+ 9D8C 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D8E
  13+ 9D8E 2A 2F 8C         ld hl,(Puntero_mov)
  14+ 9D91 7E               ld a,(hl)
  15+ 9D92
  16+ 9D92              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D92
  18+ 9D92              Inicia_desplazamiento.
  19+ 9D92
  20+ 9D92              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D92
  22+ 9D92 CD 85 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D95
  24+ 9D95              ; Iniciamos (Repetimos_mov).
  25+ 9D95
  26+ 9D95 7E               ld a,(hl)
  27+ 9D96 E6 0F            and $0f
  28+ 9D98 32 35 8C         ld (Repetimos_desplazamiento),a
  29+ 9D9B 32 36 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9D9E
  31+ 9D9E              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D9E
  33+ 9D9E 23               inc hl
  34+ 9D9F 7E               ld a,(hl)
  35+ 9DA0 32 38 8C         ld (Cola_de_desplazamiento),a
  36+ 9DA3 2B               dec hl
  37+ 9DA4
  38+ 9DA4 21 08 8C         ld hl,Ctrl_2
  39+ 9DA7 CB D6            set 2,(hl)
  40+ 9DA9
  41+ 9DA9              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DA9              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DA9
  44+ 9DA9              Desplazamiento_iniciado
  45+ 9DA9
  46+ 9DA9 CD 59 9E         call Aplica_desplazamiento
  47+ 9DAC
  48+ 9DAC              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DAC
  50+ 9DAC 3A 73 8C         ld a,(Ctrl_3)
  51+ 9DAF CB 4F            bit 1,a
  52+ 9DB1 C0               ret nz
  53+ 9DB2
  54+ 9DB2 21 35 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9DB5 35               dec (hl)
  56+ 9DB6 C0               ret nz
  57+ 9DB7
  58+ 9DB7              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DB7              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DB7              ; Analiza (Cola_de_desplazamiento).
  61+ 9DB7
  62+ 9DB7 3A 38 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DBA A7               and a
  64+ 9DBB CC AE 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DBE 28 30            jr z,Reinicia_el_movimiento
  66+ 9DC0
  67+ 9DC0 FE FF            cp $ff
  68+ 9DC2 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DC4
  70+ 9DC4 FE FE            cp $fe
  71+ 9DC6 CC 33 9E         call z,Fijamos_bucle
  72+ 9DC9 28 25            jr z,Reinicia_el_movimiento
  73+ 9DCB
  74+ 9DCB FE FD            cp $fd
  75+ 9DCD 20 11            jr nz,1F
  76+ 9DCF
  77+ 9DCF              ; ---
  78+ 9DCF              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DCF
  80+ 9DCF 3A 08 8C         ld a,(Ctrl_2)
  81+ 9DD2 CB 5F            bit 3,a
  82+ 9DD4 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DD6
  84+ 9DD6              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DD6
  86+ 9DD6 21 08 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DD9 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DDB
  89+ 9DDB CD 44 9E         call Inicia_Repetimos_movimiento
  90+ 9DDE 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DE0              ; ---
  92+ 9DE0
  93+ 9DE0 FE 01        1 cp 1
  94+ 9DE2 CA 1D 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DE5
  96+ 9DE5 3D               dec a
  97+ 9DE6 32 38 8C         ld (Cola_de_desplazamiento),a
  98+ 9DE9
  99+ 9DE9 3A 36 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DEC 32 35 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DEF              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DEF C9               ret
 103+ 9DF0
 104+ 9DF0              Reinicia_el_movimiento
 105+ 9DF0
 106+ 9DF0 3A 08 8C         ld a,(Ctrl_2)
 107+ 9DF3 CB 5F            bit 3,a
 108+ 9DF5 28 1B            jr z,2F
 109+ 9DF7
 110+ 9DF7              ; (Cola_de_desplazamiento)="254".
 111+ 9DF7
 112+ 9DF7 21 37 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DFA 35               dec (hl)
 114+ 9DFB 20 15            jr nz,2F
 115+ 9DFD
 116+ 9DFD              ; Fin de las repeticiones del último movimiento.
 117+ 9DFD
 118+ 9DFD 21 08 8C         ld hl,Ctrl_2
 119+ 9E00 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E02
 121+ 9E02 2A 2F 8C         ld hl,(Puntero_mov)
 122+ 9E05 23               inc hl
 123+ 9E06 23               inc hl
 124+ 9E07 23               inc hl
 125+ 9E08 22 2F 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E0B              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E0B 7E               ld a,(hl)
 128+ 9E0C 32 38 8C         ld (Cola_de_desplazamiento),a
 129+ 9E0F
 130+ 9E0F C3 B7 9D         jp Cola
 131+ 9E12
 132+ 9E12 CD 4F 9E     2 call Inicia_Puntero_mov
 133+ 9E15
 134+ 9E15 21 08 8C         ld hl,Ctrl_2
 135+ 9E18 CB 96            res 2,(hl)
 136+ 9E1A
 137+ 9E1A C3 87 9D         jp Movimiento
 138+ 9E1D
 139+ 9E1D              Siguiente_desplazamiento
 140+ 9E1D
 141+ 9E1D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E1D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E1D
 144+ 9E1D 21 08 8C         ld hl,Ctrl_2
 145+ 9E20 CB 96            res 2,(hl)
 146+ 9E22
 147+ 9E22 2A 2F 8C         ld hl,(Puntero_mov)
 148+ 9E25 23               inc hl
 149+ 9E26 23               inc hl
 150+ 9E27 22 2F 8C         ld (Puntero_mov),hl
 151+ 9E2A
 152+ 9E2A 7E               ld a,(hl)
 153+ 9E2B A7               and a
 154+ 9E2C CC AE 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E2F CA F0 9D         jp z,Reinicia_el_movimiento
 156+ 9E32
 157+ 9E32 C9               ret
 158+ 9E33
 159+ 9E33              ; Subrutinas -----------------------------------------
 160+ 9E33              ; ---------- --------- --------- ---------- ----------
 161+ 9E33              ;
 162+ 9E33              ;   24/07/23
 163+ 9E33              ;
 164+ 9E33              ;   Fijamos_bucle
 165+ 9E33              ;
 166+ 9E33              ;
 167+ 9E33
 168+ 9E33              Fijamos_bucle
 169+ 9E33
 170+ 9E33 3A 33 8C         ld a,(Incrementa_puntero)
 171+ 9E36 3C               inc a
 172+ 9E37 32 34 8C         ld (Incrementa_puntero_backup),a
 173+ 9E3A
 174+ 9E3A CD AE 9E         call Incrementa_Puntero_indice_mov
 175+ 9E3D 2A 2D 8C         ld hl,(Puntero_indice_mov)
 176+ 9E40 22 31 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E43 C9               ret
 178+ 9E44
 179+ 9E44              ; ---------- --------- --------- ---------- ----------
 180+ 9E44              ;
 181+ 9E44              ;   07/7/23
 182+ 9E44              ;
 183+ 9E44              ;   Inicia_Repetimos_movimiento
 184+ 9E44              ;
 185+ 9E44              ;
 186+ 9E44
 187+ 9E44              Inicia_Repetimos_movimiento
 188+ 9E44
 189+ 9E44              ; Iniciamos (Repetimos_movimiento).
 190+ 9E44
 191+ 9E44 DD 2A 2F 8C      ld ix,(Puntero_mov)
 192+ 9E48 DD 7E 02         ld a,(ix+2)
 193+ 9E4B 32 37 8C         ld (Repetimos_movimiento),a
 194+ 9E4E
 195+ 9E4E C9               ret
 196+ 9E4F
 197+ 9E4F              ; ---------- --------- --------- ---------- ----------
 198+ 9E4F              ;
 199+ 9E4F              ;   26/6/23
 200+ 9E4F              ;
 201+ 9E4F              ;   Inicia_Puntero_mov
 202+ 9E4F              ;
 203+ 9E4F              ;
 204+ 9E4F
 205+ 9E4F 2A 2D 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E52 CD FC 90         call Extrae_address
 207+ 9E55 22 2F 8C         ld (Puntero_mov),hl
 208+ 9E58 C9               ret
 209+ 9E59
 210+ 9E59              ; ---------- --------- --------- ---------- ----------
 211+ 9E59              ;
 212+ 9E59              ;   27/06/23
 213+ 9E59              ;
 214+ 9E59              ;   Aplica_movimiento.
 215+ 9E59
 216+ 9E59              Aplica_desplazamiento
 217+ 9E59
 218+ 9E59              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E59
 220+ 9E59 2A 2F 8C         ld hl, (Puntero_mov)
 221+ 9E5C
 222+ 9E5C 7E               ld a,(hl)
 223+ 9E5D E6 F0            and $f0
 224+ 9E5F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E60
 226+ 9E60 CB 7E            bit 7,(hl)
 227+ 9E62 28 03            jr z,1F
 228+ 9E64 CD 3B 9A         call Mov_up
 229+ 9E67 2A 2F 8C     1 ld hl, (Puntero_mov)
 230+ 9E6A CB 76            bit 6,(hl)
 231+ 9E6C 28 03            jr z,2F
 232+ 9E6E CD 02 9A         call Mov_down
 233+ 9E71
 234+ 9E71              ; Se ha aplicado reinicio ???
 235+ 9E71              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E71
 237+ 9E71              ;    ld a,(Ctrl_3)
 238+ 9E71              ;    bit 1,a
 239+ 9E71              ;    ret nz
 240+ 9E71
 241+ 9E71 2A 2F 8C     2 ld hl, (Puntero_mov)
 242+ 9E74 CB 6E            bit 5,(hl)
 243+ 9E76 28 03            jr z,3F
 244+ 9E78 CD A1 9B         call Mov_left
 245+ 9E7B 2A 2F 8C     3 ld hl, (Puntero_mov)
 246+ 9E7E CB 66            bit 4,(hl)
 247+ 9E80 C8               ret z
 248+ 9E81 CD 7E 9A         call Mov_right
 249+ 9E84 C9               ret
 250+ 9E85
 251+ 9E85              ; ---------- --------- --------- ---------- ----------
 252+ 9E85              ;
 253+ 9E85              ;   26/06/23
 254+ 9E85              ;
 255+ 9E85              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E85
 257+ 9E85              Ajusta_velocidad_desplazamiento
 258+ 9E85
 259+ 9E85              ; 1er byte de la cadena de movimiento.
 260+ 9E85              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E85
 262+ 9E85 CD A3 9E         call Extrae_nibble_alto
 263+ 9E88
 264+ 9E88 32 23 8C         ld (Vel_up),a
 265+ 9E8B 79               ld a,c
 266+ 9E8C E6 0F            and $0f
 267+ 9E8E 32 24 8C         ld (Vel_down),a
 268+ 9E91
 269+ 9E91              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E91              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E91
 272+ 9E91 23               inc hl
 273+ 9E92 CD A3 9E         call Extrae_nibble_alto
 274+ 9E95
 275+ 9E95 32 21 8C         ld (Vel_left),a
 276+ 9E98 79               ld a,c
 277+ 9E99 E6 0F            and $0f
 278+ 9E9B 32 22 8C         ld (Vel_right),a
 279+ 9E9E
 280+ 9E9E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E9E
 282+ 9E9E 23               inc hl
 283+ 9E9F 22 2F 8C         ld (Puntero_mov),hl
 284+ 9EA2 C9               ret
 285+ 9EA3
 286+ 9EA3 06 04        Extrae_nibble_alto ld b,4
 287+ 9EA5 7E               ld a,(hl)
 288+ 9EA6 4F               ld c,a
 289+ 9EA7 E6 F0            and $f0
 290+ 9EA9 CB 3F        1 srl a
 291+ 9EAB 10 FC            djnz 1B
 292+ 9EAD C9               ret
 293+ 9EAE
 294+ 9EAE              ; ---------- --------- --------- ---------- ----------
 295+ 9EAE              ;
 296+ 9EAE              ;   5/7/23
 297+ 9EAE              ;
 298+ 9EAE              ;   Incrementa_Puntero_indice_mov
 299+ 9EAE
 300+ 9EAE              Incrementa_Puntero_indice_mov
 301+ 9EAE
 302+ 9EAE 21 33 8C         ld hl,Incrementa_puntero
 303+ 9EB1 34               inc (hl)
 304+ 9EB2
 305+ 9EB2 2A 2D 8C         ld hl,(Puntero_indice_mov)
 306+ 9EB5 01 02 00         ld bc,2
 307+ 9EB8 A7               and a
 308+ 9EB9 09               add hl,bc
 309+ 9EBA 22 2D 8C         ld (Puntero_indice_mov),hl
 310+ 9EBD
 311+ 9EBD 7E               ld a,(hl)
 312+ 9EBE A7               and a
 313+ 9EBF
 314+ 9EBF              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EBF
 316+ 9EBF              ;    jr z,$
 317+ 9EBF
 318+ 9EBF              ;! Reinicia el Patrón de movimiento.
 319+ 9EBF
 320+ 9EBF CC C4 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EC2
 322+ 9EC2 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EC3
 324+ 9EC3 C9               ret
 325+ 9EC4
 326+ 9EC4              ; ---------- --------- --------- ---------- ----------
 327+ 9EC4              ;
 328+ 9EC4              ;   15/01/24
 329+ 9EC4              ;
 330+ 9EC4              ;   Inicializa_Puntero_indice_mov
 331+ 9EC4
 332+ 9EC4              Inicializa_Puntero_indice_mov_2
 333+ 9EC4
 334+ 9EC4              ; Existe etiqueta de bucle principal???
 335+ 9EC4
 336+ 9EC4 2A 31 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EC7 24               inc h
 338+ 9EC8 25               dec h
 339+ 9EC9 28 05            jr z,2F
 340+ 9ECB
 341+ 9ECB 22 2D 8C         ld (Puntero_indice_mov),hl
 342+ 9ECE 18 14            jr 3F
 343+ 9ED0
 344+ 9ED0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9ED0
 346+ 9ED0 3A 33 8C     2 ld a,(Incrementa_puntero)
 347+ 9ED3 47               ld b,a
 348+ 9ED4
 349+ 9ED4 2A 2D 8C         ld hl,(Puntero_indice_mov)
 350+ 9ED7 2B           1 dec hl
 351+ 9ED8 2B               dec hl
 352+ 9ED9 10 FC            djnz 1B
 353+ 9EDB 22 2D 8C         ld (Puntero_indice_mov),hl
 354+ 9EDE
 355+ 9EDE AF               xor a
 356+ 9EDF 32 33 8C         ld (Incrementa_puntero),a
 357+ 9EE2 18 06            jr 4F
 358+ 9EE4
 359+ 9EE4 3A 34 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9EE7 32 33 8C         ld (Incrementa_puntero),a
 361+ 9EEA C9           4 ret
 362+ 9EEB
 363+ 9EEB              ; ----------------------------------------------------------------------
 364+ 9EEB              ;
 365+ 9EEB              ;   30/01/24
 366+ 9EEB              ;
 367+ 9EEB              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EEB
 369+ 9EEB 3A FC 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EEE CD 3C 94         call Calcula_salto_en_BC
 371+ 9EF1 21 25 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EF4 A7               and a
 373+ 9EF5 ED 4A            adc hl,bc
 374+ 9EF7 C9               ret
 375+ 9EF8
 376+ 9EF8              ; ----------------------------------------------------------------------
 377+ 9EF8              ;
 378+ 9EF8              ;   30/01/24
 379+ 9EF8              ;
 380+ 9EF8              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EF8              ;
 382+ 9EF8              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EF8
 384+ 9EF8 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EF9 23               inc hl
 386+ 9EFA 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EFB 69               ld l,c
 388+ 9EFC 60               ld h,b
 389+ 9EFD 22 05 8C         ld (Contador_de_mov_masticados),hl
 390+ 9F00 C9               ret
 391+ 9F01
# file closed: Movimiento.asm
2070  9F01              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F01              ; --------------------------------------------------------------------------------------
   2+ 9F01              ;
   3+ 9F01              ;   25/10/24
   4+ 9F01              ;
   5+ 9F01
   6+ 9F01              Pinta_disparos_Entidades
   7+ 9F01
   8+ 9F01 ED 73 4B 8C      ld (Stack),sp
   9+ 9F05 ED 7B 5D 8C      ld sp,(Album_de_borrado_disparos_Entidades)
  10+ 9F09
  11+ 9F09 3E 02            ld a,2
  12+ 9F0B 08               ex af,af
  13+ 9F0C
  14+ 9F0C 06 07        3 ld b,7                            ; Nº máximo de disparos. Fuerza la salida del album cuando hemos pintado 7 veces_
  15+ 9F0E              ;                                     _ aunque IYL+IYH+E no sea "0". (No hay separacíon entre el álbum de borrado y el de pintado).
  16+ 9F0E              ;                                     _ No encontraría "0".
  17+ 9F0E FD E1        4 pop iy
  18+ 9F10 D1               pop de                          ; 1er .db IYL
  19+ 9F11              ;                                   ; 2º  .db IYH
  20+ 9F11              ;                                   ; 3er .db E.
  21+ 9F11              ;   Album vacío ???
  22+ 9F11
  23+ 9F11 FD 7D            ld a,iyl
  24+ 9F13 FD 84            add iyh
  25+ 9F15 83               add e
  26+ 9F16 28 1F            jr z,1F
  27+ 9F18
  28+ 9F18              ;   Imprime album, (contiene datos).
  29+ 9F18
  30+ 9F18 3B               dec sp
  31+ 9F19
  32+ 9F19 E1               pop hl                          ; Puntero de impresión en HL.
  33+ 9F1A
  34+ 9F1A              ; Imprime el 1er scanline del disparo.
  35+ 9F1A
  36+ 9F1A FD 7D            ld a,iyl
  37+ 9F1C AE               xor (hl)
  38+ 9F1D 77               ld (hl),a
  39+ 9F1E
  40+ 9F1E 2C               inc l
  41+ 9F1F
  42+ 9F1F FD 7C            ld a,iyh
  43+ 9F21 AE               xor (hl)
  44+ 9F22 77               ld (hl),a
  45+ 9F23
  46+ 9F23 2C               inc l
  47+ 9F24
  48+ 9F24 7B               ld a,e
  49+ 9F25 AE               xor (hl)
  50+ 9F26 77               ld (hl),a
  51+ 9F27
  52+ 9F27              ; Imprime el 2º scanline del disparo.
  53+ 9F27
  54+ 9F27 E1               pop hl
  55+ 9F28
  56+ 9F28 FD 7D            ld a,iyl
  57+ 9F2A AE               xor (hl)
  58+ 9F2B 77               ld (hl),a
  59+ 9F2C
  60+ 9F2C 2C               inc l
  61+ 9F2D
  62+ 9F2D FD 7C            ld a,iyh
  63+ 9F2F AE               xor (hl)
  64+ 9F30 77               ld (hl),a
  65+ 9F31
  66+ 9F31 2C               inc l
  67+ 9F32
  68+ 9F32 7B               ld a,e
  69+ 9F33 AE               xor (hl)
  70+ 9F34 77               ld (hl),a
  71+ 9F35
  72+ 9F35 10 D7            djnz 4B
  73+ 9F37
  74+ 9F37 08           1 ex af,af
  75+ 9F38 3D               dec a
  76+ 9F39 20 05            jr nz,2F
  77+ 9F3B
  78+ 9F3B ED 7B 4B 8C      ld sp,(Stack)
  79+ 9F3F C9               ret
  80+ 9F40
  81+ 9F40 ED 7B 5B 8C  2 ld sp,(Album_de_pintado_disparos_Entidades)
  82+ 9F44 08               ex af,af
  83+ 9F45 18 C5            jr 3B
  84+ 9F47
  85+ 9F47              ; --------------------------------------------------------------------------------------
  86+ 9F47              ;
  87+ 9F47              ;   30/10/24
  88+ 9F47              ;
  89+ 9F47
  90+ 9F47              Motor_de_disparos_entidades
  91+ 9F47
  92+ 9F47 3A 63 8C         ld a,(Numero_de_disparos_de_entidades)
  93+ 9F4A FE 07            cp 7
  94+ 9F4C C8               ret z                                                                ; Salimos si todas las cajas están vacías.
  95+ 9F4D
  96+ 9F4D 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
  97+ 9F4F 21 29 89         ld hl,Indice_de_disparos_entidades
  98+ 9F52
  99+ 9F52 CD FC 90     1 call Extrae_address
 100+ 9F55 1C               inc e
 101+ 9F56 1C               inc e
 102+ 9F57 ED 53 76 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 103+ 9F5B
 104+ 9F5B               ; Caja vacía ???
 105+ 9F5B
 106+ 9F5B 2D               dec l
 107+ 9F5C 7E               ld a,(hl)
 108+ 9F5D A7               and a
 109+ 9F5E 28 3F            jr z,3F                                                              ; Caja vacía.
 110+ 9F60
 111+ 9F60              ; --- Trabajamos con caja:
 112+ 9F60
 113+ 9F60 2C               inc l
 114+ 9F61
 115+ 9F61              ; --- Existe posibilidad de impacto ???
 116+ 9F61
 117+ 9F61 CB 46            bit 0,(hl)
 118+ 9F63 C4 A3 9F         call nz, Comprueba_impacto_con_Amadeus
 119+ 9F66 20 37            jr nz,3F
 120+ 9F68
 121+ 9F68 CD 2A A0         call Rota_disparo_si_procede
 122+ 9F6B
 123+ 9F6B              ; ------------------------------------------------------------
 124+ 9F6B
 125+ 9F6B 2D               dec l
 126+ 9F6C 2D               dec l
 127+ 9F6D
 128+ 9F6D CD FC 90         call Extrae_address
 129+ 9F70
 130+ 9F70              ;   (Puntero_de_impresion) del disparo en HL
 131+ 9F70              ;   Hay que modificar el puntero de impresión ??? ---------------------
 132+ 9F70
 133+ 9F70 3A 75 8C         ld a,(Ctrl_5)
 134+ 9F73 CB 57            bit 2,a
 135+ 9F75 28 09            jr z,4F
 136+ 9F77
 137+ 9F77 CB 97            res 2,a
 138+ 9F79 32 75 8C         ld (Ctrl_5),a
 139+ 9F7C 2C               inc l
 140+ 9F7D 2C               inc l
 141+ 9F7E 18 0C            jr 5F
 142+ 9F80
 143+ 9F80 CB 5F        4 bit 3,a
 144+ 9F82 28 08            jr z,5F
 145+ 9F84
 146+ 9F84 CB 9F            res 3,a
 147+ 9F86 32 75 8C         ld (Ctrl_5),a
 148+ 9F89 2D               dec l
 149+ 9F8A 2D               dec l
 150+ 9F8B 2D               dec l
 151+ 9F8C
 152+ 9F8C              ; ---------------------------------------------------------------------
 153+ 9F8C
 154+ 9F8C              ;! Velocidad del disparo de entidades.
 155+ 9F8C
 156+ 9F8C CD BC 99     5 call NextScan
 157+ 9F8F CD BC 99         call NextScan
 158+ 9F92
 159+ 9F92              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
 160+ 9F92
 161+ 9F92 CD 07 A0         call Fin_de_disparo_de_entidad
 162+ 9F95
 163+ 9F95 EB               ex de,hl
 164+ 9F96
 165+ 9F96 73               ld (hl),e
 166+ 9F97 23               inc hl
 167+ 9F98 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
 168+ 9F99
 169+ 9F99 2A 76 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 170+ 9F9C 18 02            jr 2F
 171+ 9F9E
 172+ 9F9E C9               ret
 173+ 9F9F
 174+ 9F9F EB           3 ex de,hl
 175+ 9FA0 10 B0        2 djnz 1B
 176+ 9FA2
 177+ 9FA2 C9               ret
 178+ 9FA3
 179+ 9FA3              ; ------------- ------------- ------------
 180+ 9FA3              ;
 181+ 9FA3              ;   1/11/24
 182+ 9FA3
 183+ 9FA3              Comprueba_impacto_con_Amadeus
 184+ 9FA3
 185+ 9FA3              ;   El disparo se encuentra en zona de Amadeus.
 186+ 9FA3              ;   Comparten coordenadas ?, hay riesgo de colisión ??
 187+ 9FA3
 188+ 9FA3              ;   Modificamos registros, así que guardamos ...
 189+ 9FA3
 190+ 9FA3 C5               push bc
 191+ 9FA4 E5               push hl
 192+ 9FA5 D5               push de
 193+ 9FA6
 194+ 9FA6 2D               dec l
 195+ 9FA7 2D               dec l
 196+ 9FA8
 197+ 9FA8 CD FC 90         call Extrae_address
 198+ 9FAB
 199+ 9FAB 3A BA 89         ld a,(CX_Amadeus)
 200+ 9FAE 4F               ld c,a              ; 1ª coordenada X de Amadeus en C.
 201+ 9FAF
 202+ 9FAF 7D               ld a,l
 203+ 9FB0 E6 1F            and $1f             ; 1ª coordenada X del disparo en A.
 204+ 9FB2
 205+ 9FB2 06 03            ld b,3
 206+ 9FB4
 207+ 9FB4 B9           1 cp c
 208+ 9FB5 28 15            jr z,Coincidencia
 209+ 9FB7 0C               inc c
 210+ 9FB8 10 FA            djnz 1B
 211+ 9FBA
 212+ 9FBA 0D               dec c
 213+ 9FBB 0D               dec c
 214+ 9FBC 0D               dec c
 215+ 9FBD
 216+ 9FBD 3C               inc a
 217+ 9FBE B9               cp c
 218+ 9FBF 28 0B            jr z,Coincidencia
 219+ 9FC1
 220+ 9FC1 3C               inc a
 221+ 9FC2 B9               cp c
 222+ 9FC3 28 07            jr z,Coincidencia
 223+ 9FC5
 224+ 9FC5 D1           2 pop de
 225+ 9FC6 E1               pop hl
 226+ 9FC7 C1               pop bc
 227+ 9FC8
 228+ 9FC8              ; No se produce impacto, restauramos el bit0 de Control antes de salir.
 229+ 9FC8
 230+ 9FC8 CB 86            res 0,(hl)
 231+ 9FCA AF               xor a                       ; Z before RET.
 232+ 9FCB C9               ret
 233+ 9FCC
 234+ 9FCC              Coincidencia
 235+ 9FCC
 236+ 9FCC              ;   Alguna de las coordenadas X del disparo coincide con alguna de las coordenadas X de Amadeus.
 237+ 9FCC              ;   Existe posibilidad de impacto.
 238+ 9FCC              ;   Vamos a averiguarlo ...
 239+ 9FCC
 240+ 9FCC 1D               dec e
 241+ 9FCD 1D               dec e
 242+ 9FCE 1D               dec e
 243+ 9FCF
 244+ 9FCF              ; DE en Puntero_objeto del disparo.
 245+ 9FCF              ; HL en Puntero_de_impresión del disparo.
 246+ 9FCF
 247+ 9FCF              ; Comparador:
 248+ 9FCF
 249+ 9FCF 06 03            ld b,3
 250+ 9FD1
 251+ 9FD1 1A           3 ld a,(de)
 252+ 9FD2 4F               ld c,a
 253+ 9FD3 A6               and (hl)
 254+ 9FD4 B9               cp c
 255+ 9FD5 20 06            jr nz,Amadeus_impactado
 256+ 9FD7
 257+ 9FD7 2C               inc l
 258+ 9FD8 1C               inc e
 259+ 9FD9
 260+ 9FD9 10 F6            djnz 3B
 261+ 9FDB
 262+ 9FDB 18 E8            jr 2B
 263+ 9FDD
 264+ 9FDD              Amadeus_impactado
 265+ 9FDD
 266+ 9FDD              ; Borramos disparo.
 267+ 9FDD
 268+ 9FDD D1               pop de
 269+ 9FDE E1               pop hl
 270+ 9FDF
 271+ 9FDF E5               push hl
 272+ 9FE0 D5               push de
 273+ 9FE1
 274+ 9FE1 CD 95 A0         call Borra_6_bytes
 275+ 9FE4
 276+ 9FE4 21 63 8C         ld hl,Numero_de_disparos_de_entidades
 277+ 9FE7 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 278+ 9FE8
 279+ 9FE8              ; Iniciamos el proceso de explosión de Amadeus.
 280+ 9FE8
 281+ 9FE8 21 BD 89         ld hl,Impacto_Amadeus
 282+ 9FEB 36 01            ld (hl),1
 283+ 9FED
 284+ 9FED              ; Corregimos la posición de Amadeus siempre que se encuentre en el extremo derecho de la pantalla.
 285+ 9FED              ; Evitamos así que la explosión aparezca también por el lado izquierdo de la pantalla.
 286+ 9FED
 287+ 9FED 3A BE 89         ld a,(p.imp.amadeus)
 288+ 9FF0 FE DE            cp $de
 289+ 9FF2 20 04            jr nz,1F
 290+ 9FF4
 291+ 9FF4 3D               dec a
 292+ 9FF5 32 BE 89         ld (p.imp.amadeus),a
 293+ 9FF8
 294+ 9FF8              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 295+ 9FF8
 296+ 9FF8 11 60 88     1 ld de,Indice_Explosion_Amadeus
 297+ 9FFB 21 C0 89         ld hl,Pamm_Amadeus
 298+ 9FFE
 299+ 9FFE 73               ld (hl),e
 300+ 9FFF 23               inc hl
 301+ A000 72               ld (hl),d
 302+ A001
 303+ A001 D1               pop de
 304+ A002 E1               pop hl
 305+ A003 C1               pop bc
 306+ A004
 307+ A004 AF               xor a
 308+ A005 3C               inc a               ; NZ before RET.
 309+ A006 C9               ret
 310+ A007
 311+ A007              ; ------------- ------------- ------------
 312+ A007              ;
 313+ A007              ;   31/10/24
 314+ A007
 315+ A007              Fin_de_disparo_de_entidad
 316+ A007
 317+ A007              ; Estamos en zona de Amadeus ??
 318+ A007
 319+ A007 7C               ld a,h
 320+ A008 FE 54            cp $54
 321+ A00A 38 0D            jr c,1F
 322+ A00C
 323+ A00C D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
 324+ A00D
 325+ A00D 5D               ld e,l
 326+ A00E 54               ld d,h
 327+ A00F
 328+ A00F 21 E0 57         ld hl,$57e0
 329+ A012 ED 52            sbc hl,de
 330+ A014
 331+ A014 38 6F            jr c,Elimina_disparo_entidad
 332+ A016
 333+ A016 6B               ld l,e
 334+ A017 62               ld h,d
 335+ A018
 336+ A018 D1               pop de
 337+ A019
 338+ A019 7C           1 ld a,h
 339+ A01A FE 50            cp $50
 340+ A01C D8               ret c
 341+ A01D
 342+ A01D 7D               ld a,l
 343+ A01E FE C0            cp $c0
 344+ A020 D8               ret c
 345+ A021
 346+ A021              ; Estamos en zona de Amadeus. Ponemos a "1" el bit0 de Control del disparo para indicarlo.
 347+ A021              ; Así podremos comprobar si hay colisión más adelante.
 348+ A021
 349+ A021 1C               inc e
 350+ A022 1C               inc e
 351+ A023
 352+ A023 EB               ex de,hl
 353+ A024 CB C6            set 0,(hl)
 354+ A026 EB               ex de,hl
 355+ A027
 356+ A027 1D               dec e
 357+ A028 1D               dec e
 358+ A029
 359+ A029 C9               ret
 360+ A02A
 361+ A02A              ; ----------------------------------------------------------
 362+ A02A              ;
 363+ A02A              ;   08/10/24
 364+ A02A
 365+ A02A              ;   Estructura de un disparo de entidades.
 366+ A02A
 367+ A02A              ;   Disparo_1 defw 0								; Puntero objeto.
 368+ A02A              ; 	defw 0											; Puntero de impresión.
 369+ A02A              ;	defw 0											; Control.
 370+ A02A
 371+ A02A              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 372+ A02A              ;   _de la entidad en el momento de disparar.
 373+ A02A
 374+ A02A              ;   El byte alto muestra la siguiente información:
 375+ A02A              ;
 376+ A02A              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 377+ A02A              ;                        _antes de desplazarse a derecha/izquierda.
 378+ A02A              ;
 379+ A02A              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 380+ A02A              ;
 381+ A02A              ;                        10xx ..... Izquierda.
 382+ A02A              ;                        01xx ..... Derecha.
 383+ A02A              ;                        00xx ..... Recto.
 384+ A02A
 385+ A02A              Rota_disparo_si_procede
 386+ A02A
 387+ A02A              ;   Nos situamos en el byte alto de (Control).
 388+ A02A
 389+ A02A CB 76            bit 6,(hl)
 390+ A02C 20 2D            jr nz,Rota_a_derecha
 391+ A02E CB 7E            bit 7,(hl)
 392+ A030 C8               ret z                                                               ; Salimos el disparo va recto, no se modifica.
 393+ A031
 394+ A031              Rota_a_izq
 395+ A031
 396+ A031 E5               push hl
 397+ A032
 398+ A032 7D               ld a,l
 399+ A033 D6 05            sub 5
 400+ A035 6F               ld l,a
 401+ A036
 402+ A036 E5               push hl
 403+ A037 FD E1            pop iy
 404+ A039
 405+ A039 A7               and a
 406+ A03A
 407+ A03A FD CB 02 16      rl (iy+02)
 408+ A03E FD CB 01 16      rl (iy+01)
 409+ A042 FD CB 00 16      rl (iy+00)
 410+ A046
 411+ A046 30 3B            jr nc,Exit
 412+ A048
 413+ A048              ; Desplazamiento completo hasta Carry.
 414+ A048              ; Modificamos datos y decremento (Puntero_de_impresión).
 415+ A048
 416+ A048 FD 36 02 03      ld (iy+02),$03
 417+ A04C FD 36 01 00      ld (iy+01),$00
 418+ A050 FD 36 00 00      ld (iy+00),$00
 419+ A054
 420+ A054 21 75 8C         ld hl,Ctrl_5
 421+ A057 CB DE            set 3,(hl)
 422+ A059
 423+ A059 18 28            jr Exit
 424+ A05B
 425+ A05B              Rota_a_derecha
 426+ A05B
 427+ A05B E5               push hl
 428+ A05C
 429+ A05C 7D               ld a,l
 430+ A05D D6 05            sub 5
 431+ A05F 6F               ld l,a
 432+ A060
 433+ A060 E5               push hl
 434+ A061 FD E1            pop iy
 435+ A063
 436+ A063 A7               and a
 437+ A064
 438+ A064 FD CB 00 1E      rr (iy+00)
 439+ A068 FD CB 01 1E      rr (iy+01)
 440+ A06C FD CB 02 1E      rr (iy+02)
 441+ A070
 442+ A070 30 11            jr nc,Exit
 443+ A072
 444+ A072              ; Desplazamiento completo hasta Carry.
 445+ A072              ; Modificamos datos e incremento (Puntero_de_impresión).
 446+ A072
 447+ A072 FD 36 00 01      ld (iy+00),$01
 448+ A076 FD 36 01 80      ld (iy+01),$80
 449+ A07A FD 36 02 00      ld (iy+02),$00
 450+ A07E
 451+ A07E 21 75 8C         ld hl,Ctrl_5
 452+ A081 CB D6            set 2,(hl)
 453+ A083
 454+ A083 E1           Exit pop hl
 455+ A084 C9               ret
 456+ A085
 457+ A085              ; ------------ ----------- ------------
 458+ A085              ;
 459+ A085              ;   25/9/24
 460+ A085
 461+ A085              Elimina_disparo_entidad
 462+ A085
 463+ A085 21 63 8C         ld hl,Numero_de_disparos_de_entidades
 464+ A088 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
 465+ A089
 466+ A089 E1               pop hl
 467+ A08A E5               push hl
 468+ A08B
 469+ A08B 2C               inc l
 470+ A08C 2C               inc l
 471+ A08D
 472+ A08D CD 95 A0         call Borra_6_bytes
 473+ A090
 474+ A090 D1               pop de
 475+ A091
 476+ A091 21 00 00         ld hl,0
 477+ A094
 478+ A094 C9               ret
 479+ A095
 480+ A095              ; ----- ----- ----- ----- -----
 481+ A095
 482+ A095              Borra_6_bytes
 483+ A095
 484+ A095 16 06            ld d,6                                                    ; Contador
 485+ A097 AF               xor a                                                     ; Borrador
 486+ A098 77           1 ld (hl),a
 487+ A099 2D               dec l
 488+ A09A 15               dec d
 489+ A09B 20 FB            jr nz,1B
 490+ A09D
 491+ A09D C9               ret
 492+ A09E
 493+ A09E              ; --------------------------------------------------------------------------------------
 494+ A09E              ;
 495+ A09E              ;   12/10/24
 496+ A09E              ;
 497+ A09E
 498+ A09E              Genera_datos_de_impresion_disparos_Entidades
 499+ A09E
 500+ A09E 3E 07            ld a,7
 501+ A0A0 08               ex af,af                                                  ;? 7 Disparos como 7 amores.
 502+ A0A1
 503+ A0A1              ; ---------------
 504+ A0A1
 505+ A0A1              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 506+ A0A1
 507+ A0A1 21 29 89          ld hl,Indice_de_disparos_entidades
 508+ A0A4
 509+ A0A4 CD FC 90     1 call Extrae_address
 510+ A0A7
 511+ A0A7 13               inc de
 512+ A0A8 13               inc de
 513+ A0A9
 514+ A0A9 ED 53 76 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 515+ A0AD
 516+ A0AD 2D               dec l
 517+ A0AE 7E               ld a,(hl)
 518+ A0AF A7               and a                                                     ;? Si el byte alto de control es "0" significa que la caja está vacía.
 519+ A0B0 28 33            jr z,Situa_en_siguiente_caja                              ;? Avanzamos a la siguiente caja en ese caso.
 520+ A0B2
 521+ A0B2              ; ----- ----- ----- -----
 522+ A0B2
 523+ A0B2 2D               dec l
 524+ A0B3 CD FC 90         call Extrae_address
 525+ A0B6 E5               push hl
 526+ A0B7
 527+ A0B7 1D               dec e
 528+ A0B8
 529+ A0B8 EB               ex de,hl
 530+ A0B9
 531+ A0B9 4E               ld c,(hl)                                                 ;? 3er byte del disparo de C.
 532+ A0BA 2D               dec l
 533+ A0BB 46               ld b,(hl)                                                 ;? 2º byte del disparo de B.
 534+ A0BC 2D               dec l
 535+ A0BD 5E               ld e,(hl)                                                 ;? 1er byte del disparo de E.
 536+ A0BE
 537+ A0BE E1               pop hl                                                    ;? Puntero de impresión en HL.
 538+ A0BF
 539+ A0BF              Genera_scanlines_de_los_disparos_de_entidades.
 540+ A0BF
 541+ A0BF FD 2A 5F 8C      ld iy,(Nivel_scan_disparos_album_de_pintado)
 542+ A0C3 FD 73 00         ld (iy+0),e
 543+ A0C6 FD 70 01         ld (iy+1),b
 544+ A0C9 FD 71 02         ld (iy+2),c
 545+ A0CC
 546+ A0CC FD 75 03         ld (iy+3),l
 547+ A0CF FD 74 04         ld (iy+4),h
 548+ A0D2
 549+ A0D2 CD BC 99         call NextScan
 550+ A0D5
 551+ A0D5 FD 75 05         ld (iy+5),l
 552+ A0D8 FD 74 06         ld (iy+6),h
 553+ A0DB
 554+ A0DB FD E5            push iy
 555+ A0DD E1               pop hl
 556+ A0DE
 557+ A0DE 3E 07            ld a,7
 558+ A0E0 85               add l
 559+ A0E1 6F               ld l,a
 560+ A0E2
 561+ A0E2 22 5F 8C         ld (Nivel_scan_disparos_album_de_pintado),hl
 562+ A0E5
 563+ A0E5              ; ----- ----- ----- -----
 564+ A0E5
 565+ A0E5              Situa_en_siguiente_caja
 566+ A0E5
 567+ A0E5 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 568+ A0E6 3D               dec a
 569+ A0E7 C8               ret z
 570+ A0E8
 571+ A0E8 08               ex af,af
 572+ A0E9 2A 76 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 573+ A0EC 18 B6            jr 1B
 574+ A0EE
 575+ A0EE              ; --------------------------------------------------------------------------------------
 576+ A0EE              ;
 577+ A0EE              ;   12/10/24
 578+ A0EE              ;
 579+ A0EE
 580+ A0EE              Genera_disparo_de_entidad_maldosa
 581+ A0EE
 582+ A0EE              ;   Estructura de un disparo de entidades.
 583+ A0EE
 584+ A0EE              ;   Disparo_1 defw 0								; Puntero objeto.
 585+ A0EE              ; 	defw 0											; Puntero de impresión.
 586+ A0EE              ;	defw 0											; Control.
 587+ A0EE
 588+ A0EE              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 589+ A0EE              ;   _de la entidad en el momento de disparar.
 590+ A0EE
 591+ A0EE              ;   El byte de control muestra la siguiente información:
 592+ A0EE
 593+ A0EE              ;   Nibble alto    ..... Bits (6) y (7) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 594+ A0EE              ;
 595+ A0EE              ;                        10xx ..... Izquierda.
 596+ A0EE              ;                        01xx ..... Derecha.
 597+ A0EE              ;                        00xx ..... Recto.
 598+ A0EE
 599+ A0EE              ;*  Exclusiones.
 600+ A0EE
 601+ A0EE              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,15,16.
 602+ A0EE              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 603+ A0EE
 604+ A0EE 3A 63 8C         ld a,(Numero_de_disparos_de_entidades)
 605+ A0F1 A7               and a
 606+ A0F2 C8               ret z
 607+ A0F3
 608+ A0F3 3A FE 8B         ld a,(Coordenada_y)
 609+ A0F6 A7               and a
 610+ A0F7 C8               ret z
 611+ A0F8
 612+ A0F8 3D               dec a
 613+ A0F9 C8               ret z
 614+ A0FA
 615+ A0FA FE 10            cp 16
 616+ A0FC D0               ret nc
 617+ A0FD
 618+ A0FD              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 619+ A0FD              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 620+ A0FD              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 621+ A0FD
 622+ A0FD 21 65 8C         ld hl,Permiso_de_disparo_Entidades
 623+ A100 35               dec (hl)                                            ; No más disparos en este FRAME.
 624+ A101
 625+ A101              ;   Decrementa el numero de disparos de entidades.
 626+ A101
 627+ A101 21 63 8C         ld hl,Numero_de_disparos_de_entidades
 628+ A104 35               dec (hl)
 629+ A105
 630+ A105 21 29 89         ld hl,Indice_de_disparos_entidades
 631+ A108
 632+ A108 CD FC 90     1 call Extrae_address
 633+ A10B
 634+ A10B 13               inc de
 635+ A10C 13               inc de
 636+ A10D
 637+ A10D ED 53 76 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 638+ A111
 639+ A111              ;   Comprobamos si la caja está vacía.
 640+ A111
 641+ A111 2D               dec l
 642+ A112 7E               ld a,(hl)
 643+ A113 A7               and a
 644+ A114 20 1D            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 645+ A116 2C               inc l
 646+ A117
 647+ A117              ;   Caja vacía, vamos a generar un disparo.
 648+ A117              ;   Empezaremos de atrás hacia adelante, (1º los bytes de control), asi podremos modificar el (Puntero_de_impresión) antes de guardarlo.
 649+ A117
 650+ A117 CD 38 A1         call Genera_byte_inclinacion
 651+ A11A
 652+ A11A 7E               ld a,(hl)
 653+ A11B 08               ex af,af                                            ; Copia de seguridad del byte de inclinación en A´.
 654+ A11C
 655+ A11C 2D               dec l
 656+ A11D
 657+ A11D CD 54 A1         call Modifica_puntero_de_impresion                  ; (También seleccionamos en IY el puntero objeto adecuado, izq. o derecha) y fija en BC el (Puntero_de_impresion).
 658+ A120
 659+ A120 70               ld (hl),b
 660+ A121 2D               dec l
 661+ A122 71               ld (hl),c
 662+ A123
 663+ A123 2D               dec l
 664+ A124
 665+ A124              ;   Por último, generamos los tres .db que imprimirán el disparo en pantalla.
 666+ A124
 667+ A124 FD 7E 02         ld a,(iy+02)
 668+ A127 77               ld (hl),a
 669+ A128 2D               dec l
 670+ A129
 671+ A129 FD 7E 01         ld a,(iy+01)
 672+ A12C 77               ld (hl),a
 673+ A12D 2D               dec l
 674+ A12E
 675+ A12E FD 7E 00         ld a,(iy+00)
 676+ A131 77               ld (hl),a
 677+ A132
 678+ A132 C9               ret
 679+ A133
 680+ A133              ;   --- --- ---
 681+ A133
 682+ A133              Situa_en_siguiente_disparo
 683+ A133
 684+ A133 2A 76 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 685+ A136 18 D0            jr 1B
 686+ A138
 687+ A138              ; --------------------------------------------------------------------------------------
 688+ A138              ;
 689+ A138              ;   09/10/24
 690+ A138              ;
 691+ A138
 692+ A138              Genera_byte_inclinacion
 693+ A138
 694+ A138              ; Determina tendencia del disparo.
 695+ A138
 696+ A138 3A BA 89         ld a,(CX_Amadeus)
 697+ A13B 47               ld b,a
 698+ A13C 3A FD 8B         ld a,(Coordenada_X)
 699+ A13F 90               sub b
 700+ A140 38 07            jr c,Disparo_a_derecha
 701+ A142
 702+ A142 FE 06        Disparo_a_izquierda cp 6
 703+ A144
 704+ A144 D8               ret c
 705+ A145 C8               ret z
 706+ A146
 707+ A146 CB FE            set 7,(hl)
 708+ A148 C9               ret
 709+ A149
 710+ A149 47           Disparo_a_derecha ld b,a
 711+ A14A 3E FF            ld a,$ff
 712+ A14C 90               sub b
 713+ A14D
 714+ A14D FE 05            cp 5
 715+ A14F
 716+ A14F D8               ret c
 717+ A150 C8               ret z
 718+ A151
 719+ A151 CB F6            set 6,(hl)
 720+ A153 C9               ret
 721+ A154
 722+ A154              ; --------------------------------------------------------------------------------------
 723+ A154              ;
 724+ A154              ;   09/10/24
 725+ A154              ;
 726+ A154
 727+ A154              Modifica_puntero_de_impresion
 728+ A154
 729+ A154              ;   Puntero de impresión del disparo en BC.
 730+ A154
 731+ A154 E5               push hl
 732+ A155
 733+ A155 2A 78 8C         ld hl,(Puntero_de_impresion_disparo_de_entidad)
 734+ A158 CD BC 99         call NextScan
 735+ A15B
 736+ A15B 4D               ld c,l
 737+ A15C 44               ld b,h
 738+ A15D
 739+ A15D E1               pop hl
 740+ A15E
 741+ A15E 08               ex af,af
 742+ A15F CB 77            bit 6,a
 743+ A161 28 06            jr z,1F
 744+ A163
 745+ A163 FD 21 70 83  2 ld iy,Disparo_de_entidad_derecho
 746+ A167 0C               inc c
 747+ A168 C9               ret
 748+ A169
 749+ A169 CB 7F        1 bit 7,a
 750+ A16B 28 F6            jr z,2B
 751+ A16D
 752+ A16D FD 21 73 83      ld iy,Disparo_de_entidad_izquierdo
 753+ A171 0D               dec c
 754+ A172
 755+ A172 C9               ret
 756+ A173
 757+ A173              ; --------------------------------------------------------------------------------------
 758+ A173              ;
 759+ A173              ;   31/08/24
 760+ A173              ;
 761+ A173
 762+ A173              Compara_con_coordenadas_de_disparo
 763+ A173
 764+ A173 3A FE 8B         ld a,(Coordenada_y)
 765+ A176 47               ld b,a
 766+ A177 3A 7D 8C         ld a,(Coordenadas_disparo_certero)
 767+ A17A 90               sub b
 768+ A17B
 769+ A17B              ; A = "0" ok
 770+ A17B              ; A = "1" ok
 771+ A17B
 772+ A17B 28 08            jr z,Comprueba_coordenada_X
 773+ A17D 3D               dec a
 774+ A17E 28 05            jr z,Comprueba_coordenada_X
 775+ A180
 776+ A180              ; A = "$ff" ok
 777+ A180
 778+ A180 FE FE            cp $fe
 779+ A182 28 01            jr z,Comprueba_coordenada_X
 780+ A184
 781+ A184 C9               ret
 782+ A185
 783+ A185              Comprueba_coordenada_X
 784+ A185
 785+ A185 3A FD 8B         ld a,(Coordenada_X)
 786+ A188 47               ld b,a
 787+ A189 21 7E 8C         ld hl,Coordenadas_disparo_certero+1
 788+ A18C 7E               ld a,(hl)
 789+ A18D 90               sub b
 790+ A18E
 791+ A18E              ; A = "0" ok
 792+ A18E              ; A = "1" ok
 793+ A18E
 794+ A18E 28 09            jr z,Activa_Impacto_en_entidad
 795+ A190 3D               dec a
 796+ A191 28 06            jr z,Activa_Impacto_en_entidad
 797+ A193
 798+ A193              ; A = "2" ok
 799+ A193
 800+ A193 3D               dec a
 801+ A194 28 03            jr z,Activa_Impacto_en_entidad
 802+ A196
 803+ A196              ; A = "$ff"
 804+ A196
 805+ A196 FE FD            cp $fd
 806+ A198 C0               ret nz
 807+ A199
 808+ A199              Activa_Impacto_en_entidad
 809+ A199
 810+ A199              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 811+ A199
 812+ A199 3E 02            ld a,2
 813+ A19B 32 00 8C         ld (Impacto),a
 814+ A19E
 815+ A19E              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 816+ A19E
 817+ A19E 11 C0 87         ld de,Indice_Explosion_entidades
 818+ A1A1 21 03 8C         ld hl,Puntero_de_almacen_de_mov_masticados
 819+ A1A4
 820+ A1A4 73               ld (hl),e
 821+ A1A5 23               inc hl
 822+ A1A6 72               ld (hl),d
 823+ A1A7
 824+ A1A7              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 825+ A1A7
 826+ A1A7 21 7A 8C         ld hl,Impacto2
 827+ A1AA CB 9E            res 3,(hl)
 828+ A1AC
 829+ A1AC C9               ret
 830+ A1AD
 831+ A1AD              ; --------------------------------------------------------------------------------------
 832+ A1AD              ;
 833+ A1AD              ;   13/10/24
 834+ A1AD              ;
 835+ A1AD
 836+ A1AD              ;   HL contiene (Album_de_pintado_disparos_Amadeus).
 837+ A1AD
 838+ A1AD              Limpia_album_de_pintado_disparos_Amadeus
 839+ A1AD
 840+ A1AD 2A 57 8C         ld hl,(Album_de_pintado_disparos_Amadeus)
 841+ A1B0 06 06            ld b,6
 842+ A1B2 AF               xor a
 843+ A1B3 77           1 ld (hl),a
 844+ A1B4 2C               inc l
 845+ A1B5 10 FC            djnz 1B
 846+ A1B7
 847+ A1B7 C9               ret
 848+ A1B8
 849+ A1B8              ; --------------------------------------------------------------------------------------
 850+ A1B8              ;
 851+ A1B8              ;   29/09/24
 852+ A1B8              ;
 853+ A1B8
 854+ A1B8              Calcula_bytes_pintado_disparos
 855+ A1B8
 856+ A1B8 2A 5B 8C         ld hl,(Album_de_pintado_disparos_Entidades)
 857+ A1BB 45               ld b,l
 858+ A1BC 2A 5F 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 859+ A1BF 7D               ld a,l
 860+ A1C0
 861+ A1C0 90               sub b
 862+ A1C1 32 61 8C         ld (Num_de_bytes_album_de_disparos),a
 863+ A1C4
 864+ A1C4 C9               ret
 865+ A1C5
 866+ A1C5              ; --------------------------------------------------------------------------------------
 867+ A1C5              ;
 868+ A1C5              ;   26/10/24
 869+ A1C5              ;
 870+ A1C5              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 871+ A1C5              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 872+ A1C5              ;   _disparos que el álbum del FRAME actual).
 873+ A1C5
 874+ A1C5              Limpia_album_de_pintado_disparos_entidades
 875+ A1C5
 876+ A1C5 21 62 8C         ld hl,Num_de_bytes_album_de_disparos+1
 877+ A1C8 7E               ld a,(hl)
 878+ A1C9 2D               dec l
 879+ A1CA 46               ld b,(hl)
 880+ A1CB 90               sub b
 881+ A1CC
 882+ A1CC D8               ret c
 883+ A1CD C8               ret z
 884+ A1CE
 885+ A1CE F5               push af
 886+ A1CF 80               add b
 887+ A1D0 77               ld (hl),a
 888+ A1D1 F1               pop af
 889+ A1D2
 890+ A1D2              ; Clean.
 891+ A1D2
 892+ A1D2 47           2 ld b,a
 893+ A1D3 AF               xor a
 894+ A1D4 2A 5F 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 895+ A1D7 77           1 ld (hl),a
 896+ A1D8 23               inc hl
 897+ A1D9 10 FC            djnz 1B
 898+ A1DB
 899+ A1DB C9               ret
 900+ A1DC
 901+ A1DC              ; --------------------------------------------------------------------------------------
 902+ A1DC              ;
 903+ A1DC              ;   29/09/24
 904+ A1DC              ;
 905+ A1DC
 906+ A1DC              Motor_Disparos_Amadeus
 907+ A1DC
 908+ A1DC 21 26 89         ld hl,Disparo_Amad+1
 909+ A1DF
 910+ A1DF 34               inc (hl)
 911+ A1E0 35               dec (hl)
 912+ A1E1
 913+ A1E1 C8               ret z                                                                ; Salimos si la caja no contiene disparo.
 914+ A1E2
 915+ A1E2              ;   Esta caja contiene un disparo.
 916+ A1E2
 917+ A1E2 CD E9 A1         call Consulta_Impacto
 918+ A1E5 CC 02 A2         call z,Mueve_disparo_Amadeus
 919+ A1E8
 920+ A1E8 C9               ret
 921+ A1E9
 922+ A1E9              ; ----------------------
 923+ A1E9              ;
 924+ A1E9              ;
 925+ A1E9              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 926+ A1E9              ;
 927+ A1E9              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 928+ A1E9
 929+ A1E9
 930+ A1E9              Consulta_Impacto
 931+ A1E9
 932+ A1E9              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 933+ A1E9              ;   _sea lo más coherente posible.
 934+ A1E9
 935+ A1E9 E5               push hl
 936+ A1EA 2B               dec hl
 937+ A1EB CD DE A2         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 938+ A1EE E1               pop hl
 939+ A1EF 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 940+ A1F0
 941+ A1F0 C8               ret z
 942+ A1F1
 943+ A1F1 3A 7A 8C         ld a,(Impacto2)
 944+ A1F4 CB DF            set 3,a
 945+ A1F6 32 7A 8C         ld (Impacto2),a
 946+ A1F9
 947+ A1F9 E5               push hl
 948+ A1FA CD CB A2         call Genera_coordenadas_de_disparo_Amadeus
 949+ A1FD E1               pop hl
 950+ A1FE CD 1B A2         call Elimina_disparo_Amadeus
 951+ A201
 952+ A201 C9               ret
 953+ A202
 954+ A202              ; ----------------------
 955+ A202              ;
 956+ A202              ;
 957+ A202              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 958+ A202
 959+ A202              Mueve_disparo_Amadeus
 960+ A202
 961+ A202 CD FC 90         call Extrae_address
 962+ A205
 963+ A205 CD CB 99         call PreviousScan
 964+ A208 CD CB 99         call PreviousScan
 965+ A20B CD CB 99         call PreviousScan
 966+ A20E CD CB 99         call PreviousScan
 967+ A211
 968+ A211              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 969+ A211
 970+ A211 7C               ld a,h
 971+ A212 D6 40            sub $40
 972+ A214 EB               ex de,hl
 973+ A215 38 04            jr c,Elimina_disparo_Amadeus
 974+ A217
 975+ A217               ; Introduce nuevo puntero_de_impresión en la caja.
 976+ A217
 977+ A217 73               ld (hl),e
 978+ A218 23               inc hl
 979+ A219 72               ld (hl),d
 980+ A21A
 981+ A21A C9               ret
 982+ A21B
 983+ A21B              ; ----------------------
 984+ A21B              ;
 985+ A21B              ;   29/9/24
 986+ A21B
 987+ A21B              Elimina_disparo_Amadeus
 988+ A21B
 989+ A21B              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 990+ A21B              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 991+ A21B
 992+ A21B              ;   Disparo_1A defw 0									; Puntero objeto.
 993+ A21B              ;   	defw 0											; Puntero de impresión.
 994+ A21B
 995+ A21B 2B               dec hl
 996+ A21C 2B               dec hl
 997+ A21D
 998+ A21D AF               xor a
 999+ A21E 77               ld (hl),a
1000+ A21F 23               inc hl
1001+ A220 77               ld (hl),a                                           ;? Puntero_objeto borrado.
1002+ A221
1003+ A221 23               inc hl
1004+ A222 77               ld (hl),a
1005+ A223 23               inc hl
1006+ A224 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
1007+ A225
1008+ A225 3E 01            ld a,1
1009+ A227 32 64 8C         ld (Permiso_de_disparo_Amadeus),a
1010+ A22A
1011+ A22A CD AD A1         call Limpia_album_de_pintado_disparos_Amadeus
1012+ A22D
1013+ A22D AF               xor a
1014+ A22E 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
1015+ A22F
1016+ A22F C9               ret
1017+ A230
1018+ A230              ; --------------------------------------------------------------------------------------
1019+ A230              ;
1020+ A230              ;   13/10/24
1021+ A230              ;
1022+ A230
1023+ A230              Pinta_disparos_Amadeus
1024+ A230
1025+ A230 06 02            ld b,2
1026+ A232 ED 73 4B 8C      ld (Stack),sp
1027+ A236 ED 7B 59 8C      ld sp,(Album_de_borrado_disparos_Amadeus)
1028+ A23A D1           3 pop de
1029+ A23B 14               inc d
1030+ A23C 15               dec d
1031+ A23D 28 1C            jr z,1F
1032+ A23F E1               pop hl
1033+ A240
1034+ A240              Imprime_scanlines_en_pantalla
1035+ A240
1036+ A240              ; 1er scanline
1037+ A240
1038+ A240 1A               ld a,(de)
1039+ A241 AE               xor (hl)
1040+ A242 77               ld (hl),a
1041+ A243
1042+ A243 1C               inc e
1043+ A244 2C               inc l
1044+ A245
1045+ A245 1A               ld a,(de)
1046+ A246 AE               xor (hl)
1047+ A247 77               ld (hl),a
1048+ A248
1049+ A248 1D               dec e
1050+ A249 E1               pop hl
1051+ A24A
1052+ A24A              ; 2º scanline
1053+ A24A
1054+ A24A 1A               ld a,(de)
1055+ A24B AE               xor (hl)
1056+ A24C 77               ld (hl),a
1057+ A24D
1058+ A24D 1C               inc e
1059+ A24E 2C               inc l
1060+ A24F
1061+ A24F 1A               ld a,(de)
1062+ A250 AE               xor (hl)
1063+ A251 77               ld (hl),a
1064+ A252
1065+ A252 1D               dec e
1066+ A253
1067+ A253 18 06            jr 1F
1068+ A255
1069+ A255 ED 7B 57 8C  2 ld sp,(Album_de_pintado_disparos_Amadeus)
1070+ A259 18 DF            jr 3B
1071+ A25B 10 F8        1 djnz 2B
1072+ A25D ED 7B 4B 8C      ld sp,(Stack)
1073+ A261 C9               ret
1074+ A262
1075+ A262              ; --------------------------------------------------------------------------------------
1076+ A262              ;
1077+ A262              ;   13/10/24
1078+ A262              ;
1079+ A262              ;   Modifica: HL,BC y DE.
1080+ A262
1081+ A262
1082+ A262              Genera_datos_de_impresion_disparos_Amadeus
1083+ A262
1084+ A262 ED 73 4B 8C      ld (Stack),sp
1085+ A266 31 25 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
1086+ A269 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
1087+ A26A
1088+ A26A 14               inc d                                                     ;? Salimos si no hay disparo.
1089+ A26B 15               dec d
1090+ A26C
1091+ A26C 28 0E            jr z,Salida
1092+ A26E
1093+ A26E              Genera_scanlines_de_disparo_Amadeus
1094+ A26E
1095+ A26E E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
1096+ A26F              ;                                                             ;? Puntero_de_impresión del disparo en HL.
1097+ A26F ED 7B 57 8C      ld sp,(Album_de_pintado_disparos_Amadeus)
1098+ A273
1099+ A273 C1               pop bc
1100+ A274 C1               pop bc
1101+ A275 C1               pop bc
1102+ A276
1103+ A276 E5               push hl                                                   ;? Sube 2º scanline al álbum.
1104+ A277 CD CB 99         call PreviousScan
1105+ A27A E5               push hl                                                   ;? Sube 1er scanline al álbum.
1106+ A27B D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
1107+ A27C
1108+ A27C              Salida
1109+ A27C
1110+ A27C ED 7B 4B 8C      ld sp,(Stack)
1111+ A280
1112+ A280 C9               ret
1113+ A281
1114+ A281              ; --------------------------------------------------------------------------------------
1115+ A281              ;
1116+ A281              ;   12/09/24
1117+ A281              ;
1118+ A281
1119+ A281              Genera_disparo_Amadeus
1120+ A281
1121+ A281              ;*  Exclusiones.
1122+ A281
1123+ A281 3A 64 8C         ld a,(Permiso_de_disparo_Amadeus)
1124+ A284 A7               and a
1125+ A285 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
1126+ A286
1127+ A286 3D               dec a
1128+ A287 32 64 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
1129+ A28A
1130+ A28A              Define_puntero_objeto_disparo
1131+ A28A
1132+ A28A              ;   Inicializamos contador.
1133+ A28A
1134+ A28A 06 00            ld b,0
1135+ A28C
1136+ A28C 2A BE 89         ld hl,(p.imp.amadeus)
1137+ A28F 2C               inc l
1138+ A290
1139+ A290 3E 80            ld a,$80
1140+ A292 BE               cp (hl)
1141+ A293 28 0D            jr z,1F
1142+ A295
1143+ A295 04               inc b
1144+ A296
1145+ A296 3E 60            ld a,$60
1146+ A298 BE               cp (hl)
1147+ A299 28 07            jr z,1F
1148+ A29B
1149+ A29B
1150+ A29B 04               inc b
1151+ A29C
1152+ A29C 3E 18            ld a,$18
1153+ A29E BE               cp (hl)
1154+ A29F 28 01            jr z,1F
1155+ A2A1
1156+ A2A1 04               inc b
1157+ A2A2
1158+ A2A2              ;   Calcula el Puntero_de_impresión del disparo.
1159+ A2A2
1160+ A2A2              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
1161+ A2A2
1162+ A2A2 CD CB 99     1 call PreviousScan
1163+ A2A5
1164+ A2A5 78               ld a,b
1165+ A2A6 CB 3F            srl a
1166+ A2A8 28 03            jr z,4F
1167+ A2AA
1168+ A2AA              ; --- Guarda el puntero_de_impresión del disparo en la pila.
1169+ A2AA E5               push hl
1170+ A2AB 18 02            jr 5F
1171+ A2AD 2D           4 dec l
1172+ A2AE E5               push hl
1173+ A2AF              ; ---
1174+ A2AF
1175+ A2AF              ;   Calcula el Puntero_objeto del disparo.
1176+ A2AF
1177+ A2AF 21 76 83     5 ld hl,Indice_disparo_Amadeus
1178+ A2B2 04               inc b
1179+ A2B3 05               dec b
1180+ A2B4 28 04            jr z,2F
1181+ A2B6
1182+ A2B6              ;   Nos desplazamos por el índice de disparos.
1183+ A2B6
1184+ A2B6 2C           3 inc l
1185+ A2B7 2C               inc l
1186+ A2B8 10 FC            djnz 3B
1187+ A2BA
1188+ A2BA              ; --- Guarda el Puntero_objeto del disparo en la pila.
1189+ A2BA CD FC 90     2 call Extrae_address
1190+ A2BD E5               push hl
1191+ A2BE              ; ---
1192+ A2BE
1193+ A2BE              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
1194+ A2BE              ; HL en el 1er .db de la caja.
1195+ A2BE
1196+ A2BE 21 25 89         ld hl,Disparo_Amad
1197+ A2C1
1198+ A2C1 06 02            ld b,2
1199+ A2C3
1200+ A2C3 D1           6 pop de
1201+ A2C4 73               ld (hl),e
1202+ A2C5 23               inc hl
1203+ A2C6 72               ld (hl),d
1204+ A2C7 23               inc hl
1205+ A2C8
1206+ A2C8 10 F9            djnz 6B
1207+ A2CA
1208+ A2CA C9               ret
1209+ A2CB
1210+ A2CB              Genera_coordenadas_de_disparo_Amadeus
1211+ A2CB
1212+ A2CB              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
1213+ A2CB              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
1214+ A2CB              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
1215+ A2CB
1216+ A2CB CD FC 90         call Extrae_address
1217+ A2CE CD C2 94         call Genera_coordenadas
1218+ A2D1
1219+ A2D1 3D               dec a
1220+ A2D2
1221+ A2D2 21 7D 8C         ld hl,Coordenadas_disparo_certero
1222+ A2D5 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
1223+ A2D6 23               inc hl
1224+ A2D7 3A FD 8B         ld a,(Coordenada_X)
1225+ A2DA 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
1226+ A2DB
1227+ A2DB AF               xor a
1228+ A2DC 3C               inc a                                               ;   Fuerza "NZ" a la salida.
1229+ A2DD
1230+ A2DD C9               ret
1231+ A2DE
1232+ A2DE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1233+ A2DE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1234+ A2DE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1235+ A2DE
1236+ A2DE              ; ----------------------------------------------
1237+ A2DE              ;
1238+ A2DE              ;   27/08/24
1239+ A2DE              ;
1240+ A2DE              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
1241+ A2DE              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
1242+ A2DE
1243+ A2DE              Detecta_impacto_en_disparo_de_Amadeus
1244+ A2DE
1245+ A2DE              Extraccion_de_datos
1246+ A2DE
1247+ A2DE 13               inc de
1248+ A2DF 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentado del disparo para comprobar colisión.
1249+ A2E0
1250+ A2E0 5E               ld e,(hl)
1251+ A2E1 23               inc hl
1252+ A2E2 56               ld d,(hl)
1253+ A2E3
1254+ A2E3 23               inc hl
1255+ A2E4
1256+ A2E4 4E               ld c,(hl)
1257+ A2E5 23               inc hl
1258+ A2E6 46               ld b,(hl)
1259+ A2E7
1260+ A2E7 C5               push bc
1261+ A2E8 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
1262+ A2E9
1263+ A2E9              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
1264+ A2E9
1265+ A2E9 CD CB 99         call PreviousScan
1266+ A2EC CD CB 99         call PreviousScan
1267+ A2EF
1268+ A2EF              Detecta_impacto_
1269+ A2EF
1270+ A2EF 1A               ld a,(de)
1271+ A2F0 A6               and (hl)
1272+ A2F1 C0               ret nz
1273+ A2F2
1274+ A2F2 13               inc de
1275+ A2F3 23               inc hl
1276+ A2F4
1277+ A2F4 1A               ld a,(de)
1278+ A2F5 A6               and (hl)
1279+ A2F6 C9               ret
1280+ A2F7
1281+ A2F7              ; -------------------------------------------------------------------------------------------------------------
1282+ A2F7              ;
1283+ A2F7              ;   8/8/24
1284+ A2F7              ;
1285+ A2F7              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
1286+ A2F7              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
1287+ A2F7              ;   _ tanto, existe riesgo alto de colisión entre ambas.
1288+ A2F7              ;
1289+ A2F7              ;   MODIFICA: HL,DE,BC y A.
1290+ A2F7              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
1291+ A2F7              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
1292+ A2F7
1293+ A2F7              Colision_Entidad_Amadeus
1294+ A2F7
1295+ A2F7              ; Posible contacto de entidad con Amadeus. ?????
1296+ A2F7
1297+ A2F7              ; Exclusiones:
1298+ A2F7
1299+ A2F7 3A 9D 8C         ld a,(Shield)
1300+ A2FA A7               and a
1301+ A2FB C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
1302+ A2FC
1303+ A2FC 21 73 8C         ld hl,Ctrl_3
1304+ A2FF CB 76            bit 6,(hl)
1305+ A301 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
1306+ A302
1307+ A302 21 7A 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
1308+ A305 CB 56            bit 2,(hl)
1309+ A307 C0               ret nz
1310+ A308
1311+ A308 3A FE 8B     	ld a,(Coordenada_y)
1312+ A30B FE 14        	cp $14
1313+ A30D D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
1314+ A30E
1315+ A30E 3A BD 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
1316+ A311 A7               and a
1317+ A312 C0               ret nz
1318+ A313
1319+ A313              Genera_coordenadas_X
1320+ A313
1321+ A313              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
1322+ A313              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
1323+ A313
1324+ A313              ;   Limpiamos almacenes.
1325+ A313
1326+ A313              ;    call Limpia_Coordenadas_X
1327+ A313
1328+ A313              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
1329+ A313
1330+ A313 21 7F 8C         ld hl,Coordenadas_X_Entidad
1331+ A316 3A FD 8B         ld a,(Coordenada_X)
1332+ A319 CD 3B A3         call Guarda_coordenadas_X
1333+ A31C
1334+ A31C              ;   Almacenamos las coordenadas X de Amadeus.
1335+ A31C
1336+ A31C 3A BA 89         ld a,(CX_Amadeus)
1337+ A31F CD 3B A3         call Guarda_coordenadas_X
1338+ A322 CD 4F A3         call Compara_coordenadas_X
1339+ A325 C0               ret nz
1340+ A326
1341+ A326 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
1342+ A328 32 00 8C         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
1343+ A32B
1344+ A32B 2A 3C 8C         ld hl,(Puntero_store_caja)
1345+ A32E 2C               inc l
1346+ A32F 2C               inc l
1347+ A330 2C               inc l
1348+ A331 2C               inc l
1349+ A332 22 7B 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
1350+ A335
1351+ A335 21 7A 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
1352+ A338 CB D6            set 2,(hl)
1353+ A33A
1354+ A33A C9               ret
1355+ A33B
1356+ A33B               ; ----- ----- ----- ----- -----
1357+ A33B
1358+ A33B 77           Guarda_coordenadas_X ld (hl),a
1359+ A33C 3C               inc a
1360+ A33D 2C               inc l
1361+ A33E 77               ld (hl),a
1362+ A33F 3C               inc a
1363+ A340 2C               inc l
1364+ A341 77               ld (hl),a
1365+ A342 2C               inc l
1366+ A343 C9               ret
1367+ A344
1368+ A344 AF           Limpia_Coordenadas_X xor a
1369+ A345 06 06            ld b,6
1370+ A347 21 82 8C         ld hl,Coordenadas_X_Amadeus
1371+ A34A 77           1 ld (hl),a
1372+ A34B 23               inc hl
1373+ A34C 10 FC            djnz 1B
1374+ A34E C9               ret
1375+ A34F
1376+ A34F              ; ----- ----- ----- ----- -----
1377+ A34F
1378+ A34F              Compara_coordenadas_X
1379+ A34F
1380+ A34F DD 21 7F 8C      ld ix,Coordenadas_X_Entidad
1381+ A353 DD 7E 00         ld a,(ix+0)
1382+ A356 CD 64 A3         call Comparando
1383+ A359 C8               ret z
1384+ A35A
1385+ A35A 3C               inc a
1386+ A35B CD 73 A3         call Comparando_1
1387+ A35E C8               ret z
1388+ A35F
1389+ A35F 3C               inc a
1390+ A360 CD 73 A3         call Comparando_1
1391+ A363 C9               ret
1392+ A364
1393+ A364              ; ----- ----- ----- ----- -----
1394+ A364              ;
1395+ A364              ;   4/12/23
1396+ A364              ;
1397+ A364              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1398+ A364
1399+ A364              Comparando
1400+ A364
1401+ A364 DD 2C            inc ixl
1402+ A366 DD 2C            inc ixl
1403+ A368 DD 2C            inc ixl
1404+ A36A
1405+ A36A DD 46 00         ld b,(ix+0)
1406+ A36D DD 4E 01         ld c,(ix+1)
1407+ A370 DD 56 02         ld d,(ix+2)
1408+ A373
1409+ A373 B8           Comparando_1 cp b
1410+ A374 C8               ret z
1411+ A375 B9               cp c
1412+ A376 C8               ret z
1413+ A377 BA               cp d
1414+ A378 C9               ret
1415+ A379
1416+ A379              ; -----------------------------------------------------------------------
1417+ A379              ;
1418+ A379              ;   04/7/24
1419+ A379              ;
1420+ A379
1421+ A379              Detecta_colision_nave_entidad
1422+ A379
1423+ A379              ; Exclusiones:
1424+ A379
1425+ A379              ; Salimos de la rutina si no hay advertencia de posible colisión.
1426+ A379
1427+ A379 21 7A 8C     	ld hl,Impacto2
1428+ A37C CB 56        	bit 2,(hl)
1429+ A37E C8           	ret z
1430+ A37F
1431+ A37F              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1432+ A37F
1433+ A37F 2A C0 89         ld hl,(Pamm_Amadeus)
1434+ A382 CD FC 90         call Extrae_address
1435+ A385 54               ld d,h
1436+ A386 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1437+ A387
1438+ A387 2A BE 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1439+ A38A 06 10            ld b,16                                        ; Contador de scanlines en B.
1440+ A38C FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1441+ A38F
1442+ A38F C5           1 push bc
1443+ A390 06 03            ld b,3
1444+ A392 E5               push hl
1445+ A393
1446+ A393              ; .db
1447+ A393
1448+ A393 1A           3 ld a,(de)
1449+ A394 A7               and a
1450+ A395 20 03            jr nz,4F
1451+ A397
1452+ A397 2C               inc l
1453+ A398 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1454+ A39A
1455+ A39A ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1456+ A39C 28 04            jr z,2F
1457+ A39E
1458+ A39E              ; Impacto.
1459+ A39E FD 2D            dec iyl
1460+ A3A0 28 22            jr z,5F
1461+ A3A2
1462+ A3A2 1C           2 inc e
1463+ A3A3 10 EE            djnz 3B
1464+ A3A5
1465+ A3A5 E1               pop hl
1466+ A3A6
1467+ A3A6              ; Hay salto de línea en el puntero de impresión ???
1468+ A3A6
1469+ A3A6 7C               ld a,h
1470+ A3A7 D6 57            sub $57
1471+ A3A9 20 0A            jr nz,6F
1472+ A3AB
1473+ A3AB              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1474+ A3AB
1475+ A3AB 2A BE 89         ld hl,(p.imp.amadeus)
1476+ A3AE 3E 20            ld a,$20
1477+ A3B0 A7               and a
1478+ A3B1 85               add l
1479+ A3B2 6F               ld l,a
1480+ A3B3 18 01            jr 7F
1481+ A3B5
1482+ A3B5 24           6 inc h
1483+ A3B6
1484+ A3B6 C1           7 pop bc
1485+ A3B7 10 D6            djnz 1B
1486+ A3B9
1487+ A3B9              ;   Fin de la comparativa.
1488+ A3B9
1489+ A3B9              ;   NO HAY COLISIÓN !!!!!.
1490+ A3B9              ;
1491+ A3B9              ;   .db (Impacto) de Amadeus a "0".
1492+ A3B9              ;   RES el bit2 de (Impacto2).
1493+ A3B9              ;
1494+ A3B9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1495+ A3B9              ;   Lo colocamos a "0".
1496+ A3B9
1497+ A3B9 21 7A 8C         ld hl,Impacto2
1498+ A3BC CB 96            res 2,(hl)
1499+ A3BE 2A 7B 8C         ld hl,(Entidad_sospechosa_de_colision)
1500+ A3C1 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1501+ A3C3 C9               ret
1502+ A3C4
1503+ A3C4              ;   COLISIÓN !!!!!.
1504+ A3C4              ;
1505+ A3C4              ;   .db (Impacto) de Amadeus a "1".
1506+ A3C4              ;   SET el bit3 de (Impacto2).
1507+ A3C4              ;
1508+ A3C4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1509+ A3C4
1510+ A3C4 E1           5 pop hl
1511+ A3C5 C1               pop bc
1512+ A3C6
1513+ A3C6 21 BD 89         ld hl,Impacto_Amadeus
1514+ A3C9 36 01            ld (hl),1
1515+ A3CB 21 7A 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1516+ A3CE CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1517+ A3D0
1518+ A3D0 11 C0 87         ld de,Indice_Explosion_entidades
1519+ A3D3 2A 7B 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1520+ A3D6
1521+ A3D6 23               inc hl
1522+ A3D7 23               inc hl
1523+ A3D8 23               inc hl
1524+ A3D9
1525+ A3D9 73               ld (hl),e
1526+ A3DA 23               inc hl
1527+ A3DB 72               ld (hl),d
1528+ A3DC
1529+ A3DC              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1530+ A3DC
1531+ A3DC 11 60 88         ld de,Indice_Explosion_Amadeus
1532+ A3DF 21 C0 89         ld hl,Pamm_Amadeus
1533+ A3E2
1534+ A3E2 73               ld (hl),e
1535+ A3E3 23               inc hl
1536+ A3E4 72               ld (hl),d
1537+ A3E5
1538+ A3E5 C9               ret
1539+ A3E6
1540+ A3E6
1541+ A3E6
# file closed: Disparo.asm
2071  A3E6
2072  A3E6              	SAVESNA "Pruebas.sna", START
2073  A3E6
2074  A3E6
2075  A3E6
2076  A3E6
# file closed: Banco_de_pruebas.asm
