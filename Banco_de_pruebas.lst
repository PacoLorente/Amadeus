# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E1 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A ED 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 0C        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20
  41  AA20              ; Borramos:
  42  AA20
  43  AA20 CD 1B 9B     	call Pinta_Sprites
  44  AA23
  45  AA23              ; Pintamos:
  46  AA23
  47  AA23 2A E3 89     	ld hl,(Album_de_pintado)
  48  AA26 22 EB 89     	ld (Scanlines_album_SP),hl
  49  AA29
  50  AA29 CD 1B 9B     	call Pinta_Sprites
  51  AA2C
  52  AA2C              ;	ld a,6
  53  AA2C              ;	out ($fe),a
  54  AA2C              ;	call Pinta_Amadeus										; Borde amarillo.
  55  AA2C
  56  AA2C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  57  AA2C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  58  AA2C
  59  AA2C              ;	ld a,7
  60  AA2C              ;	out ($fe),a												; Borde blanco.
  61  AA2C              ;	call Guarda_parametros_DRAW
  62  AA2C              ;	call Restore_Amadeus
  63  AA2C
  64  AA2C              ; Posible colisión Entidad-Amadeus ???
  65  AA2C
  66  AA2C              ;	ld a,(Impacto2)
  67  AA2C              ;	bit 2,a
  68  AA2C              ;	jr z,1F
  69  AA2C
  70  AA2C              ;	call Detecta_colision_nave_entidad
  71  AA2C
  72  AA2C              ;1 ld a,4
  73  AA2C              ;	out ($fe),a
  74  AA2C              ;	call Gestiona_Amadeus
  75  AA2C
  76  AA2C              ;	ld a,7
  77  AA2C              ;	out ($fe),a											; Borde blanco.
  78  AA2C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  79  AA2C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  80  AA2C
  81  AA2C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  82  AA2C
  83  AA2C              ;	call Recupera_parametros_DRAW
  84  AA2C
  85  AA2C CD 39 8C     1 call Actualiza_relojes
  86  AA2F
  87  AA2F 21 ED 89     	ld hl,Ctrl_3
  88  AA32 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  89  AA34
  90  AA34 FD E1        	pop iy
  91  AA36 DD E1        	pop ix
  92  AA38 F1           	pop af
  93  AA39 C1           	pop bc
  94  AA3A D1           	pop de
  95  AA3B E1           	pop hl
  96  AA3C D9           	exx
  97  AA3D C1           	pop bc
  98  AA3E D1           	pop de
  99  AA3F E1           	pop hl
 100  AA40 08           	ex af,af'
 101  AA41 F1           	pop af
 102  AA42 08           	ex af,af'
 103  AA43 D9           	exx
 104  AA44
 105  AA44 ED 7B E1 89  	ld sp,(Stack_3)
 106  AA48
 107  AA48 FB           	ei
 108  AA49
 109  AA49 3E 01        	ld a,1												; Borde azul.
 110  AA4B D3 FE        	out ($fe),a
 111  AA4D
 112  AA4D C9           	ret
 113  AA4E
 114  AA4E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 115  AA4E
 116  AA4E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA4E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA4E              ;
   3+ AA4E              ;	17/02/23
   4+ AA4E              ;
   5+ AA4E              ;	Sprites e índices.
   6+ AA4E
   7+ AA4E              	org $8232
   8+ 8232
   9+ 8232              ; Disparo.
  10+ 8232
  11+ 8232 3A 82        Indice_disparo defw Disparo_0
  12+ 8234 40 82        	defw Disparo_f9
  13+ 8236 46 82        	defw Disparo_fb
  14+ 8238 4C 82        	defw Disparo_fd
  15+ 823A
  16+ 823A              ; Disparo (CTRL_DESPLZ)="0".
  17+ 823A 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 823E 01 80
  18+ 8240              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8240 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8244 00 60
  20+ 8246              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8246 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 824A 18 00
  22+ 824C              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 824C 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8250 06 00
  24+ 8252
  25+ 8252              ; ----------------------------------------------------------------------------------------
  26+ 8252
  27+ 8252              ; Badsat_izq. 2x2.
  28+ 8252
  29+ 8252 62 82        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8254 C0 82        	defw Badsat_izq_fe
  31+ 8256 90 82        	defw Badsat_izq_fd
  32+ 8258 60 82        	defw Badsat_izq_fc
  33+ 825A 30 82        	defw Badsat_izq_fb
  34+ 825C 00 82        	defw Badsat_izq_fa
  35+ 825E B2 82        	defw Badsat_izq_f9
  36+ 8260 82 82        	defw Badsat_izq_f8
  37+ 8262
  38+ 8262 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8266 02 2A 02 55
  39+ 826A 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 826E 7F E8 03 60
  40+ 8272 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8276 2B E8 54 40
  41+ 827A AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 827E 28 00 10 00
  42+ 8282
  43+ 8282 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8286 0A 00 01 15
  44+ 828A 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 828E 01 55 00 01
  45+ 8292 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8296 00 01 B0 00
  46+ 829A 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 829E FC 00 15 F4
  47+ 82A2 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 82A6 55 30 00 2A
  48+ 82AA 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 82AE 00 08 00 00
  49+ 82B2
  50+ 82B2 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 82B6 85 00 00 8A
  51+ 82BA 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 82BE 00 AA 80 00
  52+ 82C2 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 82C6 00 00 D8 00
  53+ 82CA 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 82CE FE 00 0A FA
  54+ 82D2 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 82D6 2A 98 00 15
  55+ 82DA 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 82DE 00 04 00 00
  56+ 82E2
  57+ 82E2              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 30 83        	defw Badsat_der_f8
  97+ 82F4 60 83        	defw Badsat_der_f9
  98+ 82F6 90 83        	defw Badsat_der_fa
  99+ 82F8 C0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 105+ 8303 28 40 00     	DEFB    $28,$40,$00
 106+ 8306 54 40 00     	DEFB	$54,$40,$00
 107+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 108+ 830C 55 40 00     	DEFB	$55,$40,$00
 109+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 110+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 111+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 112+ 8318 07 50 00     	DEFB	$07,$50,$00
 113+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 114+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 115+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 116+ 8324 06 55 00     	DEFB	$06,$55,$00
 117+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 118+ 832A 00 14 00     	DEFB	$00,$14,$00
 119+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 120+ 8330
 121+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 121+ 8334 20 00 2A 20
 122+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 122+ 833C 2A A0 00 15
 123+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 123+ 8344 00 03 60 00
 124+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 124+ 834C F4 00 0B EA
 125+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 125+ 8354 03 2A 80 00
 126+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 126+ 835C 00 00 04 00
 127+ 8360
 128+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 128+ 8364 10 00 15 10
 129+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 129+ 836C 15 50 00 0A
 130+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 130+ 8374 80 01 B0 00
 131+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 131+ 837C FA 00 05 F5
 132+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 132+ 8384 01 95 40 00
 133+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 133+ 838C 00 00 02 00
 134+ 8390
 135+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 135+ 8394 08 00 0A 88
 136+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 136+ 839C 0A A8 00 05
 137+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 137+ 83A4 C0 00 D8 00
 138+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 138+ 83AC FD 00 02 FA
 139+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 139+ 83B4 00 CA A0 00
 140+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 140+ 83BC 80 00 01 00
 141+ 83C0
 142+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 142+ 83C4 84 00 05 44
 143+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 143+ 83CC 05 54 00 02
 144+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 144+ 83D4 E0 00 6C 00
 145+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 145+ 83DC FE 80 01 7D
 146+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 146+ 83E4 00 65 50 00
 147+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 147+ 83EC 40 00 00 80
 148+ 83F0
 149+ 83F0              	org $8400
 150+ 8400
 151+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 151+ 8404 42 00 02 A2
 152+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 152+ 840C 02 AA 00 01
 153+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 153+ 8414 F0 00 36 00
 154+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 154+ 841C FF 40 00 BE
 155+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 155+ 8424 00 32 A8 00
 156+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 156+ 842C A0 00 00 40
 157+ 8430
 158+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 158+ 8434 A1 00 01 51
 159+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 159+ 843C 01 55 00 00
 160+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 160+ 8444 F8 00 1B 00
 161+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 161+ 844C FF A0 00 1F
 162+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 162+ 8454 00 09 54 00
 163+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 163+ 845C 50 00 00 20
 164+ 8460
 165+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 165+ 8464 50 80 00 A8
 166+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 166+ 846C 00 AA 80 00
 167+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 167+ 8474 FC 00 0D 80
 168+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 168+ 847C FF D0 00 0F
 169+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 169+ 8484 00 04 AA 00
 170+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 170+ 848C 28 00 00 10
 171+ 8490
 172+ 8490              ; ----------------------------------------------------------------------------------------
 173+ 8490
 174+ 8490              ; Amadeus. 2x2.
 175+ 8490
 176+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 177+ 8492 00 00        	defw 0
 178+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 179+ 8496 00 00        	defw 0
 180+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 181+ 849A 00 00        	defw 0
 182+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 183+ 849E 00 00        	defw 0	 								; (Fín de índice).
 184+ 84A0
 185+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 186+ 84A2 00 00        	defw 0
 187+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 188+ 84A6 00 00        	defw 0
 189+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 190+ 84AA 00 00        	defw 0
 191+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 192+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 193+ 84B0
 194+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 194+ 84B4 26 64 24 24
 195+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 195+ 84BC 6F F6 67 E6
 196+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 196+ 84C4 F7 EF FF FF
 197+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 197+ 84CC 8B D1 71 8E
 198+ 84D0
 199+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 199+ 84D4 F1 00 09 99
 200+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 200+ 84DC 0B 0D 00 1B
 201+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 201+ 84E4 80 19 F9 80
 202+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 202+ 84EC F3 C0 3D FB
 203+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 203+ 84F4 3E F7 C0 3E
 204+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 204+ 84FC 40 1C 63 80
 205+ 8500
 206+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 206+ 8504 3C 40 02 66
 207+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 207+ 850C 02 C3 40 06
 208+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 208+ 8514 60 06 7E 60
 209+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 209+ 851C 3C F0 0F 7E
 210+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 210+ 8524 0F BD F0 0F
 211+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 211+ 852C 10 07 18 E0
 212+ 8530
 213+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 213+ 8534 8F 10 00 99
 214+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 214+ 853C 00 B0 D0 01
 215+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 215+ 8544 D8 01 9F 98
 216+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 216+ 854C CF 3C 03 DF
 217+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 217+ 8554 03 EF 7C 03
 218+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 218+ 855C 44 01 C6 38
 219+ 8560
 220+ 8560              ; ----------------------------------------------------------------------------------------
 221+ 8560
 222+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 223+ 8562 96 85        	defw Explosion_2x3_2
 224+ 8564 C6 85        	defw Explosion_2x3_3
 225+ 8566
 226+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 226+ 856A 10 00 04 38
 227+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 227+ 8572 02 E6 80 01
 228+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 228+ 857A 00 03 DD 80
 229+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 229+ 8582 3B 80 01 9D
 230+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 230+ 858A 02 FD 80 03
 231+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 231+ 8592 00 08 00 00
 232+ 8596
 233+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 233+ 859A 38 10 03 BC
 234+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 234+ 85A2 04 06 C0 00
 235+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 235+ 85AA 00 03 DD 80
 236+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 236+ 85B2 3A 70 01 9C
 237+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 237+ 85BA 04 F8 80 06
 238+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 238+ 85C2 00 00 00 00
 239+ 85C6
 240+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 240+ 85CA 00 20 08 00
 241+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 241+ 85D2 00 06 00 00
 242+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 242+ 85DA 00 00 14 30
 243+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 243+ 85E2 38 00 01 08
 244+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 244+ 85EA 00 80 00 04
 245+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 245+ 85F2 10 08 00 20
 246+ 85F6
 247+ 85F6              ; ------------------------------------------
 248+ 85F6
 249+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 250+ 85F8 20 86        	defw Explosion_2x2_2
 251+ 85FA 40 86        	defw Explosion_2x2_3
 252+ 85FC
 253+ 85FC              	org $8600
 254+ 8600
 255+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 255+ 8604 43 84 37 D8
 256+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 256+ 860C 17 F0 3D D8
 257+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 257+ 8614 19 D0 1F 60
 258+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 258+ 861C 40 00 80 00
 259+ 8620
 260+ 8620
 261+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 261+ 8624 3B C2 60 0C
 262+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 262+ 862C 07 F0 3D D8
 263+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 263+ 8634 19 C6 1F 64
 264+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 264+ 863C 80 00 00 00
 265+ 8640
 266+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 266+ 8644 88 04 10 0C
 267+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 267+ 864C 81 E0 01 43
 268+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 268+ 8654 10 80 18 00
 269+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 269+ 865C 60 01 80 02
 270+ 8660
 271+ 8660
 272+ 8660
 273+ 8660
 274+ 8660
# file closed: Sprites_e_indices.asm
 117  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8715 00 00        	defw 0
 141+ 8717
 142+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8719 40           	db $40												; (Ctrl_0).
 144+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 871E 00 00
 145+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8726 00           	db 0 												; (Columnas).
 149+ 8727 00 00        	defw 0												; (Limite_horizontal).
 150+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 872C
 152+ 872C              ; ---------- ---------- ---------- ---------- ----------
 153+ 872C              ;
 154+ 872C              ;	22/01/24
 155+ 872C              ;
 156+ 872C              ; 	Cada caja tiene 19 bytes !!!
 157+ 872C
 158+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 872F 00           	db %00000000										; (Attr).
 160+ 8730              ;	db 0												; (Cuad_objeto).
 161+ 8730 00           	db 0												; (Impacto).
 162+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 873D 00           	db 0												; (Ctrl_0).
 167+ 873E 00           	db 0												; (Ctrl_2).
 168+ 873F
 169+ 873F              ; ---------- ---------- ---------- ---------- ----------
 170+ 873F
 171+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 8742 00           	db %00000000										; (Attr).
 173+ 8743              ;	db 0												; (Cuad_objeto).
 174+ 8743 00           	db 0												; (Impacto).
 175+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 8750 00           	db 0												; (Ctrl_0).
 180+ 8751 00           	db 0												; (Ctrl_2).
 181+ 8752
 182+ 8752              ; ---------- ---------- ---------- ---------- ----------
 183+ 8752
 184+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8755 00           	db %00000000										; (Attr).
 186+ 8756              ;	db 0												; (Cuad_objeto).
 187+ 8756 00           	db 0												; (Impacto).
 188+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8763 00           	db 0												; (Ctrl_0).
 193+ 8764 00           	db 0												; (Ctrl_2).
 194+ 8765
 195+ 8765              ; ---------- ---------- ---------- ---------- ----------
 196+ 8765
 197+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8768 00           	db %00000000										; (Attr).
 199+ 8769              ;	db 0												; (Cuad_objeto).
 200+ 8769 00           	db 0												; (Impacto).
 201+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 8776 00           	db 0												; (Ctrl_0).
 206+ 8777 00           	db 0												; (Ctrl_2).
 207+ 8778
 208+ 8778              ; ---------- ---------- ---------- ---------- ----------
 209+ 8778
 210+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 877B 00           	db %00000000										; (Attr).
 212+ 877C              ;	db 0												; (Cuad_objeto).
 213+ 877C 00           	db 0												; (Impacto).
 214+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 8789 00           	db 0												; (Ctrl_0).
 219+ 878A 00           	db 0												; (Ctrl_2).
 220+ 878B
 221+ 878B              ; ---------- ---------- ---------- ---------- ----------
 222+ 878B
 223+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 878E 00           	db %00000000										; (Attr).
 225+ 878F              ;	db 0												; (Cuad_objeto).
 226+ 878F 00           	db 0												; (Impacto).
 227+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 879C 00           	db 0												; (Ctrl_0).
 232+ 879D 00           	db 0												; (Ctrl_2).
 233+ 879E
 234+ 879E              ; ---------- ---------- ---------- ---------- ----------
 235+ 879E
 236+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 87A1 00           	db %00000000										; (Attr).
 238+ 87A2              ;	db 0												; (Cuad_objeto).
 239+ 87A2 00           	db 0												; (Impacto).
 240+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 87AF 00           	db 0												; (Ctrl_0).
 245+ 87B0 00           	db 0												; (Ctrl_2).
 246+ 87B1
 247+ 87B1              ; -------------------------------------------------------------------------------------
 248+ 87B1              ;
 249+ 87B1              ;	11/1/24
 250+ 87B1              ;
 251+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 87B1              ;
 253+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 87B1
 258+ 87B1              Indice_de_definiciones_de_entidades
 259+ 87B1
 260+ 87B1 B5 87        	defw Entidad_1
 261+ 87B3 C2 87        	defw Entidad_2
 262+ 87B5
 263+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 87B5
 265+ 87B5              ;	BADSAT, (Satélite malvado).
 266+ 87B5
 267+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87B8 04           	db %00000100										; (Attr).
 269+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87BB 52 82        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 272+ 87BF 01           	db 1												; (Cuad_objeto).
 273+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87C2
 275+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87C5 02           	db %00000010										; (Attr).
 277+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87C8 52 82        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87CC 01           	db 1												; (Cuad_objeto).
 281+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87CF
# file closed: Cajas_y_disparos.asm
 118  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 119  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
# file closed: Niveles.asm
 120  898A
 121  898A              ; ******************************************************************************************************************************************************************************************
 122  898A              ; Constantes.
 123  898A              ; ******************************************************************************************************************************************************************************************
 124  898A              ;
 125  898A              ; 09/03/24
 126  898A
 127  898A              ;
 128  898A              ; Constantes.
 129  898A              ;
 130  898A
 131  898A              Sprite_vacio equ $eae0
 132  898A
 133  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 134  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 135  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 136  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 137  898A
 138  898A              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 139  898A              ;Almacen_de_scanlines_masticados equ $e900
 140  898A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 141  898A              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 142  898A              ;
 143  898A              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 144  898A
 145  898A              ;                                                       ;	35 bytes por entidad.
 146  898A              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 147  898A              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 148  898A              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 149  898A              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 150  898A
 151  898A              Scanlines_album_2 equ $8119    ;    (8119h - 8231h)
 152  898A
 153  898A              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 154  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 155  898A              ;														; 55 Bytes.
 156  898A
 157  898A              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 158  898A
 159  898A              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 160  898A
 161  898A
 162  898A              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 163  898A
 164  898A              ; ******************************************************************************************************************************************************************************************
 165  898A              ; Variables.
 166  898A              ; ******************************************************************************************************************************************************************************************
 167  898A              ;
 168  898A              ; 18/01/24
 169  898A              ;
 170  898A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 171  898A              ;
 172  898A
 173  898A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 174  898A
 175  898A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 176  898B              ;															- Patrón de movimiento.
 177  898B              ;															- Aspecto
 178  898B 00           Filas db 0												; Filas. [DRAW]
 179  898C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 180  898D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 181  898F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 182  8991 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 183  8992 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 184  8993
 185  8993              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 186  8993
 187  8993 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 188  8994              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 189  8994              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 190  8994 00           Attr db 0												; Atributos de la entidad:
 191  8995
 192  8995              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 193  8995              ;
 194  8995              ;	COLORES: 0 ..... NEGRO
 195  8995              ;    		 1 ..... AZUL
 196  8995              ; 			 2 ..... ROJO
 197  8995              ;			 3 ..... MAGENTA
 198  8995              ; 			 4 ..... VERDE
 199  8995              ; 			 5 ..... CIAN
 200  8995              ;			 6 ..... AMARILLO
 201  8995              ; 			 7 ..... BLANCO
 202  8995
 203  8995 00 00        Indice_Sprite_der defw 0
 204  8997 00 00        Indice_Sprite_izq defw 0
 205  8999 00 00        Puntero_DESPLZ_der defw 0
 206  899B 00 00        Puntero_DESPLZ_izq defw 0
 207  899D
 208  899D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 209  899F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 210  89A0
 211  89A0              ; Variables de objeto. (Características).
 212  89A0
 213  89A0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 214  89A1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 215  89A1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 216  89A1 00 00 00...  Variables_de_borrado ds 6
 217  89A7
 218  89A7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 219  89A9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 220  89A9
 221  89A9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 222  89AB
 223  89AB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 224  89AB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 225  89AB
 226  89AB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 227  89AD              ;														; _palabras que componen el "movimiento_masticado".
 228  89AD
 229  89AD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 230  89AD
 231  89AD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 232  89AE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 233  89AE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 234  89AE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 235  89AE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 236  89AE              ;
 237  89AE              ; 														DESCRIPCIÖN:
 238  89AE              ;
 239  89AE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 240  89AE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 241  89AE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 242  89AE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 243  89AE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 244  89AE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 245  89AE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 246  89AE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 247  89AE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 248  89AE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 249  89AE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 250  89AE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 251  89AE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 252  89AE              ;
 253  89AE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 254  89AE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 255  89AE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 256  89AE
 257  89AE              ; Variables de funcionamiento. [DRAW].
 258  89AE
 259  89AE 00           Columnas db 0
 260  89AF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 261  89B1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 262  89B1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 263  89B2
 264  89B2              ; variables de control general.
 265  89B2
 266  89B2 00           Ctrl_2 db 0
 267  89B3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 268  89B3              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 269  89B3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 270  89B3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 271  89B3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 272  89B3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 273  89B3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 274  89B3              ;
 275  89B3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 276  89B3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 277  89B3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 278  89B3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 279  89B3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 280  89B3              ;														BIT 4, ???
 281  89B3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 282  89B3
 283  89B3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  89B4
 285  89B4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 286  89B4
 287  89B4              ;					         		---------;      ;---------
 288  89B4
 289  89B4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 290  89B4
 291  89B4              Perfiles_de_velocidad
 292  89B4
 293  89B4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 294  89B5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 295  89B6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 296  89B7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 297  89B8
 298  89B8              ; Contadores de 16 bits.
 299  89B8
 300  89B8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 301  89BA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 302  89BC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 303  89BE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 304  89C0
 305  89C0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 306  89C0
 307  89C0              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 308  89C0              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 309  89C0              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 310  89C0
 311  89C0              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 312  89C0
 313  89C0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 314  89C2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 315  89C4 00 00        Puntero_indice_mov_bucle defw 0							;
 316  89C6              ;
 317  89C6              ;
 318  89C6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 319  89C7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 320  89C7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 321  89C7 00           Incrementa_puntero_backup db 0
 322  89C8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 323  89C9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 324  89C9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 325  89CA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 326  89CB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 327  89CC              ;
 328  89CC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 329  89CC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 330  89CC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 331  89CC              ;
 332  89CC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 333  89CC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 334  89CC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 335  89CC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 336  89CC              ;
 337  89CC              ;														;	"$ff" ..... Bucle infinito de repetición.
 338  89CC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 339  89CC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 340  89CC              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 341  89CC
 342  89CC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 343  89CD
 344  89CD              ;														DESCRIPCIÓN:
 345  89CD              ;
 346  89CD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 347  89CD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 348  89CD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 349  89CD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 350  89CD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 351  89CD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 352  89CD
 353  89CD              ;														BIT 3, Recarga de nueva oleada.
 354  89CD              ;														BIT 4, Recarga de nueva oleada.
 355  89CD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 356  89CD              ;														BIT 6, **** Frame completo.
 357  89CD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 358  89CD
 359  89CD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 360  89CF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 361  89CF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 362  89CF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 363  89CF
 364  89CF              ; Gestión de ENTIDADES y CAJAS.
 365  89CF
 366  89CF 00 00        Puntero_store_caja defw 0
 367  89D1 00 00        Puntero_restore_caja defw 0
 368  89D3 00 00        Indice_restore_caja defw 0
 369  89D5 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 370  89D6 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 371  89D7 00           Entidades_en_curso db 0									; ..... ..... .....
 372  89D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 373  89D9              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 374  89D9              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 375  89D9              ;														; _ (Numero_de_malotes)="0".
 376  89D9 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 377  89DB 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 378  89DD              ;														; _ puntero (Indice_entidades).
 379  89DD
 380  89DD              ;---------------------------------------------------------------------------------------------------------------
 381  89DD              ;
 382  89DD              ;	11/01/24
 383  89DD              ;
 384  89DD              ;	Álbumes.
 385  89DD
 386  89DD 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 387  89DF              ;														; _variable para almacenar lo posición del puntero_
 388  89DF              ; 														; _de pila, SP.
 389  89DF 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 390  89E1              ;														; La utiliza la rutina [Extrae_foto_registros].
 391  89E1 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 392  89E3
 393  89E3 00 00        Album_de_pintado defw 0
 394  89E5 00 00        Album_de_borrado defw 0
 395  89E7 00 00        Techo_de_pintado defw 0
 396  89E9 00 00        Techo_de_borrado defw 0
 397  89EB
 398  89EB 00 00        Scanlines_album_SP defw 0
 399  89ED
 400  89ED 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 401  89EE              ;
 402  89EE              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 403  89EE              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 404  89EE              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 405  89EE
 406  89EE 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 407  89EF              ;
 408  89EF              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 409  89EF              ;
 410  89EF              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 411  89EF              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 412  89EF              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 413  89EF              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 414  89EF              ;
 415  89EF              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 416  89EF              ;															_ masticados ya generados.
 417  89EF              ;
 418  89EF              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 419  89EF              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 420  89EF              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 421  89EF              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 422  89EF
 423  89EF
 424  89EF              ; Gestión de Disparos.
 425  89EF
 426  89EF              ;;Numero_de_disparotes db 0
 427  89EF              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 428  89EF              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 429  89EF              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 430  89EF              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 431  89EF              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 432  89EF              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 433  89EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 434  89EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 435  89EF              ;														; _produzca colisión.
 436  89EF              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 437  89EF              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 438  89EF              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 439  89EF              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 440  89EF 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 441  89F2              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 442  89F2              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 443  89F2
 444  89F2              ;---------------------------------------------------------------------------------------------------------------
 445  89F2
 446  89F2              ; Relojes y temporizaciones.
 447  89F2
 448  89F2 00           Contador_de_frames db 0
 449  89F3 00           Contador_de_frames_2 db 0
 450  89F4
 451  89F4              ;Clock_explosion db 4
 452  89F4 14           Clock_Entidades_en_curso db 20
 453  89F5 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 454  89F6              ;														; Repite la oleada de entidades.
 455  89F6              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 456  89F6              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 457  89F6              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 458  89F6
 459  89F6              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 460  89F6              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 461  89F6              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 462  89F6
 463  89F6              ;---------------------------------------------------------------------------------------------------------------
 464  89F6
 465  89F6              ; Gestión de NIVELES.
 466  89F6
 467  89F6 00           Nivel db 0												; Nivel actual del juego.
 468  89F7 00 00        Puntero_indice_NIVELES defw 0
 469  89F9 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 470  89FB              ; 														; _ que definen el NIVEL.
 471  89FB              ; Y todo comienza aquí .....
 472  89FB              ;
 473  89FB              ; 	INICIO  *************************************************************************************************************************************************************************
 474  89FB              ;
 475  89FB              ;	5/1/24
 476  89FB
 477  89FB              START
 478  89FB
 479  89FB 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 480  89FE 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 481  8A00 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 482  8A02 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 483  8A04 F3           	DI
 484  8A05
 485  8A05              ;	ld a,%00000111
 486  8A05              ;	call Cls
 487  8A05 CD 25 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 488  8A08
 489  8A08              ; INICIALIZACIÓN.
 490  8A08
 491  8A08              ;	Inicializa 1er Nivel.
 492  8A08
 493  8A08 21 6B 89     	ld hl,Indice_de_niveles
 494  8A0B 22 F7 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 495  8A0E CD 4B 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 496  8A11              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 497  8A11              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 498  8A11              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 499  8A11
 500  8A11              ;	Provisional, (para desarrollo).
 501  8A11              	;-
 502  8A11              ;	ld hl,Numero_parcial_de_entidades
 503  8A11              ;	ld b,(hl)
 504  8A11              ;	inc b
 505  8A11              ;	dec b
 506  8A11              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 507  8A11
 508  8A11 CD 6B 8B     	call Inicia_albumes_de_lineas
 509  8A14
 510  8A14 CD 90 8C     4 call Inicia_Entidades
 511  8A17
 512  8A17 CD 7B 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 513  8A1A              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 514  8A1A              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 515  8A1A              ; (Esto se dá cuando se inicia una nueva oleada).
 516  8A1A
 517  8A1A              ;	ld a,(Ctrl_1)
 518  8A1A              ;	bit 3,a
 519  8A1A              ;	jr nz,5F											 ; Loop
 520  8A1A
 521  8A1A              ; 	INICIA AMADEUS !!!!!
 522  8A1A
 523  8A1A              ;3 call Restore_Amadeus
 524  8A1A              ;	call Inicia_Puntero_objeto
 525  8A1A              ;	call Draw
 526  8A1A
 527  8A1A              ;	call Guarda_movimiento_masticado	;! Provisional
 528  8A1A
 529  8A1A              ;	call Genera_datos_de_impresion
 530  8A1A              ;	call Guarda_datos_de_borrado_Amadeus
 531  8A1A
 532  8A1A              ;	ld de,Amadeus_db
 533  8A1A              ;	call Store_Amadeus
 534  8A1A
 535  8A1A              ; 	INICIA DISPAROS !!!!!
 536  8A1A
 537  8A1A              ;	call Inicia_Puntero_Disparo_Entidades
 538  8A1A              ;	call Inicia_Puntero_Disparo_Amadeus
 539  8A1A
 540  8A1A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 541  8A1A
 542  8A1A              ;5 call Inicia_punteros_de_cajas
 543  8A1A              ;	call Restore_entidad
 544  8A1A
 545  8A1A              ;	ld a,(Ctrl_1)
 546  8A1A              ;	bit 3,a
 547  8A1A              ;	jr z,6F
 548  8A1A
 549  8A1A              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 550  8A1A
 551  8A1A              ;	ld hl,Ctrl_1
 552  8A1A              ;	res 3,(hl)
 553  8A1A              ;	jr Main
 554  8A1A
 555  8A1A              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 556  8A1A
 557  8A1A              6
 558  8A1A
 559  8A1A              ;	call Calcula_numero_de_malotes
 560  8A1A
 561  8A1A              ; Damos por concluida la construcción del FRAME.
 562  8A1A              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 563  8A1A
 564  8A1A 2A EB 89     	ld hl,(Scanlines_album_SP)
 565  8A1D 22 E7 89     	ld (Techo_de_pintado),hl
 566  8A20
 567  8A20 2A E5 89     	ld hl,(Album_de_borrado)
 568  8A23 22 EB 89     	ld (Scanlines_album_SP),hl
 569  8A26
 570  8A26 21 ED 89     	ld hl,Ctrl_3
 571  8A29 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 572  8A2B
 573  8A2B FB           	ei
 574  8A2C 76           	halt
 575  8A2D
 576  8A2D              ; ------------------------------------
 577  8A2D
 578  8A2D              Main
 579  8A2D              ;
 580  8A2D              ;	11/12/23
 581  8A2D
 582  8A2D              ; Aparece nueva entidad ???
 583  8A2D
 584  8A2D              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 585  8A2D              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 586  8A2D              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 587  8A2D              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 588  8A2D              ;														; _un 2º bloque.
 589  8A2D
 590  8A2D              ;	call Genera_scanlines_masticados_a_borrar
 591  8A2D              ;	call Limpia_Almacen_de_scanlines_masticados
 592  8A2D
 593  8A2D              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 594  8A2D              ; 													 	; _(Scanlines_album_SP).
 595  8A2D
 596  8A2D CD A4 8A     	call Change
 597  8A30
 598  8A30 3A F4 89     	ld a,(Clock_Entidades_en_curso)
 599  8A33 47           	ld b,a
 600  8A34 3A F2 89     	ld a,(Contador_de_frames)
 601  8A37 B8           	cp b
 602  8A38 20 1E        	jr nz,13F
 603  8A3A
 604  8A3A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 605  8A3A              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 606  8A3A
 607  8A3A 3A D6 89     21 ld a,(Numero_parcial_de_entidades)
 608  8A3D 47           	ld b,a
 609  8A3E 3A D7 89     	ld a,(Entidades_en_curso)
 610  8A41 B8           	cp b
 611  8A42 28 14        	jr z,13F
 612  8A44 30 12        	jr nc,13F
 613  8A46
 614  8A46 3C           	inc a
 615  8A47 32 D7 89     	ld (Entidades_en_curso),a
 616  8A4A
 617  8A4A FE 02        	cp 2
 618  8A4C F3           	di
 619  8A4D 28 FE        	jr z,$
 620  8A4F FB           	ei
 621  8A50
 622  8A50              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 623  8A50
 624  8A50 3A F4 89     	ld a,(Clock_Entidades_en_curso)
 625  8A53              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 626  8A53              ;! _ IMPREDECIBLE !!!!
 627  8A53 C6 64        	add 100
 628  8A55 32 F4 89     	ld (Clock_Entidades_en_curso),a
 629  8A58
 630  8A58              ; -------------------------------------------------------------------------------------------------------------
 631  8A58
 632  8A58              ; Habilita disparos.
 633  8A58
 634  8A58              13
 635  8A58
 636  8A58              ;	ld hl,Disparo_Amadeus
 637  8A58              ;	ld de,CLOCK_repone_disparo_Amadeus
 638  8A58              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 639  8A58
 640  8A58              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 641  8A58              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 642  8A58              ;	call Habilita_disparos
 643  8A58
 644  8A58              ; COLISIONES.
 645  8A58
 646  8A58              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 647  8A58
 648  8A58              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 649  8A58              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 650  8A58              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 651  8A58
 652  8A58              ;	xor a
 653  8A58              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 654  8A58
 655  8A58              ;	call Inicia_punteros_de_cajas
 656  8A58              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 657  8A58              ; 														; _ en DRAW.
 658  8A58
 659  8A58              ;	ld a,(Filas)
 660  8A58              ;	and a
 661  8A58              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 662  8A58              ;	call Incrementa_punteros_de_cajas
 663  8A58              ;	jr 12B
 664  8A58
 665  8A58              ; ---------------------------------------------------------------------------------------
 666  8A58
 667  8A58 3A D6 89     10 ld a,(Numero_parcial_de_entidades)
 668  8A5B 47               ld b,a
 669  8A5C A7           	and a
 670  8A5D 20 00        	jr nz,11F
 671  8A5F
 672  8A5F              ;	ld hl,Ctrl_1;
 673  8A5F              ;	bit 4,(hl)
 674  8A5F              ;	jp nz,16F
 675  8A5F
 676  8A5F              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 677  8A5F
 678  8A5F              ;	ld hl,Ctrl_1
 679  8A5F              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 680  8A5F
 681  8A5F              ;	ld a,(Contador_de_frames)
 682  8A5F              ;	inc a
 683  8A5F              ;	ld (Activa_recarga_cajas),a
 684  8A5F
 685  8A5F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 686  8A5F
 687  8A5F 3A D7 89     11 ld a,(Entidades_en_curso)
 688  8A62 A7           	and a
 689  8A63 28 21        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 690  8A65 47           	ld b,a												; No hay entidades que gestionar.
 691  8A66
 692  8A66              ; ( Código que ejecutamos con cada entidad: ).
 693  8A66
 694  8A66              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 695  8A66
 696  8A66 C5           15 push bc 												; Nº de entidades en curso.
 697  8A67
 698  8A67 F3           	di
 699  8A68 18 FE        	jr $
 700  8A6A FB           	ei
 701  8A6B
 702  8A6B CD E4 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 703  8A6E
 704  8A6E 3A ED 89     	ld a,(Ctrl_3)
 705  8A71 CB 57        	bit 2,a
 706  8A73 F3           	di
 707  8A74 20 FE        	jr nz,$
 708  8A76 FB           	ei
 709  8A77
 710  8A77              ; Existe "Entidad_guía" ???.
 711  8A77              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 712  8A77
 713  8A77              ;	ld a,(Ctrl_3)
 714  8A77              ;	bit 1,a
 715  8A77              ;	jr nz,22F
 716  8A77
 717  8A77              ; Almacén de "Movimientos_masticados" lleno ???
 718  8A77              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 719  8A77              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 720  8A77
 721  8A77              ;;	ld a,(Ctrl_3)
 722  8A77              ;;	bit 3,a
 723  8A77              ;;	jr nz,22F
 724  8A77
 725  8A77              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 726  8A77
 727  8A77              ;	ld hl,Ctrl_2
 728  8A77              ;	set 5,(hl)
 729  8A77              ;	ld hl,Ctrl_3
 730  8A77              ;	set 1,(hl)
 731  8A77
 732  8A77              ; Impacto ???
 733  8A77
 734  8A77              ;22 ld a,(Impacto)
 735  8A77              ;	and a
 736  8A77              ;	jr z,8F
 737  8A77
 738  8A77              ; Hay Impacto en esta entidad.
 739  8A77
 740  8A77              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 741  8A77              ;	dec (hl)
 742  8A77              ;	jp nz,17F
 743  8A77
 744  8A77              ;! Velocidad de la animación de la explosión.
 745  8A77
 746  8A77              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 747  8A77              ;														; _,(velocidad de la explosión).
 748  8A77              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 749  8A77
 750  8A77              ;	call Repone_datos_de_borrado
 751  8A77              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 752  8A77
 753  8A77              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 754  8A77
 755  8A77              ;	ld a,(Ctrl_2)
 756  8A77              ;	bit 1,a
 757  8A77              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 758  8A77
 759  8A77              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 760  8A77
 761  8A77              ;	ld a,(CTRL_DESPLZ)
 762  8A77              ;	and a
 763  8A77              ;	jr nz,18F
 764  8A77
 765  8A77              ;	ld hl,Indice_Explosion_2x2-2
 766  8A77              ;	ld (Puntero_DESPLZ_der),hl
 767  8A77              ;	jr 19F
 768  8A77
 769  8A77              ;18 ld hl,Indice_Explosion_2x3-2
 770  8A77              ;	ld (Puntero_DESPLZ_der),hl
 771  8A77
 772  8A77              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 773  8A77              ;	set 1,(hl)
 774  8A77              ;	jr 7F
 775  8A77
 776  8A77              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 777  8A77              ; _con las coordenadas de la entidad almacenada en DRAW.
 778  8A77
 779  8A77              ;8 ld a,(Ctrl_1)
 780  8A77              ;	bit 2,a
 781  8A77              ;	jr z,7F
 782  8A77
 783  8A77              ;	ld hl,(Coordenadas_disparo_certero)
 784  8A77              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 785  8A77              ;														; E contiene la coordenada_X del disparo.
 786  8A77              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 787  8A77              ;														; H FILA, (Coordenada_y de la entidad).
 788  8A77              ;	and a
 789  8A77              ;	sbc hl,de
 790  8A77
 791  8A77              ;	call Determina_resultado_comparativa
 792  8A77
 793  8A77              ;	ld a,b
 794  8A77              ;	and a
 795  8A77              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 796  8A77
 797  8A77              ; ----- ----- -----
 798  8A77
 799  8A77              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 800  8A77              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 801  8A77
 802  8A77              ;	ld hl,Ctrl_1
 803  8A77              ;	res 2,(hl)
 804  8A77
 805  8A77 CD A3 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 806  8A7A
 807  8A7A              ;	ld a,(Ctrl_0)
 808  8A7A              ;	bit 4,a
 809  8A7A              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 810  8A7A
 811  8A7A              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 812  8A7A              ; [[[
 813  8A7A              ;	call Detecta_disparo_entidad
 814  8A7A              ; ]]]
 815  8A7A
 816  8A7A CD FA 8C     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 817  8A7D
 818  8A7D              ;	ld hl,Ctrl_0
 819  8A7D              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 820  8A7D
 821  8A7D CD EA 8C     17 call Store_Restore_cajas
 822  8A80
 823  8A80 C1           	pop bc
 824  8A81
 825  8A81 10 E3        	djnz 15B
 826  8A83
 827  8A83 CD 7B 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 828  8A86
 829  8A86              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 830  8A86              ; Hemos gestionado todas las unidades.
 831  8A86              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 832  8A86
 833  8A86              ;	ld hl,Ctrl_1
 834  8A86              ;	res 2,(hl)
 835  8A86
 836  8A86
 837  8A86              16
 838  8A86
 839  8A86 F3           	di
 840  8A87 18 FE        	jr $
 841  8A89 FB           	ei
 842  8A8A
 843  8A8A 2A EB 89     	ld hl,(Scanlines_album_SP)
 844  8A8D 22 E7 89     	ld (Techo_de_pintado),hl
 845  8A90
 846  8A90 2A E5 89     	ld hl,(Album_de_borrado)
 847  8A93 22 EB 89     	ld (Scanlines_album_SP),hl
 848  8A96
 849  8A96 21 ED 89     	ld hl,Ctrl_3
 850  8A99 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 851  8A9B
 852  8A9B AF           	xor a
 853  8A9C D3 FE        	out ($fe),a
 854  8A9E 76           	halt
 855  8A9F
 856  8A9F              ; ----------------------------------------
 857  8A9F
 858  8A9F              ;	ld a,(Ctrl_1) 										; Existe Loop?
 859  8A9F              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 860  8A9F CA 2D 8A     	jp z,Main
 861  8AA2
 862  8AA2              ; RECARGA DE NUEVA OLEADA.
 863  8AA2
 864  8AA2              ;	ld a,(Contador_de_frames)
 865  8AA2              ;	ld b,a
 866  8AA2              ;	ld a,(Activa_recarga_cajas)
 867  8AA2              ;	cp b
 868  8AA2              ;	jr z,20F
 869  8AA2
 870  8AA2              ;	ld hl,Ctrl_1
 871  8AA2              ;	set 4,(hl)
 872  8AA2              ;	jp Main
 873  8AA2
 874  8AA2              ;20 ld hl,Ctrl_1
 875  8AA2              ;	res 4,(hl)
 876  8AA2
 877  8AA2              ;	ld a,(Contador_de_frames)
 878  8AA2
 879  8AA2              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 880  8AA2              ;! _ IMPREDECIBLE !!!!
 881  8AA2
 882  8AA2              ;	add 10
 883  8AA2              ;	ld (Clock_Entidades_en_curso),a
 884  8AA2
 885  8AA2              ;	jp 4B
 886  8AA2
 887  8AA2 C9           	ret
 888  8AA3
 889  8AA3              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 890  8AA3              ;
 891  8AA3              ;	16/11/23
 892  8AA3
 893  8AA3              ;;Gestiona_Amadeus
 894  8AA3
 895  8AA3              ;! Activa/desactiva impacto con Amadeus.
 896  8AA3
 897  8AA3              ;	ld a,(Impacto)
 898  8AA3              ;	and a
 899  8AA3              ;	jr nz,2F
 900  8AA3
 901  8AA3              ;;	call Mov_Amadeus
 902  8AA3
 903  8AA3              ;;2 ld a,(Ctrl_0)
 904  8AA3              ;;	bit 4,a
 905  8AA3              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 906  8AA3
 907  8AA3              ;;	call Guarda_foto_entidad_a_pintar
 908  8AA3              ;;	call Guarda_datos_de_borrado_Amadeus
 909  8AA3
 910  8AA3              ;;1 ld hl,Ctrl_0
 911  8AA3              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 912  8AA3
 913  8AA3              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 914  8AA3
 915  8AA3              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 916  8AA3
 917  8AA3              ;	call Calcula_numero_de_disparotes
 918  8AA3
 919  8AA3              ;;	ret
 920  8AA3
 921  8AA3              ; -----------------------------
 922  8AA3              ;
 923  8AA3              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 924  8AA3              ;
 925  8AA3              ;	INPUTS: B a de estar a "0".
 926  8AA3
 927  8AA3              ;Prepara_Borra_sprites
 928  8AA3
 929  8AA3              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 930  8AA3              ;	ld a,l
 931  8AA3              ;	ret z
 932  8AA3
 933  8AA3              ;	srl a
 934  8AA3
 935  8AA3              ;2 sub 16
 936  8AA3              ;	jr z,1F
 937  8AA3              ;	inc b
 938  8AA3              ;	jr 2B
 939  8AA3
 940  8AA3              ;1 inc b
 941  8AA3
 942  8AA3              ;	exx
 943  8AA3              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 944  8AA3              ;	exx
 945  8AA3
 946  8AA3              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 947  8AA3              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 948  8AA3
 949  8AA3              ;	ret
 950  8AA3
 951  8AA3              ; --------------------------------------------------------------------------------------------------------------
 952  8AA3              ;
 953  8AA3              ;	15/12/23
 954  8AA3
 955  8AA3              Mov_obj
 956  8AA3
 957  8AA3              ;	ld a,(Ctrl_2)
 958  8AA3              ;	bit 1,a
 959  8AA3              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 960  8AA3
 961  8AA3              ; Explosión:
 962  8AA3
 963  8AA3              ;	ld a,(Frames_explosion)
 964  8AA3              ;	and a
 965  8AA3              ;	jr nz,4F
 966  8AA3
 967  8AA3              ;!  Una alimaña menos!!!!!!!!!1
 968  8AA3
 969  8AA3              ; Se trataba de una Entidad_guía ???
 970  8AA3
 971  8AA3              ;	ld a,(Ctrl_2)
 972  8AA3              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 973  8AA3              ;	jr z,5F
 974  8AA3
 975  8AA3              ;	ld hl,Ctrl_3
 976  8AA3              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 977  8AA3
 978  8AA3              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 979  8AA3              ;!! _generado puede ser distinto, (aletoriedad).
 980  8AA3
 981  8AA3              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 982  8AA3              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 983  8AA3              ;	dec (hl)
 984  8AA3              ;	ld hl,Entidades_en_curso
 985  8AA3              ;	dec (hl)
 986  8AA3              ;	ld hl,Numero_de_entidades
 987  8AA3              ;	dec (hl)
 988  8AA3              ;	jr 3F
 989  8AA3
 990  8AA3              ; -----
 991  8AA3
 992  8AA3              ;	`Movemos´ la explosión.
 993  8AA3
 994  8AA3              ;4 ld hl,(Puntero_DESPLZ_der)
 995  8AA3              ;	inc hl
 996  8AA3              ;	inc hl
 997  8AA3              ;	call Extrae_address
 998  8AA3              ;;	ld (Puntero_objeto),hl
 999  8AA3
1000  8AA3              ;;	ld hl,Frames_explosion
1001  8AA3              ;;	dec (hl)
1002  8AA3
1003  8AA3              ;;	ld hl,Ctrl_0
1004  8AA3              ;;	set 4,(hl);;
1005  8AA3
1006  8AA3              ;;	jr 3F
1007  8AA3
1008  8AA3              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1009  8AA3
1010  8AA3              ;2 xor a
1011  8AA3              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1012  8AA3
1013  8AA3              ; Movemos Entidades malignas.
1014  8AA3              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1015  8AA3
1016  8AA3              ;	ld a,(Ctrl_2)
1017  8AA3              ;	bit 5,a
1018  8AA3              ;	jr nz,8F
1019  8AA3
1020  8AA3              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1021  8AA3              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1022  8AA3              ;	jr 7F
1023  8AA3
1024  8AA3              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1025  8AA3
1026  8AA3              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1027  8AA3              ;	bit 4,a
1028  8AA3              ;	ret z
1029  8AA3
1030  8AA3              ; Ha habido desplazamiento de la entidad maligna.
1031  8AA3              ; Ha llegado a zona de AMADEUS ???
1032  8AA3
1033  8AA3              ;7 ld a,(Coordenada_y)
1034  8AA3              ;	cp $14
1035  8AA3              ;	jr c,1F
1036  8AA3
1037  8AA3              ; ---------
1038  8AA3
1039  8AA3              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1040  8AA3              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1041  8AA3
1042  8AA3              ;	di
1043  8AA3              ;	call Genera_coordenadas_X
1044  8AA3              ;	call Compara_coordenadas_X
1045  8AA3              ;	ei
1046  8AA3
1047  8AA3              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1048  8AA3
1049  8AA3              ; ---------
1050  8AA3
1051  8AA3              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1052  8AA3              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1053  8AA3              ;	call Limpia_Variables_de_borrado
1054  8AA3
1055  8AA3 C9           3 ret
1056  8AA4
1057  8AA4              ; --------------------------------------------------------------------------------------------------------------
1058  8AA4              ;
1059  8AA4              ;	29/1/23
1060  8AA4
1061  8AA4              ;Mov_Amadeus
1062  8AA4
1063  8AA4              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1064  8AA4
1065  8AA4              ;	call Mov_right
1066  8AA4
1067  8AA4              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1068  8AA4              ;	bit 4,a
1069  8AA4              ;	ret z
1070  8AA4
1071  8AA4              ; ---------
1072  8AA4
1073  8AA4              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1074  8AA4              ;	call Repone_datos_de_borrado_Amadeus
1075  8AA4              ;	call Limpia_Variables_de_borrado
1076  8AA4
1077  8AA4              ;	ret
1078  8AA4
1079  8AA4              ; --------------------------------------------------------------------------------------------------------------
1080  8AA4              ;
1081  8AA4              ;	17/3/24
1082  8AA4
1083  8AA4 2A E3 89     Change ld hl,(Album_de_pintado)
1084  8AA7 ED 5B E5 89  	ld de,(Album_de_borrado)
1085  8AAB EB           	ex de,hl
1086  8AAC 22 E3 89     	ld (Album_de_pintado),hl
1087  8AAF 22 EB 89     	ld (Scanlines_album_SP),hl
1088  8AB2 ED 53 E5 89  	ld (Album_de_borrado),de
1089  8AB6
1090  8AB6 2A E7 89     	ld hl,(Techo_de_pintado)
1091  8AB9 ED 5B E9 89  	ld de,(Techo_de_borrado)
1092  8ABD
1093  8ABD 7D           	ld a,l
1094  8ABE 93           	sub e
1095  8ABF 47           	ld b,a
1096  8AC0 2D           	dec l
1097  8AC1
1098  8AC1 AF           1 xor a
1099  8AC2 77           	ld (hl),a
1100  8AC3 2D           	dec l
1101  8AC4 10 FB        	djnz 1B
1102  8AC6
1103  8AC6 2C           	inc l
1104  8AC7
1105  8AC7 22 E9 89     	ld (Techo_de_borrado),hl
1106  8ACA
1107  8ACA C9           	ret
1108  8ACB
1109  8ACB              ; -----------------------------------------------------------------------------------
1110  8ACB              ;
1111  8ACB              ;	20/01/24
1112  8ACB              ;
1113  8ACB              ;
1114  8ACB
1115  8ACB              Construye_movimientos_masticados_entidad
1116  8ACB
1117  8ACB 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1118  8ACE E5           	push hl
1119  8ACF CD 0F 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1120  8AD2              ;															; _ el (Contador_de_mov_masticados).
1121  8AD2 CD AF 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1122  8AD5              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1123  8AD5              ;	call Recompone_posicion_inicio
1124  8AD5
1125  8AD5 CD 41 8E     1 call Draw
1126  8AD8 CD F4 8A     	call Guarda_movimiento_masticado
1127  8ADB
1128  8ADB CD 27 98     	call Movimiento
1129  8ADE
1130  8ADE 3A ED 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1131  8AE1 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1132  8AE3 28 F0        	jr z,1B
1133  8AE5
1134  8AE5              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1135  8AE5              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1136  8AE5
1137  8AE5 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1138  8AE6 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1139  8AE9
1140  8AE9              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1141  8AE9
1142  8AE9 CD 8B 99     	call Situa_en_contador_general_de_mov_masticados
1143  8AEC
1144  8AEC              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1145  8AEC              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1146  8AEC
1147  8AEC ED 4B AB 89  	ld bc,(Contador_de_mov_masticados)
1148  8AF0 71           	ld (hl),c
1149  8AF1 23           	inc hl
1150  8AF2 70           	ld (hl),b
1151  8AF3
1152  8AF3 C9           	ret
1153  8AF4
1154  8AF4              ; -----------------------------------------------------------------------------------
1155  8AF4              ;
1156  8AF4              ;	28/12/23
1157  8AF4              ;
1158  8AF4              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1159  8AF4              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1160  8AF4
1161  8AF4              Guarda_movimiento_masticado
1162  8AF4
1163  8AF4 ED 73 DD 89  	ld (Stack),sp
1164  8AF8 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1165  8AFC
1166  8AFC              ;	push hl
1167  8AFC DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1168  8AFE FD E5            push iy 												; Pushea Puntero_objeto.
1169  8B00
1170  8B00 ED 7B DD 89      ld sp,(Stack)
1171  8B04
1172  8B04 2A AB 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1173  8B07 23           	inc hl
1174  8B08 22 AB 89     	ld (Contador_de_mov_masticados),hl
1175  8B0B
1176  8B0B CD 0F 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1177  8B0E              ;															; _ el (Contador_de_mov_masticados).
1178  8B0E C9               ret
1179  8B0F
1180  8B0F              ; --------------------------------------------------------------------------------------------------------------
1181  8B0F              ;
1182  8B0F              ;	12/1/24
1183  8B0F              ;
1184  8B0F              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1185  8B0F
1186  8B0F              Actualiza_Puntero_de_almacen_de_mov_masticados
1187  8B0F
1188  8B0F 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1189  8B12 01 04 00     	ld bc,4
1190  8B15 A7           	and a
1191  8B16 ED 4A        	adc hl,bc
1192  8B18 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1193  8B1B C9           	ret
1194  8B1C
1195  8B1C              ; --------------------------------------------------------------------------------------------------------------
1196  8B1C              ;
1197  8B1C              ;	09/03/24
1198  8B1C              ;
1199  8B1C              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1200  8B1C              ;
1201  8B1C              ;	IX contiene el puntero de impresión.
1202  8B1C              ;	DE contiene (Puntero_objeto).
1203  8B1C
1204  8B1C
1205  8B1C ED 73 DD 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1206  8B20 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1207  8B24
1208  8B24 D1           	pop de 															; DE contiene Puntero_objeto
1209  8B25 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1210  8B27
1211  8B27 ED 73 A9 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1212  8B2B
1213  8B2B ED 7B DD 89  	ld sp,(Stack)
1214  8B2F
1215  8B2F C9           	ret
1216  8B30
1217  8B30              ; --------------------------------------------------------------------------------------------------------------
1218  8B30              ;
1219  8B30              ;	28/12/23
1220  8B30              ;
1221  8B30              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1222  8B30              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1223  8B30
1224  8B30              Guarda_foto_entidad_a_pintar
1225  8B30
1226  8B30 3A AD 89     	ld a,(Ctrl_0)
1227  8B33 CB 77        	bit 6,a
1228  8B35 28 04        	jr z,5F
1229  8B37
1230  8B37              ;	Guarda la foto de Amadeus.
1231  8B37
1232  8B37              ;	call Draw
1233  8B37              ;	call Guarda_movimiento_masticado	;! Provisional
1234  8B37 CD 12 9A     	call Genera_datos_de_impresion
1235  8B3A C9           	ret
1236  8B3B
1237  8B3B              ; ENTIDADES!
1238  8B3B              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1239  8B3B
1240  8B3B 3A ED 89     5 ld a,(Ctrl_3)
1241  8B3E CB 5F        	bit 3,a
1242  8B40 28 01        	jr z,1F
1243  8B42
1244  8B42              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1245  8B42
1246  8B42              4
1247  8B42              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1248  8B42 C9           	ret
1249  8B43
1250  8B43              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1251  8B43
1252  8B43 3A ED 89     1 ld a,(Ctrl_3)
1253  8B46 CB 57        	bit 2,a
1254  8B48 20 10        	jr nz,6F
1255  8B4A
1256  8B4A              ; Entidad guía o fantasma ???
1257  8B4A
1258  8B4A 3A B2 89     	ld a,(Ctrl_2)
1259  8B4D CB 6F        	bit 5,a
1260  8B4F 20 10        	jr nz,3F
1261  8B51
1262  8B51              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1263  8B51
1264  8B51 18 EF        	jr 4B
1265  8B53
1266  8B53              ; ENTIDAD_GUÍA:
1267  8B53              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1268  8B53              ; _guardando "movimientos_masticados".
1269  8B53
1270  8B53 3A ED 89     2 ld a,(Ctrl_3)
1271  8B56 CB 57        	bit 2,a
1272  8B58 28 07        	jr z,3F
1273  8B5A
1274  8B5A              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1275  8B5A              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1276  8B5A
1277  8B5A CB 97        6 res 2,a
1278  8B5C CB DF        	set 3,a
1279  8B5E 32 ED 89     	ld (Ctrl_3),a
1280  8B61
1281  8B61
1282  8B61              ;	Esto sólo lo ejecuta una entidad guía.
1283  8B61
1284  8B61 CD 41 8E     3 	call Draw
1285  8B64 CD F4 8A     	call Guarda_movimiento_masticado
1286  8B67 CD 12 9A     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1287  8B6A
1288  8B6A              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1289  8B6A              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1290  8B6A
1291  8B6A              ;	call Convierte_guia_en_fantasma
1292  8B6A C9           	ret
1293  8B6B
1294  8B6B              ; ---------------------------------------------------------------------------------------------------------------------
1295  8B6B              ;
1296  8B6B              ;	13/03/24
1297  8B6B              ;
1298  8B6B
1299  8B6B              Inicia_albumes_de_lineas
1300  8B6B
1301  8B6B 21 00 80     	ld hl,Scanlines_album
1302  8B6E 22 E3 89     	ld (Album_de_pintado),hl
1303  8B71 22 EB 89     	ld (Scanlines_album_SP),hl
1304  8B74
1305  8B74 21 19 81     	ld hl,Scanlines_album_2
1306  8B77 22 E5 89     	ld (Album_de_borrado),hl
1307  8B7A C9           	ret
1308  8B7B
1309  8B7B              ; ---------------------------------------------------------------------------------------------------------------------
1310  8B7B              ;
1311  8B7B              ; 8/1/23
1312  8B7B              ;
1313  8B7B              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1314  8B7B              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1315  8B7B              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1316  8B7B
1317  8B7B              ; Destruye HL y DE !!!!!
1318  8B7B
1319  8B7B              Inicia_punteros_de_cajas
1320  8B7B
1321  8B7B 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1322  8B7E CD A9 8B         call Extrae_address
1323  8B81 22 CF 89         ld (Puntero_store_caja),hl
1324  8B84 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1325  8B87 22 D3 89     	ld (Indice_restore_caja),hl
1326  8B8A CD A9 8B     	call Extrae_address
1327  8B8D 22 D1 89     	ld (Puntero_restore_caja),hl
1328  8B90 C9               ret
1329  8B91
1330  8B91              ; *************************************************************************************************************************************************************
1331  8B91              ;
1332  8B91              ; 8/1/23
1333  8B91              ;
1334  8B91              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1335  8B91
1336  8B91              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1337  8B91              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1338  8B91              ;	ret
1339  8B91              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1340  8B91              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1341  8B91              ;	ret
1342  8B91
1343  8B91              ; -------------------------------------------------------------------------------------------------------------
1344  8B91              ;
1345  8B91              ; 21/9/23
1346  8B91              ;
1347  8B91
1348  8B91              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1349  8B91
1350  8B91              ;;Limpia_album_Amadeus
1351  8B91              ;
1352  8B91              ;;	ld hl,Scanlines_album_Amadeus
1353  8B91              ;;	ld a,(hl)
1354  8B91              ;;	and a
1355  8B91              ;;	ret z
1356  8B91
1357  8B91              ;;	ld hl,Scanlines_album_Amadeus;
1358  8B91              ;;	ld de,Scanlines_album_Amadeus+1
1359  8B91              ;;	ld bc,11
1360  8B91              ;;	xor a
1361  8B91              ;;	ld (hl),a
1362  8B91              ;;	ldir
1363  8B91
1364  8B91              ;;	ld hl,Scanlines_album_Amadeus
1365  8B91              ;;	ld (End_Snapshot_Amadeus),hl
1366  8B91
1367  8B91              ;;	ret
1368  8B91
1369  8B91              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1370  8B91              ;	ld de,Variables_de_borrado+1
1371  8B91              ;	ld bc,5
1372  8B91              ;	xor a
1373  8B91              ;	ld (hl),a
1374  8B91              ;	ldir
1375  8B91              ;	ret
1376  8B91
1377  8B91              ; -------------------------------------------------------------------------------------------------------------
1378  8B91              ;
1379  8B91              ; 	21/02/24
1380  8B91              ;
1381  8B91              ;	MODIFICA: AF,HL,BC,DE
1382  8B91              ;
1383  8B91              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1384  8B91              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1385  8B91
1386  8B91              Calcula_numero_de_malotes
1387  8B91
1388  8B91 21 00 80     	ld hl,Scanlines_album
1389  8B94 EB           	ex de,hl
1390  8B95 2A EB 89     	ld hl,(Scanlines_album_SP)
1391  8B98
1392  8B98 06 00        	ld b,0
1393  8B9A 7D           	ld a,l
1394  8B9B 93           	sub e
1395  8B9C 28 07        	jr z,1F
1396  8B9E
1397  8B9E              ; Nº de malotes no es "0".
1398  8B9E
1399  8B9E D6 06        2 sub 6
1400  8BA0 04           	inc b
1401  8BA1 A7           	and a
1402  8BA2 20 FA        	jr nz,2B
1403  8BA4 78           	ld a,b
1404  8BA5
1405  8BA5 32 D8 89     1 ld (Numero_de_malotes),a
1406  8BA8 C9           	ret
1407  8BA9
1408  8BA9              ; -------------------------------------------------------------------------------------------------------------
1409  8BA9              ;
1410  8BA9              ; 8/9/23
1411  8BA9              ;
1412  8BA9
1413  8BA9              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1414  8BA9              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1415  8BA9
1416  8BA9              ;Calcula_malotes_Amadeus
1417  8BA9
1418  8BA9              ;	ld hl,Scanlines_album_Amadeus
1419  8BA9              ;	ex de,hl
1420  8BA9              ;	ld hl,(End_Snapshot_Amadeus)
1421  8BA9
1422  8BA9              ;	ld a,h
1423  8BA9              ;	and a
1424  8BA9              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1425  8BA9
1426  8BA9              ;	ld b,0
1427  8BA9              ;	ld a,l
1428  8BA9              ;	sub e
1429  8BA9              ;	jr z,1F
1430  8BA9
1431  8BA9              ; Nº de malotes no es "0".
1432  8BA9
1433  8BA9              ;2 sub 6
1434  8BA9              ;	inc b
1435  8BA9              ;	and a
1436  8BA9              ;	jr nz,2B
1437  8BA9              ;	ld a,b
1438  8BA9
1439  8BA9              ;1 ld (Numero_de_malotes),a
1440  8BA9              ;	ret
1441  8BA9
1442  8BA9              ; -------------------------------------------------------------------------------------------------------------
1443  8BA9              ;
1444  8BA9              ; 28/2/23
1445  8BA9              ;
1446  8BA9
1447  8BA9              ;;Calcula_numero_de_disparotes
1448  8BA9
1449  8BA9              ;	ld hl,Scanlines_album_disparos
1450  8BA9              ;	ex de,hl
1451  8BA9              ;	ld hl,(End_Snapshot_disparos)
1452  8BA9
1453  8BA9              ;	ld b,0
1454  8BA9              ;	ld a,l
1455  8BA9              ;	sub e
1456  8BA9              ;	jr z,1F
1457  8BA9
1458  8BA9              ; Nº de malotes no es "0".
1459  8BA9
1460  8BA9              ;2 sub 6
1461  8BA9              ;	inc b
1462  8BA9              ;	and a
1463  8BA9              ;	jr nz,2B
1464  8BA9              ;	ld a,b
1465  8BA9
1466  8BA9              ;1 ld (Numero_de_disparotes),a
1467  8BA9              ;	ret
1468  8BA9
1469  8BA9              ; *************************************************************************************************************************************************************
1470  8BA9              ;
1471  8BA9              ; 20/10/22
1472  8BA9              ;
1473  8BA9              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1474  8BA9              ;
1475  8BA9              ; Destruye el puntero y DE !!!!!
1476  8BA9
1477  8BA9 5E           Extrae_address ld e,(hl)
1478  8BAA 23           	inc hl
1479  8BAB 56           	ld d,(hl)
1480  8BAC 2B           	dec hl
1481  8BAD EB           	ex de,hl
1482  8BAE C9           	ret
1483  8BAF
1484  8BAF              ; *************************************************************************************************************************************************************
1485  8BAF              ;
1486  8BAF              ;	20/1/24
1487  8BAF              ;
1488  8BAF              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1489  8BAF              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1490  8BAF              ;
1491  8BAF              ;   Destruye HL y BC !!!!!,
1492  8BAF              ;
1493  8BAF              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1494  8BAF              ;					"0" ..... Izquierda.
1495  8BAF
1496  8BAF              Inicia_Puntero_objeto
1497  8BAF
1498  8BAF 3A 9F 89     	ld a,(Cuad_objeto)
1499  8BB2 E6 01        	and 1
1500  8BB4 F5           	push af
1501  8BB5 CC D1 8B     	call z,Inicia_puntero_objeto_izq
1502  8BB8 F1           	pop af
1503  8BB9 C8           	ret z
1504  8BBA CD BE 8B     	call Inicia_puntero_objeto_der
1505  8BBD C9           	ret
1506  8BBE
1507  8BBE              ; Arrancamos desde la parte izquierda de la pantalla.
1508  8BBE              ; Iniciamos (Indice_Sprite_der).
1509  8BBE
1510  8BBE 2A 95 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1511  8BC1 22 99 89     	ld (Puntero_DESPLZ_der),hl
1512  8BC4 CD A9 8B     	call Extrae_address
1513  8BC7 22 8F 89     	ld (Puntero_objeto),hl
1514  8BCA
1515  8BCA 2A 97 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1516  8BCD 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1517  8BD0 C9           	ret
1518  8BD1
1519  8BD1              ; Arrancamos desde la parte derecha de la pantalla.
1520  8BD1              ; Iniciamos (Indice_Sprite_izq).
1521  8BD1
1522  8BD1 2A 97 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1523  8BD4 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1524  8BD7 CD A9 8B     	call Extrae_address
1525  8BDA 22 8F 89     	ld (Puntero_objeto),hl
1526  8BDD
1527  8BDD 2A 95 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1528  8BE0 22 99 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1529  8BE3 C9           	ret
1530  8BE4
1531  8BE4              ; **************************************************************************************************
1532  8BE4              ;
1533  8BE4              ;	31/01/24
1534  8BE4              ;
1535  8BE4              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1536  8BE4
1537  8BE4              Restore_entidad
1538  8BE4
1539  8BE4 2A CF 89     	ld hl,(Puntero_store_caja)
1540  8BE7 11 8A 89     	ld de,Bandeja_DRAW
1541  8BEA 7E           	ld a,(hl)
1542  8BEB 12           	ld (de),a
1543  8BEC 23           	inc hl 											; (Tipo).
1544  8BED
1545  8BED 11 91 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1546  8BF0 01 02 00     	ld bc,2
1547  8BF3 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1548  8BF5
1549  8BF5 13           	inc de
1550  8BF6 7E           	ld a,(hl)
1551  8BF7 12           	ld (de),a 										; Transferimos (Attr).
1552  8BF8 23           	inc hl
1553  8BF9
1554  8BF9 11 A0 89     	ld de,Impacto
1555  8BFC
1556  8BFC 7E           	ld a,(hl)
1557  8BFD 12           	ld (de),a 										; Transferimos (Impacto).
1558  8BFE 23           	inc hl
1559  8BFF
1560  8BFF 13           	inc de
1561  8C00
1562  8C00 01 06 00     	ld bc,6
1563  8C03 ED B0        	ldir
1564  8C05
1565  8C05 01 07 00     	ld bc,7
1566  8C08 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1567  8C0A              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1568  8C0A 11 B2 89     	ld de,Ctrl_2
1569  8C0D
1570  8C0D 7E           	ld a,(hl)
1571  8C0E 12           	ld (de),a 										; Transferimos (Ctrl_2).
1572  8C0F
1573  8C0F C9           	ret
1574  8C10
1575  8C10              ; **************************************************************************************************
1576  8C10              ;
1577  8C10              ;	08/05/23
1578  8C10              ;
1579  8C10              ;	Incrementamos los dos punteros de entidades. (+1).
1580  8C10
1581  8C10              Incrementa_punteros_de_cajas
1582  8C10
1583  8C10 2A D1 89     	ld hl,(Puntero_restore_caja)
1584  8C13 22 CF 89     	ld (Puntero_store_caja),hl
1585  8C16 2A D3 89     	ld hl,(Indice_restore_caja)
1586  8C19 23           	inc hl
1587  8C1A 23           	inc hl
1588  8C1B 22 D3 89     	ld (Indice_restore_caja),hl
1589  8C1E CD A9 8B         call Extrae_address
1590  8C21 22 D1 89         ld (Puntero_restore_caja),hl
1591  8C24 C9               ret
1592  8C25
1593  8C25              ; **************************************************************************************************
1594  8C25              ;
1595  8C25              ;	21/12/23
1596  8C25              ;
1597  8C25              ;	Restore_Amadeus
1598  8C25              ;
1599  8C25              ;	Cargamos en DRAW los parámetros de Amadeus.
1600  8C25              ;
1601  8C25
1602  8C25              ;Restore_Amadeus	push hl
1603  8C25              ;	push de
1604  8C25              ; 	push bc
1605  8C25              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1606  8C25              ;	ld de,Bandeja_DRAW
1607  8C25              ;	ld bc,42
1608  8C25              ;	ldir
1609  8C25              ;	pop bc
1610  8C25              ;	pop de
1611  8C25              ;	pop hl
1612  8C25              ;	ret
1613  8C25
1614  8C25              ; *************************************************************************************************************************************************************
1615  8C25              ;
1616  8C25              ;	21/12/23
1617  8C25              ;
1618  8C25              ;	Store_Amadeus
1619  8C25              ;
1620  8C25              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1621  8C25              ;
1622  8C25              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1623  8C25              ;
1624  8C25              ;	DESTRUYE: HL y BC y DE.
1625  8C25
1626  8C25              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1627  8C25              ;	ld bc,42
1628  8C25              ;	ldir
1629  8C25              ;	ret
1630  8C25
1631  8C25              ; -----------------------------------------------------------
1632  8C25              ;
1633  8C25              ;	21/12/23
1634  8C25              ;
1635  8C25              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1636  8C25              ;
1637  8C25              ;	Destruye: HL,BC,DE,A
1638  8C25
1639  8C25              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1640  8C25              ;	ld bc,41
1641  8C25              ;	xor a
1642  8C25              ;	ld (hl),a;
1643  8C25              ;	ld de,Bandeja_DRAW+1
1644  8C25              ;	ldir
1645  8C25              ;	ret
1646  8C25
1647  8C25              ; -----------------------------------------------------------
1648  8C25
1649  8C25              ; Teclado.
1650  8C25
1651  8C25 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1652  8C27 DB FE        	in a,($fe)
1653  8C29 E6 01        	and $01
1654  8C2B 28 02        	jr z,1f
1655  8C2D 18 F6        	jr Pulsa_ENTER
1656  8C2F C9           1 ret
1657  8C30
1658  8C30              ; **************************************************************************************************
1659  8C30              ;
1660  8C30              ; Temporización.
1661  8C30
1662  8C30              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1663  8C30              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1664  8C30              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1665  8C30              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1666  8C30
1667  8C30              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1668  8C30              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1669  8C30              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1670  8C30
1671  8C30              ; A partir de $4f61 no hace falta DELAY.
1672  8C30
1673  8C30              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1674  8C30
1675  8C30 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1676  8C33 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1677  8C34 78           	LD A,B
1678  8C35 A7           	AND A
1679  8C36 20 FB        	JR NZ,wait
1680  8C38 C9           	RET
1681  8C39
1682  8C39              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1683  8C39              ;
1684  8C39              ;	5/3/23
1685  8C39              ;
1686  8C39              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1687  8C39
1688  8C39              ;Movimiento_Amadeus
1689  8C39
1690  8C39              ; Disparo.
1691  8C39
1692  8C39              ;	ld a,(Disparo_Amadeus)
1693  8C39              ;	and a
1694  8C39              ;	jr nz,1F
1695  8C39              ;	jr 2F
1696  8C39
1697  8C39              ;1 ld a,$f7													; "5" para disparar.
1698  8C39              ;	in a,($fe)
1699  8C39              ;	and $10
1700  8C39
1701  8C39              ;	push af
1702  8C39              ;	call z,Genera_disparo
1703  8C39              ;	pop af
1704  8C39              ;	jr nz,2F
1705  8C39
1706  8C39              ;	ld a,(Disparo_Amadeus)
1707  8C39              ;	xor 1
1708  8C39              ;	ld (Disparo_Amadeus),a
1709  8C39              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1710  8C39              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1711  8C39              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1712  8C39              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1713  8C39
1714  8C39              ;	ld a,$f7
1715  8C39              ;	in a,($fe)
1716  8C39              ;	and $01
1717  8C39              ;	ret z
1718  8C39
1719  8C39              ;	ld a,$f7
1720  8C39              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1721  8C39              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1722  8C39              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1723  8C39              ;	ret
1724  8C39
1725  8C39              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1726  8C39              ;
1727  8C39              ;	Rutina provisional para que los malotes cagen balas.
1728  8C39
1729  8C39              ;Detecta_disparo_entidad
1730  8C39
1731  8C39              ;	ld a,(Disparo_entidad)
1732  8C39              ;	and a
1733  8C39              ;	ret z
1734  8C39
1735  8C39              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1736  8C39
1737  8C39              ;	ld a,$7f				; Detecta SPACE.
1738  8C39              ;	in a,($fe)
1739  8C39              ;	and 1
1740  8C39              ;	ret nz
1741  8C39
1742  8C39              ;	call Genera_disparo
1743  8C39              ;	ret
1744  8C39
1745  8C39              ; ----------------------------------------------------------------------
1746  8C39              ;
1747  8C39              ;	8/9/23
1748  8C39
1749  8C39              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1750  8C39              ; 	dec hl
1751  8C39              ;	ld a,(hl)
1752  8C39              ;	and a
1753  8C39              ;	ret z										; Salimos si es álbum está vacío.
1754  8C39
1755  8C39              ;	ld de,Variables_de_borrado+5
1756  8C39              ;	ld bc,6
1757  8C39              ;	lddr
1758  8C39              ;	ret
1759  8C39
1760  8C39              ; ----------------------------------------------------------------------
1761  8C39              ;
1762  8C39              ;	9/9/23
1763  8C39
1764  8C39              ;Repone_datos_de_borrado_Amadeus
1765  8C39
1766  8C39              ;	ld hl,Variables_de_borrado
1767  8C39              ;	ld de,Scanlines_album_Amadeus
1768  8C39              ;	ld bc,6
1769  8C39              ;	ldir
1770  8C39
1771  8C39              ;	ex de,hl
1772  8C39              ;	ld (End_Snapshot_Amadeus),hl
1773  8C39
1774  8C39              ;	ret
1775  8C39
1776  8C39              ; ----------------------------------------------------------------------
1777  8C39              ;
1778  8C39              ;	27/10/23
1779  8C39              ;
1780  8C39
1781  8C39              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1782  8C39              ;	_ Scanlines_album correspondiente.
1783  8C39
1784  8C39              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1785  8C39              ;	_ durante el proceso de escritura.
1786  8C39
1787  8C39              ;Repone_datos_de_borrado
1788  8C39
1789  8C39              ;	ld de,(Scanlines_album_SP)
1790  8C39              ;	ld hl,Variables_de_borrado
1791  8C39              ;	ld bc,6
1792  8C39              ;	ldir
1793  8C39
1794  8C39              ;	ex de,hl
1795  8C39              ;	ld (Scanlines_album_SP),hl
1796  8C39
1797  8C39              ;	ret
1798  8C39
1799  8C39              ; --------------------------------------------------------------------------------------
1800  8C39
1801  8C39              ;Pinta_Amadeus
1802  8C39
1803  8C39              ;   	call Calcula_malotes_Amadeus
1804  8C39              ;	call Extrae_foto_Amadeus
1805  8C39              ;	call Limpia_album_Amadeus
1806  8C39
1807  8C39              ;	ret
1808  8C39
1809  8C39              ; -----------------------------------------------------------------------------------
1810  8C39              ;
1811  8C39              ;	10/12/23
1812  8C39              ;
1813  8C39              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1814  8C39
1815  8C39              Actualiza_relojes
1816  8C39
1817  8C39 3A ED 89     	ld a,(Ctrl_3)
1818  8C3C CB 47        	bit 0,a
1819  8C3E C8           	ret z 						;	Salimos si no hemos pintado unidades.
1820  8C3F
1821  8C3F 21 F2 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1822  8C42 34           	inc (hl)
1823  8C43
1824  8C43 34           	inc (hl)
1825  8C44 35           	dec (hl)
1826  8C45 C0           	ret nz
1827  8C46
1828  8C46 21 F3 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1829  8C49 34           	inc (hl)
1830  8C4A C9           	ret
1831  8C4B
1832  8C4B              ; ---------------------------------------------------------------
1833  8C4B
1834  8C4B              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8C4B              ;---------------------------------------------------------------------------------------------------------------
   2+ 8C4B              ;
   3+ 8C4B              ;   8/3/24
   4+ 8C4B              ;
   5+ 8C4B              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8C4B              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8C4B              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8C4B              ;	_ de la 1ª entidad del Nivel.
   9+ 8C4B              ;
  10+ 8C4B              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8C4B
  12+ 8C4B              ;	MODIFICA: HL,DE y A.
  13+ 8C4B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8C4B
  15+ 8C4B              Inicializa_Nivel
  16+ 8C4B
  17+ 8C4B 2A F7 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8C4E CD A9 8B     	call Extrae_address
  19+ 8C51 7E           	ld a,(hl)
  20+ 8C52 32 D5 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8C55 23           	inc hl
  22+ 8C56 CD 63 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8C59 22 F9 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C5C CD 6C 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C5F
  26+ 8C5F CD 7D 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C62 C9           	ret
  28+ 8C63
  29+ 8C63              ; ----------------------
  30+ 8C63
  31+ 8C63 11 B4 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C66 01 04 00     	ld bc,4
  33+ 8C69 ED B0        	ldir
  34+ 8C6B C9           	ret
  35+ 8C6C
  36+ 8C6C 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C6D CD BD 8D         call Calcula_salto_en_BC
  38+ 8C70 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C73 A7               and a
  40+ 8C74 ED 4A            adc hl,bc
  41+ 8C76 CD A9 8B         call Extrae_address
  42+ 8C79 22 C0 89         ld (Puntero_indice_mov),hl
  43+ 8C7C C9               ret
  44+ 8C7D
  45+ 8C7D 3A 8A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8C80 CD BD 8D     	call Calcula_salto_en_BC
  47+ 8C83 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8C86 A7               and a
  49+ 8C87 ED 4A            adc hl,bc
  50+ 8C89 CD A9 8B         call Extrae_address
  51+ 8C8C 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8C8F C9           	ret
  53+ 8C90
  54+ 8C90              ;---------------------------------------------------------------------------------------------------------------
  55+ 8C90              ;
  56+ 8C90              ;   5/1/24
  57+ 8C90              ;
  58+ 8C90              ;	Destruye A,BC,HL,DE
  59+ 8C90
  60+ 8C90              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8C90              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8C90
  63+ 8C90              Inicia_Entidades
  64+ 8C90
  65+ 8C90              ; Preparamos los punteros de las cajas de entidades:
  66+ 8C90
  67+ 8C90 CD 7B 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8C93              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8C93 CD 24 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8C96
  71+ 8C96 2A F9 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8C99
  73+ 8C99 22 F9 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8C9C
  75+ 8C9C CD 6B 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8C9F
  77+ 8C9F 2A F9 89     	ld hl,(Datos_de_nivel)
  78+ 8CA2
  79+ 8CA2              ; En este punto:
  80+ 8CA2              ;
  81+ 8CA2              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8CA2              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8CA2
  84+ 8CA2 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8CA3
  86+ 8CA3 7E           	ld a,(hl)
  87+ 8CA4 CD E0 8C     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8CA7
  89+ 8CA7 CD CF 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8CAA
  91+ 8CAA              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8CAA
  93+ 8CAA CD 8D 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8CAD
  95+ 8CAD A7           	and a
  96+ 8CAE 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8CB0
  98+ 8CB0              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8CB0
 100+ 8CB0              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8CB0              ;	_ de este tipo de entidad.
 102+ 8CB0
 103+ 8CB0 CD 8B 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8CB3 CD 98 99     	call Transfiere_datos_de_contadores
 105+ 8CB6
 106+ 8CB6 18 06        	jr 4F
 107+ 8CB8
 108+ 8CB8 CD CB 8A     3 call Construye_movimientos_masticados_entidad
 109+ 8CBB
 110+ 8CBB              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8CBB              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8CBB              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8CBB              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8CBB              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8CBB
 116+ 8CBB CD 4B 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8CBE              ;																; _ Mov_masticados ya generados.
 118+ 8CBE CD FA 8C     4 call Guarda_foto_de_mov_masticado
 119+ 8CC1
 120+ 8CC1              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8CC1
 122+ 8CC1 2A A7 89     	ld hl,(Puntero_de_impresion)
 123+ 8CC4 CD CE 99     	call Genera_coordenadas
 124+ 8CC7 CD F6 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8CCA CD 04 8D     	call Limpiamos_bandeja_DRAW
 126+ 8CCD CD 10 8C     	call Incrementa_punteros_de_cajas
 127+ 8CD0
 128+ 8CD0              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8CD0              ; _ entidad del Nivel.
 130+ 8CD0
 131+ 8CD0 3A EE 89     	ld a,(Ctrl_4)
 132+ 8CD3 E6 F0        	and $f0
 133+ 8CD5 32 EE 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8CD8
 135+ 8CD8              ; Siguiente entidad del Nivel.
 136+ 8CD8
 137+ 8CD8 2A F9 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8CDB 23           	inc hl 														; _ entidad del Nivel.
 139+ 8CDC
 140+ 8CDC C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8CDD
 142+ 8CDD 10 BA        	djnz 2B
 143+ 8CDF
 144+ 8CDF C9           	ret
 145+ 8CE0
 146+ 8CE0              ; ---------------------------------------------------------------------
 147+ 8CE0              ;
 148+ 8CE0              ;	10/02/24
 149+ 8CE0              ;
 150+ 8CE0              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8CE0              ;
 152+ 8CE0              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8CE0
 154+ 8CE0              Definicion_segun_tipo
 155+ 8CE0
 156+ 8CE0 CD BD 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8CE3 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8CE6 CD C5 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8CE9 C9           	ret
 160+ 8CEA
 161+ 8CEA              ; ---------------------------------------------------------------------
 162+ 8CEA              ;
 163+ 8CEA              ;	30/01/24
 164+ 8CEA
 165+ 8CEA
 166+ 8CEA              Store_Restore_cajas
 167+ 8CEA
 168+ 8CEA              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8CEA
 170+ 8CEA 2A A7 89     	ld hl,(Puntero_de_impresion)
 171+ 8CED CD CE 99     	call Genera_coordenadas
 172+ 8CF0
 173+ 8CF0 CD F6 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8CF3 CD 04 8D     	call Limpiamos_bandeja_DRAW
 175+ 8CF6
 176+ 8CF6              ; 	Entidad_sospechosa. 20/4/23
 177+ 8CF6
 178+ 8CF6              ;	ld a,(Impacto)
 179+ 8CF6              ;	and a
 180+ 8CF6              ;	jr z,1F
 181+ 8CF6
 182+ 8CF6              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8CF6              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8CF6              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8CF6              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8CF6              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8CF6
 188+ 8CF6
 189+ 8CF6              ;1 ld hl,(Puntero_restore_caja)
 190+ 8CF6              ;	ld a,(hl)
 191+ 8CF6              ;	and a
 192+ 8CF6              ;	push af
 193+ 8CF6              ;	jr z,2F
 194+ 8CF6
 195+ 8CF6              ;	di
 196+ 8CF6              ;	ld de,Bandeja_DRAW
 197+ 8CF6              ;	ld bc,42
 198+ 8CF6              ;	ldir
 199+ 8CF6              ;	ei
 200+ 8CF6
 201+ 8CF6 CD 10 8C     2 call Incrementa_punteros_de_cajas
 202+ 8CF9 C9           	ret
 203+ 8CFA
 204+ 8CFA
 205+ 8CFA              ; ---------------------------------------------------------------------
 206+ 8CFA              ;
 207+ 8CFA              ;	29/01/24
 208+ 8CFA
 209+ 8CFA              Guarda_foto_de_mov_masticado
 210+ 8CFA
 211+ 8CFA CD 1C 8B     	call Cargamos_registros_con_mov_masticado
 212+ 8CFD CD 12 9A     	call Genera_datos_de_impresion
 213+ 8D00              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8D00              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8D00              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8D00              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8D00
 218+ 8D00 CD 0F 8D     	call Decrementa_Contador_de_mov_masticados
 219+ 8D03 C9           	ret
 220+ 8D04
 221+ 8D04              ; ---------------------------------------------------------------------
 222+ 8D04              ;
 223+ 8D04              ;	25/01/24
 224+ 8D04
 225+ 8D04 21 8A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8D07 06 2A        	ld b,42
 227+ 8D09 AF           	xor a
 228+ 8D0A
 229+ 8D0A 77           1 ld (hl),a
 230+ 8D0B 23           	inc hl
 231+ 8D0C 10 FC        	djnz 1B
 232+ 8D0E
 233+ 8D0E C9           	ret
 234+ 8D0F
 235+ 8D0F              ; ---------------------------------------------------------------------
 236+ 8D0F              ;
 237+ 8D0F              ;	22/01/24
 238+ 8D0F
 239+ 8D0F 2A AB 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8D12 2B           	dec hl
 241+ 8D13
 242+ 8D13 24           	inc h
 243+ 8D14 25           	dec h
 244+ 8D15
 245+ 8D15 FC 1C 8D     	call m,Reinicia_entidad_maliciosa
 246+ 8D18
 247+ 8D18              ;	jr nz,1F
 248+ 8D18
 249+ 8D18              ;	inc l
 250+ 8D18              ;	dec l
 251+ 8D18
 252+ 8D18              ;	di
 253+ 8D18              ;	jr z,$
 254+ 8D18              ;	ei
 255+ 8D18
 256+ 8D18 22 AB 89     1 ld (Contador_de_mov_masticados),hl
 257+ 8D1B C9           	ret
 258+ 8D1C
 259+ 8D1C              ; ---------------------------------------------------------------------
 260+ 8D1C              ;
 261+ 8D1C              ;	10/2/24
 262+ 8D1C
 263+ 8D1C              Reinicia_entidad_maliciosa
 264+ 8D1C
 265+ 8D1C              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8D1C
 267+ 8D1C CD 8B 99     	call Situa_en_contador_general_de_mov_masticados
 268+ 8D1F CD 98 99     	call Transfiere_datos_de_contadores
 269+ 8D22
 270+ 8D22              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8D22
 272+ 8D22 3A 8A 89     	ld a,(Tipo)
 273+ 8D25 CD E0 8C     	call Definicion_segun_tipo
 274+ 8D28
 275+ 8D28 E5           	push hl
 276+ 8D29 DD E1        	pop ix
 277+ 8D2B
 278+ 8D2B DD 6E 0B     	ld l,(ix+11)
 279+ 8D2E DD 66 0C     	ld h,(ix+12)
 280+ 8D31
 281+ 8D31 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8D34
 283+ 8D34              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8D34              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8D34
 286+ 8D34 2A EB 89     	ld hl,(Scanlines_album_SP)
 287+ 8D37 01 06 00     	ld bc,6
 288+ 8D3A A7           	and a
 289+ 8D3B ED 42        	sbc hl,bc
 290+ 8D3D 22 EB 89     	ld (Scanlines_album_SP),hl
 291+ 8D40
 292+ 8D40 CD 1C 8B     	call Cargamos_registros_con_mov_masticado
 293+ 8D43 CD 12 9A     	call Genera_datos_de_impresion
 294+ 8D46
 295+ 8D46 2A AB 89     	ld hl,(Contador_de_mov_masticados)
 296+ 8D49 2B           	dec hl
 297+ 8D4A
 298+ 8D4A C9           	ret
 299+ 8D4B
 300+ 8D4B
 301+ 8D4B
 302+ 8D4B
 303+ 8D4B              ; ---------------------------------------------------------------------
 304+ 8D4B              ;
 305+ 8D4B              ;	22/01/24
 306+ 8D4B
 307+ 8D4B 21 EE 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8D4E CB 46        	bit 0,(hl)
 309+ 8D50 20 0D        	jr nz,1F
 310+ 8D52 CB 4E        	bit 1,(hl)
 311+ 8D54 20 0C        	jr nz,2F
 312+ 8D56 CB 56        	bit 2,(hl)
 313+ 8D58 20 0B        	jr nz,3F
 314+ 8D5A CB 5E        	bit 3,(hl)
 315+ 8D5C 20 0A        	jr nz,4F
 316+ 8D5E C9           	ret
 317+ 8D5F
 318+ 8D5F CB E6        1 set 4,(hl)
 319+ 8D61 C9           	ret
 320+ 8D62 CB EE        2 set 5,(hl)
 321+ 8D64 C9           	ret
 322+ 8D65 CB F6        3 set 6,(hl)
 323+ 8D67 C9           	ret
 324+ 8D68 CB FE        4 set 7,(hl)
 325+ 8D6A C9           	ret
 326+ 8D6B
 327+ 8D6B              ; ---------------------------------------------------------------------
 328+ 8D6B              ;
 329+ 8D6B              ;	23/01/24
 330+ 8D6B              ;
 331+ 8D6B              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8D6B              ;
 333+ 8D6B              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8D6B              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8D6B              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8D6B              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8D6B
 338+ 8D6B              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8D6B
 340+ 8D6B 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8D6C 3D           	dec a
 342+ 8D6D 20 06        	jr nz,1F
 343+ 8D6F
 344+ 8D6F              ; --- Tipo_1
 345+ 8D6F
 346+ 8D6F 21 EE 89     	ld hl,Ctrl_4
 347+ 8D72 CB C6        	set 0,(hl)
 348+ 8D74 C9           	ret
 349+ 8D75
 350+ 8D75 3D           1 dec a
 351+ 8D76 20 06        	jr nz,2F
 352+ 8D78
 353+ 8D78              ; --- Tipo_2
 354+ 8D78
 355+ 8D78 21 EE 89     	ld hl,Ctrl_4
 356+ 8D7B CB CE        	set 1,(hl)
 357+ 8D7D C9           	ret
 358+ 8D7E
 359+ 8D7E 3D           2 dec a
 360+ 8D7F 20 06        	jr nz,3F
 361+ 8D81
 362+ 8D81              ; --- Tipo_3
 363+ 8D81
 364+ 8D81 21 EE 89     	ld hl,Ctrl_4
 365+ 8D84 CB D6        	set 2,(hl)
 366+ 8D86 C9           	ret
 367+ 8D87
 368+ 8D87              ; --- Tipo_3
 369+ 8D87
 370+ 8D87 21 EE 89     3 ld hl,Ctrl_4
 371+ 8D8A CB D6        	set 2,(hl)
 372+ 8D8C C9           	ret
 373+ 8D8D
 374+ 8D8D              ; ---------------------------------------------------------------------
 375+ 8D8D              ;
 376+ 8D8D              ;	22/01/24
 377+ 8D8D
 378+ 8D8D 21 EE 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8D90 CB 46        	bit 0,(hl)
 380+ 8D92 20 0E        	jr nz,1F
 381+ 8D94
 382+ 8D94 CB 4E        	bit 1,(hl)
 383+ 8D96 20 10        	jr nz,2F
 384+ 8D98
 385+ 8D98 CB 56        	bit 2,(hl)
 386+ 8D9A 20 12        	jr nz,3F
 387+ 8D9C
 388+ 8D9C CB 5E        	bit 3,(hl)
 389+ 8D9E 20 14        	jr nz,4F
 390+ 8DA0 18 19        	jr 6F
 391+ 8DA2
 392+ 8DA2              ; Entidad_de_Tipo_1.
 393+ 8DA2
 394+ 8DA2 CB 66        1 bit 4,(hl)
 395+ 8DA4 28 15        	jr z,6F
 396+ 8DA6 18 10        	jr 5F
 397+ 8DA8
 398+ 8DA8              ; Entidad_de_Tipo_2.
 399+ 8DA8
 400+ 8DA8 CB 6E        2 bit 5,(hl)
 401+ 8DAA 28 0F        	jr z,6F
 402+ 8DAC 18 0A        	jr 5F
 403+ 8DAE
 404+ 8DAE              ; Entidad_de_Tipo_3.
 405+ 8DAE
 406+ 8DAE CB 76        3 bit 6,(hl)
 407+ 8DB0 28 09        	jr z,6F
 408+ 8DB2 18 04        	jr 5F
 409+ 8DB4
 410+ 8DB4              ; Entidad_de_Tipo_4.
 411+ 8DB4
 412+ 8DB4 CB 7E        4 bit 7,(hl)
 413+ 8DB6 28 03        	jr z,6F
 414+ 8DB8
 415+ 8DB8              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8DB8
 417+ 8DB8 AF           5 xor a
 418+ 8DB9 3C           	inc a
 419+ 8DBA C9           	ret
 420+ 8DBB
 421+ 8DBB              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8DBB
 423+ 8DBB AF           6 xor a
 424+ 8DBC C9           	ret
 425+ 8DBD
 426+ 8DBD              ;	------------------------------------------------------------------------------------
 427+ 8DBD              ;
 428+ 8DBD              ;	12/01/24
 429+ 8DBD              ;
 430+ 8DBD              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8DBD              ;
 432+ 8DBD              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8DBD              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8DBD
 435+ 8DBD CB 27        Calcula_salto_en_BC sla a
 436+ 8DBF D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8DC1 4F           	ld c,a
 438+ 8DC2 06 00        	ld b,0
 439+ 8DC4 C9           	ret
 440+ 8DC5
 441+ 8DC5              ; ------------------------------------------------------------------
 442+ 8DC5              ;
 443+ 8DC5              ;	19/1/24
 444+ 8DC5              ;
 445+ 8DC5              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8DC5              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8DC5
 448+ 8DC5 A7           Situa_en_datos_de_definicion and a
 449+ 8DC6 ED 4A        	adc hl,bc
 450+ 8DC8 CD A9 8B     	call Extrae_address
 451+ 8DCB 22 DB 89         ld (Datos_de_entidad),hl
 452+ 8DCE C9           	ret
 453+ 8DCF
 454+ 8DCF              ; ------------------------------------------------------------------
 455+ 8DCF
 456+ 8DCF              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8DCF              ; 	inc de
 458+ 8DCF              ; 	inc de
 459+ 8DCF              ; 	ex de,hl
 460+ 8DCF              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8DCF              ; 	ret
 462+ 8DCF
 463+ 8DCF              ; ----------------------------------------------------------------------------------------------------------
 464+ 8DCF              ;
 465+ 8DCF              ;	31/1/24
 466+ 8DCF              ;
 467+ 8DCF              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8DCF              ;	_ de entidad.
 469+ 8DCF              ;
 470+ 8DCF              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8DCF              ;
 472+ 8DCF              ;
 473+ 8DCF              ;	MODIFICA: HL,DE y BC
 474+ 8DCF
 475+ 8DCF
 476+ 8DCF              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8DCF
 478+ 8DCF 11 8A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8DD2 01 03 00     	ld bc,3
 480+ 8DD5 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8DD7              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8DD7 11 94 89     	ld de,Attr									; DE en (Attr).
 483+ 8DDA 01 05 00     	ld bc,5
 484+ 8DDD ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8DDF              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8DDF 11 9D 89     	ld de,Posicion_inicio
 487+ 8DE2 01 03 00     	ld bc,3
 488+ 8DE5 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8DE7              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8DE7 11 A9 89     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8DEA 01 02 00     	ld bc,2
 492+ 8DED ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8DEF
 494+ 8DEF 11 B3 89     	ld de,Frames_explosion
 495+ 8DF2 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8DF4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8DF5
 498+ 8DF5 C9           	ret
 499+ 8DF6
 500+ 8DF6              ; ----------------------------------------------------------------------------------------------------------
 501+ 8DF6              ;
 502+ 8DF6              ;	22/01/24
 503+ 8DF6              ;
 504+ 8DF6              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8DF6              ;
 506+ 8DF6              ;	Las cajas contienen entidades iniciadas:
 507+ 8DF6              ;
 508+ 8DF6              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8DF6              ;
 510+ 8DF6              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8DF6              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8DF6              ;
 513+ 8DF6              ;	MODIFICA: HL,DE y BC
 514+ 8DF6
 515+ 8DF6 21 8A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8DF9 ED 5B CF 89  	ld de,(Puntero_store_caja)
 517+ 8DFD 7E           	ld a,(hl)
 518+ 8DFE 12           	ld (de),a
 519+ 8DFF 13           	inc de 													; (Tipo).
 520+ 8E00
 521+ 8E00 21 91 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8E03 01 02 00     	ld bc,2
 523+ 8E06 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8E08              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8E08 23           	inc hl
 526+ 8E09 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8E0A 12           	ld (de),a
 528+ 8E0B 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8E0C
 530+ 8E0C 21 A0 89     	ld hl,Impacto
 531+ 8E0F 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8E10 12           	ld (de),a
 533+ 8E11 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8E12              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8E12 23           	inc hl
 536+ 8E13 01 06 00     	ld bc,6
 537+ 8E16 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8E18              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8E18 01 07 00     	ld bc,7
 540+ 8E1B ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8E1D              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8E1D              ;															; HL apunta ahora a (Columnas).
 543+ 8E1D 21 B2 89     	ld hl,Ctrl_2
 544+ 8E20 7E           	ld a,(hl)
 545+ 8E21 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8E22 13           	inc de
 547+ 8E23
 548+ 8E23 C9           	ret
 549+ 8E24
 550+ 8E24              ;---------------------------------------------------------------------------------------------------------------
 551+ 8E24              ;
 552+ 8E24              ;	5/1/24
 553+ 8E24              ;
 554+ 8E24              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8E24              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8E24              ;
 557+ 8E24              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8E24              ;
 559+ 8E24              ;	(Numero_parcial_de_entidades)="7".
 560+ 8E24              ;
 561+ 8E24              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8E24              ;
 563+ 8E24              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8E24              ;
 565+ 8E24              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8E24              ;	MODIFICA: A y B.
 567+ 8E24              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8E24
 569+ 8E24              Inicializa_Numero_parcial_de_entidades
 570+ 8E24
 571+ 8E24              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8E24
 573+ 8E24 3A D5 89     	ld a,(Numero_de_entidades)
 574+ 8E27 A7           	and a
 575+ 8E28
 576+ 8E28              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8E28              ;	jr z,$
 578+ 8E28              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8E28
 580+ 8E28 20 03        	jr nz,3F
 581+ 8E2A
 582+ 8E2A              ; ---------- ---------- ----------
 583+ 8E2A
 584+ 8E2A              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8E2A              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8E2A
 587+ 8E2A CD 4B 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8E2D
 589+ 8E2D              ; ---------- ---------- ----------
 590+ 8E2D
 591+ 8E2D 3A D5 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8E30 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8E32 38 08        	jr c,1F
 594+ 8E34
 595+ 8E34              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8E34              ; Actualizamos variables.
 597+ 8E34
 598+ 8E34 3E 07        	ld a,7
 599+ 8E36 32 D6 89     	ld (Numero_parcial_de_entidades),a
 600+ 8E39 47           	ld b,a
 601+ 8E3A 18 04        	jr 2F
 602+ 8E3C
 603+ 8E3C              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8E3C              ; (Numero_de_entidades)="0".
 605+ 8E3C
 606+ 8E3C 32 D6 89     1 ld (Numero_parcial_de_entidades),a
 607+ 8E3F 47           	ld b,a
 608+ 8E40 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1835  8E41              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8E41              ; ******************************************************************************************************************************************************************************************
   2+ 8E41              ;
   3+ 8E41              ; 26/06/23
   4+ 8E41              ;
   5+ 8E41              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8E41
   7+ 8E41              Draw
   8+ 8E41
   9+ 8E41 CD 2B 91     	call Prepara_draw
  10+ 8E44 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8E45 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8E46 28 05        	jr z,2F
  13+ 8E48
  14+ 8E48 3A 9F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8E4B 18 0C        	jr 1F
  16+ 8E4D
  17+ 8E4D 2A 9D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8E50 22 8D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8E53 CD DF 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8E56              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8E56
  22+ 8E56 CD EF 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8E59
  24+ 8E59 3A AD 89     1 ld a,(Ctrl_0)
  25+ 8E5C CB 6F        	bit 5,a
  26+ 8E5E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8E60
  28+ 8E60 CD 75 8E     	call Comprueba_limite_horizontal
  29+ 8E63 CD 05 8F     	call Comprueba_limite_vertical
  30+ 8E66
  31+ 8E66              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8E66              ; -----------------------
  33+ 8E66              ; -----------------------
  34+ 8E66              ; -----------------------
  35+ 8E66
  36+ 8E66 CD 5B 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8E69 CD 92 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8E6C              ;	call Define_rutina_de_impresion
  39+ 8E6C
  40+ 8E6C 3A AD 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8E6F CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8E71 32 AD 89     	ld (Ctrl_0),a
  43+ 8E74
  44+ 8E74 C9           	ret
  45+ 8E75
  46+ 8E75              ; *******************************************************************************************************************************************************************************************
  47+ 8E75              ;	21/01/23
  48+ 8E75              ;
  49+ 8E75              ; 	Comprueba_limite_horizontal.
  50+ 8E75              ;
  51+ 8E75              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8E75              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8E75              ;
  54+ 8E75              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8E75              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8E75              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8E75              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8E75
  59+ 8E75
  60+ 8E75
  61+ 8E75 3A AD 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8E78 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8E7A 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8E7C E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8E7E 32 AD 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8E81 18 09            jr 6F
  67+ 8E83 CB 5F        1 bit 3,a
  68+ 8E85 28 0A            jr z,2F
  69+ 8E87 E6 F7            and $f7
  70+ 8E89 32 AD 89         ld (Ctrl_0),a
  71+ 8E8C CD DF 8F     6 call Inicializacion
  72+ 8E8F 18 5B            jr 5F
  73+ 8E91 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8E92
  75+ 8E92              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8E92              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8E92
  78+ 8E92 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8E93 2A AF 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8E96 CD B0 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8E99 67           	ld h,a
  82+ 8E9A EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8E9B CD B0 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8E9E 67           	ld h,a
  85+ 8E9F A7           	and a
  86+ 8EA0 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8EA2 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8EA3 3A 9F 89     	ld a,(Cuad_objeto)
  89+ 8EA6 FE 02        	cp 2
  90+ 8EA8 38 1E        	jr c,3F
  91+ 8EAA 28 1C        	jr z,3F
  92+ 8EAC 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8EAD 28 23            jr z,7F
  94+ 8EAF 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8EB1 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8EB3 E1           	pop hl
  97+ 8EB4
  98+ 8EB4              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8EB4              ; _para indicar con E="2" en caso necesario.
 100+ 8EB4
 101+ 8EB4 E5               push hl
 102+ 8EB5 C5               push bc
 103+ 8EB6 CD B0 99     	call calcula_tercio
 104+ 8EB9 FE 01        	cp 1
 105+ 8EBB 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8EBD CD ED 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8EC0 28 26            jr z,9F
 108+ 8EC2 38 24            jr c,9F
 109+ 8EC4 1E 00        11 ld e,0
 110+ 8EC6 18 22            jr 8F
 111+ 8EC8 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8EC9 28 07        	jr z, 7F
 113+ 8ECB 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8ECD 1E 00         	ld e,0
 115+ 8ECF E1           	pop hl
 116+ 8ED0 18 04        	jr 4F
 117+ 8ED2 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8ED4 18 15            jr 10F
 119+ 8ED6
 120+ 8ED6              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8ED6              ; _para indicar con E="2" en caso necesario.
 122+ 8ED6
 123+ 8ED6 E5           4 push hl
 124+ 8ED7 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8ED8 CD B0 99     	call calcula_tercio
 126+ 8EDB FE 01        	cp 1
 127+ 8EDD 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8EDF CD ED 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8EE2 28 04            jr z,9F
 130+ 8EE4 30 02            jr nc,9F
 131+ 8EE6 18 02        	jr 8F
 132+ 8EE8 1E 02        9 ld e,2
 133+ 8EEA C1           8 pop bc
 134+ 8EEB E1           10 pop hl
 135+ 8EEC C9           5 ret
 136+ 8EED
 137+ 8EED              ; --------------------
 138+ 8EED              ;
 139+ 8EED              ; 25/08/22
 140+ 8EED
 141+ 8EED CD B0 99     Comprueba_centro call calcula_tercio
 142+ 8EF0 67               ld h,a
 143+ 8EF1 08           	ex af,af
 144+ 8EF2 FE 02        	cp 2
 145+ 8EF4 38 07        	jr c,1F
 146+ 8EF6 28 05        	jr z,1F
 147+ 8EF8 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8EFB 18 03        	jr 2F
 149+ 8EFD 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8F00 08           2 ex af,af
 151+ 8F01 A7               and a
 152+ 8F02 ED 42            sbc hl,bc
 153+ 8F04 C9               ret
 154+ 8F05
 155+ 8F05              ; *********************************************************************************************************************************************************************************************
 156+ 8F05              ;
 157+ 8F05              ;   16/8/22
 158+ 8F05              ;
 159+ 8F05              ;	Comprueba_limite_vertical
 160+ 8F05              ;
 161+ 8F05              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8F05              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8F05              ;
 164+ 8F05
 165+ 8F05 2A 8D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8F08 7D           	ld a,l
 167+ 8F09 E6 1F        	and $1F
 168+ 8F0B 57           	ld d,a
 169+ 8F0C 3A B1 89     	ld a,(Limite_vertical)
 170+ 8F0F BA           	cp d 											; Límite - Posición.
 171+ 8F10 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8F11 3A 9F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8F14 CB 47        	bit 0,a
 174+ 8F16 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8F18
 176+ 8F18              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8F18
 178+ 8F18 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8F19 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8F1B
 181+ 8F1B              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8F1B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8F1B
 184+ 8F1B 3A 91 89         ld a,(Coordenada_X)
 185+ 8F1E 16 0F            ld d,Centro_izquierda
 186+ 8F20 A7               and a
 187+ 8F21 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8F22 28 1E            jr z,3F
 189+ 8F24 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8F26              ;                                                    ; _salimos sin modificar nada.
 191+ 8F26 18 0E            jr 2F
 192+ 8F28 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8F29 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8F2B
 195+ 8F2B              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8F2B              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8F2B
 198+ 8F2B 3A 91 89         ld a,(Coordenada_X)
 199+ 8F2E 16 10            ld d,Centro_derecha
 200+ 8F30 A7               and a
 201+ 8F31 92               sub d
 202+ 8F32 28 0E            jr z,3F
 203+ 8F34 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8F36              ;                                                    ; _salimos sin modificar nada.
 205+ 8F36 CB 43        2 bit 0,e
 206+ 8F38 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8F3A C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8F3B CD CF 8F         call Modificaccionne
 209+ 8F3E C1           	pop bc
 210+ 8F3F CD DF 8F         call Inicializacion
 211+ 8F42 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8F43
 213+ 8F43              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8F43
 215+ 8F43 C5           4 push bc
 216+ 8F44 01 8C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8F47 0A           	ld a,(bc)
 218+ 8F48 3D           	dec a
 219+ 8F49 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8F4A 7D           	ld a,l
 221+ 8F4B 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8F4C CB 47        	bit 0,a
 223+ 8F4E 28 03        	jr z,5F
 224+ 8F50 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8F51 18 2E        	jr 7F
 226+ 8F53
 227+ 8F53              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8F53
 229+ 8F53 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8F54 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8F55 3A AD 89     	ld a,(Ctrl_0)
 232+ 8F58 CB 4F        	bit 1,a
 233+ 8F5A 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8F5C F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8F5D
 236+ 8F5D              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8F5D
 238+ 8F5D 1C               inc e
 239+ 8F5E 1D               dec e
 240+ 8F5F 20 07            jr nz,12F
 241+ 8F61 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8F62 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8F63 22 8D 89     	ld (Posicion_actual),hl
 244+ 8F66 18 44        13 jr 9F
 245+ 8F68 CB 43        12 bit 0,e
 246+ 8F6A 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8F6C              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8F6C C1           	pop bc
 249+ 8F6D 18 D3        	jr 3B
 250+ 8F6F 80           14 add b
 251+ 8F70 6F               ld l,a
 252+ 8F71 22 8D 89     	ld (Posicion_actual),hl
 253+ 8F74 CD CF 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8F77 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8F79 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8F7B 32 AD 89         ld (Ctrl_0),a
 257+ 8F7E F1           	pop af
 258+ 8F7F 18 2B        	jr 9F
 259+ 8F81
 260+ 8F81              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8F81
 262+ 8F81 F5           7 push af
 263+ 8F82 3A AD 89     	ld a,(Ctrl_0)
 264+ 8F85 CB 47        	bit 0,a
 265+ 8F87 20 1D        	jr nz,8F
 266+ 8F89 F1           	pop af
 267+ 8F8A
 268+ 8F8A              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8F8A
 270+ 8F8A 1C           	inc e
 271+ 8F8B 1D               dec e
 272+ 8F8C 20 07            jr nz,10F
 273+ 8F8E 90           	sub b
 274+ 8F8F 6F               ld l,a
 275+ 8F90 22 8D 89     	ld (Posicion_actual),hl
 276+ 8F93 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8F95              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8F95 CB 43        10 bit 0,e
 279+ 8F97 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8F99              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8F99 C1           	pop bc
 282+ 8F9A 18 A6        	jr 3B
 283+ 8F9C 90           16 sub b
 284+ 8F9D 6F               ld l,a
 285+ 8F9E 22 8D 89     	ld (Posicion_actual),hl
 286+ 8FA1 CD CF 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 8FA4 18 06            jr 9F
 288+ 8FA6 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 8FA8 32 AD 89         ld (Ctrl_0),a
 290+ 8FAB F1           	pop af
 291+ 8FAC C1           9 pop bc
 292+ 8FAD 1E 00        	ld e,0
 293+ 8FAF CD DF 8F         call Inicializacion
 294+ 8FB2 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 8FB3 08           	ex af,af
 296+ 8FB4 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 8FB5 18 8B            jr 3B
 298+ 8FB7
 299+ 8FB7              ; --------------------
 300+ 8FB7
 301+ 8FB7 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 8FB9 CD 46 91     1 call PreviousScan
 303+ 8FBC 10 FB            djnz 1B
 304+ 8FBE 22 8D 89     	ld (Posicion_actual),hl
 305+ 8FC1 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 8FC2 C9           	ret
 307+ 8FC3
 308+ 8FC3              ; --------------------
 309+ 8FC3
 310+ 8FC3 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 8FC5 CD 37 91     1 call NextScan
 312+ 8FC8 10 FB            djnz 1B
 313+ 8FCA 22 8D 89     	ld (Posicion_actual),hl
 314+ 8FCD AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 8FCE C9           	ret
 316+ 8FCF
 317+ 8FCF              ; --------------------
 318+ 8FCF              ;
 319+ 8FCF              ;	22/01/23
 320+ 8FCF              ;
 321+ 8FCF              ;	E="1". Hemos cambiado de cuadrante.
 322+ 8FCF              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 8FCF              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 8FCF
 325+ 8FCF
 326+ 8FCF              Modificaccionne
 327+ 8FCF
 328+ 8FCF 3A 9F 89     	ld a,(Cuad_objeto)
 329+ 8FD2 FE 02        	cp 2
 330+ 8FD4 CC B7 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 8FD7 DC B7 8F         call c,Modifica_Pos_actual
 332+ 8FDA C8           	ret z
 333+ 8FDB CD C3 8F         call Modifica_Pos_actual2
 334+ 8FDE C9               ret
 335+ 8FDF
 336+ 8FDF              ; *************************************************************************************************************************************************************************************************
 337+ 8FDF              ;
 338+ 8FDF              ;	13/8/22
 339+ 8FDF              ;
 340+ 8FDF              ;	Inicializacion
 341+ 8FDF              ;
 342+ 8FDF              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 8FDF              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 8FDF              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 8FDF              ;
 346+ 8FDF              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 8FDF              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 8FDF              ;	_ desaparece/aparece.
 349+ 8FDF
 350+ 8FDF              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 8FDF              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 8FDF              ;
 353+ 8FDF              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 8FDF              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 8FDF              ; 		   [E] ="0"
 356+ 8FDF
 357+ 8FDF              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 8FDF
 359+ 8FDF CD B0 99     Inicializacion call calcula_tercio
 360+ 8FE2 28 36        	jr z,primit
 361+ 8FE4 E6 02        	and 2
 362+ 8FE6 20 07        	jr nz,segmit
 363+ 8FE8 7D           	ld a,l
 364+ 8FE9 FE 7F        	cp $7f
 365+ 8FEB 38 2D        	jr c,primit
 366+ 8FED 28 2B        	jr z,primit
 367+ 8FEF CD 55 90     segmit call column
 368+ 8FF2 38 13        	jr c,tercuad
 369+ 8FF4 3E 04        cuarcuad ld a,4
 370+ 8FF6 32 9F 89     	ld (Cuad_objeto),a
 371+ 8FF9 21 20 48     	ld hl,$4820
 372+ 8FFC 22 AF 89     	ld (Limite_horizontal),hl
 373+ 8FFF 21 B1 89     	ld hl,Limite_vertical
 374+ 9002 36 0D        	ld (hl),$0d
 375+ 9004 08           	ex af,af
 376+ 9005 18 3C        	jr 1F
 377+ 9007              tercuad
 378+ 9007 3E 03        	ld a,3
 379+ 9009 32 9F 89     	ld (Cuad_objeto),a
 380+ 900C 21 20 48     	ld hl,$4820
 381+ 900F 22 AF 89     	ld (Limite_horizontal),hl
 382+ 9012 21 B1 89     	ld hl,Limite_vertical
 383+ 9015 36 12        	ld (hl),$12
 384+ 9017 08           	ex af,af
 385+ 9018 18 29        	jr 1F
 386+ 901A CD 55 90     primit call column
 387+ 901D 38 13        	jr c, primcuad
 388+ 901F              segcuad
 389+ 901F 3E 02        	ld a,2
 390+ 9021 32 9F 89     	ld (Cuad_objeto),a
 391+ 9024 21 C0 4F     	ld hl,$4fc0
 392+ 9027 22 AF 89     	ld (Limite_horizontal),hl
 393+ 902A 21 B1 89     	ld hl,Limite_vertical
 394+ 902D 36 0D        	ld (hl),$0d
 395+ 902F 08           	ex af,af
 396+ 9030 18 11        	jr 1F
 397+ 9032              primcuad
 398+ 9032 3E 01        	ld a,1
 399+ 9034 32 9F 89     	ld (Cuad_objeto),a
 400+ 9037 21 C0 4F     	ld hl,$4fc0
 401+ 903A 22 AF 89     	ld (Limite_horizontal),hl
 402+ 903D 21 B1 89     	ld hl,Limite_vertical
 403+ 9040 36 12        	ld (hl),$12
 404+ 9042 08           	ex af,af
 405+ 9043
 406+ 9043 C5           1 push bc
 407+ 9044 E5           	push hl
 408+ 9045 D5           	push de
 409+ 9046
 410+ 9046 2A 8D 89     	ld hl,(Posicion_actual)
 411+ 9049 CD CE 99     	call Genera_coordenadas
 412+ 904C
 413+ 904C D1           	pop de
 414+ 904D E1           	pop hl
 415+ 904E C1           	pop bc
 416+ 904F
 417+ 904F 21 AD 89     	ld hl,Ctrl_0
 418+ 9052 CB EE        	set 5,(hl)
 419+ 9054 C9           	ret
 420+ 9055
 421+ 9055              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9055
 423+ 9055              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9055              ;
 425+ 9055              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9055
 427+ 9055 7D           column ld a,l
 428+ 9056 E6 1F        	and $1f
 429+ 9058 FE 10         	cp $10
 430+ 905A C9            	ret
 431+ 905B
 432+ 905B              ; --------------------------------------------------------------------------------------------------------------------
 433+ 905B              ;
 434+ 905B              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 905B              ;
 436+ 905B              ; 14/12/22
 437+ 905B              ;
 438+ 905B              ;	Modifica: A y BC.
 439+ 905B
 440+ 905B 3A 9F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 905E E6 01        	and 1
 442+ 9060 28 17        	jr z,1F
 443+ 9062
 444+ 9062              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9062
 446+ 9062 3A 91 89     	ld a,(Coordenada_X)
 447+ 9065 47           	ld b,a
 448+ 9066 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9067 79           	ld a,c
 450+ 9068 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9069 38 08        	jr c,2F
 452+ 906B 47           	ld b,a
 453+ 906C 79           	ld a,c
 454+ 906D 90           	sub b
 455+ 906E 32 AE 89     	ld (Columnas),a
 456+ 9071 18 1B        	jr 4F
 457+ 9073 79           2 ld a,c
 458+ 9074 32 AE 89     	ld (Columnas),a
 459+ 9077 18 15        	jr 4F
 460+ 9079
 461+ 9079              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9079
 463+ 9079 3A 91 89     1 ld a,(Coordenada_X)
 464+ 907C 81           	add c
 465+ 907D 3D           	dec a
 466+ 907E D6 1F        	sub $1f
 467+ 9080 38 08        	jr c,3F
 468+ 9082 47           	ld b,a
 469+ 9083 79           	ld a,c
 470+ 9084 90           	sub b
 471+ 9085 32 AE 89     	ld (Columnas),a
 472+ 9088 18 04        	jr 4F
 473+ 908A 79           3 ld a,c
 474+ 908B 32 AE 89     	ld (Columnas),a
 475+ 908E D9           4 exx
 476+ 908F 4F           	ld c,a
 477+ 9090 D9           	exx
 478+ 9091 C9            ret
 479+ 9092
 480+ 9092              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9092              ;
 482+ 9092              ;   19/7/23
 483+ 9092              ;
 484+ 9092              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9092              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9092              ;
 487+ 9092              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9092              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9092              ;
 490+ 9092              ;	DESTRUYE: HL,B Y A.
 491+ 9092
 492+ 9092 3A 9F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9095 FE 02        	cp 2
 494+ 9097 38 18        	jr c,1F
 495+ 9099 28 16        	jr z,1F
 496+ 909B E6 01        	and 1
 497+ 909D 28 0D        	jr z,3F
 498+ 909F
 499+ 909F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 909F
 501+ 909F CD E5 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 90A2
 503+ 90A2 7D           9 ld a,l
 504+ 90A3 E6 1F        	and $1f
 505+ 90A5 28 2A        	jr z,7F
 506+ 90A7 2B           	dec hl
 507+ 90A8 10 F8        	djnz 9B
 508+ 90AA 18 25        	jr 7F
 509+ 90AC
 510+ 90AC              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 90AC
 512+ 90AC 2A 8D 89     3 ld hl,(Posicion_actual)
 513+ 90AF 18 20        	jr 7F
 514+ 90B1
 515+ 90B1 28 14        1 jr z,2F
 516+ 90B3
 517+ 90B3              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 90B3
 519+ 90B3 CD E5 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 90B6
 521+ 90B6 7D           4 ld a,l
 522+ 90B7 E6 1F        	and $1f
 523+ 90B9 28 03        	jr z,6F
 524+ 90BB 2B           	dec hl
 525+ 90BC 10 F8        	djnz 4B
 526+ 90BE 06 0F        6 ld b,15
 527+ 90C0 CD 46 91     5 call PreviousScan
 528+ 90C3 10 FB        	djnz 5B
 529+ 90C5 18 0A        	jr 7F
 530+ 90C7
 531+ 90C7              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 90C7
 533+ 90C7 CD E5 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 90CA 06 0F        	ld b,15
 535+ 90CC CD 46 91     8 call PreviousScan
 536+ 90CF 10 FB        	djnz 8B
 537+ 90D1
 538+ 90D1 E5           7 push hl
 539+ 90D2 DD E1        	pop ix
 540+ 90D4
 541+ 90D4 2A 8F 89     	ld hl,(Puntero_objeto)
 542+ 90D7 E5           	push hl
 543+ 90D8 FD E1        	pop iy
 544+ 90DA
 545+ 90DA              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 90DA
 547+ 90DA 3A AD 89     	ld a,(Ctrl_0)
 548+ 90DD CB 77        	bit 6,a
 549+ 90DF C8           	ret z
 550+ 90E0
 551+ 90E0              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 90E0              ; _ entidad / Amadeus´.
 553+ 90E0
 554+ 90E0 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 90E4
 556+ 90E4 C9           	ret
 557+ 90E5
 558+ 90E5              ; --------------------------------------------------------------------------------------------------------------------
 559+ 90E5              ;
 560+ 90E5              ;	2/1/23
 561+ 90E5              ;
 562+ 90E5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 90E5              ;
 564+ 90E5              ;	Tras esta rutina tenemos:
 565+ 90E5              ;
 566+ 90E5              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 90E5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 90E5              ;
 569+ 90E5              ;	DESTRUYE!!!!! HL,B y A.
 570+ 90E5
 571+ 90E5 2A 8D 89     Operandos ld hl,(Posicion_actual)
 572+ 90E8 3A AE 89     	ld a,(Columnas)
 573+ 90EB 3D           	dec a
 574+ 90EC 20 01        	jr nz,1F
 575+ 90EE 3C           	inc a
 576+ 90EF 47           1 ld b,a
 577+ 90F0 C9           	ret
 578+ 90F1
 579+ 90F1              ; --------------------------------------------------------------------------------------------------------------------
 580+ 90F1              ;
 581+ 90F1              ;	3/1/23
 582+ 90F1              ;
 583+ 90F1              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 90F1              ;
 585+ 90F1              ;	Destruye: A,B,HL y DE.
 586+ 90F1
 587+ 90F1              Define_rutina_de_impresion
 588+ 90F1
 589+ 90F1 3A 8C 89     	ld a,(Columns)
 590+ 90F4 47           	ld b,a
 591+ 90F5 3A AE 89     	ld a,(Columnas)
 592+ 90F8 B8           	cp b
 593+ 90F9 20 0D        	jr nz,2f
 594+ 90FB
 595+ 90FB              ;	La entidad se imprime entera.
 596+ 90FB
 597+ 90FB 21 98 91     	ld hl, Indice_entidades_completas
 598+ 90FE E6 01        	and 1
 599+ 9100 28 02        	jr z,1F
 600+ 9102
 601+ 9102 23           	inc hl
 602+ 9103 23           	inc hl
 603+ 9104
 604+ 9104 CD A9 8B     1 call Extrae_address
 605+ 9107 C9           	ret		;	ret
 606+ 9108
 607+ 9108              ;	La entidad no se imprime entera en pantalla.
 608+ 9108
 609+ 9108 3A 9F 89     2 ld a,(Cuad_objeto)
 610+ 910B E6 01        	and 1
 611+ 910D 28 17        	jr z,3F
 612+ 910F
 613+ 910F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 910F
 615+ 910F 21 9C 91     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9112 3A 8C 89     4 ld a,(Columns)
 617+ 9115 E6 01        	and 1
 618+ 9117 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 9119
 620+ 9119 23           	inc hl
 621+ 911A 23           	inc hl
 622+ 911B
 623+ 911B 3A AE 89     	ld a,(Columnas)
 624+ 911E E6 01        	and 1
 625+ 9120 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9122
 627+ 9122 23           	inc hl
 628+ 9123 23           	inc hl
 629+ 9124
 630+ 9124 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 9126
 632+ 9126 21 A2 91     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 9129 18 E7        	jr 4B
 634+ 912B
 635+ 912B              ; --------------------------------------------------------------------------------------------------------------------
 636+ 912B              ;
 637+ 912B              ;	Prepara_draw
 638+ 912B              ;
 639+ 912B              ;	Es una rutina de carga.
 640+ 912B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 912B              ;
 642+ 912B              ;	FUNCIONAMIENTO:
 643+ 912B              ;
 644+ 912B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 912B              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 912B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 912B              ;
 648+ 912B              ;	DESTRUYE:
 649+ 912B              ;
 650+ 912B              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 912B
 652+ 912B 21 8B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 912E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 912F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9130 4E           	ld c,(hl)
 656+ 9131 2A 8D 89     	ld hl,(Posicion_actual)
 657+ 9134 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9136 C9           	ret
 659+ 9137
 660+ 9137              ;----------------------------------------------------------------------------------------------------------------
 661+ 9137              ;
 662+ 9137              ;	5/08/22
 663+ 9137              ;
 664+ 9137              ;   NextScan.
 665+ 9137              ;
 666+ 9137              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 9137              ;
 668+ 9137              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 9137              ;
 670+ 9137              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9137              ;
 672+ 9137              ;       DESTRUIDOS: AF y HL !!!
 673+ 9137              ;
 674+ 9137              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9137              ;
 676+ 9137
 677+ 9137 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 9138 7C               ld a,h
 679+ 9139 E6 07            and 7
 680+ 913B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 913C
 682+ 913C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 913D C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 913F 6F               ld l,a
 685+ 9140 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9141
 687+ 9141 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9142 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9144 67               ld h,a
 690+ 9145 C9               ret
 691+ 9146
 692+ 9146              ;----------------------------------------------------------------------------------------------------------------
 693+ 9146              ;
 694+ 9146              ;	5/08/22
 695+ 9146              ;
 696+ 9146              ;   PreviousScan.
 697+ 9146              ;
 698+ 9146              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9146              ;
 700+ 9146              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9146              ;
 702+ 9146              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9146              ;
 704+ 9146              ;       DESTRUIDOS: AF y HL !!!
 705+ 9146              ;
 706+ 9146              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9146              ;
 708+ 9146
 709+ 9146 7C           PreviousScan ld a,h
 710+ 9147 25               dec h               ; Dec H.
 711+ 9148 E6 07            and 7
 712+ 914A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 914B
 714+ 914B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 914C D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 914E 6F               ld l,a
 717+ 914F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9150
 719+ 9150 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9151 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9153 67               ld h,a
 722+ 9154 C9               ret
 723+ 9155
 724+ 9155              ; -----------------------------------------------------------------------------------
 725+ 9155              ;
 726+ 9155              ;	31/7/23
 727+ 9155              ;
 728+ 9155              ;	Rutina principal de pintado de entidades.
 729+ 9155              ;	Extrae la foto del frame, (entidades).
 730+ 9155
 731+ 9155              Extrae_Scanlines_album
 732+ 9155
 733+ 9155 21 01 80     	ld hl,Scanlines_album+1
 734+ 9158 7E           	ld a,(hl)
 735+ 9159 A7           	and a
 736+ 915A C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 915B
 738+ 915B              ;	No hay datos, (entidades para pintar en este frame).
 739+ 915B
 740+ 915B 3A D8 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 915E A7           	and a
 742+ 915F C8           	ret z
 743+ 9160
 744+ 9160              ; -----------------------------------
 745+ 9160
 746+ 9160 ED 73 DD 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 9164 31 00 80     	ld sp,Scanlines_album
 748+ 9167
 749+ 9167 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9169 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 916A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 916B
 753+ 916B ED 73 DF 89  	ld (Stack_2),sp
 754+ 916F ED 7B DD 89  	ld sp,(Stack)
 755+ 9173
 756+ 9173              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9173
 758+ 9173 3E CD        	ld a,$cd
 759+ 9175 32 7D 91     	ld (Imprime),a
 760+ 9178 EB           	ex de,hl
 761+ 9179 22 7E 91     	ld (Imprime+1),hl
 762+ 917C EB           	ex de,hl
 763+ 917D
 764+ 917D              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 917D
 766+ 917D 00 00 00     Imprime db 0,0,0
 767+ 9180
 768+ 9180 ED 73 DD 89  	ld (Stack),sp
 769+ 9184
 770+ 9184 3A D8 89     	ld a,(Numero_de_malotes)
 771+ 9187 3D           	dec a
 772+ 9188 28 09        	jr z,1F
 773+ 918A 32 D8 89      	ld (Numero_de_malotes),a
 774+ 918D
 775+ 918D ED 7B DF 89  	ld sp,(Stack_2)
 776+ 9191 18 D4        	jr 2B
 777+ 9193
 778+ 9193 AF           1 xor a
 779+ 9194 32 DF 89     	ld (Stack_2),a
 780+ 9197
 781+ 9197 C9           	ret
 782+ 9198
 783+ 9198              ; -----------------------------------------------------------------------------------
 784+ 9198              ;
 785+ 9198              ;	28/2/23
 786+ 9198              ;
 787+ 9198              ;	Pinta los disparos generados.
 788+ 9198
 789+ 9198              ;Extrae_foto_disparos
 790+ 9198
 791+ 9198              ;	ld hl,Scanlines_album_disparos+1
 792+ 9198              ;    ld a,(hl)
 793+ 9198              ;    and a
 794+ 9198              ;    ret z
 795+ 9198
 796+ 9198              ;	ld a,(Numero_de_disparotes)
 797+ 9198              ;	and a
 798+ 9198              ;	ret z
 799+ 9198              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 9198              ;	ld sp,Scanlines_album_disparos
 801+ 9198
 802+ 9198              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9198              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9198              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9198
 806+ 9198              ;	ld (Stack_2),sp
 807+ 9198              ;	ld sp,(Stack)
 808+ 9198
 809+ 9198              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9198
 811+ 9198              ;	ld a,$cd
 812+ 9198              ;	ld (Imprime2),a
 813+ 9198              ;	ex de,hl
 814+ 9198              ;	ld (Imprime2+1),hl
 815+ 9198              ;	ex de,hl
 816+ 9198
 817+ 9198              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9198
 819+ 9198              ;Imprime2 db 0,0,0
 820+ 9198
 821+ 9198              ;	ld a,(Numero_de_disparotes)
 822+ 9198              ;	dec a
 823+ 9198              ;	jr z,1F
 824+ 9198              ; 	ld (Numero_de_disparotes),a
 825+ 9198
 826+ 9198              ;	ld sp,(Stack_2)
 827+ 9198              ;	jr 2B
 828+ 9198
 829+ 9198              ;1 xor a
 830+ 9198              ;	ld (Stack_2),a
 831+ 9198              ;	ret
 832+ 9198
 833+ 9198              ; -----------------------------------------------------------------------------------
 834+ 9198              ;
 835+ 9198              ;	4/9/23
 836+ 9198              ;
 837+ 9198              ;	Rutina principal de pintado de Amadeus.
 838+ 9198              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 9198
 840+ 9198              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 9198              ;	ld a,(hl)
 842+ 9198              ;	and a
 843+ 9198              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9198
 845+ 9198              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9198              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9198              ;	ret z
 848+ 9198
 849+ 9198              ; -----------------------------------
 850+ 9198
 851+ 9198              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 9198              ;	ld sp,Scanlines_album_Amadeus
 853+ 9198
 854+ 9198              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9198              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9198              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9198
 858+ 9198              ;	ld (Stack_2),sp
 859+ 9198              ;	ld sp,(Stack)
 860+ 9198
 861+ 9198              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9198
 863+ 9198              ;	ld a,$cd
 864+ 9198              ;	ld (Imprime_Amadeus),a
 865+ 9198              ;	ex de,hl
 866+ 9198              ;	ld (Imprime_Amadeus+1),hl
 867+ 9198              ;	ex de,hl
 868+ 9198
 869+ 9198              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9198
 871+ 9198              ;Imprime_Amadeus db 0,0,0
 872+ 9198
 873+ 9198              ;	ld (Stack),sp
 874+ 9198
 875+ 9198              ;	ld a,(Numero_de_malotes)
 876+ 9198              ;	dec a
 877+ 9198              ;	jr z,1F
 878+ 9198              ; 	ld (Numero_de_malotes),a
 879+ 9198
 880+ 9198              ;	ld sp,(Stack_2)
 881+ 9198              ;	jr 2B
 882+ 9198
 883+ 9198              ;1 xor a
 884+ 9198              ;	ld (Stack_2),a
 885+ 9198
 886+ 9198              ;	ret
 887+ 9198
 888+ 9198
 889+ 9198
 890+ 9198
 891+ 9198
 892+ 9198
# file closed: Draw_XOR.asm
1836  9198              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9198              ;   índices de Rutinas de impresión.
   2+ 9198
   3+ 9198 A8 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 919A 3C 92            defw Pinta_Amadeus_3x2
   5+ 919C
   6+ 919C 10 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 919E B0 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 91A0 64 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 91A2
  10+ 91A2 3A 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 91A4 3E 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 91A6 F2 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 91A8
  14+ 91A8
  15+ 91A8              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 91A8              ;
  17+ 91A8              ;   28/2/24
  18+ 91A8              ;
  19+ 91A8              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 91A8              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 91A8              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 91A8              ;
  23+ 91A8              ;   Modifica: AF,HL,BC y DE.
  24+ 91A8
  25+ 91A8              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 91A8
  27+ 91A8 D9               exx
  28+ 91A9 36 01            ld (hl),1
  29+ 91AB 2C               inc l
  30+ 91AC D9               exx
  31+ 91AD
  32+ 91AD FD E5            push iy
  33+ 91AF D1               pop de
  34+ 91B0
  35+ 91B0 ED 73 DD 89      ld (Stack),sp
  36+ 91B4 F9           	ld sp,hl
  37+ 91B5 06 10            ld b,16
  38+ 91B7
  39+ 91B7 E1               pop hl
  40+ 91B8 1A               ld a,(de)
  41+ 91B9 77               ld (hl),a
  42+ 91BA 1C           	inc e
  43+ 91BB 2C               inc l
  44+ 91BC 1A               ld a,(de)
  45+ 91BD 77               ld (hl),a
  46+ 91BE 1C               inc e
  47+ 91BF
  48+ 91BF E1               pop hl
  49+ 91C0 1A               ld a,(de)
  50+ 91C1 77               ld (hl),a
  51+ 91C2 1C           	inc e
  52+ 91C3 2C               inc l
  53+ 91C4 1A               ld a,(de)
  54+ 91C5 77               ld (hl),a
  55+ 91C6 1C               inc e
  56+ 91C7
  57+ 91C7 E1               pop hl
  58+ 91C8 1A               ld a,(de)
  59+ 91C9 77               ld (hl),a
  60+ 91CA 1C           	inc e
  61+ 91CB 2C               inc l
  62+ 91CC 1A               ld a,(de)
  63+ 91CD 77               ld (hl),a
  64+ 91CE 1C               inc e
  65+ 91CF
  66+ 91CF E1               pop hl
  67+ 91D0 1A               ld a,(de)
  68+ 91D1 77               ld (hl),a
  69+ 91D2 1C           	inc e
  70+ 91D3 2C               inc l
  71+ 91D4 1A               ld a,(de)
  72+ 91D5 77               ld (hl),a
  73+ 91D6 1C               inc e
  74+ 91D7
  75+ 91D7 E1               pop hl
  76+ 91D8 1A               ld a,(de)
  77+ 91D9 77               ld (hl),a
  78+ 91DA 1C           	inc e
  79+ 91DB 2C               inc l
  80+ 91DC 1A               ld a,(de)
  81+ 91DD 77               ld (hl),a
  82+ 91DE 1C               inc e
  83+ 91DF
  84+ 91DF E1               pop hl
  85+ 91E0 1A               ld a,(de)
  86+ 91E1 77               ld (hl),a
  87+ 91E2 1C           	inc e
  88+ 91E3 2C               inc l
  89+ 91E4 1A               ld a,(de)
  90+ 91E5 77               ld (hl),a
  91+ 91E6 1C               inc e
  92+ 91E7
  93+ 91E7 E1               pop hl
  94+ 91E8 1A               ld a,(de)
  95+ 91E9 77               ld (hl),a
  96+ 91EA 1C           	inc e
  97+ 91EB 2C               inc l
  98+ 91EC 1A               ld a,(de)
  99+ 91ED 77               ld (hl),a
 100+ 91EE 1C               inc e
 101+ 91EF
 102+ 91EF E1               pop hl
 103+ 91F0 1A               ld a,(de)
 104+ 91F1 77               ld (hl),a
 105+ 91F2 1C           	inc e
 106+ 91F3 2C               inc l
 107+ 91F4 1A               ld a,(de)
 108+ 91F5 77               ld (hl),a
 109+ 91F6 1C               inc e
 110+ 91F7
 111+ 91F7 E1               pop hl
 112+ 91F8 1A               ld a,(de)
 113+ 91F9 77               ld (hl),a
 114+ 91FA 1C           	inc e
 115+ 91FB 2C               inc l
 116+ 91FC 1A               ld a,(de)
 117+ 91FD 77               ld (hl),a
 118+ 91FE 1C               inc e
 119+ 91FF
 120+ 91FF E1               pop hl
 121+ 9200 1A               ld a,(de)
 122+ 9201 77               ld (hl),a
 123+ 9202 1C           	inc e
 124+ 9203 2C               inc l
 125+ 9204 1A               ld a,(de)
 126+ 9205 77               ld (hl),a
 127+ 9206 1C               inc e
 128+ 9207
 129+ 9207 E1               pop hl
 130+ 9208 1A               ld a,(de)
 131+ 9209 77               ld (hl),a
 132+ 920A 1C           	inc e
 133+ 920B 2C               inc l
 134+ 920C 1A               ld a,(de)
 135+ 920D 77               ld (hl),a
 136+ 920E 1C               inc e
 137+ 920F
 138+ 920F E1               pop hl
 139+ 9210 1A               ld a,(de)
 140+ 9211 77               ld (hl),a
 141+ 9212 1C           	inc e
 142+ 9213 2C               inc l
 143+ 9214 1A               ld a,(de)
 144+ 9215 77               ld (hl),a
 145+ 9216 1C               inc e
 146+ 9217
 147+ 9217 E1               pop hl
 148+ 9218 1A               ld a,(de)
 149+ 9219 77               ld (hl),a
 150+ 921A 1C           	inc e
 151+ 921B 2C               inc l
 152+ 921C 1A               ld a,(de)
 153+ 921D 77               ld (hl),a
 154+ 921E 1C               inc e
 155+ 921F
 156+ 921F E1               pop hl
 157+ 9220 1A               ld a,(de)
 158+ 9221 77               ld (hl),a
 159+ 9222 1C           	inc e
 160+ 9223 2C               inc l
 161+ 9224 1A               ld a,(de)
 162+ 9225 77               ld (hl),a
 163+ 9226 1C               inc e
 164+ 9227
 165+ 9227 E1               pop hl
 166+ 9228 1A               ld a,(de)
 167+ 9229 77               ld (hl),a
 168+ 922A 1C           	inc e
 169+ 922B 2C               inc l
 170+ 922C 1A               ld a,(de)
 171+ 922D 77               ld (hl),a
 172+ 922E 1C               inc e
 173+ 922F
 174+ 922F E1               pop hl
 175+ 9230 1A               ld a,(de)
 176+ 9231 77               ld (hl),a
 177+ 9232 1C           	inc e
 178+ 9233 2C               inc l
 179+ 9234 1A               ld a,(de)
 180+ 9235 77               ld (hl),a
 181+ 9236 1C               inc e
 182+ 9237
 183+ 9237 ED 7B DD 89      ld sp,(Stack)
 184+ 923B
 185+ 923B C9           	ret
 186+ 923C
 187+ 923C              Pinta_Amadeus_3x2
 188+ 923C
 189+ 923C D9               exx
 190+ 923D 36 02            ld (hl),2
 191+ 923F 2C               inc l
 192+ 9240 D9               exx
 193+ 9241
 194+ 9241 FD E5            push iy
 195+ 9243 D1               pop de
 196+ 9244
 197+ 9244 ED 73 DD 89      ld (Stack),sp
 198+ 9248 F9               ld sp,hl
 199+ 9249 06 10            ld b,16
 200+ 924B
 201+ 924B E1               pop hl
 202+ 924C 1A               ld a,(de)
 203+ 924D 77               ld (hl),a
 204+ 924E 1C               inc e
 205+ 924F 2C               inc l
 206+ 9250 1A               ld a,(de)
 207+ 9251 77               ld (hl),a
 208+ 9252 1C               inc e
 209+ 9253 2C               inc l
 210+ 9254 1A               ld a,(de)
 211+ 9255 77               ld (hl),a
 212+ 9256 1C               inc e
 213+ 9257
 214+ 9257 E1               pop hl
 215+ 9258 1A               ld a,(de)
 216+ 9259 77               ld (hl),a
 217+ 925A 1C               inc e
 218+ 925B 2C               inc l
 219+ 925C 1A               ld a,(de)
 220+ 925D 77               ld (hl),a
 221+ 925E 1C               inc e
 222+ 925F 2C               inc l
 223+ 9260 1A               ld a,(de)
 224+ 9261 77               ld (hl),a
 225+ 9262 1C               inc e
 226+ 9263
 227+ 9263 E1               pop hl
 228+ 9264 1A               ld a,(de)
 229+ 9265 77               ld (hl),a
 230+ 9266 1C               inc e
 231+ 9267 2C               inc l
 232+ 9268 1A               ld a,(de)
 233+ 9269 77               ld (hl),a
 234+ 926A 1C               inc e
 235+ 926B 2C               inc l
 236+ 926C 1A               ld a,(de)
 237+ 926D 77               ld (hl),a
 238+ 926E 1C               inc e
 239+ 926F
 240+ 926F E1               pop hl
 241+ 9270 1A               ld a,(de)
 242+ 9271 77               ld (hl),a
 243+ 9272 1C               inc e
 244+ 9273 2C               inc l
 245+ 9274 1A               ld a,(de)
 246+ 9275 77               ld (hl),a
 247+ 9276 1C               inc e
 248+ 9277 2C               inc l
 249+ 9278 1A               ld a,(de)
 250+ 9279 77               ld (hl),a
 251+ 927A 1C               inc e
 252+ 927B
 253+ 927B E1               pop hl
 254+ 927C 1A               ld a,(de)
 255+ 927D 77               ld (hl),a
 256+ 927E 1C               inc e
 257+ 927F 2C               inc l
 258+ 9280 1A               ld a,(de)
 259+ 9281 77               ld (hl),a
 260+ 9282 1C               inc e
 261+ 9283 2C               inc l
 262+ 9284 1A               ld a,(de)
 263+ 9285 77               ld (hl),a
 264+ 9286 1C               inc e
 265+ 9287
 266+ 9287 E1               pop hl
 267+ 9288 1A               ld a,(de)
 268+ 9289 77               ld (hl),a
 269+ 928A 1C               inc e
 270+ 928B 2C               inc l
 271+ 928C 1A               ld a,(de)
 272+ 928D 77               ld (hl),a
 273+ 928E 1C               inc e
 274+ 928F 2C               inc l
 275+ 9290 1A               ld a,(de)
 276+ 9291 77               ld (hl),a
 277+ 9292 1C               inc e
 278+ 9293
 279+ 9293 E1               pop hl
 280+ 9294 1A               ld a,(de)
 281+ 9295 77               ld (hl),a
 282+ 9296 1C               inc e
 283+ 9297 2C               inc l
 284+ 9298 1A               ld a,(de)
 285+ 9299 77               ld (hl),a
 286+ 929A 1C               inc e
 287+ 929B 2C               inc l
 288+ 929C 1A               ld a,(de)
 289+ 929D 77               ld (hl),a
 290+ 929E 1C               inc e
 291+ 929F
 292+ 929F E1               pop hl
 293+ 92A0 1A               ld a,(de)
 294+ 92A1 77               ld (hl),a
 295+ 92A2 1C               inc e
 296+ 92A3 2C               inc l
 297+ 92A4 1A               ld a,(de)
 298+ 92A5 77               ld (hl),a
 299+ 92A6 1C               inc e
 300+ 92A7 2C               inc l
 301+ 92A8 1A               ld a,(de)
 302+ 92A9 77               ld (hl),a
 303+ 92AA 1C               inc e
 304+ 92AB
 305+ 92AB E1               pop hl
 306+ 92AC 1A               ld a,(de)
 307+ 92AD 77               ld (hl),a
 308+ 92AE 1C               inc e
 309+ 92AF 2C               inc l
 310+ 92B0 1A               ld a,(de)
 311+ 92B1 77               ld (hl),a
 312+ 92B2 1C               inc e
 313+ 92B3 2C               inc l
 314+ 92B4 1A               ld a,(de)
 315+ 92B5 77               ld (hl),a
 316+ 92B6 1C               inc e
 317+ 92B7
 318+ 92B7 E1               pop hl
 319+ 92B8 1A               ld a,(de)
 320+ 92B9 77               ld (hl),a
 321+ 92BA 1C               inc e
 322+ 92BB 2C               inc l
 323+ 92BC 1A               ld a,(de)
 324+ 92BD 77               ld (hl),a
 325+ 92BE 1C               inc e
 326+ 92BF 2C               inc l
 327+ 92C0 1A               ld a,(de)
 328+ 92C1 77               ld (hl),a
 329+ 92C2 1C               inc e
 330+ 92C3
 331+ 92C3 E1               pop hl
 332+ 92C4 1A               ld a,(de)
 333+ 92C5 77               ld (hl),a
 334+ 92C6 1C               inc e
 335+ 92C7 2C               inc l
 336+ 92C8 1A               ld a,(de)
 337+ 92C9 77               ld (hl),a
 338+ 92CA 1C               inc e
 339+ 92CB 2C               inc l
 340+ 92CC 1A               ld a,(de)
 341+ 92CD 77               ld (hl),a
 342+ 92CE 1C               inc e
 343+ 92CF
 344+ 92CF E1               pop hl
 345+ 92D0 1A               ld a,(de)
 346+ 92D1 77               ld (hl),a
 347+ 92D2 1C               inc e
 348+ 92D3 2C               inc l
 349+ 92D4 1A               ld a,(de)
 350+ 92D5 77               ld (hl),a
 351+ 92D6 1C               inc e
 352+ 92D7 2C               inc l
 353+ 92D8 1A               ld a,(de)
 354+ 92D9 77               ld (hl),a
 355+ 92DA 1C               inc e
 356+ 92DB
 357+ 92DB E1               pop hl
 358+ 92DC 1A               ld a,(de)
 359+ 92DD 77               ld (hl),a
 360+ 92DE 1C               inc e
 361+ 92DF 2C               inc l
 362+ 92E0 1A               ld a,(de)
 363+ 92E1 77               ld (hl),a
 364+ 92E2 1C               inc e
 365+ 92E3 2C               inc l
 366+ 92E4 1A               ld a,(de)
 367+ 92E5 77               ld (hl),a
 368+ 92E6 1C               inc e
 369+ 92E7
 370+ 92E7 E1               pop hl
 371+ 92E8 1A               ld a,(de)
 372+ 92E9 77               ld (hl),a
 373+ 92EA 1C               inc e
 374+ 92EB 2C               inc l
 375+ 92EC 1A               ld a,(de)
 376+ 92ED 77               ld (hl),a
 377+ 92EE 1C               inc e
 378+ 92EF 2C               inc l
 379+ 92F0 1A               ld a,(de)
 380+ 92F1 77               ld (hl),a
 381+ 92F2 1C               inc e
 382+ 92F3
 383+ 92F3 E1               pop hl
 384+ 92F4 1A               ld a,(de)
 385+ 92F5 77               ld (hl),a
 386+ 92F6 1C               inc e
 387+ 92F7 2C               inc l
 388+ 92F8 1A               ld a,(de)
 389+ 92F9 77               ld (hl),a
 390+ 92FA 1C               inc e
 391+ 92FB 2C               inc l
 392+ 92FC 1A               ld a,(de)
 393+ 92FD 77               ld (hl),a
 394+ 92FE 1C               inc e
 395+ 92FF
 396+ 92FF E1               pop hl
 397+ 9300 1A               ld a,(de)
 398+ 9301 77               ld (hl),a
 399+ 9302 1C               inc e
 400+ 9303 2C               inc l
 401+ 9304 1A               ld a,(de)
 402+ 9305 77               ld (hl),a
 403+ 9306 1C               inc e
 404+ 9307 2C               inc l
 405+ 9308 1A               ld a,(de)
 406+ 9309 77               ld (hl),a
 407+ 930A 1C               inc e
 408+ 930B
 409+ 930B ED 7B DD 89      ld sp,(Stack)
 410+ 930F
 411+ 930F C9               ret
 412+ 9310
 413+ 9310              ; ---------------------------------------------------
 414+ 9310
 415+ 9310 ED 73 DD 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 9314 FD F9        	ld sp,iy
 417+ 9316
 418+ 9316              ; >>>
 419+ 9316
 420+ 9316 06 10            ld b,16
 421+ 9318 D1           1 pop de
 422+ 9319 7A           	ld a,d
 423+ 931A AE           	xor (hl)
 424+ 931B 77           	ld (hl),a
 425+ 931C 24           	inc h
 426+ 931D 7C               ld a,h
 427+ 931E E6 07            and 7
 428+ 9320 20 0C            jr nz,2F
 429+ 9322 7D               ld a,l
 430+ 9323 C6 20            add a,$20
 431+ 9325 6F               ld l,a
 432+ 9326 38 06            jr c,2F
 433+ 9328 7C               ld a,h
 434+ 9329 D6 08            sub 8
 435+ 932B 67               ld h,a
 436+ 932C 18 00            jr 2F
 437+ 932E 7C           2 ld a,h
 438+ 932F FE 58            cp $58
 439+ 9331 28 02            jr z,3F
 440+ 9333 10 E3            djnz 1B
 441+ 9335 ED 7B DD 89  3 ld sp,(Stack)
 442+ 9339 C9           	ret
 443+ 933A
 444+ 933A ED 73 DD 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 933E FD F9        	ld sp,iy
 446+ 9340
 447+ 9340              ; >>>
 448+ 9340
 449+ 9340 06 10            ld b,16
 450+ 9342 D1           1 pop de
 451+ 9343 7B           	ld a,e
 452+ 9344 AE           	xor (hl)
 453+ 9345 77           	ld (hl),a
 454+ 9346 24           	inc h
 455+ 9347 7C               ld a,h
 456+ 9348 E6 07            and 7
 457+ 934A 20 0C            jr nz,2F
 458+ 934C 7D               ld a,l
 459+ 934D C6 20            add a,$20
 460+ 934F 6F               ld l,a
 461+ 9350 38 06            jr c,2F
 462+ 9352 7C               ld a,h
 463+ 9353 D6 08            sub 8
 464+ 9355 67               ld h,a
 465+ 9356 18 00            jr 2F
 466+ 9358 7C           2 ld a,h
 467+ 9359 FE 58            cp $58
 468+ 935B 28 02            jr z,3F
 469+ 935D 10 E3            djnz 1B
 470+ 935F ED 7B DD 89  3 ld sp,(Stack)
 471+ 9363 C9           	ret
 472+ 9364
 473+ 9364              ; ---------------------------------------------------
 474+ 9364
 475+ 9364 ED 73 DD 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 9368 FD F9        	ld sp,iy
 477+ 936A 06 08            ld b,8
 478+ 936C D1           1 pop de
 479+ 936D 7A           	ld a,d
 480+ 936E AE           	xor (hl)
 481+ 936F 77           	ld (hl),a
 482+ 9370 23           	inc hl
 483+ 9371 D1           	pop de
 484+ 9372 7B           	ld a,e
 485+ 9373 AE           	xor (hl)
 486+ 9374 77           	ld (hl),a
 487+ 9375 2B           	dec hl
 488+ 9376 24            	inc h
 489+ 9377 7C               ld a,h
 490+ 9378 E6 07            and 7
 491+ 937A 20 0A            jr nz,2F
 492+ 937C 7D               ld a,l
 493+ 937D C6 20            add a,$20
 494+ 937F 6F               ld l,a
 495+ 9380 38 04            jr c,2F
 496+ 9382 7C               ld a,h
 497+ 9383 D6 08            sub 8
 498+ 9385 67               ld h,a
 499+ 9386 7C           2 ld a,h
 500+ 9387 FE 58            cp $58
 501+ 9389 28 20            jr z,4F
 502+ 938B D1               pop de
 503+ 938C 7B           	ld a,e
 504+ 938D AE           	xor (hl)
 505+ 938E 77           	ld (hl),a
 506+ 938F 23           	inc hl
 507+ 9390 7A           	ld a,d
 508+ 9391 AE           	xor (hl)
 509+ 9392 77           	ld (hl),a
 510+ 9393 2B           	dec hl
 511+ 9394 24           	inc h
 512+ 9395 7C               ld a,h
 513+ 9396 E6 07            and 7
 514+ 9398 20 0A            jr nz,3F
 515+ 939A 7D               ld a,l
 516+ 939B C6 20            add a,$20
 517+ 939D 6F               ld l,a
 518+ 939E 38 04            jr c,3F
 519+ 93A0 7C               ld a,h
 520+ 93A1 D6 08            sub 8
 521+ 93A3 67               ld h,a
 522+ 93A4 7C           3 ld a,h
 523+ 93A5 FE 58            cp $58
 524+ 93A7 28 02            jr z,4F
 525+ 93A9 10 C1            djnz 1B
 526+ 93AB ED 7B DD 89  4 ld sp,(Stack)
 527+ 93AF C9           	ret
 528+ 93B0
 529+ 93B0 ED 73 DD 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 93B4 FD F9        	ld sp,iy
 531+ 93B6 06 08            ld b,8
 532+ 93B8 D1           1 pop de
 533+ 93B9 D1           	pop de
 534+ 93BA 7B           	ld a,e
 535+ 93BB AE           	xor (hl)
 536+ 93BC 77           	ld (hl),a
 537+ 93BD 24            	inc h
 538+ 93BE 7C               ld a,h
 539+ 93BF E6 07            and 7
 540+ 93C1 20 0A            jr nz,2F
 541+ 93C3 7D               ld a,l
 542+ 93C4 C6 20            add a,$20
 543+ 93C6 6F               ld l,a
 544+ 93C7 38 04            jr c,2F
 545+ 93C9 7C               ld a,h
 546+ 93CA D6 08            sub 8
 547+ 93CC 67               ld h,a
 548+ 93CD 7C           2 ld a,h
 549+ 93CE FE 58            cp $58
 550+ 93D0 28 1B            jr z,4F
 551+ 93D2 D1               pop de
 552+ 93D3 7A           	ld a,d
 553+ 93D4 AE           	xor (hl)
 554+ 93D5 77           	ld (hl),a
 555+ 93D6 24           	inc h
 556+ 93D7 7C               ld a,h
 557+ 93D8 E6 07            and 7
 558+ 93DA 20 0A            jr nz,3F
 559+ 93DC 7D               ld a,l
 560+ 93DD C6 20            add a,$20
 561+ 93DF 6F               ld l,a
 562+ 93E0 38 04            jr c,3F
 563+ 93E2 7C               ld a,h
 564+ 93E3 D6 08            sub 8
 565+ 93E5 67               ld h,a
 566+ 93E6 7C           3 ld a,h
 567+ 93E7 FE 58            cp $58
 568+ 93E9 28 02            jr z,4F
 569+ 93EB 10 CB            djnz 1B
 570+ 93ED ED 7B DD 89  4 ld sp,(Stack)
 571+ 93F1 C9           	ret
 572+ 93F2
 573+ 93F2 ED 73 DD 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 93F6 FD F9        	ld sp,iy
 575+ 93F8 06 08            ld b,8
 576+ 93FA D1           1 pop de
 577+ 93FB 7B           	ld a,e
 578+ 93FC AE           	xor (hl)
 579+ 93FD 77           	ld (hl),a
 580+ 93FE 23           	inc hl
 581+ 93FF 7A           	ld a,d
 582+ 9400 AE           	xor (hl)
 583+ 9401 77           	ld (hl),a
 584+ 9402 2B           	dec hl
 585+ 9403 24             	inc h
 586+ 9404 7C               ld a,h
 587+ 9405 E6 07            and 7
 588+ 9407 20 0A            jr nz,2F
 589+ 9409 7D               ld a,l
 590+ 940A C6 20            add a,$20
 591+ 940C 6F               ld l,a
 592+ 940D 38 04            jr c,2F
 593+ 940F 7C               ld a,h
 594+ 9410 D6 08            sub 8
 595+ 9412 67               ld h,a
 596+ 9413 7C           2 ld a,h
 597+ 9414 FE 58            cp $58
 598+ 9416 28 21            jr z,4F
 599+ 9418 D1               pop de
 600+ 9419 7A           	ld a,d
 601+ 941A AE           	xor (hl)
 602+ 941B 77           	ld (hl),a
 603+ 941C 23           	inc hl
 604+ 941D D1               pop de
 605+ 941E 7B           	ld a,e
 606+ 941F AE           	xor (hl)
 607+ 9420 77           	ld (hl),a
 608+ 9421 2B           	dec hl
 609+ 9422 24           	inc h
 610+ 9423 7C               ld a,h
 611+ 9424 E6 07            and 7
 612+ 9426 20 0A            jr nz,3F
 613+ 9428 7D               ld a,l
 614+ 9429 C6 20            add a,$20
 615+ 942B 6F               ld l,a
 616+ 942C 38 04            jr c,3F
 617+ 942E 7C               ld a,h
 618+ 942F D6 08            sub 8
 619+ 9431 67               ld h,a
 620+ 9432 7C           3 ld a,h
 621+ 9433 FE 58            cp $58
 622+ 9435 28 02            jr z,4F
 623+ 9437 10 C1            djnz 1B
 624+ 9439 ED 7B DD 89  4 ld sp,(Stack)
 625+ 943D C9           	ret
 626+ 943E
 627+ 943E ED 73 DD 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 9442 FD F9        	ld sp,iy
 629+ 9444 06 08            ld b,8
 630+ 9446 D1           1 pop de
 631+ 9447 7B           	ld a,e
 632+ 9448 AE           	xor (hl)
 633+ 9449 77           	ld (hl),a
 634+ 944A 24            	inc h
 635+ 944B 7C               ld a,h
 636+ 944C E6 07            and 7
 637+ 944E 20 0A            jr nz,2F
 638+ 9450 7D               ld a,l
 639+ 9451 C6 20            add a,$20
 640+ 9453 6F               ld l,a
 641+ 9454 38 04            jr c,2F
 642+ 9456 7C               ld a,h
 643+ 9457 D6 08            sub 8
 644+ 9459 67               ld h,a
 645+ 945A 7C           2 ld a,h
 646+ 945B FE 58            cp $58
 647+ 945D 28 1C            jr z,4F
 648+ 945F D1               pop de
 649+ 9460 7A           	ld a,d
 650+ 9461 AE           	xor (hl)
 651+ 9462 77           	ld (hl),a
 652+ 9463 24           	inc h
 653+ 9464 7C               ld a,h
 654+ 9465 E6 07            and 7
 655+ 9467 20 0A            jr nz,3F
 656+ 9469 7D               ld a,l
 657+ 946A C6 20            add a,$20
 658+ 946C 6F               ld l,a
 659+ 946D 38 04            jr c,3F
 660+ 946F 7C               ld a,h
 661+ 9470 D6 08            sub 8
 662+ 9472 67               ld h,a
 663+ 9473 7C           3 ld a,h
 664+ 9474 FE 58            cp $58
 665+ 9476 28 03            jr z,4F
 666+ 9478 D1               pop de
 667+ 9479 10 CB            djnz 1B
 668+ 947B ED 7B DD 89  4 ld sp,(Stack)
 669+ 947F C9           	ret
 670+ 9480
 671+ 9480              ; ---------------------------------------------------
 672+ 9480              ;
 673+ 9480              ;   27/02/23
 674+ 9480              ;
 675+ 9480              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 9480              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 9480              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 9480
 679+ 9480 ED 73 DD 89  Pinta_Disparo ld (Stack),sp
 680+ 9484 FD F9            ld sp,iy
 681+ 9486 06 03            ld b,3
 682+ 9488 D1           1 pop de
 683+ 9489 7B               ld a,e
 684+ 948A AE               xor (hl)
 685+ 948B 77               ld (hl),a
 686+ 948C 23               inc hl
 687+ 948D 7A               ld a,d
 688+ 948E AE               xor (hl)
 689+ 948F 77               ld (hl),a
 690+ 9490 2B               dec hl
 691+ 9491
 692+ 9491 24               inc h
 693+ 9492 7C               ld a,h
 694+ 9493 E6 07            and 7
 695+ 9495 20 0A            jr nz,2F
 696+ 9497 7D               ld a,l
 697+ 9498 C6 20            add a,$20
 698+ 949A 6F               ld l,a
 699+ 949B 38 04            jr c,2F
 700+ 949D 7C               ld a,h
 701+ 949E D6 08            sub 8
 702+ 94A0 67               ld h,a
 703+ 94A1 7C           2 ld a,h
 704+ 94A2 FE 58            cp $58
 705+ 94A4 28 02            jr z,3F
 706+ 94A6
 707+ 94A6 10 E0            djnz 1B
 708+ 94A8 ED 7B DD 89  3 ld sp,(Stack)
 709+ 94AC C9               ret
 710+ 94AD
# file closed: Rutinas_de_impresion_sprites.asm
1837  94AD              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 94AD
   2+ 94AD              ; ******************************************************************************************************************************************************************************************
   3+ 94AD              ;
   4+ 94AD              ;   20/05/23
   5+ 94AD              ;
   6+ 94AD              ;	Recompone_posicion_inicio
   7+ 94AD              ;
   8+ 94AD              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 94AD              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 94AD              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 94AD              ;	_ a una u otra rutina.
  12+ 94AD
  13+ 94AD              Recompone_posicion_inicio
  14+ 94AD
  15+ 94AD 2A 9D 89     	ld hl,(Posicion_inicio)
  16+ 94B0 7D           	ld a,l
  17+ 94B1 E6 1F        	and $1f
  18+ 94B3 28 16        	jr z,1F
  19+ 94B5
  20+ 94B5 FE 1F        	cp $1f
  21+ 94B7 28 0D        	jr z,3F
  22+ 94B9
  23+ 94B9 21 B2 89     	ld hl,Ctrl_2
  24+ 94BC CB C6        	set 0,(hl)
  25+ 94BE 2A 8F 89     	ld hl,(Puntero_objeto)
  26+ 94C1 22 CD 89     	ld (Repone_puntero_objeto),hl
  27+ 94C4 18 08        	jr 2F
  28+ 94C6
  29+ 94C6 CD 74 96     3 call Mov_left
  30+ 94C9 18 03        	jr 2F
  31+ 94CB
  32+ 94CB CD 51 95     1 call Mov_right
  33+ 94CE 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 94D1 22 8F 89     	ld (Puntero_objeto),hl
  35+ 94D4 C9           	ret
  36+ 94D5
  37+ 94D5              ; ******************************************************************************************************************************************************************************************
  38+ 94D5              ;
  39+ 94D5              ;   27/05/23
  40+ 94D5              ;
  41+ 94D5              ;	Mov_down
  42+ 94D5              ;
  43+ 94D5              ; 	Mueve el Sprite X px hacia abajo.
  44+ 94D5              ;
  45+ 94D5              ;
  46+ 94D5              Mov_down
  47+ 94D5
  48+ 94D5 CD 3F 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 94D8              ;																	; _ repone (Puntero_objeto).
  50+ 94D8 21 AD 89     	ld hl,Ctrl_0
  51+ 94DB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 94DD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 94DD              ; 																	; _ en el caso de que no lo haya.
  54+ 94DD 3A B7 89     	ld a,(Vel_down)
  55+ 94E0 47           	ld b,a
  56+ 94E1 2A 8D 89         ld hl,(Posicion_actual)
  57+ 94E4 CD B0 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 94E7 E6 02        	and 2
  59+ 94E9 28 17        	jr z,1F
  60+ 94EB
  61+ 94EB              ; Nos encontramos en el último tercio de pantalla.
  62+ 94EB              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 94EB
  64+ 94EB 7C           	ld a,h
  65+ 94EC FE 57        	cp $57
  66+ 94EE 20 12        	jr nz,1F
  67+ 94F0
  68+ 94F0 7D           	ld a,l
  69+ 94F1 C6 20        	add $20
  70+ 94F3 30 0D        	jr nc,1F
  71+ 94F5
  72+ 94F5              ; ------------------------------
  73+ 94F5              ;
  74+ 94F5              ;	12/01/24
  75+ 94F5
  76+ 94F5              ;	call Reaparece_arriba
  77+ 94F5 CD 01 98     	call Reinicio
  78+ 94F8
  79+ 94F8              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 94F8
  81+ 94F8 3A ED 89     	ld a,(Ctrl_3)
  82+ 94FB CB CF        	set 1,a
  83+ 94FD 32 ED 89     	ld (Ctrl_3),a
  84+ 9500
  85+ 9500 18 08        	jr 3F
  86+ 9502              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9502              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9502              ; ------------------------------
  89+ 9502
  90+ 9502 CD 37 91     1 call NextScan
  91+ 9505 22 8D 89     	ld (Posicion_actual),hl
  92+ 9508 10 DA            djnz 2B
  93+ 950A CD CE 99     3 call Genera_coordenadas
  94+ 950D C9           	ret
  95+ 950E
  96+ 950E              ; ******************************************************************************************************************************************************************************************
  97+ 950E              ;
  98+ 950E              ;   27/05/23
  99+ 950E              ;
 100+ 950E              ;	Mov_up
 101+ 950E              ;
 102+ 950E              ; 	Mueve el Sprite hacia arriba.
 103+ 950E              ;
 104+ 950E              ;
 105+ 950E              Mov_up
 106+ 950E
 107+ 950E CD 3F 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9511              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9511 21 AD 89     	ld hl,Ctrl_0
 110+ 9514 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9516              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9516              ; 																		; _ en el caso de que no lo haya.
 113+ 9516 3A B6 89     	ld a,(Vel_up)
 114+ 9519 47           	ld b,a
 115+ 951A 2A 8D 89     	ld hl,(Posicion_actual)
 116+ 951D CD B0 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9520 A7           	and a
 118+ 9521 20 10        	jr nz,1F
 119+ 9523
 120+ 9523              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9523              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9523
 123+ 9523 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9524 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9526 20 0B            jr nz,1F
 126+ 9528 7D               ld a,l
 127+ 9529 D6 20            sub $20
 128+ 952B 30 06            jr nc,1F
 129+ 952D 25               dec h
 130+ 952E
 131+ 952E              ; -----------------------------
 132+ 952E CD E2 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9531              ;	call Reinicio
 134+ 9531              ; -----------------------------
 135+ 9531
 136+ 9531 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9533 CD 46 91     1 call PreviousScan
 138+ 9536 22 8D 89     	ld (Posicion_actual),hl
 139+ 9539 10 E2            djnz 3B
 140+ 953B CD CE 99     2 call Genera_coordenadas
 141+ 953E C9           	ret
 142+ 953F
 143+ 953F              ; -----------------------------
 144+ 953F              ;
 145+ 953F              ;	27/5/23
 146+ 953F              ;
 147+ 953F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 953F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 953F              ;
 150+ 953F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 953F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 953F              ;
 153+ 953F              ;	Modifica: A y (Puntero_objeto).
 154+ 953F
 155+ 953F 3A B2 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9542 CB 47        	bit 0,a
 157+ 9544 C8           	ret z
 158+ 9545 CB 87        	res 0,a
 159+ 9547 32 B2 89     	ld (Ctrl_2),a
 160+ 954A 2A CD 89     	ld hl,(Repone_puntero_objeto)
 161+ 954D 22 8F 89     	ld (Puntero_objeto),hl
 162+ 9550 C9           	ret
 163+ 9551
 164+ 9551              ; ******************************************************************************************************************************************************************************************
 165+ 9551              ;
 166+ 9551              ;	19/10/22
 167+ 9551              ;
 168+ 9551              ;	Mov_right.
 169+ 9551              ;
 170+ 9551              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9551              ;
 172+ 9551
 173+ 9551 3A AD 89     Mov_right ld a,(Ctrl_0)
 174+ 9554 CB 77        	bit 6,a
 175+ 9556 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9558
 177+ 9558 CD 90 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 955B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 955C
 180+ 955C 21 AD 89     	ld hl,Ctrl_0
 181+ 955F CB E6        	set 4,(hl)
 182+ 9561 18 52        	jr 8F
 183+ 9563
 184+ 9563 21 AD 89     10 ld hl,Ctrl_0
 185+ 9566 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9568              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9568              ; 																	; _ en el caso de que no lo haya.
 188+ 9568 3A 91 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 956B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 956D 20 46        	jr nz,8F
 191+ 956F
 192+ 956F 3A 93 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9572 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9573 28 40        	jr z,8F
 195+ 9575
 196+ 9575              ; ---------- ---------- ----------
 197+ 9575              ;
 198+ 9575              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9575
 200+ 9575 3A B5 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9578 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 957A 28 11        	jr z,1F
 203+ 957C 38 06        	jr c,6F
 204+ 957E FE 04        	cp 4
 205+ 9580 28 14        	jr z,7F
 206+ 9582 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9584
 208+ 9584              ; ---------- ---------- ----------
 209+ 9584              ;
 210+ 9584              ; Perfiles de velocidad
 211+ 9584              ;
 212+ 9584
 213+ 9584 3A 93 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9587 FE FE        	cp $fe
 215+ 9589 20 2A        	jr nz,8F
 216+ 958B 18 10        	jr 3F
 217+ 958D 3A 93 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9590 FE FD        	cp $fd
 219+ 9592 20 21        	jr nz,8F
 220+ 9594 18 07        	jr 3F
 221+ 9596 3A 93 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9599 FE FB        	cp $fb
 223+ 959B 20 18        	jr nz,8F
 224+ 959D
 225+ 959D              ; ---------- ---------- ----------
 226+ 959D
 227+ 959D              3
 228+ 959D CD D0 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95A0              ;	call Reinicio
 230+ 95A0
 231+ 95A0              ; ---------- ---------- ----------
 232+ 95A0              ;
 233+ 95A0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95A0
 235+ 95A0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 95A2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 95A3 CD BC 95     	call DESPLZ_DER
 238+ 95A6 C1           	pop bc
 239+ 95A7 10 F9        	djnz 5B
 240+ 95A9 2A 8D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 95AC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 95AD 22 8D 89     	ld (Posicion_actual),hl
 243+ 95B0 CD CE 99     	call Genera_coordenadas
 244+ 95B3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 95B5
 246+ 95B5              ; ---------- ---------- ----------
 247+ 95B5
 248+ 95B5 2A 8D 89     8 ld hl,(Posicion_actual)
 249+ 95B8 CD BC 95     	call DESPLZ_DER
 250+ 95BB C9           2 ret
 251+ 95BC
 252+ 95BC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 95BC              ;
 254+ 95BC              ;	22/9/22
 255+ 95BC              ;
 256+ 95BC
 257+ 95BC CD CB 95     DESPLZ_DER call Desplaza_derecha
 258+ 95BF CD 17 96         call modifica_parametros_1er_DESPLZ_2
 259+ 95C2 CD 40 96         call Ciclo_completo
 260+ 95C5 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 95C8 CB FE        	set 7,(hl)
 262+ 95CA C9           	ret
 263+ 95CB
 264+ 95CB              ; ******************************************************************************************************************************************************************************************
 265+ 95CB              ;	15/02/23
 266+ 95CB              ;
 267+ 95CB
 268+ 95CB 3A B5 89     Desplaza_derecha ld a,(Vel_right)
 269+ 95CE 47           	ld b,a
 270+ 95CF 2A 99 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 95D2 23           1 inc hl
 272+ 95D3 23           	inc hl
 273+ 95D4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 95D6 22 99 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 95D9 CD A9 8B     	call Extrae_address
 276+ 95DC 22 8F 89     	ld (Puntero_objeto),hl
 277+ 95DF
 278+ 95DF              ; Modifica (Puntero_DESPLZ_izq).
 279+ 95DF
 280+ 95DF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 95DF              ; Cuántos movimientos hemos hecho ??
 282+ 95DF              ; DE contiene (Puntero_DESPLZ_der).
 283+ 95DF
 284+ 95DF 2A 95 89     7 ld hl,(Indice_Sprite_der)
 285+ 95E2 EB           	ex de,hl
 286+ 95E3 A7           	and a
 287+ 95E4 ED 52        	sbc hl,de
 288+ 95E6 CB 3D        	srl l
 289+ 95E8 3E 08        6 ld a,8
 290+ 95EA 95           	sub l
 291+ 95EB 30 1E        	jr nc,3F
 292+ 95ED
 293+ 95ED              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 95ED              ; B="0".
 295+ 95ED
 296+ 95ED 04           4 inc b
 297+ 95EE 3C           	inc a
 298+ 95EF 20 FC        	jr nz,4B
 299+ 95F1 78           	ld a,b
 300+ 95F2 08           	ex af,af
 301+ 95F3 2A 95 89     	ld hl,(Indice_Sprite_der)
 302+ 95F6 23           5 inc hl
 303+ 95F7 23           	inc hl
 304+ 95F8 10 FC        	djnz 5B
 305+ 95FA 22 99 89     	ld (Puntero_DESPLZ_der),hl
 306+ 95FD CD A9 8B     	call Extrae_address
 307+ 9600 22 8F 89     	ld (Puntero_objeto),hl
 308+ 9603
 309+ 9603              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9603              ; _(Posicion_actual).
 311+ 9603
 312+ 9603 21 8D 89     	ld hl,Posicion_actual
 313+ 9606 34           	inc (hl)
 314+ 9607 08               ex af,af
 315+ 9608 6F           	ld l,a
 316+ 9609 18 DD        	jr 6B
 317+ 960B
 318+ 960B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 960B
 320+ 960B 47           3 ld b,a
 321+ 960C 2A 97 89     	ld hl,(Indice_Sprite_izq)
 322+ 960F 23           2 inc hl
 323+ 9610 23           	inc hl
 324+ 9611 10 FC        	djnz 2B
 325+ 9613 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9616 C9           8 ret
 327+ 9617
 328+ 9617              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9617              ;
 330+ 9617              ;	24/7/22
 331+ 9617              ;
 332+ 9617              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9617              ;
 334+ 9617              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9617              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9617              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9617
 338+ 9617 3A 93 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 961A A7           	and a
 340+ 961B 20 1F        	jr nz,1F
 341+ 961D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 961F 32 93 89         ld (CTRL_DESPLZ),a
 343+ 9622
 344+ 9622 21 8C 89     	ld hl,Columns
 345+ 9625 34           	inc (hl)
 346+ 9626 3A 9F 89     	ld a,(Cuad_objeto)
 347+ 9629 E6 01        	and 1
 348+ 962B 28 0F        	jr z,1F
 349+ 962D 2A 8D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9630 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9631 22 8D 89     	ld (Posicion_actual),hl
 352+ 9634 CD CE 99     	call Genera_coordenadas
 353+ 9637 CD 9C 97     	call Inc_CTRL_DESPLZ
 354+ 963A 18 03        	jr 2F
 355+ 963C CD 9C 97     1 call Inc_CTRL_DESPLZ
 356+ 963F C9           2 ret
 357+ 9640
 358+ 9640              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9640              ;
 360+ 9640              ;	24/7/22
 361+ 9640              ;
 362+ 9640              ;	Ciclo_completo.
 363+ 9640              ;
 364+ 9640              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9640              ;
 366+ 9640              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9640              ; 	Decrementamos (Columns).
 368+ 9640              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9640              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9640
 371+ 9640
 372+ 9640 3A 93 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9643 FE FF        	cp $ff
 374+ 9645 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9647 E6 F0        	and $f0
 376+ 9649 20 28        	jr nz,3F
 377+ 964B
 378+ 964B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 964B
 380+ 964B 3A 93 89     	ld a,(CTRL_DESPLZ)
 381+ 964E 47           	ld b,a
 382+ 964F 3E F8        	ld a,$f8
 383+ 9651 80           	add b
 384+ 9652 32 93 89     	ld (CTRL_DESPLZ),a
 385+ 9655 18 1C        	jr 3F
 386+ 9657 21 8C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 965A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 965B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 965C 32 93 89     	ld (CTRL_DESPLZ),a
 390+ 965F 3A 9F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9662 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9664 20 0A        	jr nz,2F
 393+ 9666 2A 8D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9669 23           	inc hl
 395+ 966A 22 8D 89     	ld (Posicion_actual),hl
 396+ 966D CD CE 99     	call Genera_coordenadas
 397+ 9670
 398+ 9670              ; Inicia el puntero de Sprite.
 399+ 9670
 400+ 9670 CD BE 8B     2 call Inicia_puntero_objeto_der
 401+ 9673 C9           3 ret
 402+ 9674
 403+ 9674              ; ******************************************************************************************************************************************************************************************
 404+ 9674              ;
 405+ 9674              ;	15/02/23
 406+ 9674              ;
 407+ 9674              ;	Mov_left.
 408+ 9674              ;
 409+ 9674              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9674              ;
 411+ 9674              Mov_left
 412+ 9674
 413+ 9674 21 AD 89     	ld hl,Ctrl_0
 414+ 9677 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9679              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9679              ; 																	; _ en el caso de que no lo haya.
 417+ 9679 3A AD 89     	ld a,(Ctrl_0)
 418+ 967C CB 77        	bit 6,a
 419+ 967E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9680
 421+ 9680 CD 96 97     	call Stop_Amadeus_left
 422+ 9683 C8           	ret z
 423+ 9684 20 4A        	jr nz,8F
 424+ 9686
 425+ 9686 3A 91 89     11 ld a,(Coordenada_X)
 426+ 9689 A7           	and a
 427+ 968A 20 44        	jr nz,8F
 428+ 968C
 429+ 968C 3A 93 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 968F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9690 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9692
 433+ 9692              ; ---------- ---------- ----------
 434+ 9692
 435+ 9692 3A B4 89     	ld a,(Vel_left)
 436+ 9695 FE 02        	cp 2
 437+ 9697 28 0F        	jr z,1F
 438+ 9699 38 04        	jr c,6F
 439+ 969B FE 04        	cp 4
 440+ 969D 28 12        	jr z,7F
 441+ 969F
 442+ 969F              ; ---------- ---------- ----------
 443+ 969F
 444+ 969F 3A 93 89     6 ld a,(CTRL_DESPLZ)
 445+ 96A2 FE F8        	cp $f8
 446+ 96A4 20 2A        	jr nz,8F
 447+ 96A6 18 10        	jr 4F
 448+ 96A8 3A 93 89     1 ld a,(CTRL_DESPLZ)
 449+ 96AB FE F9        	cp $f9
 450+ 96AD 20 21        	jr nz,8F
 451+ 96AF 18 07        	jr 4F
 452+ 96B1 3A 93 89     7 ld a,(CTRL_DESPLZ)
 453+ 96B4 FE FB        	cp $fb
 454+ 96B6 20 18        	jr nz,8F
 455+ 96B8
 456+ 96B8              ; ---------- ---------- ----------
 457+ 96B8
 458+ 96B8              4
 459+ 96B8 CD BE 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 96BB              ;	call Reinicio
 461+ 96BB
 462+ 96BB              ; ---------- ---------- ----------
 463+ 96BB
 464+ 96BB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 96BD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 96BE
 467+ 96BE              ;	ld hl,(Indice_Sprite_izq)
 468+ 96BE              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 96BE
 470+ 96BE CD D7 96     	call DESPLZ_IZQ
 471+ 96C1 C1           	pop bc
 472+ 96C2 10 F9        	djnz 5B
 473+ 96C4 2A 8D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 96C7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 96C8 22 8D 89     	ld (Posicion_actual),hl
 476+ 96CB CD CE 99     	call Genera_coordenadas
 477+ 96CE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 96D0
 479+ 96D0              ; ---------- ---------- ----------
 480+ 96D0
 481+ 96D0              ; Movemos, no hay recolocación.
 482+ 96D0
 483+ 96D0 2A 8D 89     8 ld hl,(Posicion_actual)
 484+ 96D3 CD D7 96     	call DESPLZ_IZQ
 485+ 96D6 C9           2 ret
 486+ 96D7
 487+ 96D7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 96D7              ;
 489+ 96D7              ;	22/9/22
 490+ 96D7
 491+ 96D7              DESPLZ_IZQ
 492+ 96D7
 493+ 96D7 CD E6 96     	call Desplaza_izquierda
 494+ 96DA CD 32 97         call modifica_parametros_1er_DESPLZ
 495+ 96DD CD 5A 97     	call Ciclo_completo_2
 496+ 96E0 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 96E3 CB BE        	res 7,(hl)
 498+ 96E5 C9           	ret
 499+ 96E6
 500+ 96E6              Desplaza_izquierda
 501+ 96E6
 502+ 96E6 3A B4 89     	ld a,(Vel_left)
 503+ 96E9 47           	ld b,a
 504+ 96EA 2A 9B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 96ED 23           1 inc hl
 506+ 96EE 23           	inc hl
 507+ 96EF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 96F1 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 96F4 CD A9 8B     	call Extrae_address
 510+ 96F7 22 8F 89     	ld (Puntero_objeto),hl
 511+ 96FA
 512+ 96FA              ; Modifica (Puntero_DESPLZ_der).
 513+ 96FA
 514+ 96FA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96FA              ; Cuántos movimientos hemos hecho ??
 516+ 96FA              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96FA
 518+ 96FA 2A 97 89     7 ld hl,(Indice_Sprite_izq)
 519+ 96FD EB           	ex de,hl
 520+ 96FE A7           	and a
 521+ 96FF ED 52        	sbc hl,de
 522+ 9701 CB 3D        	srl l
 523+ 9703 3E 08        6 ld a,8
 524+ 9705 95           	sub l
 525+ 9706 30 1E        	jr nc,3F
 526+ 9708
 527+ 9708              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9708              ; B="0".
 529+ 9708
 530+ 9708 04           4 inc b
 531+ 9709 3C           	inc a
 532+ 970A 20 FC        	jr nz,4B
 533+ 970C 78           	ld a,b
 534+ 970D 08           	ex af,af
 535+ 970E 2A 97 89     	ld hl,(Indice_Sprite_izq)
 536+ 9711 23           5 inc hl
 537+ 9712 23           	inc hl
 538+ 9713 10 FC        	djnz 5B
 539+ 9715 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9718 CD A9 8B     	call Extrae_address
 541+ 971B 22 8F 89     	ld (Puntero_objeto),hl
 542+ 971E
 543+ 971E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 971E              ; _(Posicion_actual).
 545+ 971E
 546+ 971E 21 8D 89     	ld hl,Posicion_actual
 547+ 9721 35           	dec (hl)
 548+ 9722 08           	ex af,af
 549+ 9723 6F           	ld l,a
 550+ 9724 18 DD        	jr 6B
 551+ 9726
 552+ 9726              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9726
 554+ 9726 47           3 ld b,a
 555+ 9727 2A 95 89     	ld hl,(Indice_Sprite_der)
 556+ 972A 23           2 inc hl
 557+ 972B 23           	inc hl
 558+ 972C 10 FC        	djnz 2B
 559+ 972E 22 99 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9731 C9           8 ret
 561+ 9732
 562+ 9732              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9732              ;
 564+ 9732              ;	modifica_parametros_1er_DESPLZ
 565+ 9732              ;
 566+ 9732              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9732              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9732              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9732
 570+ 9732 3A 93 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9735 A7           	and a
 572+ 9736 20 1E        	jr nz,1F
 573+ 9738 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9739 32 93 89         ld (CTRL_DESPLZ),a
 575+ 973C 21 8C 89     	ld hl,Columns
 576+ 973F 34           	inc (hl)
 577+ 9740 3A 9F 89     	ld a,(Cuad_objeto)
 578+ 9743 E6 01        	and 1
 579+ 9745 20 0F        	jr nz,1F
 580+ 9747 2A 8D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 974A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 974B 22 8D 89     	ld (Posicion_actual),hl
 583+ 974E CD CE 99     	call Genera_coordenadas
 584+ 9751 CD AD 97     	call Dec_CTRL_DESPLZ
 585+ 9754 18 03        	jr 2F
 586+ 9756 CD AD 97     1 call Dec_CTRL_DESPLZ
 587+ 9759 C9           2 ret
 588+ 975A
 589+ 975A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 975A
 591+ 975A 3A 93 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 975D FE F7        	cp $f7
 593+ 975F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9761 30 2C        	jr nc,3F
 595+ 9763
 596+ 9763              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9763
 598+ 9763 06 00        	ld b,0
 599+ 9765 04           4 inc b
 600+ 9766 3C           	inc a
 601+ 9767 FE F7        	cp $f7
 602+ 9769 20 FA        	jr nz,4B
 603+ 976B 3E FF        	ld a,$ff
 604+ 976D 90           	sub b
 605+ 976E 32 93 89     	ld (CTRL_DESPLZ),a
 606+ 9771 18 1C        	jr 3F
 607+ 9773
 608+ 9773              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9773
 610+ 9773 21 8C 89     1 ld hl,Columns
 611+ 9776 35           	dec (hl)
 612+ 9777 AF           	xor a
 613+ 9778 32 93 89     	ld (CTRL_DESPLZ),a
 614+ 977B 3A 9F 89     	ld a,(Cuad_objeto)
 615+ 977E E6 01        	and 1
 616+ 9780 28 0A        	jr z,2F
 617+ 9782 2A 8D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9785 2B           	dec hl
 619+ 9786 22 8D 89     	ld (Posicion_actual),hl
 620+ 9789 CD CE 99     	call Genera_coordenadas
 621+ 978C
 622+ 978C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 978C
 624+ 978C CD D1 8B     2 call Inicia_puntero_objeto_izq
 625+ 978F C9           3 ret
 626+ 9790
 627+ 9790              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9790              ;
 629+ 9790              ;	19/10/22
 630+ 9790              ;
 631+ 9790              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9790              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9790
 634+ 9790 3A 91 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9793 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9795 C9           	ret
 637+ 9796
 638+ 9796              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9796              ;
 640+ 9796              ;	19/10/22
 641+ 9796              ;
 642+ 9796              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9796              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9796
 645+ 9796 3A 91 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9799 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 979B C9           	ret
 648+ 979C
 649+ 979C              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 979C              ;
 651+ 979C              ;	24/7/22
 652+ 979C              ;
 653+ 979C              ;	Inc_CTRL_DESPLZ
 654+ 979C              ;
 655+ 979C              ;
 656+ 979C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 979C
 658+ 979C 21 93 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 979F 3A B5 89     	ld a,(Vel_right)
 660+ 97A2 A7           	and a
 661+ 97A3 28 06        	jr z,1F
 662+ 97A5 47           	ld b,a
 663+ 97A6 34           3 inc (hl)
 664+ 97A7 10 FD        	djnz 3B
 665+ 97A9 18 01        	jr 2F
 666+ 97AB 34           1 inc (hl)
 667+ 97AC C9           2 ret
 668+ 97AD
 669+ 97AD              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 97AD              ;
 671+ 97AD              ;	5/2/23
 672+ 97AD              ;
 673+ 97AD              ;	Dec_CTRL_DESPLZ
 674+ 97AD              ;
 675+ 97AD              ;
 676+ 97AD              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 97AD
 678+ 97AD 21 93 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 97B0 3A B4 89     	ld a,(Vel_left)
 680+ 97B3 A7           	and a
 681+ 97B4 28 06        	jr z,1F
 682+ 97B6 47           	ld b,a
 683+ 97B7 35           3 dec (hl)
 684+ 97B8 10 FD        	djnz 3B
 685+ 97BA 18 01        	jr 2F
 686+ 97BC 35           1 dec (hl)
 687+ 97BD C9           2 ret
 688+ 97BE
 689+ 97BE              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 97BE
 691+ 97BE 2A 8D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 97C1 01 1F 00     	ld bc,31
 693+ 97C4 A7           	and a
 694+ 97C5 ED 4A        	adc hl,bc
 695+ 97C7 22 8D 89     	ld (Posicion_actual),hl
 696+ 97CA 21 AD 89     	ld hl,Ctrl_0														; $xxx1
 697+ 97CD CB C6        	set 0,(hl)
 698+ 97CF C9           	ret
 699+ 97D0
 700+ 97D0              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 97D0
 702+ 97D0 2A 8D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 97D3 01 1F 00     	ld bc,31
 704+ 97D6 A7           	and a
 705+ 97D7 ED 42        	sbc hl,bc
 706+ 97D9 22 8D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 97DC 21 AD 89     	ld hl,Ctrl_0
 708+ 97DF CB CE        	set 1,(hl)
 709+ 97E1 C9           	ret
 710+ 97E2
 711+ 97E2              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 97E2
 713+ 97E2 24           Reaparece_abajo inc h
 714+ 97E3 01 E0 17     	ld bc,$17e0
 715+ 97E6 A7           	and a
 716+ 97E7 ED 4A        	adc hl,bc
 717+ 97E9 22 8D 89     	ld (Posicion_actual),hl
 718+ 97EC 21 AD 89     	ld hl,Ctrl_0
 719+ 97EF CB D6        	set 2,(hl)
 720+ 97F1 C9           	ret
 721+ 97F2
 722+ 97F2              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 97F2
 724+ 97F2 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 97F5 A7           	and a
 726+ 97F6 ED 42        	sbc hl,bc
 727+ 97F8 22 8D 89     	ld (Posicion_actual),hl
 728+ 97FB 21 AD 89     	ld hl,Ctrl_0
 729+ 97FE CB DE        	set 3,(hl)
 730+ 9800 C9           	ret
 731+ 9801
 732+ 9801              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9801              ;
 734+ 9801              ;	15/07/23
 735+ 9801
 736+ 9801              Reinicio
 737+ 9801
 738+ 9801              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9801
 740+ 9801 AF           	xor a
 741+ 9802 21 C4 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9805 CD 23 98     	call Limpia_contenido_hl
 743+ 9808
 744+ 9808 21 8D 89     	ld hl,Posicion_actual
 745+ 980B CD 23 98     	call Limpia_contenido_hl
 746+ 980E
 747+ 980E CD 6C 8C     	call Inicializa_Puntero_indice_mov
 748+ 9811 CD EF 98     	call Inicia_Puntero_mov
 749+ 9814
 750+ 9814 21 C6 89     	ld hl,Incrementa_puntero
 751+ 9817 06 05        	ld b,5
 752+ 9819 77           1 ld (hl),a
 753+ 981A 23           	inc hl
 754+ 981B 10 FC        	djnz 1B
 755+ 981D
 756+ 981D 21 B2 89     	ld hl,Ctrl_2
 757+ 9820 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9822
 759+ 9822 C9           	ret
 760+ 9823
 761+ 9823 77           Limpia_contenido_hl	ld (hl),a
 762+ 9824 23           	inc hl
 763+ 9825 77           	ld (hl),a
 764+ 9826 C9           	ret
 765+ 9827
 766+ 9827
# file closed: Direcciones.asm
1838  9827              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9827              ; ----- ----- ----- ----- -----
   2+ 9827              ;
   3+ 9827              ;   28/12/23
   4+ 9827
   5+ 9827              Movimiento
   6+ 9827
   7+ 9827              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9827
   9+ 9827 3A B2 89         ld a,(Ctrl_2)
  10+ 982A CB 57            bit 2,a
  11+ 982C 20 1B            jr nz, Desplazamiento_iniciado
  12+ 982E
  13+ 982E 2A C2 89         ld hl,(Puntero_mov)
  14+ 9831 7E               ld a,(hl)
  15+ 9832
  16+ 9832              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9832
  18+ 9832              Inicia_desplazamiento.
  19+ 9832
  20+ 9832              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9832
  22+ 9832 CD 25 99         call Ajusta_velocidad_desplazamiento
  23+ 9835
  24+ 9835              ; Iniciamos (Repetimos_mov).
  25+ 9835
  26+ 9835 7E               ld a,(hl)
  27+ 9836 E6 0F            and $0f
  28+ 9838 32 C8 89         ld (Repetimos_desplazamiento),a
  29+ 983B 32 C9 89         ld (Repetimos_desplazamiento_backup),a
  30+ 983E
  31+ 983E              ; Iniciamos (Cola_de_desplazamiento).
  32+ 983E
  33+ 983E 23               inc hl
  34+ 983F 7E               ld a,(hl)
  35+ 9840 32 CB 89         ld (Cola_de_desplazamiento),a
  36+ 9843 2B               dec hl
  37+ 9844
  38+ 9844 21 B2 89         ld hl,Ctrl_2
  39+ 9847 CB D6            set 2,(hl)
  40+ 9849
  41+ 9849              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9849              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9849
  44+ 9849              Desplazamiento_iniciado
  45+ 9849
  46+ 9849 CD F9 98         call Aplica_desplazamiento
  47+ 984C
  48+ 984C              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 984C
  50+ 984C 3A ED 89         ld a,(Ctrl_3)
  51+ 984F CB 4F            bit 1,a
  52+ 9851 C0               ret nz
  53+ 9852
  54+ 9852 21 C8 89     3 ld hl,Repetimos_desplazamiento
  55+ 9855 35               dec (hl)
  56+ 9856 C0               ret nz
  57+ 9857
  58+ 9857              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9857              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9857              ; Analiza (Cola_de_desplazamiento).
  61+ 9857
  62+ 9857 3A CB 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 985A A7               and a
  64+ 985B CC 4E 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 985E 28 30            jr z,Reinicia_el_movimiento
  66+ 9860
  67+ 9860 FE FF            cp $ff
  68+ 9862 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9864
  70+ 9864 FE FE            cp $fe
  71+ 9866 CC D3 98         call z,Fijamos_bucle
  72+ 9869 28 25            jr z,Reinicia_el_movimiento
  73+ 986B
  74+ 986B FE FD            cp $fd
  75+ 986D 20 11            jr nz,1F
  76+ 986F
  77+ 986F              ; ---
  78+ 986F              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 986F
  80+ 986F 3A B2 89         ld a,(Ctrl_2)
  81+ 9872 CB 5F            bit 3,a
  82+ 9874 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9876
  84+ 9876              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9876
  86+ 9876 21 B2 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9879 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 987B
  89+ 987B CD E4 98         call Inicia_Repetimos_movimiento
  90+ 987E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9880              ; ---
  92+ 9880
  93+ 9880 FE 01        1 cp 1
  94+ 9882 CA BD 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9885
  96+ 9885 3D               dec a
  97+ 9886 32 CB 89         ld (Cola_de_desplazamiento),a
  98+ 9889
  99+ 9889 3A C9 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 988C 32 C8 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 988F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 988F C9               ret
 103+ 9890
 104+ 9890              Reinicia_el_movimiento
 105+ 9890
 106+ 9890 3A B2 89         ld a,(Ctrl_2)
 107+ 9893 CB 5F            bit 3,a
 108+ 9895 28 1B            jr z,2F
 109+ 9897
 110+ 9897              ; (Cola_de_desplazamiento)="254".
 111+ 9897
 112+ 9897 21 CA 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 989A 35               dec (hl)
 114+ 989B 20 15            jr nz,2F
 115+ 989D
 116+ 989D              ; Fin de las repeticiones del último movimiento.
 117+ 989D
 118+ 989D 21 B2 89         ld hl,Ctrl_2
 119+ 98A0 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 98A2
 121+ 98A2 2A C2 89         ld hl,(Puntero_mov)
 122+ 98A5 23               inc hl
 123+ 98A6 23               inc hl
 124+ 98A7 23               inc hl
 125+ 98A8 22 C2 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 98AB              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 98AB 7E               ld a,(hl)
 128+ 98AC 32 CB 89         ld (Cola_de_desplazamiento),a
 129+ 98AF
 130+ 98AF C3 57 98         jp Cola
 131+ 98B2
 132+ 98B2 CD EF 98     2 call Inicia_Puntero_mov
 133+ 98B5
 134+ 98B5 21 B2 89         ld hl,Ctrl_2
 135+ 98B8 CB 96            res 2,(hl)
 136+ 98BA
 137+ 98BA C3 27 98         jp Movimiento
 138+ 98BD
 139+ 98BD              Siguiente_desplazamiento
 140+ 98BD
 141+ 98BD              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 98BD              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 98BD
 144+ 98BD 21 B2 89         ld hl,Ctrl_2
 145+ 98C0 CB 96            res 2,(hl)
 146+ 98C2
 147+ 98C2 2A C2 89         ld hl,(Puntero_mov)
 148+ 98C5 23               inc hl
 149+ 98C6 23               inc hl
 150+ 98C7 22 C2 89         ld (Puntero_mov),hl
 151+ 98CA
 152+ 98CA 7E               ld a,(hl)
 153+ 98CB A7               and a
 154+ 98CC CC 4E 99         call z,Incrementa_Puntero_indice_mov
 155+ 98CF CA 90 98         jp z,Reinicia_el_movimiento
 156+ 98D2
 157+ 98D2 C9               ret
 158+ 98D3
 159+ 98D3              ; Subrutinas -----------------------------------------
 160+ 98D3              ; ---------- --------- --------- ---------- ----------
 161+ 98D3              ;
 162+ 98D3              ;   24/07/23
 163+ 98D3              ;
 164+ 98D3              ;   Fijamos_bucle
 165+ 98D3              ;
 166+ 98D3              ;
 167+ 98D3
 168+ 98D3              Fijamos_bucle
 169+ 98D3
 170+ 98D3 3A C6 89         ld a,(Incrementa_puntero)
 171+ 98D6 3C               inc a
 172+ 98D7 32 C7 89         ld (Incrementa_puntero_backup),a
 173+ 98DA
 174+ 98DA CD 4E 99         call Incrementa_Puntero_indice_mov
 175+ 98DD 2A C0 89         ld hl,(Puntero_indice_mov)
 176+ 98E0 22 C4 89         ld (Puntero_indice_mov_bucle),hl
 177+ 98E3 C9               ret
 178+ 98E4
 179+ 98E4              ; ---------- --------- --------- ---------- ----------
 180+ 98E4              ;
 181+ 98E4              ;   07/7/23
 182+ 98E4              ;
 183+ 98E4              ;   Inicia_Repetimos_movimiento
 184+ 98E4              ;
 185+ 98E4              ;
 186+ 98E4
 187+ 98E4              Inicia_Repetimos_movimiento
 188+ 98E4
 189+ 98E4              ; Iniciamos (Repetimos_movimiento).
 190+ 98E4
 191+ 98E4 DD 2A C2 89      ld ix,(Puntero_mov)
 192+ 98E8 DD 7E 02         ld a,(ix+2)
 193+ 98EB 32 CA 89         ld (Repetimos_movimiento),a
 194+ 98EE
 195+ 98EE C9               ret
 196+ 98EF
 197+ 98EF              ; ---------- --------- --------- ---------- ----------
 198+ 98EF              ;
 199+ 98EF              ;   26/6/23
 200+ 98EF              ;
 201+ 98EF              ;   Inicia_Puntero_mov
 202+ 98EF              ;
 203+ 98EF              ;
 204+ 98EF
 205+ 98EF 2A C0 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 98F2 CD A9 8B         call Extrae_address
 207+ 98F5 22 C2 89         ld (Puntero_mov),hl
 208+ 98F8 C9               ret
 209+ 98F9
 210+ 98F9              ; ---------- --------- --------- ---------- ----------
 211+ 98F9              ;
 212+ 98F9              ;   27/06/23
 213+ 98F9              ;
 214+ 98F9              ;   Aplica_movimiento.
 215+ 98F9
 216+ 98F9              Aplica_desplazamiento
 217+ 98F9
 218+ 98F9              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98F9
 220+ 98F9 2A C2 89         ld hl, (Puntero_mov)
 221+ 98FC
 222+ 98FC 7E               ld a,(hl)
 223+ 98FD E6 F0            and $f0
 224+ 98FF C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9900
 226+ 9900 CB 7E            bit 7,(hl)
 227+ 9902 28 03            jr z,1F
 228+ 9904 CD 0E 95         call Mov_up
 229+ 9907 2A C2 89     1 ld hl, (Puntero_mov)
 230+ 990A CB 76            bit 6,(hl)
 231+ 990C 28 03            jr z,2F
 232+ 990E CD D5 94         call Mov_down
 233+ 9911
 234+ 9911              ; Se ha aplicado reinicio ???
 235+ 9911              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9911
 237+ 9911              ;    ld a,(Ctrl_3)
 238+ 9911              ;    bit 1,a
 239+ 9911              ;    ret nz
 240+ 9911
 241+ 9911 2A C2 89     2 ld hl, (Puntero_mov)
 242+ 9914 CB 6E            bit 5,(hl)
 243+ 9916 28 03            jr z,3F
 244+ 9918 CD 74 96         call Mov_left
 245+ 991B 2A C2 89     3 ld hl, (Puntero_mov)
 246+ 991E CB 66            bit 4,(hl)
 247+ 9920 C8               ret z
 248+ 9921 CD 51 95         call Mov_right
 249+ 9924 C9               ret
 250+ 9925
 251+ 9925              ; ---------- --------- --------- ---------- ----------
 252+ 9925              ;
 253+ 9925              ;   26/06/23
 254+ 9925              ;
 255+ 9925              ;   Ajusta_velocidad_desplazamiento.
 256+ 9925
 257+ 9925              Ajusta_velocidad_desplazamiento
 258+ 9925
 259+ 9925              ; 1er byte de la cadena de movimiento.
 260+ 9925              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9925
 262+ 9925 CD 43 99         call Extrae_nibble_alto
 263+ 9928
 264+ 9928 32 B6 89         ld (Vel_up),a
 265+ 992B 79               ld a,c
 266+ 992C E6 0F            and $0f
 267+ 992E 32 B7 89         ld (Vel_down),a
 268+ 9931
 269+ 9931              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9931              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9931
 272+ 9931 23               inc hl
 273+ 9932 CD 43 99         call Extrae_nibble_alto
 274+ 9935
 275+ 9935 32 B4 89         ld (Vel_left),a
 276+ 9938 79               ld a,c
 277+ 9939 E6 0F            and $0f
 278+ 993B 32 B5 89         ld (Vel_right),a
 279+ 993E
 280+ 993E              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 993E
 282+ 993E 23               inc hl
 283+ 993F 22 C2 89         ld (Puntero_mov),hl
 284+ 9942 C9               ret
 285+ 9943
 286+ 9943 06 04        Extrae_nibble_alto ld b,4
 287+ 9945 7E               ld a,(hl)
 288+ 9946 4F               ld c,a
 289+ 9947 E6 F0            and $f0
 290+ 9949 CB 3F        1 srl a
 291+ 994B 10 FC            djnz 1B
 292+ 994D C9               ret
 293+ 994E
 294+ 994E              ; ---------- --------- --------- ---------- ----------
 295+ 994E              ;
 296+ 994E              ;   5/7/23
 297+ 994E              ;
 298+ 994E              ;   Incrementa_Puntero_indice_mov
 299+ 994E
 300+ 994E              Incrementa_Puntero_indice_mov
 301+ 994E
 302+ 994E 21 C6 89         ld hl,Incrementa_puntero
 303+ 9951 34               inc (hl)
 304+ 9952
 305+ 9952 2A C0 89         ld hl,(Puntero_indice_mov)
 306+ 9955 01 02 00         ld bc,2
 307+ 9958 A7               and a
 308+ 9959 09               add hl,bc
 309+ 995A 22 C0 89         ld (Puntero_indice_mov),hl
 310+ 995D
 311+ 995D 7E               ld a,(hl)
 312+ 995E A7               and a
 313+ 995F
 314+ 995F              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 995F
 316+ 995F              ;    jr z,$
 317+ 995F
 318+ 995F              ;! Reinicia el Patrón de movimiento.
 319+ 995F
 320+ 995F CC 64 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 9962
 322+ 9962 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9963
 324+ 9963 C9               ret
 325+ 9964
 326+ 9964              ; ---------- --------- --------- ---------- ----------
 327+ 9964              ;
 328+ 9964              ;   15/01/24
 329+ 9964              ;
 330+ 9964              ;   Inicializa_Puntero_indice_mov
 331+ 9964
 332+ 9964              Inicializa_Puntero_indice_mov_2
 333+ 9964
 334+ 9964              ; Existe etiqueta de bucle principal???
 335+ 9964
 336+ 9964 2A C4 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9967 24               inc h
 338+ 9968 25               dec h
 339+ 9969 28 05            jr z,2F
 340+ 996B
 341+ 996B 22 C0 89         ld (Puntero_indice_mov),hl
 342+ 996E 18 14            jr 3F
 343+ 9970
 344+ 9970              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9970
 346+ 9970 3A C6 89     2 ld a,(Incrementa_puntero)
 347+ 9973 47               ld b,a
 348+ 9974
 349+ 9974 2A C0 89         ld hl,(Puntero_indice_mov)
 350+ 9977 2B           1 dec hl
 351+ 9978 2B               dec hl
 352+ 9979 10 FC            djnz 1B
 353+ 997B 22 C0 89         ld (Puntero_indice_mov),hl
 354+ 997E
 355+ 997E AF               xor a
 356+ 997F 32 C6 89         ld (Incrementa_puntero),a
 357+ 9982 18 06            jr 4F
 358+ 9984
 359+ 9984 3A C7 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9987 32 C6 89         ld (Incrementa_puntero),a
 361+ 998A C9           4 ret
 362+ 998B
 363+ 998B              ; ----------------------------------------------------------------------
 364+ 998B              ;
 365+ 998B              ;   30/01/24
 366+ 998B              ;
 367+ 998B              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 998B
 369+ 998B 3A 8A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 998E CD BD 8D         call Calcula_salto_en_BC
 371+ 9991 21 B8 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9994 A7               and a
 373+ 9995 ED 4A            adc hl,bc
 374+ 9997 C9               ret
 375+ 9998
 376+ 9998              ; ----------------------------------------------------------------------
 377+ 9998              ;
 378+ 9998              ;   30/01/24
 379+ 9998              ;
 380+ 9998              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9998              ;
 382+ 9998              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9998
 384+ 9998 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9999 23               inc hl
 386+ 999A 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 999B 69               ld l,c
 388+ 999C 60               ld h,b
 389+ 999D 22 AB 89         ld (Contador_de_mov_masticados),hl
 390+ 99A0 C9               ret
 391+ 99A1
# file closed: Movimiento.asm
1839  99A1              ;	include "Disparo.asm"
1840  99A1              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 99A1              ; Relojes y temporizaciones.
   2+ 99A1
   3+ 99A1              ; ------------------------------------------------------
   4+ 99A1              ;
   5+ 99A1              ;	16/7/23
   6+ 99A1              ;
   7+ 99A1              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 99A1              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 99A1              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 99A1              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 99A1              ;
  12+ 99A1              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 99A1              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 99A1
  15+ 99A1              ; Disparo_entidad db 1
  16+ 99A1              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 99A1              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 99A1
  19+ 99A1              Habilita_disparos
  20+ 99A1
  21+ 99A1 7E           	ld a,(hl)
  22+ 99A2 A7           	and a
  23+ 99A3 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 99A4
  25+ 99A4 EB           	ex de,hl
  26+ 99A5
  27+ 99A5 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 99A6 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 99A7
  30+ 99A7              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 99A7
  32+ 99A7 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 99A8 7E           	ld a,(hl)
  34+ 99A9 23           	inc hl
  35+ 99AA 77           	ld (hl),a
  36+ 99AB
  37+ 99AB EB           	ex de,hl						; Habilitamos disparo.
  38+ 99AC 3E 01        	ld a,1
  39+ 99AE 77           	ld (hl),a
  40+ 99AF C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1841  99B0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99B0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99B0              ;
   3+ 99B0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99B0              ;
   5+ 99B0              ; *****************************************************************************************************************************************************************************************
   6+ 99B0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99B0
   8+ 99B0 7C           calcula_tercio ld a,h
   9+ 99B1 E6 18        	and $18
  10+ 99B3 CB 2F        	sra a
  11+ 99B5 CB 2F        	sra a
  12+ 99B7 CB 2F        	sra a
  13+ 99B9 C9           	ret
  14+ 99BA
# file closed: calcula_tercio.asm
1842  99BA              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99BA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99BA              ;
   3+ 99BA              ;
   4+ 99BA              ;	CLS.
   5+ 99BA              ;
   6+ 99BA              ;	Limpia la pantalla y define sus atributos.
   7+ 99BA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99BA              ;
   9+ 99BA              ;	COLORES: 0 ..... NEGRO
  10+ 99BA              ;    		 1 ..... AZUL
  11+ 99BA              ; 			 2 ..... ROJO
  12+ 99BA              ;			 3 ..... MAGENTA
  13+ 99BA              ; 			 4 ..... VERDE
  14+ 99BA              ; 			 5 ..... CIAN
  15+ 99BA              ;			 6 ..... AMARILLO
  16+ 99BA              ; 			 7 ..... BLANCO
  17+ 99BA              ;
  18+ 99BA              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99BA              ;
  20+ 99BA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99BA
  22+ 99BA
  23+ 99BA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99BD 11 01 40     	LD DE,$4001
  25+ 99C0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99C3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99C5 ED B0        	LDIR
  28+ 99C7 01 FF 02     	LD BC,767
  29+ 99CA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99CB ED B0        	LDIR
  31+ 99CD C9           	ret
  32+ 99CE
# file closed: Cls.asm
1843  99CE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 99CE              ; ------------------------------------------------------------------------
   2+ 99CE              ;
   3+ 99CE              ;	30/1/24
   4+ 99CE              ;
   5+ 99CE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 99CE              ;	Fila superior "0", Columna izquierda "0".
   7+ 99CE              ;
   8+ 99CE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 99CE              ;
  10+ 99CE              ;	Modifica: A,BC y DE.
  11+ 99CE
  12+ 99CE 7D           Genera_coordenadas ld a,l
  13+ 99CF E6 1F        	and $1f
  14+ 99D1 32 91 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 99D4
  16+ 99D4 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 99D5 FE 40        	cp $40
  18+ 99D7 38 1C        	jr c,4F
  19+ 99D9
  20+ 99D9 CD B0 99     	call calcula_tercio
  21+ 99DC 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 99DD
  23+ 99DD 1E 00        	ld e,0
  24+ 99DF 7D           	ld a,l
  25+ 99E0 E6 E0        	and $e0
  26+ 99E2 28 01        	jr z,1F
  27+ 99E4 04           	inc b
  28+ 99E5
  29+ 99E5 04           1 inc b
  30+ 99E6 05           	dec b
  31+ 99E7 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 99E9              ;														; _ , salimos.
  33+ 99E9 1C           3 inc e
  34+ 99EA D6 20        	sub 32
  35+ 99EC 20 FB        	jr nz,3B
  36+ 99EE 10 F5        	djnz 1B
  37+ 99F0
  38+ 99F0 7B           2 ld a,e
  39+ 99F1 32 92 89     	ld (Coordenada_y),a
  40+ 99F4 C9           	ret
  41+ 99F5
  42+ 99F5 AF           4 xor a
  43+ 99F6 32 92 89     	ld (Coordenada_y),a
  44+ 99F9 C9           	ret
  45+ 99FA
  46+ 99FA              ; ------------------------------------------------------------------------
  47+ 99FA              ;	28/05/23
  48+ 99FA              ;
  49+ 99FA              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 99FA              ;	Fila superior "0", Columna izquierda "0".
  51+ 99FA              ;
  52+ 99FA              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 99FA              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 99FA              ;
  55+ 99FA              ;		DE="$120d"
  56+ 99FA              ;
  57+ 99FA              ;		D, (Coordenada_X), Columnas, $12
  58+ 99FA              ;		E, (Coordenada_y), Filas, $0d
  59+ 99FA              ;
  60+ 99FA              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 99FA
  62+ 99FA              ;	Modifica: A,BC y DE.
  63+ 99FA
  64+ 99FA
  65+ 99FA              Genera_coordenadas_disparo
  66+ 99FA
  67+ 99FA              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 99FA
  69+ 99FA 7D           	ld a,l
  70+ 99FB E6 1F        	and $1f
  71+ 99FD 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 99FE CD B0 99     	call calcula_tercio
  73+ 9A01 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9A02 1E 00        	ld e,0
  75+ 9A04 7D           	ld a,l
  76+ 9A05 E6 E0        	and $e0
  77+ 9A07 28 01        	jr z,1F
  78+ 9A09 04           	inc b
  79+ 9A0A 1C           1 inc e
  80+ 9A0B D6 20        	sub 32
  81+ 9A0D 20 FB        	jr nz,1B
  82+ 9A0F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9A11 C9           	ret
  84+ 9A12
# file closed: Genera_coordenadas.asm
1844  9A12              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 9A12              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9A12              ;
   3+ 9A12              ;	11/03/24
   4+ 9A12              ;
   5+ 9A12              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 9A12              ;   DE contiene Puntero_objeto.
   7+ 9A12              ;   IX contiene el Puntero de impresión.
   8+ 9A12
   9+ 9A12              Genera_datos_de_impresion
  10+ 9A12
  11+ 9A12 ED 73 DD 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9A16 31 A9 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ 9A19 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ 9A1B
  15+ 9A1B 2A EB 89         ld hl,(Scanlines_album_SP)
  16+ 9A1E
  17+ 9A1E 3E 05            ld a,5
  18+ 9A20 85               add l
  19+ 9A21 6F               ld l,a
  20+ 9A22
  21+ 9A22 F9               ld sp,hl
  22+ 9A23 22 EB 89         ld (Scanlines_album_SP),hl
  23+ 9A26
  24+ 9A26 21 00 00         ld hl,0
  25+ 9A29
  26+ 9A29 DD E5            push ix
  27+ 9A2B 3B               dec sp
  28+ 9A2C ED 7A            adc hl,sp
  29+ 9A2E D5               push de
  30+ 9A2F
  31+ 9A2F              ; Recuperamos SP.
  32+ 9A2F
  33+ 9A2F ED 7B DD 89      ld sp,(Stack)
  34+ 9A33
  35+ 9A33 E5               push hl
  36+ 9A34 F1               pop af
  37+ 9A35 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ 9A36
  39+ 9A36              ; Tenemos el encabezado listo.
  40+ 9A36              ; Preparamos registros para generar los scanlines.
  41+ 9A36
  42+ 9A36 DD E5            push ix
  43+ 9A38 E1               pop hl                                          ; 1er scanline en HL.
  44+ 9A39
  45+ 9A39 ED 5B EB 89      ld de,(Scanlines_album_SP)
  46+ 9A3D
  47+ 9A3D              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ 9A3D              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ 9A3D
  50+ 9A3D 7C               ld a,h
  51+ 9A3E FE 50            cp $50
  52+ 9A40 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ 9A42
  54+ 9A42 20 05            jr nz,2F
  55+ 9A44
  56+ 9A44 7D               ld a,l
  57+ 9A45 FE E0            cp $e0
  58+ 9A47 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ 9A49
  60+ 9A49 7D           2 ld a,l
  61+ 9A4A FE C0            cp $c0
  62+ 9A4C D2 DE 9A         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ 9A4F
  64+ 9A4F              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ 9A4F
  66+ 9A4F CD 37 91         call NextScan
  67+ 9A52 EB               ex de,hl
  68+ 9A53
  69+ 9A53 73               ld (hl),e
  70+ 9A54 2C               inc l
  71+ 9A55 72               ld (hl),d
  72+ 9A56 2C               inc l
  73+ 9A57
  74+ 9A57 EB               ex de,hl
  75+ 9A58
  76+ 9A58 CD 37 91         call NextScan
  77+ 9A5B EB               ex de,hl
  78+ 9A5C
  79+ 9A5C 73               ld (hl),e
  80+ 9A5D 2C               inc l
  81+ 9A5E 72               ld (hl),d
  82+ 9A5F 2C               inc l
  83+ 9A60
  84+ 9A60 EB               ex de,hl
  85+ 9A61
  86+ 9A61 CD 37 91         call NextScan
  87+ 9A64 EB               ex de,hl
  88+ 9A65
  89+ 9A65 73               ld (hl),e
  90+ 9A66 2C               inc l
  91+ 9A67 72               ld (hl),d
  92+ 9A68 2C               inc l
  93+ 9A69
  94+ 9A69 EB               ex de,hl
  95+ 9A6A
  96+ 9A6A CD 37 91         call NextScan
  97+ 9A6D EB               ex de,hl
  98+ 9A6E
  99+ 9A6E 73               ld (hl),e
 100+ 9A6F 2C               inc l
 101+ 9A70 72               ld (hl),d
 102+ 9A71 2C               inc l
 103+ 9A72
 104+ 9A72 EB               ex de,hl
 105+ 9A73
 106+ 9A73 CD 37 91         call NextScan
 107+ 9A76 EB               ex de,hl
 108+ 9A77
 109+ 9A77 73               ld (hl),e
 110+ 9A78 2C               inc l
 111+ 9A79 72               ld (hl),d
 112+ 9A7A 2C               inc l
 113+ 9A7B
 114+ 9A7B EB               ex de,hl
 115+ 9A7C
 116+ 9A7C CD 37 91         call NextScan
 117+ 9A7F EB               ex de,hl
 118+ 9A80
 119+ 9A80 73               ld (hl),e
 120+ 9A81 2C               inc l
 121+ 9A82 72               ld (hl),d
 122+ 9A83 2C               inc l
 123+ 9A84
 124+ 9A84 EB               ex de,hl
 125+ 9A85
 126+ 9A85 CD 37 91         call NextScan
 127+ 9A88 EB               ex de,hl
 128+ 9A89
 129+ 9A89 73               ld (hl),e
 130+ 9A8A 2C               inc l
 131+ 9A8B 72               ld (hl),d
 132+ 9A8C 2C               inc l
 133+ 9A8D
 134+ 9A8D EB               ex de,hl
 135+ 9A8E
 136+ 9A8E CD 37 91         call NextScan
 137+ 9A91 EB               ex de,hl
 138+ 9A92
 139+ 9A92 73               ld (hl),e
 140+ 9A93 2C               inc l
 141+ 9A94 72               ld (hl),d
 142+ 9A95 2C               inc l
 143+ 9A96
 144+ 9A96 EB               ex de,hl
 145+ 9A97
 146+ 9A97 CD 37 91         call NextScan
 147+ 9A9A EB               ex de,hl
 148+ 9A9B
 149+ 9A9B 73               ld (hl),e
 150+ 9A9C 2C               inc l
 151+ 9A9D 72               ld (hl),d
 152+ 9A9E 2C               inc l
 153+ 9A9F
 154+ 9A9F EB               ex de,hl
 155+ 9AA0
 156+ 9AA0 CD 37 91         call NextScan
 157+ 9AA3 EB               ex de,hl
 158+ 9AA4
 159+ 9AA4 73               ld (hl),e
 160+ 9AA5 2C               inc l
 161+ 9AA6 72               ld (hl),d
 162+ 9AA7 2C               inc l
 163+ 9AA8
 164+ 9AA8 EB               ex de,hl
 165+ 9AA9
 166+ 9AA9 CD 37 91         call NextScan
 167+ 9AAC EB               ex de,hl
 168+ 9AAD
 169+ 9AAD 73               ld (hl),e
 170+ 9AAE 2C               inc l
 171+ 9AAF 72               ld (hl),d
 172+ 9AB0 2C               inc l
 173+ 9AB1
 174+ 9AB1 EB               ex de,hl
 175+ 9AB2
 176+ 9AB2 CD 37 91         call NextScan
 177+ 9AB5 EB               ex de,hl
 178+ 9AB6
 179+ 9AB6 73               ld (hl),e
 180+ 9AB7 2C               inc l
 181+ 9AB8 72               ld (hl),d
 182+ 9AB9 2C               inc l
 183+ 9ABA
 184+ 9ABA EB               ex de,hl
 185+ 9ABB
 186+ 9ABB CD 37 91         call NextScan
 187+ 9ABE EB               ex de,hl
 188+ 9ABF
 189+ 9ABF 73               ld (hl),e
 190+ 9AC0 2C               inc l
 191+ 9AC1 72               ld (hl),d
 192+ 9AC2 2C               inc l
 193+ 9AC3
 194+ 9AC3 EB               ex de,hl
 195+ 9AC4
 196+ 9AC4 CD 37 91         call NextScan
 197+ 9AC7 EB               ex de,hl
 198+ 9AC8
 199+ 9AC8 73               ld (hl),e
 200+ 9AC9 2C               inc l
 201+ 9ACA 72               ld (hl),d
 202+ 9ACB 2C               inc l
 203+ 9ACC
 204+ 9ACC EB               ex de,hl
 205+ 9ACD
 206+ 9ACD CD 37 91         call NextScan
 207+ 9AD0 EB               ex de,hl
 208+ 9AD1
 209+ 9AD1 73               ld (hl),e
 210+ 9AD2 2C               inc l
 211+ 9AD3 72               ld (hl),d
 212+ 9AD4 2C               inc l
 213+ 9AD5
 214+ 9AD5              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ 9AD5
 216+ 9AD5 22 EB 89         ld (Scanlines_album_SP),hl
 217+ 9AD8
 218+ 9AD8              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ 9AD8
 220+ 9AD8 08               ex af,af
 221+ 9AD9
 222+ 9AD9 F5               push af
 223+ 9ADA E1               pop hl
 224+ 9ADB
 225+ 9ADB 36 10            ld (hl),16
 226+ 9ADD
 227+ 9ADD C9               ret
 228+ 9ADE
 229+ 9ADE              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ 9ADE
 231+ 9ADE              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ 9ADE
 233+ 9ADE 3E 57            ld a,$57
 234+ 9AE0 94               sub h
 235+ 9AE1 20 04            jr nz,4F
 236+ 9AE3
 237+ 9AE3 0E 01            ld c,1
 238+ 9AE5 18 1B            jr 5F
 239+ 9AE7
 240+ 9AE7 47           4 ld b,a
 241+ 9AE8
 242+ 9AE8 3E DF            ld a,$df
 243+ 9AEA BD               cp l
 244+ 9AEB 38 04            jr c,1F
 245+ 9AED
 246+ 9AED 3E 08            ld a,8
 247+ 9AEF 80               add b
 248+ 9AF0 47               ld b,a
 249+ 9AF1
 250+ 9AF1              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 251+ 9AF1              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 252+ 9AF1
 253+ 9AF1 48           1 ld c,b
 254+ 9AF2 0C               inc c
 255+ 9AF3
 256+ 9AF3 CD 37 91     3 call NextScan
 257+ 9AF6 EB               ex de,hl
 258+ 9AF7
 259+ 9AF7 73               ld (hl),e
 260+ 9AF8 2C               inc l
 261+ 9AF9 72               ld (hl),d
 262+ 9AFA 2C               inc l
 263+ 9AFB
 264+ 9AFB EB               ex de,hl
 265+ 9AFC
 266+ 9AFC 10 F5            djnz 3B
 267+ 9AFE
 268+ 9AFE ED 53 EB 89      ld (Scanlines_album_SP),de
 269+ 9B02
 270+ 9B02 08           5 ex af,af
 271+ 9B03 F5               push af
 272+ 9B04 E1               pop hl
 273+ 9B05
 274+ 9B05 71               ld (hl),c
 275+ 9B06
 276+ 9B06 C9               ret
 277+ 9B07
 278+ 9B07              ; -----------------------------------------------------------------------------
 279+ 9B07              ;
 280+ 9B07              ;   21/11/23
 281+ 9B07
 282+ 9B07              Limpia_y_reinicia_Scanlines_album
 283+ 9B07
 284+ 9B07              ;   Limpia Scanlines_album.
 285+ 9B07
 286+ 9B07 2A EB 89         ld hl,(Scanlines_album_SP)
 287+ 9B0A 7D               ld a,l
 288+ 9B0B A7               and a
 289+ 9B0C C8               ret z   ;   Salimos si el álbum está vacío.
 290+ 9B0D
 291+ 9B0D 47               ld b,a
 292+ 9B0E 04               inc b
 293+ 9B0F
 294+ 9B0F 36 00        1 ld (hl),0
 295+ 9B11 2D               dec l
 296+ 9B12 10 FB            djnz 1B
 297+ 9B14
 298+ 9B14              ;   Reinicializa (Scanlines_album_SP).
 299+ 9B14
 300+ 9B14 21 00 80         ld hl,Scanlines_album
 301+ 9B17 22 EB 89         ld (Scanlines_album_SP),hl
 302+ 9B1A
 303+ 9B1A C9               ret
 304+ 9B1B
 305+ 9B1B              ; -----------------------------------------------------------------------------
 306+ 9B1B              ;
 307+ 9B1B              ;   11/03/24
 308+ 9B1B              ;
 309+ 9B1B
 310+ 9B1B              Pinta_Sprites
 311+ 9B1B
 312+ 9B1B 2A EB 89         ld hl,(Scanlines_album_SP)
 313+ 9B1E CD A9 8B         call Extrae_address
 314+ 9B21
 315+ 9B21 24               inc h
 316+ 9B22 25               dec h
 317+ 9B23 C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
 318+ 9B24
 319+ 9B24 ED 73 DD 89      ld (Stack),sp
 320+ 9B28
 321+ 9B28 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
 322+ 9B29              ;                                       ; DE se encuentra en los datos del sprite.
 323+ 9B29 2C               inc l
 324+ 9B2A 2C               inc l
 325+ 9B2B
 326+ 9B2B 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
 327+ 9B2C
 328+ 9B2C 2C               inc l
 329+ 9B2D F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
 330+ 9B2E
 331+ 9B2E              ;   Seleccionamos rutina de impresión:
 332+ 9B2E
 333+ 9B2E 3E 10            ld a,16
 334+ 9B30 B8               cp b
 335+ 9B31 C2 2F 9C         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 336+ 9B34
 337+ 9B34              ;   Rutinas:
 338+ 9B34
 339+ 9B34              Pinta_rapido    ;   1520 t/states.
 340+ 9B34
 341+ 9B34 E1               pop hl
 342+ 9B35
 343+ 9B35 1A               ld a,(de)
 344+ 9B36 AE               xor (hl)
 345+ 9B37 77               ld (hl),a
 346+ 9B38 2C               inc l
 347+ 9B39 1C               inc e
 348+ 9B3A 1A               ld a,(de)
 349+ 9B3B AE               xor (hl)
 350+ 9B3C 77               ld (hl),a
 351+ 9B3D 2C               inc l
 352+ 9B3E 1C               inc e
 353+ 9B3F 1A               ld a,(de)
 354+ 9B40 AE               xor (hl)
 355+ 9B41 77               ld (hl),a
 356+ 9B42 13               inc de
 357+ 9B43
 358+ 9B43 E1               pop hl
 359+ 9B44
 360+ 9B44 1A               ld a,(de)
 361+ 9B45 AE               xor (hl)
 362+ 9B46 77               ld (hl),a
 363+ 9B47 2C               inc l
 364+ 9B48 1C               inc e
 365+ 9B49 1A               ld a,(de)
 366+ 9B4A AE               xor (hl)
 367+ 9B4B 77               ld (hl),a
 368+ 9B4C 2C               inc l
 369+ 9B4D 1C               inc e
 370+ 9B4E 1A               ld a,(de)
 371+ 9B4F AE               xor (hl)
 372+ 9B50 77               ld (hl),a
 373+ 9B51 13               inc de
 374+ 9B52
 375+ 9B52 E1               pop hl
 376+ 9B53
 377+ 9B53 1A               ld a,(de)
 378+ 9B54 AE               xor (hl)
 379+ 9B55 77               ld (hl),a
 380+ 9B56 2C               inc l
 381+ 9B57 1C               inc e
 382+ 9B58 1A               ld a,(de)
 383+ 9B59 AE               xor (hl)
 384+ 9B5A 77               ld (hl),a
 385+ 9B5B 2C               inc l
 386+ 9B5C 1C               inc e
 387+ 9B5D 1A               ld a,(de)
 388+ 9B5E AE               xor (hl)
 389+ 9B5F 77               ld (hl),a
 390+ 9B60 13               inc de
 391+ 9B61
 392+ 9B61 E1               pop hl
 393+ 9B62
 394+ 9B62 1A               ld a,(de)
 395+ 9B63 AE               xor (hl)
 396+ 9B64 77               ld (hl),a
 397+ 9B65 2C               inc l
 398+ 9B66 1C               inc e
 399+ 9B67 1A               ld a,(de)
 400+ 9B68 AE               xor (hl)
 401+ 9B69 77               ld (hl),a
 402+ 9B6A 2C               inc l
 403+ 9B6B 1C               inc e
 404+ 9B6C 1A               ld a,(de)
 405+ 9B6D AE               xor (hl)
 406+ 9B6E 77               ld (hl),a
 407+ 9B6F 13               inc de
 408+ 9B70
 409+ 9B70 E1               pop hl
 410+ 9B71
 411+ 9B71 1A               ld a,(de)
 412+ 9B72 AE               xor (hl)
 413+ 9B73 77               ld (hl),a
 414+ 9B74 2C               inc l
 415+ 9B75 1C               inc e
 416+ 9B76 1A               ld a,(de)
 417+ 9B77 AE               xor (hl)
 418+ 9B78 77               ld (hl),a
 419+ 9B79 2C               inc l
 420+ 9B7A 1C               inc e
 421+ 9B7B 1A               ld a,(de)
 422+ 9B7C AE               xor (hl)
 423+ 9B7D 77               ld (hl),a
 424+ 9B7E 13               inc de
 425+ 9B7F
 426+ 9B7F E1               pop hl
 427+ 9B80
 428+ 9B80 1A               ld a,(de)
 429+ 9B81 AE               xor (hl)
 430+ 9B82 77               ld (hl),a
 431+ 9B83 2C               inc l
 432+ 9B84 1C               inc e
 433+ 9B85 1A               ld a,(de)
 434+ 9B86 AE               xor (hl)
 435+ 9B87 77               ld (hl),a
 436+ 9B88 2C               inc l
 437+ 9B89 1C               inc e
 438+ 9B8A 1A               ld a,(de)
 439+ 9B8B AE               xor (hl)
 440+ 9B8C 77               ld (hl),a
 441+ 9B8D 13               inc de
 442+ 9B8E
 443+ 9B8E E1               pop hl
 444+ 9B8F
 445+ 9B8F 1A               ld a,(de)
 446+ 9B90 AE               xor (hl)
 447+ 9B91 77               ld (hl),a
 448+ 9B92 2C               inc l
 449+ 9B93 1C               inc e
 450+ 9B94 1A               ld a,(de)
 451+ 9B95 AE               xor (hl)
 452+ 9B96 77               ld (hl),a
 453+ 9B97 2C               inc l
 454+ 9B98 1C               inc e
 455+ 9B99 1A               ld a,(de)
 456+ 9B9A AE               xor (hl)
 457+ 9B9B 77               ld (hl),a
 458+ 9B9C 13               inc de
 459+ 9B9D
 460+ 9B9D E1               pop hl
 461+ 9B9E
 462+ 9B9E 1A               ld a,(de)
 463+ 9B9F AE               xor (hl)
 464+ 9BA0 77               ld (hl),a
 465+ 9BA1 2C               inc l
 466+ 9BA2 1C               inc e
 467+ 9BA3 1A               ld a,(de)
 468+ 9BA4 AE               xor (hl)
 469+ 9BA5 77               ld (hl),a
 470+ 9BA6 2C               inc l
 471+ 9BA7 1C               inc e
 472+ 9BA8 1A               ld a,(de)
 473+ 9BA9 AE               xor (hl)
 474+ 9BAA 77               ld (hl),a
 475+ 9BAB 13               inc de
 476+ 9BAC
 477+ 9BAC E1               pop hl
 478+ 9BAD
 479+ 9BAD 1A               ld a,(de)
 480+ 9BAE AE               xor (hl)
 481+ 9BAF 77               ld (hl),a
 482+ 9BB0 2C               inc l
 483+ 9BB1 1C               inc e
 484+ 9BB2 1A               ld a,(de)
 485+ 9BB3 AE               xor (hl)
 486+ 9BB4 77               ld (hl),a
 487+ 9BB5 2C               inc l
 488+ 9BB6 1C               inc e
 489+ 9BB7 1A               ld a,(de)
 490+ 9BB8 AE               xor (hl)
 491+ 9BB9 77               ld (hl),a
 492+ 9BBA 13               inc de
 493+ 9BBB
 494+ 9BBB E1               pop hl
 495+ 9BBC
 496+ 9BBC 1A               ld a,(de)
 497+ 9BBD AE               xor (hl)
 498+ 9BBE 77               ld (hl),a
 499+ 9BBF 2C               inc l
 500+ 9BC0 1C               inc e
 501+ 9BC1 1A               ld a,(de)
 502+ 9BC2 AE               xor (hl)
 503+ 9BC3 77               ld (hl),a
 504+ 9BC4 2C               inc l
 505+ 9BC5 1C               inc e
 506+ 9BC6 1A               ld a,(de)
 507+ 9BC7 AE               xor (hl)
 508+ 9BC8 77               ld (hl),a
 509+ 9BC9 13               inc de
 510+ 9BCA
 511+ 9BCA E1               pop hl
 512+ 9BCB
 513+ 9BCB 1A               ld a,(de)
 514+ 9BCC AE               xor (hl)
 515+ 9BCD 77               ld (hl),a
 516+ 9BCE 2C               inc l
 517+ 9BCF 1C               inc e
 518+ 9BD0 1A               ld a,(de)
 519+ 9BD1 AE               xor (hl)
 520+ 9BD2 77               ld (hl),a
 521+ 9BD3 2C               inc l
 522+ 9BD4 1C               inc e
 523+ 9BD5 1A               ld a,(de)
 524+ 9BD6 AE               xor (hl)
 525+ 9BD7 77               ld (hl),a
 526+ 9BD8 13               inc de
 527+ 9BD9
 528+ 9BD9 E1               pop hl
 529+ 9BDA
 530+ 9BDA 1A               ld a,(de)
 531+ 9BDB AE               xor (hl)
 532+ 9BDC 77               ld (hl),a
 533+ 9BDD 2C               inc l
 534+ 9BDE 1C               inc e
 535+ 9BDF 1A               ld a,(de)
 536+ 9BE0 AE               xor (hl)
 537+ 9BE1 77               ld (hl),a
 538+ 9BE2 2C               inc l
 539+ 9BE3 1C               inc e
 540+ 9BE4 1A               ld a,(de)
 541+ 9BE5 AE               xor (hl)
 542+ 9BE6 77               ld (hl),a
 543+ 9BE7 13               inc de
 544+ 9BE8
 545+ 9BE8 E1               pop hl
 546+ 9BE9
 547+ 9BE9 1A               ld a,(de)
 548+ 9BEA AE               xor (hl)
 549+ 9BEB 77               ld (hl),a
 550+ 9BEC 2C               inc l
 551+ 9BED 1C               inc e
 552+ 9BEE 1A               ld a,(de)
 553+ 9BEF AE               xor (hl)
 554+ 9BF0 77               ld (hl),a
 555+ 9BF1 2C               inc l
 556+ 9BF2 1C               inc e
 557+ 9BF3 1A               ld a,(de)
 558+ 9BF4 AE               xor (hl)
 559+ 9BF5 77               ld (hl),a
 560+ 9BF6 13               inc de
 561+ 9BF7
 562+ 9BF7 E1               pop hl
 563+ 9BF8
 564+ 9BF8 1A               ld a,(de)
 565+ 9BF9 AE               xor (hl)
 566+ 9BFA 77               ld (hl),a
 567+ 9BFB 2C               inc l
 568+ 9BFC 1C               inc e
 569+ 9BFD 1A               ld a,(de)
 570+ 9BFE AE               xor (hl)
 571+ 9BFF 77               ld (hl),a
 572+ 9C00 2C               inc l
 573+ 9C01 1C               inc e
 574+ 9C02 1A               ld a,(de)
 575+ 9C03 AE               xor (hl)
 576+ 9C04 77               ld (hl),a
 577+ 9C05 13               inc de
 578+ 9C06
 579+ 9C06 E1               pop hl
 580+ 9C07
 581+ 9C07 1A               ld a,(de)
 582+ 9C08 AE               xor (hl)
 583+ 9C09 77               ld (hl),a
 584+ 9C0A 2C               inc l
 585+ 9C0B 1C               inc e
 586+ 9C0C 1A               ld a,(de)
 587+ 9C0D AE               xor (hl)
 588+ 9C0E 77               ld (hl),a
 589+ 9C0F 2C               inc l
 590+ 9C10 1C               inc e
 591+ 9C11 1A               ld a,(de)
 592+ 9C12 AE               xor (hl)
 593+ 9C13 77               ld (hl),a
 594+ 9C14 13               inc de
 595+ 9C15
 596+ 9C15 E1               pop hl
 597+ 9C16
 598+ 9C16 1A               ld a,(de)
 599+ 9C17 AE               xor (hl)
 600+ 9C18 77               ld (hl),a
 601+ 9C19 2C               inc l
 602+ 9C1A 1C               inc e
 603+ 9C1B 1A               ld a,(de)
 604+ 9C1C AE               xor (hl)
 605+ 9C1D 77               ld (hl),a
 606+ 9C1E 2C               inc l
 607+ 9C1F 1C               inc e
 608+ 9C20 1A               ld a,(de)
 609+ 9C21 AE               xor (hl)
 610+ 9C22 77               ld (hl),a
 611+ 9C23 13               inc de
 612+ 9C24
 613+ 9C24 ED 73 EB 89  2 ld (Scanlines_album_SP),sp
 614+ 9C28 ED 7B DD 89      ld sp,(Stack)
 615+ 9C2C C3 1B 9B         jp Pinta_Sprites
 616+ 9C2F
 617+ 9C2F              Pinta_lento
 618+ 9C2F
 619+ 9C2F E1           1 pop hl
 620+ 9C30
 621+ 9C30 1A               ld a,(de)
 622+ 9C31 AE               xor (hl)
 623+ 9C32 77               ld (hl),a
 624+ 9C33 2C               inc l
 625+ 9C34 1C               inc e
 626+ 9C35 1A               ld a,(de)
 627+ 9C36 AE               xor (hl)
 628+ 9C37 77               ld (hl),a
 629+ 9C38 2C               inc l
 630+ 9C39 1C               inc e
 631+ 9C3A 1A               ld a,(de)
 632+ 9C3B AE               xor (hl)
 633+ 9C3C 77               ld (hl),a
 634+ 9C3D 13               inc de
 635+ 9C3E
 636+ 9C3E 10 EF            djnz 1B
 637+ 9C40
 638+ 9C40 18 E2            jr 2B
# file closed: Genera_datos_de_impresion.asm
1845  9C42
1846  9C42              	SAVESNA "Pruebas.sna", START
1847  9C42
1848  9C42
1849  9C42
1850  9C42
# file closed: Banco_de_pruebas.asm
