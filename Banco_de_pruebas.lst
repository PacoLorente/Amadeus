# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											 ; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 53 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 12 80        	defw Disparo_fb
 14+  8006 1E 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 00  Disparo_f9 DEFB $00,$60,$00,$00,$60,$00
 19+  8010 60 00
 20+  8012              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8012 00 00 18 00  Disparo_fb DEFW $00,$18,$00,$00,$18,$00
 21+  8016 00 00 00 00
 21+  801A 18 00 00 00
 22+  801E              ; Disparo (CTRL_DESPLZ)="fd"
 23+  801E 00 00 06 00  Disparo_fd DEFW $00,$06,$00,$00,$06,$00
 23+  8022 00 00 00 00
 23+  8026 06 00 00 00
 24+  802A
 25+  802A              ; ----------------------------------------------------------------------------------------
 26+  802A
 27+  802A              ; Badsat_izq. 2x2.
 28+  802A
 29+  802A 3A 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  802C 7A 81        	defw Badsat_izq_fe
 31+  802E 4A 81        	defw Badsat_izq_fd
 32+  8030 1A 81        	defw Badsat_izq_fc
 33+  8032 EA 80        	defw Badsat_izq_fb
 34+  8034 BA 80        	defw Badsat_izq_fa
 35+  8036 8A 80        	defw Badsat_izq_f9
 36+  8038 5A 80        	defw Badsat_izq_f8
 37+  803A
 38+  803A 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  803E 02 2A 02 55
 39+  8042 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8046 7F E8 03 60
 40+  804A 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  804E 2B E8 54 40
 41+  8052 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8056 28 00 10 00
 42+  805A
 43+  805A 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  805E 0A 00 01 15
 44+  8062 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8066 01 55 00 01
 45+  806A 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  806E 00 01 B0 00
 46+  8072 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8076 FC 00 15 F4
 47+  807A 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  807E 55 30 00 2A
 48+  8082 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8086 00 08 00 00
 49+  808A
 50+  808A 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  808E 85 00 00 8A
 51+  8092 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8096 00 AA 80 00
 52+  809A 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  809E 00 00 D8 00
 53+  80A2 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  80A6 FE 00 0A FA
 54+  80AA 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  80AE 2A 98 00 15
 55+  80B2 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80B6 00 04 00 00
 56+  80BA
 57+  80BA 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80BE 42 80 00 45
 58+  80C2 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80C6 00 55 40 00
 59+  80CA 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80CE 00 00 6C 00
 60+  80D2 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80D6 FF 00 05 7D
 61+  80DA 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80DE 15 4C 00 0A
 62+  80E2 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80E6 00 02 00 00
 63+  80EA
 64+  80EA 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80EE 21 40 00 22
 65+  80F2 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80F6 00 2A A0 00
 66+  80FA 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80FE 80 00 36 00
 67+  8102 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  8106 7F 80 02 BE
 68+  810A 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  810E 0A A6 00 05
 69+  8112 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8116 00 01 00 00
 70+  811A
 71+  811A 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  811E 10 A0 00 11
 72+  8122 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8126 00 15 50 00
 73+  812A 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  812E 40 00 1B 00
 74+  8132 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8136 BF C0 01 5F
 75+  813A 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  813E 05 53 00 02
 76+  8142 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8146 00 00 80 00
 77+  814A
 78+  814A 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  814E 08 50 00 08
 79+  8152 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8156 00 0A A8 00
 80+  815A 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  815E A0 00 0D 80
 81+  8162 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8166 5F F8 00 AF
 82+  816A 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  816E 02 A9 00 01
 83+  8172 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8176 00 00 40 00
 84+  817A
 85+  817A 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  817E 04 28 00 04
 86+  8182 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8186 00 05 54 00
 87+  818A 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  818E D0 00 06 C0
 88+  8192 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8196 2F FC 00 57
 89+  819A C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  819E 01 54 80 00
 90+  81A2 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  81A6 00 00 20 00
 91+  81AA
 92+  81AA
 93+  81AA BA 81        Indice_Badsat_der defw Badsat_derecha
 94+  81AC DA 81        	defw Badsat_der_f8
 95+  81AE 0A 82        	defw Badsat_der_f9
 96+  81B0 3A 82        	defw Badsat_der_fa
 97+  81B2 6A 82        	defw Badsat_der_fb
 98+  81B4 9A 82        	defw Badsat_der_fc
 99+  81B6 CA 82        	defw Badsat_der_fd
100+  81B8 FA 82        	defw Badsat_der_fe
101+  81BA
102+  81BA 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81BE 54 40 AA 40
103+  81C2 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81C6 17 FE 06 C0
104+  81CA 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81CE 17 D4 02 2A
105+  81D2 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81D6 00 14 00 08
106+  81DA
107+  81DA 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81DE 20 00 2A 20
108+  81E2 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81E6 2A A0 00 15
109+  81EA 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81EE 00 03 60 00
110+  81F2 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81F6 F4 00 0B EA
111+  81FA 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81FE 03 2A 80 00
112+  8202 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  8206 00 00 04 00
113+  820A
114+  820A 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  820E 10 00 15 10
115+  8212 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8216 15 50 00 0A
116+  821A 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  821E 80 01 B0 00
117+  8222 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8226 FA 00 05 F5
118+  822A 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  822E 01 95 40 00
119+  8232 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8236 00 00 02 00
120+  823A
121+  823A 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  823E 08 00 0A 88
122+  8242 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8246 0A A8 00 05
123+  824A 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  824E C0 00 D8 00
124+  8252 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8256 FD 00 02 FA
125+  825A 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  825E 00 CA A0 00
126+  8262 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8266 80 00 01 00
127+  826A
128+  826A 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  826E 84 00 05 44
129+  8272 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8276 05 54 00 02
130+  827A A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  827E E0 00 6C 00
131+  8282 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8286 FE 80 01 7D
132+  828A 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  828E 00 65 50 00
133+  8292 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8296 40 00 00 80
134+  829A
135+  829A 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  829E 42 00 02 A2
136+  82A2 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  82A6 02 AA 00 01
137+  82AA 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  82AE F0 00 36 00
138+  82B2 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82B6 FF 40 00 BE
139+  82BA A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82BE 00 32 A8 00
140+  82C2 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82C6 A0 00 00 40
141+  82CA
142+  82CA 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82CE A1 00 01 51
143+  82D2 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82D6 01 55 00 00
144+  82DA A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82DE F8 00 1B 00
145+  82E2 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82E6 FF A0 00 1F
146+  82EA 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82EE 00 09 54 00
147+  82F2 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82F6 50 00 00 20
148+  82FA
149+  82FA 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82FE 50 80 00 A8
150+  8302 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  8306 00 AA 80 00
151+  830A 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  830E FC 00 0D 80
152+  8312 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8316 FF D0 00 0F
153+  831A A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  831E 00 04 AA 00
154+  8322 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8326 28 00 00 10
155+  832A
156+  832A              ; ----------------------------------------------------------------------------------------
157+  832A
158+  832A              ; Amadeus. 2x2.
159+  832A
160+  832A 4A 83        Indice_Amadeus_der defw Amadeus
161+  832C 00 00        	defw 0
162+  832E 6A 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  8330 00 00        	defw 0
164+  8332 9A 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8334 00 00        	defw 0
166+  8336 CA 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8338 00 00        	defw 0	 								; (Fín de índice).
168+  833A
169+  833A 4A 83        Indice_Amadeus_izq defw Amadeus
170+  833C 00 00        	defw 0
171+  833E CA 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  8340 00 00        	defw 0
173+  8342 9A 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8344 00 00        	defw 0
175+  8346 6A 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8348 00 00        	defw 0	 								; (Fín de índice).
177+  834A
178+  834A 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  834E 26 64 24 24
179+  8352 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8356 6F F6 67 E6
180+  835A E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  835E F7 EF FF FF
181+  8362 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8366 8B D1 71 8E
182+  836A
183+  836A 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  836E F1 00 09 99
184+  8372 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8376 0B 0D 00 1B
185+  837A 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  837E 80 19 F9 80
186+  8382 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8386 F3 C0 3D FB
187+  838A C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  838E 3E F7 C0 3E
188+  8392 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8396 40 1C 63 80
189+  839A
190+  839A 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  839E 3C 40 02 66
191+  83A2 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  83A6 02 C3 40 06
192+  83AA DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  83AE 60 06 7E 60
193+  83B2 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83B6 3C F0 0F 7E
194+  83BA F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83BE 0F BD F0 0F
195+  83C2 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83C6 10 07 18 E0
196+  83CA
197+  83CA 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83CE 8F 10 00 99
198+  83D2 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83D6 00 B0 D0 01
199+  83DA B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83DE D8 01 9F 98
200+  83E2 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83E6 CF 3C 03 DF
201+  83EA BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83EE 03 EF 7C 03
202+  83F2 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83F6 44 01 C6 38
203+  83FA
204+  83FA              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83FA              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83FA
  2+  83FA              ; Base de datos de entidades e Índice.
  3+  83FA              ;
  4+  83FA              ; 17/02/23
  5+  83FA
  6+  83FA              ; Control. %00000001 00000001
  7+  83FA              ;
  8+  83FA              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83FA              ;                  _ hacen las entidades hacia abajo.
 10+  83FA              ;
 11+  83FA              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83FA
 13+  83FA 00 84        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83FC 08 84        	defw Disparo_2A
 15+  83FE 10 84        	defw Disparo_3A
 16+  8400
 17+  8400 00 00        Disparo_1A defw 0									; Control.
 18+  8402 00 00        	defw 0											; Puntero objeto.
 19+  8404 00 00        	defw 0											; Puntero de impresión.
 20+  8406 00 00        	defw 0											; Rutina de impresión.
 21+  8408
 22+  8408 00 00        Disparo_2A defw 0									; Control.
 23+  840A 00 00        	defw 0											; Puntero objeto.
 24+  840C 00 00        	defw 0											; Puntero de impresión.
 25+  840E 00 00        	defw 0											; Rutina de impresión.
 26+  8410
 27+  8410 00 00        Disparo_3A defw 0
 28+  8412
 29+  8412 28 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8414 30 84        	defw Disparo_2
 31+  8416 38 84        	defw Disparo_3
 32+  8418 40 84        	defw Disparo_4
 33+  841A 48 84        	defw Disparo_5
 34+  841C 50 84        	defw Disparo_6
 35+  841E 58 84        	defw Disparo_7
 36+  8420 60 84        	defw Disparo_8
 37+  8422 68 84        	defw Disparo_9
 38+  8424 70 84        	defw Disparo_10
 39+  8426 78 84        	defw Disparo_11
 40+  8428
 41+  8428 00 00        Disparo_1 defw 0									; Control.
 42+  842A 00 00        	defw 0											; Puntero objeto.
 43+  842C 00 00        	defw 0											; Puntero de impresión.
 44+  842E 00 00        	defw 0											; Rutina de impresión.
 45+  8430
 46+  8430 00 00        Disparo_2 defw 0									; Control.
 47+  8432 00 00        	defw 0											; Puntero objeto.
 48+  8434 00 00        	defw 0											; Puntero de impresión.
 49+  8436 00 00        	defw 0											; Rutina de impresión.
 50+  8438
 51+  8438 00 00        Disparo_3 defw 0									; Control.
 52+  843A 00 00        	defw 0											; Puntero objeto.
 53+  843C 00 00        	defw 0											; Puntero de impresión.
 54+  843E 00 00        	defw 0											; Rutina de impresión.
 55+  8440
 56+  8440 00 00        Disparo_4 defw 0									; Control.
 57+  8442 00 00        	defw 0											; Puntero objeto.
 58+  8444 00 00        	defw 0											; Puntero de impresión.
 59+  8446 00 00        	defw 0											; Rutina de impresión.
 60+  8448
 61+  8448 00 00        Disparo_5 defw 0									; Control.
 62+  844A 00 00        	defw 0											; Puntero objeto.
 63+  844C 00 00        	defw 0											; Puntero de impresión.
 64+  844E 00 00        	defw 0
 65+  8450
 66+  8450 00 00        Disparo_6 defw 0									; Control.
 67+  8452 00 00        	defw 0											; Puntero objeto.
 68+  8454 00 00        	defw 0											; Puntero de impresión.
 69+  8456 00 00        	defw 0											; Rutina de impresión.
 70+  8458
 71+  8458 00 00        Disparo_7 defw 0									; Control.
 72+  845A 00 00        	defw 0											; Puntero objeto.
 73+  845C 00 00        	defw 0											; Puntero de impresión.
 74+  845E 00 00        	defw 0											; Rutina de impresión.
 75+  8460
 76+  8460 00 00        Disparo_8 defw 0									; Control.
 77+  8462 00 00        	defw 0											; Puntero objeto.
 78+  8464 00 00        	defw 0											; Puntero de impresión.
 79+  8466 00 00        	defw 0											; Rutina de impresión.
 80+  8468
 81+  8468 00 00        Disparo_9 defw 0									; Control.
 82+  846A 00 00        	defw 0											; Puntero objeto.
 83+  846C 00 00        	defw 0											; Puntero de impresión.
 84+  846E 00 00        	defw 0											; Rutina de impresión.
 85+  8470
 86+  8470 00 00        Disparo_10 defw 0									; Control.
 87+  8472 00 00        	defw 0											; Puntero objeto.
 88+  8474 00 00        	defw 0											; Puntero de impresión.
 89+  8476 00 00        	defw 0											; Rutina de impresión.
 90+  8478
 91+  8478 00 00        Disparo_11 defw 0
 92+  847A
 93+  847A              ; -------------------------------------------------------------------------------------
 94+  847A
 95+  847A              Indice_de_entidades									; 58 Bytes por entidad.
 96+  847A
 97+  847A C0 84        	defw Entidad_1
 98+  847C FA 84        	defw Entidad_2
 99+  847E 34 85        	defw Entidad_3
100+  8480 6E 85        	defw Entidad_4
101+  8482              ;	...
102+  8482              ;	...
103+  8482              ;	+ entidades ...
104+  8482
105+  8482 00 00        	defw 0
106+  8484 00 00        	defw 0
107+  8486
108+  8486              ; ---------- ---------- ---------- ---------- ----------
109+  8486
110+  8486 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8488 00 00        	defw 0		 									; (Posicion_actual).
112+  848A 00 00        	defw 0	 										; (Puntero_objeto).
113+  848C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  848F
115+  848F 05           	db %00000101									; (Attr).
116+  8490
117+  8490 2A 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8492 3A 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8494 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8496 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8498
122+  8498 D0 50        	defw $50d0										; (Posicion_inicio).
123+  849A 04           	db 4 											; (Cuad_objeto).
124+  849B
125+  849B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  849F
127+  849F 00 00        	db 0,0											; Variables_de_borrado
128+  84A1 00 00        	defw 0											;	" " " " " " "
129+  84A3 00 00        	defw 0											;	" " " " " " "
130+  84A5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  84A9
132+  84A9 00 00        	db 0,0											; Variables_de_pintado
133+  84AB 00 00        	defw 0											;	" " " " " " "
134+  84AD 00 00        	defw 0											;	" " " " " " "
135+  84AF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84B3
137+  84B3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
138+  84B5
139+  84B5 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84B9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84BC
142+  84BC 00           	db 0 											; (Columnas).
143+  84BD 00 00        	defw 0											; (Limite_horizontal).
144+  84BF 00           	db 0											; (Limite_vertical).
145+  84C0
146+  84C0              ; ---------- ---------- ---------- ---------- ----------
147+  84C0
148+  84C0 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84C2 00 00        	defw 0											; (Posicion_actual).
150+  84C4 00 00        	defw 0 											; (Puntero_objeto).
151+  84C6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84C9
153+  84C9 00           	db %00000000 									; (Attr).
154+  84CA
155+  84CA 00 00        	defw 0											; (Indice_Sprite_der).
156+  84CC 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84CE 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84D0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84D2
160+  84D2 00 00        	defw 0											; (Posicion_inicio).
161+  84D4 00           	db 0											; (Cuad_objeto).
162+  84D5
163+  84D5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84D9
165+  84D9 00 00        	db 0,0										    ; Variables_de_borrado
166+  84DB 00 00        	defw 0											;	" " " " " " "
167+  84DD 00 00        	defw 0											;	" " " " " " "
168+  84DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84E3
170+  84E3 00 00        	db 0,0											; Variables_de_pintado
171+  84E5 00 00        	defw 0											;	" " " " " " "
172+  84E7 00 00        	defw 0											;	" " " " " " "
173+  84E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84ED
175+  84ED 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84EF
177+  84EF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84F3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84F6
180+  84F6 00           	db 0 											; (Columnas).
181+  84F7 00 00        	defw 0											; (Limite_horizontal).
182+  84F9 00           	db 0											; (Limite_vertical).
183+  84FA
184+  84FA              ; ---------- ---------- ---------- ---------- ----------
185+  84FA
186+  84FA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84FC 00 00        	defw 0                                          ; (Posicion_actual).
188+  84FE 00 00        	defw 0											; (Puntero_objeto).
189+  8500 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  8503
191+  8503 02           	db %00000010									; (Attr).
192+  8504
193+  8504 AA 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  8506 2A 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  8508 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  850A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  850C
198+  850C 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  850E 02           	db 2											; (Cuad_objeto).
200+  850F
201+  850F 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8513
203+  8513 00 00        	db 0,0											; Variables_de_borrado
204+  8515 00 00        	defw 0										 	;	" " " " " " "
205+  8517 00 00        	defw 0											;	" " " " " " "
206+  8519 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  851D
208+  851D 00 00        	db 0,0											; Variables_de_pintado
209+  851F 00 00        	defw 0											;	" " " " " " "
210+  8521 00 00        	defw 0											;	" " " " " " "
211+  8523 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8527
213+  8527 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8529
215+  8529 6B 93 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  852D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  8530
218+  8530 00           	db 0 											; (Columnas).
219+  8531 00 00        	defw 0											; (Limite_horizontal).
220+  8533 00           	db 0											; (Limite_vertical).
221+  8534
222+  8534              ; ---------- ---------- ---------- ---------- ----------
223+  8534
224+  8534 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8536 00 00        	defw 0                                          ; (Posicion_actual).
226+  8538 00 00        	defw 0											; (Puntero_objeto).
227+  853A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  853D
229+  853D 04           	db %00000100									; (Attr).
230+  853E
231+  853E AA 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  8540 2A 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8542
234+  8542 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  8544 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8546
237+  8546 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8548 01           	db 1											; (Cuad_objeto).
239+  8549
240+  8549 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  854D
242+  854D 00 00        	db 0,0											; Variables_de_borrado
243+  854F 00 00        	defw 0										 	;	" " " " " " "
244+  8551 00 00        	defw 0											;	" " " " " " "
245+  8553 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8557
247+  8557 00 00        	db 0,0											; Variables_de_pintado
248+  8559 00 00        	defw 0											;	" " " " " " "
249+  855B 00 00        	defw 0											;	" " " " " " "
250+  855D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  8561
252+  8561 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8563
254+  8563 6D 93 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  8567 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  856A
257+  856A 00           	db 0 											; (Columnas).
258+  856B 00 00        	defw 0											; (Limite_horizontal).
259+  856D 00           	db 0											; (Limite_vertical).
260+  856E
261+  856E              ; ---------- ---------- ---------- ---------- ----------
262+  856E
263+  856E 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  8570 00 00        	defw 0                                          ; (Posicion_actual).
265+  8572 00 00        	defw 0 											; (Puntero_objeto).
266+  8574 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8577
268+  8577 01           	db %00000001									; (Attr).
269+  8578
270+  8578 AA 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  857A 2A 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  857C
273+  857C 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  857E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  8580
276+  8580 BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8582 00           	db 0											; (Cuad_objeto).
278+  8583
279+  8583 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8587
281+  8587 00 00        	db 0,0											; Variables_de_borrado
282+  8589 00 00        	defw 0										 	;	" " " " " " "
283+  858B 00 00        	defw 0											;	" " " " " " "
284+  858D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  8591
286+  8591 00 00        	db 0,0											; Variables_de_pintado
287+  8593 00 00        	defw 0											;	" " " " " " "
288+  8595 00 00        	defw 0											;	" " " " " " "
289+  8597 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  859B
291+  859B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  859D
293+  859D 5D 93 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  85A1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  85A4
296+  85A4 00           	db 0 											; (Columnas).
297+  85A5 00 00        	defw 0											; (Limite_horizontal).
298+  85A7 00           	db 0											; (Limite_vertical).
299+  85A8
# file closed: Entidades_y_disparos.asm
 21   85A8
 22   85A8              ; ******************************************************************************************************************************************************************************************
 23   85A8              ; Constantes.
 24   85A8              ; ******************************************************************************************************************************************************************************************
 25   85A8              ;
 26   85A8              ; 8/11/22
 27   85A8              ;
 28   85A8              ; Constantes generales.
 29   85A8              ;
 30   85A8
 31   85A8              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   85A8              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   85A8              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   85A8              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   85A8
 36   85A8              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   85A8              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   85A8              ;                               				        ; De momento situamos este almacén en $7000.
 39   85A8              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   85A8              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   85A8              ;                               				        ; De momento situamos este almacén en $7060.
 42   85A8
 43   85A8              ; ******************************************************************************************************************************************************************************************
 44   85A8              ; Variables.
 45   85A8              ; ******************************************************************************************************************************************************************************************
 46   85A8              ;
 47   85A8              ; 10/11/22
 48   85A8              ;
 49   85A8              ; Variables de DRAW. (Motor principal).
 50   85A8              ;
 51   85A8              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   85A8
 53   85A8 02           Filas db 2												; Filas. [DRAW]
 54   85A9 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   85AA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   85AC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   85AE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   85AF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   85B0
 60   85B0              ; ---------- ---------- ---------- ---------;      ;---------
 61   85B0
 62   85B0 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   85B1              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   85B1              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   85B1 04           Attr db %00000100										; Atributos de la entidad:
 66   85B2
 67   85B2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85B2              ;
 69   85B2              ;	COLORES: 0 ..... NEGRO
 70   85B2              ;    		 1 ..... AZUL
 71   85B2              ; 			 2 ..... ROJO
 72   85B2              ;			 3 ..... MAGENTA
 73   85B2              ; 			 4 ..... VERDE
 74   85B2              ; 			 5 ..... CIAN
 75   85B2              ;			 6 ..... AMARILLO
 76   85B2              ; 			 7 ..... BLANCO
 77   85B2
 78   85B2 AA 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85B4 2A 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85B6 00 00        Puntero_DESPLZ_der defw 0
 81   85B8 00 00        Puntero_DESPLZ_izq defw 0
 82   85BA
 83   85BA 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85BC 02           Cuad_objeto db 2			 							; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85BD
 86   85BD              ; Variables de objeto. (Características).
 87   85BD
 88   85BD 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85BE 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85BF 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85C0 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85C1
 93   85C1 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85C5 00 00        	defw 0
 96   85C7 00 00 00 00  	db 0,0,0,0
 97   85CB
 98   85CB 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85CD 00 00        	defw 0
100   85CF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85D1 00 00 00 00  	db 0,0,0,0
102   85D5
103   85D5              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85D5
105   85D5 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85D6              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85D6              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85D6              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85D6              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85D6              ;
111   85D6              ; 														DESCRIPCIÖN:
112   85D6              ;
113   85D6              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85D6              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85D6              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85D6              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85D6              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85D6              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85D6              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85D6              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85D6              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85D6              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85D6              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85D6              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85D6              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85D6              ;
127   85D6              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85D6              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85D6              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85D6
131   85D6 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85D7
133   85D7              ; Movimiento.
134   85D7
135   85D7 59 93        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85D9 00 00        Puntero_mov defw 0
137   85DB 00           Contador_db_mov db 0
138   85DC 00           Incrementa_puntero db 0
139   85DD 00           Repetimos_db db 0
140   85DE
141   85DE              ; Variables de funcionamiento. [DRAW].
142   85DE
143   85DE 00           Columnas db 0
144   85DF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85E1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85E1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85E2
148   85E2              ; 59 Bytes por entidad.
149   85E2              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85E2              ;					         		---------;      ;---------
151   85E2
152   85E2
153   85E2              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85E2
155   85E2 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85E3
157   85E3              ;														DESCRIPCIÓN:
158   85E3              ;
159   85E3              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85E3              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85E3              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85E3              ; Gestión de ENTIDADES.
163   85E3
164   85E3 00 00        Puntero_store_entidades defw 0
165   85E5 00 00        Puntero_restore_entidades defw 0
166   85E7 00 00        Indice_restore defw 0
167   85E9 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
168   85EA 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
169   85EB              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
170   85EB              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
171   85EB              ;														; _ (Numero_de_malotes)="0".
172   85EB 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
173   85ED              ;														; _variable para almacenar lo posición del puntero_
174   85ED              ; 														; _de pila, SP.
175   85ED 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
176   85EF              ;														; La utiliza la rutina [Extrae_foto_registros].
177   85EF 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
178   85F1              ;														; _el snapshot de los registros de la siguiente entidad.
179   85F1              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
180   85F1 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
181   85F3              ;														; _el snapshot de los registros del siguiente disparo.
182   85F3              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
183   85F3
184   85F3              ; Gestión de Disparos.
185   85F3
186   85F3 00           Numero_de_disparotes db 0
187   85F4 12 84        Stack_guns defw Indice_de_disparos_entidades			; Este puntero se irá desplazando por el índice de disparos_
188   85F6              ;														; _a medida que estos se van creando. Se sitúa en el siguiente_
189   85F6              ;														; _campo "vacio" del índice para alojar un nuevo disparo.
190   85F6 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
191   85F8 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
192   85FA
193   85FA
194   85FA
195   85FA              ; Gestión de FRAMES.
196   85FA
197   85FA 00           Switch db 0
198   85FB
199   85FB              ; Variables de Raster y localización en pantalla.
200   85FB
201   85FB 00 FF        Temp_Raster defw $ff00
202   85FD
203   85FD              ; Rutina principal *************************************************************************************************************************************************************************
204   85FD              ;
205   85FD              ;	14/11/22
206   85FD
207   85FD 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
208   8600
209   8600 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
210   8602 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
211   8604 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
212   8606 F3           	DI
213   8607
214   8607 3E 01        	ld a,1
215   8609 D3 FE        	out ($fe),a
216   860B
217   860B 3E 07        	ld a,%00000111
218   860D CD 92 8F     	call Cls
219   8610
220   8610              ;	call Pinta_FILAS
221   8610
222   8610 CD 49 88     	call Pulsa_ENTER
223   8613
224   8613 21 E9 85     	ld hl,Numero_de_entidades
225   8616 46           	ld b,(hl)
226   8617 04           	inc b
227   8618 05           	dec b
228   8619 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
229   861B
230   861B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
231   861B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
232   861B              ;	Pintamos el resto de entidades:
233   861B
234   861B CD 42 87     	call Inicia_punteros_de_entidades
235   861E
236   861E              ;	INICIA ENTIDADES!!!!!
237   861E
238   861E C5           1 push bc  												; Guardo el contador de entidades.
239   861F CD 9C 87      	call Inicia_Puntero_objeto
240   8622 CD E2 89     	call Draw
241   8625 CD A0 7F     	call Guarda_foto_registros
242   8628 CD E4 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
243   862B C1           	pop bc
244   862C 10 F0        	djnz 1B  											; Decremento el contador de entidades.
245   862E
246   862E              ; 	INICIA AMADEUS!!!!!
247   862E
248   862E CD 25 88     3 call Restore_Amadeus
249   8631 CD 9C 87     	call Inicia_Puntero_objeto
250   8634 CD E2 89     	call Draw
251   8637 CD A0 7F     	call Guarda_foto_registros
252   863A CD 37 88     	call Store_Amadeus
253   863D
254   863D              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
255   863D
256   863D CD 58 87     	call Inicia_Puntero_Disparo_Entidades
257   8640 CD 5F 87     	call Inicia_Puntero_Disparo_Amadeus
258   8643
259   8643
260   8643              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
261   8643
262   8643 CD 42 87     	call Inicia_punteros_de_entidades
263   8646 CD 13 88     	call Restore_Primera_entidad
264   8649
265   8649 3A E9 85     	ld a,(Numero_de_entidades)
266   864C 3C           	inc a
267   864D 32 EA 85     	ld (Numero_de_malotes),a
268   8650
269   8650 FB           2 ei
270   8651 18 FD        	jr 2B
271   8653
272   8653              ; -----------------------------------------------------------------------------------
273   8653
274   8653              Frame
275   8653
276   8653              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
277   8653              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
278   8653
279   8653 3E 02            ld a,2
280   8655 D3 FE            out ($fe),a
281   8657 CD E6 8C     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
282   865A CD 1F 8D     	call Extrae_foto_registros_disparos
283   865D 3E 01            ld a,1
284   865F D3 FE            out ($fe),a
285   8661
286   8661              ; ----------------------------------------------------------------------
287   8661
288   8661 21 00 70     	ld hl,Album_de_fotos
289   8664 22 EF 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
290   8667              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
291   8667 3A E9 85         ld a,(Numero_de_entidades)
292   866A 47               ld b,a
293   866B A7           	and a
294   866C 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
295   866E
296   866E C5           2 push bc
297   866F CD BB 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
298   8672 3A D5 85     	ld a,(Ctrl_0)
299   8675 CB 67        	bit 4,a
300   8677 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
301   8679
302   8679              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
303   8679              ; Las entidades sólo generan disparo cuando se mueven.
304   8679              ; 16/02/23.
305   8679              ; [[[
306   8679 CD 7F 88     	call Detecta_disparo_entidad
307   867C              ; ]]]
308   867C
309   867C CD 09 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
310   867F
311   867F 21 D5 85     1 ld hl,Ctrl_0
312   8682 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
313   8684 AF           	xor a
314   8685 32 D6 85     	ld (Obj_dibujado),a
315   8688 CD E4 87     	call Store_Restore_entidades
316   868B C1           	pop bc
317   868C 10 E0        	djnz 2B
318   868E
319   868E              ; Tras la gestión de las entidades, ... AMADEUS.
320   868E
321   868E CD 25 88     4 call Restore_Amadeus
322   8691 CD DA 86     	call Mov_Amadeus
323   8694 3A D5 85     	ld a,(Ctrl_0)
324   8697 CB 67        	bit 4,a
325   8699 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
326   869B CD 09 87     	call Guarda_foto_entidad_a_pintar
327   869E
328   869E 21 D5 85     3 ld hl,Ctrl_0
329   86A1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
330   86A3 AF           	xor a
331   86A4 32 D6 85     	ld (Obj_dibujado),a
332   86A7 CD 37 88     	call Store_Amadeus
333   86AA
334   86AA              ; -----
335   86AA
336   86AA CD 42 87     	call Inicia_punteros_de_entidades
337   86AD CD 13 88     	call Restore_Primera_entidad
338   86B0
339   86B0              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
340   86B0
341   86B0 CD 66 87     	call Calcula_numero_de_malotes
342   86B3 CD 7E 87     	call Calcula_numero_de_disparotes
343   86B6
344   86B6 3E 04        	ld a,4
345   86B8 D3 FE        	out ($fe),a
346   86BA C9           	ret
347   86BB
348   86BB              ; --------------------------------------------------------------------------------------------------------------
349   86BB              ;
350   86BB              ;	29/1/23
351   86BB
352   86BB              Mov_obj
353   86BB
354   86BB              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
355   86BB
356   86BB AF           	xor a
357   86BC 32 D6 85     	ld (Obj_dibujado),a
358   86BF CD 13 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
359   86C2              ;														; Obj_dibujado="0".
360   86C2              ; Movemos Entidades malignas.
361   86C2
362   86C2 CD 6F 93     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
363   86C5 3A D5 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
364   86C8 CB 67        	bit 4,a
365   86CA C8           	ret z
366   86CB
367   86CB              ; ---------
368   86CB
369   86CB 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
370   86CD 32 D6 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
371   86D0 CD 13 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
372   86D3 CD 2A 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
373   86D6 CD F9 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
374   86D9 C9           	ret													; _de la misma.
375   86DA
376   86DA              ; --------------------------------------------------------------------------------------------------------------
377   86DA              ;
378   86DA              ;	29/1/23
379   86DA
380   86DA              Mov_Amadeus
381   86DA
382   86DA AF           	xor a
383   86DB 32 D6 85     	ld (Obj_dibujado),a
384   86DE CD 13 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
385   86E1              ;														; Obj_dibujado="0".
386   86E1              ; Movemos Amadeus.
387   86E1
388   86E1 CD 5D 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
389   86E4 3A D5 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
390   86E7 CB 67        	bit 4,a
391   86E9 C8           	ret z
392   86EA
393   86EA              ; ---------
394   86EA
395   86EA 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
396   86EC 32 D6 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
397   86EF CD 13 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
398   86F2 CD 2A 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
399   86F5 CD F9 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
400   86F8 C9           	ret													; _de la nave.
401   86F9
402   86F9              ; --------------------------------------------------------------------------------------------------------------
403   86F9              ;
404   86F9              ;	31/01/23
405   86F9              ;
406   86F9              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
407   86F9
408   86F9              Guarda_foto_entidad_a_borrar
409   86F9
410   86F9 CD BC 8C     	call Prepara_draw
411   86FC CD F6 8B     	call calcula_CColumnass
412   86FF CD 2D 8C     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
413   8702 CD 82 8C     	call Define_rutina_de_impresion
414   8705 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
415   8708 C9           	ret
416   8709
417   8709              ; --------------------------------------------------------------------------------------------------------------
418   8709              ;
419   8709              ;	31/01/23
420   8709              ;
421   8709              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
422   8709              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
423   8709
424   8709              Guarda_foto_entidad_a_pintar
425   8709
426   8709 CD 36 87     	call Repone_pintar
427   870C CD E2 89     	call Draw
428   870F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
429   8712 C9           	ret
430   8713
431   8713              ; --------------------------------------------------------------------------------------------------------------
432   8713              ;
433   8713              ;
434   8713
435   8713 21 A8 85     Prepara_var_pintado_borrado	ld hl,Filas
436   8716 3A D6 85     	ld a,(Obj_dibujado)
437   8719 A7           	and a
438   871A 28 05        	jr z,1F
439   871C 11 CB 85     	ld de,Variables_de_pintado
440   871F 18 03        	jr 2F
441   8721 11 C1 85     1 ld de,Variables_de_borrado
442   8724 01 08 00     2 ld bc,8
443   8727 ED B0        	ldir
444   8729 C9           	ret
445   872A
446   872A              ; --------------------------------------------------------------------------------------------------------------
447   872A
448   872A 21 C1 85     Repone_borrar ld hl,Variables_de_borrado
449   872D 11 A8 85     	ld de,Filas
450   8730 01 08 00     	ld bc,8
451   8733 ED B0        	ldir
452   8735 C9           	ret
453   8736
454   8736 21 CB 85     Repone_pintar ld hl,Variables_de_pintado
455   8739 11 A8 85     	ld de,Filas
456   873C 01 08 00     	ld bc,8
457   873F ED B0        	ldir
458   8741 C9           	ret
459   8742
460   8742              ; *************************************************************************************************************************************************************
461   8742              ;
462   8742              ; 8/1/23
463   8742              ;
464   8742              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
465   8742              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
466   8742              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
467   8742
468   8742              ; Destruye HL y DE !!!!!
469   8742
470   8742              Inicia_punteros_de_entidades
471   8742
472   8742 21 7A 84     	ld hl,Indice_de_entidades
473   8745 CD 96 87         call Extrae_address
474   8748 22 E3 85         ld (Puntero_store_entidades),hl
475   874B 21 7C 84     	ld hl,Indice_de_entidades+2
476   874E 22 E7 85     	ld (Indice_restore),hl
477   8751 CD 96 87     	call Extrae_address
478   8754 22 E5 85     	ld (Puntero_restore_entidades),hl
479   8757 C9               ret
480   8758
481   8758              ; *************************************************************************************************************************************************************
482   8758              ;
483   8758              ; 8/1/23
484   8758              ;
485   8758              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
486   8758
487   8758 21 12 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
488   875B 22 F6 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
489   875E C9           	ret
490   875F 21 FA 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
491   8762 22 F8 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
492   8765 C9           	ret
493   8766
494   8766              ; -------------------------------------------------------------------------------------------------------------
495   8766              ;
496   8766              ; 28/2/23
497   8766              ;
498   8766
499   8766              Calcula_numero_de_malotes
500   8766
501   8766 21 00 70     	ld hl,Album_de_fotos
502   8769 EB           	ex de,hl
503   876A 2A EF 85     	ld hl,(Stack_snapshot)
504   876D
505   876D 06 00        	ld b,0
506   876F 7D           	ld a,l
507   8770 93           	sub e
508   8771 28 07        	jr z,1F
509   8773
510   8773              ; Nº de malotes no es "0".
511   8773
512   8773 D6 06        2 sub 6
513   8775 04           	inc b
514   8776 A7           	and a
515   8777 20 FA        	jr nz,2B
516   8779 78           	ld a,b
517   877A
518   877A 32 EA 85     1 ld (Numero_de_malotes),a
519   877D C9           	ret
520   877E
521   877E              ; -------------------------------------------------------------------------------------------------------------
522   877E              ;
523   877E              ; 28/2/23
524   877E              ;
525   877E
526   877E              Calcula_numero_de_disparotes
527   877E
528   877E 21 60 70     	ld hl,Album_de_fotos_disparos
529   8781 EB           	ex de,hl
530   8782 2A F1 85     	ld hl,(Stack_snapshot_disparos)
531   8785
532   8785 06 00        	ld b,0
533   8787 7D           	ld a,l
534   8788 93           	sub e
535   8789 28 07        	jr z,1F
536   878B
537   878B              ; Nº de malotes no es "0".
538   878B
539   878B D6 06        2 sub 6
540   878D 04           	inc b
541   878E A7           	and a
542   878F 20 FA        	jr nz,2B
543   8791 78           	ld a,b
544   8792
545   8792 32 F3 85     1 ld (Numero_de_disparotes),a
546   8795 C9           	ret
547   8796              ; *************************************************************************************************************************************************************
548   8796              ;
549   8796              ; 20/10/22
550   8796              ;
551   8796              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
552   8796              ;
553   8796              ; Destruye el puntero y DE !!!!!
554   8796
555   8796 5E           Extrae_address ld e,(hl)
556   8797 23           	inc hl
557   8798 56           	ld d,(hl)
558   8799 2B           	dec hl
559   879A EB           	ex de,hl
560   879B C9           	ret
561   879C
562   879C              ; *************************************************************************************************************************************************************
563   879C              ;
564   879C              ;	7/2/23
565   879C              ;
566   879C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
567   879C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
568   879C              ;
569   879C              ;   Destruye HL y BC !!!!!,
570   879C              ;
571   879C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
572   879C              ;					"0" ..... Izquierda.
573   879C
574   879C              Inicia_Puntero_objeto
575   879C
576   879C 3A BC 85     	ld a,(Cuad_objeto)
577   879F E6 01        	and 1
578   87A1 F5           	push af
579   87A2 CC C0 87     	call z,Inicia_puntero_objeto_izq
580   87A5 F1           	pop af
581   87A6 28 2B        	jr z,1F
582   87A8 CD AD 87     	call Inicia_puntero_objeto_der
583   87AB 18 26        	jr 1F
584   87AD
585   87AD              ; Arrancamos desde la parte izquierda de la pantalla.
586   87AD              ; Iniciamos (Indice_Sprite_der).
587   87AD
588   87AD 2A B2 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
589   87B0 22 B6 85     	ld (Puntero_DESPLZ_der),hl
590   87B3 CD 96 87     	call Extrae_address
591   87B6 22 AC 85     	ld (Puntero_objeto),hl
592   87B9
593   87B9 2A B4 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
594   87BC              ;	call Extrae_address
595   87BC 22 B8 85     	ld (Puntero_DESPLZ_izq),hl
596   87BF C9           	ret
597   87C0
598   87C0              ; Arrancamos desde la parte derecha de la pantalla.
599   87C0              ; Iniciamos (Indice_Sprite_izq).
600   87C0
601   87C0 2A B4 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
602   87C3 22 B8 85     	ld (Puntero_DESPLZ_izq),hl
603   87C6 CD 96 87     	call Extrae_address
604   87C9 22 AC 85     	ld (Puntero_objeto),hl
605   87CC
606   87CC 2A B2 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
607   87CF              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
608   87CF 22 B6 85     	ld (Puntero_DESPLZ_der),hl
609   87D2 C9           	ret
610   87D3
611   87D3              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
612   87D3
613   87D3 21 4A 83     1 ld hl,Amadeus
614   87D6 ED 4B AC 85  	ld bc,(Puntero_objeto)
615   87DA B7 ED 42     	sub hl,bc
616   87DD C0           	ret nz
617   87DE 21 D5 85     	ld hl,Ctrl_0
618   87E1 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
619   87E3 C9           	ret 												; _de nuestra nave en los extremos.
620   87E4
621   87E4              ; *************************************************************************************************************************************************************
622   87E4              ;
623   87E4              ;	8/1/23
624   87E4              ;
625   87E4              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
626   87E4              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
627   87E4
628   87E4              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
629   87E4              ;	_de la 2ª y 3ª entidad respectivamente.
630   87E4
631   87E4              Store_Restore_entidades
632   87E4
633   87E4 E5           	push hl
634   87E5 D5           	push de
635   87E6 C5            	push bc
636   87E7
637   87E7              ;	STORE !!!!!
638   87E7              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
639   87E7
640   87E7 21 A8 85     	ld hl,Filas
641   87EA ED 5B E3 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
642   87EE 01 3A 00     	ld bc,58
643   87F1 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
644   87F3
645   87F3              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
646   87F3
647   87F3 2A E5 85     	ld hl,(Puntero_restore_entidades)
648   87F6 22 E3 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
649   87F9 11 A8 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
650   87FC 01 3A 00     	ld bc,58
651   87FF ED B0        	ldir
652   8801
653   8801              ;	Incrementa RESTORE !!!!!
654   8801
655   8801 2A E7 85         ld hl,(Indice_restore)
656   8804 23           	inc hl
657   8805 23           	inc hl
658   8806 22 E7 85     	ld (Indice_restore),hl
659   8809 CD 96 87         call Extrae_address
660   880C 22 E5 85         ld (Puntero_restore_entidades),hl
661   880F C1           	pop bc
662   8810 D1           	pop de
663   8811 E1           	pop hl
664   8812 C9           	ret
665   8813
666   8813              ; **************************************************************************************************
667   8813              ;
668   8813              ;	29/10/22
669   8813              ;
670   8813              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
671   8813
672   8813 E5           Restore_Primera_entidad push hl
673   8814 D5           	push de
674   8815 C5            	push bc
675   8816 2A E3 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
676   8819 11 A8 85     	ld de,Filas
677   881C 01 3A 00     	ld bc,58
678   881F ED B0        	ldir
679   8821 C1           	pop bc
680   8822 D1           	pop de
681   8823 E1           	pop hl
682   8824 C9           	ret
683   8825
684   8825              ; **************************************************************************************************
685   8825              ;
686   8825              ;	25/01/23
687   8825              ;
688   8825              ;	Restore_Amadeus
689   8825              ;
690   8825              ;	Cargamos en DRAW los parámetros de Amadeus.
691   8825              ;
692   8825
693   8825 E5           Restore_Amadeus	push hl
694   8826 D5           	push de
695   8827 C5            	push bc
696   8828 21 86 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
697   882B 11 A8 85     	ld de,Filas
698   882E 01 3A 00     	ld bc,58
699   8831 ED B0        	ldir
700   8833 C1           	pop bc
701   8834 D1           	pop de
702   8835 E1           	pop hl
703   8836 C9           	ret
704   8837
705   8837              ; *************************************************************************************************************************************************************
706   8837              ;
707   8837              ;	29/01/23
708   8837              ;
709   8837              ;	Store_Amadeus
710   8837              ;
711   8837              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
712   8837              ;
713   8837
714   8837 E5           Store_Amadeus push hl
715   8838 D5           	push de
716   8839 C5            	push bc
717   883A 21 A8 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
718   883D 11 86 84     	ld de,Amadeus_db
719   8840 01 3A 00     	ld bc,58
720   8843 ED B0        	ldir
721   8845 C1           	pop bc
722   8846 D1           	pop de
723   8847 E1           	pop hl
724   8848 C9           	ret
725   8849
726   8849              ; **************************************************************************************************
727   8849
728   8849              ; Teclado.
729   8849
730   8849 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
731   884B DB FE        	in a,($fe)
732   884D E6 01        	and $01
733   884F 28 02        	jr z,1f
734   8851 18 F6        	jr Pulsa_ENTER
735   8853 C9           1 ret
736   8854
737   8854              ; **************************************************************************************************
738   8854              ;
739   8854              ; Temporización.
740   8854
741   8854              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
742   8854              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
743   8854              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
744   8854              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
745   8854
746   8854              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
747   8854              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
748   8854              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
749   8854
750   8854              ; A partir de $4f61 no hace falta DELAY.
751   8854
752   8854              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
753   8854
754   8854 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
755   8857 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
756   8858 78           	LD A,B
757   8859 A7           	AND A
758   885A 20 FB        	JR NZ,wait
759   885C C9           	RET
760   885D
761   885D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
762   885D              ;
763   885D              ;	16/02/23
764   885D
765   885D              Movimiento_Amadeus
766   885D
767   885D              ; Disparo.
768   885D
769   885D 3E F7        	ld a,$f7												; "5" para disparar.
770   885F DB FE        	in a,($fe)
771   8861 E6 10        	and $10
772   8863 CC B3 88     	call z,Genera_disparo
773   8866
774   8866 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
775   8868 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
776   886A E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
777   886C CC 20 91         call z,Mov_left											;			"			"			"			"			"			"			"			"
778   886F 3E F7        	ld a,$f7
779   8871 DB FE        	in a,($fe)
780   8873 E6 01        	and $01
781   8875 C8           	ret z
782   8876
783   8876 3E F7        	ld a,$f7
784   8878 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
785   887A E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
786   887C CC 02 90     	call z,Mov_right										;			"			"			"			"			"			"			"			"
787   887F
788   887F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
789   887F              ;
790   887F              ;	Rutina provisional para que los malotes cagen balas.
791   887F
792   887F 3E 7F        Detecta_disparo_entidad	ld a,$7f
793   8881 DB FE        	in a,($fe)
794   8883 E6 01        	and 1
795   8885 C0           	ret nz
796   8886 CD B3 88     	call Genera_disparo
797   8889 C9           	ret
798   888A
799   888A              ; Pinta indicadores de FILAS. ------------------------------------------------------
800   888A
801   888A 21 10 40     Pinta_FILAS ld hl,$4010
802   888D              ;	ld b,9
803   888D              ;2 push hl
804   888D              ;	push bc
805   888D 06 BF        	ld b,$bf
806   888F 36 80        1 ld (hl),%10000000
807   8891 CD C8 8C     	call NextScan
808   8894 10 F9        	djnz 1B
809   8896              ;	pop bc
810   8896              ;	pop hl
811   8896              ;	inc l
812   8896              ;	djnz 2B
813   8896 06 03        	ld b,3
814   8898 21 00 47         ld hl,$4700
815   889B CD A1 88     3 call Bucle_1
816   889E 10 FB            djnz 3B
817   88A0 C9               ret
818   88A1
819   88A1 C5           Bucle_1 push bc
820   88A2 E5                   push hl
821   88A3 D1                   pop de
822   88A4 13                   inc de
823   88A5 01 FF 00             ld bc,255
824   88A8 36 FF                ld (hl),255
825   88AA ED B0                ldir
826   88AC 23                   inc hl
827   88AD 3E 07                ld a,7
828   88AF 84                   add a,h
829   88B0 67                   ld h,a
830   88B1 C1                   pop bc
831   88B2 C9                   ret
832   88B3
833   88B3              ; ---------------------------------------------------------------
834   88B3
835   88B3              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88B3              ; ******************************************************************************************************************************************************************************************
  2+  88B3              ;
  3+  88B3              ;   19/02/23
  4+  88B3              ;
  5+  88B3              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88B3              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88B3              ;
  8+  88B3              ;
  9+  88B3              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88B3              ;
 11+  88B3              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88B3              ;               _ hacen las entidades hacia abajo.
 13+  88B3              ;
 14+  88B3              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88B3              ;
 16+  88B3              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88B3              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88B3              ;
 19+  88B3              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88B3              ;           _ la bala.
 21+  88B3              ;
 22+  88B3              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88B3              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88B3              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88B3              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88B3              ;           _ en el momento de generarse la bala)).
 27+  88B3
 28+  88B3              Genera_disparo
 29+  88B3
 30+  88B3              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88B3              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88B3              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88B3              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88B3              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88B3              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga dichos valores.
 36+  88B3              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88B3
 38+  88B3 3A DE 85         ld a,(Columnas)
 39+  88B6 47               ld b,a
 40+  88B7 3A A9 85         ld a,(Columns)
 41+  88BA B8               cp b
 42+  88BB C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  88BC
 44+  88BC 21 00 80         ld hl,Indice_disparo
 45+  88BF 3A B0 85         ld a,(CTRL_DESPLZ)
 46+  88C2 4F               ld c,a
 47+  88C3 A7               and a
 48+  88C4 28 10            jr z,1F
 49+  88C6
 50+  88C6 C9               ret
 51+  88C7
 52+  88C7 E6 01            and 1
 53+  88C9 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 54+  88CA
 55+  88CA 79               ld a,c
 56+  88CB 06 F9            ld b,$f9
 57+  88CD 23           2 inc hl
 58+  88CE 23               inc hl
 59+  88CF B8               cp b
 60+  88D0 28 04            jr z,1F
 61+  88D2 04               inc b
 62+  88D3 04               inc b
 63+  88D4 18 F7            jr 2B
 64+  88D6
 65+  88D6 CD 96 87     1 call Extrae_address
 66+  88D9 E5               push hl
 67+  88DA FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 68+  88DC DD 21 5B 8F  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 69+  88E0
 70+  88E0              ; --------------- ---------------- ----------------- -------------
 71+  88E0              ;
 72+  88E0              ;   Genera disparo.
 73+  88E0              ;
 74+  88E0              ;   Generamos variables de disparo. Varían en función del cuadrante en el que nos encontramos.
 75+  88E0
 76+  88E0 3A BC 85     	ld a,(Cuad_objeto)
 77+  88E3 FE 02            cp 2
 78+  88E5 38 52            jr c,3F
 79+  88E7 28 50            jr z,3F
 80+  88E9
 81+  88E9              ; Estamos en mitad inferior de pantalla, (cuadrantes 3 y 4).
 82+  88E9
 83+  88E9 E6 01            and 1
 84+  88EB 28 27            jr z,4F
 85+  88ED
 86+  88ED              ; Estamos en el 3er cuadrante de pantalla.
 87+  88ED              ; 3er CUAD. ----- ----- ----- ----- -----
 88+  88ED              ;
 89+  88ED              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 90+  88ED              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 91+  88ED              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 92+  88ED
 93+  88ED 2A AA 85     	ld hl,(Posicion_actual)
 94+  88F0
 95+  88F0              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
 96+  88F0
 97+  88F0 3A D5 85         ld a,(Ctrl_0)
 98+  88F3 CB 77            bit 6,a
 99+  88F5 28 0B            jr z,8F
100+  88F7
101+  88F7              ; Dispara Amadeus.
102+  88F7
103+  88F7 0E 01            ld c,1	                                        ; Dirección "1", hacia arriba.
104+  88F9 CD D7 8C         call PreviousScan
105+  88FC CD D7 8C         call PreviousScan
106+  88FF 2B               dec hl                                          ; Puntero de impresión en HL.
107+  8900 18 0A            jr 10F
108+  8902
109+  8902              ; Dispara Entidad.
110+  8902
111+  8902 0E 00        8 ld c,0	                                        ; Dirección "0", hacia abajo.
112+  8904 06 10            ld b,16
113+  8906 CD C8 8C     9 call NextScan
114+  8909 10 FB            djnz 9B
115+  890B
116+  890B              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
117+  890B
118+  890B 2B               dec hl                                          ; Puntero de impresión en HL.
119+  890C CD BD 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
120+  890F              ;                                                   ; _al generar el disparo.
121+  890F
122+  890F              ; LLegados a este punto tendremos:
123+  890F              ;
124+  890F              ;       Puntero_objeto_disparo en IY.
125+  890F              ;       Rutinas_de_impresion en IX.
126+  890F              ;       Puntero_de_impresion en HL.
127+  890F              ;       Impacto/Dirección en BC.
128+  890F
129+  890F CD 57 89         call Almacena_disparo
130+  8912 18 42            jr 6F                                           ; RET.
131+  8914
132+  8914
133+  8914              ; Estamos en el 4º cuadrante de pantalla.
134+  8914              ; 4º CUAD. ----- ----- ----- ----- -----
135+  8914              ;
136+  8914              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
137+  8914              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
138+  8914              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
139+  8914
140+  8914 2A AA 85     4 ld hl,(Posicion_actual)
141+  8917
142+  8917              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
143+  8917
144+  8917 3A D5 85         ld a,(Ctrl_0)
145+  891A CB 77            bit 6,a
146+  891C 28 0A            jr z,11F
147+  891E
148+  891E              ; Dispara Amadeus.
149+  891E
150+  891E 0E 01            ld c,1                                            ; Dirección "1", hacia arriba.
151+  8920              ;    inc hl
152+  8920 CD D7 8C         call PreviousScan
153+  8923 CD D7 8C         call PreviousScan
154+  8926 18 09            jr 13F
155+  8928
156+  8928              ; Dispara Entidad.
157+  8928
158+  8928 0E 00        11 ld c,0                                        	  ; Dirección "0", hacia abajo.
159+  892A 06 10            ld b,16
160+  892C              ;    inc hl
161+  892C CD C8 8C     12 call NextScan
162+  892F 10 FB            djnz 12B
163+  8931
164+  8931              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
165+  8931
166+  8931 CD BD 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
167+  8934              ;                                                     ; _al generar el disparo.
168+  8934
169+  8934              ; LLegados a este punto tendremos:
170+  8934              ;
171+  8934              ;       Puntero_objeto_disparo en IY.
172+  8934              ;       Rutinas_de_impresion en IX.
173+  8934              ;       Puntero_de_impresion en HL.
174+  8934              ;       Impacto/Dirección en BC.
175+  8934
176+  8934 CD 57 89         call Almacena_disparo
177+  8937 18 1D            jr 6F                                           ; RET.
178+  8939
179+  8939              ; Estamos en la mitad superior de pantalla, (cuadrantes 1 y 2).
180+  8939
181+  8939 28 0F        3 jr z,5F
182+  893B
183+  893B              ; 1er CUAD. ----- ----- ----- ----- -----
184+  893B              ;
185+  893B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
186+  893B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
187+  893B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
188+  893B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
189+  893B
190+  893B 2A AA 85     	ld hl,(Posicion_actual)
191+  893E CD C8 8C     	call NextScan
192+  8941
193+  8941              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
194+  8941
195+  8941 2B               dec hl                                          ; Puntero de impresión en HL.
196+  8942
197+  8942              ; No se produce impacto. B="0"
198+  8942              ; Dirección del proyectil hacia abajo. C="0"
199+  8942
200+  8942 01 00 00         ld bc,0
201+  8945
202+  8945              ; LLegados a este punto tendremos:
203+  8945              ;
204+  8945              ;       Puntero_objeto_disparo en IY.
205+  8945              ;       Rutinas_de_impresion en IX.
206+  8945              ;       Puntero_de_impresion en HL.
207+  8945              ;       Impacto/Dirección en BC.
208+  8945
209+  8945 CD 57 89         call Almacena_disparo
210+  8948 18 0C            jr 6F                                           ; RET.
211+  894A
212+  894A              ; Estamos en el 2º cuadrante de pantalla.
213+  894A              ; 2º CUAD. ----- ----- ----- ----- -----
214+  894A              ;
215+  894A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
216+  894A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
217+  894A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
218+  894A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
219+  894A
220+  894A 2A AA 85     5 ld hl,(Posicion_actual)
221+  894D
222+  894D              ;	inc hl
223+  894D
224+  894D CD C8 8C     	call NextScan
225+  8950
226+  8950              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
227+  8950
228+  8950              ; No se produce impacto. B="$80"
229+  8950              ; Dirección del proyectil hacia abajo. C="80"
230+  8950
231+  8950 01 00 00         ld bc,0
232+  8953
233+  8953              ; LLegados a este punto tendremos:
234+  8953              ;
235+  8953              ;       Puntero_objeto_disparo en IY.
236+  8953              ;       Rutinas_de_impresion en IX.
237+  8953              ;       Puntero_de_impresion en HL.
238+  8953              ;       Impacto/Dirección en BC.
239+  8953
240+  8953 CD 57 89         call Almacena_disparo
241+  8956
242+  8956              ; Preparamos registros para llamar a [Guarda_foto_registros].
243+  8956              ; Antes de llamar a [Guarda_foto_registros] indicamos que se trata de un disparo.
244+  8956
245+  8956 C9           6 ret
246+  8957
247+  8957              ; ----------------------------------------------------------------
248+  8957              ;
249+  8957              ;   25/02/23
250+  8957              ;
251+  8957              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
252+  8957              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
253+  8957
254+  8957
255+  8957              Almacena_disparo
256+  8957
257+  8957 E5               push hl
258+  8958 F1               pop af
259+  8959 08               ex af,af                                        ; Puntero_de_impresion en AF'.
260+  895A
261+  895A 0C           3 inc c
262+  895B 0D               dec c
263+  895C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
264+  895E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
265+  895E
266+  895E              ; Dispara AMADEUS.
267+  895E
268+  895E C5               push bc
269+  895F 01 FE 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
270+  8962 2A F8 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
271+  8965 A7               and a
272+  8966 ED 42            sbc hl,bc
273+  8968 CC 5F 87         call z,Inicia_Puntero_Disparo_Amadeus
274+  896B C1               pop bc
275+  896C 28 4E            jr z,4F
276+  896E
277+  896E 2A F8 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
278+  8971 23               inc hl
279+  8972 23               inc hl
280+  8973 22 F8 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
281+  8976              ;                                                   ; _ Disparo_(+1).
282+  8976 18 18            jr 2F
283+  8978
284+  8978              ; Dispara una entidad.
285+  8978
286+  8978 C5           1 push bc
287+  8979 01 26 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
288+  897C 2A F6 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
289+  897F A7               and a
290+  8980 ED 42            sbc hl,bc
291+  8982 CC 58 87         call z,Inicia_Puntero_Disparo_Entidades
292+  8985 C1               pop bc
293+  8986 28 34            jr z,4F
294+  8988
295+  8988 2A F6 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
296+  898B 23               inc hl
297+  898C 23               inc hl
298+  898D 22 F6 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
299+  8990              ;                                                   ; _ Disparo_(+1).
300+  8990 CD 96 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
301+  8993              ;                                                   ; _ los 8 bytes que definen el disparo:
302+  8993              ;
303+  8993              ;                                                     Puntero_objeto_disparo en IY.
304+  8993              ;                                                     Rutinas_de_impresion en IX.
305+  8993              ;                                                     Puntero_de_impresion en HL.
306+  8993              ;                                                     Impacto/Dirección en BC.
307+  8993
308+  8993 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
309+  8994 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
310+  8995 23               inc hl                                          ; _ al siguiente.
311+  8996 A7               and a
312+  8997 20 C1            jr nz,3B
313+  8999
314+  8999 08               ex af,af
315+  899A ED 73 EB 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
316+  899E F9               ld sp,hl
317+  899F
318+  899F DD E5            push ix                                         ; Rutina de impresión.
319+  89A1 F5               push af                                         ; Puntero de impresión.
320+  89A2 FD E5            push iy                                         ; Puntero objeto.
321+  89A4 C5               push bc                                         ; Control.
322+  89A5
323+  89A5 ED 7B EB 85      ld sp,(Stack)
324+  89A9
325+  89A9              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
326+  89A9
327+  89A9 21 E2 85     	ld hl,Ctrl_1
328+  89AC CB C6        	set 0,(hl)
329+  89AE
330+  89AE DD E5        	push ix
331+  89B0 E1               pop hl
332+  89B1 F5               push af
333+  89B2 DD E1            pop ix
334+  89B4
335+  89B4 CD A0 7F     	call Guarda_foto_registros
336+  89B7
337+  89B7 21 E2 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
338+  89BA CB 86        	res 0,(hl)
339+  89BC
340+  89BC C9           4 ret
341+  89BD
342+  89BD              ; ----------------------------------------------------------------
343+  89BD              ;
344+  89BD              ;   20/02/23
345+  89BD
346+  89BD E5           Comprueba_Colision push hl
347+  89BE 1E 00            ld e,0                                         ; E,(Impacto)="0".
348+  89C0 CD D4 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
349+  89C3 1C               inc e
350+  89C4 1D               dec e
351+  89C5 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
352+  89C7              ; Hay impacto.
353+  89C7 43           2 ld b,e
354+  89C8 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
355+  89C9 C9           3 ret
356+  89CA E1           1 pop hl
357+  89CB E5               push hl
358+  89CC CD C8 8C         call NextScan
359+  89CF CD D4 89         call Bucle_2
360+  89D2 18 F3            jr 2B
361+  89D4
362+  89D4              ; ---------- ----------
363+  89D4
364+  89D4 06 02        Bucle_2 ld b,2
365+  89D6 7E           2 ld a,(hl)
366+  89D7 A7               and a
367+  89D8 20 04            jr nz,1F
368+  89DA 23               inc hl
369+  89DB 10 F9            djnz 2B
370+  89DD C9           3 ret
371+  89DE 1E 01        1 ld e,1
372+  89E0 18 FB            jr 3B
373+  89E2
374+  89E2              ; -------------------------------------------------------------------------------------------------------------
375+  89E2
376+  89E2
377+  89E2
378+  89E2
379+  89E2
# file closed: Disparo.asm
836   89E2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  89E2              ; ******************************************************************************************************************************************************************************************
  2+  89E2              ;
  3+  89E2              ; 01/23
  4+  89E2              ;
  5+  89E2              ; DRAW. ************************************************************************************************************************************************************************************
  6+  89E2
  7+  89E2 CD BC 8C     Draw call Prepara_draw
  8+  89E5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  89E6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  89E7 28 05        	jr z,2F
 11+  89E9
 12+  89E9 3A BC 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  89EC 18 0C        	jr 1F
 14+  89EE 2A BA 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  89F1 22 AA 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  89F4 CD 83 8B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  89F7              ;													; _la esquina superior izquierda de la pantalla.
 18+  89F7 CD F1 93     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  89FA 3A D5 85     1 ld a,(Ctrl_0)
 20+  89FD CB 6F        	bit 5,a
 21+  89FF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8A01
 23+  8A01 CD 19 8A     	call Comprueba_limite_horizontal
 24+  8A04 CD A9 8A     	call Comprueba_limite_vertical
 25+  8A07
 26+  8A07              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8A07
 28+  8A07 CD F6 8B     3 call calcula_CColumnass
 29+  8A0A CD 2D 8C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8A0D CD 82 8C     	call Define_rutina_de_impresion
 31+  8A10
 32+  8A10 3A D5 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8A13 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8A15 32 D5 85     	ld (Ctrl_0),a
 35+  8A18
 36+  8A18 C9           	ret
 37+  8A19
 38+  8A19              ; *******************************************************************************************************************************************************************************************
 39+  8A19              ;	21/01/23
 40+  8A19              ;
 41+  8A19              ; 	Comprueba_limite_horizontal.
 42+  8A19              ;
 43+  8A19              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8A19              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8A19              ;
 46+  8A19              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8A19              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8A19              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8A19              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8A19
 51+  8A19
 52+  8A19
 53+  8A19 3A D5 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8A1C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8A1E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8A20 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8A22 32 D5 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8A25 18 09            jr 6F
 59+  8A27 CB 5F        1 bit 3,a
 60+  8A29 28 0A            jr z,2F
 61+  8A2B E6 F7            and $f7
 62+  8A2D 32 D5 85         ld (Ctrl_0),a
 63+  8A30 CD 83 8B     6 call Inicializacion
 64+  8A33 18 5B            jr 5F
 65+  8A35 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8A36
 67+  8A36              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8A36              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8A36
 70+  8A36 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8A37 2A DF 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8A3A CD 88 8F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8A3D 67           	ld h,a
 74+  8A3E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8A3F CD 88 8F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8A42 67           	ld h,a
 77+  8A43 A7           	and a
 78+  8A44 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8A46 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8A47 3A BC 85     	ld a,(Cuad_objeto)
 81+  8A4A FE 02        	cp 2
 82+  8A4C 38 1E        	jr c,3F
 83+  8A4E 28 1C        	jr z,3F
 84+  8A50 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8A51 28 23            jr z,7F
 86+  8A53 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8A55 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8A57 E1           	pop hl
 89+  8A58
 90+  8A58              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8A58              ; _para indicar con E="2" en caso necesario.
 92+  8A58
 93+  8A58 E5               push hl
 94+  8A59 C5               push bc
 95+  8A5A CD 88 8F     	call calcula_tercio
 96+  8A5D FE 01        	cp 1
 97+  8A5F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8A61 CD 91 8A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8A64 28 26            jr z,9F
100+  8A66 38 24            jr c,9F
101+  8A68 1E 00        11 ld e,0
102+  8A6A 18 22            jr 8F
103+  8A6C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8A6D 28 07        	jr z, 7F
105+  8A6F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8A71 1E 00         	ld e,0
107+  8A73 E1           	pop hl
108+  8A74 18 04        	jr 4F
109+  8A76 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8A78 18 15            jr 10F
111+  8A7A
112+  8A7A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8A7A              ; _para indicar con E="2" en caso necesario.
114+  8A7A
115+  8A7A E5           4 push hl
116+  8A7B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8A7C CD 88 8F     	call calcula_tercio
118+  8A7F FE 01        	cp 1
119+  8A81 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8A83 CD 91 8A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8A86 28 04            jr z,9F
122+  8A88 30 02            jr nc,9F
123+  8A8A 18 02        	jr 8F
124+  8A8C 1E 02        9 ld e,2
125+  8A8E C1           8 pop bc
126+  8A8F E1           10 pop hl
127+  8A90 C9           5 ret
128+  8A91
129+  8A91              ; --------------------
130+  8A91              ;
131+  8A91              ; 25/08/22
132+  8A91
133+  8A91 CD 88 8F     Comprueba_centro call calcula_tercio
134+  8A94 67               ld h,a
135+  8A95 08           	ex af,af
136+  8A96 FE 02        	cp 2
137+  8A98 38 07        	jr c,1F
138+  8A9A 28 05        	jr z,1F
139+  8A9C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8A9F 18 03        	jr 2F
141+  8AA1 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8AA4 08           2 ex af,af
143+  8AA5 A7               and a
144+  8AA6 ED 42            sbc hl,bc
145+  8AA8 C9               ret
146+  8AA9
147+  8AA9              ; *********************************************************************************************************************************************************************************************
148+  8AA9              ;
149+  8AA9              ;   16/8/22
150+  8AA9              ;
151+  8AA9              ;	Comprueba_limite_vertical
152+  8AA9              ;
153+  8AA9              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8AA9              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8AA9              ;
156+  8AA9
157+  8AA9 2A AA 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8AAC 7D           	ld a,l
159+  8AAD E6 1F        	and $1F
160+  8AAF 57           	ld d,a
161+  8AB0 3A E1 85     	ld a,(Limite_vertical)
162+  8AB3 BA           	cp d 											; Límite - Posición.
163+  8AB4 08           	ex af,af 										; Resultado de CP d en F'.
164+  8AB5 3A BC 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8AB8 CB 47        	bit 0,a
166+  8ABA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8ABC
168+  8ABC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8ABC
170+  8ABC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8ABD 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8ABF
173+  8ABF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8ABF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8ABF
176+  8ABF 3A AE 85         ld a,(Coordenada_X)
177+  8AC2 16 0F            ld d,Centro_izquierda
178+  8AC4 A7               and a
179+  8AC5 92               sub d 											 ; Posición - Centro_izquierda.
180+  8AC6 28 1E            jr z,3F
181+  8AC8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8ACA              ;                                                    ; _salimos sin modificar nada.
183+  8ACA 18 0E            jr 2F
184+  8ACC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8ACD 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8ACF
187+  8ACF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8ACF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8ACF
190+  8ACF 3A AE 85         ld a,(Coordenada_X)
191+  8AD2 16 10            ld d,Centro_derecha
192+  8AD4 A7               and a
193+  8AD5 92               sub d
194+  8AD6 28 0E            jr z,3F
195+  8AD8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8ADA              ;                                                    ; _salimos sin modificar nada.
197+  8ADA CB 43        2 bit 0,e
198+  8ADC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8ADE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8ADF CD 73 8B         call Modificaccionne
201+  8AE2 C1           	pop bc
202+  8AE3 CD 83 8B         call Inicializacion
203+  8AE6 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8AE7
205+  8AE7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8AE7
207+  8AE7 C5           4 push bc
208+  8AE8 01 A9 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8AEB 0A           	ld a,(bc)
210+  8AEC 3D           	dec a
211+  8AED 47           	ld b,a 											 ; Columnas-1 en B.
212+  8AEE 7D           	ld a,l
213+  8AEF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8AF0 CB 47        	bit 0,a
215+  8AF2 28 03        	jr z,5F
216+  8AF4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8AF5 18 2E        	jr 7F
218+  8AF7
219+  8AF7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8AF7
221+  8AF7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8AF8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8AF9 3A D5 85     	ld a,(Ctrl_0)
224+  8AFC CB 4F        	bit 1,a
225+  8AFE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8B00 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8B01
228+  8B01              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8B01
230+  8B01 1C               inc e
231+  8B02 1D               dec e
232+  8B03 20 07            jr nz,12F
233+  8B05 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8B06 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8B07 22 AA 85     	ld (Posicion_actual),hl
236+  8B0A 18 44        13 jr 9F
237+  8B0C CB 43        12 bit 0,e
238+  8B0E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8B10              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8B10 C1           	pop bc
241+  8B11 18 D3        	jr 3B
242+  8B13 80           14 add b
243+  8B14 6F               ld l,a
244+  8B15 22 AA 85     	ld (Posicion_actual),hl
245+  8B18 CD 73 8B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8B1B 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8B1D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8B1F 32 D5 85         ld (Ctrl_0),a
249+  8B22 F1           	pop af
250+  8B23 18 2B        	jr 9F
251+  8B25
252+  8B25              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8B25
254+  8B25 F5           7 push af
255+  8B26 3A D5 85     	ld a,(Ctrl_0)
256+  8B29 CB 47        	bit 0,a
257+  8B2B 20 1D        	jr nz,8F
258+  8B2D F1           	pop af
259+  8B2E
260+  8B2E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8B2E
262+  8B2E 1C           	inc e
263+  8B2F 1D               dec e
264+  8B30 20 07            jr nz,10F
265+  8B32 90           	sub b
266+  8B33 6F               ld l,a
267+  8B34 22 AA 85     	ld (Posicion_actual),hl
268+  8B37 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8B39              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8B39 CB 43        10 bit 0,e
271+  8B3B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8B3D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8B3D C1           	pop bc
274+  8B3E 18 A6        	jr 3B
275+  8B40 90           16 sub b
276+  8B41 6F               ld l,a
277+  8B42 22 AA 85     	ld (Posicion_actual),hl
278+  8B45 CD 73 8B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8B48 18 06            jr 9F
280+  8B4A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8B4C 32 D5 85         ld (Ctrl_0),a
282+  8B4F F1           	pop af
283+  8B50 C1           9 pop bc
284+  8B51 1E 00        	ld e,0
285+  8B53 CD 83 8B         call Inicializacion
286+  8B56 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8B57 08           	ex af,af
288+  8B58 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8B59 18 8B            jr 3B
290+  8B5B
291+  8B5B              ; --------------------
292+  8B5B
293+  8B5B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8B5D CD D7 8C     1 call PreviousScan
295+  8B60 10 FB            djnz 1B
296+  8B62 22 AA 85     	ld (Posicion_actual),hl
297+  8B65 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8B66 C9           	ret
299+  8B67
300+  8B67              ; --------------------
301+  8B67
302+  8B67 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8B69 CD C8 8C     1 call NextScan
304+  8B6C 10 FB            djnz 1B
305+  8B6E 22 AA 85     	ld (Posicion_actual),hl
306+  8B71 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8B72 C9           	ret
308+  8B73
309+  8B73              ; --------------------
310+  8B73              ;
311+  8B73              ;	22/01/23
312+  8B73              ;
313+  8B73              ;	E="1". Hemos cambiado de cuadrante.
314+  8B73              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8B73              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8B73
317+  8B73
318+  8B73              Modificaccionne
319+  8B73
320+  8B73 3A BC 85     	ld a,(Cuad_objeto)
321+  8B76 FE 02        	cp 2
322+  8B78 CC 5B 8B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8B7B DC 5B 8B         call c,Modifica_Pos_actual
324+  8B7E C8           	ret z
325+  8B7F CD 67 8B         call Modifica_Pos_actual2
326+  8B82 C9               ret
327+  8B83
328+  8B83              ; *************************************************************************************************************************************************************************************************
329+  8B83              ;
330+  8B83              ;	13/8/22
331+  8B83              ;
332+  8B83              ;	Inicializacion
333+  8B83              ;
334+  8B83              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8B83              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8B83              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8B83              ;
338+  8B83              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8B83              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8B83              ;	_ desaparece/aparece.
341+  8B83
342+  8B83              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8B83              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8B83              ;
345+  8B83              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8B83              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8B83              ; 		   [E] ="0"
348+  8B83
349+  8B83              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8B83
351+  8B83 CD 88 8F     Inicializacion call calcula_tercio
352+  8B86 28 36        	jr z,primit
353+  8B88 E6 02        	and 2
354+  8B8A 20 07        	jr nz,segmit
355+  8B8C 7D           	ld a,l
356+  8B8D FE 7F        	cp $7f
357+  8B8F 38 2D        	jr c,primit
358+  8B91 28 2B        	jr z,primit
359+  8B93 CD F0 8B     segmit call column
360+  8B96 38 13        	jr c,tercuad
361+  8B98 3E 04        cuarcuad ld a,4
362+  8B9A 32 BC 85     	ld (Cuad_objeto),a
363+  8B9D 21 20 48     	ld hl,$4820
364+  8BA0 22 DF 85     	ld (Limite_horizontal),hl
365+  8BA3 21 E1 85     	ld hl,Limite_vertical
366+  8BA6 36 0D        	ld (hl),$0d
367+  8BA8 08           	ex af,af
368+  8BA9 18 3C        	jr 1F
369+  8BAB              tercuad
370+  8BAB 3E 03        	ld a,3
371+  8BAD 32 BC 85     	ld (Cuad_objeto),a
372+  8BB0 21 20 48     	ld hl,$4820
373+  8BB3 22 DF 85     	ld (Limite_horizontal),hl
374+  8BB6 21 E1 85     	ld hl,Limite_vertical
375+  8BB9 36 12        	ld (hl),$12
376+  8BBB 08           	ex af,af
377+  8BBC 18 29        	jr 1F
378+  8BBE CD F0 8B     primit call column
379+  8BC1 38 13        	jr c, primcuad
380+  8BC3              segcuad
381+  8BC3 3E 02        	ld a,2
382+  8BC5 32 BC 85     	ld (Cuad_objeto),a
383+  8BC8 21 C0 4F     	ld hl,$4fc0
384+  8BCB 22 DF 85     	ld (Limite_horizontal),hl
385+  8BCE 21 E1 85     	ld hl,Limite_vertical
386+  8BD1 36 0D        	ld (hl),$0d
387+  8BD3 08           	ex af,af
388+  8BD4 18 11        	jr 1F
389+  8BD6              primcuad
390+  8BD6 3E 01        	ld a,1
391+  8BD8 32 BC 85     	ld (Cuad_objeto),a
392+  8BDB 21 C0 4F     	ld hl,$4fc0
393+  8BDE 22 DF 85     	ld (Limite_horizontal),hl
394+  8BE1 21 E1 85     	ld hl,Limite_vertical
395+  8BE4 36 12        	ld (hl),$12
396+  8BE6 08           	ex af,af
397+  8BE7 CD BA 92     1 call Genera_coordenadas
398+  8BEA 21 D5 85     	ld hl,Ctrl_0
399+  8BED CB EE        	set 5,(hl)
400+  8BEF C9           	ret
401+  8BF0
402+  8BF0              ; ------------------------------------------------------------------------------------------------------------------
403+  8BF0
404+  8BF0              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8BF0              ;
406+  8BF0              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8BF0
408+  8BF0 7D           column ld a,l
409+  8BF1 E6 1F        	and $1f
410+  8BF3 FE 10         	cp $10
411+  8BF5 C9            	ret
412+  8BF6
413+  8BF6              ; --------------------------------------------------------------------------------------------------------------------
414+  8BF6              ;
415+  8BF6              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8BF6              ;
417+  8BF6              ; 14/12/22
418+  8BF6              ;
419+  8BF6              ;	Modifica: A y BC.
420+  8BF6
421+  8BF6 3A BC 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8BF9 E6 01        	and 1
423+  8BFB 28 17        	jr z,1F
424+  8BFD
425+  8BFD              ; Nos encontramos en la parte izquierda de la pantalla
426+  8BFD
427+  8BFD 3A AE 85     	ld a,(Coordenada_X)
428+  8C00 47           	ld b,a
429+  8C01 04           	inc b											; (Coordenada_X)+1 en B.
430+  8C02 79           	ld a,c
431+  8C03 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8C04 38 08        	jr c,2F
433+  8C06 47           	ld b,a
434+  8C07 79           	ld a,c
435+  8C08 90           	sub b
436+  8C09 32 DE 85     	ld (Columnas),a
437+  8C0C 18 1B        	jr 4F
438+  8C0E 79           2 ld a,c
439+  8C0F 32 DE 85     	ld (Columnas),a
440+  8C12 18 15        	jr 4F
441+  8C14
442+  8C14              ; Nos encontramos en la parte derecha de la pantalla.
443+  8C14
444+  8C14 3A AE 85     1 ld a,(Coordenada_X)
445+  8C17 81           	add c
446+  8C18 3D           	dec a
447+  8C19 D6 1F        	sub $1f
448+  8C1B 38 08        	jr c,3F
449+  8C1D 47           	ld b,a
450+  8C1E 79           	ld a,c
451+  8C1F 90           	sub b
452+  8C20 32 DE 85     	ld (Columnas),a
453+  8C23 18 04        	jr 4F
454+  8C25 79           3 ld a,c
455+  8C26 32 DE 85     	ld (Columnas),a
456+  8C29 D9           4 exx
457+  8C2A 4F           	ld c,a
458+  8C2B D9           	exx
459+  8C2C C9            ret
460+  8C2D
461+  8C2D              ; --------------------------------------------------------------------------------------------------------------------
462+  8C2D              ;
463+  8C2D              ; 7/1/23
464+  8C2D              ;
465+  8C2D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8C2D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8C2D              ;
468+  8C2D              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8C2D              ;	DESTRUYE: HL,B Y A.
470+  8C2D
471+  8C2D 3A BC 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8C30 FE 02        	cp 2
473+  8C32 38 18        	jr c,1F
474+  8C34 28 16        	jr z,1F
475+  8C36 E6 01        	and 1
476+  8C38 28 0D        	jr z,3F
477+  8C3A
478+  8C3A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8C3A
480+  8C3A CD 76 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8C3D
482+  8C3D 7D           9 ld a,l
483+  8C3E E6 1F        	and $1f
484+  8C40 28 2A        	jr z,7F
485+  8C42 2B           	dec hl
486+  8C43 10 F8        	djnz 9B
487+  8C45 18 25        	jr 7F
488+  8C47
489+  8C47              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8C47
491+  8C47 2A AA 85     3 ld hl,(Posicion_actual)
492+  8C4A 18 20        	jr 7F
493+  8C4C
494+  8C4C 28 14        1 jr z,2F
495+  8C4E
496+  8C4E              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8C4E
498+  8C4E CD 76 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8C51 7D           4 ld a,l
500+  8C52 E6 1F        	and $1f
501+  8C54 28 03        	jr z,6F
502+  8C56 2B           	dec hl
503+  8C57 10 F8        	djnz 4B
504+  8C59 06 0F        6 ld b,15
505+  8C5B CD D7 8C     5 call PreviousScan
506+  8C5E 10 FB        	djnz 5B
507+  8C60 18 0A        	jr 7F
508+  8C62
509+  8C62              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8C62
511+  8C62 CD 76 8C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8C65 06 0F        	ld b,15
513+  8C67 CD D7 8C     8 call PreviousScan
514+  8C6A 10 FB        	djnz 8B
515+  8C6C
516+  8C6C E5           7 push hl
517+  8C6D DD E1        	pop ix
518+  8C6F
519+  8C6F 2A AC 85     	ld hl,(Puntero_objeto)
520+  8C72 E5           	push hl
521+  8C73 FD E1        	pop iy
522+  8C75
523+  8C75 C9           	ret
524+  8C76
525+  8C76              ; --------------------------------------------------------------------------------------------------------------------
526+  8C76              ;
527+  8C76              ;	2/1/23
528+  8C76              ;
529+  8C76              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8C76              ;
531+  8C76              ;	Tras esta rutina tenemos:
532+  8C76              ;
533+  8C76              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8C76              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8C76              ;
536+  8C76              ;	DESTRUYE!!!!! HL,B y A.
537+  8C76
538+  8C76 2A AA 85     Operandos ld hl,(Posicion_actual)
539+  8C79 3A DE 85     	ld a,(Columnas)
540+  8C7C 3D           	dec a
541+  8C7D 20 01        	jr nz,1F
542+  8C7F 3C           	inc a
543+  8C80 47           1 ld b,a
544+  8C81 C9           	ret
545+  8C82
546+  8C82              ; --------------------------------------------------------------------------------------------------------------------
547+  8C82              ;
548+  8C82              ;	3/1/23
549+  8C82              ;
550+  8C82              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8C82              ;
552+  8C82              ;	Destruye: A,B,HL y DE.
553+  8C82
554+  8C82              Define_rutina_de_impresion
555+  8C82
556+  8C82 3A A9 85     	ld a,(Columns)
557+  8C85 47           	ld b,a
558+  8C86 3A DE 85     	ld a,(Columnas)
559+  8C89 B8           	cp b
560+  8C8A 20 0D        	jr nz,2f
561+  8C8C
562+  8C8C              ;	La entidad se imprime entera.
563+  8C8C
564+  8C8C 21 58 8D     	ld hl, Indice_entidades_completas
565+  8C8F E6 01        	and 1
566+  8C91 28 02        	jr z,1F
567+  8C93
568+  8C93 23           	inc hl
569+  8C94 23           	inc hl
570+  8C95
571+  8C95 CD 96 87     1 call Extrae_address
572+  8C98 C9           	ret		;	ret
573+  8C99
574+  8C99              ;	La entidad no se imprime entera en pantalla.
575+  8C99
576+  8C99 3A BC 85     2 ld a,(Cuad_objeto)
577+  8C9C E6 01        	and 1
578+  8C9E 28 17        	jr z,3F
579+  8CA0
580+  8CA0              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8CA0
582+  8CA0 21 5C 8D     	ld hl, Indice_entidades_incompletas_izquierda
583+  8CA3 3A A9 85     4 ld a,(Columns)
584+  8CA6 E6 01        	and 1
585+  8CA8 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8CAA
587+  8CAA 23           	inc hl
588+  8CAB 23           	inc hl
589+  8CAC
590+  8CAC 3A DE 85     	ld a,(Columnas)
591+  8CAF E6 01        	and 1
592+  8CB1 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8CB3
594+  8CB3 23           	inc hl
595+  8CB4 23           	inc hl
596+  8CB5
597+  8CB5 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8CB7
599+  8CB7 21 62 8D     3 ld hl, Indice_entidades_incompletas_derecha
600+  8CBA 18 E7        	jr 4B
601+  8CBC
602+  8CBC              ; --------------------------------------------------------------------------------------------------------------------
603+  8CBC              ;
604+  8CBC              ;	Prepara_draw
605+  8CBC              ;
606+  8CBC              ;	Es una rutina de carga.
607+  8CBC              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8CBC              ;
609+  8CBC              ;	FUNCIONAMIENTO:
610+  8CBC              ;
611+  8CBC              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8CBC              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8CBC              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8CBC              ;
615+  8CBC              ;	DESTRUYE:
616+  8CBC              ;
617+  8CBC              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8CBC
619+  8CBC 21 A8 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8CBF 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8CC0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8CC1 4E           	ld c,(hl)
623+  8CC2 2A AA 85     	ld hl,(Posicion_actual)
624+  8CC5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8CC7 C9           	ret
626+  8CC8
627+  8CC8              ;----------------------------------------------------------------------------------------------------------------
628+  8CC8              ;
629+  8CC8              ;	5/08/22
630+  8CC8              ;
631+  8CC8              ;   NextScan.
632+  8CC8              ;
633+  8CC8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8CC8              ;
635+  8CC8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8CC8              ;
637+  8CC8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8CC8              ;
639+  8CC8              ;       DESTRUIDOS: AF y HL !!!
640+  8CC8              ;
641+  8CC8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8CC8              ;
643+  8CC8
644+  8CC8 24           NextScan inc h          ; Incrementamos el scanline.
645+  8CC9 7C               ld a,h
646+  8CCA E6 07            and 7
647+  8CCC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8CCD
649+  8CCD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8CCE C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8CD0 6F               ld l,a
652+  8CD1 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8CD2
654+  8CD2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8CD3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8CD5 67               ld h,a
657+  8CD6 C9               ret
658+  8CD7
659+  8CD7              ;----------------------------------------------------------------------------------------------------------------
660+  8CD7              ;
661+  8CD7              ;	5/08/22
662+  8CD7              ;
663+  8CD7              ;   PreviousScan.
664+  8CD7              ;
665+  8CD7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8CD7              ;
667+  8CD7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8CD7              ;
669+  8CD7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8CD7              ;
671+  8CD7              ;       DESTRUIDOS: AF y HL !!!
672+  8CD7              ;
673+  8CD7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8CD7              ;
675+  8CD7
676+  8CD7 7C           PreviousScan ld a,h
677+  8CD8 25               dec h               ; Dec H.
678+  8CD9 E6 07            and 7
679+  8CDB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8CDC
681+  8CDC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8CDD D6 20            sub $20             ; Vamos a comprobarlo...
683+  8CDF 6F               ld l,a
684+  8CE0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8CE1
686+  8CE1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8CE2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8CE4 67               ld h,a
689+  8CE5 C9               ret
690+  8CE6
691+  8CE6              ; -----------------------------------------------------------------------------------
692+  8CE6              ;
693+  8CE6              ;	28/2/23
694+  8CE6              ;
695+  8CE6              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8CE6              ;	Extrae fotos de Album_de_fotos.
697+  8CE6
698+  8CE6 3A EA 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8CE9 A7           	and a
700+  8CEA C8           	ret z
701+  8CEB ED 73 EB 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8CEF 31 00 70     	ld sp,Album_de_fotos
703+  8CF2
704+  8CF2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8CF4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8CF5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8CF6
708+  8CF6 ED 73 ED 85  	ld (Stack_2),sp
709+  8CFA ED 7B EB 85  	ld sp,(Stack)
710+  8CFE
711+  8CFE              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8CFE
713+  8CFE 3E CD        	ld a,$cd
714+  8D00 32 08 8D     	ld (Imprime),a
715+  8D03 EB           	ex de,hl
716+  8D04 22 09 8D     	ld (Imprime+1),hl
717+  8D07 EB           	ex de,hl
718+  8D08
719+  8D08              ; Ejecuta la llamada:	CALL $xx,xx
720+  8D08
721+  8D08 00 00 00     Imprime db 0,0,0
722+  8D0B
723+  8D0B 3A EA 85     	ld a,(Numero_de_malotes)
724+  8D0E 3D           	dec a
725+  8D0F 28 09        	jr z,1F
726+  8D11 32 EA 85      	ld (Numero_de_malotes),a
727+  8D14
728+  8D14 ED 7B ED 85   	ld sp,(Stack_2)
729+  8D18 18 D8        	jr 2B
730+  8D1A
731+  8D1A AF           1 xor a
732+  8D1B 32 ED 85     	ld (Stack_2),a
733+  8D1E C9           	ret
734+  8D1F
735+  8D1F              ; -----------------------------------------------------------------------------------
736+  8D1F              ;
737+  8D1F              ;	28/2/23
738+  8D1F              ;
739+  8D1F              ;	Rutina principal de pintado de disparos.
740+  8D1F
741+  8D1F              Extrae_foto_registros_disparos
742+  8D1F
743+  8D1F 3A F3 85     	ld a,(Numero_de_disparotes)
744+  8D22 A7           	and a
745+  8D23 C8           	ret z
746+  8D24 ED 73 EB 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8D28 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8D2B
749+  8D2B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8D2D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8D2E D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8D2F
753+  8D2F ED 73 ED 85  	ld (Stack_2),sp
754+  8D33 ED 7B EB 85  	ld sp,(Stack)
755+  8D37
756+  8D37              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8D37
758+  8D37 3E CD        	ld a,$cd
759+  8D39 32 41 8D     	ld (Imprime2),a
760+  8D3C EB           	ex de,hl
761+  8D3D 22 42 8D     	ld (Imprime2+1),hl
762+  8D40 EB           	ex de,hl
763+  8D41
764+  8D41              ; Ejecuta la llamada:	CALL $xx,xx
765+  8D41
766+  8D41 00 00 00     Imprime2 db 0,0,0
767+  8D44
768+  8D44 3A F3 85     	ld a,(Numero_de_disparotes)
769+  8D47 3D           	dec a
770+  8D48 28 09        	jr z,1F
771+  8D4A 32 F3 85      	ld (Numero_de_disparotes),a
772+  8D4D
773+  8D4D ED 7B ED 85  	ld sp,(Stack_2)
774+  8D51 18 D8        	jr 2B
775+  8D53
776+  8D53 AF           1 xor a
777+  8D54 32 ED 85     	ld (Stack_2),a
778+  8D57 C9           	ret
779+  8D58
# file closed: Draw_XOR.asm
837   8D58              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8D58              ;   índices de Rutinas de impresión.
  2+  8D58
  3+  8D58 68 8D        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8D5A 95 8D            defw Pinta_Amadeus_3x2
  5+  8D5C
  6+  8D5C EB 8D        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8D5E 8B 8E            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8D60 3F 8E            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8D62
 10+  8D62 15 8E        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8D64 19 8F            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8D66 CD 8E            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8D68
 14+  8D68
 15+  8D68              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8D68              ;
 17+  8D68              ;   12/12/22
 18+  8D68              ;
 19+  8D68              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8D68              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8D68              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8D68              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8D68              ;
 24+  8D68              ;   Modifica: DE y HL.
 25+  8D68
 26+  8D68 ED 73 EB 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8D6C FD F9        	ld sp,iy
 28+  8D6E 06 10            ld b,16
 29+  8D70 D1           1 pop de
 30+  8D71 7B               ld a,e
 31+  8D72 AE               xor (hl)
 32+  8D73 77           	ld (hl),a
 33+  8D74 23           	inc hl
 34+  8D75 7A               ld a,d
 35+  8D76 AE               xor (hl)
 36+  8D77 77           	ld (hl),a
 37+  8D78 2B           	dec hl
 38+  8D79 24           	inc h
 39+  8D7A 7C               ld a,h
 40+  8D7B E6 07            and 7
 41+  8D7D 20 0A            jr nz,2F
 42+  8D7F 7D               ld a,l
 43+  8D80 C6 20            add a,$20
 44+  8D82 6F               ld l,a
 45+  8D83 38 04            jr c,2F
 46+  8D85 7C               ld a,h
 47+  8D86 D6 08            sub 8
 48+  8D88 67               ld h,a
 49+  8D89 7C           2 ld a,h
 50+  8D8A FE 58            cp $58
 51+  8D8C 28 02            jr z,3F
 52+  8D8E 10 E0            djnz 1B
 53+  8D90 ED 7B EB 85  3 ld sp,(Stack)
 54+  8D94 C9           	ret
 55+  8D95
 56+  8D95 ED 73 EB 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8D99 FD F9        	ld sp,iy
 58+  8D9B 06 08            ld b,8
 59+  8D9D D1           1 pop de
 60+  8D9E 7B               ld a,e
 61+  8D9F AE               xor (hl)
 62+  8DA0 77           	ld (hl),a
 63+  8DA1 23           	inc hl
 64+  8DA2 7A               ld a,d
 65+  8DA3 AE               xor (hl)
 66+  8DA4 77           	ld (hl),a
 67+  8DA5 23           	inc hl
 68+  8DA6 D1           	pop de
 69+  8DA7 7B               ld a,e
 70+  8DA8 AE               xor (hl)
 71+  8DA9 77           	ld (hl),a
 72+  8DAA 2B           	dec hl
 73+  8DAB 2B           	dec hl
 74+  8DAC 24           	inc h
 75+  8DAD 7C               ld a,h
 76+  8DAE E6 07            and 7
 77+  8DB0 20 0A            jr nz,2F
 78+  8DB2 7D               ld a,l
 79+  8DB3 C6 20            add a,$20
 80+  8DB5 6F               ld l,a
 81+  8DB6 38 04            jr c,2F
 82+  8DB8 7C               ld a,h
 83+  8DB9 D6 08            sub 8
 84+  8DBB 67               ld h,a
 85+  8DBC 7C           2 ld a,h
 86+  8DBD FE 58            cp $58
 87+  8DBF 28 25            jr z,4F
 88+  8DC1 7A               ld a,d
 89+  8DC2 AE               xor (hl)
 90+  8DC3 77               ld (hl),a
 91+  8DC4 D1           	pop de
 92+  8DC5 23           	inc hl
 93+  8DC6 7B               ld a,e
 94+  8DC7 AE               xor (hl)
 95+  8DC8 77           	ld (hl),a
 96+  8DC9 23           	inc hl
 97+  8DCA 7A               ld a,d
 98+  8DCB AE               xor (hl)
 99+  8DCC 77           	ld (hl),a
100+  8DCD 2B           	dec hl
101+  8DCE 2B           	dec hl
102+  8DCF 24           	inc h
103+  8DD0 7C               ld a,h
104+  8DD1 E6 07            and 7
105+  8DD3 20 0A            jr nz,3F
106+  8DD5 7D               ld a,l
107+  8DD6 C6 20            add a,$20
108+  8DD8 6F               ld l,a
109+  8DD9 38 04            jr c,3F
110+  8DDB 7C               ld a,h
111+  8DDC D6 08            sub 8
112+  8DDE 67               ld h,a
113+  8DDF 7C           3 ld a,h
114+  8DE0 FE 58            cp $58
115+  8DE2 28 02            jr z,4F
116+  8DE4 10 B7            djnz 1B
117+  8DE6 ED 7B EB 85  4 ld sp,(Stack)
118+  8DEA C9           	ret
119+  8DEB
120+  8DEB              ; ---------------------------------------------------
121+  8DEB
122+  8DEB ED 73 EB 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8DEF FD F9        	ld sp,iy
124+  8DF1
125+  8DF1              ; >>>
126+  8DF1
127+  8DF1 06 10            ld b,16
128+  8DF3 D1           1 pop de
129+  8DF4 7A           	ld a,d
130+  8DF5 AE           	xor (hl)
131+  8DF6 77           	ld (hl),a
132+  8DF7 24           	inc h
133+  8DF8 7C               ld a,h
134+  8DF9 E6 07            and 7
135+  8DFB 20 0C            jr nz,2F
136+  8DFD 7D               ld a,l
137+  8DFE C6 20            add a,$20
138+  8E00 6F               ld l,a
139+  8E01 38 06            jr c,2F
140+  8E03 7C               ld a,h
141+  8E04 D6 08            sub 8
142+  8E06 67               ld h,a
143+  8E07 18 00            jr 2F
144+  8E09 7C           2 ld a,h
145+  8E0A FE 58            cp $58
146+  8E0C 28 02            jr z,3F
147+  8E0E 10 E3            djnz 1B
148+  8E10 ED 7B EB 85  3 ld sp,(Stack)
149+  8E14 C9           	ret
150+  8E15
151+  8E15 ED 73 EB 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8E19 FD F9        	ld sp,iy
153+  8E1B
154+  8E1B              ; >>>
155+  8E1B
156+  8E1B 06 10            ld b,16
157+  8E1D D1           1 pop de
158+  8E1E 7B           	ld a,e
159+  8E1F AE           	xor (hl)
160+  8E20 77           	ld (hl),a
161+  8E21 24           	inc h
162+  8E22 7C               ld a,h
163+  8E23 E6 07            and 7
164+  8E25 20 0C            jr nz,2F
165+  8E27 7D               ld a,l
166+  8E28 C6 20            add a,$20
167+  8E2A 6F               ld l,a
168+  8E2B 38 06            jr c,2F
169+  8E2D 7C               ld a,h
170+  8E2E D6 08            sub 8
171+  8E30 67               ld h,a
172+  8E31 18 00            jr 2F
173+  8E33 7C           2 ld a,h
174+  8E34 FE 58            cp $58
175+  8E36 28 02            jr z,3F
176+  8E38 10 E3            djnz 1B
177+  8E3A ED 7B EB 85  3 ld sp,(Stack)
178+  8E3E C9           	ret
179+  8E3F
180+  8E3F              ; ---------------------------------------------------
181+  8E3F
182+  8E3F ED 73 EB 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8E43 FD F9        	ld sp,iy
184+  8E45 06 08            ld b,8
185+  8E47 D1           1 pop de
186+  8E48 7A           	ld a,d
187+  8E49 AE           	xor (hl)
188+  8E4A 77           	ld (hl),a
189+  8E4B 23           	inc hl
190+  8E4C D1           	pop de
191+  8E4D 7B           	ld a,e
192+  8E4E AE           	xor (hl)
193+  8E4F 77           	ld (hl),a
194+  8E50 2B           	dec hl
195+  8E51 24            	inc h
196+  8E52 7C               ld a,h
197+  8E53 E6 07            and 7
198+  8E55 20 0A            jr nz,2F
199+  8E57 7D               ld a,l
200+  8E58 C6 20            add a,$20
201+  8E5A 6F               ld l,a
202+  8E5B 38 04            jr c,2F
203+  8E5D 7C               ld a,h
204+  8E5E D6 08            sub 8
205+  8E60 67               ld h,a
206+  8E61 7C           2 ld a,h
207+  8E62 FE 58            cp $58
208+  8E64 28 20            jr z,4F
209+  8E66 D1               pop de
210+  8E67 7B           	ld a,e
211+  8E68 AE           	xor (hl)
212+  8E69 77           	ld (hl),a
213+  8E6A 23           	inc hl
214+  8E6B 7A           	ld a,d
215+  8E6C AE           	xor (hl)
216+  8E6D 77           	ld (hl),a
217+  8E6E 2B           	dec hl
218+  8E6F 24           	inc h
219+  8E70 7C               ld a,h
220+  8E71 E6 07            and 7
221+  8E73 20 0A            jr nz,3F
222+  8E75 7D               ld a,l
223+  8E76 C6 20            add a,$20
224+  8E78 6F               ld l,a
225+  8E79 38 04            jr c,3F
226+  8E7B 7C               ld a,h
227+  8E7C D6 08            sub 8
228+  8E7E 67               ld h,a
229+  8E7F 7C           3 ld a,h
230+  8E80 FE 58            cp $58
231+  8E82 28 02            jr z,4F
232+  8E84 10 C1            djnz 1B
233+  8E86 ED 7B EB 85  4 ld sp,(Stack)
234+  8E8A C9           	ret
235+  8E8B
236+  8E8B ED 73 EB 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8E8F FD F9        	ld sp,iy
238+  8E91 06 08            ld b,8
239+  8E93 D1           1 pop de
240+  8E94 D1           	pop de
241+  8E95 7B           	ld a,e
242+  8E96 AE           	xor (hl)
243+  8E97 77           	ld (hl),a
244+  8E98 24            	inc h
245+  8E99 7C               ld a,h
246+  8E9A E6 07            and 7
247+  8E9C 20 0A            jr nz,2F
248+  8E9E 7D               ld a,l
249+  8E9F C6 20            add a,$20
250+  8EA1 6F               ld l,a
251+  8EA2 38 04            jr c,2F
252+  8EA4 7C               ld a,h
253+  8EA5 D6 08            sub 8
254+  8EA7 67               ld h,a
255+  8EA8 7C           2 ld a,h
256+  8EA9 FE 58            cp $58
257+  8EAB 28 1B            jr z,4F
258+  8EAD D1               pop de
259+  8EAE 7A           	ld a,d
260+  8EAF AE           	xor (hl)
261+  8EB0 77           	ld (hl),a
262+  8EB1 24           	inc h
263+  8EB2 7C               ld a,h
264+  8EB3 E6 07            and 7
265+  8EB5 20 0A            jr nz,3F
266+  8EB7 7D               ld a,l
267+  8EB8 C6 20            add a,$20
268+  8EBA 6F               ld l,a
269+  8EBB 38 04            jr c,3F
270+  8EBD 7C               ld a,h
271+  8EBE D6 08            sub 8
272+  8EC0 67               ld h,a
273+  8EC1 7C           3 ld a,h
274+  8EC2 FE 58            cp $58
275+  8EC4 28 02            jr z,4F
276+  8EC6 10 CB            djnz 1B
277+  8EC8 ED 7B EB 85  4 ld sp,(Stack)
278+  8ECC C9           	ret
279+  8ECD
280+  8ECD ED 73 EB 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8ED1 FD F9        	ld sp,iy
282+  8ED3 06 08            ld b,8
283+  8ED5 D1           1 pop de
284+  8ED6 7B           	ld a,e
285+  8ED7 AE           	xor (hl)
286+  8ED8 77           	ld (hl),a
287+  8ED9 23           	inc hl
288+  8EDA 7A           	ld a,d
289+  8EDB AE           	xor (hl)
290+  8EDC 77           	ld (hl),a
291+  8EDD 2B           	dec hl
292+  8EDE 24             	inc h
293+  8EDF 7C               ld a,h
294+  8EE0 E6 07            and 7
295+  8EE2 20 0A            jr nz,2F
296+  8EE4 7D               ld a,l
297+  8EE5 C6 20            add a,$20
298+  8EE7 6F               ld l,a
299+  8EE8 38 04            jr c,2F
300+  8EEA 7C               ld a,h
301+  8EEB D6 08            sub 8
302+  8EED 67               ld h,a
303+  8EEE 7C           2 ld a,h
304+  8EEF FE 58            cp $58
305+  8EF1 28 21            jr z,4F
306+  8EF3 D1               pop de
307+  8EF4 7A           	ld a,d
308+  8EF5 AE           	xor (hl)
309+  8EF6 77           	ld (hl),a
310+  8EF7 23           	inc hl
311+  8EF8 D1               pop de
312+  8EF9 7B           	ld a,e
313+  8EFA AE           	xor (hl)
314+  8EFB 77           	ld (hl),a
315+  8EFC 2B           	dec hl
316+  8EFD 24           	inc h
317+  8EFE 7C               ld a,h
318+  8EFF E6 07            and 7
319+  8F01 20 0A            jr nz,3F
320+  8F03 7D               ld a,l
321+  8F04 C6 20            add a,$20
322+  8F06 6F               ld l,a
323+  8F07 38 04            jr c,3F
324+  8F09 7C               ld a,h
325+  8F0A D6 08            sub 8
326+  8F0C 67               ld h,a
327+  8F0D 7C           3 ld a,h
328+  8F0E FE 58            cp $58
329+  8F10 28 02            jr z,4F
330+  8F12 10 C1            djnz 1B
331+  8F14 ED 7B EB 85  4 ld sp,(Stack)
332+  8F18 C9           	ret
333+  8F19
334+  8F19 ED 73 EB 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  8F1D FD F9        	ld sp,iy
336+  8F1F 06 08            ld b,8
337+  8F21 D1           1 pop de
338+  8F22 7B           	ld a,e
339+  8F23 AE           	xor (hl)
340+  8F24 77           	ld (hl),a
341+  8F25 24            	inc h
342+  8F26 7C               ld a,h
343+  8F27 E6 07            and 7
344+  8F29 20 0A            jr nz,2F
345+  8F2B 7D               ld a,l
346+  8F2C C6 20            add a,$20
347+  8F2E 6F               ld l,a
348+  8F2F 38 04            jr c,2F
349+  8F31 7C               ld a,h
350+  8F32 D6 08            sub 8
351+  8F34 67               ld h,a
352+  8F35 7C           2 ld a,h
353+  8F36 FE 58            cp $58
354+  8F38 28 1C            jr z,4F
355+  8F3A D1               pop de
356+  8F3B 7A           	ld a,d
357+  8F3C AE           	xor (hl)
358+  8F3D 77           	ld (hl),a
359+  8F3E 24           	inc h
360+  8F3F 7C               ld a,h
361+  8F40 E6 07            and 7
362+  8F42 20 0A            jr nz,3F
363+  8F44 7D               ld a,l
364+  8F45 C6 20            add a,$20
365+  8F47 6F               ld l,a
366+  8F48 38 04            jr c,3F
367+  8F4A 7C               ld a,h
368+  8F4B D6 08            sub 8
369+  8F4D 67               ld h,a
370+  8F4E 7C           3 ld a,h
371+  8F4F FE 58            cp $58
372+  8F51 28 03            jr z,4F
373+  8F53 D1               pop de
374+  8F54 10 CB            djnz 1B
375+  8F56 ED 7B EB 85  4 ld sp,(Stack)
376+  8F5A C9           	ret
377+  8F5B
378+  8F5B              ; ---------------------------------------------------
379+  8F5B              ;
380+  8F5B              ;   27/02/23
381+  8F5B              ;
382+  8F5B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  8F5B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  8F5B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  8F5B
386+  8F5B ED 73 EB 85  Pinta_Disparo ld (Stack),sp
387+  8F5F FD F9            ld sp,iy
388+  8F61 06 02            ld b,2
389+  8F63 D1           1 pop de
390+  8F64 7B               ld a,e
391+  8F65 AE               xor (hl)
392+  8F66 77               ld (hl),a
393+  8F67 23               inc hl
394+  8F68 7A               ld a,d
395+  8F69 AE               xor (hl)
396+  8F6A 77               ld (hl),a
397+  8F6B 2B               dec hl
398+  8F6C 24               inc h
399+  8F6D 7C               ld a,h
400+  8F6E E6 07            and 7
401+  8F70 20 0A            jr nz,2F
402+  8F72 7D               ld a,l
403+  8F73 C6 20            add a,$20
404+  8F75 6F               ld l,a
405+  8F76 38 04            jr c,2F
406+  8F78 7C               ld a,h
407+  8F79 D6 08            sub 8
408+  8F7B 67               ld h,a
409+  8F7C 7C           2 ld a,h
410+  8F7D FE 58            cp $58
411+  8F7F 28 02            jr z,3F
412+  8F81 10 E0            djnz 1B
413+  8F83 ED 7B EB 85  3 ld sp,(Stack)
414+  8F87 C9               ret
415+  8F88
# file closed: Rutinas_de_impresion_sprites.asm
838   8F88              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  8F88              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  8F88              ;
  3+  8F88              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  8F88              ;
  5+  8F88              ; *****************************************************************************************************************************************************************************************
  6+  8F88              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  8F88
  8+  8F88 7C           calcula_tercio ld a,h
  9+  8F89 E6 18        	and $18
 10+  8F8B CB 2F        	sra a
 11+  8F8D CB 2F        	sra a
 12+  8F8F CB 2F        	sra a
 13+  8F91 C9           	ret
 14+  8F92
# file closed: calcula_tercio.asm
839   8F92              	include "Cls.asm"
# file opened: Cls.asm
  1+  8F92              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  8F92              ;
  3+  8F92              ;
  4+  8F92              ;	CLS.
  5+  8F92              ;
  6+  8F92              ;	Limpia la pantalla y define sus atributos.
  7+  8F92              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  8F92              ;
  9+  8F92              ;	COLORES: 0 ..... NEGRO
 10+  8F92              ;    		 1 ..... AZUL
 11+  8F92              ; 			 2 ..... ROJO
 12+  8F92              ;			 3 ..... MAGENTA
 13+  8F92              ; 			 4 ..... VERDE
 14+  8F92              ; 			 5 ..... CIAN
 15+  8F92              ;			 6 ..... AMARILLO
 16+  8F92              ; 			 7 ..... BLANCO
 17+  8F92              ;
 18+  8F92              ;	INPUT: A contiene los atributos de pantalla.
 19+  8F92              ;
 20+  8F92              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  8F92
 22+  8F92
 23+  8F92 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  8F95 11 01 40     	LD DE,$4001
 25+  8F98 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  8F9B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  8F9D ED B0        	LDIR
 28+  8F9F 01 FF 02     	LD BC,767
 29+  8FA2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  8FA3 ED B0        	LDIR
 31+  8FA5 C9           	ret
 32+  8FA6
# file closed: Cls.asm
840   8FA6              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  8FA6              ; ******************************************************************************************************************************************************************************************
  2+  8FA6              ;
  3+  8FA6              ;   22/01/23
  4+  8FA6              ;
  5+  8FA6              ;	Mov_down
  6+  8FA6              ;
  7+  8FA6              ; 	Mueve el Sprite X px hacia abajo.
  8+  8FA6              ;
  9+  8FA6              ;
 10+  8FA6 21 D5 85     Mov_down ld hl,Ctrl_0
 11+  8FA9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  8FAB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  8FAB              ; 																	; _ en el caso de que no lo haya.
 14+  8FAB 3A C0 85     	ld a,(Vel_down)
 15+  8FAE 47           	ld b,a
 16+  8FAF 2A AA 85         ld hl,(Posicion_actual)
 17+  8FB2 CD 88 8F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  8FB5 E6 02        	and 2
 19+  8FB7 28 0F        	jr z,1F
 20+  8FB9
 21+  8FB9              ; Nos encontramos en el último tercio de pantalla.
 22+  8FB9              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  8FB9
 24+  8FB9 7C           	ld a,h
 25+  8FBA FE 57        	cp $57
 26+  8FBC 20 0A        	jr nz,1F
 27+  8FBE 7D           	ld a,l
 28+  8FBF C6 20        	add $20
 29+  8FC1 30 05        	jr nc,1F
 30+  8FC3
 31+  8FC3              ; ------------------------------
 32+  8FC3 CD A4 92     	call Reaparece_arriba
 33+  8FC6              ;	call Reinicio
 34+  8FC6              ; ------------------------------
 35+  8FC6 18 08        	jr 3F
 36+  8FC8 CD C8 8C     1 call NextScan
 37+  8FCB 22 AA 85     	ld (Posicion_actual),hl
 38+  8FCE 10 E2            djnz 2B
 39+  8FD0 CD BA 92     3 call Genera_coordenadas
 40+  8FD3 C9           	ret
 41+  8FD4
 42+  8FD4
 43+  8FD4              ; ******************************************************************************************************************************************************************************************
 44+  8FD4              ;
 45+  8FD4              ;   22/01/23
 46+  8FD4              ;
 47+  8FD4              ;	Mov_up
 48+  8FD4              ;
 49+  8FD4              ; 	Mueve el Sprite hacia arriba.
 50+  8FD4              ;
 51+  8FD4              ;
 52+  8FD4 21 D5 85     Mov_up ld hl,Ctrl_0
 53+  8FD7 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  8FD9              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  8FD9              ; 																		; _ en el caso de que no lo haya.
 56+  8FD9 3A BF 85     	ld a,(Vel_up)
 57+  8FDC 47           	ld b,a
 58+  8FDD 2A AA 85     	ld hl,(Posicion_actual)
 59+  8FE0 CD 88 8F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  8FE3 A7           	and a
 61+  8FE4 20 10        	jr nz,1F
 62+  8FE6
 63+  8FE6              ; Nos encontramos en el 1er tercio de pantalla.
 64+  8FE6              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  8FE6
 66+  8FE6 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  8FE7 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  8FE9 20 0B            jr nz,1F
 69+  8FEB 7D               ld a,l
 70+  8FEC D6 20            sub $20
 71+  8FEE 30 06            jr nc,1F
 72+  8FF0 25               dec h
 73+  8FF1
 74+  8FF1              ; -----------------------------
 75+  8FF1 CD 94 92         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  8FF4              ;	call Reinicio
 77+  8FF4              ; -----------------------------
 78+  8FF4
 79+  8FF4 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  8FF6 CD D7 8C     1 call PreviousScan
 81+  8FF9 22 AA 85     	ld (Posicion_actual),hl
 82+  8FFC 10 E2            djnz 3B
 83+  8FFE CD BA 92     2 call Genera_coordenadas
 84+  9001 C9           	ret
 85+  9002
 86+  9002              ; ******************************************************************************************************************************************************************************************
 87+  9002              ;
 88+  9002              ;	19/10/22
 89+  9002              ;
 90+  9002              ;	Mov_right.
 91+  9002              ;
 92+  9002              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  9002              ;
 94+  9002
 95+  9002 21 D5 85     Mov_right ld hl,Ctrl_0
 96+  9005 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  9007              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  9007              ; 																	; _ en el caso de que no lo haya.
 99+  9007 3A D5 85     	ld a,(Ctrl_0)
100+  900A CB 77        	bit 6,a
101+  900C 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  900E
103+  900E CD 42 92     	call Stop_Amadeus_right
104+  9011 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  9012 18 4D        	jr 8F
106+  9014
107+  9014 3A AE 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  9017 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9019 20 46        	jr nz,8F
110+  901B
111+  901B 3A B0 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  901E A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  901F 28 40        	jr z,8F
114+  9021
115+  9021              ; ---------- ---------- ----------
116+  9021              ;
117+  9021              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  9021
119+  9021 3A BE 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  9024 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  9026 28 11        	jr z,1F
122+  9028 38 06        	jr c,6F
123+  902A FE 04        	cp 4
124+  902C 28 14        	jr z,7F
125+  902E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9030
127+  9030              ; ---------- ---------- ----------
128+  9030              ;
129+  9030              ; Perfiles de velocidad
130+  9030              ;
131+  9030
132+  9030 3A B0 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  9033 FE FE        	cp $fe
134+  9035 20 2A        	jr nz,8F
135+  9037 18 10        	jr 3F
136+  9039 3A B0 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  903C FE FD        	cp $fd
138+  903E 20 21        	jr nz,8F
139+  9040 18 07        	jr 3F
140+  9042 3A B0 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  9045 FE FB        	cp $fb
142+  9047 20 18        	jr nz,8F
143+  9049
144+  9049              ; ---------- ---------- ----------
145+  9049
146+  9049              3
147+  9049 CD 82 92     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  904C              ;	call Reinicio
149+  904C
150+  904C              ; ---------- ---------- ----------
151+  904C              ;
152+  904C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  904C
154+  904C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  904E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  904F CD 68 90     	call DESPLZ_DER
157+  9052 C1           	pop bc
158+  9053 10 F9        	djnz 5B
159+  9055 2A AA 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  9058 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  9059 22 AA 85     	ld (Posicion_actual),hl
162+  905C CD BA 92     	call Genera_coordenadas
163+  905F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  9061
165+  9061              ; ---------- ---------- ----------
166+  9061
167+  9061 2A AA 85     8 ld hl,(Posicion_actual)
168+  9064 CD 68 90     	call DESPLZ_DER
169+  9067 C9           2 ret
170+  9068
171+  9068              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  9068              ;
173+  9068              ;	22/9/22
174+  9068              ;
175+  9068
176+  9068 CD 77 90     DESPLZ_DER call Desplaza_derecha
177+  906B CD C3 90         call modifica_parametros_1er_DESPLZ_2
178+  906E CD EC 90         call Ciclo_completo
179+  9071 21 D5 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  9074 CB FE        	set 7,(hl)
181+  9076 C9           	ret
182+  9077
183+  9077              ; ******************************************************************************************************************************************************************************************
184+  9077              ;	15/02/23
185+  9077              ;
186+  9077
187+  9077 3A BE 85     Desplaza_derecha ld a,(Vel_right)
188+  907A 47           	ld b,a
189+  907B 2A B6 85     	ld hl,(Puntero_DESPLZ_der)
190+  907E 23           1 inc hl
191+  907F 23           	inc hl
192+  9080 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9082 22 B6 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9085 CD 96 87     	call Extrae_address
195+  9088 22 AC 85     	ld (Puntero_objeto),hl
196+  908B
197+  908B              ; Modifica (Puntero_DESPLZ_izq).
198+  908B
199+  908B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  908B              ; Cuántos movimientos hemos hecho ??
201+  908B              ; DE contiene (Puntero_DESPLZ_der).
202+  908B
203+  908B 2A B2 85     7 ld hl,(Indice_Sprite_der)
204+  908E EB           	ex de,hl
205+  908F A7           	and a
206+  9090 ED 52        	sbc hl,de
207+  9092 CB 3D        	srl l
208+  9094 3E 08        6 ld a,8
209+  9096 95           	sub l
210+  9097 30 1E        	jr nc,3F
211+  9099
212+  9099              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  9099              ; B="0".
214+  9099
215+  9099 04           4 inc b
216+  909A 3C           	inc a
217+  909B 20 FC        	jr nz,4B
218+  909D 78           	ld a,b
219+  909E 08           	ex af,af
220+  909F 2A B2 85     	ld hl,(Indice_Sprite_der)
221+  90A2 23           5 inc hl
222+  90A3 23           	inc hl
223+  90A4 10 FC        	djnz 5B
224+  90A6 22 B6 85     	ld (Puntero_DESPLZ_der),hl
225+  90A9 CD 96 87     	call Extrae_address
226+  90AC 22 AC 85     	ld (Puntero_objeto),hl
227+  90AF
228+  90AF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  90AF              ; _(Posicion_actual).
230+  90AF
231+  90AF 21 AA 85     	ld hl,Posicion_actual
232+  90B2 34           	inc (hl)
233+  90B3 08               ex af,af
234+  90B4 6F           	ld l,a
235+  90B5 18 DD        	jr 6B
236+  90B7
237+  90B7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  90B7
239+  90B7 47           3 ld b,a
240+  90B8 2A B4 85     	ld hl,(Indice_Sprite_izq)
241+  90BB 23           2 inc hl
242+  90BC 23           	inc hl
243+  90BD 10 FC        	djnz 2B
244+  90BF 22 B8 85     	ld (Puntero_DESPLZ_izq),hl
245+  90C2 C9           8 ret
246+  90C3
247+  90C3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  90C3              ;
249+  90C3              ;	24/7/22
250+  90C3              ;
251+  90C3              ;	modifica_parametros_1er_DESPLZ_2
252+  90C3              ;
253+  90C3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  90C3              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  90C3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  90C3
257+  90C3 3A B0 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  90C6 A7           	and a
259+  90C7 20 1F        	jr nz,1F
260+  90C9 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  90CB 32 B0 85         ld (CTRL_DESPLZ),a
262+  90CE
263+  90CE 21 A9 85     	ld hl,Columns
264+  90D1 34           	inc (hl)
265+  90D2 3A BC 85     	ld a,(Cuad_objeto)
266+  90D5 E6 01        	and 1
267+  90D7 28 0F        	jr z,1F
268+  90D9 2A AA 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  90DC 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  90DD 22 AA 85     	ld (Posicion_actual),hl
271+  90E0 CD BA 92     	call Genera_coordenadas
272+  90E3 CD 4E 92     	call Inc_CTRL_DESPLZ
273+  90E6 18 03        	jr 2F
274+  90E8 CD 4E 92     1 call Inc_CTRL_DESPLZ
275+  90EB C9           2 ret
276+  90EC
277+  90EC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  90EC              ;
279+  90EC              ;	24/7/22
280+  90EC              ;
281+  90EC              ;	Ciclo_completo.
282+  90EC              ;
283+  90EC              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  90EC              ;
285+  90EC              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  90EC              ; 	Decrementamos (Columns).
287+  90EC              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  90EC              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  90EC
290+  90EC
291+  90EC 3A B0 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  90EF FE FF        	cp $ff
293+  90F1 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  90F3 E6 F0        	and $f0
295+  90F5 20 28        	jr nz,3F
296+  90F7
297+  90F7              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  90F7
299+  90F7 3A B0 85     	ld a,(CTRL_DESPLZ)
300+  90FA 47           	ld b,a
301+  90FB 3E F8        	ld a,$f8
302+  90FD 80           	add b
303+  90FE 32 B0 85     	ld (CTRL_DESPLZ),a
304+  9101 18 1C        	jr 3F
305+  9103 21 A9 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9106 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9107 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9108 32 B0 85     	ld (CTRL_DESPLZ),a
309+  910B 3A BC 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  910E E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9110 20 0A        	jr nz,2F
312+  9112 2A AA 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9115 23           	inc hl
314+  9116 22 AA 85     	ld (Posicion_actual),hl
315+  9119 CD BA 92     	call Genera_coordenadas
316+  911C
317+  911C              ; Inicia el puntero de Sprite.
318+  911C
319+  911C CD AD 87     2 call Inicia_puntero_objeto_der
320+  911F C9           3 ret
321+  9120
322+  9120              ; ******************************************************************************************************************************************************************************************
323+  9120              ;
324+  9120              ;	15/02/23
325+  9120              ;
326+  9120              ;	Mov_left.
327+  9120              ;
328+  9120              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9120              ;
330+  9120              Mov_left
331+  9120
332+  9120 21 D5 85     	ld hl,Ctrl_0
333+  9123 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  9125              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  9125              ; 																	; _ en el caso de que no lo haya.
336+  9125 3A D5 85     	ld a,(Ctrl_0)
337+  9128 CB 77        	bit 6,a
338+  912A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  912C
340+  912C CD 48 92     	call Stop_Amadeus_left
341+  912F C8           	ret z
342+  9130 20 50        	jr nz,8F
343+  9132
344+  9132 3A AE 85     11 ld a,(Coordenada_X)
345+  9135 A7           	and a
346+  9136 20 4A        	jr nz,8F
347+  9138
348+  9138 3A B0 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  913B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  913C 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  913E
352+  913E              ; ---------- ---------- ----------
353+  913E
354+  913E 3A BD 85     	ld a,(Vel_left)
355+  9141 FE 02        	cp 2
356+  9143 28 0F        	jr z,1F
357+  9145 38 04        	jr c,6F
358+  9147 FE 04        	cp 4
359+  9149 28 12        	jr z,7F
360+  914B
361+  914B              ; ---------- ---------- ----------
362+  914B
363+  914B 3A B0 85     6 ld a,(CTRL_DESPLZ)
364+  914E FE F9        	cp $f9
365+  9150 20 30        	jr nz,8F
366+  9152 18 10        	jr 4F
367+  9154 3A B0 85     1 ld a,(CTRL_DESPLZ)
368+  9157 FE FA        	cp $fa
369+  9159 20 27        	jr nz,8F
370+  915B 18 07        	jr 4F
371+  915D 3A B0 85     7 ld a,(CTRL_DESPLZ)
372+  9160 FE FC        	cp $fc
373+  9162 20 1E        	jr nz,8F
374+  9164
375+  9164              ; ---------- ---------- ----------
376+  9164
377+  9164              4
378+  9164 CD 70 92     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  9167              ;	call Reinicio
380+  9167
381+  9167              ; ---------- ---------- ----------
382+  9167
383+  9167 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  9169 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  916A
386+  916A 2A B4 85     	ld hl,(Indice_Sprite_izq)
387+  916D 22 B8 85     	ld (Puntero_DESPLZ_izq),hl
388+  9170
389+  9170 CD 89 91     	call DESPLZ_IZQ
390+  9173 C1           	pop bc
391+  9174 10 F3        	djnz 5B
392+  9176 2A AA 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  9179 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  917A 22 AA 85     	ld (Posicion_actual),hl
395+  917D CD BA 92     	call Genera_coordenadas
396+  9180 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  9182
398+  9182              ; ---------- ---------- ----------
399+  9182              ; Movemos, no hay recolocación.
400+  9182
401+  9182 2A AA 85     8 ld hl,(Posicion_actual)
402+  9185 CD 89 91     	call DESPLZ_IZQ
403+  9188 C9           2 ret
404+  9189
405+  9189              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  9189              ;
407+  9189              ;	22/9/22
408+  9189
409+  9189              DESPLZ_IZQ
410+  9189
411+  9189 CD 98 91     	call Desplaza_izquierda
412+  918C CD E4 91         call modifica_parametros_1er_DESPLZ
413+  918F CD 0C 92     	call Ciclo_completo_2
414+  9192 21 D5 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  9195 CB BE        	res 7,(hl)
416+  9197 C9           	ret
417+  9198
418+  9198              Desplaza_izquierda
419+  9198
420+  9198 3A BD 85     	ld a,(Vel_left)
421+  919B 47           	ld b,a
422+  919C 2A B8 85     	ld hl,(Puntero_DESPLZ_izq)
423+  919F 23           1 inc hl
424+  91A0 23           	inc hl
425+  91A1 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  91A3 22 B8 85     	ld (Puntero_DESPLZ_izq),hl
427+  91A6 CD 96 87     	call Extrae_address
428+  91A9 22 AC 85     	ld (Puntero_objeto),hl
429+  91AC
430+  91AC              ; Modifica (Puntero_DESPLZ_der).
431+  91AC
432+  91AC              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  91AC              ; Cuántos movimientos hemos hecho ??
434+  91AC              ; DE contiene (Puntero_DESPLZ_izq).
435+  91AC
436+  91AC 2A B4 85     7 ld hl,(Indice_Sprite_izq)
437+  91AF EB           	ex de,hl
438+  91B0 A7           	and a
439+  91B1 ED 52        	sbc hl,de
440+  91B3 CB 3D        	srl l
441+  91B5 3E 08        6 ld a,8
442+  91B7 95           	sub l
443+  91B8 30 1E        	jr nc,3F
444+  91BA
445+  91BA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  91BA              ; B="0".
447+  91BA
448+  91BA 04           4 inc b
449+  91BB 3C           	inc a
450+  91BC 20 FC        	jr nz,4B
451+  91BE 78           	ld a,b
452+  91BF 08           	ex af,af
453+  91C0 2A B4 85     	ld hl,(Indice_Sprite_izq)
454+  91C3 23           5 inc hl
455+  91C4 23           	inc hl
456+  91C5 10 FC        	djnz 5B
457+  91C7 22 B8 85     	ld (Puntero_DESPLZ_izq),hl
458+  91CA CD 96 87     	call Extrae_address
459+  91CD 22 AC 85     	ld (Puntero_objeto),hl
460+  91D0
461+  91D0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  91D0              ; _(Posicion_actual).
463+  91D0
464+  91D0 21 AA 85     	ld hl,Posicion_actual
465+  91D3 35           	dec (hl)
466+  91D4 08           	ex af,af
467+  91D5 6F           	ld l,a
468+  91D6 18 DD        	jr 6B
469+  91D8
470+  91D8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  91D8
472+  91D8 47           3 ld b,a
473+  91D9 2A B2 85     	ld hl,(Indice_Sprite_der)
474+  91DC 23           2 inc hl
475+  91DD 23           	inc hl
476+  91DE 10 FC        	djnz 2B
477+  91E0 22 B6 85     	ld (Puntero_DESPLZ_der),hl
478+  91E3 C9           8 ret
479+  91E4
480+  91E4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  91E4              ;
482+  91E4              ;	modifica_parametros_1er_DESPLZ
483+  91E4              ;
484+  91E4              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  91E4              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  91E4              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  91E4
488+  91E4 3A B0 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  91E7 A7           	and a
490+  91E8 20 1E        	jr nz,1F
491+  91EA 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  91EB 32 B0 85         ld (CTRL_DESPLZ),a
493+  91EE 21 A9 85     	ld hl,Columns
494+  91F1 34           	inc (hl)
495+  91F2 3A BC 85     	ld a,(Cuad_objeto)
496+  91F5 E6 01        	and 1
497+  91F7 20 0F        	jr nz,1F
498+  91F9 2A AA 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  91FC 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  91FD 22 AA 85     	ld (Posicion_actual),hl
501+  9200 CD BA 92     	call Genera_coordenadas
502+  9203 CD 5F 92     	call Dec_CTRL_DESPLZ
503+  9206 18 03        	jr 2F
504+  9208 CD 5F 92     1 call Dec_CTRL_DESPLZ
505+  920B C9           2 ret
506+  920C
507+  920C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  920C
509+  920C 3A B0 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  920F FE F7        	cp $f7
511+  9211 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  9213 30 2C        	jr nc,3F
513+  9215
514+  9215              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  9215
516+  9215 06 00        	ld b,0
517+  9217 04           4 inc b
518+  9218 3C           	inc a
519+  9219 FE F7        	cp $f7
520+  921B 20 FA        	jr nz,4B
521+  921D 3E FF        	ld a,$ff
522+  921F 90           	sub b
523+  9220 32 B0 85     	ld (CTRL_DESPLZ),a
524+  9223 18 1C        	jr 3F
525+  9225
526+  9225              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  9225
528+  9225 21 A9 85     1 ld hl,Columns
529+  9228 35           	dec (hl)
530+  9229 AF           	xor a
531+  922A 32 B0 85     	ld (CTRL_DESPLZ),a
532+  922D 3A BC 85     	ld a,(Cuad_objeto)
533+  9230 E6 01        	and 1
534+  9232 28 0A        	jr z,2F
535+  9234 2A AA 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  9237 2B           	dec hl
537+  9238 22 AA 85     	ld (Posicion_actual),hl
538+  923B CD BA 92     	call Genera_coordenadas
539+  923E
540+  923E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  923E
542+  923E CD C0 87     2 call Inicia_puntero_objeto_izq
543+  9241 C9           3 ret
544+  9242
545+  9242              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  9242              ;
547+  9242              ;	19/10/22
548+  9242              ;
549+  9242              ;	(cp 29) para un Amadeus de 3 Columns.
550+  9242              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  9242
552+  9242 3A AE 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  9245 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  9247 C9           	ret
555+  9248
556+  9248              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  9248              ;
558+  9248              ;	19/10/22
559+  9248              ;
560+  9248              ;	(cp 2) para un Amadeus de 3 Columns.
561+  9248              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  9248
563+  9248 3A AE 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  924B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  924D C9           	ret
566+  924E
567+  924E              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  924E              ;
569+  924E              ;	24/7/22
570+  924E              ;
571+  924E              ;	Inc_CTRL_DESPLZ
572+  924E              ;
573+  924E              ;
574+  924E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  924E
576+  924E 21 B0 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  9251 3A BE 85     	ld a,(Vel_right)
578+  9254 A7           	and a
579+  9255 28 06        	jr z,1F
580+  9257 47           	ld b,a
581+  9258 34           3 inc (hl)
582+  9259 10 FD        	djnz 3B
583+  925B 18 01        	jr 2F
584+  925D 34           1 inc (hl)
585+  925E C9           2 ret
586+  925F
587+  925F              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  925F              ;
589+  925F              ;	5/2/23
590+  925F              ;
591+  925F              ;	Dec_CTRL_DESPLZ
592+  925F              ;
593+  925F              ;
594+  925F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  925F
596+  925F 21 B0 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  9262 3A BD 85     	ld a,(Vel_left)
598+  9265 A7           	and a
599+  9266 28 06        	jr z,1F
600+  9268 47           	ld b,a
601+  9269 35           3 dec (hl)
602+  926A 10 FD        	djnz 3B
603+  926C 18 01        	jr 2F
604+  926E 35           1 dec (hl)
605+  926F C9           2 ret
606+  9270
607+  9270              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  9270
609+  9270 2A AA 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  9273 01 1F 00     	ld bc,31
611+  9276 A7           	and a
612+  9277 ED 4A        	adc hl,bc
613+  9279 22 AA 85     	ld (Posicion_actual),hl
614+  927C 21 D5 85     	ld hl,Ctrl_0														; $xxx1
615+  927F CB C6        	set 0,(hl)
616+  9281 C9           	ret
617+  9282
618+  9282              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  9282
620+  9282 2A AA 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  9285 01 1F 00     	ld bc,31
622+  9288 A7           	and a
623+  9289 ED 42        	sbc hl,bc
624+  928B 22 AA 85     	ld (Posicion_actual),hl 											; $xx1x
625+  928E 21 D5 85     	ld hl,Ctrl_0
626+  9291 CB CE        	set 1,(hl)
627+  9293 C9           	ret
628+  9294
629+  9294              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  9294
631+  9294 24           Reaparece_abajo inc h
632+  9295 01 E0 17     	ld bc,$17e0
633+  9298 A7           	and a
634+  9299 ED 4A        	adc hl,bc
635+  929B 22 AA 85     	ld (Posicion_actual),hl
636+  929E 21 D5 85     	ld hl,Ctrl_0
637+  92A1 CB D6        	set 2,(hl)
638+  92A3 C9           	ret
639+  92A4
640+  92A4              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  92A4
642+  92A4 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  92A7 A7           	and a
644+  92A8 ED 42        	sbc hl,bc
645+  92AA 22 AA 85     	ld (Posicion_actual),hl
646+  92AD 21 D5 85     	ld hl,Ctrl_0
647+  92B0 CB DE        	set 3,(hl)
648+  92B2 C9           	ret
649+  92B3
650+  92B3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  92B3
652+  92B3 2A BA 85     Reinicio ld hl,(Posicion_inicio)
653+  92B6 22 AA 85     	ld (Posicion_actual),hl
654+  92B9 C9           	ret
# file closed: Direcciones.asm
841   92BA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  92BA              ;	12/12/22
  2+  92BA              ;
  3+  92BA              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  92BA              ;	Fila superior "0", Columna izquierda "0".
  5+  92BA              ;
  6+  92BA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  92BA              ;
  8+  92BA              ;	Modifica: A
  9+  92BA
 10+  92BA C5           Genera_coordenadas push bc
 11+  92BB E5           	push hl
 12+  92BC 2A AA 85     	ld hl,(Posicion_actual)
 13+  92BF 7D           	ld a,l
 14+  92C0 E6 1F        	and $1f
 15+  92C2 32 AE 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  92C5 CD 88 8F     	call calcula_tercio
 17+  92C8 47           	ld b,a
 18+  92C9 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  92CA 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  92CC 7D           	ld a,l
 21+  92CD E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  92CF 28 05        	jr z,2F
 23+  92D1 0C           1 inc c
 24+  92D2 D6 20        	sub 32
 25+  92D4 20 FB        	jr nz,1B
 26+  92D6 0C           2 inc c
 27+  92D7 04           	inc b
 28+  92D8 05           	dec b
 29+  92D9 28 04        	jr z,3F
 30+  92DB 3E E0        	ld a,$e0
 31+  92DD 10 F2        	djnz 1B
 32+  92DF 79           3 ld a,c
 33+  92E0 3D           	dec a
 34+  92E1 32 AF 85     	ld (Coordenada_y),a
 35+  92E4 E1           	pop hl
 36+  92E5 C1           	pop bc
 37+  92E6 C9           	ret
# file closed: Genera_coordenadas.asm
842   92E7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  92E7
  2+  92E7
  3+  92E7              ;   11/8/22
  4+  92E7              ;
  5+  92E7              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  92E7              ;
  7+  92E7              ;   Mov_obj.asm
  8+  92E7              ;
  9+  92E7              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  92E7              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  92E7              ;
 12+  92E7              ;   Codificación:
 13+  92E7              ;
 14+  92E7              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  92E7
 16+  92E7              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  92E7
 18+  92E7 02 40 00     Arriba db 2,%01000000,0
 19+  92EA 02 80 00     Abajo db 2,%10000000,0
 20+  92ED 02 20 00     Derecha db 2,%00100000,0
 21+  92F0 02 10 00     Izquierda db 2,%00010000,0
 22+  92F3 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  92F7 60 42 60 40
 22+  92FB 63
 23+  92FC 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9300 22 A3 80 A0
 24+  9304 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9308 84 A0 83 A0
 25+  930C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9310 80 A3 22 A0
 26+  9314 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9318 40 60 42 60
 27+  931C 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9320 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  9324 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  9328 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  932C 84
 31+  932D 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  9331 84 00
 32+  9333 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  9337 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  933B 1F 1F 1F 1F
 34+  933F 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  9343 1F 1F 1F 1F
 34+  9347 1F
 35+  9348 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  934C 2F 2F 2F 2F
 35+  9350 2F 2F
 36+  9352 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  9356 2F 2F 00
 37+  9359
 38+  9359
 39+  9359              ; ----- ----- ----- ----- -----
 40+  9359
 41+  9359 37 93        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  935B 33 93        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  935D F0 92        Indice_mov_Izquierda defw Izquierda
 44+  935F ED 92        Indice_mov_Derecha defw Derecha
 45+  9361 EA 92        Indice_mov_Abajo defw Abajo
 46+  9363 E7 92        Indice_mov_Arriba defw Arriba
 47+  9365 24 93        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  9367 28 93        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  9369 20 93        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  936B 2D 93        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  936D F3 92        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  936F              ; ----- ----- ----- ----- -----
 53+  936F
 54+  936F 3A DB 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9372 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  9373 28 02            jr z,1F
 57+  9375 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  9377 3A DC 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  937A C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  937C 32 DC 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  937F              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  937F 2A D9 85         ld hl,(Puntero_mov)
 63+  9382 7E               ld a,(hl)
 64+  9383 32 DB 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  9386 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  9387 22 D9 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  938A
 68+  938A 3A DD 85     Decoder ld a,(Repetimos_db)
 69+  938D A7               and a
 70+  938E 20 0C            jr nz,12F
 71+  9390 2A D9 85         ld hl,(Puntero_mov)
 72+  9393 7E               ld a,(hl)
 73+  9394 A7               and a
 74+  9395 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  9397 E6 0F            and $0f
 76+  9399 32 DD 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  939C              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  939C 2A D9 85     12 ld hl,(Puntero_mov)
 79+  939F CB 7E            bit 7,(hl)
 80+  93A1 28 03            jr z,2F
 81+  93A3 CD A6 8F         call Mov_down
 82+  93A6 2A D9 85     2 ld hl, (Puntero_mov)
 83+  93A9 CB 76            bit 6,(hl)
 84+  93AB 28 03            jr z,3F
 85+  93AD CD D4 8F         call Mov_up
 86+  93B0 2A D9 85     3 ld hl, (Puntero_mov)
 87+  93B3 CB 6E            bit 5,(hl)
 88+  93B5 28 03            jr z,4F
 89+  93B7 CD 02 90         call Mov_right
 90+  93BA 2A D9 85     4 ld hl, (Puntero_mov)
 91+  93BD CB 66            bit 4,(hl)
 92+  93BF 28 03            jr z,5F
 93+  93C1 CD 20 91         call Mov_left
 94+  93C4
 95+  93C4              ; ---------- --------- --------- ---------- ----------
 96+  93C4
 97+  93C4 3A DD 85     5 ld a,(Repetimos_db)
 98+  93C7 A7               and a
 99+  93C8 28 07            jr z,6F
100+  93CA 3D               dec a
101+  93CB 32 DD 85         ld (Repetimos_db),a
102+  93CE 28 01            jr z,6f
103+  93D0 C9           11 ret
104+  93D1 21 DB 85     6 ld hl,Contador_db_mov
105+  93D4 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  93D5 2A D9 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  93D8 23               inc hl
108+  93D9 22 D9 85         ld (Puntero_mov),hl
109+  93DC 18 F2            jr 11B
110+  93DE 2A D7 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  93E1 3A DC 85         ld a,(Incrementa_puntero)
112+  93E4 47               ld b,a
113+  93E5 23           8 inc hl
114+  93E6 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  93E8 5E               ld e,(hl)
116+  93E9 23               inc hl
117+  93EA 56               ld d,(hl)
118+  93EB EB               ex de,hl
119+  93EC 22 D9 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  93EF 18 DF            jr 11B
121+  93F1
122+  93F1              ; ---------- --------- --------- ---------- ----------
123+  93F1              ;
124+  93F1              ;   11/8/22
125+  93F1              ;
126+  93F1              ;   Prepara_Puntero_mov
127+  93F1
128+  93F1 E5           Prepara_Puntero_mov push hl
129+  93F2 D5               push de
130+  93F3 2A D7 85         ld hl,(Puntero_indice_mov)
131+  93F6 5E               ld e,(hl)
132+  93F7 23               inc hl
133+  93F8 56               ld d,(hl)
134+  93F9 EB               ex de,hl
135+  93FA 22 D9 85         ld (Puntero_mov),hl
136+  93FD D1               pop de
137+  93FE E1               pop hl
138+  93FF C9               ret
139+  9400
140+  9400              ; ---------- --------- --------- ---------- ----------
141+  9400              ;
142+  9400              ;   11/8/22
143+  9400              ;
144+  9400              ;   Reinicia_el_movimiento
145+  9400
146+  9400 CD F1 93     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  9403 AF               xor a
148+  9404 32 DB 85         ld (Contador_db_mov),a
149+  9407 32 DC 85         ld (Incrementa_puntero),a
150+  940A
151+  940A              ;    jr $
152+  940A
153+  940A C3 6F 93         jp Movimiento
154+  940D C9               ret
155+  940E              ; ---------- --------- --------- ---------- ----------
156+  940E
157+  940E
158+  940E
159+  940E
160+  940E
161+  940E
162+  940E
163+  940E
164+  940E
165+  940E
166+  940E
167+  940E
168+  940E
169+  940E
170+  940E
171+  940E
172+  940E
173+  940E
# file closed: Patrones_de_mov.asm
843   940E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  940E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  940E              ;
  3+  940E              ;	3/1/23
  4+  940E              ;
  5+  940E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  940E
  7+  940E              ;	ADC HL,SP	LD (addr),SP
  8+  940E              ;	ADD HL,SP	LD SP,(addr)
  9+  940E              ;	ADD IX,SP	LD SP,nn
 10+  940E              ; 	ADD IY,SP	LD SP,HL
 11+  940E              ;				LD SP,IX
 12+  940E              ;	DEC SP		LD SP,IY
 13+  940E
 14+  940E              ;	EX (SP),HL
 15+  940E              ;	EX (SP),IX
 16+  940E              ;	EX (SP),IY
 17+  940E
 18+  940E              ;	INC SP
 19+  940E
 20+  940E
 21+  940E                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 EB 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A E2 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A F1 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6 18 03            jr 4F
 43+  7FB8
 44+  7FB8 2A EF 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 45+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 46+  7FBD
 47+  7FBD D1           1 pop de
 48+  7FBE 73               ld (hl),e
 49+  7FBF 23               inc hl
 50+  7FC0 72               ld (hl),d
 51+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 52+  7FC2 10 F9            djnz 1B
 53+  7FC4
 54+  7FC4 A7               and a
 55+  7FC5 28 05            jr z,5F
 56+  7FC7
 57+  7FC7 22 F1 85         ld (Stack_snapshot_disparos),hl
 58+  7FCA 18 03            jr 6F
 59+  7FCC
 60+  7FCC 22 EF 85     5 ld (Stack_snapshot),hl
 61+  7FCF ED 7B EB 85  6 ld sp,(Stack)
 62+  7FD3
 63+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 64+  7FD4
 65+  7FD4
# file closed: Guarda_foto_registros.asm
844   7FD4
845   7FD4              	SAVESNA "Pruebas.sna", START
846   7FD4
847   7FD4
848   7FD4
# file closed: Banco_de_pruebas.asm
