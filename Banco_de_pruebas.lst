# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 09 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15 3E 01        	ld a,1
  42  AA17 D3 FE        	out ($fe),a
  43  AA19 CD A5 8D     	call Pinta_entidades
  44  AA1C CD 97 8D     	call Pinta_Amadeus
  45  AA1F 3E 02        	ld a,2
  46  AA21 D3 FE        	out ($fe),a
  47  AA23
  48  AA23 CD C7 8D     	call Guarda_parametros_DRAW
  49  AA26 CD E7 8C     	call Restore_Amadeus
  50  AA29
  51  AA29              ; Posible colisión Entidad-Amadeus ???
  52  AA29
  53  AA29 3A 19 89     	ld a,(Impacto2)
  54  AA2C CB 57        	bit 2,a
  55  AA2E 28 03        	jr z,1F
  56  AA30
  57  AA30 CD EA 8F     	call Detecta_colision_nave_entidad
  58  AA33
  59  AA33 CD C6 8A     1 call Gestiona_Amadeus
  60  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  61  AA39 CD F9 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  62  AA3C
  63  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  64  AA3C
  65  AA3C CD D3 8D     	call Recupera_parametros_DRAW
  66  AA3F CD B5 8D     	call Actualiza_relojes
  67  AA42 3E 00        	ld a,0
  68  AA44 D3 FE        	out ($fe),a
  69  AA46
  70  AA46 21 13 89     	ld hl,Ctrl_3
  71  AA49 CB 86        	res 0,(hl)
  72  AA4B
  73  AA4B FD E1        	pop iy
  74  AA4D DD E1        	pop ix
  75  AA4F F1           	pop af
  76  AA50 C1           	pop bc
  77  AA51 D1           	pop de
  78  AA52 E1           	pop hl
  79  AA53 D9           	exx
  80  AA54 C1           	pop bc
  81  AA55 D1           	pop de
  82  AA56 E1           	pop hl
  83  AA57 08           	ex af,af'
  84  AA58 F1           	pop af
  85  AA59 08           	ex af,af'
  86  AA5A D9           	exx
  87  AA5B
  88  AA5B ED 7B 09 89  	ld sp,(Stack_3)
  89  AA5F
  90  AA5F FB           	ei
  91  AA60 C9           	ret
  92  AA61
  93  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  94  AA61
  95  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
  96  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BF 85        	defw Caja_1
 100+ 856E 00 86        	defw Caja_2
 101+ 8570 41 86        	defw Caja_3
 102+ 8572 82 86        	defw Caja_4
 103+ 8574 C3 86        	defw Caja_5
 104+ 8576 04 87        	defw Caja_6
 105+ 8578 45 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 116+ 8586
 117+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 118+ 8587
 119+ 8587 05           	db %00000101									; (Attr).
 120+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 121+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 122+ 858C
 123+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 124+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 125+ 8590
 126+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 127+ 8592 04           	db 4 											; (Cuad_objeto).
 128+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 129+ 8597
 130+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 131+ 8598
 132+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 133+ 859E
 134+ 859E 00 00        	db 0,0											; Variables_de_pintado
 135+ 85A0 00 00        	defw 0											;	" " " " " " "
 136+ 85A2 00 00        	defw 0											;	" " " " " " "
 137+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 85A8
 139+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 140+ 85AA
 141+ 85AA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 142+ 85AC
 143+ 85AC 00           	db 0											; (Autoriza_movimiento).
 144+ 85AD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 85B1 00 00
 145+ 85B3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 85B6
 147+ 85B6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 148+ 85B8 00           	db 0											; (Cola_de_desplazamiento).
 149+ 85B9
 150+ 85B9 00           	db 0 											; (Columnas).
 151+ 85BA 00 00        	defw 0											; (Limite_horizontal).
 152+ 85BC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 153+ 85BF
 154+ 85BF              ; ---------- ---------- ---------- ---------- ----------
 155+ 85BF
 156+ 85BF 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 157+ 85C1 00 00        	defw 0											; (Posicion_actual).
 158+ 85C3 00 00        	defw 0 											; (Puntero_objeto).
 159+ 85C5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 160+ 85C8
 161+ 85C8 00           	db %00000000 									; (Attr).
 162+ 85C9
 163+ 85C9 00 00        	defw 0											; (Indice_Sprite_der).
 164+ 85CB 00 00        	defw 0											; (Indice_Sprite_izq).
 165+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 166+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 167+ 85D1
 168+ 85D1 00 00        	defw 0											; (Posicion_inicio).
 169+ 85D3 00           	db 0											; (Cuad_objeto).
 170+ 85D4
 171+ 85D4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 172+ 85D8
 173+ 85D8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 174+ 85D9
 175+ 85D9 00 00 00...  	ds 6											; Variables_de_borrado
 176+ 85DF
 177+ 85DF 00 00        	db 0,0											; Variables_de_pintado
 178+ 85E1 00 00        	defw 0											;	" " " " " " "
 179+ 85E3 00 00        	defw 0											;	" " " " " " "
 180+ 85E5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85E9
 182+ 85E9 00 00        	defw 0 											; Puntero_de_impresion.
 183+ 85EB
 184+ 85EB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 185+ 85ED
 186+ 85ED 00           	db 0											; (Autoriza_movimiento).
 187+ 85EE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 187+ 85F2 00 00
 188+ 85F4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 189+ 85F7
 190+ 85F7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 191+ 85F9 00           	db 0											; (Cola_de_desplazamiento).
 192+ 85FA
 193+ 85FA 00           	db 0 											; (Columnas).
 194+ 85FB 00 00        	defw 0											; (Limite_horizontal).
 195+ 85FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 196+ 8600
 197+ 8600              ; ---------- ---------- ---------- ---------- ----------
 198+ 8600
 199+ 8600 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 200+ 8602 00 00        	defw 0											; (Posicion_actual).
 201+ 8604 00 00        	defw 0 											; (Puntero_objeto).
 202+ 8606 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 203+ 8609
 204+ 8609 00           	db %00000000 									; (Attr).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Indice_Sprite_der).
 207+ 860C 00 00        	defw 0											; (Indice_Sprite_izq).
 208+ 860E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 209+ 8610 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 210+ 8612
 211+ 8612 00 00        	defw 0											; (Posicion_inicio).
 212+ 8614 00           	db 0											; (Cuad_objeto).
 213+ 8615
 214+ 8615 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 215+ 8619
 216+ 8619 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 217+ 861A
 218+ 861A 00 00 00...  	ds 6											; Variables_de_borrado
 219+ 8620
 220+ 8620 00 00        	db 0,0											; Variables_de_pintado
 221+ 8622 00 00        	defw 0											;	" " " " " " "
 222+ 8624 00 00        	defw 0											;	" " " " " " "
 223+ 8626 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 224+ 862A
 225+ 862A 00 00        	defw 0 											; Puntero_de_impresion.
 226+ 862C
 227+ 862C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 228+ 862E
 229+ 862E 00           	db 0											; (Autoriza_movimiento).
 230+ 862F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 230+ 8633 00 00
 231+ 8635 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 232+ 8638
 233+ 8638 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 234+ 863A 00           	db 0											; (Cola_de_desplazamiento).
 235+ 863B
 236+ 863B 00           	db 0 											; (Columnas).
 237+ 863C 00 00        	defw 0											; (Limite_horizontal).
 238+ 863E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 239+ 8641
 240+ 8641              ; ---------- ---------- ---------- ---------- ----------
 241+ 8641
 242+ 8641 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 243+ 8643 00 00        	defw 0											; (Posicion_actual).
 244+ 8645 00 00        	defw 0 											; (Puntero_objeto).
 245+ 8647 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 246+ 864A
 247+ 864A 00           	db %00000000 									; (Attr).
 248+ 864B
 249+ 864B 00 00        	defw 0											; (Indice_Sprite_der).
 250+ 864D 00 00        	defw 0											; (Indice_Sprite_izq).
 251+ 864F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 252+ 8651 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 253+ 8653
 254+ 8653 00 00        	defw 0											; (Posicion_inicio).
 255+ 8655 00           	db 0											; (Cuad_objeto).
 256+ 8656
 257+ 8656 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 258+ 865A
 259+ 865A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 260+ 865B
 261+ 865B 00 00 00...  	ds 6											; Variables_de_borrado
 262+ 8661
 263+ 8661 00 00        	db 0,0											; Variables_de_pintado
 264+ 8663 00 00        	defw 0											;	" " " " " " "
 265+ 8665 00 00        	defw 0											;	" " " " " " "
 266+ 8667 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 267+ 866B
 268+ 866B 00 00        	defw 0 											; Puntero_de_impresion.
 269+ 866D
 270+ 866D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 866F
 272+ 866F 00           	db 0											; (Autoriza_movimiento).
 273+ 8670 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 8674 00 00
 274+ 8676 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 8679
 276+ 8679 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 867B 00           	db 0											; (Cola_de_desplazamiento).
 278+ 867C
 279+ 867C 00           	db 0 											; (Columnas).
 280+ 867D 00 00        	defw 0											; (Limite_horizontal).
 281+ 867F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 8682
 283+ 8682              ; ---------- ---------- ---------- ---------- ----------
 284+ 8682
 285+ 8682 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 8684 00 00        	defw 0											; (Posicion_actual).
 287+ 8686 00 00        	defw 0 											; (Puntero_objeto).
 288+ 8688 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 868B
 290+ 868B 00           	db %00000000 									; (Attr).
 291+ 868C
 292+ 868C 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 868E 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 8690 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 8694
 297+ 8694 00 00        	defw 0											; (Posicion_inicio).
 298+ 8696 00           	db 0											; (Cuad_objeto).
 299+ 8697
 300+ 8697 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 869B
 302+ 869B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 869C
 304+ 869C 00 00 00...  	ds 6											; Variables_de_borrado
 305+ 86A2
 306+ 86A2 00 00        	db 0,0											; Variables_de_pintado
 307+ 86A4 00 00        	defw 0											;	" " " " " " "
 308+ 86A6 00 00        	defw 0											;	" " " " " " "
 309+ 86A8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 310+ 86AC
 311+ 86AC 00 00        	defw 0 											; Puntero_de_impresion.
 312+ 86AE
 313+ 86AE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 314+ 86B0
 315+ 86B0 00           	db 0											; (Autoriza_movimiento).
 316+ 86B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 316+ 86B5 00 00
 317+ 86B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 318+ 86BA
 319+ 86BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 320+ 86BC 00           	db 0											; (Cola_de_desplazamiento).
 321+ 86BD
 322+ 86BD 00           	db 0 											; (Columnas).
 323+ 86BE 00 00        	defw 0											; (Limite_horizontal).
 324+ 86C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 325+ 86C3
 326+ 86C3              ; ---------- ---------- ---------- ---------- ----------
 327+ 86C3
 328+ 86C3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 329+ 86C5 00 00        	defw 0											; (Posicion_actual).
 330+ 86C7 00 00        	defw 0 											; (Puntero_objeto).
 331+ 86C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 332+ 86CC
 333+ 86CC 00           	db %00000000 									; (Attr).
 334+ 86CD
 335+ 86CD 00 00        	defw 0											; (Indice_Sprite_der).
 336+ 86CF 00 00        	defw 0											; (Indice_Sprite_izq).
 337+ 86D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 338+ 86D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 339+ 86D5
 340+ 86D5 00 00        	defw 0											; (Posicion_inicio).
 341+ 86D7 00           	db 0											; (Cuad_objeto).
 342+ 86D8
 343+ 86D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 344+ 86DC
 345+ 86DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 346+ 86DD
 347+ 86DD 00 00 00...  	ds 6											; Variables_de_borrado
 348+ 86E3
 349+ 86E3 00 00        	db 0,0											; Variables_de_pintado
 350+ 86E5 00 00        	defw 0											;	" " " " " " "
 351+ 86E7 00 00        	defw 0											;	" " " " " " "
 352+ 86E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 353+ 86ED
 354+ 86ED 00 00        	defw 0 											; Puntero_de_impresion.
 355+ 86EF
 356+ 86EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 357+ 86F1
 358+ 86F1 00           	db 0											; (Autoriza_movimiento).
 359+ 86F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 359+ 86F6 00 00
 360+ 86F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 361+ 86FB
 362+ 86FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 363+ 86FD 00           	db 0											; (Cola_de_desplazamiento).
 364+ 86FE
 365+ 86FE 00           	db 0 											; (Columnas).
 366+ 86FF 00 00        	defw 0											; (Limite_horizontal).
 367+ 8701 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 368+ 8704
 369+ 8704              ; ---------- ---------- ---------- ---------- ----------
 370+ 8704
 371+ 8704 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 372+ 8706 00 00        	defw 0											; (Posicion_actual).
 373+ 8708 00 00        	defw 0 											; (Puntero_objeto).
 374+ 870A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 375+ 870D
 376+ 870D 00           	db %00000000 									; (Attr).
 377+ 870E
 378+ 870E 00 00        	defw 0											; (Indice_Sprite_der).
 379+ 8710 00 00        	defw 0											; (Indice_Sprite_izq).
 380+ 8712 00 00        	defw 0											; (Puntero_DESPLZ_der).
 381+ 8714 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 382+ 8716
 383+ 8716 00 00        	defw 0											; (Posicion_inicio).
 384+ 8718 00           	db 0											; (Cuad_objeto).
 385+ 8719
 386+ 8719 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 387+ 871D
 388+ 871D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 389+ 871E
 390+ 871E 00 00 00...  	ds 6											; Variables_de_borrado
 391+ 8724
 392+ 8724 00 00        	db 0,0											; Variables_de_pintado
 393+ 8726 00 00        	defw 0											;	" " " " " " "
 394+ 8728 00 00        	defw 0											;	" " " " " " "
 395+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 872E
 397+ 872E 00 00        	defw 0 											; Puntero_de_impresion.
 398+ 8730
 399+ 8730 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 400+ 8732
 401+ 8732 00           	db 0											; (Autoriza_movimiento).
 402+ 8733 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 402+ 8737 00 00
 403+ 8739 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 404+ 873C
 405+ 873C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 406+ 873E 00           	db 0											; (Cola_de_desplazamiento).
 407+ 873F
 408+ 873F 00           	db 0 											; (Columnas).
 409+ 8740 00 00        	defw 0											; (Limite_horizontal).
 410+ 8742 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 411+ 8745
 412+ 8745              ; ---------- ---------- ---------- ---------- ----------
 413+ 8745
 414+ 8745 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 415+ 8747 00 00        	defw 0											; (Posicion_actual).
 416+ 8749 00 00        	defw 0 											; (Puntero_objeto).
 417+ 874B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 418+ 874E
 419+ 874E 00           	db %00000000 									; (Attr).
 420+ 874F
 421+ 874F 00 00        	defw 0											; (Indice_Sprite_der).
 422+ 8751 00 00        	defw 0											; (Indice_Sprite_izq).
 423+ 8753 00 00        	defw 0											; (Puntero_DESPLZ_der).
 424+ 8755 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 425+ 8757
 426+ 8757 00 00        	defw 0											; (Posicion_inicio).
 427+ 8759 00           	db 0											; (Cuad_objeto).
 428+ 875A
 429+ 875A 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 430+ 875E
 431+ 875E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 432+ 875F
 433+ 875F 00 00 00...  	ds 6											; Variables_de_borrado
 434+ 8765
 435+ 8765 00 00        	db 0,0											; Variables_de_pintado
 436+ 8767 00 00        	defw 0											;	" " " " " " "
 437+ 8769 00 00        	defw 0											;	" " " " " " "
 438+ 876B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 439+ 876F
 440+ 876F 00 00        	defw 0 											; Puntero_de_impresion.
 441+ 8771
 442+ 8771 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 443+ 8773
 444+ 8773 00           	db 0											; (Autoriza_movimiento).
 445+ 8774 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 445+ 8778 00 00
 446+ 877A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 447+ 877D
 448+ 877D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 449+ 877F 00           	db 0											; (Cola_de_desplazamiento).
 450+ 8780
 451+ 8780 00           	db 0 											; (Columnas).
 452+ 8781 00 00        	defw 0											; (Limite_horizontal).
 453+ 8783 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 454+ 8786
 455+ 8786              ; -------------------------------------------------------------------------------------
 456+ 8786              ;
 457+ 8786              ;	20/05/23
 458+ 8786              ;
 459+ 8786              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 460+ 8786              ;
 461+ 8786              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 462+ 8786              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 463+ 8786              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 464+ 8786              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 465+ 8786
 466+ 8786              Indice_de_entidades
 467+ 8786
 468+ 8786 8A 87        	defw Entidad_1
 469+ 8788 9A 87        	defw Entidad_2
 470+ 878A
 471+ 878A              ;	BADSAT, (Satélite malvado).
 472+ 878A
 473+ 878A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 474+ 878C 04           	db %00000100									; (Attr).
 475+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 476+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 477+ 8791 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 478+ 8793 01           	db 1											; (Cuad_objeto).
 479+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 480+ 8798 93 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 481+ 879A
 482+ 879A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 483+ 879C 02           	db %00000010									; (Attr).
 484+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 485+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 486+ 87A1 40 50        	defw $5040                                      ; (Posicion_inicio).
 487+ 87A3 01           	db 1											; (Cuad_objeto).
 488+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 489+ 87A8 93 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 490+ 87AA
# file closed: Cajas_y_disparos.asm
  97  87AA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87AA              ; 13/05/23
   2+ 87AA
   3+ 87AA              Indice_de_niveles
   4+ 87AA
   5+ 87AA B8 87        	defw Nivel_1
   6+ 87AC BB 87        	defw Nivel_2
   7+ 87AE C8 87        	defw Nivel_3
   8+ 87B0 D8 87        	defw Nivel_4
   9+ 87B2 EA 87        	defw Nivel_5
  10+ 87B4              ;	...
  11+ 87B4              ;	...
  12+ 87B4              ;	+ Niveles ...
  13+ 87B4
  14+ 87B4 00 00        	defw 0
  15+ 87B6 00 00        	defw 0
  16+ 87B8
  17+ 87B8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87B9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87BB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87BC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87C0 01 02
  21+ 87C2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87C6 01 02
  22+ 87C8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87C9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87CD 01
  24+ 87CE 03 01 01 01  	db 3,1,1,1,1
  24+ 87D2 01
  25+ 87D3 03 01 01 01  	db 3,1,1,1,1
  25+ 87D7 01
  26+ 87D8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87D9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87DD 01
  28+ 87DE 04 01 01 01  	db 4,1,1,1,1
  28+ 87E2 01
  29+ 87E3 04 01 01 01  	db 4,1,1,1,1
  29+ 87E7 01
  30+ 87E8 02 03        	db 2,3
  31+ 87EA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87EB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87EF 01
  33+ 87F0 05 01 01 01  	db 5,1,1,1,1
  33+ 87F4 01
  34+ 87F5 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87F9 01
  35+ 87FA 05 01 01 01  	db 5,1,1,1,1
  35+ 87FE 01
  36+ 87FF
  37+ 87FF              ;---------------------------------------------------------------------------------------------------------------
  38+ 87FF              ;
  39+ 87FF              ;   3/9/23
  40+ 87FF              ;
  41+ 87FF              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 87FF              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 87FF              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 87FF              ;	_en la caja DRAW correspondiente.
  45+ 87FF              ;
  46+ 87FF              ;	MODIFICA: HL,DE y A.
  47+ 87FF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 87FF
  49+ 87FF              Inicializa_Punteros_de_nivel
  50+ 87FF
  51+ 87FF 21 AA 87     	ld hl,Indice_de_niveles
  52+ 8802 22 31 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8805 CD 37 8C     	call Extrae_address
  54+ 8808 7E           	ld a,(hl)
  55+ 8809 32 FD 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 880C 23           	inc hl
  57+ 880D 22 33 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8810 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8811
  60+ 8811              ;---------------------------------------------------------------------------------------------------------------
  61+ 8811              ;
  62+ 8811              ;   13/5/23
  63+ 8811              ;
  64+ 8811              ;	Destruye A,BC,HL,DE
  65+ 8811
  66+ 8811              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8811              ;	_del juego.
  68+ 8811
  69+ 8811              Prepara_cajas
  70+ 8811
  71+ 8811              ; Preparamos los punteros de las cajas.
  72+ 8811
  73+ 8811 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8814 CD 37 8C     	call Extrae_address
  75+ 8817 CD 54 88     	call Avanza_caja
  76+ 881A
  77+ 881A CD 98 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 881D
  79+ 881D 2A 33 89     	ld hl,(Datos_de_nivel)
  80+ 8820
  81+ 8820              ; HL está en los datos del nivel correspondiente.
  82+ 8820              ; B actuará como contador de cajas.
  83+ 8820
  84+ 8820 C5           1 push bc
  85+ 8821
  86+ 8821 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8822 CD 45 88     	call PreparaBC
  88+ 8825
  89+ 8825 21 86 87     	ld hl,Indice_de_entidades
  90+ 8828 CD 4D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 882B 22 03 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 882E
  93+ 882E CD 5E 88     	call Datos_de_entidad_a_caja
  94+ 8831
  95+ 8831 2A FB 88     	ld hl,(Indice_restore_caja)
  96+ 8834 CD 37 8C     	call Extrae_address
  97+ 8837 CD 54 88     	call Avanza_caja
  98+ 883A
  99+ 883A 2A 33 89     	ld hl,(Datos_de_nivel)
 100+ 883D 23           	inc hl
 101+ 883E 22 33 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8841
 103+ 8841 C1           	pop bc
 104+ 8842 10 DC        	djnz 1B
 105+ 8844 C9           	ret
 106+ 8845
 107+ 8845 CB 27        PreparaBC sla a
 108+ 8847 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8849 4F           	ld c,a
 110+ 884A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 884C C9           	ret
 112+ 884D
 113+ 884D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 884E ED 4A        	adc hl,bc
 115+ 8850 CD 37 8C     	call Extrae_address
 116+ 8853 C9           	ret
 117+ 8854
 118+ 8854 22 F7 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8857 13           	inc de
 120+ 8858 13           	inc de
 121+ 8859 EB           	ex de,hl
 122+ 885A 22 FB 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 885D C9           	ret
 124+ 885E
 125+ 885E              Datos_de_entidad_a_caja
 126+ 885E
 127+ 885E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 885E
 129+ 885E
 130+ 885E ED 5B F7 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8862
 132+ 8862 01 02 00     	ld bc,2
 133+ 8865 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8867
 135+ 8867 01 07 00     	ld bc,7
 136+ 886A CD 92 88     	call Situa_DE
 137+ 886D
 138+ 886D 01 05 00     	ld bc,5
 139+ 8870 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8872
 141+ 8872 01 04 00     	ld bc,4
 142+ 8875 CD 92 88     	call Situa_DE
 143+ 8878
 144+ 8878 01 07 00     	ld bc,7
 145+ 887B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 887D
 147+ 887D 01 14 00     	ld bc,20
 148+ 8880 CD 92 88     	call Situa_DE
 149+ 8883
 150+ 8883 01 02 00     	ld bc,2
 151+ 8886 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8888
 153+ 8888              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8888              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8888
 156+ 8888 01 0F 00     	ld bc,15									; *****
 157+ 888B CD 92 88     	call Situa_DE
 158+ 888E
 159+ 888E 3E 03        	ld a,3
 160+ 8890 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8891
 162+ 8891 C9           	ret
 163+ 8892
 164+ 8892 EB           Situa_DE ex de,hl
 165+ 8893 A7           	and a
 166+ 8894 ED 4A        	adc hl,bc
 167+ 8896 EB           	ex de,hl
 168+ 8897 C9           	ret
 169+ 8898
 170+ 8898              ;---------------------------------------------------------------------------------------------------------------
 171+ 8898              ;
 172+ 8898              ;	21/5/23
 173+ 8898              ;
 174+ 8898              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8898              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8898              ;
 177+ 8898              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8898              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8898              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8898              ;
 181+ 8898              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8898              ;	MODIFICA: A y B.
 183+ 8898              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8898
 185+ 8898              Admin_num_entidades
 186+ 8898
 187+ 8898              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8898
 189+ 8898 3A FD 88     	ld a,(Numero_de_entidades)
 190+ 889B A7           	and a
 191+ 889C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 889C              ;	jr z,$
 193+ 889C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 889C
 195+ 889C 20 03        	jr nz,3F
 196+ 889E
 197+ 889E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 889E
 199+ 889E CD FF 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88A1
 201+ 88A1 3A FD 88     3 ld a,(Numero_de_entidades)
 202+ 88A4 FE 07        	cp 7
 203+ 88A6 38 08        	jr c,1F
 204+ 88A8
 205+ 88A8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88A8              ; Actualizamos variables.
 207+ 88A8
 208+ 88A8 3E 07        	ld a,7
 209+ 88AA 32 FE 88     	ld (Numero_parcial_de_entidades),a
 210+ 88AD 47           	ld b,a
 211+ 88AE 18 04        	jr 2F
 212+ 88B0
 213+ 88B0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88B0              ; (Numero_de_entidades)="0".
 215+ 88B0
 216+ 88B0 32 FE 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88B3 47           	ld b,a
 218+ 88B4 C9           2 ret
# file closed: Niveles.asm
  98  88B5
  99  88B5              ; ******************************************************************************************************************************************************************************************
 100  88B5              ; Constantes.
 101  88B5              ; ******************************************************************************************************************************************************************************************
 102  88B5              ;
 103  88B5              ; 10/11/23
 104  88B5
 105  88B5              ;
 106  88B5              ; Constantes generales.
 107  88B5              ;
 108  88B5
 109  88B5              Sprite_vacio equ $f000
 110  88B5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 111  88B5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 112  88B5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 113  88B5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 114  88B5
 115  88B5              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 116  88B5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 117  88B5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 118  88B5              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 119  88B5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 120  88B5
 121  88B5              ;														; 55 Bytes.
 122  88B5
 123  88B5              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 124  88B5              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 125  88B5
 126  88B5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 127  88B5
 128  88B5              ; ******************************************************************************************************************************************************************************************
 129  88B5              ; Variables.
 130  88B5              ; ******************************************************************************************************************************************************************************************
 131  88B5              ;
 132  88B5              ; 10/11//23
 133  88B5              ;
 134  88B5              ; Variables de DRAW. (Motor principal).
 135  88B5              ;
 136  88B5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 137  88B5
 138  88B5 00           Filas db 0												; Filas. [DRAW]
 139  88B6 00           Columns db 0  											; Nº de columnas. [DRAW]
 140  88B7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 141  88B9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 142  88BB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 143  88BC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 144  88BD
 145  88BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 146  88BD
 147  88BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 148  88BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 149  88BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 150  88BE 00           Attr db 0												; Atributos de la entidad:
 151  88BF
 152  88BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 153  88BF              ;
 154  88BF              ;	COLORES: 0 ..... NEGRO
 155  88BF              ;    		 1 ..... AZUL
 156  88BF              ; 			 2 ..... ROJO
 157  88BF              ;			 3 ..... MAGENTA
 158  88BF              ; 			 4 ..... VERDE
 159  88BF              ; 			 5 ..... CIAN
 160  88BF              ;			 6 ..... AMARILLO
 161  88BF              ; 			 7 ..... BLANCO
 162  88BF
 163  88BF 00 00        Indice_Sprite_der defw 0
 164  88C1 00 00        Indice_Sprite_izq defw 0
 165  88C3 00 00        Puntero_DESPLZ_der defw 0
 166  88C5 00 00        Puntero_DESPLZ_izq defw 0
 167  88C7
 168  88C7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 169  88C9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 170  88CA
 171  88CA              ; Variables de objeto. (Características).
 172  88CA
 173  88CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 174  88CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 175  88CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 176  88CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 177  88CE
 178  88CE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 179  88CF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 180  88CF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 181  88CF 00 00 00...  Variables_de_borrado ds 6
 182  88D5
 183  88D5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 184  88D7 00 00        	defw 0
 185  88D9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 186  88DB 00 00 00 00  	db 0,0,0,0
 187  88DF
 188  88DF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 189  88E1              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 190  88E1
 191  88E1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 192  88E1
 193  88E1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 194  88E2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 195  88E2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 196  88E2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 197  88E2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 198  88E2              ;
 199  88E2              ; 														DESCRIPCIÖN:
 200  88E2              ;
 201  88E2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 202  88E2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 203  88E2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 204  88E2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 205  88E2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 206  88E2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 207  88E2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 208  88E2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 209  88E2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 210  88E2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 211  88E2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 212  88E2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 213  88E2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 214  88E2              ;
 215  88E2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 216  88E2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 217  88E2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 218  88E2
 219  88E2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 220  88E2
 221  88E2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 222  88E4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 223  88E6 00 00        Puntero_indice_mov_bucle defw 0							;
 224  88E8              ;
 225  88E8              ;
 226  88E8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 227  88E9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 228  88E9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 229  88E9 00           Incrementa_puntero_backup db 0
 230  88EA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 231  88EB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 232  88EB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 233  88EC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 234  88ED 00           Cola_de_desplazamiento db 0								; Este byte indica:
 235  88EE              ;
 236  88EE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 237  88EE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 238  88EE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 239  88EE              ;
 240  88EE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 241  88EE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 242  88EE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 243  88EE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 244  88EE              ;
 245  88EE              ;														;	"$ff" ..... Bucle infinito de repetición.
 246  88EE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 247  88EE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 248  88EE
 249  88EE
 250  88EE              ; Variables de funcionamiento. [DRAW].
 251  88EE
 252  88EE 00           Columnas db 0
 253  88EF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 254  88F1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 255  88F1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 256  88F2
 257  88F2              ; variables de control general.
 258  88F2
 259  88F2 00           Ctrl_2 db 0
 260  88F3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 261  88F3              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 262  88F3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 263  88F3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 264  88F3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 265  88F3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 266  88F3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 267  88F3              ;
 268  88F3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 269  88F3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 270  88F3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 271  88F3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 272  88F3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 273  88F3              ;														BIT 4, ???
 274  88F3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 275  88F3
 276  88F3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 277  88F4
 278  88F4              ;! 63; Bytes por entidad.
 279  88F4
 280  88F4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 281  88F4              ;					         		---------;      ;---------
 282  88F4
 283  88F4
 284  88F4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  88F4
 286  88F4 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 287  88F5
 288  88F5              ;														DESCRIPCIÓN:
 289  88F5              ;
 290  88F5              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 291  88F5              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 292  88F5              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 293  88F5              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 294  88F5              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 295  88F5              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 296  88F5
 297  88F5              ;														BIT 3, Recarga de nueva oleada.
 298  88F5              ;														BIT 4, Recarga de nueva oleada.
 299  88F5              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 300  88F5              ;														BIT 6, **** Frame completo.
 301  88F5              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 302  88F5
 303  88F5 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 304  88F7              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 305  88F7              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 306  88F7              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 307  88F7
 308  88F7              ; Gestión de ENTIDADES y CAJAS.
 309  88F7
 310  88F7 00 00        Puntero_store_caja defw 0
 311  88F9 00 00        Puntero_restore_caja defw 0
 312  88FB 00 00        Indice_restore_caja defw 0
 313  88FD 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 314  88FE 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 315  88FF 00           Entidades_en_curso db 0									; ..... ..... .....
 316  8900 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 317  8901              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 318  8901              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 319  8901              ;														; _ (Numero_de_malotes)="0".
 320  8901 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 321  8903 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 322  8905              ;														; _ puntero (Indice_entidades).
 323  8905
 324  8905
 325  8905              ;---------------------------------------------------------------------------------------------------------------
 326  8905              ;
 327  8905              ;	18/11/23
 328  8905              ;
 329  8905              ;	Álbumes.
 330  8905
 331  8905 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 332  8907              ;														; _variable para almacenar lo posición del puntero_
 333  8907              ; 														; _de pila, SP.
 334  8907 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 335  8909              ;														; La utiliza la rutina [Extrae_foto_registros].
 336  8909 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 337  890B 00 70        Stack_snapshot defw Album_de_fotos
 338  890D 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 339  890F
 340  890F              ;End_Snapshot defw Album_de_fotos
 341  890F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 342  890F 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 343  8911              ;														; _el snapshot de los registros del siguiente disparo.
 344  8911              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 345  8911 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 346  8913
 347  8913 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 348  8914              ;
 349  8914              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 350  8914              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 351  8914
 352  8914              ; Gestión de Disparos.
 353  8914
 354  8914 00           Numero_de_disparotes db 0
 355  8915 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 356  8917 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 357  8919 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 358  891A              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 359  891A              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 360  891A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 361  891C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 362  891C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 363  891C              ;														; _produzca colisión.
 364  891C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 365  891E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 366  891E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 367  8921              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 368  8921 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 369  8924              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 370  8924 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 371  8925
 372  8925              ;---------------------------------------------------------------------------------------------------------------
 373  8925
 374  8925              ; Relojes y temporizaciones.
 375  8925
 376  8925 00           Contador_de_frames db 0
 377  8926 00           Contador_de_frames_2 db 0
 378  8927
 379  8927 04           Clock_explosion db 4
 380  8928 1E           Clock_Entidades_en_curso db 30
 381  8929 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 382  892A              ;														; Repite la oleada de entidades.
 383  892A 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 384  892B 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 385  892C 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 386  892D
 387  892D 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 388  892E 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 389  892F 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 390  8930
 391  8930              ;---------------------------------------------------------------------------------------------------------------
 392  8930
 393  8930              ; Gestión de NIVELES.
 394  8930
 395  8930 00           Nivel db 0												; Nivel actual del juego.
 396  8931 00 00        Puntero_indice_NIVELES defw 0
 397  8933 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 398  8935              ; 														; _ que definen el NIVEL.
 399  8935              ; Y todo comienza aquí .....
 400  8935              ;
 401  8935              ; Rutina principal *************************************************************************************************************************************************************************
 402  8935              ;
 403  8935              ;	16/11/22
 404  8935
 405  8935              START
 406  8935
 407  8935 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 408  8938 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 409  893A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 410  893C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 411  893E F3           	DI
 412  893F
 413  893F 3E 07        	ld a,%00000111
 414  8941 CD C0 98     	call Cls
 415  8944
 416  8944 CD 10 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 417  8947
 418  8947              ; INICIALIZACIÓN.
 419  8947
 420  8947 CD FF 87     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 421  894A CD 11 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 422  894D CD 9F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 423  8950              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 424  8950 CD C0 8C     	call Restore_entidad
 425  8953
 426  8953 21 FE 88     	ld hl,Numero_parcial_de_entidades
 427  8956 46           	ld b,(hl)
 428  8957 04           	inc b
 429  8958 05           	dec b
 430  8959 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 431  895B
 432  895B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 433  895B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 434  895B              ;	Pintamos el resto de entidades:
 435  895B
 436  895B              ;	INICIA ENTIDADES !!!!!
 437  895B
 438  895B C5           1 push bc  												; Guardo el contador de entidades.
 439  895C CD 5E 8B     	call Inicia_entidad
 440  895F C1           	pop bc
 441  8960 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 442  8962
 443  8962              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 444  8962              ; (Esto se dá cuando se inicia una nueva oleada).
 445  8962
 446  8962 3A F4 88     	ld a,(Ctrl_1)
 447  8965 CB 5F        	bit 3,a
 448  8967 20 1B        	jr nz,5F											; Loop
 449  8969
 450  8969              ; 	INICIA AMADEUS !!!!!
 451  8969
 452  8969 CD E7 8C     3 call Restore_Amadeus
 453  896C CD 3D 8C     	call Inicia_Puntero_objeto
 454  896F CD B3 92     	call Draw
 455  8972 CD A0 7F     	call Guarda_foto_registros
 456  8975 CD 64 8D     	call Guarda_datos_de_borrado_Amadeus
 457  8978
 458  8978 11 7E 85     	ld de,Amadeus_db
 459  897B CD F9 8C     	call Store_Amadeus
 460  897E
 461  897E              ; 	INICIA DISPAROS !!!!!
 462  897E
 463  897E CD B5 8B     	call Inicia_Puntero_Disparo_Entidades
 464  8981 CD BC 8B     	call Inicia_Puntero_Disparo_Amadeus
 465  8984
 466  8984              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 467  8984
 468  8984 CD 9F 8B     5 call Inicia_punteros_de_cajas
 469  8987 CD C0 8C     	call Restore_entidad
 470  898A
 471  898A 3A F4 88     	ld a,(Ctrl_1)
 472  898D CB 5F        	bit 3,a
 473  898F 28 07        	jr z,6F
 474  8991
 475  8991              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 476  8991
 477  8991 21 F4 88     	ld hl,Ctrl_1
 478  8994 CB 9E        	res 3,(hl)
 479  8996 18 07        	jr Main
 480  8998
 481  8998              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 482  8998
 483  8998 21 13 89     6 ld hl,Ctrl_3
 484  899B CB C6        	set 0,(hl)											; Frame completo.
 485  899D FB           	ei
 486  899E 76           	halt
 487  899F
 488  899F              ; ------------------------------------
 489  899F
 490  899F              Main
 491  899F              ;
 492  899F              ;	11/12/23
 493  899F
 494  899F              ; Aparece nueva entidad ???
 495  899F
 496  899F              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 497  899F              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 498  899F              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 499  899F              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 500  899F              ;														; _un 2º bloque.
 501  899F
 502  899F 3A 28 89     	ld a,(Clock_Entidades_en_curso)
 503  89A2 47           	ld b,a
 504  89A3 3A 25 89     	ld a,(Contador_de_frames)
 505  89A6 B8           	cp b
 506  89A7 20 18        	jr nz,13F
 507  89A9
 508  89A9              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 509  89A9              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 510  89A9              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 511  89A9              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 512  89A9
 513  89A9              ;	inc a
 514  89A9              ;	cp b
 515  89A9              ;	jr nz,13F
 516  89A9
 517  89A9
 518  89A9              ;23 ld (Contador_de_frames),a
 519  89A9
 520  89A9              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 521  89A9              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 522  89A9
 523  89A9 3A FE 88     21 ld a,(Numero_parcial_de_entidades)
 524  89AC 47           	ld b,a
 525  89AD 3A FF 88     	ld a,(Entidades_en_curso)
 526  89B0 B8           	cp b
 527  89B1 28 0E        	jr z,13F
 528  89B3 30 0C        	jr nc,13F
 529  89B5
 530  89B5              ; --- --- --- --- ---
 531  89B5
 532  89B5 3C           	inc a
 533  89B6 32 FF 88     	ld (Entidades_en_curso),a
 534  89B9
 535  89B9              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 536  89B9
 537  89B9 3A 28 89     	ld a,(Clock_Entidades_en_curso)
 538  89BC              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 539  89BC              ;! _ IMPREDECIBLE !!!!
 540  89BC C6 32        	add 50
 541  89BE 32 28 89     	ld (Clock_Entidades_en_curso),a
 542  89C1
 543  89C1              ; -------------------------------------------------------------------------------------------------------------
 544  89C1
 545  89C1              ; Habilita disparos.
 546  89C1
 547  89C1 21 2A 89     13 ld hl,Disparo_Amadeus
 548  89C4 11 2C 89     	ld de,CLOCK_repone_disparo_Amadeus
 549  89C7 CD 84 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 550  89CA
 551  89CA 21 2D 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 552  89CD 11 2F 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 553  89D0 CD 84 9C     	call Habilita_disparos
 554  89D3
 555  89D3              ; COLISIONES.
 556  89D3
 557  89D3 CD B3 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 558  89D6
 559  89D6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 560  89D6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 561  89D6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 562  89D6
 563  89D6 AF           	xor a
 564  89D7 32 19 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 565  89DA
 566  89DA CD 9F 8B     	call Inicia_punteros_de_cajas
 567  89DD CD C0 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 568  89E0              ; 														; _ en DRAW.
 569  89E0 3A B5 88     	ld a,(Filas)
 570  89E3 A7           	and a
 571  89E4 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 572  89E6 CD D2 8C     	call Incrementa_punteros_de_cajas
 573  89E9 18 F2        	jr 12B
 574  89EB
 575  89EB              ; ---------------------------------------------------------------------------------------
 576  89EB
 577  89EB 3A FE 88     10 ld a,(Numero_parcial_de_entidades)
 578  89EE 47               ld b,a
 579  89EF A7           	and a
 580  89F0 20 14        	jr nz,11F
 581  89F2
 582  89F2 21 F4 88     	ld hl,Ctrl_1
 583  89F5 CB 66        	bit 4,(hl)
 584  89F7 C2 91 8A     	jp nz,16F
 585  89FA
 586  89FA              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 587  89FA
 588  89FA 21 F4 88     	ld hl,Ctrl_1
 589  89FD CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 590  89FF
 591  89FF 3A 25 89     	ld a,(Contador_de_frames)
 592  8A02 3C           	inc a
 593  8A03 32 29 89     	ld (Activa_recarga_cajas),a
 594  8A06
 595  8A06              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 596  8A06
 597  8A06 3A FF 88     11 ld a,(Entidades_en_curso)
 598  8A09 A7           	and a
 599  8A0A CA 91 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 600  8A0D 47           	ld b,a												; No hay entidades que gestionar.
 601  8A0E
 602  8A0E              ; ( Código que ejecutamos con cada entidad: ).
 603  8A0E
 604  8A0E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 605  8A0E
 606  8A0E C5           15 push bc 												; Nº de entidades en curso.
 607  8A0F
 608  8A0F              ; Existe "Entidad_guía" ???.
 609  8A0F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 610  8A0F
 611  8A0F 3A 13 89     	ld a,(Ctrl_3)
 612  8A12 CB 4F        	bit 1,a
 613  8A14 20 05        	jr nz,22F
 614  8A16
 615  8A16              ; Activa "Entidad_guía".
 616  8A16
 617  8A16 21 F2 88     	ld hl,Ctrl_2
 618  8A19 CB EE        	set 5,(hl)
 619  8A1B
 620  8A1B              ; Impacto ???
 621  8A1B
 622  8A1B 3A CE 88     22 ld a,(Impacto)
 623  8A1E A7           	and a
 624  8A1F 28 31        	jr z,8F
 625  8A21
 626  8A21              ; Hay Impacto en esta entidad.
 627  8A21
 628  8A21 21 27 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 629  8A24 35           	dec (hl)
 630  8A25 C2 86 8A     	jp nz,17F
 631  8A28
 632  8A28              ;! Velocidad de la animación de la explosión.
 633  8A28
 634  8A28 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 635  8A2A              ;														; _,(velocidad de la explosión).
 636  8A2A
 637  8A2A              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 638  8A2A
 639  8A2A CD 84 8D     	call Repone_datos_de_borrado
 640  8A2D CD DD 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 641  8A30
 642  8A30              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 643  8A30
 644  8A30 3A F2 88     	ld a,(Ctrl_2)
 645  8A33 CB 4F        	bit 1,a
 646  8A35 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 647  8A37
 648  8A37              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 649  8A37
 650  8A37 3A BD 88     	ld a,(CTRL_DESPLZ)
 651  8A3A A7           	and a
 652  8A3B 20 08        	jr nz,18F
 653  8A3D
 654  8A3D 21 84 84     	ld hl,Indice_Explosion_2x2-2
 655  8A40 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 656  8A43 18 06        	jr 19F
 657  8A45
 658  8A45 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 659  8A48 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 660  8A4B
 661  8A4B 21 F2 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 662  8A4E CB CE        	set 1,(hl)
 663  8A50 18 22        	jr 7F
 664  8A52
 665  8A52              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 666  8A52              ; _con las coordenadas de la entidad almacenada en DRAW.
 667  8A52
 668  8A52 3A F4 88     8 ld a,(Ctrl_1)
 669  8A55 CB 57        	bit 2,a
 670  8A57 28 1B        	jr z,7F
 671  8A59
 672  8A59 2A 1C 89     	ld hl,(Coordenadas_disparo_certero)
 673  8A5C EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 674  8A5D              ;														; E contiene la coordenada_X del disparo.
 675  8A5D 2A BB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 676  8A60              ;														; H FILA, (Coordenada_y de la entidad).
 677  8A60 A7           	and a
 678  8A61 ED 52        	sbc hl,de
 679  8A63
 680  8A63 CD CC 91     	call Determina_resultado_comparativa
 681  8A66
 682  8A66 78           	ld a,b
 683  8A67 A7           	and a
 684  8A68 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 685  8A6A
 686  8A6A              ; ----- ----- -----
 687  8A6A
 688  8A6A 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 689  8A6C 32 CE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 690  8A6F
 691  8A6F 21 F4 88     	ld hl,Ctrl_1
 692  8A72 CB 96        	res 2,(hl)
 693  8A74
 694  8A74 CD E2 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 695  8A77
 696  8A77 3A E1 88     	ld a,(Ctrl_0)
 697  8A7A CB 67        	bit 4,a
 698  8A7C 28 08        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 699  8A7E
 700  8A7E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 701  8A7E              ; [[[
 702  8A7E              ;	call Detecta_disparo_entidad
 703  8A7E              ; ]]]
 704  8A7E CD 80 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 705  8A81
 706  8A81 21 E1 88     	ld hl,Ctrl_0
 707  8A84 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 708  8A86
 709  8A86 CD 85 8C     17 call Store_Restore_cajas
 710  8A89
 711  8A89 C1           	pop bc
 712  8A8A 10 82        	djnz 15B
 713  8A8C
 714  8A8C              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 715  8A8C              ; Hemos gestionado todas las unidades.
 716  8A8C              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 717  8A8C
 718  8A8C 21 F4 88     	ld hl,Ctrl_1
 719  8A8F CB 96        	res 2,(hl)
 720  8A91
 721  8A91 21 13 89     16 ld hl,Ctrl_3
 722  8A94 CB C6        	set 0,(hl)											; Frame completo.
 723  8A96 AF           	xor a
 724  8A97 D3 FE        	out ($fe),a
 725  8A99 FB           	ei
 726  8A9A 76           	halt
 727  8A9B
 728  8A9B              ; ----------------------------------------
 729  8A9B
 730  8A9B 3A F4 88     	ld a,(Ctrl_1) 										; Existe Loop?
 731  8A9E CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 732  8AA0 CA 9F 89     	jp z,Main
 733  8AA3
 734  8AA3              ; RECARGA DE NUEVA OLEADA.
 735  8AA3
 736  8AA3 3A 25 89     	ld a,(Contador_de_frames)
 737  8AA6 47           	ld b,a
 738  8AA7 3A 29 89     	ld a,(Activa_recarga_cajas)
 739  8AAA B8           	cp b
 740  8AAB 28 08        	jr z,20F
 741  8AAD
 742  8AAD 21 F4 88     	ld hl,Ctrl_1
 743  8AB0 CB E6        	set 4,(hl)
 744  8AB2 C3 9F 89     	jp Main
 745  8AB5
 746  8AB5 21 F4 88     20 ld hl,Ctrl_1
 747  8AB8 CB A6        	res 4,(hl)
 748  8ABA
 749  8ABA 3A 25 89     	ld a,(Contador_de_frames)
 750  8ABD
 751  8ABD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 752  8ABD              ;! _ IMPREDECIBLE !!!!
 753  8ABD
 754  8ABD C6 0A        	add 10
 755  8ABF 32 28 89     	ld (Clock_Entidades_en_curso),a
 756  8AC2
 757  8AC2 C3 4A 89     	jp 4B
 758  8AC5
 759  8AC5 C9           	ret
 760  8AC6
 761  8AC6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 762  8AC6              ;
 763  8AC6              ;	16/11/23
 764  8AC6
 765  8AC6              Gestiona_Amadeus
 766  8AC6
 767  8AC6              ;! Activa/desactiva impacto con Amadeus.
 768  8AC6
 769  8AC6              ;	ld a,(Impacto)
 770  8AC6              ;	and a
 771  8AC6              ;	jr nz,2F
 772  8AC6
 773  8AC6 CD 4B 8B     	call Mov_Amadeus
 774  8AC9
 775  8AC9 3A E1 88     2 ld a,(Ctrl_0)
 776  8ACC CB 67        	bit 4,a
 777  8ACE 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 778  8AD0
 779  8AD0 CD 80 8B     	call Guarda_foto_entidad_a_pintar
 780  8AD3 CD 64 8D     	call Guarda_datos_de_borrado_Amadeus
 781  8AD6
 782  8AD6 21 E1 88     1 ld hl,Ctrl_0
 783  8AD9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 784  8ADB
 785  8ADB CD 57 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 786  8ADE
 787  8ADE              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 788  8ADE
 789  8ADE CD 1F 8C     	call Calcula_numero_de_disparotes
 790  8AE1
 791  8AE1 C9           	ret
 792  8AE2
 793  8AE2              ; --------------------------------------------------------------------------------------------------------------
 794  8AE2              ;
 795  8AE2              ;	27/05/23
 796  8AE2
 797  8AE2              Mov_obj
 798  8AE2
 799  8AE2 3A F2 88     	ld a,(Ctrl_2)
 800  8AE5 CB 4F        	bit 1,a
 801  8AE7 28 3C        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 802  8AE9
 803  8AE9              ; Explosión:
 804  8AE9
 805  8AE9 3A F3 88     	ld a,(Frames_explosion)
 806  8AEC A7           	and a
 807  8AED 20 1D        	jr nz,4F
 808  8AEF
 809  8AEF              ; Una alimaña menos!!!!!!!!!1
 810  8AEF
 811  8AEF              ; Se trataba de una Entidad_guía ???
 812  8AEF
 813  8AEF 3A F2 88     	ld a,(Ctrl_2)
 814  8AF2 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 815  8AF4 28 05        	jr z,5F
 816  8AF6
 817  8AF6 21 13 89     	ld hl,Ctrl_3
 818  8AF9 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 819  8AFB
 820  8AFB CD 02 8D     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 821  8AFE 21 FE 88     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 822  8B01 35           	dec (hl)
 823  8B02 21 FF 88     	ld hl,Entidades_en_curso
 824  8B05 35           	dec (hl)
 825  8B06 21 FD 88     	ld hl,Numero_de_entidades
 826  8B09 35           	dec (hl)
 827  8B0A 18 3E        	jr 3F
 828  8B0C
 829  8B0C              ; -----
 830  8B0C
 831  8B0C              ;	`Movemos´ la explosión.
 832  8B0C
 833  8B0C 2A C3 88     4 ld hl,(Puntero_DESPLZ_der)
 834  8B0F 23           	inc hl
 835  8B10 23           	inc hl
 836  8B11 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 837  8B14 CD 37 8C     	call Extrae_address
 838  8B17 22 B9 88     	ld (Puntero_objeto),hl
 839  8B1A
 840  8B1A 21 F3 88     	ld hl,Frames_explosion
 841  8B1D 35           	dec (hl)
 842  8B1E
 843  8B1E 21 E1 88     	ld hl,Ctrl_0
 844  8B21 CB E6        	set 4,(hl)
 845  8B23
 846  8B23 18 25        	jr 3F
 847  8B25
 848  8B25 AF           2 xor a
 849  8B26 32 E1 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 850  8B29
 851  8B29              ; Movemos Entidades malignas.
 852  8B29
 853  8B29 CD 2F 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 854  8B2C
 855  8B2C 3A E1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 856  8B2F CB 67        	bit 4,a
 857  8B31 C8           	ret z
 858  8B32
 859  8B32              ; Ha habido desplazamiento de la entidad maligna.
 860  8B32              ; Ha llegado a zona de AMADEUS ???
 861  8B32
 862  8B32 3A BC 88     	ld a,(Coordenada_y)
 863  8B35 FE 14        	cp $14
 864  8B37 38 08        	jr c,1F
 865  8B39
 866  8B39              ; ---------
 867  8B39
 868  8B39              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 869  8B39              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 870  8B39
 871  8B39 F3           	di
 872  8B3A CD 7C 8F     	call Genera_coordenadas_X
 873  8B3D CD B8 8F     	call Compara_coordenadas_X
 874  8B40 FB           	ei
 875  8B41
 876  8B41              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 877  8B41
 878  8B41              ; ---------
 879  8B41
 880  8B41 CD 87 8B     1 call Prepara_var_pintado	 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 881  8B44 CD 84 8D     	call Repone_datos_de_borrado
 882  8B47 CD DD 8B     	call Limpia_Variables_de_borrado
 883  8B4A
 884  8B4A C9           3 ret													; _de la misma.
 885  8B4B
 886  8B4B              ; --------------------------------------------------------------------------------------------------------------
 887  8B4B              ;
 888  8B4B              ;	29/1/23
 889  8B4B
 890  8B4B              Mov_Amadeus
 891  8B4B
 892  8B4B CD 24 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 893  8B4E
 894  8B4E 3A E1 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 895  8B51 CB 67        	bit 4,a
 896  8B53 C8           	ret z
 897  8B54
 898  8B54              ; ---------
 899  8B54
 900  8B54 CD 87 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 901  8B57 CD 74 8D     	call Repone_datos_de_borrado_Amadeus
 902  8B5A CD DD 8B     	call Limpia_Variables_de_borrado
 903  8B5D
 904  8B5D C9           	ret
 905  8B5E
 906  8B5E              ; -----------------------------------------------------------------------------------
 907  8B5E              ;
 908  8B5E              ;	11/12/23
 909  8B5E              ;
 910  8B5E              ;	Inicia Entidades y fija "Entidad_guía".
 911  8B5E
 912  8B5E CD 3D 8C     Inicia_entidad	call Inicia_Puntero_objeto
 913  8B61 CD D4 98     	call Recompone_posicion_inicio
 914  8B64 CD B3 92     	call Draw
 915  8B67 CD A0 7F     	call Guarda_foto_registros
 916  8B6A F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 917  8B6B              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 918  8B6B              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 919  8B6B              ; Existe "Entidad_guía" ???
 920  8B6B
 921  8B6B 3A 13 89     	ld a,(Ctrl_3)
 922  8B6E CB 4F        	bit 1,a
 923  8B70 20 0A        	jr nz,1F
 924  8B72
 925  8B72              ; Inicia Entidad_guía:
 926  8B72
 927  8B72 21 F2 88     	ld hl,Ctrl_2
 928  8B75 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
 929  8B77
 930  8B77 21 13 89     	ld hl,Ctrl_3
 931  8B7A CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
 932  8B7C
 933  8B7C CD 85 8C     1 call Store_Restore_cajas	 					    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 934  8B7F C9           	ret
 935  8B80
 936  8B80              ; --------------------------------------------------------------------------------------------------------------
 937  8B80              ;
 938  8B80              ;	31/08/23
 939  8B80              ;
 940  8B80              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 941  8B80              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 942  8B80
 943  8B80              Guarda_foto_entidad_a_pintar
 944  8B80
 945  8B80              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 946  8B80
 947  8B80 CD B3 92     	call Draw
 948  8B83 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 949  8B86 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 950  8B87
 951  8B87              ; --------------------------------------------------------------------------------------------------------------
 952  8B87              ;
 953  8B87              ;	19/9/23
 954  8B87
 955  8B87 21 B5 88     Prepara_var_pintado ld hl,Filas
 956  8B8A 11 D5 88     	ld de,Variables_de_pintado
 957  8B8D 01 08 00     	ld bc,8
 958  8B90 ED B0        	ldir
 959  8B92 C9           	ret
 960  8B93
 961  8B93              ; --------------------------------------------------------------------------------------------------------------
 962  8B93
 963  8B93 21 D5 88     Repone_pintar ld hl,Variables_de_pintado
 964  8B96 11 B5 88     	ld de,Filas
 965  8B99 01 08 00     	ld bc,8
 966  8B9C ED B0        	ldir
 967  8B9E C9           	ret
 968  8B9F
 969  8B9F              ; *************************************************************************************************************************************************************
 970  8B9F              ;
 971  8B9F              ; 8/1/23
 972  8B9F              ;
 973  8B9F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 974  8B9F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 975  8B9F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 976  8B9F
 977  8B9F              ; Destruye HL y DE !!!!!
 978  8B9F
 979  8B9F              Inicia_punteros_de_cajas
 980  8B9F
 981  8B9F 21 6C 85     	ld hl,Indice_de_cajas
 982  8BA2 CD 37 8C         call Extrae_address
 983  8BA5 22 F7 88         ld (Puntero_store_caja),hl
 984  8BA8 21 6E 85     	ld hl,Indice_de_cajas+2
 985  8BAB 22 FB 88     	ld (Indice_restore_caja),hl
 986  8BAE CD 37 8C     	call Extrae_address
 987  8BB1 22 F9 88     	ld (Puntero_restore_caja),hl
 988  8BB4 C9               ret
 989  8BB5
 990  8BB5              ; *************************************************************************************************************************************************************
 991  8BB5              ;
 992  8BB5              ; 8/1/23
 993  8BB5              ;
 994  8BB5              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 995  8BB5
 996  8BB5 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 997  8BB8 22 15 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 998  8BBB C9           	ret
 999  8BBC 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1000  8BBF 22 17 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1001  8BC2 C9           	ret
1002  8BC3
1003  8BC3              ; -------------------------------------------------------------------------------------------------------------
1004  8BC3              ;
1005  8BC3              ; 21/9/23
1006  8BC3              ;
1007  8BC3
1008  8BC3              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1009  8BC3
1010  8BC3              Limpia_album_Amadeus
1011  8BC3
1012  8BC3 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1013  8BC6 7E           	ld a,(hl)
1014  8BC7 A7           	and a
1015  8BC8 C8           	ret z
1016  8BC9
1017  8BC9 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1018  8BCC 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1019  8BCF 01 0B 00     	ld bc,11
1020  8BD2 AF           	xor a
1021  8BD3 77           	ld (hl),a
1022  8BD4 ED B0        	ldir
1023  8BD6
1024  8BD6 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1025  8BD9 22 11 89     	ld (End_Snapshot_Amadeus),hl
1026  8BDC
1027  8BDC C9           	ret
1028  8BDD
1029  8BDD 21 CF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1030  8BE0 11 D0 88     	ld de,Variables_de_borrado+1
1031  8BE3 01 05 00     	ld bc,5
1032  8BE6 AF           	xor a
1033  8BE7 77           	ld (hl),a
1034  8BE8 ED B0        	ldir
1035  8BEA C9           	ret
1036  8BEB
1037  8BEB              ; -------------------------------------------------------------------------------------------------------------
1038  8BEB              ;
1039  8BEB              ; 8/9/23
1040  8BEB              ;
1041  8BEB
1042  8BEB              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1043  8BEB              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1044  8BEB
1045  8BEB              Calcula_numero_de_malotes
1046  8BEB
1047  8BEB 21 00 70     	ld hl,Album_de_fotos
1048  8BEE EB           	ex de,hl
1049  8BEF 2A 0B 89     	ld hl,(Stack_snapshot)
1050  8BF2
1051  8BF2 06 00        	ld b,0
1052  8BF4 7D           	ld a,l
1053  8BF5 93           	sub e
1054  8BF6 28 07        	jr z,1F
1055  8BF8
1056  8BF8              ; Nº de malotes no es "0".
1057  8BF8
1058  8BF8 D6 06        2 sub 6
1059  8BFA 04           	inc b
1060  8BFB A7           	and a
1061  8BFC 20 FA        	jr nz,2B
1062  8BFE 78           	ld a,b
1063  8BFF
1064  8BFF 32 00 89     1 ld (Numero_de_malotes),a
1065  8C02 C9           	ret
1066  8C03
1067  8C03              ; -------------------------------------------------------------------------------------------------------------
1068  8C03              ;
1069  8C03              ; 8/9/23
1070  8C03              ;
1071  8C03
1072  8C03              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1073  8C03              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1074  8C03
1075  8C03              Calcula_malotes_Amadeus
1076  8C03
1077  8C03 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1078  8C06 EB           	ex de,hl
1079  8C07 2A 11 89     	ld hl,(End_Snapshot_Amadeus)
1080  8C0A
1081  8C0A 7C           	ld a,h
1082  8C0B A7           	and a
1083  8C0C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1084  8C0E
1085  8C0E 06 00        	ld b,0
1086  8C10 7D           	ld a,l
1087  8C11 93           	sub e
1088  8C12 28 07        	jr z,1F
1089  8C14
1090  8C14              ; Nº de malotes no es "0".
1091  8C14
1092  8C14 D6 06        2 sub 6
1093  8C16 04           	inc b
1094  8C17 A7           	and a
1095  8C18 20 FA        	jr nz,2B
1096  8C1A 78           	ld a,b
1097  8C1B
1098  8C1B 32 00 89     1 ld (Numero_de_malotes),a
1099  8C1E C9           	ret
1100  8C1F
1101  8C1F              ; -------------------------------------------------------------------------------------------------------------
1102  8C1F              ;
1103  8C1F              ; 28/2/23
1104  8C1F              ;
1105  8C1F
1106  8C1F              Calcula_numero_de_disparotes
1107  8C1F
1108  8C1F 21 56 70     	ld hl,Album_de_fotos_disparos
1109  8C22 EB           	ex de,hl
1110  8C23 2A 0F 89     	ld hl,(End_Snapshot_disparos)
1111  8C26
1112  8C26 06 00        	ld b,0
1113  8C28 7D           	ld a,l
1114  8C29 93           	sub e
1115  8C2A 28 07        	jr z,1F
1116  8C2C
1117  8C2C              ; Nº de malotes no es "0".
1118  8C2C
1119  8C2C D6 06        2 sub 6
1120  8C2E 04           	inc b
1121  8C2F A7           	and a
1122  8C30 20 FA        	jr nz,2B
1123  8C32 78           	ld a,b
1124  8C33
1125  8C33 32 14 89     1 ld (Numero_de_disparotes),a
1126  8C36 C9           	ret
1127  8C37
1128  8C37              ; *************************************************************************************************************************************************************
1129  8C37              ;
1130  8C37              ; 20/10/22
1131  8C37              ;
1132  8C37              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1133  8C37              ;
1134  8C37              ; Destruye el puntero y DE !!!!!
1135  8C37
1136  8C37 5E           Extrae_address ld e,(hl)
1137  8C38 23           	inc hl
1138  8C39 56           	ld d,(hl)
1139  8C3A 2B           	dec hl
1140  8C3B EB           	ex de,hl
1141  8C3C C9           	ret
1142  8C3D
1143  8C3D              ; *************************************************************************************************************************************************************
1144  8C3D              ;
1145  8C3D              ;	7/2/23
1146  8C3D              ;
1147  8C3D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1148  8C3D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1149  8C3D              ;
1150  8C3D              ;   Destruye HL y BC !!!!!,
1151  8C3D              ;
1152  8C3D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1153  8C3D              ;					"0" ..... Izquierda.
1154  8C3D
1155  8C3D              Inicia_Puntero_objeto
1156  8C3D
1157  8C3D 3A C9 88     	ld a,(Cuad_objeto)
1158  8C40 E6 01        	and 1
1159  8C42 F5           	push af
1160  8C43 CC 61 8C     	call z,Inicia_puntero_objeto_izq
1161  8C46 F1           	pop af
1162  8C47 28 2B        	jr z,1F
1163  8C49 CD 4E 8C     	call Inicia_puntero_objeto_der
1164  8C4C 18 26        	jr 1F
1165  8C4E
1166  8C4E              ; Arrancamos desde la parte izquierda de la pantalla.
1167  8C4E              ; Iniciamos (Indice_Sprite_der).
1168  8C4E
1169  8C4E 2A BF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1170  8C51 22 C3 88     	ld (Puntero_DESPLZ_der),hl
1171  8C54 CD 37 8C     	call Extrae_address
1172  8C57 22 B9 88     	ld (Puntero_objeto),hl
1173  8C5A
1174  8C5A 2A C1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1175  8C5D 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
1176  8C60 C9           	ret
1177  8C61
1178  8C61              ; Arrancamos desde la parte derecha de la pantalla.
1179  8C61              ; Iniciamos (Indice_Sprite_izq).
1180  8C61
1181  8C61 2A C1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1182  8C64 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
1183  8C67 CD 37 8C     	call Extrae_address
1184  8C6A 22 B9 88     	ld (Puntero_objeto),hl
1185  8C6D
1186  8C6D 2A BF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1187  8C70 22 C3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1188  8C73 C9           	ret
1189  8C74
1190  8C74              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1191  8C74
1192  8C74 21 40 83     1 ld hl,Amadeus
1193  8C77 ED 4B B9 88  	ld bc,(Puntero_objeto)
1194  8C7B B7 ED 42     	sub hl,bc
1195  8C7E C0           	ret nz
1196  8C7F 21 E1 88     	ld hl,Ctrl_0
1197  8C82 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1198  8C84 C9           	ret 												; _de nuestra nave en los extremos.
1199  8C85
1200  8C85              ; *************************************************************************************************************************************************************
1201  8C85              ;
1202  8C85              ;	14/5/23
1203  8C85              ;
1204  8C85              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1205  8C85              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1206  8C85
1207  8C85              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1208  8C85              ;	_de la 2ª y 3ª entidad respectivamente.
1209  8C85
1210  8C85              Store_Restore_cajas
1211  8C85
1212  8C85 E5           	push hl
1213  8C86 D5           	push de
1214  8C87 C5            	push bc
1215  8C88
1216  8C88              ;	STORE !!!!!
1217  8C88              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1218  8C88
1219  8C88 21 B5 88     	ld hl,Filas
1220  8C8B ED 5B F7 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1221  8C8F 01 3F 00     	ld bc,63
1222  8C92 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1223  8C94
1224  8C94              ; 	Entidad_sospechosa. 20/4/23
1225  8C94
1226  8C94 3A CE 88     	ld a,(Impacto)
1227  8C97 A7           	and a
1228  8C98 28 0C        	jr z,1F
1229  8C9A
1230  8C9A 2A F7 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1231  8C9D 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1232  8CA0 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1233  8CA1 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1234  8CA3 22 1A 89     	ld (Entidad_sospechosa_de_colision),hl
1235  8CA6
1236  8CA6              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1237  8CA6
1238  8CA6 2A F9 88     1 ld hl,(Puntero_restore_caja)
1239  8CA9 7E           	ld a,(hl)
1240  8CAA A7           	and a
1241  8CAB F5           	push af
1242  8CAC 28 08        	jr z,2F
1243  8CAE
1244  8CAE 11 B5 88     	ld de,Filas
1245  8CB1 01 3F 00     	ld bc,63
1246  8CB4 ED B0        	ldir
1247  8CB6
1248  8CB6 CD D2 8C     2 call Incrementa_punteros_de_cajas
1249  8CB9
1250  8CB9 F1           	pop af
1251  8CBA 28 EA        	jr z,1B
1252  8CBC
1253  8CBC C1           	pop bc
1254  8CBD D1           	pop de
1255  8CBE E1           	pop hl
1256  8CBF
1257  8CBF C9           	ret
1258  8CC0
1259  8CC0              ; **************************************************************************************************
1260  8CC0              ;
1261  8CC0              ;	12/05/23
1262  8CC0              ;
1263  8CC0              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1264  8CC0
1265  8CC0 E5           Restore_entidad push hl
1266  8CC1 D5           	push de
1267  8CC2 C5            	push bc
1268  8CC3
1269  8CC3 2A F7 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1270  8CC6 11 B5 88     	ld de,Filas
1271  8CC9 01 3F 00     	ld bc,63
1272  8CCC ED B0        	ldir
1273  8CCE
1274  8CCE C1           	pop bc
1275  8CCF D1           	pop de
1276  8CD0 E1           	pop hl
1277  8CD1 C9           	ret
1278  8CD2
1279  8CD2              ; **************************************************************************************************
1280  8CD2              ;
1281  8CD2              ;	08/05/23
1282  8CD2              ;
1283  8CD2              ;	Incrementamos los dos punteros de entidades. (+1).
1284  8CD2
1285  8CD2              Incrementa_punteros_de_cajas
1286  8CD2
1287  8CD2 2A F9 88     	ld hl,(Puntero_restore_caja)
1288  8CD5 22 F7 88     	ld (Puntero_store_caja),hl
1289  8CD8 2A FB 88     	ld hl,(Indice_restore_caja)
1290  8CDB 23           	inc hl
1291  8CDC 23           	inc hl
1292  8CDD 22 FB 88     	ld (Indice_restore_caja),hl
1293  8CE0 CD 37 8C         call Extrae_address
1294  8CE3 22 F9 88         ld (Puntero_restore_caja),hl
1295  8CE6 C9               ret
1296  8CE7
1297  8CE7              ; **************************************************************************************************
1298  8CE7              ;
1299  8CE7              ;	25/01/23
1300  8CE7              ;
1301  8CE7              ;	Restore_Amadeus
1302  8CE7              ;
1303  8CE7              ;	Cargamos en DRAW los parámetros de Amadeus.
1304  8CE7              ;
1305  8CE7
1306  8CE7 E5           Restore_Amadeus	push hl
1307  8CE8 D5           	push de
1308  8CE9 C5            	push bc
1309  8CEA 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1310  8CED 11 B5 88     	ld de,Filas
1311  8CF0 01 3F 00     	ld bc,63
1312  8CF3 ED B0        	ldir
1313  8CF5 C1           	pop bc
1314  8CF6 D1           	pop de
1315  8CF7 E1           	pop hl
1316  8CF8 C9           	ret
1317  8CF9
1318  8CF9              ; *************************************************************************************************************************************************************
1319  8CF9              ;
1320  8CF9              ;	29/04/23
1321  8CF9              ;
1322  8CF9              ;	Store_Amadeus
1323  8CF9              ;
1324  8CF9              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1325  8CF9              ;
1326  8CF9              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1327  8CF9              ;
1328  8CF9              ;	DESTRUYE: HL y BC y DE.
1329  8CF9
1330  8CF9 21 B5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1331  8CFC 01 3F 00     	ld bc,63
1332  8CFF ED B0        	ldir
1333  8D01 C9           	ret
1334  8D02
1335  8D02              ; -----------------------------------------------------------
1336  8D02              ;
1337  8D02              ;	27/04/23
1338  8D02              ;
1339  8D02              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1340  8D02              ;
1341  8D02              ;	Destruye: HL,BC,DE,A
1342  8D02
1343  8D02 21 B5 88     Borra_datos_entidad ld hl,Filas
1344  8D05 01 3E 00     	ld bc,62
1345  8D08 AF           	xor a
1346  8D09 77           	ld (hl),a
1347  8D0A 11 B6 88     	ld de,Filas+1
1348  8D0D ED B0        	ldir
1349  8D0F C9           	ret
1350  8D10
1351  8D10              ; -----------------------------------------------------------
1352  8D10
1353  8D10              ; Teclado.
1354  8D10
1355  8D10 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1356  8D12 DB FE        	in a,($fe)
1357  8D14 E6 01        	and $01
1358  8D16 28 02        	jr z,1f
1359  8D18 18 F6        	jr Pulsa_ENTER
1360  8D1A C9           1 ret
1361  8D1B
1362  8D1B              ; **************************************************************************************************
1363  8D1B              ;
1364  8D1B              ; Temporización.
1365  8D1B
1366  8D1B              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1367  8D1B              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1368  8D1B              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1369  8D1B              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1370  8D1B
1371  8D1B              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1372  8D1B              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1373  8D1B              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1374  8D1B
1375  8D1B              ; A partir de $4f61 no hace falta DELAY.
1376  8D1B
1377  8D1B              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1378  8D1B
1379  8D1B 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1380  8D1E 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1381  8D1F 78           	LD A,B
1382  8D20 A7           	AND A
1383  8D21 20 FB        	JR NZ,wait
1384  8D23 C9           	RET
1385  8D24
1386  8D24              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1387  8D24              ;
1388  8D24              ;	5/3/23
1389  8D24              ;
1390  8D24              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1391  8D24
1392  8D24              Movimiento_Amadeus
1393  8D24
1394  8D24              ; Disparo.
1395  8D24
1396  8D24 3A 2A 89     	ld a,(Disparo_Amadeus)
1397  8D27 A7           	and a
1398  8D28 20 02        	jr nz,1F
1399  8D2A 18 15        	jr 2F
1400  8D2C
1401  8D2C 3E F7        1 ld a,$f7													; "5" para disparar.
1402  8D2E DB FE        	in a,($fe)
1403  8D30 E6 10        	and $10
1404  8D32
1405  8D32 F5           	push af
1406  8D33 CC DF 8D     	call z,Genera_disparo
1407  8D36 F1           	pop af
1408  8D37 20 08        	jr nz,2F
1409  8D39
1410  8D39 3A 2A 89     	ld a,(Disparo_Amadeus)
1411  8D3C EE 01        	xor 1
1412  8D3E 32 2A 89     	ld (Disparo_Amadeus),a
1413  8D41 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1414  8D43 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1415  8D45 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1416  8D47 CC 8E 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1417  8D4A
1418  8D4A 3E F7        	ld a,$f7
1419  8D4C DB FE        	in a,($fe)
1420  8D4E E6 01        	and $01
1421  8D50 C8           	ret z
1422  8D51
1423  8D51 3E F7        	ld a,$f7
1424  8D53 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1425  8D55 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1426  8D57 CC 70 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1427  8D5A C9           	ret
1428  8D5B
1429  8D5B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1430  8D5B              ;
1431  8D5B              ;	Rutina provisional para que los malotes cagen balas.
1432  8D5B
1433  8D5B              Detecta_disparo_entidad
1434  8D5B
1435  8D5B 3A 2D 89     	ld a,(Disparo_entidad)
1436  8D5E A7           	and a
1437  8D5F C8           	ret z
1438  8D60
1439  8D60              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1440  8D60
1441  8D60              ;	ld a,$7f				; Detecta SPACE.
1442  8D60              ;	in a,($fe)
1443  8D60              ;	and 1
1444  8D60              ;	ret nz
1445  8D60
1446  8D60 CD DF 8D     	call Genera_disparo
1447  8D63 C9           	ret
1448  8D64
1449  8D64              ; ----------------------------------------------------------------------
1450  8D64              ;
1451  8D64              ;	8/9/23
1452  8D64
1453  8D64 2A 11 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1454  8D67 2B            	dec hl
1455  8D68 7E           	ld a,(hl)
1456  8D69 A7           	and a
1457  8D6A C8           	ret z										; Salimos si es álbum está vacío.
1458  8D6B
1459  8D6B 11 D4 88     	ld de,Variables_de_borrado+5
1460  8D6E 01 06 00     	ld bc,6
1461  8D71 ED B8        	lddr
1462  8D73 C9           	ret
1463  8D74
1464  8D74              ; ----------------------------------------------------------------------
1465  8D74              ;
1466  8D74              ;	9/9/23
1467  8D74
1468  8D74              Repone_datos_de_borrado_Amadeus
1469  8D74
1470  8D74 21 CF 88     	ld hl,Variables_de_borrado
1471  8D77 11 AC 70     	ld de,Album_de_fotos_Amadeus
1472  8D7A 01 06 00     	ld bc,6
1473  8D7D ED B0        	ldir
1474  8D7F
1475  8D7F EB           	ex de,hl
1476  8D80 22 11 89     	ld (End_Snapshot_Amadeus),hl
1477  8D83
1478  8D83 C9           	ret
1479  8D84
1480  8D84              ; ----------------------------------------------------------------------
1481  8D84              ;
1482  8D84              ;	27/10/23
1483  8D84              ;
1484  8D84
1485  8D84              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1486  8D84              ;	_ Album_de_fotos correspondiente.
1487  8D84
1488  8D84              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1489  8D84              ;	_ durante el proceso de escritura.
1490  8D84
1491  8D84              Repone_datos_de_borrado
1492  8D84
1493  8D84 F3           	di
1494  8D85
1495  8D85 ED 5B 0B 89  	ld de,(Stack_snapshot)
1496  8D89 21 CF 88     	ld hl,Variables_de_borrado
1497  8D8C 01 06 00     	ld bc,6
1498  8D8F ED B0        	ldir
1499  8D91 FB           	ei
1500  8D92
1501  8D92 EB           	ex de,hl
1502  8D93 22 0B 89     	ld (Stack_snapshot),hl
1503  8D96
1504  8D96 C9           	ret
1505  8D97
1506  8D97              ; -----------------------------------------------------------------------------------
1507  8D97
1508  8D97              Pinta_Amadeus
1509  8D97
1510  8D97 3E 06        	ld a,6
1511  8D99 D3 FE            out ($fe),a										; Amarillo
1512  8D9B
1513  8D9B CD 03 8C        	call Calcula_malotes_Amadeus
1514  8D9E CD 43 96     	call Extrae_foto_Amadeus
1515  8DA1 CD C3 8B     	call Limpia_album_Amadeus
1516  8DA4
1517  8DA4 C9           	ret
1518  8DA5
1519  8DA5              Pinta_entidades
1520  8DA5
1521  8DA5              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1522  8DA5
1523  8DA5 3A 13 89     	ld a,(Ctrl_3)
1524  8DA8 CB 47        	bit 0,a
1525  8DAA C8           	ret z
1526  8DAB
1527  8DAB CD EB 8B     	call Calcula_numero_de_malotes
1528  8DAE CD C1 95     	call Extrae_foto_entidades
1529  8DB1 CD 03 80     	call Limpia_y_reinicia_Stack_Snapshot
1530  8DB4
1531  8DB4 C9           	ret
1532  8DB5
1533  8DB5              ; -----------------------------------------------------------------------------------
1534  8DB5              ;
1535  8DB5              ;	10/12/23
1536  8DB5              ;
1537  8DB5              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1538  8DB5
1539  8DB5              Actualiza_relojes
1540  8DB5
1541  8DB5 3A 13 89     	ld a,(Ctrl_3)
1542  8DB8 CB 47        	bit 0,a
1543  8DBA C8           	ret z 						;	Salimos si no hemos pintado unidades.
1544  8DBB
1545  8DBB 21 25 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1546  8DBE 34           	inc (hl)
1547  8DBF
1548  8DBF 34           	inc (hl)
1549  8DC0 35           	dec (hl)
1550  8DC1 C0           	ret nz
1551  8DC2
1552  8DC2 21 26 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1553  8DC5 34           	inc (hl)
1554  8DC6 C9           	ret
1555  8DC7
1556  8DC7              ; ---------------------------------------------------------------
1557  8DC7              ;
1558  8DC7              ;	27/9/23
1559  8DC7
1560  8DC7              Guarda_parametros_DRAW
1561  8DC7
1562  8DC7 21 B5 88     	ld hl,Filas
1563  8DCA 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1564  8DCD 01 3F 00     	ld bc,63
1565  8DD0 ED B0        	ldir
1566  8DD2 C9           	ret
1567  8DD3
1568  8DD3              Recupera_parametros_DRAW
1569  8DD3
1570  8DD3 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1571  8DD6 11 B5 88     	ld de,Filas
1572  8DD9 01 3F 00     	ld bc,63
1573  8DDC ED B0        	ldir
1574  8DDE C9           	ret
1575  8DDF
1576  8DDF              ; ---------------------------------------------------------------
1577  8DDF
1578  8DDF              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DDF              ; ******************************************************************************************************************************************************************************************
   2+ 8DDF              ;
   3+ 8DDF              ;   21/07/23
   4+ 8DDF              ;
   5+ 8DDF              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DDF              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DDF              ;
   8+ 8DDF              ;
   9+ 8DDF              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DDF              ;
  11+ 8DDF              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DDF              ;               _ hacen las entidades hacia abajo.
  13+ 8DDF              ;
  14+ 8DDF              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DDF              ;
  16+ 8DDF              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DDF              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DDF              ;
  19+ 8DDF              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DDF              ;           _ la bala.
  21+ 8DDF              ;
  22+ 8DDF              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DDF              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DDF              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DDF              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DDF              ;           _ en el momento de generarse la bala)).
  27+ 8DDF
  28+ 8DDF              Genera_disparo
  29+ 8DDF
  30+ 8DDF              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DDF              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DDF              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DDF              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DDF              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DDF              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DDF              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DDF
  38+ 8DDF              ; Exclusiones:
  39+ 8DDF
  40+ 8DDF 3A CD 88         ld a,(Vel_down)
  41+ 8DE2 47               ld b,a
  42+ 8DE3 3A 24 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8DE6 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8DE7 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8DE8 3A EE 88         ld a,(Columnas)
  46+ 8DEB 47               ld b,a
  47+ 8DEC 3A B6 88         ld a,(Columns)
  48+ 8DEF B8               cp b
  49+ 8DF0 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8DF1
  51+ 8DF1              ; ----- ----- -----
  52+ 8DF1
  53+ 8DF1 3A E1 88         ld a,(Ctrl_0)
  54+ 8DF4 CB 77            bit 6,a
  55+ 8DF6 20 06            jr nz,14F
  56+ 8DF8
  57+ 8DF8 3A BC 88         ld a,(Coordenada_y)
  58+ 8DFB FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8DFD D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8DFE
  61+ 8DFE 21 00 80     14 ld hl,Indice_disparo
  62+ 8E01 3A BD 88         ld a,(CTRL_DESPLZ)
  63+ 8E04 4F               ld c,a
  64+ 8E05 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E07              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E07              ;                                            ""        ""       "f9", B="1"
  67+ 8E07              ;                                            ""        ""       "fb", B="2"
  68+ 8E07              ;                                            ""        ""       "fb", B="3"
  69+ 8E07 A7               and a
  70+ 8E08 28 10            jr z,1F
  71+ 8E0A E6 01            and 1
  72+ 8E0C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E0D
  74+ 8E0D 79               ld a,c
  75+ 8E0E 16 F9            ld d,$f9
  76+ 8E10 23           2 inc hl
  77+ 8E11 23               inc hl
  78+ 8E12 04               inc b
  79+ 8E13 BA               cp d
  80+ 8E14 28 04            jr z,1F
  81+ 8E16 14               inc d
  82+ 8E17 14               inc d
  83+ 8E18 18 F6            jr 2B
  84+ 8E1A
  85+ 8E1A CD 37 8C     1 call Extrae_address
  86+ 8E1D E5               push hl
  87+ 8E1E FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E20 DD 21 89 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E24
  90+ 8E24              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E24              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E24
  93+ 8E24 3A E1 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E27 CB 77            bit 6,a
  95+ 8E29 20 04            jr nz,19F
  96+ 8E2B
  97+ 8E2B AF               xor a
  98+ 8E2C 32 2D 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E2F
 100+ 8E2F 3A C9 88     19 ld a,(Cuad_objeto)
 101+ 8E32 FE 02            cp 2
 102+ 8E34 38 66            jr c,3F
 103+ 8E36 28 64            jr z,3F
 104+ 8E38
 105+ 8E38              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E38
 107+ 8E38 E6 01            and 1
 108+ 8E3A 28 30            jr z,4F
 109+ 8E3C
 110+ 8E3C              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E3C              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E3C              ;
 113+ 8E3C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E3C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E3C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E3C
 117+ 8E3C 2A B7 88     	ld hl,(Posicion_actual)
 118+ 8E3F
 119+ 8E3F              ;   Amadeus o entidad ???.
 120+ 8E3F
 121+ 8E3F 3A E1 88         ld a,(Ctrl_0)
 122+ 8E42 CB 77            bit 6,a
 123+ 8E44 28 0A            jr z,8F
 124+ 8E46
 125+ 8E46              ; 	Dispara Amadeus.
 126+ 8E46
 127+ 8E46 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E48 CD B2 95         call PreviousScan
 129+ 8E4B CD B2 95         call PreviousScan
 130+ 8E4E
 131+ 8E4E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E4E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E4E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E4E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E4E
 136+ 8E4E 18 11            jr 10F
 137+ 8E50
 138+ 8E50              ; 	Dispara Entidad.
 139+ 8E50
 140+ 8E50 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E53              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E53
 143+ 8E53              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E53              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E53
 146+ 8E53 C5               push bc
 147+ 8E54 06 10            ld b,16
 148+ 8E56 CD A3 95     9 call NextScan
 149+ 8E59 10 FB            djnz 9B
 150+ 8E5B C1               pop bc
 151+ 8E5C CD C6 8E         call Ajusta_disparo_parte_izquierda
 152+ 8E5F 18 06            jr 17F
 153+ 8E61
 154+ 8E61              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8E61              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8E61              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8E61              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8E61
 159+ 8E61 CD C6 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8E64 CD 3B 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8E67              ;                                                      ; _al generar el disparo.
 162+ 8E67
 163+ 8E67              ; 	LLegados a este punto tendremos:
 164+ 8E67              ;
 165+ 8E67              ;       Puntero_objeto_disparo en IY.
 166+ 8E67              ;       Rutinas_de_impresion en IX.
 167+ 8E67              ;       Puntero_de_impresion en HL.
 168+ 8E67              ;       Impacto/Dirección en BC.
 169+ 8E67
 170+ 8E67 CD CE 8E     17 call Almacena_disparo
 171+ 8E6A 18 52            jr 6F                                             ; RET.
 172+ 8E6C
 173+ 8E6C              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8E6C              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8E6C              ;
 176+ 8E6C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8E6C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8E6C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8E6C
 180+ 8E6C 2A B7 88     4 ld hl,(Posicion_actual)
 181+ 8E6F
 182+ 8E6F              ;   Amadeus o entidad ???.
 183+ 8E6F
 184+ 8E6F 3A E1 88         ld a,(Ctrl_0)
 185+ 8E72 CB 77            bit 6,a
 186+ 8E74 28 0A            jr z,11F
 187+ 8E76
 188+ 8E76              ; 	Dispara Amadeus.
 189+ 8E76
 190+ 8E76 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8E78 CD B2 95         call PreviousScan
 192+ 8E7B CD B2 95         call PreviousScan
 193+ 8E7E
 194+ 8E7E              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E7E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E7E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E7E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E7E
 199+ 8E7E 18 11            jr 13F
 200+ 8E80
 201+ 8E80              ; 	Dispara Entidad.
 202+ 8E80
 203+ 8E80 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E83              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E83
 206+ 8E83              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E83              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E83
 209+ 8E83 C5               push bc
 210+ 8E84 06 10            ld b,16
 211+ 8E86 CD A3 95     12 call NextScan
 212+ 8E89 10 FB            djnz 12B
 213+ 8E8B C1               pop bc
 214+ 8E8C
 215+ 8E8C CD BF 8E         call Ajusta_disparo_parte_derecha
 216+ 8E8F 18 06            jr 18F
 217+ 8E91
 218+ 8E91              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E91              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E91              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E91              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E91
 223+ 8E91 CD BF 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E94 CD 3B 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E97              ;                                                       ; _al generar el disparo.
 226+ 8E97
 227+ 8E97              ; LLegados a este punto tendremos:
 228+ 8E97              ;
 229+ 8E97              ;       Puntero_objeto_disparo en IY.
 230+ 8E97              ;       Rutinas_de_impresion en IX.
 231+ 8E97              ;       Puntero_de_impresion en HL.
 232+ 8E97              ;       Impacto/Dirección en BC.
 233+ 8E97
 234+ 8E97 CD CE 8E     18 call Almacena_disparo
 235+ 8E9A 18 22            jr 6F                                               ; RET.
 236+ 8E9C
 237+ 8E9C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E9C
 239+ 8E9C 28 11        3 jr z,5F
 240+ 8E9E
 241+ 8E9E              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E9E              ;
 243+ 8E9E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E9E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E9E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E9E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E9E
 248+ 8E9E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E9E              ;	   ""        ""       "f9", B="1"
 250+ 8E9E              ;	   ""        ""       "fb", B="2"
 251+ 8E9E              ; 	   ""        ""       "fb", B="3"
 252+ 8E9E
 253+ 8E9E 2A B7 88     	ld hl,(Posicion_actual)
 254+ 8EA1 CD A3 95     	call NextScan
 255+ 8EA4
 256+ 8EA4              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8EA4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8EA4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8EA4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8EA4
 261+ 8EA4 CD C6 8E         call Ajusta_disparo_parte_izquierda
 262+ 8EA7
 263+ 8EA7              ; 	No se produce impacto. B="$80"
 264+ 8EA7              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8EA7
 266+ 8EA7 01 80 80         ld bc,$8080
 267+ 8EAA
 268+ 8EAA              ; 	LLegados a este punto tendremos:
 269+ 8EAA              ;
 270+ 8EAA              ;       Puntero_objeto_disparo en IY.
 271+ 8EAA              ;       Rutinas_de_impresion en IX.
 272+ 8EAA              ;       Puntero_de_impresion en HL.
 273+ 8EAA              ;       Impacto/Dirección en BC.
 274+ 8EAA
 275+ 8EAA CD CE 8E         call Almacena_disparo
 276+ 8EAD 18 0F            jr 6F                                           ; RET.
 277+ 8EAF
 278+ 8EAF              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8EAF              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8EAF              ;
 281+ 8EAF              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8EAF              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8EAF              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8EAF              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8EAF
 286+ 8EAF 2A B7 88     5 ld hl,(Posicion_actual)
 287+ 8EB2 CD A3 95     	call NextScan
 288+ 8EB5
 289+ 8EB5              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8EB5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8EB5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8EB5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8EB5
 294+ 8EB5 CD BF 8E         call Ajusta_disparo_parte_derecha
 295+ 8EB8
 296+ 8EB8              ; 	No se produce impacto. B="$80"
 297+ 8EB8              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8EB8
 299+ 8EB8 01 80 80     15 ld bc,$8080
 300+ 8EBB
 301+ 8EBB              ; 	LLegados a este punto tendremos:
 302+ 8EBB              ;
 303+ 8EBB              ;       Puntero_objeto_disparo en IY.
 304+ 8EBB              ;       Rutinas_de_impresion en IX.
 305+ 8EBB              ;       Puntero_de_impresion en HL.
 306+ 8EBB              ;       Impacto/Dirección en BC.
 307+ 8EBB
 308+ 8EBB CD CE 8E         call Almacena_disparo
 309+ 8EBE
 310+ 8EBE C9           6 ret
 311+ 8EBF
 312+ 8EBF              ; ----------------------------------------------------------------
 313+ 8EBF              ;
 314+ 8EBF              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8EBF              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8EBF              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8EBF
 318+ 8EBF 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8EC0 FE 02            cp 2
 320+ 8EC2 38 01            jr c,1F
 321+ 8EC4 23               inc hl
 322+ 8EC5 C9           1 ret
 323+ 8EC6
 324+ 8EC6 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8EC7 FE 01        	cp 1
 326+ 8EC9 20 01        	jr nz,1F
 327+ 8ECB 2B           	dec hl
 328+ 8ECC 2B           1 dec hl
 329+ 8ECD C9               ret
 330+ 8ECE
 331+ 8ECE              ; ----------------------------------------------------------------
 332+ 8ECE              ;
 333+ 8ECE              ;   25/02/23
 334+ 8ECE              ;
 335+ 8ECE              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8ECE              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8ECE              ;
 338+ 8ECE              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8ECE              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8ECE
 341+ 8ECE              Almacena_disparo
 342+ 8ECE
 343+ 8ECE E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8ECF F1               pop af
 345+ 8ED0 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8ED1
 347+ 8ED1 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8ED2 E6 01            and 1
 349+ 8ED4 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8ED6              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8ED6              ; 	Dispara AMADEUS.
 352+ 8ED6
 353+ 8ED6              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8ED6              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8ED6              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8ED6              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8ED6
 358+ 8ED6 C5               push bc
 359+ 8ED7 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8EDA 2A 17 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8EDD A7               and a
 362+ 8EDE ED 42            sbc hl,bc
 363+ 8EE0 CC BC 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8EE3 C1               pop bc
 365+ 8EE4 28 54            jr z,4F
 366+ 8EE6
 367+ 8EE6 2A 17 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8EE9 23               inc hl
 369+ 8EEA 23               inc hl
 370+ 8EEB 22 17 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8EEE              ;                                                   ; _ Disparo_(+1).
 372+ 8EEE 18 18            jr 2F
 373+ 8EF0
 374+ 8EF0              ; Dispara una entidad.
 375+ 8EF0
 376+ 8EF0 C5           1 push bc
 377+ 8EF1 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8EF4 2A 15 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8EF7 A7               and a
 380+ 8EF8 ED 42            sbc hl,bc
 381+ 8EFA CC B5 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8EFD C1               pop bc
 383+ 8EFE 28 3A            jr z,4F
 384+ 8F00
 385+ 8F00 2A 15 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F03 23               inc hl
 387+ 8F04 23               inc hl
 388+ 8F05 22 15 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F08              ;                                                   ; _ Disparo_(+1).
 390+ 8F08 CD 37 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F0B              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F0B              ;
 393+ 8F0B              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F0B              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F0B              ;                                                     Puntero_de_impresion en HL.
 396+ 8F0B              ;                                                     Impacto/Dirección en BC.
 397+ 8F0B
 398+ 8F0B 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F0C 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F0D 23               inc hl                                          ; _ al siguiente.
 401+ 8F0E A7               and a
 402+ 8F0F 20 C0            jr nz,3B
 403+ 8F11
 404+ 8F11 08               ex af,af
 405+ 8F12 ED 73 05 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F16 F9               ld sp,hl
 407+ 8F17
 408+ 8F17 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F19 F5               push af                                         ; Puntero de impresión.
 410+ 8F1A FD E5            push iy                                         ; Puntero objeto.
 411+ 8F1C C5               push bc                                         ; Control.
 412+ 8F1D
 413+ 8F1D ED 7B 05 89      ld sp,(Stack)
 414+ 8F21
 415+ 8F21              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F21
 417+ 8F21 21 F4 88     	ld hl,Ctrl_1
 418+ 8F24 CB C6        	set 0,(hl)
 419+ 8F26
 420+ 8F26 DD E5        	push ix
 421+ 8F28 E1               pop hl
 422+ 8F29 F5               push af
 423+ 8F2A DD E1            pop ix
 424+ 8F2C
 425+ 8F2C CD A0 7F     	call Guarda_foto_registros
 426+ 8F2F
 427+ 8F2F 21 F4 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F32 CB 86        	res 0,(hl)
 429+ 8F34
 430+ 8F34              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F34              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F34
 433+ 8F34 CD BC 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F37 CD B5 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F3A
 436+ 8F3A C9           4 ret
 437+ 8F3B
 438+ 8F3B              ; ----------------------------------------------------------------
 439+ 8F3B              ;
 440+ 8F3B              ;   4/3/23
 441+ 8F3B              ;
 442+ 8F3B              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F3B              ;   _ al generarse el disparo.
 444+ 8F3B              ;
 445+ 8F3B              ;       "$80" ..... No se produce colisión.
 446+ 8F3B              ;       "$81" ..... Se produce colisión.
 447+ 8F3B              ;
 448+ 8F3B              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F3B              ;         _ que forman el disparo.
 450+ 8F3B
 451+ 8F3B
 452+ 8F3B              Comprueba_Colision
 453+ 8F3B
 454+ 8F3B              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F3B
 456+ 8F3B FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F3D E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F3E
 459+ 8F3E CD 74 8F         call Modifica_H_Velocidad_disparo
 460+ 8F41
 461+ 8F41 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F42 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F44 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F46
 465+ 8F46 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F48 CD 64 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F4B
 468+ 8F4B 7B               ld a,e
 469+ 8F4C E6 01            and 1
 470+ 8F4E 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F50              ;                                                  ; _ para activar IMPACTO.
 472+ 8F50 E1               pop hl
 473+ 8F51 E5               push hl
 474+ 8F52 CD A3 95         call NextScan
 475+ 8F55
 476+ 8F55 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F56 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F58 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F5A              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F5A 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8F5C CD 64 8F         call Bucle_2
 482+ 8F5F
 483+ 8F5F 43           1 ld b,e
 484+ 8F60 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8F61 FD E1            pop iy
 486+ 8F63 C9               ret
 487+ 8F64
 488+ 8F64              ; ---------- ----------
 489+ 8F64
 490+ 8F64 06 02        Bucle_2 ld b,2
 491+ 8F66 FD 7E 00     2 ld a,(iy)
 492+ 8F69 A6               and (hl)
 493+ 8F6A 28 02            jr z,1F
 494+ 8F6C 1E 81            ld e,$81
 495+ 8F6E 23           1 inc hl
 496+ 8F6F FD 23            inc iy
 497+ 8F71 10 F3            djnz 2B
 498+ 8F73 C9               ret
 499+ 8F74
 500+ 8F74              ; ---------- ----------
 501+ 8F74              ;
 502+ 8F74              ;   21/7/23
 503+ 8F74
 504+ 8F74              Modifica_H_Velocidad_disparo
 505+ 8F74
 506+ 8F74 3A 24 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8F77 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8F79 D0               ret nc                                         ; _ incrementamos H.
 509+ 8F7A 24               inc h
 510+ 8F7B
 511+ 8F7B C9               ret
 512+ 8F7C
 513+ 8F7C              ; -------------------------------------------------------------------------------------------------------------
 514+ 8F7C              ;
 515+ 8F7C              ;   04/12/23
 516+ 8F7C              ;
 517+ 8F7C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8F7C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8F7C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8F7C              ;
 521+ 8F7C              ;   MODIFICA: HL,DE,B y A.
 522+ 8F7C
 523+ 8F7C              Genera_coordenadas_X
 524+ 8F7C
 525+ 8F7C              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8F7C              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8F7C
 528+ 8F7C              ;   Limpiamos almacenes.
 529+ 8F7C
 530+ 8F7C CD AD 8F         call Limpia_Coordenadas_X
 531+ 8F7F
 532+ 8F7F              ;   Almacenamos coordenadas X.
 533+ 8F7F
 534+ 8F7F              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8F7F
 536+ 8F7F 2A DF 88         ld hl,(Puntero_de_impresion)
 537+ 8F82 11 21 89         ld de,Coordenadas_X_Entidad
 538+ 8F85 06 02            ld b,2
 539+ 8F87
 540+ 8F87 3A BD 88         ld a,(CTRL_DESPLZ)
 541+ 8F8A A7               and a
 542+ 8F8B 28 01            jr z,1F
 543+ 8F8D 04               inc b
 544+ 8F8E
 545+ 8F8E CD A4 8F     1 call Guarda_coordenadas_X
 546+ 8F91
 547+ 8F91              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8F91
 549+ 8F91 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 8F94 11 1E 89         ld de,Coordenadas_X_Amadeus
 551+ 8F97 06 02            ld b,2
 552+ 8F99
 553+ 8F99 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 8F9C A7               and a
 555+ 8F9D 28 01            jr z,2F
 556+ 8F9F 04               inc b
 557+ 8FA0
 558+ 8FA0 CD A4 8F     2 call Guarda_coordenadas_X
 559+ 8FA3
 560+ 8FA3              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8FA3
 562+ 8FA3 C9               ret
 563+ 8FA4
 564+ 8FA4              ; ----- ----- ----- ----- -----
 565+ 8FA4
 566+ 8FA4 7D           Guarda_coordenadas_X  ld a,l
 567+ 8FA5 E6 1F            and $1f
 568+ 8FA7 12           1 ld (de),a
 569+ 8FA8 3C               inc a
 570+ 8FA9 13               inc de
 571+ 8FAA 10 FB            djnz 1B
 572+ 8FAC C9               ret
 573+ 8FAD
 574+ 8FAD AF           Limpia_Coordenadas_X xor a
 575+ 8FAE 06 06            ld b,6
 576+ 8FB0 21 1E 89         ld hl,Coordenadas_X_Amadeus
 577+ 8FB3 77           1 ld (hl),a
 578+ 8FB4 23               inc hl
 579+ 8FB5 10 FC            djnz 1B
 580+ 8FB7 C9               ret
 581+ 8FB8
 582+ 8FB8              ; ----- ----- ----- ----- -----
 583+ 8FB8
 584+ 8FB8              Compara_coordenadas_X
 585+ 8FB8
 586+ 8FB8 06 03            ld b,3
 587+ 8FBA 11 23 89         ld de,Coordenadas_X_Entidad+2
 588+ 8FBD
 589+ 8FBD 1A               ld a,(de)
 590+ 8FBE A7               and a
 591+ 8FBF 20 01            jr nz,2F
 592+ 8FC1 05               dec b
 593+ 8FC2
 594+ 8FC2 1B           2 dec de
 595+ 8FC3 1B               dec de
 596+ 8FC4 21 1E 89         ld hl,Coordenadas_X_Amadeus
 597+ 8FC7
 598+ 8FC7 D5           1 push de
 599+ 8FC8 E5               push hl
 600+ 8FC9 C5               push bc
 601+ 8FCA
 602+ 8FCA CD D4 8F         call Comparando
 603+ 8FCD
 604+ 8FCD C1               pop bc
 605+ 8FCE E1               pop hl
 606+ 8FCF D1               pop de
 607+ 8FD0
 608+ 8FD0 13               inc de
 609+ 8FD1 10 F4            djnz 1B
 610+ 8FD3
 611+ 8FD3 C9               ret
 612+ 8FD4
 613+ 8FD4              ; ----- ----- ----- ----- -----
 614+ 8FD4              ;
 615+ 8FD4              ;   4/12/23
 616+ 8FD4              ;
 617+ 8FD4              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8FD4
 619+ 8FD4 06 03        Comparando ld b,3
 620+ 8FD6 1A               ld a,(de)
 621+ 8FD7 4E           2 ld c,(hl)
 622+ 8FD8 B9               cp c
 623+ 8FD9 28 04            jr z,1F
 624+ 8FDB 23               inc hl
 625+ 8FDC 10 F9            djnz 2B
 626+ 8FDE C9               ret
 627+ 8FDF
 628+ 8FDF 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8FE1 32 CE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8FE4 21 19 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8FE7 CB D6            set 2,(hl)
 632+ 8FE9 C9               ret
 633+ 8FEA
 634+ 8FEA              ; -----------------------------------------------------------------------
 635+ 8FEA              ;
 636+ 8FEA              ;   7/12/23
 637+ 8FEA              ;
 638+ 8FEA
 639+ 8FEA              Detecta_colision_nave_entidad
 640+ 8FEA
 641+ 8FEA              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8FEA
 643+ 8FEA FD 2A B9 88      ld iy,(Puntero_objeto)
 644+ 8FEE 2A DF 88         ld hl,(Puntero_de_impresion)
 645+ 8FF1
 646+ 8FF1 E5               push hl
 647+ 8FF2
 648+ 8FF2              ; ----- ----- -----
 649+ 8FF2 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8FF4 06 0A            ld b,10
 651+ 8FF6 CD 26 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8FF9 7B               ld a,e
 653+ 8FFA FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8FFC 38 0E            jr c,3F
 655+ 8FFE
 656+ 8FFE              ; LLegados a este punto:
 657+ 8FFE              ;
 658+ 8FFE              ;   HAY COLISIÓN !!!!!.
 659+ 8FFE              ;
 660+ 8FFE              ;   .db (Impacto) de Amadeus a "1".
 661+ 8FFE              ;   SET el bit3 de (Impacto2).
 662+ 8FFE              ;
 663+ 8FFE              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8FFE
 665+ 8FFE 21 CE 88         ld hl,Impacto
 666+ 9001 36 01            ld (hl),1
 667+ 9003 21 19 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9006 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9008 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 900A
 671+ 900A 18 18            jr 1F
 672+ 900C
 673+ 900C              ; -----
 674+ 900C
 675+ 900C E1           3 pop hl
 676+ 900D CD A3 95         call NextScan
 677+ 9010 E5               push hl
 678+ 9011 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9012 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9014 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9016 30 0C            jr nc,1F
 682+ 9018              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9018 10 DC            djnz 2B
 684+ 901A
 685+ 901A              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 901A
 687+ 901A              ; LLegados a este punto:
 688+ 901A              ;
 689+ 901A              ;   NO HAY COLISIÓN !!!!!.
 690+ 901A              ;
 691+ 901A              ;   .db (Impacto) de Amadeus a "0".
 692+ 901A              ;   RES el bit2 de (Impacto2).
 693+ 901A              ;
 694+ 901A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 901A              ;   Lo colocamos a "0".
 696+ 901A
 697+ 901A 21 19 89         ld hl,Impacto2
 698+ 901D CB 96            res 2,(hl)
 699+ 901F 2A 1A 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9022 36 00            ld (hl),0
 701+ 9024
 702+ 9024 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9025 C9               ret
 704+ 9026
 705+ 9026               ; ---------- ----------
 706+ 9026
 707+ 9026 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9027 3A B6 88         ld a,(Columns)
 709+ 902A 47               ld b,a
 710+ 902B FD 7E 00     2 ld a,(iy)
 711+ 902E BE               cp (hl)
 712+ 902F 28 01            jr z,1F
 713+ 9031
 714+ 9031 1C               inc e
 715+ 9032
 716+ 9032 23           1 inc hl
 717+ 9033 FD 23            inc iy
 718+ 9035 10 F4            djnz 2B
 719+ 9037 C1               pop bc
 720+ 9038 C9               ret
 721+ 9039
 722+ 9039              ; -------------------------------------------------------------------------------------------------------------
 723+ 9039              ;
 724+ 9039              ;   13/03/23
 725+ 9039              ;
 726+ 9039              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9039              ;
 728+ 9039              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9039
 730+ 9039 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 903C 7E               ld a,(hl)
 732+ 903D A7               and a
 733+ 903E C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 903F
 735+ 903F 44               ld b,h
 736+ 9040 4D               ld c,l
 737+ 9041 2A 0D 89         ld hl,(Stack_snapshot_disparos)
 738+ 9044 E5               push hl
 739+ 9045 A7               and a
 740+ 9046 ED 42            sbc hl,bc
 741+ 9048 E5               push hl
 742+ 9049 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 904A
 744+ 904A E1               pop hl
 745+ 904B 54               ld d,h
 746+ 904C 5D               ld e,l
 747+ 904D 1B               dec de
 748+ 904E ED B8            lddr                                                ; Limpiamos.
 749+ 9050
 750+ 9050 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9053 22 0D 89         ld (Stack_snapshot_disparos),hl
 752+ 9056
 753+ 9056 C9               ret
 754+ 9057
 755+ 9057              ; -------------------------------------------------------------------------------------------------------------
 756+ 9057              ;
 757+ 9057              ;   18/07/23
 758+ 9057              ;
 759+ 9057
 760+ 9057              Motor_de_disparos
 761+ 9057
 762+ 9057              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9057
 764+ 9057 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 905A 2A 17 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 905D
 767+ 905D CD 37 8C     2 call Extrae_address
 768+ 9060 7E               ld a,(hl)
 769+ 9061 A7               and a
 770+ 9062 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9064
 772+ 9064              ; ----- ----- ----- ----- ----- -----
 773+ 9064
 774+ 9064 C5               push bc
 775+ 9065 CD 29 91         call foto_disparo_a_borrar
 776+ 9068
 777+ 9068              ; Existe colisión con este disparo???
 778+ 9068
 779+ 9068 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9069 7E               ld a,(hl)
 781+ 906A 2B               dec hl
 782+ 906B E6 01            and 1
 783+ 906D 28 1D            jr z,9F
 784+ 906F
 785+ 906F              ;   En este punto:
 786+ 906F              ;
 787+ 906F              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 906F              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 906F              ;   _con la entidad).
 790+ 906F              ;
 791+ 906F              ;   Disparo_2A defw 0                                ; Control.
 792+ 906F              ;    defw 0                                          ; Puntero objeto.
 793+ 906F              ;    defw 0                                          ; Puntero de impresión.
 794+ 906F              ;    defw 0                                          ; Rutina de impresión.
 795+ 906F
 796+ 906F E5               push hl
 797+ 9070
 798+ 9070 06 04            ld b,4
 799+ 9072 23           19 inc hl
 800+ 9073 10 FD            djnz 19B
 801+ 9075
 802+ 9075 CD 37 8C         call Extrae_address
 803+ 9078 CD 6C 9C         call Genera_coordenadas_disparo
 804+ 907B
 805+ 907B              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 907B
 807+ 907B 21 1C 89         ld hl,Coordenadas_disparo_certero
 808+ 907E 72               ld (hl),d
 809+ 907F 23               inc hl
 810+ 9080 73               ld (hl),e
 811+ 9081
 812+ 9081              ; Elimino el disparo de la base de datos.
 813+ 9081
 814+ 9081 E1               pop hl
 815+ 9082 CD A8 91         call Elimina_disparo_de_base_de_datos
 816+ 9085 21 19 89         ld hl,Impacto2
 817+ 9088 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 908A
 819+ 908A 18 06            jr 11F
 820+ 908C
 821+ 908C CD 52 91     9 call Mueve_disparo
 822+ 908F CD 29 91         call foto_disparo_a_borrar
 823+ 9092
 824+ 9092 C1           11 pop bc
 825+ 9093 18 04            jr 7F
 826+ 9095
 827+ 9095              ; ----- ----- ----- ----- ----- -----
 828+ 9095
 829+ 9095 ED 42        1 sbc hl,bc
 830+ 9097 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9099
 832+ 9099 2A 17 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 909C 23               inc hl
 834+ 909D 23               inc hl
 835+ 909E 22 17 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 90A1 18 BA            jr 2B
 837+ 90A3
 838+ 90A3 CD BC 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 90A6              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 90A6
 841+ 90A6              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 90A6
 843+ 90A6 01 6A 85         ld bc,Disparo_11
 844+ 90A9 2A 15 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 90AC
 846+ 90AC CD 37 8C     5 call Extrae_address
 847+ 90AF 7E               ld a,(hl)
 848+ 90B0 A7               and a
 849+ 90B1 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 90B3
 851+ 90B3              ; ----- ----- ----- ----- ----- -----
 852+ 90B3
 853+ 90B3 C5               push bc
 854+ 90B4 CD 29 91         call foto_disparo_a_borrar
 855+ 90B7
 856+ 90B7              ; Existe colisión con este disparo???
 857+ 90B7
 858+ 90B7 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 90B8 7E               ld a,(hl)
 860+ 90B9 2B               dec hl
 861+ 90BA E6 01            and 1
 862+ 90BC 28 4D            jr z,10F
 863+ 90BE
 864+ 90BE              ;! La colisión se produce con Amadeus???
 865+ 90BE              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 90BE
 867+ 90BE E5               push hl
 868+ 90BF
 869+ 90BF 06 04            ld b,4
 870+ 90C1 23           16 inc hl
 871+ 90C2 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 90C4
 873+ 90C4 CD 37 8C         call Extrae_address
 874+ 90C7 CD 6C 9C         call Genera_coordenadas_disparo
 875+ 90CA
 876+ 90CA 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 90CB FE 16            cp $16
 878+ 90CD 38 2A            jr c,15F
 879+ 90CF
 880+ 90CF
 881+ 90CF              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 90CF
 883+ 90CF D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 90D0
 885+ 90D0              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 90D0
 887+ 90D0 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 90D3
 889+ 90D3              ; Coordenada X de Amadeus en D.
 890+ 90D3
 891+ 90D3 7D               ld a,l
 892+ 90D4 E6 1F            and $1F
 893+ 90D6 57               ld d,a
 894+ 90D7
 895+ 90D7 21 86 85         ld hl,Amadeus_db+8
 896+ 90DA 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 90DB
 898+ 90DB 21 1E 89         ld hl,Coordenadas_X_Amadeus
 899+ 90DE CD A4 8F         call Guarda_coordenadas_X
 900+ 90E1
 901+ 90E1 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 90E2
 903+ 90E2              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 90E2
 905+ 90E2 06 02            ld b,2
 906+ 90E4 C5           20 push bc
 907+ 90E5
 908+ 90E5 06 03            ld b,3
 909+ 90E7 21 1E 89         ld hl,Coordenadas_X_Amadeus
 910+ 90EA 7E           18 ld a,(hl)
 911+ 90EB BA               cp d
 912+ 90EC 20 04            jr nz,17F
 913+ 90EE
 914+ 90EE              ;! Colisión Amadeus !!!!!!!!!!
 915+ 90EE
 916+ 90EE C1               pop bc
 917+ 90EF E1               pop hl
 918+ 90F0 18 0D            jr 14F
 919+ 90F2
 920+ 90F2 23           17 inc hl
 921+ 90F3 10 F5            djnz 18B
 922+ 90F5
 923+ 90F5 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 90F6
 925+ 90F6 C1               pop bc
 926+ 90F7 10 EB            djnz 20B
 927+ 90F9
 928+ 90F9
 929+ 90F9              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 90F9              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 90F9
 932+ 90F9 E1           15 pop hl
 933+ 90FA 23               inc hl
 934+ 90FB 35               dec (hl)
 935+ 90FC 2B               dec hl
 936+ 90FD 18 0C            jr 10F
 937+ 90FF
 938+ 90FF              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 90FF              ; _ almacén de coordenadas_X de Amadeus.
 940+ 90FF
 941+ 90FF E5           14 push hl
 942+ 9100 CD A8 91         call Elimina_disparo_de_base_de_datos
 943+ 9103 21 19 89         ld hl,Impacto2
 944+ 9106 CB CE            set 1,(hl)
 945+ 9108 E1               pop hl
 946+ 9109 18 06            jr 12F
 947+ 910B
 948+ 910B              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 910B
 950+ 910B CD 52 91     10 call Mueve_disparo
 951+ 910E CD 29 91         call foto_disparo_a_borrar
 952+ 9111 C1           12 pop bc
 953+ 9112
 954+ 9112 18 04            jr 8F
 955+ 9114
 956+ 9114              ; ----- ----- ----- ----- ----- -----
 957+ 9114
 958+ 9114 ED 42        4 sbc hl,bc
 959+ 9116 28 0A            jr z,6F
 960+ 9118
 961+ 9118 2A 15 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 911B 23               inc hl
 963+ 911C 23               inc hl
 964+ 911D 22 15 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9120 18 8A            jr 5B
 966+ 9122
 967+ 9122 CD B5 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9125 CD AD 8F         call Limpia_Coordenadas_X
 969+ 9128 C9               ret
 970+ 9129
 971+ 9129              ; ------------------------------------------------------------------
 972+ 9129
 973+ 9129              foto_disparo_a_borrar
 974+ 9129
 975+ 9129 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 912A A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 912B C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 912C
 979+ 912C E5               push hl
 980+ 912D 23               inc hl
 981+ 912E 23               inc hl
 982+ 912F ED 73 05 89      ld (Stack),sp
 983+ 9133 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9134 FD E1            pop iy
 985+ 9136 DD E1            pop ix
 986+ 9138 E1               pop hl
 987+ 9139 ED 7B 05 89      ld sp,(Stack)
 988+ 913D 3A F4 88         ld a,(Ctrl_1)
 989+ 9140 CB C7            set 0,a
 990+ 9142 32 F4 88         ld (Ctrl_1),a
 991+ 9145 CD A0 7F         call Guarda_foto_registros
 992+ 9148 3A F4 88         ld a,(Ctrl_1)
 993+ 914B CB 87            res 0,a
 994+ 914D 32 F4 88         ld (Ctrl_1),a
 995+ 9150 E1               pop hl
 996+ 9151 C9               ret
 997+ 9152
 998+ 9152              ;---------------------------------------------------
 999+ 9152              ;
1000+ 9152              ;   18/07/23
1001+ 9152              ;
1002+ 9152
1003+ 9152              Mueve_disparo
1004+ 9152
1005+ 9152              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9152              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9152              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9152
1009+ 9152 E5               push hl
1010+ 9153
1011+ 9153 7E               ld a,(hl)
1012+ 9154
1013+ 9154 06 04            ld b,4
1014+ 9156 23           1 inc hl
1015+ 9157 10 FD            djnz 1B
1016+ 9159
1017+ 9159              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9159
1019+ 9159 CD 37 8C         call Extrae_address
1020+ 915C
1021+ 915C E6 01            and 1
1022+ 915E 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9160
1024+ 9160              ; Disparo hacia arriba, (Amadeus).
1025+ 9160
1026+ 9160              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9160              ; _ de la dificultad.
1028+ 9160
1029+ 9160 CD B2 95         call PreviousScan
1030+ 9163 CD B2 95         call PreviousScan
1031+ 9166 CD B2 95         call PreviousScan
1032+ 9169 CD B2 95         call PreviousScan
1033+ 916C
1034+ 916C              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 916C
1036+ 916C 7C               ld a,h
1037+ 916D FE 40            cp $40
1038+ 916F 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9171
1040+ 9171              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9171
1042+ 9171 EB               ex de,hl
1043+ 9172 06 04            ld b,4
1044+ 9174 2B           6 dec hl
1045+ 9175 10 FD            djnz 6B
1046+ 9177
1047+ 9177 CD A8 91         call Elimina_disparo_de_base_de_datos
1048+ 917A E1               pop hl
1049+ 917B 18 10            jr 7F
1050+ 917D
1051+ 917D              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 917D              ; HL contiene el puntero de impresión del disparo.
1053+ 917D              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 917D
1055+ 917D D5           3 push de
1056+ 917E C5               push bc
1057+ 917F
1058+ 917F CD 3B 8F         call Comprueba_Colision
1059+ 9182
1060+ 9182              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9182
1062+ 9182 78               ld a,b
1063+ 9183
1064+ 9183 C1               pop bc
1065+ 9184 D1               pop de
1066+ 9185
1067+ 9185 EB               ex de,hl
1068+ 9186
1069+ 9186 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9187 23               inc hl                                      ; _ movimiento.
1071+ 9188 72               ld (hl),d
1072+ 9189
1073+ 9189 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 918A
1075+ 918A 23               inc hl                                      ; _ en curso.
1076+ 918B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 918C 2B               dec hl
1078+ 918D
1079+ 918D C9           7 ret
1080+ 918E
1081+ 918E              ; Disparo hacia abajo, (Entidad).
1082+ 918E
1083+ 918E 3A 24 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9191 47               ld b,a
1085+ 9192
1086+ 9192 CD A3 95     4 call NextScan
1087+ 9195 10 FB            djnz 4B
1088+ 9197
1089+ 9197              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9197
1091+ 9197 7C               ld a,h
1092+ 9198 FE 58            cp $58
1093+ 919A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 919C
1095+ 919C EB               ex de,hl
1096+ 919D 06 04            ld b,4
1097+ 919F 2B           5 dec hl
1098+ 91A0 10 FD            djnz 5B
1099+ 91A2
1100+ 91A2 CD A8 91         call Elimina_disparo_de_base_de_datos
1101+ 91A5 E1               pop hl
1102+ 91A6 18 E5            jr 7B
1103+ 91A8
1104+ 91A8              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 91A8
1106+ 91A8 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 91AB AF               xor a
1108+ 91AC 77               ld (hl),a
1109+ 91AD 54               ld d,h
1110+ 91AE 5D               ld e,l
1111+ 91AF 13               inc de
1112+ 91B0 ED B0            ldir
1113+ 91B2 C9               ret
1114+ 91B3
1115+ 91B3              ; -----------------------------------------------------------------
1116+ 91B3              ;
1117+ 91B3              ;   7/12/23
1118+ 91B3              ;
1119+ 91B3
1120+ 91B3 3A 19 89     Selector_de_impactos ld a,(Impacto2)
1121+ 91B6 A7               and a
1122+ 91B7 C8               ret z
1123+ 91B8
1124+ 91B8              ; Analizamos si hay impacto por disparos.
1125+ 91B8
1126+ 91B8              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 91B8
1128+ 91B8 CB 4F            bit 1,a
1129+ 91BA 28 07            jr z,1F
1130+ 91BC
1131+ 91BC 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 91BF 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 91C1 18 08            jr 2F
1134+ 91C3
1135+ 91C3 CB 47        1 bit 0,a
1136+ 91C5 C8               ret z
1137+ 91C6
1138+ 91C6              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 91C6
1140+ 91C6 21 F4 88         ld hl,Ctrl_1
1141+ 91C9 CB D6            set 2,(hl)
1142+ 91CB
1143+ 91CB C9           2 ret
1144+ 91CC
1145+ 91CC              ; -----------------------------------------------------------------
1146+ 91CC              ;
1147+ 91CC              ;   25/04/23
1148+ 91CC              ;
1149+ 91CC
1150+ 91CC              Determina_resultado_comparativa
1151+ 91CC
1152+ 91CC              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 91CC              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 91CC              ;
1155+ 91CC              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 91CC              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 91CC              ;
1158+ 91CC              ;   SBC HL,DE
1159+ 91CC
1160+ 91CC              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 91CC              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 91CC
1163+ 91CC              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 91CC              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 91CC
1166+ 91CC
1167+ 91CC 3A C9 88         ld a,(Cuad_objeto)
1168+ 91CF FE 02            cp 2
1169+ 91D1 28 26            jr z,2F
1170+ 91D3 38 24            jr c,2F
1171+ 91D5
1172+ 91D5              ; Cuadrantes 3º y 4º
1173+ 91D5
1174+ 91D5 E6 01            and 1
1175+ 91D7 28 10            jr z,4F
1176+ 91D9
1177+ 91D9              ; Cuadrante 3º
1178+ 91D9
1179+ 91D9 7C               ld a,h
1180+ 91DA 06 00            ld b,0
1181+ 91DC
1182+ 91DC CD 67 92         call Compara_cositas_H3
1183+ 91DF
1184+ 91DF 04               inc b
1185+ 91E0 05               dec b
1186+ 91E1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 91E2
1188+ 91E2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 91E3 06 00            ld b,0
1190+ 91E5
1191+ 91E5 CD 79 92         call Compara_cositas_L3
1192+ 91E8 C9               ret
1193+ 91E9
1194+ 91E9              ; Cuadrante 4º
1195+ 91E9
1196+ 91E9 7C           4 ld a,h
1197+ 91EA 06 00            ld b,0
1198+ 91EC
1199+ 91EC CD 8B 92         call Compara_cositas_H4
1200+ 91EF
1201+ 91EF 04               inc b
1202+ 91F0 05               dec b
1203+ 91F1 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 91F2
1205+ 91F2 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 91F3 06 00            ld b,0
1207+ 91F5
1208+ 91F5 CD A1 92         call Compara_cositas_L4
1209+ 91F8 C9               ret
1210+ 91F9
1211+ 91F9              ; Cuadrantes 1º y 2º.
1212+ 91F9
1213+ 91F9 28 10        2 jr z,3F
1214+ 91FB
1215+ 91FB              ; 1er Cuadrante
1216+ 91FB
1217+ 91FB 7C               ld a,h
1218+ 91FC 06 00            ld b,0
1219+ 91FE
1220+ 91FE CD 3F 92         call Compara_cositas_H1
1221+ 9201
1222+ 9201 04               inc b
1223+ 9202 05               dec b
1224+ 9203 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9204
1226+ 9204 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9205 06 00            ld b,0
1228+ 9207
1229+ 9207 CD 55 92         call Compara_cositas_L1
1230+ 920A C9               ret
1231+ 920B
1232+ 920B
1233+ 920B              ; 2º Cuadrante
1234+ 920B
1235+ 920B 7C           3 ld a,h
1236+ 920C 06 00            ld b,0
1237+ 920E
1238+ 920E CD 1B 92         call Compara_cositas_H2
1239+ 9211
1240+ 9211 04               inc b
1241+ 9212 05               dec b
1242+ 9213 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9214
1244+ 9214 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9215 06 00            ld b,0
1246+ 9217
1247+ 9217 CD 2D 92         call Compara_cositas_L2
1248+ 921A C9               ret
1249+ 921B
1250+ 921B A7           Compara_cositas_H2 and a
1251+ 921C 28 0D            jr z,1F
1252+ 921E              ;    cp $fd
1253+ 921E              ;    jr z,1F
1254+ 921E              ;    cp $fe
1255+ 921E              ;    jr z,1F
1256+ 921E FE FF            cp $ff
1257+ 9220 28 09            jr z,1F
1258+ 9222 FE 01            cp $01
1259+ 9224 28 05            jr z,1F
1260+ 9226 FE 02            cp $02
1261+ 9228 28 01            jr z,1F
1262+ 922A C0               ret nz
1263+ 922B 04           1 inc b
1264+ 922C C9               ret
1265+ 922D
1266+ 922D A7           Compara_cositas_L2 and a
1267+ 922E 28 0D            jr z,1F
1268+ 9230              ;    cp $fd
1269+ 9230              ;    jr z,1F
1270+ 9230 FE FE            cp $fe
1271+ 9232 28 09            jr z,1F
1272+ 9234 FE FF            cp $ff
1273+ 9236 28 05            jr z,1F
1274+ 9238 FE 01            cp $01
1275+ 923A 28 01            jr z,1F
1276+ 923C              ;    cp $02
1277+ 923C              ;    jr z,1F
1278+ 923C C0               ret nz
1279+ 923D 04           1 inc b
1280+ 923E C9               ret
1281+ 923F
1282+ 923F A7           Compara_cositas_H1 and a
1283+ 9240 28 11            jr z,1F
1284+ 9242              ;    cp $fd
1285+ 9242              ;    jr z,1F
1286+ 9242              ;    cp $fe
1287+ 9242              ;    jr z,1F
1288+ 9242 FE FF            cp $ff
1289+ 9244 28 0D            jr z,1F
1290+ 9246 FE 01            cp $01
1291+ 9248 28 09            jr z,1F
1292+ 924A FE 02            cp $02
1293+ 924C 28 05            jr z,1F
1294+ 924E FE 03            cp $03
1295+ 9250 28 01            jr z,1F
1296+ 9252 C0               ret nz
1297+ 9253 04           1 inc b
1298+ 9254 C9               ret
1299+ 9255
1300+ 9255 A7           Compara_cositas_L1 and a
1301+ 9256 28 0D            jr z,1F
1302+ 9258              ;    cp $fd
1303+ 9258              ;    jr z,1F
1304+ 9258              ;    cp $fe
1305+ 9258              ;    jr z,1F
1306+ 9258              ;    cp $ff
1307+ 9258              ;    jr z,1F
1308+ 9258 FE 01            cp $01
1309+ 925A 28 09            jr z,1F
1310+ 925C FE 02            cp $02
1311+ 925E 28 05            jr z,1F
1312+ 9260 FE 03            cp $03
1313+ 9262 28 01            jr z,1F
1314+ 9264 C0               ret nz
1315+ 9265 04           1 inc b
1316+ 9266 C9               ret
1317+ 9267
1318+ 9267 A7           Compara_cositas_H3 and a
1319+ 9268 28 0D            jr z,1F
1320+ 926A              ;    cp $fd
1321+ 926A              ;    jr z,1F
1322+ 926A FE FE            cp $fe
1323+ 926C 28 09            jr z,1F
1324+ 926E FE FF            cp $ff
1325+ 9270 28 05            jr z,1F
1326+ 9272 FE 01            cp $01
1327+ 9274 28 01            jr z,1F
1328+ 9276              ;    cp $02
1329+ 9276              ;    jr z,1F
1330+ 9276              ;    cp $03
1331+ 9276              ;    jr z,1F
1332+ 9276 C0               ret nz
1333+ 9277 04           1 inc b
1334+ 9278 C9               ret
1335+ 9279
1336+ 9279 A7           Compara_cositas_L3 and a
1337+ 927A 28 0D            jr z,1F
1338+ 927C              ;    cp $fd
1339+ 927C              ;    jr z,1F
1340+ 927C              ;    cp $fe
1341+ 927C              ;    jr z,1F
1342+ 927C              ;    cp $ff
1343+ 927C              ;    jr z,1F
1344+ 927C FE 01            cp $01
1345+ 927E 28 09            jr z,1F
1346+ 9280 FE 02            cp $02
1347+ 9282 28 05            jr z,1F
1348+ 9284 FE 03            cp $03
1349+ 9286 28 01            jr z,1F
1350+ 9288 C0               ret nz
1351+ 9289 04           1 inc b
1352+ 928A C9               ret
1353+ 928B
1354+ 928B A7           Compara_cositas_H4 and a
1355+ 928C 28 11            jr z,1F
1356+ 928E FE FD            cp $fd
1357+ 9290 28 0D            jr z,1F
1358+ 9292 FE FE            cp $fe
1359+ 9294 28 09            jr z,1F
1360+ 9296 FE FF            cp $ff
1361+ 9298 28 05            jr z,1F
1362+ 929A FE 01            cp $01
1363+ 929C 28 01            jr z,1F
1364+ 929E              ;    cp $02
1365+ 929E              ;    jr z,1F
1366+ 929E              ;    cp $03
1367+ 929E              ;    jr z,1F
1368+ 929E C0               ret nz
1369+ 929F 04           1 inc b
1370+ 92A0 C9               ret
1371+ 92A1
1372+ 92A1 A7           Compara_cositas_L4 and a
1373+ 92A2 28 0D            jr z,1F
1374+ 92A4              ;    cp $fd
1375+ 92A4              ;    jr z,1F
1376+ 92A4 FE FE            cp $fe
1377+ 92A6 28 09            jr z,1F
1378+ 92A8 FE FF            cp $ff
1379+ 92AA 28 05            jr z,1F
1380+ 92AC FE 01            cp $01
1381+ 92AE 28 01            jr z,1F
1382+ 92B0              ;    cp $02
1383+ 92B0              ;    jr z,1F
1384+ 92B0              ;    cp $03
1385+ 92B0              ;    jr z,1F
1386+ 92B0 C0               ret nz
1387+ 92B1 04           1 inc b
1388+ 92B2 C9               ret
# file closed: Disparo.asm
1579  92B3              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 92B3              ; ******************************************************************************************************************************************************************************************
   2+ 92B3              ;
   3+ 92B3              ; 26/06/23
   4+ 92B3              ;
   5+ 92B3              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 92B3
   7+ 92B3 CD 97 95     Draw call Prepara_draw
   8+ 92B6 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 92B7 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 92B8 28 05        	jr z,2F
  11+ 92BA
  12+ 92BA 3A C9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 92BD 18 0C        	jr 1F
  14+ 92BF
  15+ 92BF 2A C7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 92C2 22 B7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 92C5 CD 54 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 92C8              ;													; _la esquina superior izquierda de la pantalla.
  19+ 92C8 CD F7 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 92CB
  21+ 92CB 3A E1 88     1 ld a,(Ctrl_0)
  22+ 92CE CB 6F        	bit 5,a
  23+ 92D0 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 92D2
  25+ 92D2 CD EA 92     	call Comprueba_limite_horizontal
  26+ 92D5 CD 7A 93     	call Comprueba_limite_vertical
  27+ 92D8
  28+ 92D8              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 92D8              ; -----------------------
  30+ 92D8              ; -----------------------
  31+ 92D8              ; -----------------------
  32+ 92D8
  33+ 92D8 CD C7 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 92DB CD FE 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 92DE CD 5D 95     	call Define_rutina_de_impresion
  36+ 92E1
  37+ 92E1 3A E1 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 92E4 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 92E6 32 E1 88     	ld (Ctrl_0),a
  40+ 92E9
  41+ 92E9 C9           	ret
  42+ 92EA
  43+ 92EA              ; *******************************************************************************************************************************************************************************************
  44+ 92EA              ;	21/01/23
  45+ 92EA              ;
  46+ 92EA              ; 	Comprueba_limite_horizontal.
  47+ 92EA              ;
  48+ 92EA              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 92EA              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 92EA              ;
  51+ 92EA              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 92EA              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 92EA              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 92EA              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 92EA
  56+ 92EA
  57+ 92EA
  58+ 92EA 3A E1 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 92ED CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 92EF 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 92F1 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 92F3 32 E1 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 92F6 18 09            jr 6F
  64+ 92F8 CB 5F        1 bit 3,a
  65+ 92FA 28 0A            jr z,2F
  66+ 92FC E6 F7            and $f7
  67+ 92FE 32 E1 88         ld (Ctrl_0),a
  68+ 9301 CD 54 94     6 call Inicializacion
  69+ 9304 18 5B            jr 5F
  70+ 9306 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9307
  72+ 9307              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9307              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9307
  75+ 9307 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9308 2A EF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 930B CD B6 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 930E 67           	ld h,a
  79+ 930F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9310 CD B6 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9313 67           	ld h,a
  82+ 9314 A7           	and a
  83+ 9315 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9317 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9318 3A C9 88     	ld a,(Cuad_objeto)
  86+ 931B FE 02        	cp 2
  87+ 931D 38 1E        	jr c,3F
  88+ 931F 28 1C        	jr z,3F
  89+ 9321 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9322 28 23            jr z,7F
  91+ 9324 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9326 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9328 E1           	pop hl
  94+ 9329
  95+ 9329              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9329              ; _para indicar con E="2" en caso necesario.
  97+ 9329
  98+ 9329 E5               push hl
  99+ 932A C5               push bc
 100+ 932B CD B6 98     	call calcula_tercio
 101+ 932E FE 01        	cp 1
 102+ 9330 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9332 CD 62 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9335 28 26            jr z,9F
 105+ 9337 38 24            jr c,9F
 106+ 9339 1E 00        11 ld e,0
 107+ 933B 18 22            jr 8F
 108+ 933D 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 933E 28 07        	jr z, 7F
 110+ 9340 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9342 1E 00         	ld e,0
 112+ 9344 E1           	pop hl
 113+ 9345 18 04        	jr 4F
 114+ 9347 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9349 18 15            jr 10F
 116+ 934B
 117+ 934B              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 934B              ; _para indicar con E="2" en caso necesario.
 119+ 934B
 120+ 934B E5           4 push hl
 121+ 934C C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 934D CD B6 98     	call calcula_tercio
 123+ 9350 FE 01        	cp 1
 124+ 9352 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9354 CD 62 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9357 28 04            jr z,9F
 127+ 9359 30 02            jr nc,9F
 128+ 935B 18 02        	jr 8F
 129+ 935D 1E 02        9 ld e,2
 130+ 935F C1           8 pop bc
 131+ 9360 E1           10 pop hl
 132+ 9361 C9           5 ret
 133+ 9362
 134+ 9362              ; --------------------
 135+ 9362              ;
 136+ 9362              ; 25/08/22
 137+ 9362
 138+ 9362 CD B6 98     Comprueba_centro call calcula_tercio
 139+ 9365 67               ld h,a
 140+ 9366 08           	ex af,af
 141+ 9367 FE 02        	cp 2
 142+ 9369 38 07        	jr c,1F
 143+ 936B 28 05        	jr z,1F
 144+ 936D 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9370 18 03        	jr 2F
 146+ 9372 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9375 08           2 ex af,af
 148+ 9376 A7               and a
 149+ 9377 ED 42            sbc hl,bc
 150+ 9379 C9               ret
 151+ 937A
 152+ 937A              ; *********************************************************************************************************************************************************************************************
 153+ 937A              ;
 154+ 937A              ;   16/8/22
 155+ 937A              ;
 156+ 937A              ;	Comprueba_limite_vertical
 157+ 937A              ;
 158+ 937A              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 937A              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 937A              ;
 161+ 937A
 162+ 937A 2A B7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 937D 7D           	ld a,l
 164+ 937E E6 1F        	and $1F
 165+ 9380 57           	ld d,a
 166+ 9381 3A F1 88     	ld a,(Limite_vertical)
 167+ 9384 BA           	cp d 											; Límite - Posición.
 168+ 9385 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9386 3A C9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9389 CB 47        	bit 0,a
 171+ 938B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 938D
 173+ 938D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 938D
 175+ 938D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 938E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9390
 178+ 9390              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9390              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9390
 181+ 9390 3A BB 88         ld a,(Coordenada_X)
 182+ 9393 16 0F            ld d,Centro_izquierda
 183+ 9395 A7               and a
 184+ 9396 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9397 28 1E            jr z,3F
 186+ 9399 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 939B              ;                                                    ; _salimos sin modificar nada.
 188+ 939B 18 0E            jr 2F
 189+ 939D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 939E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 93A0
 192+ 93A0              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 93A0              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 93A0
 195+ 93A0 3A BB 88         ld a,(Coordenada_X)
 196+ 93A3 16 10            ld d,Centro_derecha
 197+ 93A5 A7               and a
 198+ 93A6 92               sub d
 199+ 93A7 28 0E            jr z,3F
 200+ 93A9 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 93AB              ;                                                    ; _salimos sin modificar nada.
 202+ 93AB CB 43        2 bit 0,e
 203+ 93AD 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 93AF C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 93B0 CD 44 94         call Modificaccionne
 206+ 93B3 C1           	pop bc
 207+ 93B4 CD 54 94         call Inicializacion
 208+ 93B7 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 93B8
 210+ 93B8              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 93B8
 212+ 93B8 C5           4 push bc
 213+ 93B9 01 B6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 93BC 0A           	ld a,(bc)
 215+ 93BD 3D           	dec a
 216+ 93BE 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 93BF 7D           	ld a,l
 218+ 93C0 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 93C1 CB 47        	bit 0,a
 220+ 93C3 28 03        	jr z,5F
 221+ 93C5 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 93C6 18 2E        	jr 7F
 223+ 93C8
 224+ 93C8              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 93C8
 226+ 93C8 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 93C9 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 93CA 3A E1 88     	ld a,(Ctrl_0)
 229+ 93CD CB 4F        	bit 1,a
 230+ 93CF 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 93D1 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 93D2
 233+ 93D2              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 93D2
 235+ 93D2 1C               inc e
 236+ 93D3 1D               dec e
 237+ 93D4 20 07            jr nz,12F
 238+ 93D6 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 93D7 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 93D8 22 B7 88     	ld (Posicion_actual),hl
 241+ 93DB 18 44        13 jr 9F
 242+ 93DD CB 43        12 bit 0,e
 243+ 93DF 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 93E1              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 93E1 C1           	pop bc
 246+ 93E2 18 D3        	jr 3B
 247+ 93E4 80           14 add b
 248+ 93E5 6F               ld l,a
 249+ 93E6 22 B7 88     	ld (Posicion_actual),hl
 250+ 93E9 CD 44 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 93EC 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 93EE E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 93F0 32 E1 88         ld (Ctrl_0),a
 254+ 93F3 F1           	pop af
 255+ 93F4 18 2B        	jr 9F
 256+ 93F6
 257+ 93F6              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 93F6
 259+ 93F6 F5           7 push af
 260+ 93F7 3A E1 88     	ld a,(Ctrl_0)
 261+ 93FA CB 47        	bit 0,a
 262+ 93FC 20 1D        	jr nz,8F
 263+ 93FE F1           	pop af
 264+ 93FF
 265+ 93FF              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93FF
 267+ 93FF 1C           	inc e
 268+ 9400 1D               dec e
 269+ 9401 20 07            jr nz,10F
 270+ 9403 90           	sub b
 271+ 9404 6F               ld l,a
 272+ 9405 22 B7 88     	ld (Posicion_actual),hl
 273+ 9408 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 940A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 940A CB 43        10 bit 0,e
 276+ 940C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 940E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 940E C1           	pop bc
 279+ 940F 18 A6        	jr 3B
 280+ 9411 90           16 sub b
 281+ 9412 6F               ld l,a
 282+ 9413 22 B7 88     	ld (Posicion_actual),hl
 283+ 9416 CD 44 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 9419 18 06            jr 9F
 285+ 941B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 941D 32 E1 88         ld (Ctrl_0),a
 287+ 9420 F1           	pop af
 288+ 9421 C1           9 pop bc
 289+ 9422 1E 00        	ld e,0
 290+ 9424 CD 54 94         call Inicializacion
 291+ 9427 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9428 08           	ex af,af
 293+ 9429 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 942A 18 8B            jr 3B
 295+ 942C
 296+ 942C              ; --------------------
 297+ 942C
 298+ 942C 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 942E CD B2 95     1 call PreviousScan
 300+ 9431 10 FB            djnz 1B
 301+ 9433 22 B7 88     	ld (Posicion_actual),hl
 302+ 9436 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9437 C9           	ret
 304+ 9438
 305+ 9438              ; --------------------
 306+ 9438
 307+ 9438 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 943A CD A3 95     1 call NextScan
 309+ 943D 10 FB            djnz 1B
 310+ 943F 22 B7 88     	ld (Posicion_actual),hl
 311+ 9442 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9443 C9           	ret
 313+ 9444
 314+ 9444              ; --------------------
 315+ 9444              ;
 316+ 9444              ;	22/01/23
 317+ 9444              ;
 318+ 9444              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9444              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9444              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9444
 322+ 9444
 323+ 9444              Modificaccionne
 324+ 9444
 325+ 9444 3A C9 88     	ld a,(Cuad_objeto)
 326+ 9447 FE 02        	cp 2
 327+ 9449 CC 2C 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 944C DC 2C 94         call c,Modifica_Pos_actual
 329+ 944F C8           	ret z
 330+ 9450 CD 38 94         call Modifica_Pos_actual2
 331+ 9453 C9               ret
 332+ 9454
 333+ 9454              ; *************************************************************************************************************************************************************************************************
 334+ 9454              ;
 335+ 9454              ;	13/8/22
 336+ 9454              ;
 337+ 9454              ;	Inicializacion
 338+ 9454              ;
 339+ 9454              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9454              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9454              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9454              ;
 343+ 9454              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9454              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9454              ;	_ desaparece/aparece.
 346+ 9454
 347+ 9454              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9454              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9454              ;
 350+ 9454              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9454              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9454              ; 		   [E] ="0"
 353+ 9454
 354+ 9454              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9454
 356+ 9454 CD B6 98     Inicializacion call calcula_tercio
 357+ 9457 28 36        	jr z,primit
 358+ 9459 E6 02        	and 2
 359+ 945B 20 07        	jr nz,segmit
 360+ 945D 7D           	ld a,l
 361+ 945E FE 7F        	cp $7f
 362+ 9460 38 2D        	jr c,primit
 363+ 9462 28 2B        	jr z,primit
 364+ 9464 CD C1 94     segmit call column
 365+ 9467 38 13        	jr c,tercuad
 366+ 9469 3E 04        cuarcuad ld a,4
 367+ 946B 32 C9 88     	ld (Cuad_objeto),a
 368+ 946E 21 20 48     	ld hl,$4820
 369+ 9471 22 EF 88     	ld (Limite_horizontal),hl
 370+ 9474 21 F1 88     	ld hl,Limite_vertical
 371+ 9477 36 0D        	ld (hl),$0d
 372+ 9479 08           	ex af,af
 373+ 947A 18 3C        	jr 1F
 374+ 947C              tercuad
 375+ 947C 3E 03        	ld a,3
 376+ 947E 32 C9 88     	ld (Cuad_objeto),a
 377+ 9481 21 20 48     	ld hl,$4820
 378+ 9484 22 EF 88     	ld (Limite_horizontal),hl
 379+ 9487 21 F1 88     	ld hl,Limite_vertical
 380+ 948A 36 12        	ld (hl),$12
 381+ 948C 08           	ex af,af
 382+ 948D 18 29        	jr 1F
 383+ 948F CD C1 94     primit call column
 384+ 9492 38 13        	jr c, primcuad
 385+ 9494              segcuad
 386+ 9494 3E 02        	ld a,2
 387+ 9496 32 C9 88     	ld (Cuad_objeto),a
 388+ 9499 21 C0 4F     	ld hl,$4fc0
 389+ 949C 22 EF 88     	ld (Limite_horizontal),hl
 390+ 949F 21 F1 88     	ld hl,Limite_vertical
 391+ 94A2 36 0D        	ld (hl),$0d
 392+ 94A4 08           	ex af,af
 393+ 94A5 18 11        	jr 1F
 394+ 94A7              primcuad
 395+ 94A7 3E 01        	ld a,1
 396+ 94A9 32 C9 88     	ld (Cuad_objeto),a
 397+ 94AC 21 C0 4F     	ld hl,$4fc0
 398+ 94AF 22 EF 88     	ld (Limite_horizontal),hl
 399+ 94B2 21 F1 88     	ld hl,Limite_vertical
 400+ 94B5 36 12        	ld (hl),$12
 401+ 94B7 08           	ex af,af
 402+ 94B8 CD 41 9C     1 call Genera_coordenadas
 403+ 94BB 21 E1 88     	ld hl,Ctrl_0
 404+ 94BE CB EE        	set 5,(hl)
 405+ 94C0 C9           	ret
 406+ 94C1
 407+ 94C1              ; ------------------------------------------------------------------------------------------------------------------
 408+ 94C1
 409+ 94C1              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 94C1              ;
 411+ 94C1              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 94C1
 413+ 94C1 7D           column ld a,l
 414+ 94C2 E6 1F        	and $1f
 415+ 94C4 FE 10         	cp $10
 416+ 94C6 C9            	ret
 417+ 94C7
 418+ 94C7              ; --------------------------------------------------------------------------------------------------------------------
 419+ 94C7              ;
 420+ 94C7              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 94C7              ;
 422+ 94C7              ; 14/12/22
 423+ 94C7              ;
 424+ 94C7              ;	Modifica: A y BC.
 425+ 94C7
 426+ 94C7 3A C9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 94CA E6 01        	and 1
 428+ 94CC 28 17        	jr z,1F
 429+ 94CE
 430+ 94CE              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 94CE
 432+ 94CE 3A BB 88     	ld a,(Coordenada_X)
 433+ 94D1 47           	ld b,a
 434+ 94D2 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 94D3 79           	ld a,c
 436+ 94D4 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 94D5 38 08        	jr c,2F
 438+ 94D7 47           	ld b,a
 439+ 94D8 79           	ld a,c
 440+ 94D9 90           	sub b
 441+ 94DA 32 EE 88     	ld (Columnas),a
 442+ 94DD 18 1B        	jr 4F
 443+ 94DF 79           2 ld a,c
 444+ 94E0 32 EE 88     	ld (Columnas),a
 445+ 94E3 18 15        	jr 4F
 446+ 94E5
 447+ 94E5              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 94E5
 449+ 94E5 3A BB 88     1 ld a,(Coordenada_X)
 450+ 94E8 81           	add c
 451+ 94E9 3D           	dec a
 452+ 94EA D6 1F        	sub $1f
 453+ 94EC 38 08        	jr c,3F
 454+ 94EE 47           	ld b,a
 455+ 94EF 79           	ld a,c
 456+ 94F0 90           	sub b
 457+ 94F1 32 EE 88     	ld (Columnas),a
 458+ 94F4 18 04        	jr 4F
 459+ 94F6 79           3 ld a,c
 460+ 94F7 32 EE 88     	ld (Columnas),a
 461+ 94FA D9           4 exx
 462+ 94FB 4F           	ld c,a
 463+ 94FC D9           	exx
 464+ 94FD C9            ret
 465+ 94FE
 466+ 94FE              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94FE              ;
 468+ 94FE              ;   19/7/23
 469+ 94FE              ;
 470+ 94FE              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94FE              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94FE              ;
 473+ 94FE              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94FE              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94FE              ;
 476+ 94FE              ;	DESTRUYE: HL,B Y A.
 477+ 94FE
 478+ 94FE 3A C9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9501 FE 02        	cp 2
 480+ 9503 38 18        	jr c,1F
 481+ 9505 28 16        	jr z,1F
 482+ 9507 E6 01        	and 1
 483+ 9509 28 0D        	jr z,3F
 484+ 950B
 485+ 950B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 950B
 487+ 950B CD 51 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 950E
 489+ 950E 7D           9 ld a,l
 490+ 950F E6 1F        	and $1f
 491+ 9511 28 2A        	jr z,7F
 492+ 9513 2B           	dec hl
 493+ 9514 10 F8        	djnz 9B
 494+ 9516 18 25        	jr 7F
 495+ 9518
 496+ 9518              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9518
 498+ 9518 2A B7 88     3 ld hl,(Posicion_actual)
 499+ 951B 18 20        	jr 7F
 500+ 951D
 501+ 951D 28 14        1 jr z,2F
 502+ 951F
 503+ 951F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 951F
 505+ 951F CD 51 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9522
 507+ 9522 7D           4 ld a,l
 508+ 9523 E6 1F        	and $1f
 509+ 9525 28 03        	jr z,6F
 510+ 9527 2B           	dec hl
 511+ 9528 10 F8        	djnz 4B
 512+ 952A 06 0F        6 ld b,15
 513+ 952C CD B2 95     5 call PreviousScan
 514+ 952F 10 FB        	djnz 5B
 515+ 9531 18 0A        	jr 7F
 516+ 9533
 517+ 9533              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9533
 519+ 9533 CD 51 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9536 06 0F        	ld b,15
 521+ 9538 CD B2 95     8 call PreviousScan
 522+ 953B 10 FB        	djnz 8B
 523+ 953D
 524+ 953D E5           7 push hl
 525+ 953E DD E1        	pop ix
 526+ 9540
 527+ 9540 2A B9 88     	ld hl,(Puntero_objeto)
 528+ 9543 E5           	push hl
 529+ 9544 FD E1        	pop iy
 530+ 9546
 531+ 9546              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9546
 533+ 9546 3A E1 88     	ld a,(Ctrl_0)
 534+ 9549 CB 77        	bit 6,a
 535+ 954B C8           	ret z
 536+ 954C
 537+ 954C              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 954C              ; _ entidad / Amadeus´.
 539+ 954C
 540+ 954C DD 22 A8 85  	ld (p.imp.amadeus),ix
 541+ 9550
 542+ 9550 C9           	ret
 543+ 9551
 544+ 9551              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9551              ;
 546+ 9551              ;	2/1/23
 547+ 9551              ;
 548+ 9551              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9551              ;
 550+ 9551              ;	Tras esta rutina tenemos:
 551+ 9551              ;
 552+ 9551              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9551              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9551              ;
 555+ 9551              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9551
 557+ 9551 2A B7 88     Operandos ld hl,(Posicion_actual)
 558+ 9554 3A EE 88     	ld a,(Columnas)
 559+ 9557 3D           	dec a
 560+ 9558 20 01        	jr nz,1F
 561+ 955A 3C           	inc a
 562+ 955B 47           1 ld b,a
 563+ 955C C9           	ret
 564+ 955D
 565+ 955D              ; --------------------------------------------------------------------------------------------------------------------
 566+ 955D              ;
 567+ 955D              ;	3/1/23
 568+ 955D              ;
 569+ 955D              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 955D              ;
 571+ 955D              ;	Destruye: A,B,HL y DE.
 572+ 955D
 573+ 955D              Define_rutina_de_impresion
 574+ 955D
 575+ 955D 3A B6 88     	ld a,(Columns)
 576+ 9560 47           	ld b,a
 577+ 9561 3A EE 88     	ld a,(Columnas)
 578+ 9564 B8           	cp b
 579+ 9565 20 0D        	jr nz,2f
 580+ 9567
 581+ 9567              ;	La entidad se imprime entera.
 582+ 9567
 583+ 9567 21 86 96     	ld hl, Indice_entidades_completas
 584+ 956A E6 01        	and 1
 585+ 956C 28 02        	jr z,1F
 586+ 956E
 587+ 956E 23           	inc hl
 588+ 956F 23           	inc hl
 589+ 9570
 590+ 9570 CD 37 8C     1 call Extrae_address
 591+ 9573 C9           	ret		;	ret
 592+ 9574
 593+ 9574              ;	La entidad no se imprime entera en pantalla.
 594+ 9574
 595+ 9574 3A C9 88     2 ld a,(Cuad_objeto)
 596+ 9577 E6 01        	and 1
 597+ 9579 28 17        	jr z,3F
 598+ 957B
 599+ 957B              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 957B
 601+ 957B 21 8A 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 957E 3A B6 88     4 ld a,(Columns)
 603+ 9581 E6 01        	and 1
 604+ 9583 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9585
 606+ 9585 23           	inc hl
 607+ 9586 23           	inc hl
 608+ 9587
 609+ 9587 3A EE 88     	ld a,(Columnas)
 610+ 958A E6 01        	and 1
 611+ 958C 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 958E
 613+ 958E 23           	inc hl
 614+ 958F 23           	inc hl
 615+ 9590
 616+ 9590 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9592
 618+ 9592 21 90 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9595 18 E7        	jr 4B
 620+ 9597
 621+ 9597              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9597              ;
 623+ 9597              ;	Prepara_draw
 624+ 9597              ;
 625+ 9597              ;	Es una rutina de carga.
 626+ 9597              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9597              ;
 628+ 9597              ;	FUNCIONAMIENTO:
 629+ 9597              ;
 630+ 9597              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9597              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9597              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9597              ;
 634+ 9597              ;	DESTRUYE:
 635+ 9597              ;
 636+ 9597              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9597
 638+ 9597 21 B5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 959A 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 959B 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 959C 4E           	ld c,(hl)
 642+ 959D 2A B7 88     	ld hl,(Posicion_actual)
 643+ 95A0 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 95A2 C9           	ret
 645+ 95A3
 646+ 95A3              ;----------------------------------------------------------------------------------------------------------------
 647+ 95A3              ;
 648+ 95A3              ;	5/08/22
 649+ 95A3              ;
 650+ 95A3              ;   NextScan.
 651+ 95A3              ;
 652+ 95A3              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 95A3              ;
 654+ 95A3              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 95A3              ;
 656+ 95A3              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 95A3              ;
 658+ 95A3              ;       DESTRUIDOS: AF y HL !!!
 659+ 95A3              ;
 660+ 95A3              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 95A3              ;
 662+ 95A3
 663+ 95A3 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 95A4 7C               ld a,h
 665+ 95A5 E6 07            and 7
 666+ 95A7 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 95A8
 668+ 95A8 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 95A9 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 95AB 6F               ld l,a
 671+ 95AC D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 95AD
 673+ 95AD 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 95AE D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 95B0 67               ld h,a
 676+ 95B1 C9               ret
 677+ 95B2
 678+ 95B2              ;----------------------------------------------------------------------------------------------------------------
 679+ 95B2              ;
 680+ 95B2              ;	5/08/22
 681+ 95B2              ;
 682+ 95B2              ;   PreviousScan.
 683+ 95B2              ;
 684+ 95B2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 95B2              ;
 686+ 95B2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 95B2              ;
 688+ 95B2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 95B2              ;
 690+ 95B2              ;       DESTRUIDOS: AF y HL !!!
 691+ 95B2              ;
 692+ 95B2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 95B2              ;
 694+ 95B2
 695+ 95B2 7C           PreviousScan ld a,h
 696+ 95B3 25               dec h               ; Dec H.
 697+ 95B4 E6 07            and 7
 698+ 95B6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 95B7
 700+ 95B7 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 95B8 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 95BA 6F               ld l,a
 703+ 95BB D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 95BC
 705+ 95BC 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 95BD C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 95BF 67               ld h,a
 708+ 95C0 C9               ret
 709+ 95C1
 710+ 95C1              ; -----------------------------------------------------------------------------------
 711+ 95C1              ;
 712+ 95C1              ;	31/7/23
 713+ 95C1              ;
 714+ 95C1              ;	Rutina principal de pintado de entidades.
 715+ 95C1              ;	Extrae la foto del frame, (entidades).
 716+ 95C1
 717+ 95C1              Extrae_foto_entidades
 718+ 95C1
 719+ 95C1 21 01 70     	ld hl,Album_de_fotos+1
 720+ 95C4 7E           	ld a,(hl)
 721+ 95C5 A7           	and a
 722+ 95C6 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 95C7
 724+ 95C7              ;	No hay datos, (entidades para pintar en este frame).
 725+ 95C7
 726+ 95C7 3A 00 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 95CA A7           	and a
 728+ 95CB C8           	ret z
 729+ 95CC
 730+ 95CC              ; -----------------------------------
 731+ 95CC
 732+ 95CC ED 73 05 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 95D0 31 00 70     	ld sp,Album_de_fotos
 734+ 95D3
 735+ 95D3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 95D5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 95D6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 95D7
 739+ 95D7 ED 73 07 89  	ld (Stack_2),sp
 740+ 95DB ED 7B 05 89  	ld sp,(Stack)
 741+ 95DF
 742+ 95DF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 95DF
 744+ 95DF 3E CD        	ld a,$cd
 745+ 95E1 32 E9 95     	ld (Imprime),a
 746+ 95E4 EB           	ex de,hl
 747+ 95E5 22 EA 95     	ld (Imprime+1),hl
 748+ 95E8 EB           	ex de,hl
 749+ 95E9
 750+ 95E9              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 95E9
 752+ 95E9 00 00 00     Imprime db 0,0,0
 753+ 95EC
 754+ 95EC ED 73 05 89  	ld (Stack),sp
 755+ 95F0
 756+ 95F0 3A 00 89     	ld a,(Numero_de_malotes)
 757+ 95F3 3D           	dec a
 758+ 95F4 28 09        	jr z,1F
 759+ 95F6 32 00 89      	ld (Numero_de_malotes),a
 760+ 95F9
 761+ 95F9 ED 7B 07 89  	ld sp,(Stack_2)
 762+ 95FD 18 D4        	jr 2B
 763+ 95FF
 764+ 95FF AF           1 xor a
 765+ 9600 32 07 89     	ld (Stack_2),a
 766+ 9603
 767+ 9603 C9           	ret
 768+ 9604
 769+ 9604              ; -----------------------------------------------------------------------------------
 770+ 9604              ;
 771+ 9604              ;	28/2/23
 772+ 9604              ;
 773+ 9604              ;	Pinta los disparos generados.
 774+ 9604
 775+ 9604              Extrae_foto_disparos
 776+ 9604
 777+ 9604 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 9607 7E               ld a,(hl)
 779+ 9608 A7               and a
 780+ 9609 C8               ret z
 781+ 960A
 782+ 960A 3A 14 89     	ld a,(Numero_de_disparotes)
 783+ 960D A7           	and a
 784+ 960E C8           	ret z
 785+ 960F ED 73 05 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9613 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 9616
 788+ 9616 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 9618 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 9619 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 961A
 792+ 961A ED 73 07 89  	ld (Stack_2),sp
 793+ 961E ED 7B 05 89  	ld sp,(Stack)
 794+ 9622
 795+ 9622              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 9622
 797+ 9622 3E CD        	ld a,$cd
 798+ 9624 32 2C 96     	ld (Imprime2),a
 799+ 9627 EB           	ex de,hl
 800+ 9628 22 2D 96     	ld (Imprime2+1),hl
 801+ 962B EB           	ex de,hl
 802+ 962C
 803+ 962C              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 962C
 805+ 962C 00 00 00     Imprime2 db 0,0,0
 806+ 962F
 807+ 962F 3A 14 89     	ld a,(Numero_de_disparotes)
 808+ 9632 3D           	dec a
 809+ 9633 28 09        	jr z,1F
 810+ 9635 32 14 89      	ld (Numero_de_disparotes),a
 811+ 9638
 812+ 9638 ED 7B 07 89  	ld sp,(Stack_2)
 813+ 963C 18 D8        	jr 2B
 814+ 963E
 815+ 963E AF           1 xor a
 816+ 963F 32 07 89     	ld (Stack_2),a
 817+ 9642 C9           	ret
 818+ 9643
 819+ 9643              ; -----------------------------------------------------------------------------------
 820+ 9643              ;
 821+ 9643              ;	4/9/23
 822+ 9643              ;
 823+ 9643              ;	Rutina principal de pintado de Amadeus.
 824+ 9643              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 9643
 826+ 9643 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 9646 7E           	ld a,(hl)
 828+ 9647 A7           	and a
 829+ 9648 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 9649
 831+ 9649 3A 00 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 964C A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 964D C8           	ret z
 834+ 964E
 835+ 964E              ; -----------------------------------
 836+ 964E
 837+ 964E ED 73 05 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9652 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 9655
 840+ 9655 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9657 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 9658 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 9659
 844+ 9659 ED 73 07 89  	ld (Stack_2),sp
 845+ 965D ED 7B 05 89  	ld sp,(Stack)
 846+ 9661
 847+ 9661              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9661
 849+ 9661 3E CD        	ld a,$cd
 850+ 9663 32 6B 96     	ld (Imprime_Amadeus),a
 851+ 9666 EB           	ex de,hl
 852+ 9667 22 6C 96     	ld (Imprime_Amadeus+1),hl
 853+ 966A EB           	ex de,hl
 854+ 966B
 855+ 966B              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 966B
 857+ 966B 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 966E
 859+ 966E ED 73 05 89  	ld (Stack),sp
 860+ 9672
 861+ 9672 3A 00 89     	ld a,(Numero_de_malotes)
 862+ 9675 3D           	dec a
 863+ 9676 28 09        	jr z,1F
 864+ 9678 32 00 89      	ld (Numero_de_malotes),a
 865+ 967B
 866+ 967B ED 7B 07 89  	ld sp,(Stack_2)
 867+ 967F 18 D4        	jr 2B
 868+ 9681
 869+ 9681 AF           1 xor a
 870+ 9682 32 07 89     	ld (Stack_2),a
 871+ 9685
 872+ 9685 C9           	ret
# file closed: Draw_XOR.asm
1580  9686              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9686              ;   índices de Rutinas de impresión.
   2+ 9686
   3+ 9686 96 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9688 C3 96            defw Pinta_Amadeus_3x2
   5+ 968A
   6+ 968A 19 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 968C B9 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 968E 6D 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9690
  10+ 9690 43 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9692 47 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9694 FB 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9696
  14+ 9696
  15+ 9696              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9696              ;
  17+ 9696              ;   12/12/22
  18+ 9696              ;
  19+ 9696              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9696              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9696              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9696              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9696              ;
  24+ 9696              ;   Modifica: DE y HL.
  25+ 9696
  26+ 9696 ED 73 05 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 969A FD F9        	ld sp,iy
  28+ 969C 06 10            ld b,16
  29+ 969E D1           1 pop de
  30+ 969F 7B               ld a,e
  31+ 96A0 AE               xor (hl)
  32+ 96A1 77           	ld (hl),a
  33+ 96A2 23           	inc hl
  34+ 96A3 7A               ld a,d
  35+ 96A4 AE               xor (hl)
  36+ 96A5 77           	ld (hl),a
  37+ 96A6 2B           	dec hl
  38+ 96A7 24           	inc h
  39+ 96A8 7C               ld a,h
  40+ 96A9 E6 07            and 7
  41+ 96AB 20 0A            jr nz,2F
  42+ 96AD 7D               ld a,l
  43+ 96AE C6 20            add a,$20
  44+ 96B0 6F               ld l,a
  45+ 96B1 38 04            jr c,2F
  46+ 96B3 7C               ld a,h
  47+ 96B4 D6 08            sub 8
  48+ 96B6 67               ld h,a
  49+ 96B7 7C           2 ld a,h
  50+ 96B8 FE 58            cp $58
  51+ 96BA 28 02            jr z,3F
  52+ 96BC 10 E0            djnz 1B
  53+ 96BE ED 7B 05 89  3 ld sp,(Stack)
  54+ 96C2 C9           	ret
  55+ 96C3
  56+ 96C3 ED 73 05 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96C7 FD F9        	ld sp,iy
  58+ 96C9 06 08            ld b,8
  59+ 96CB D1           1 pop de
  60+ 96CC 7B               ld a,e
  61+ 96CD AE               xor (hl)
  62+ 96CE 77           	ld (hl),a
  63+ 96CF 23           	inc hl
  64+ 96D0 7A               ld a,d
  65+ 96D1 AE               xor (hl)
  66+ 96D2 77           	ld (hl),a
  67+ 96D3 23           	inc hl
  68+ 96D4 D1           	pop de
  69+ 96D5 7B               ld a,e
  70+ 96D6 AE               xor (hl)
  71+ 96D7 77           	ld (hl),a
  72+ 96D8 2B           	dec hl
  73+ 96D9 2B           	dec hl
  74+ 96DA 24           	inc h
  75+ 96DB 7C               ld a,h
  76+ 96DC E6 07            and 7
  77+ 96DE 20 0A            jr nz,2F
  78+ 96E0 7D               ld a,l
  79+ 96E1 C6 20            add a,$20
  80+ 96E3 6F               ld l,a
  81+ 96E4 38 04            jr c,2F
  82+ 96E6 7C               ld a,h
  83+ 96E7 D6 08            sub 8
  84+ 96E9 67               ld h,a
  85+ 96EA 7C           2 ld a,h
  86+ 96EB FE 58            cp $58
  87+ 96ED 28 25            jr z,4F
  88+ 96EF 7A               ld a,d
  89+ 96F0 AE               xor (hl)
  90+ 96F1 77               ld (hl),a
  91+ 96F2 D1           	pop de
  92+ 96F3 23           	inc hl
  93+ 96F4 7B               ld a,e
  94+ 96F5 AE               xor (hl)
  95+ 96F6 77           	ld (hl),a
  96+ 96F7 23           	inc hl
  97+ 96F8 7A               ld a,d
  98+ 96F9 AE               xor (hl)
  99+ 96FA 77           	ld (hl),a
 100+ 96FB 2B           	dec hl
 101+ 96FC 2B           	dec hl
 102+ 96FD 24           	inc h
 103+ 96FE 7C               ld a,h
 104+ 96FF E6 07            and 7
 105+ 9701 20 0A            jr nz,3F
 106+ 9703 7D               ld a,l
 107+ 9704 C6 20            add a,$20
 108+ 9706 6F               ld l,a
 109+ 9707 38 04            jr c,3F
 110+ 9709 7C               ld a,h
 111+ 970A D6 08            sub 8
 112+ 970C 67               ld h,a
 113+ 970D 7C           3 ld a,h
 114+ 970E FE 58            cp $58
 115+ 9710 28 02            jr z,4F
 116+ 9712 10 B7            djnz 1B
 117+ 9714 ED 7B 05 89  4 ld sp,(Stack)
 118+ 9718 C9           	ret
 119+ 9719
 120+ 9719              ; ---------------------------------------------------
 121+ 9719
 122+ 9719 ED 73 05 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 971D FD F9        	ld sp,iy
 124+ 971F
 125+ 971F              ; >>>
 126+ 971F
 127+ 971F 06 10            ld b,16
 128+ 9721 D1           1 pop de
 129+ 9722 7A           	ld a,d
 130+ 9723 AE           	xor (hl)
 131+ 9724 77           	ld (hl),a
 132+ 9725 24           	inc h
 133+ 9726 7C               ld a,h
 134+ 9727 E6 07            and 7
 135+ 9729 20 0C            jr nz,2F
 136+ 972B 7D               ld a,l
 137+ 972C C6 20            add a,$20
 138+ 972E 6F               ld l,a
 139+ 972F 38 06            jr c,2F
 140+ 9731 7C               ld a,h
 141+ 9732 D6 08            sub 8
 142+ 9734 67               ld h,a
 143+ 9735 18 00            jr 2F
 144+ 9737 7C           2 ld a,h
 145+ 9738 FE 58            cp $58
 146+ 973A 28 02            jr z,3F
 147+ 973C 10 E3            djnz 1B
 148+ 973E ED 7B 05 89  3 ld sp,(Stack)
 149+ 9742 C9           	ret
 150+ 9743
 151+ 9743 ED 73 05 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9747 FD F9        	ld sp,iy
 153+ 9749
 154+ 9749              ; >>>
 155+ 9749
 156+ 9749 06 10            ld b,16
 157+ 974B D1           1 pop de
 158+ 974C 7B           	ld a,e
 159+ 974D AE           	xor (hl)
 160+ 974E 77           	ld (hl),a
 161+ 974F 24           	inc h
 162+ 9750 7C               ld a,h
 163+ 9751 E6 07            and 7
 164+ 9753 20 0C            jr nz,2F
 165+ 9755 7D               ld a,l
 166+ 9756 C6 20            add a,$20
 167+ 9758 6F               ld l,a
 168+ 9759 38 06            jr c,2F
 169+ 975B 7C               ld a,h
 170+ 975C D6 08            sub 8
 171+ 975E 67               ld h,a
 172+ 975F 18 00            jr 2F
 173+ 9761 7C           2 ld a,h
 174+ 9762 FE 58            cp $58
 175+ 9764 28 02            jr z,3F
 176+ 9766 10 E3            djnz 1B
 177+ 9768 ED 7B 05 89  3 ld sp,(Stack)
 178+ 976C C9           	ret
 179+ 976D
 180+ 976D              ; ---------------------------------------------------
 181+ 976D
 182+ 976D ED 73 05 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9771 FD F9        	ld sp,iy
 184+ 9773 06 08            ld b,8
 185+ 9775 D1           1 pop de
 186+ 9776 7A           	ld a,d
 187+ 9777 AE           	xor (hl)
 188+ 9778 77           	ld (hl),a
 189+ 9779 23           	inc hl
 190+ 977A D1           	pop de
 191+ 977B 7B           	ld a,e
 192+ 977C AE           	xor (hl)
 193+ 977D 77           	ld (hl),a
 194+ 977E 2B           	dec hl
 195+ 977F 24            	inc h
 196+ 9780 7C               ld a,h
 197+ 9781 E6 07            and 7
 198+ 9783 20 0A            jr nz,2F
 199+ 9785 7D               ld a,l
 200+ 9786 C6 20            add a,$20
 201+ 9788 6F               ld l,a
 202+ 9789 38 04            jr c,2F
 203+ 978B 7C               ld a,h
 204+ 978C D6 08            sub 8
 205+ 978E 67               ld h,a
 206+ 978F 7C           2 ld a,h
 207+ 9790 FE 58            cp $58
 208+ 9792 28 20            jr z,4F
 209+ 9794 D1               pop de
 210+ 9795 7B           	ld a,e
 211+ 9796 AE           	xor (hl)
 212+ 9797 77           	ld (hl),a
 213+ 9798 23           	inc hl
 214+ 9799 7A           	ld a,d
 215+ 979A AE           	xor (hl)
 216+ 979B 77           	ld (hl),a
 217+ 979C 2B           	dec hl
 218+ 979D 24           	inc h
 219+ 979E 7C               ld a,h
 220+ 979F E6 07            and 7
 221+ 97A1 20 0A            jr nz,3F
 222+ 97A3 7D               ld a,l
 223+ 97A4 C6 20            add a,$20
 224+ 97A6 6F               ld l,a
 225+ 97A7 38 04            jr c,3F
 226+ 97A9 7C               ld a,h
 227+ 97AA D6 08            sub 8
 228+ 97AC 67               ld h,a
 229+ 97AD 7C           3 ld a,h
 230+ 97AE FE 58            cp $58
 231+ 97B0 28 02            jr z,4F
 232+ 97B2 10 C1            djnz 1B
 233+ 97B4 ED 7B 05 89  4 ld sp,(Stack)
 234+ 97B8 C9           	ret
 235+ 97B9
 236+ 97B9 ED 73 05 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97BD FD F9        	ld sp,iy
 238+ 97BF 06 08            ld b,8
 239+ 97C1 D1           1 pop de
 240+ 97C2 D1           	pop de
 241+ 97C3 7B           	ld a,e
 242+ 97C4 AE           	xor (hl)
 243+ 97C5 77           	ld (hl),a
 244+ 97C6 24            	inc h
 245+ 97C7 7C               ld a,h
 246+ 97C8 E6 07            and 7
 247+ 97CA 20 0A            jr nz,2F
 248+ 97CC 7D               ld a,l
 249+ 97CD C6 20            add a,$20
 250+ 97CF 6F               ld l,a
 251+ 97D0 38 04            jr c,2F
 252+ 97D2 7C               ld a,h
 253+ 97D3 D6 08            sub 8
 254+ 97D5 67               ld h,a
 255+ 97D6 7C           2 ld a,h
 256+ 97D7 FE 58            cp $58
 257+ 97D9 28 1B            jr z,4F
 258+ 97DB D1               pop de
 259+ 97DC 7A           	ld a,d
 260+ 97DD AE           	xor (hl)
 261+ 97DE 77           	ld (hl),a
 262+ 97DF 24           	inc h
 263+ 97E0 7C               ld a,h
 264+ 97E1 E6 07            and 7
 265+ 97E3 20 0A            jr nz,3F
 266+ 97E5 7D               ld a,l
 267+ 97E6 C6 20            add a,$20
 268+ 97E8 6F               ld l,a
 269+ 97E9 38 04            jr c,3F
 270+ 97EB 7C               ld a,h
 271+ 97EC D6 08            sub 8
 272+ 97EE 67               ld h,a
 273+ 97EF 7C           3 ld a,h
 274+ 97F0 FE 58            cp $58
 275+ 97F2 28 02            jr z,4F
 276+ 97F4 10 CB            djnz 1B
 277+ 97F6 ED 7B 05 89  4 ld sp,(Stack)
 278+ 97FA C9           	ret
 279+ 97FB
 280+ 97FB ED 73 05 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97FF FD F9        	ld sp,iy
 282+ 9801 06 08            ld b,8
 283+ 9803 D1           1 pop de
 284+ 9804 7B           	ld a,e
 285+ 9805 AE           	xor (hl)
 286+ 9806 77           	ld (hl),a
 287+ 9807 23           	inc hl
 288+ 9808 7A           	ld a,d
 289+ 9809 AE           	xor (hl)
 290+ 980A 77           	ld (hl),a
 291+ 980B 2B           	dec hl
 292+ 980C 24             	inc h
 293+ 980D 7C               ld a,h
 294+ 980E E6 07            and 7
 295+ 9810 20 0A            jr nz,2F
 296+ 9812 7D               ld a,l
 297+ 9813 C6 20            add a,$20
 298+ 9815 6F               ld l,a
 299+ 9816 38 04            jr c,2F
 300+ 9818 7C               ld a,h
 301+ 9819 D6 08            sub 8
 302+ 981B 67               ld h,a
 303+ 981C 7C           2 ld a,h
 304+ 981D FE 58            cp $58
 305+ 981F 28 21            jr z,4F
 306+ 9821 D1               pop de
 307+ 9822 7A           	ld a,d
 308+ 9823 AE           	xor (hl)
 309+ 9824 77           	ld (hl),a
 310+ 9825 23           	inc hl
 311+ 9826 D1               pop de
 312+ 9827 7B           	ld a,e
 313+ 9828 AE           	xor (hl)
 314+ 9829 77           	ld (hl),a
 315+ 982A 2B           	dec hl
 316+ 982B 24           	inc h
 317+ 982C 7C               ld a,h
 318+ 982D E6 07            and 7
 319+ 982F 20 0A            jr nz,3F
 320+ 9831 7D               ld a,l
 321+ 9832 C6 20            add a,$20
 322+ 9834 6F               ld l,a
 323+ 9835 38 04            jr c,3F
 324+ 9837 7C               ld a,h
 325+ 9838 D6 08            sub 8
 326+ 983A 67               ld h,a
 327+ 983B 7C           3 ld a,h
 328+ 983C FE 58            cp $58
 329+ 983E 28 02            jr z,4F
 330+ 9840 10 C1            djnz 1B
 331+ 9842 ED 7B 05 89  4 ld sp,(Stack)
 332+ 9846 C9           	ret
 333+ 9847
 334+ 9847 ED 73 05 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 984B FD F9        	ld sp,iy
 336+ 984D 06 08            ld b,8
 337+ 984F D1           1 pop de
 338+ 9850 7B           	ld a,e
 339+ 9851 AE           	xor (hl)
 340+ 9852 77           	ld (hl),a
 341+ 9853 24            	inc h
 342+ 9854 7C               ld a,h
 343+ 9855 E6 07            and 7
 344+ 9857 20 0A            jr nz,2F
 345+ 9859 7D               ld a,l
 346+ 985A C6 20            add a,$20
 347+ 985C 6F               ld l,a
 348+ 985D 38 04            jr c,2F
 349+ 985F 7C               ld a,h
 350+ 9860 D6 08            sub 8
 351+ 9862 67               ld h,a
 352+ 9863 7C           2 ld a,h
 353+ 9864 FE 58            cp $58
 354+ 9866 28 1C            jr z,4F
 355+ 9868 D1               pop de
 356+ 9869 7A           	ld a,d
 357+ 986A AE           	xor (hl)
 358+ 986B 77           	ld (hl),a
 359+ 986C 24           	inc h
 360+ 986D 7C               ld a,h
 361+ 986E E6 07            and 7
 362+ 9870 20 0A            jr nz,3F
 363+ 9872 7D               ld a,l
 364+ 9873 C6 20            add a,$20
 365+ 9875 6F               ld l,a
 366+ 9876 38 04            jr c,3F
 367+ 9878 7C               ld a,h
 368+ 9879 D6 08            sub 8
 369+ 987B 67               ld h,a
 370+ 987C 7C           3 ld a,h
 371+ 987D FE 58            cp $58
 372+ 987F 28 03            jr z,4F
 373+ 9881 D1               pop de
 374+ 9882 10 CB            djnz 1B
 375+ 9884 ED 7B 05 89  4 ld sp,(Stack)
 376+ 9888 C9           	ret
 377+ 9889
 378+ 9889              ; ---------------------------------------------------
 379+ 9889              ;
 380+ 9889              ;   27/02/23
 381+ 9889              ;
 382+ 9889              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9889              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9889              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9889
 386+ 9889 ED 73 05 89  Pinta_Disparo ld (Stack),sp
 387+ 988D FD F9            ld sp,iy
 388+ 988F 06 03            ld b,3
 389+ 9891 D1           1 pop de
 390+ 9892 7B               ld a,e
 391+ 9893 AE               xor (hl)
 392+ 9894 77               ld (hl),a
 393+ 9895 23               inc hl
 394+ 9896 7A               ld a,d
 395+ 9897 AE               xor (hl)
 396+ 9898 77               ld (hl),a
 397+ 9899 2B               dec hl
 398+ 989A
 399+ 989A 24               inc h
 400+ 989B 7C               ld a,h
 401+ 989C E6 07            and 7
 402+ 989E 20 0A            jr nz,2F
 403+ 98A0 7D               ld a,l
 404+ 98A1 C6 20            add a,$20
 405+ 98A3 6F               ld l,a
 406+ 98A4 38 04            jr c,2F
 407+ 98A6 7C               ld a,h
 408+ 98A7 D6 08            sub 8
 409+ 98A9 67               ld h,a
 410+ 98AA 7C           2 ld a,h
 411+ 98AB FE 58            cp $58
 412+ 98AD 28 02            jr z,3F
 413+ 98AF
 414+ 98AF 10 E0            djnz 1B
 415+ 98B1 ED 7B 05 89  3 ld sp,(Stack)
 416+ 98B5 C9               ret
 417+ 98B6
# file closed: Rutinas_de_impresion_sprites.asm
1581  98B6              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98B6              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98B6              ;
   3+ 98B6              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98B6              ;
   5+ 98B6              ; *****************************************************************************************************************************************************************************************
   6+ 98B6              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98B6
   8+ 98B6 7C           calcula_tercio ld a,h
   9+ 98B7 E6 18        	and $18
  10+ 98B9 CB 2F        	sra a
  11+ 98BB CB 2F        	sra a
  12+ 98BD CB 2F        	sra a
  13+ 98BF C9           	ret
  14+ 98C0
# file closed: calcula_tercio.asm
1582  98C0              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98C0              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98C0              ;
   3+ 98C0              ;
   4+ 98C0              ;	CLS.
   5+ 98C0              ;
   6+ 98C0              ;	Limpia la pantalla y define sus atributos.
   7+ 98C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98C0              ;
   9+ 98C0              ;	COLORES: 0 ..... NEGRO
  10+ 98C0              ;    		 1 ..... AZUL
  11+ 98C0              ; 			 2 ..... ROJO
  12+ 98C0              ;			 3 ..... MAGENTA
  13+ 98C0              ; 			 4 ..... VERDE
  14+ 98C0              ; 			 5 ..... CIAN
  15+ 98C0              ;			 6 ..... AMARILLO
  16+ 98C0              ; 			 7 ..... BLANCO
  17+ 98C0              ;
  18+ 98C0              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98C0              ;
  20+ 98C0              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98C0
  22+ 98C0
  23+ 98C0 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98C3 11 01 40     	LD DE,$4001
  25+ 98C6 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98C9 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98CB ED B0        	LDIR
  28+ 98CD 01 FF 02     	LD BC,767
  29+ 98D0 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98D1 ED B0        	LDIR
  31+ 98D3 C9           	ret
  32+ 98D4
# file closed: Cls.asm
1583  98D4              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98D4              ; ******************************************************************************************************************************************************************************************
   2+ 98D4              ;
   3+ 98D4              ;   20/05/23
   4+ 98D4              ;
   5+ 98D4              ;	Recompone_posicion_inicio
   6+ 98D4              ;
   7+ 98D4              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98D4              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98D4              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98D4              ;	_ a una u otra rutina.
  11+ 98D4
  12+ 98D4              Recompone_posicion_inicio
  13+ 98D4
  14+ 98D4 2A C7 88     	ld hl,(Posicion_inicio)
  15+ 98D7 7D           	ld a,l
  16+ 98D8 E6 1F        	and $1f
  17+ 98DA 28 16        	jr z,1F
  18+ 98DC
  19+ 98DC FE 1F        	cp $1f
  20+ 98DE 28 0D        	jr z,3F
  21+ 98E0
  22+ 98E0 21 F2 88     	ld hl,Ctrl_2
  23+ 98E3 CB C6        	set 0,(hl)
  24+ 98E5 2A B9 88     	ld hl,(Puntero_objeto)
  25+ 98E8 22 F5 88     	ld (Repone_puntero_objeto),hl
  26+ 98EB 18 08        	jr 2F
  27+ 98ED
  28+ 98ED CD 8E 9A     3 call Mov_left
  29+ 98F0 18 03        	jr 2F
  30+ 98F2
  31+ 98F2 CD 70 99     1 call Mov_right
  32+ 98F5 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98F8 22 B9 88     	ld (Puntero_objeto),hl
  34+ 98FB C9           	ret
  35+ 98FC
  36+ 98FC              ; ******************************************************************************************************************************************************************************************
  37+ 98FC              ;
  38+ 98FC              ;   27/05/23
  39+ 98FC              ;
  40+ 98FC              ;	Mov_down
  41+ 98FC              ;
  42+ 98FC              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98FC              ;
  44+ 98FC              ;
  45+ 98FC              Mov_down
  46+ 98FC
  47+ 98FC CD 5E 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98FF              ;																	; _ repone (Puntero_objeto).
  49+ 98FF 21 E1 88     	ld hl,Ctrl_0
  50+ 9902 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9904              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9904              ; 																	; _ en el caso de que no lo haya.
  53+ 9904 3A CD 88     	ld a,(Vel_down)
  54+ 9907 47           	ld b,a
  55+ 9908 2A B7 88         ld hl,(Posicion_actual)
  56+ 990B CD B6 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 990E E6 02        	and 2
  58+ 9910 28 0F        	jr z,1F
  59+ 9912
  60+ 9912              ; Nos encontramos en el último tercio de pantalla.
  61+ 9912              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9912
  63+ 9912 7C           	ld a,h
  64+ 9913 FE 57        	cp $57
  65+ 9915 20 0A        	jr nz,1F
  66+ 9917
  67+ 9917 7D           	ld a,l
  68+ 9918 C6 20        	add $20
  69+ 991A 30 05        	jr nc,1F
  70+ 991C
  71+ 991C              ; ------------------------------
  72+ 991C              ;	call Reaparece_arriba
  73+ 991C CD 1B 9C     	call Reinicio
  74+ 991F              ; ------------------------------
  75+ 991F
  76+ 991F 18 08        	jr 3F
  77+ 9921 CD A3 95     1 call NextScan
  78+ 9924 22 B7 88     	ld (Posicion_actual),hl
  79+ 9927 10 E2            djnz 2B
  80+ 9929 CD 41 9C     3 call Genera_coordenadas
  81+ 992C C9           	ret
  82+ 992D
  83+ 992D              ; ******************************************************************************************************************************************************************************************
  84+ 992D              ;
  85+ 992D              ;   27/05/23
  86+ 992D              ;
  87+ 992D              ;	Mov_up
  88+ 992D              ;
  89+ 992D              ; 	Mueve el Sprite hacia arriba.
  90+ 992D              ;
  91+ 992D              ;
  92+ 992D              Mov_up
  93+ 992D
  94+ 992D CD 5E 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9930              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9930 21 E1 88     	ld hl,Ctrl_0
  97+ 9933 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9935              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9935              ; 																		; _ en el caso de que no lo haya.
 100+ 9935 3A CC 88     	ld a,(Vel_up)
 101+ 9938 47           	ld b,a
 102+ 9939 2A B7 88     	ld hl,(Posicion_actual)
 103+ 993C CD B6 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 993F A7           	and a
 105+ 9940 20 10        	jr nz,1F
 106+ 9942
 107+ 9942              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9942              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9942
 110+ 9942 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9943 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9945 20 0B            jr nz,1F
 113+ 9947 7D               ld a,l
 114+ 9948 D6 20            sub $20
 115+ 994A 30 06            jr nc,1F
 116+ 994C 25               dec h
 117+ 994D
 118+ 994D              ; -----------------------------
 119+ 994D CD FC 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9950              ;	call Reinicio
 121+ 9950              ; -----------------------------
 122+ 9950
 123+ 9950 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9952 CD B2 95     1 call PreviousScan
 125+ 9955 22 B7 88     	ld (Posicion_actual),hl
 126+ 9958 10 E2            djnz 3B
 127+ 995A CD 41 9C     2 call Genera_coordenadas
 128+ 995D C9           	ret
 129+ 995E
 130+ 995E              ; -----------------------------
 131+ 995E              ;
 132+ 995E              ;	27/5/23
 133+ 995E              ;
 134+ 995E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 995E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 995E              ;
 137+ 995E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 995E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 995E              ;
 140+ 995E              ;	Modifica: A y (Puntero_objeto).
 141+ 995E
 142+ 995E 3A F2 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9961 CB 47        	bit 0,a
 144+ 9963 C8           	ret z
 145+ 9964 CB 87        	res 0,a
 146+ 9966 32 F2 88     	ld (Ctrl_2),a
 147+ 9969 2A F5 88     	ld hl,(Repone_puntero_objeto)
 148+ 996C 22 B9 88     	ld (Puntero_objeto),hl
 149+ 996F C9           	ret
 150+ 9970
 151+ 9970              ; ******************************************************************************************************************************************************************************************
 152+ 9970              ;
 153+ 9970              ;	19/10/22
 154+ 9970              ;
 155+ 9970              ;	Mov_right.
 156+ 9970              ;
 157+ 9970              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9970              ;
 159+ 9970
 160+ 9970 21 E1 88     Mov_right ld hl,Ctrl_0
 161+ 9973 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9975              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9975              ; 																	; _ en el caso de que no lo haya.
 164+ 9975 3A E1 88     	ld a,(Ctrl_0)
 165+ 9978 CB 77        	bit 6,a
 166+ 997A 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 997C
 168+ 997C CD AA 9B     	call Stop_Amadeus_right
 169+ 997F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9980 18 4D        	jr 8F
 171+ 9982
 172+ 9982 3A BB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9985 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9987 20 46        	jr nz,8F
 175+ 9989
 176+ 9989 3A BD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 998C A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 998D 28 40        	jr z,8F
 179+ 998F
 180+ 998F              ; ---------- ---------- ----------
 181+ 998F              ;
 182+ 998F              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 998F
 184+ 998F 3A CB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9992 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9994 28 11        	jr z,1F
 187+ 9996 38 06        	jr c,6F
 188+ 9998 FE 04        	cp 4
 189+ 999A 28 14        	jr z,7F
 190+ 999C 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 999E
 192+ 999E              ; ---------- ---------- ----------
 193+ 999E              ;
 194+ 999E              ; Perfiles de velocidad
 195+ 999E              ;
 196+ 999E
 197+ 999E 3A BD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 99A1 FE FE        	cp $fe
 199+ 99A3 20 2A        	jr nz,8F
 200+ 99A5 18 10        	jr 3F
 201+ 99A7 3A BD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 99AA FE FD        	cp $fd
 203+ 99AC 20 21        	jr nz,8F
 204+ 99AE 18 07        	jr 3F
 205+ 99B0 3A BD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 99B3 FE FB        	cp $fb
 207+ 99B5 20 18        	jr nz,8F
 208+ 99B7
 209+ 99B7              ; ---------- ---------- ----------
 210+ 99B7
 211+ 99B7              3
 212+ 99B7 CD EA 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 99BA              ;	call Reinicio
 214+ 99BA
 215+ 99BA              ; ---------- ---------- ----------
 216+ 99BA              ;
 217+ 99BA              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 99BA
 219+ 99BA 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 99BC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 99BD CD D6 99     	call DESPLZ_DER
 222+ 99C0 C1           	pop bc
 223+ 99C1 10 F9        	djnz 5B
 224+ 99C3 2A B7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 99C6 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 99C7 22 B7 88     	ld (Posicion_actual),hl
 227+ 99CA CD 41 9C     	call Genera_coordenadas
 228+ 99CD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 99CF
 230+ 99CF              ; ---------- ---------- ----------
 231+ 99CF
 232+ 99CF 2A B7 88     8 ld hl,(Posicion_actual)
 233+ 99D2 CD D6 99     	call DESPLZ_DER
 234+ 99D5 C9           2 ret
 235+ 99D6
 236+ 99D6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 99D6              ;
 238+ 99D6              ;	22/9/22
 239+ 99D6              ;
 240+ 99D6
 241+ 99D6 CD E5 99     DESPLZ_DER call Desplaza_derecha
 242+ 99D9 CD 31 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 99DC CD 5A 9A         call Ciclo_completo
 244+ 99DF 21 E1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 99E2 CB FE        	set 7,(hl)
 246+ 99E4 C9           	ret
 247+ 99E5
 248+ 99E5              ; ******************************************************************************************************************************************************************************************
 249+ 99E5              ;	15/02/23
 250+ 99E5              ;
 251+ 99E5
 252+ 99E5 3A CB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 99E8 47           	ld b,a
 254+ 99E9 2A C3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 99EC 23           1 inc hl
 256+ 99ED 23           	inc hl
 257+ 99EE 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 99F0 22 C3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 99F3 CD 37 8C     	call Extrae_address
 260+ 99F6 22 B9 88     	ld (Puntero_objeto),hl
 261+ 99F9
 262+ 99F9              ; Modifica (Puntero_DESPLZ_izq).
 263+ 99F9
 264+ 99F9              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 99F9              ; Cuántos movimientos hemos hecho ??
 266+ 99F9              ; DE contiene (Puntero_DESPLZ_der).
 267+ 99F9
 268+ 99F9 2A BF 88     7 ld hl,(Indice_Sprite_der)
 269+ 99FC EB           	ex de,hl
 270+ 99FD A7           	and a
 271+ 99FE ED 52        	sbc hl,de
 272+ 9A00 CB 3D        	srl l
 273+ 9A02 3E 08        6 ld a,8
 274+ 9A04 95           	sub l
 275+ 9A05 30 1E        	jr nc,3F
 276+ 9A07
 277+ 9A07              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A07              ; B="0".
 279+ 9A07
 280+ 9A07 04           4 inc b
 281+ 9A08 3C           	inc a
 282+ 9A09 20 FC        	jr nz,4B
 283+ 9A0B 78           	ld a,b
 284+ 9A0C 08           	ex af,af
 285+ 9A0D 2A BF 88     	ld hl,(Indice_Sprite_der)
 286+ 9A10 23           5 inc hl
 287+ 9A11 23           	inc hl
 288+ 9A12 10 FC        	djnz 5B
 289+ 9A14 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A17 CD 37 8C     	call Extrae_address
 291+ 9A1A 22 B9 88     	ld (Puntero_objeto),hl
 292+ 9A1D
 293+ 9A1D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A1D              ; _(Posicion_actual).
 295+ 9A1D
 296+ 9A1D 21 B7 88     	ld hl,Posicion_actual
 297+ 9A20 34           	inc (hl)
 298+ 9A21 08               ex af,af
 299+ 9A22 6F           	ld l,a
 300+ 9A23 18 DD        	jr 6B
 301+ 9A25
 302+ 9A25              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A25
 304+ 9A25 47           3 ld b,a
 305+ 9A26 2A C1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A29 23           2 inc hl
 307+ 9A2A 23           	inc hl
 308+ 9A2B 10 FC        	djnz 2B
 309+ 9A2D 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A30 C9           8 ret
 311+ 9A31
 312+ 9A31              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A31              ;
 314+ 9A31              ;	24/7/22
 315+ 9A31              ;
 316+ 9A31              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A31              ;
 318+ 9A31              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A31              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A31              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A31
 322+ 9A31 3A BD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A34 A7           	and a
 324+ 9A35 20 1F        	jr nz,1F
 325+ 9A37 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A39 32 BD 88         ld (CTRL_DESPLZ),a
 327+ 9A3C
 328+ 9A3C 21 B6 88     	ld hl,Columns
 329+ 9A3F 34           	inc (hl)
 330+ 9A40 3A C9 88     	ld a,(Cuad_objeto)
 331+ 9A43 E6 01        	and 1
 332+ 9A45 28 0F        	jr z,1F
 333+ 9A47 2A B7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A4A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A4B 22 B7 88     	ld (Posicion_actual),hl
 336+ 9A4E CD 41 9C     	call Genera_coordenadas
 337+ 9A51 CD B6 9B     	call Inc_CTRL_DESPLZ
 338+ 9A54 18 03        	jr 2F
 339+ 9A56 CD B6 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A59 C9           2 ret
 341+ 9A5A
 342+ 9A5A              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A5A              ;
 344+ 9A5A              ;	24/7/22
 345+ 9A5A              ;
 346+ 9A5A              ;	Ciclo_completo.
 347+ 9A5A              ;
 348+ 9A5A              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A5A              ;
 350+ 9A5A              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A5A              ; 	Decrementamos (Columns).
 352+ 9A5A              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A5A              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A5A
 355+ 9A5A
 356+ 9A5A 3A BD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A5D FE FF        	cp $ff
 358+ 9A5F 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A61 E6 F0        	and $f0
 360+ 9A63 20 28        	jr nz,3F
 361+ 9A65
 362+ 9A65              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A65
 364+ 9A65 3A BD 88     	ld a,(CTRL_DESPLZ)
 365+ 9A68 47           	ld b,a
 366+ 9A69 3E F8        	ld a,$f8
 367+ 9A6B 80           	add b
 368+ 9A6C 32 BD 88     	ld (CTRL_DESPLZ),a
 369+ 9A6F 18 1C        	jr 3F
 370+ 9A71 21 B6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A74 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A75 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A76 32 BD 88     	ld (CTRL_DESPLZ),a
 374+ 9A79 3A C9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A7C E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A7E 20 0A        	jr nz,2F
 377+ 9A80 2A B7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A83 23           	inc hl
 379+ 9A84 22 B7 88     	ld (Posicion_actual),hl
 380+ 9A87 CD 41 9C     	call Genera_coordenadas
 381+ 9A8A
 382+ 9A8A              ; Inicia el puntero de Sprite.
 383+ 9A8A
 384+ 9A8A CD 4E 8C     2 call Inicia_puntero_objeto_der
 385+ 9A8D C9           3 ret
 386+ 9A8E
 387+ 9A8E              ; ******************************************************************************************************************************************************************************************
 388+ 9A8E              ;
 389+ 9A8E              ;	15/02/23
 390+ 9A8E              ;
 391+ 9A8E              ;	Mov_left.
 392+ 9A8E              ;
 393+ 9A8E              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A8E              ;
 395+ 9A8E              Mov_left
 396+ 9A8E
 397+ 9A8E 21 E1 88     	ld hl,Ctrl_0
 398+ 9A91 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A93              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A93              ; 																	; _ en el caso de que no lo haya.
 401+ 9A93 3A E1 88     	ld a,(Ctrl_0)
 402+ 9A96 CB 77        	bit 6,a
 403+ 9A98 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A9A
 405+ 9A9A CD B0 9B     	call Stop_Amadeus_left
 406+ 9A9D C8           	ret z
 407+ 9A9E 20 4A        	jr nz,8F
 408+ 9AA0
 409+ 9AA0 3A BB 88     11 ld a,(Coordenada_X)
 410+ 9AA3 A7           	and a
 411+ 9AA4 20 44        	jr nz,8F
 412+ 9AA6
 413+ 9AA6 3A BD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9AA9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9AAA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9AAC
 417+ 9AAC              ; ---------- ---------- ----------
 418+ 9AAC
 419+ 9AAC 3A CA 88     	ld a,(Vel_left)
 420+ 9AAF FE 02        	cp 2
 421+ 9AB1 28 0F        	jr z,1F
 422+ 9AB3 38 04        	jr c,6F
 423+ 9AB5 FE 04        	cp 4
 424+ 9AB7 28 12        	jr z,7F
 425+ 9AB9
 426+ 9AB9              ; ---------- ---------- ----------
 427+ 9AB9
 428+ 9AB9 3A BD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9ABC FE F8        	cp $f8
 430+ 9ABE 20 2A        	jr nz,8F
 431+ 9AC0 18 10        	jr 4F
 432+ 9AC2 3A BD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9AC5 FE F9        	cp $f9
 434+ 9AC7 20 21        	jr nz,8F
 435+ 9AC9 18 07        	jr 4F
 436+ 9ACB 3A BD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9ACE FE FB        	cp $fb
 438+ 9AD0 20 18        	jr nz,8F
 439+ 9AD2
 440+ 9AD2              ; ---------- ---------- ----------
 441+ 9AD2
 442+ 9AD2              4
 443+ 9AD2 CD D8 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9AD5              ;	call Reinicio
 445+ 9AD5
 446+ 9AD5              ; ---------- ---------- ----------
 447+ 9AD5
 448+ 9AD5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9AD7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9AD8
 451+ 9AD8              ;	ld hl,(Indice_Sprite_izq)
 452+ 9AD8              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9AD8
 454+ 9AD8 CD F1 9A     	call DESPLZ_IZQ
 455+ 9ADB C1           	pop bc
 456+ 9ADC 10 F9        	djnz 5B
 457+ 9ADE 2A B7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9AE1 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9AE2 22 B7 88     	ld (Posicion_actual),hl
 460+ 9AE5 CD 41 9C     	call Genera_coordenadas
 461+ 9AE8 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9AEA
 463+ 9AEA              ; ---------- ---------- ----------
 464+ 9AEA
 465+ 9AEA              ; Movemos, no hay recolocación.
 466+ 9AEA
 467+ 9AEA 2A B7 88     8 ld hl,(Posicion_actual)
 468+ 9AED CD F1 9A     	call DESPLZ_IZQ
 469+ 9AF0 C9           2 ret
 470+ 9AF1
 471+ 9AF1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9AF1              ;
 473+ 9AF1              ;	22/9/22
 474+ 9AF1
 475+ 9AF1              DESPLZ_IZQ
 476+ 9AF1
 477+ 9AF1 CD 00 9B     	call Desplaza_izquierda
 478+ 9AF4 CD 4C 9B         call modifica_parametros_1er_DESPLZ
 479+ 9AF7 CD 74 9B     	call Ciclo_completo_2
 480+ 9AFA 21 E1 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9AFD CB BE        	res 7,(hl)
 482+ 9AFF C9           	ret
 483+ 9B00
 484+ 9B00              Desplaza_izquierda
 485+ 9B00
 486+ 9B00 3A CA 88     	ld a,(Vel_left)
 487+ 9B03 47           	ld b,a
 488+ 9B04 2A C5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B07 23           1 inc hl
 490+ 9B08 23           	inc hl
 491+ 9B09 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B0B 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B0E CD 37 8C     	call Extrae_address
 494+ 9B11 22 B9 88     	ld (Puntero_objeto),hl
 495+ 9B14
 496+ 9B14              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B14
 498+ 9B14              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B14              ; Cuántos movimientos hemos hecho ??
 500+ 9B14              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B14
 502+ 9B14 2A C1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B17 EB           	ex de,hl
 504+ 9B18 A7           	and a
 505+ 9B19 ED 52        	sbc hl,de
 506+ 9B1B CB 3D        	srl l
 507+ 9B1D 3E 08        6 ld a,8
 508+ 9B1F 95           	sub l
 509+ 9B20 30 1E        	jr nc,3F
 510+ 9B22
 511+ 9B22              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9B22              ; B="0".
 513+ 9B22
 514+ 9B22 04           4 inc b
 515+ 9B23 3C           	inc a
 516+ 9B24 20 FC        	jr nz,4B
 517+ 9B26 78           	ld a,b
 518+ 9B27 08           	ex af,af
 519+ 9B28 2A C1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B2B 23           5 inc hl
 521+ 9B2C 23           	inc hl
 522+ 9B2D 10 FC        	djnz 5B
 523+ 9B2F 22 C5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B32 CD 37 8C     	call Extrae_address
 525+ 9B35 22 B9 88     	ld (Puntero_objeto),hl
 526+ 9B38
 527+ 9B38              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B38              ; _(Posicion_actual).
 529+ 9B38
 530+ 9B38 21 B7 88     	ld hl,Posicion_actual
 531+ 9B3B 35           	dec (hl)
 532+ 9B3C 08           	ex af,af
 533+ 9B3D 6F           	ld l,a
 534+ 9B3E 18 DD        	jr 6B
 535+ 9B40
 536+ 9B40              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B40
 538+ 9B40 47           3 ld b,a
 539+ 9B41 2A BF 88     	ld hl,(Indice_Sprite_der)
 540+ 9B44 23           2 inc hl
 541+ 9B45 23           	inc hl
 542+ 9B46 10 FC        	djnz 2B
 543+ 9B48 22 C3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B4B C9           8 ret
 545+ 9B4C
 546+ 9B4C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B4C              ;
 548+ 9B4C              ;	modifica_parametros_1er_DESPLZ
 549+ 9B4C              ;
 550+ 9B4C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B4C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B4C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B4C
 554+ 9B4C 3A BD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B4F A7           	and a
 556+ 9B50 20 1E        	jr nz,1F
 557+ 9B52 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B53 32 BD 88         ld (CTRL_DESPLZ),a
 559+ 9B56 21 B6 88     	ld hl,Columns
 560+ 9B59 34           	inc (hl)
 561+ 9B5A 3A C9 88     	ld a,(Cuad_objeto)
 562+ 9B5D E6 01        	and 1
 563+ 9B5F 20 0F        	jr nz,1F
 564+ 9B61 2A B7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B64 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B65 22 B7 88     	ld (Posicion_actual),hl
 567+ 9B68 CD 41 9C     	call Genera_coordenadas
 568+ 9B6B CD C7 9B     	call Dec_CTRL_DESPLZ
 569+ 9B6E 18 03        	jr 2F
 570+ 9B70 CD C7 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B73 C9           2 ret
 572+ 9B74
 573+ 9B74              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B74
 575+ 9B74 3A BD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B77 FE F7        	cp $f7
 577+ 9B79 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B7B 30 2C        	jr nc,3F
 579+ 9B7D
 580+ 9B7D              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B7D
 582+ 9B7D 06 00        	ld b,0
 583+ 9B7F 04           4 inc b
 584+ 9B80 3C           	inc a
 585+ 9B81 FE F7        	cp $f7
 586+ 9B83 20 FA        	jr nz,4B
 587+ 9B85 3E FF        	ld a,$ff
 588+ 9B87 90           	sub b
 589+ 9B88 32 BD 88     	ld (CTRL_DESPLZ),a
 590+ 9B8B 18 1C        	jr 3F
 591+ 9B8D
 592+ 9B8D              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B8D
 594+ 9B8D 21 B6 88     1 ld hl,Columns
 595+ 9B90 35           	dec (hl)
 596+ 9B91 AF           	xor a
 597+ 9B92 32 BD 88     	ld (CTRL_DESPLZ),a
 598+ 9B95 3A C9 88     	ld a,(Cuad_objeto)
 599+ 9B98 E6 01        	and 1
 600+ 9B9A 28 0A        	jr z,2F
 601+ 9B9C 2A B7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B9F 2B           	dec hl
 603+ 9BA0 22 B7 88     	ld (Posicion_actual),hl
 604+ 9BA3 CD 41 9C     	call Genera_coordenadas
 605+ 9BA6
 606+ 9BA6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9BA6
 608+ 9BA6 CD 61 8C     2 call Inicia_puntero_objeto_izq
 609+ 9BA9 C9           3 ret
 610+ 9BAA
 611+ 9BAA              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9BAA              ;
 613+ 9BAA              ;	19/10/22
 614+ 9BAA              ;
 615+ 9BAA              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9BAA              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9BAA
 618+ 9BAA 3A BB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9BAD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9BAF C9           	ret
 621+ 9BB0
 622+ 9BB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9BB0              ;
 624+ 9BB0              ;	19/10/22
 625+ 9BB0              ;
 626+ 9BB0              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9BB0              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9BB0
 629+ 9BB0 3A BB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9BB3 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9BB5 C9           	ret
 632+ 9BB6
 633+ 9BB6              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9BB6              ;
 635+ 9BB6              ;	24/7/22
 636+ 9BB6              ;
 637+ 9BB6              ;	Inc_CTRL_DESPLZ
 638+ 9BB6              ;
 639+ 9BB6              ;
 640+ 9BB6              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9BB6
 642+ 9BB6 21 BD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9BB9 3A CB 88     	ld a,(Vel_right)
 644+ 9BBC A7           	and a
 645+ 9BBD 28 06        	jr z,1F
 646+ 9BBF 47           	ld b,a
 647+ 9BC0 34           3 inc (hl)
 648+ 9BC1 10 FD        	djnz 3B
 649+ 9BC3 18 01        	jr 2F
 650+ 9BC5 34           1 inc (hl)
 651+ 9BC6 C9           2 ret
 652+ 9BC7
 653+ 9BC7              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9BC7              ;
 655+ 9BC7              ;	5/2/23
 656+ 9BC7              ;
 657+ 9BC7              ;	Dec_CTRL_DESPLZ
 658+ 9BC7              ;
 659+ 9BC7              ;
 660+ 9BC7              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9BC7
 662+ 9BC7 21 BD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9BCA 3A CA 88     	ld a,(Vel_left)
 664+ 9BCD A7           	and a
 665+ 9BCE 28 06        	jr z,1F
 666+ 9BD0 47           	ld b,a
 667+ 9BD1 35           3 dec (hl)
 668+ 9BD2 10 FD        	djnz 3B
 669+ 9BD4 18 01        	jr 2F
 670+ 9BD6 35           1 dec (hl)
 671+ 9BD7 C9           2 ret
 672+ 9BD8
 673+ 9BD8              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9BD8
 675+ 9BD8 2A B7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9BDB 01 1F 00     	ld bc,31
 677+ 9BDE A7           	and a
 678+ 9BDF ED 4A        	adc hl,bc
 679+ 9BE1 22 B7 88     	ld (Posicion_actual),hl
 680+ 9BE4 21 E1 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9BE7 CB C6        	set 0,(hl)
 682+ 9BE9 C9           	ret
 683+ 9BEA
 684+ 9BEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9BEA
 686+ 9BEA 2A B7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9BED 01 1F 00     	ld bc,31
 688+ 9BF0 A7           	and a
 689+ 9BF1 ED 42        	sbc hl,bc
 690+ 9BF3 22 B7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9BF6 21 E1 88     	ld hl,Ctrl_0
 692+ 9BF9 CB CE        	set 1,(hl)
 693+ 9BFB C9           	ret
 694+ 9BFC
 695+ 9BFC              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9BFC
 697+ 9BFC 24           Reaparece_abajo inc h
 698+ 9BFD 01 E0 17     	ld bc,$17e0
 699+ 9C00 A7           	and a
 700+ 9C01 ED 4A        	adc hl,bc
 701+ 9C03 22 B7 88     	ld (Posicion_actual),hl
 702+ 9C06 21 E1 88     	ld hl,Ctrl_0
 703+ 9C09 CB D6        	set 2,(hl)
 704+ 9C0B C9           	ret
 705+ 9C0C
 706+ 9C0C              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C0C
 708+ 9C0C 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C0F A7           	and a
 710+ 9C10 ED 42        	sbc hl,bc
 711+ 9C12 22 B7 88     	ld (Posicion_actual),hl
 712+ 9C15 21 E1 88     	ld hl,Ctrl_0
 713+ 9C18 CB DE        	set 3,(hl)
 714+ 9C1A C9           	ret
 715+ 9C1B
 716+ 9C1B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C1B              ;
 718+ 9C1B              ;	15/07/23
 719+ 9C1B
 720+ 9C1B              Reinicio
 721+ 9C1B
 722+ 9C1B              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C1B
 724+ 9C1B AF           	xor a
 725+ 9C1C 21 E6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9C1F CD 3D 9C     	call Limpia_contenido_hl
 727+ 9C22
 728+ 9C22 21 B7 88     	ld hl,Posicion_actual
 729+ 9C25 CD 3D 9C     	call Limpia_contenido_hl
 730+ 9C28
 731+ 9C28 CD 6D 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C2B CD F7 9E     	call Inicia_Puntero_mov
 733+ 9C2E
 734+ 9C2E 21 E8 88     	ld hl,Incrementa_puntero
 735+ 9C31 06 05        	ld b,5
 736+ 9C33 77           1 ld (hl),a
 737+ 9C34 23           	inc hl
 738+ 9C35 10 FC        	djnz 1B
 739+ 9C37
 740+ 9C37 21 F2 88     	ld hl,Ctrl_2
 741+ 9C3A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C3C
 743+ 9C3C C9           	ret
 744+ 9C3D
 745+ 9C3D 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C3E 23           	inc hl
 747+ 9C3F 77           	ld (hl),a
 748+ 9C40 C9           	ret
 749+ 9C41
 750+ 9C41
# file closed: Direcciones.asm
1584  9C41              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C41              ; ------------------------------------------------------------------------
   2+ 9C41              ;
   3+ 9C41              ;	02/04/23
   4+ 9C41              ;
   5+ 9C41              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C41              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C41              ;
   8+ 9C41              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C41              ;
  10+ 9C41              ;	Modifica: A,BC y DE.
  11+ 9C41
  12+ 9C41 C5           Genera_coordenadas push bc
  13+ 9C42 E5           	push hl
  14+ 9C43 D5           	push de
  15+ 9C44
  16+ 9C44 2A B7 88     	ld hl,(Posicion_actual)
  17+ 9C47
  18+ 9C47 7D           	ld a,l
  19+ 9C48 E6 1F        	and $1f
  20+ 9C4A 32 BB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C4D
  22+ 9C4D CD B6 98     	call calcula_tercio
  23+ 9C50 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C51
  25+ 9C51 1E 00        	ld e,0
  26+ 9C53 7D           	ld a,l
  27+ 9C54 E6 E0        	and $e0
  28+ 9C56 28 01        	jr z,1F
  29+ 9C58 04           	inc b
  30+ 9C59
  31+ 9C59 04           1 inc b
  32+ 9C5A 05           	dec b
  33+ 9C5B 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C5D              ;														; _ , salimos.
  35+ 9C5D 1C           3 inc e
  36+ 9C5E D6 20        	sub 32
  37+ 9C60 20 FB        	jr nz,3B
  38+ 9C62 10 F5        	djnz 1B
  39+ 9C64
  40+ 9C64 7B           2 ld a,e
  41+ 9C65 32 BC 88     	ld (Coordenada_y),a
  42+ 9C68
  43+ 9C68 D1           	pop de
  44+ 9C69 E1           	pop hl
  45+ 9C6A C1           	pop bc
  46+ 9C6B
  47+ 9C6B C9           	ret
  48+ 9C6C
  49+ 9C6C              ; ------------------------------------------------------------------------
  50+ 9C6C              ;	28/05/23
  51+ 9C6C              ;
  52+ 9C6C              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C6C              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C6C              ;
  55+ 9C6C              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C6C              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C6C              ;
  58+ 9C6C              ;		DE="$120d"
  59+ 9C6C              ;
  60+ 9C6C              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C6C              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C6C              ;
  63+ 9C6C              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C6C
  65+ 9C6C              ;	Modifica: A,BC y DE.
  66+ 9C6C
  67+ 9C6C
  68+ 9C6C              Genera_coordenadas_disparo
  69+ 9C6C
  70+ 9C6C              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C6C
  72+ 9C6C 7D           	ld a,l
  73+ 9C6D E6 1F        	and $1f
  74+ 9C6F 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C70 CD B6 98     	call calcula_tercio
  76+ 9C73 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C74 1E 00        	ld e,0
  78+ 9C76 7D           	ld a,l
  79+ 9C77 E6 E0        	and $e0
  80+ 9C79 28 01        	jr z,1F
  81+ 9C7B 04           	inc b
  82+ 9C7C 1C           1 inc e
  83+ 9C7D D6 20        	sub 32
  84+ 9C7F 20 FB        	jr nz,1B
  85+ 9C81 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C83 C9           	ret
  87+ 9C84
# file closed: Genera_coordenadas.asm
1585  9C84              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C84              ; Relojes y temporizaciones.
   2+ 9C84
   3+ 9C84              ; ------------------------------------------------------
   4+ 9C84              ;
   5+ 9C84              ;	16/7/23
   6+ 9C84              ;
   7+ 9C84              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C84              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C84              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C84              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C84              ;
  12+ 9C84              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C84              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C84
  15+ 9C84              ; Disparo_entidad db 1
  16+ 9C84              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C84              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C84
  19+ 9C84              Habilita_disparos
  20+ 9C84
  21+ 9C84 7E           	ld a,(hl)
  22+ 9C85 A7           	and a
  23+ 9C86 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C87
  25+ 9C87 EB           	ex de,hl
  26+ 9C88
  27+ 9C88 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C89 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C8A
  30+ 9C8A              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C8A
  32+ 9C8A 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C8B 7E           	ld a,(hl)
  34+ 9C8C 23           	inc hl
  35+ 9C8D 77           	ld (hl),a
  36+ 9C8E
  37+ 9C8E EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C8F 3E 01        	ld a,1
  39+ 9C91 77           	ld (hl),a
  40+ 9C92 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1586  9C93              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C93
   2+ 9C93
   3+ 9C93              ;   07/07/23
   4+ 9C93              ;
   5+ 9C93              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C93              ;
   7+ 9C93              ;   Codificación:
   8+ 9C93              ;
   9+ 9C93              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C93              ;
  11+ 9C93              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C93              ;
  13+ 9C93              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C93              ;
  15+ 9C93              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C93              ;
  17+ 9C93              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C93              ;                               ..... %01000010 Vel_up 4
  19+ 9C93              ;                                               Vel_down 2
  20+ 9C93              ;                               ..... $42
  21+ 9C93              ;
  22+ 9C93              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C93              ;
  24+ 9C93              ;                               ..... %01000010 Vel_left 4
  25+ 9C93              ;                                               Vel_right 2
  26+ 9C93              ;                               ..... $42
  27+ 9C93              ;
  28+ 9C93              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C93              ;
  30+ 9C93              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C93              ;
  32+ 9C93              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C93              ;
  34+ 9C93              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C93              ;                                     $53
  36+ 9C93              ;
  37+ 9C93              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C93              ;
  39+ 9C93              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C93              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C93              ;
  42+ 9C93              ;                       Arriba ..... $81
  43+ 9C93              ;                       Arriba - izquierda ..... $a1
  44+ 9C93              ;                       Arriba - derecha ..... $91
  45+ 9C93              ;
  46+ 9C93              ;                       Abajo ..... $41
  47+ 9C93              ;                       Abajo - izquierda ..... $61
  48+ 9C93              ;                       Abajo - derecha ..... $51
  49+ 9C93              ;
  50+ 9C93              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C93              ;
  52+ 9C93              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C93              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C93              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C93              ;
  56+ 9C93              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C93              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C93              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C93              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C93              ;
  61+ 9C93              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C93              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C93              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C93              ;
  65+ 9C93              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C93              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C93              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C93              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C93
  70+ 9C93              ; ----- ----- ----- ----- -----
  71+ 9C93
  72+ 9C93 BF 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C95 C7 9C            defw F_1
  74+ 9C97 D1 9C            defw F_2
  75+ 9C99 DB 9C            defw Codo_abajo_derecha
  76+ 9C9B 0F 9D            defw Derecha_y_subiendo
  77+ 9C9D 19 9D            defw Derecha_y_subiendo_1
  78+ 9C9F 23 9D            defw F_3
  79+ 9CA1 2D 9D            defw F_4
  80+ 9CA3 37 9D            defw Derecha_y_bajando
  81+ 9CA5 41 9D            defw Derecha_y_bajando_1
  82+ 9CA7 4B 9D            defw Derecha_y_bajando_2
  83+ 9CA9 55 9D            defw Codo_derecha_abajo
  84+ 9CAB 85 9D            defw Codo_abajo_izq.
  85+ 9CAD B9 9D            defw Izquierda_y_subiendo
  86+ 9CAF C3 9D            defw Izquierda_y_subiendo_1
  87+ 9CB1 CD 9D            defw F_5
  88+ 9CB3 D7 9D            defw F_6
  89+ 9CB5 E1 9D            defw Izquierda_y_bajando
  90+ 9CB7 EB 9D            defw Izquierda_y_bajando_1
  91+ 9CB9 F5 9D            defw Izquierda_y_bajando_2
  92+ 9CBB FF 9D            defw Codo_izquierda_abajo
  93+ 9CBD 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9CBF
  95+ 9CBF 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9CC3 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9CC7
  98+ 9CC7 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9CCB 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9CCF 08 00
 100+ 9CD1 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9CD5 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9CD9 0F FE
 102+ 9CDB
 103+ 9CDB 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9CDF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9CE3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9CE7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9CEB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9CEF 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9CF3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9CF7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CFB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CFF 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D03 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D07 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D0B 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D0F
 117+ 9D0F 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D13 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D17 06 00
 119+ 9D19
 120+ 9D19 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D1D 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D21 02 00
 122+ 9D23
 123+ 9D23 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D27 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D2B 04 00
 125+ 9D2D 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D31 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D35 08 00
 127+ 9D37
 128+ 9D37 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D3B 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D3F 02 00
 130+ 9D41
 131+ 9D41 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D45 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D49 06 00
 133+ 9D4B
 134+ 9D4B 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D4F 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D53 06 00
 136+ 9D55
 137+ 9D55              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D55
 139+ 9D55 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D59 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D5D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D61 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D65 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D69 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D6D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D71 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D75 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D79 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D7D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D81 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D85
 152+ 9D85 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D89 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D8D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D91 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D95 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D99 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D9D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9DA1 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9DA5 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9DA9 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9DAD 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9DB1 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9DB5 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9DB9
 166+ 9DB9 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9DBD 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9DC1 06 00
 168+ 9DC3
 169+ 9DC3 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9DC7 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9DCB 02 00
 171+ 9DCD
 172+ 9DCD 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9DD1 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9DD5 04 00
 174+ 9DD7 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9DDB 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9DDF 08 00
 176+ 9DE1
 177+ 9DE1 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9DE5 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9DE9 02 00
 179+ 9DEB
 180+ 9DEB 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9DEF 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9DF3 06 00
 182+ 9DF5
 183+ 9DF5 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9DF9 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DFD 06 00
 185+ 9DFF
 186+ 9DFF 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E03 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E07 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E0B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E0F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E13 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E17 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E1B 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E1F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9E23 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E27 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E2B 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E2F
 199+ 9E2F              ; ----- ----- ----- ----- -----
 200+ 9E2F              ;
 201+ 9E2F              ;   27/06/23
 202+ 9E2F
 203+ 9E2F              Movimiento
 204+ 9E2F
 205+ 9E2F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E2F
 207+ 9E2F              ;    ld hl,(Posicion_actual)
 208+ 9E2F
 209+ 9E2F 3A F2 88         ld a,(Ctrl_2)
 210+ 9E32 CB 57            bit 2,a
 211+ 9E34 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E36
 213+ 9E36 2A E4 88         ld hl,(Puntero_mov)
 214+ 9E39 7E               ld a,(hl)
 215+ 9E3A
 216+ 9E3A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E3A
 218+ 9E3A              Inicia_desplazamiento.
 219+ 9E3A
 220+ 9E3A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E3A
 222+ 9E3A CD 2E 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E3D
 224+ 9E3D              ; Iniciamos (Repetimos_mov).
 225+ 9E3D
 226+ 9E3D 7E               ld a,(hl)
 227+ 9E3E E6 0F            and $0f
 228+ 9E40 32 EA 88         ld (Repetimos_desplazamiento),a
 229+ 9E43 32 EB 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E46
 231+ 9E46              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E46
 233+ 9E46 23               inc hl
 234+ 9E47 7E               ld a,(hl)
 235+ 9E48 32 ED 88         ld (Cola_de_desplazamiento),a
 236+ 9E4B 2B               dec hl
 237+ 9E4C
 238+ 9E4C 21 F2 88         ld hl,Ctrl_2
 239+ 9E4F CB D6            set 2,(hl)
 240+ 9E51
 241+ 9E51              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E51              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E51
 244+ 9E51              Desplazamiento_iniciado
 245+ 9E51
 246+ 9E51 CD 02 9F         call Aplica_desplazamiento
 247+ 9E54
 248+ 9E54 3A F2 88         ld a,(Ctrl_2)
 249+ 9E57 CB 67            bit 4,a
 250+ 9E59 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E5A
 252+ 9E5A 21 EA 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E5D 35               dec (hl)
 254+ 9E5E C0               ret nz
 255+ 9E5F
 256+ 9E5F              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E5F              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E5F              ; Analiza (Cola_de_desplazamiento).
 259+ 9E5F
 260+ 9E5F 3A ED 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E62 A7               and a
 262+ 9E63 CC 57 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E66 28 30            jr z,Reinicia_el_movimiento
 264+ 9E68
 265+ 9E68 FE FF            cp $ff
 266+ 9E6A 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E6C
 268+ 9E6C FE FE            cp $fe
 269+ 9E6E CC DB 9E         call z,Fijamos_bucle
 270+ 9E71 28 25            jr z,Reinicia_el_movimiento
 271+ 9E73
 272+ 9E73 FE FD            cp $fd
 273+ 9E75 20 11            jr nz,1F
 274+ 9E77
 275+ 9E77              ; ---
 276+ 9E77              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E77
 278+ 9E77 3A F2 88         ld a,(Ctrl_2)
 279+ 9E7A CB 5F            bit 3,a
 280+ 9E7C 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E7E
 282+ 9E7E              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E7E
 284+ 9E7E 21 F2 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E81 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E83
 287+ 9E83 CD EC 9E         call Inicia_Repetimos_movimiento
 288+ 9E86 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E88              ; ---
 290+ 9E88
 291+ 9E88 FE 01        1 cp 1
 292+ 9E8A CA C5 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E8D
 294+ 9E8D 3D               dec a
 295+ 9E8E 32 ED 88         ld (Cola_de_desplazamiento),a
 296+ 9E91
 297+ 9E91 3A EB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E94 32 EA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E97              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E97 C9               ret
 301+ 9E98
 302+ 9E98              Reinicia_el_movimiento
 303+ 9E98
 304+ 9E98 3A F2 88         ld a,(Ctrl_2)
 305+ 9E9B CB 5F            bit 3,a
 306+ 9E9D 28 1B            jr z,2F
 307+ 9E9F
 308+ 9E9F              ; (Cola_de_desplazamiento)="254".
 309+ 9E9F
 310+ 9E9F 21 EC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9EA2 35               dec (hl)
 312+ 9EA3 20 15            jr nz,2F
 313+ 9EA5
 314+ 9EA5              ; Fin de las repeticiones del último movimiento.
 315+ 9EA5
 316+ 9EA5 21 F2 88         ld hl,Ctrl_2
 317+ 9EA8 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9EAA
 319+ 9EAA 2A E4 88         ld hl,(Puntero_mov)
 320+ 9EAD 23               inc hl
 321+ 9EAE 23               inc hl
 322+ 9EAF 23               inc hl
 323+ 9EB0 22 E4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9EB3              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9EB3 7E               ld a,(hl)
 326+ 9EB4 32 ED 88         ld (Cola_de_desplazamiento),a
 327+ 9EB7
 328+ 9EB7 C3 5F 9E         jp Cola
 329+ 9EBA
 330+ 9EBA CD F7 9E     2 call Inicia_Puntero_mov
 331+ 9EBD
 332+ 9EBD 21 F2 88         ld hl,Ctrl_2
 333+ 9EC0 CB 96            res 2,(hl)
 334+ 9EC2
 335+ 9EC2 C3 2F 9E         jp Movimiento
 336+ 9EC5
 337+ 9EC5              Siguiente_desplazamiento
 338+ 9EC5
 339+ 9EC5              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9EC5              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9EC5
 342+ 9EC5 21 F2 88         ld hl,Ctrl_2
 343+ 9EC8 CB 96            res 2,(hl)
 344+ 9ECA
 345+ 9ECA 2A E4 88         ld hl,(Puntero_mov)
 346+ 9ECD 23               inc hl
 347+ 9ECE 23               inc hl
 348+ 9ECF 22 E4 88         ld (Puntero_mov),hl
 349+ 9ED2
 350+ 9ED2 7E               ld a,(hl)
 351+ 9ED3 A7               and a
 352+ 9ED4 CC 57 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9ED7 CA 98 9E         jp z,Reinicia_el_movimiento
 354+ 9EDA
 355+ 9EDA C9               ret
 356+ 9EDB
 357+ 9EDB              ; Subrutinas -----------------------------------------
 358+ 9EDB              ; ---------- --------- --------- ---------- ----------
 359+ 9EDB              ;
 360+ 9EDB              ;   24/07/23
 361+ 9EDB              ;
 362+ 9EDB              ;   Fijamos_bucle
 363+ 9EDB              ;
 364+ 9EDB              ;
 365+ 9EDB
 366+ 9EDB              Fijamos_bucle
 367+ 9EDB
 368+ 9EDB 3A E8 88         ld a,(Incrementa_puntero)
 369+ 9EDE 3C               inc a
 370+ 9EDF 32 E9 88         ld (Incrementa_puntero_backup),a
 371+ 9EE2
 372+ 9EE2 CD 57 9F         call Incrementa_Puntero_indice_mov
 373+ 9EE5 2A E2 88         ld hl,(Puntero_indice_mov)
 374+ 9EE8 22 E6 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9EEB C9               ret
 376+ 9EEC
 377+ 9EEC              ; ---------- --------- --------- ---------- ----------
 378+ 9EEC              ;
 379+ 9EEC              ;   07/7/23
 380+ 9EEC              ;
 381+ 9EEC              ;   Inicia_Repetimos_movimiento
 382+ 9EEC              ;
 383+ 9EEC              ;
 384+ 9EEC
 385+ 9EEC              Inicia_Repetimos_movimiento
 386+ 9EEC
 387+ 9EEC              ; Iniciamos (Repetimos_movimiento).
 388+ 9EEC
 389+ 9EEC DD 2A E4 88      ld ix,(Puntero_mov)
 390+ 9EF0 DD 7E 02         ld a,(ix+2)
 391+ 9EF3 32 EC 88         ld (Repetimos_movimiento),a
 392+ 9EF6
 393+ 9EF6 C9               ret
 394+ 9EF7
 395+ 9EF7              ; ---------- --------- --------- ---------- ----------
 396+ 9EF7              ;
 397+ 9EF7              ;   26/6/23
 398+ 9EF7              ;
 399+ 9EF7              ;   Inicia_Puntero_mov
 400+ 9EF7              ;
 401+ 9EF7              ;
 402+ 9EF7
 403+ 9EF7 2A E2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9EFA 5E               ld e,(hl)
 405+ 9EFB 23               inc hl
 406+ 9EFC 56               ld d,(hl)
 407+ 9EFD EB               ex de,hl
 408+ 9EFE 22 E4 88         ld (Puntero_mov),hl
 409+ 9F01 C9               ret
 410+ 9F02
 411+ 9F02              ; ---------- --------- --------- ---------- ----------
 412+ 9F02              ;
 413+ 9F02              ;   27/06/23
 414+ 9F02              ;
 415+ 9F02              ;   Aplica_movimiento.
 416+ 9F02
 417+ 9F02              Aplica_desplazamiento
 418+ 9F02
 419+ 9F02              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F02
 421+ 9F02 2A E4 88         ld hl, (Puntero_mov)
 422+ 9F05
 423+ 9F05 7E               ld a,(hl)
 424+ 9F06 E6 F0            and $f0
 425+ 9F08 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F09
 427+ 9F09 CB 7E            bit 7,(hl)
 428+ 9F0B 28 03            jr z,1F
 429+ 9F0D CD 2D 99         call Mov_up
 430+ 9F10 2A E4 88     1 ld hl, (Puntero_mov)
 431+ 9F13 CB 76            bit 6,(hl)
 432+ 9F15 28 03            jr z,2F
 433+ 9F17 CD FC 98         call Mov_down
 434+ 9F1A 2A E4 88     2 ld hl, (Puntero_mov)
 435+ 9F1D CB 6E            bit 5,(hl)
 436+ 9F1F 28 03            jr z,3F
 437+ 9F21 CD 8E 9A         call Mov_left
 438+ 9F24 2A E4 88     3 ld hl, (Puntero_mov)
 439+ 9F27 CB 66            bit 4,(hl)
 440+ 9F29 C8               ret z
 441+ 9F2A CD 70 99         call Mov_right
 442+ 9F2D C9               ret
 443+ 9F2E
 444+ 9F2E              ; ---------- --------- --------- ---------- ----------
 445+ 9F2E              ;
 446+ 9F2E              ;   26/06/23
 447+ 9F2E              ;
 448+ 9F2E              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F2E
 450+ 9F2E              Ajusta_velocidad_desplazamiento
 451+ 9F2E
 452+ 9F2E              ; 1er byte de la cadena de movimiento.
 453+ 9F2E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F2E
 455+ 9F2E CD 4C 9F         call Extrae_nibble_alto
 456+ 9F31
 457+ 9F31 32 CC 88         ld (Vel_up),a
 458+ 9F34 79               ld a,c
 459+ 9F35 E6 0F            and $0f
 460+ 9F37 32 CD 88         ld (Vel_down),a
 461+ 9F3A
 462+ 9F3A              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F3A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F3A
 465+ 9F3A 23               inc hl
 466+ 9F3B CD 4C 9F         call Extrae_nibble_alto
 467+ 9F3E
 468+ 9F3E 32 CA 88         ld (Vel_left),a
 469+ 9F41 79               ld a,c
 470+ 9F42 E6 0F            and $0f
 471+ 9F44 32 CB 88         ld (Vel_right),a
 472+ 9F47
 473+ 9F47              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F47
 475+ 9F47 23               inc hl
 476+ 9F48 22 E4 88         ld (Puntero_mov),hl
 477+ 9F4B C9               ret
 478+ 9F4C
 479+ 9F4C 06 04        Extrae_nibble_alto ld b,4
 480+ 9F4E 7E               ld a,(hl)
 481+ 9F4F 4F               ld c,a
 482+ 9F50 E6 F0            and $f0
 483+ 9F52 CB 3F        1 srl a
 484+ 9F54 10 FC            djnz 1B
 485+ 9F56 C9               ret
 486+ 9F57
 487+ 9F57              ; ---------- --------- --------- ---------- ----------
 488+ 9F57              ;
 489+ 9F57              ;   5/7/23
 490+ 9F57              ;
 491+ 9F57              ;   Incrementa_Puntero_indice_mov
 492+ 9F57
 493+ 9F57              Incrementa_Puntero_indice_mov
 494+ 9F57
 495+ 9F57 21 E8 88         ld hl,Incrementa_puntero
 496+ 9F5A 34               inc (hl)
 497+ 9F5B
 498+ 9F5B 2A E2 88         ld hl,(Puntero_indice_mov)
 499+ 9F5E 01 02 00         ld bc,2
 500+ 9F61 A7               and a
 501+ 9F62 09               add hl,bc
 502+ 9F63 22 E2 88         ld (Puntero_indice_mov),hl
 503+ 9F66
 504+ 9F66 7E               ld a,(hl)
 505+ 9F67 A7               and a
 506+ 9F68
 507+ 9F68              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F68
 509+ 9F68              ;    jr z,$
 510+ 9F68
 511+ 9F68              ;! Reinicia el Patrón de movimiento.
 512+ 9F68
 513+ 9F68 CC 6D 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F6B
 515+ 9F6B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F6C
 517+ 9F6C C9               ret
 518+ 9F6D
 519+ 9F6D
 520+ 9F6D              ; ---------- --------- --------- ---------- ----------
 521+ 9F6D              ;
 522+ 9F6D              ;   24/07/23
 523+ 9F6D              ;
 524+ 9F6D              ;   Inicializa_Puntero_indice_mov
 525+ 9F6D
 526+ 9F6D              Inicializa_Puntero_indice_mov
 527+ 9F6D
 528+ 9F6D              ; Existe etiqueta de bucle principal???
 529+ 9F6D
 530+ 9F6D 2A E6 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F70 24               inc h
 532+ 9F71 25               dec h
 533+ 9F72 28 05            jr z,2F
 534+ 9F74
 535+ 9F74 22 E2 88         ld (Puntero_indice_mov),hl
 536+ 9F77 18 14            jr 3F
 537+ 9F79
 538+ 9F79              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F79
 540+ 9F79 3A E8 88     2 ld a,(Incrementa_puntero)
 541+ 9F7C 47               ld b,a
 542+ 9F7D
 543+ 9F7D 2A E2 88         ld hl,(Puntero_indice_mov)
 544+ 9F80 2B           1 dec hl
 545+ 9F81 2B               dec hl
 546+ 9F82 10 FC            djnz 1B
 547+ 9F84 22 E2 88         ld (Puntero_indice_mov),hl
 548+ 9F87
 549+ 9F87 AF               xor a
 550+ 9F88 32 E8 88         ld (Incrementa_puntero),a
 551+ 9F8B 18 06            jr 4F
 552+ 9F8D
 553+ 9F8D 3A E9 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F90 32 E8 88         ld (Incrementa_puntero),a
 555+ 9F93 C9           4 ret
 556+ 9F94
 557+ 9F94
 558+ 9F94
# file closed: Patrones_de_mov.asm
1587  9F94              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F94              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F94              ;
   3+ 9F94              ;	4/12/23
   4+ 9F94              ;
   5+ 9F94              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F94
   7+ 9F94              ;	ADC HL,SP	LD (addr),SP
   8+ 9F94              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F94              ;	ADD IX,SP	LD SP,nn
  10+ 9F94              ; 	ADD IY,SP	LD SP,HL
  11+ 9F94              ;				LD SP,IX
  12+ 9F94              ;	DEC SP		LD SP,IY
  13+ 9F94
  14+ 9F94              ;	EX (SP),HL
  15+ 9F94              ;	EX (SP),IX
  16+ 9F94              ;	EX (SP),IY
  17+ 9F94
  18+ 9F94              ;	INC SP
  19+ 9F94
  20+ 9F94                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 05 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 D5 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 E1 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7FB0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7FB2              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7FB2
  50+ 7FB2 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 7FB5
  52+ 7FB5 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 7FB6 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 7FB8 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7FBA
  56+ 7FBA              ; Disparo o entidad?
  57+ 7FBA
  58+ 7FBA 3A F4 88         ld a,(Ctrl_1)
  59+ 7FBD CB 47            bit 0,a
  60+ 7FBF 28 05            jr z,2F
  61+ 7FC1
  62+ 7FC1 2A 0D 89         ld hl,(Stack_snapshot_disparos)
  63+ 7FC4 18 0F            jr 4F
  64+ 7FC6
  65+ 7FC6              ; No es disparo. Entidad/Amadeus ????
  66+ 7FC6
  67+ 7FC6 3A E1 88     2 ld a,(Ctrl_0)
  68+ 7FC9 CB 77            bit 6,a
  69+ 7FCB 28 05            jr z,7F
  70+ 7FCD
  71+ 7FCD              ; Guardamos foto de Amadeus.
  72+ 7FCD
  73+ 7FCD 2A 11 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7FD0 18 03            jr 4F
  75+ 7FD2
  76+ 7FD2 2A 0B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 7FD5
  78+ 7FD5 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 7FD7
  80+ 7FD7 D1           1 pop de
  81+ 7FD8 73               ld (hl),e
  82+ 7FD9 23               inc hl
  83+ 7FDA 72               ld (hl),d
  84+ 7FDB 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7FDC 10 F9            djnz 1B
  86+ 7FDE
  87+ 7FDE              ; Disparo o entidad ?
  88+ 7FDE
  89+ 7FDE 3A F4 88         ld a,(Ctrl_1)
  90+ 7FE1 CB 47            bit 0,a
  91+ 7FE3 28 05            jr z,5F
  92+ 7FE5
  93+ 7FE5 22 0D 89         ld (Stack_snapshot_disparos),hl
  94+ 7FE8 18 13            jr 6F
  95+ 7FEA
  96+ 7FEA              ; Entidad o Amadeus ?
  97+ 7FEA
  98+ 7FEA 3A E1 88     5 ld a,(Ctrl_0)
  99+ 7FED CB 77            bit 6,a
 100+ 7FEF 28 09            jr z,8F
 101+ 7FF1
 102+ 7FF1 22 11 89         ld (End_Snapshot_Amadeus),hl
 103+ 7FF4 ED 7B 05 89      ld sp,(Stack)
 104+ 7FF8 FB               ei
 105+ 7FF9 C9               ret
 106+ 7FFA
 107+ 7FFA 22 0B 89     8 ld (Stack_snapshot),hl
 108+ 7FFD ED 7B 05 89  6 ld sp,(Stack)
 109+ 8001
 110+ 8001 FB               ei
 111+ 8002 C9               ret
 112+ 8003
 113+ 8003              ; -----------------------------------------------------------------------------
 114+ 8003              ;
 115+ 8003              ;   21/11/23
 116+ 8003
 117+ 8003              Limpia_y_reinicia_Stack_Snapshot
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos.
 120+ 8003
 121+ 8003 2A 0B 89         ld hl,(Stack_snapshot)
 122+ 8006 7D               ld a,l
 123+ 8007 A7               and a
 124+ 8008 C8               ret z   ;   Salimos si el álbum está vacío.
 125+ 8009
 126+ 8009 47               ld b,a
 127+ 800A 04               inc b
 128+ 800B
 129+ 800B 36 00        1 ld (hl),0
 130+ 800D 2D               dec l
 131+ 800E 10 FB            djnz 1B
 132+ 8010
 133+ 8010              ;   Reinicializa (Stack_snapshot).
 134+ 8010
 135+ 8010 AF               xor a
 136+ 8011 32 0B 89         ld (Stack_snapshot),a
 137+ 8014
 138+ 8014 C9               ret
# file closed: Guarda_foto_registros.asm
1588  8015
1589  8015              	SAVESNA "Pruebas.sna", START
1590  8015
1591  8015
1592  8015
1593  8015
# file closed: Banco_de_pruebas.asm
