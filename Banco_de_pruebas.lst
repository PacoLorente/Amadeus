# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01 CD 1D 8E     	call Frame
  15  AA04 FB           	ei
  16  AA05 ED 4D        	reti
  17  AA07
  18  AA07              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  19  AA07
  20  AA07              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA07              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA07              ;
   3+ AA07              ;	17/02/23
   4+ AA07              ;
   5+ AA07              ;	Sprites e índices.
   6+ AA07
   7+ AA07              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 44 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 4A 89        	defw End_Snapshot_1
 267+ 8500 4E 89        	defw End_Snapshot_2
 268+ 8502 52 89        	defw End_Snapshot_3
 269+ 8504 46 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 4C 89        	defw End_Snapshot_disparos_1
 271+ 8508 50 89        	defw End_Snapshot_disparos_2
 272+ 850A 54 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  21  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E1 85        	defw Caja_1
  98+ 858E 24 86        	defw Caja_2
  99+ 8590 67 86        	defw Caja_3
 100+ 8592 AA 86        	defw Caja_4
 101+ 8594 ED 86        	defw Caja_5
 102+ 8596 30 87        	defw Caja_6
 103+ 8598 73 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00        	db 0,0											; Variables_de_borrado
 129+ 85BA 00 00        	defw 0											;	" " " " " " "
 130+ 85BC 00 00        	defw 0											;	" " " " " " "
 131+ 85BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 132+ 85C2
 133+ 85C2 00 00        	db 0,0											; Variables_de_pintado
 134+ 85C4 00 00        	defw 0											;	" " " " " " "
 135+ 85C6 00 00        	defw 0											;	" " " " " " "
 136+ 85C8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85CC
 138+ 85CC 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 139+ 85CE
 140+ 85CE 00           	db 0											; (Autoriza_movimiento).
 141+ 85CF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 141+ 85D3 00 00
 142+ 85D5 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 143+ 85D8
 144+ 85D8 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85DA 00           	db 0											; (Cola_de_desplazamiento).
 146+ 85DB
 147+ 85DB 00           	db 0 											; (Columnas).
 148+ 85DC 00 00        	defw 0											; (Limite_horizontal).
 149+ 85DE 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 150+ 85E1
 151+ 85E1              ; ---------- ---------- ---------- ---------- ----------
 152+ 85E1
 153+ 85E1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 154+ 85E3 00 00        	defw 0											; (Posicion_actual).
 155+ 85E5 00 00        	defw 0 											; (Puntero_objeto).
 156+ 85E7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 157+ 85EA
 158+ 85EA 00           	db %00000000 									; (Attr).
 159+ 85EB
 160+ 85EB 00 00        	defw 0											; (Indice_Sprite_der).
 161+ 85ED 00 00        	defw 0											; (Indice_Sprite_izq).
 162+ 85EF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 163+ 85F1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 164+ 85F3
 165+ 85F3 00 00        	defw 0											; (Posicion_inicio).
 166+ 85F5 00           	db 0											; (Cuad_objeto).
 167+ 85F6
 168+ 85F6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 169+ 85FA
 170+ 85FA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 171+ 85FB
 172+ 85FB 00 00        	db 0,0										    ; Variables_de_borrado
 173+ 85FD 00 00        	defw 0											;	" " " " " " "
 174+ 85FF 00 00        	defw 0											;	" " " " " " "
 175+ 8601 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 176+ 8605
 177+ 8605 00 00        	db 0,0											; Variables_de_pintado
 178+ 8607 00 00        	defw 0											;	" " " " " " "
 179+ 8609 00 00        	defw 0											;	" " " " " " "
 180+ 860B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860F
 182+ 860F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 183+ 8611
 184+ 8611 00           	db 0											; (Autoriza_movimiento).
 185+ 8612 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 185+ 8616 00 00
 186+ 8618 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 187+ 861B
 188+ 861B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 189+ 861D 00           	db 0											; (Cola_de_desplazamiento).
 190+ 861E
 191+ 861E 00           	db 0 											; (Columnas).
 192+ 861F 00 00        	defw 0											; (Limite_horizontal).
 193+ 8621 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 194+ 8624
 195+ 8624              ; ---------- ---------- ---------- ---------- ----------
 196+ 8624
 197+ 8624 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 198+ 8626 00 00        	defw 0											; (Posicion_actual).
 199+ 8628 00 00        	defw 0 											; (Puntero_objeto).
 200+ 862A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 201+ 862D
 202+ 862D 00           	db %00000000 									; (Attr).
 203+ 862E
 204+ 862E 00 00        	defw 0											; (Indice_Sprite_der).
 205+ 8630 00 00        	defw 0											; (Indice_Sprite_izq).
 206+ 8632 00 00        	defw 0											; (Puntero_DESPLZ_der).
 207+ 8634 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 208+ 8636
 209+ 8636 00 00        	defw 0											; (Posicion_inicio).
 210+ 8638 00           	db 0											; (Cuad_objeto).
 211+ 8639
 212+ 8639 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 213+ 863D
 214+ 863D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 215+ 863E
 216+ 863E 00 00        	db 0,0										    ; Variables_de_borrado
 217+ 8640 00 00        	defw 0											;	" " " " " " "
 218+ 8642 00 00        	defw 0											;	" " " " " " "
 219+ 8644 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 8648
 221+ 8648 00 00        	db 0,0											; Variables_de_pintado
 222+ 864A 00 00        	defw 0											;	" " " " " " "
 223+ 864C 00 00        	defw 0											;	" " " " " " "
 224+ 864E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 8652
 226+ 8652 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 227+ 8654
 228+ 8654 00           	db 0											; (Autoriza_movimiento).
 229+ 8655 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 229+ 8659 00 00
 230+ 865B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 231+ 865E
 232+ 865E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 233+ 8660 00           	db 0											; (Cola_de_desplazamiento).
 234+ 8661
 235+ 8661 00           	db 0 											; (Columnas).
 236+ 8662 00 00        	defw 0											; (Limite_horizontal).
 237+ 8664 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 238+ 8667
 239+ 8667              ; ---------- ---------- ---------- ---------- ----------
 240+ 8667
 241+ 8667 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 242+ 8669 00 00        	defw 0											; (Posicion_actual).
 243+ 866B 00 00        	defw 0 											; (Puntero_objeto).
 244+ 866D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 245+ 8670
 246+ 8670 00           	db %00000000 									; (Attr).
 247+ 8671
 248+ 8671 00 00        	defw 0											; (Indice_Sprite_der).
 249+ 8673 00 00        	defw 0											; (Indice_Sprite_izq).
 250+ 8675 00 00        	defw 0											; (Puntero_DESPLZ_der).
 251+ 8677 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 252+ 8679
 253+ 8679 00 00        	defw 0											; (Posicion_inicio).
 254+ 867B 00           	db 0											; (Cuad_objeto).
 255+ 867C
 256+ 867C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 257+ 8680
 258+ 8680 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 259+ 8681
 260+ 8681 00 00        	db 0,0										    ; Variables_de_borrado
 261+ 8683 00 00        	defw 0											;	" " " " " " "
 262+ 8685 00 00        	defw 0											;	" " " " " " "
 263+ 8687 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 264+ 868B
 265+ 868B 00 00        	db 0,0											; Variables_de_pintado
 266+ 868D 00 00        	defw 0											;	" " " " " " "
 267+ 868F 00 00        	defw 0											;	" " " " " " "
 268+ 8691 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8695
 270+ 8695 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 8697
 272+ 8697 00           	db 0											; (Autoriza_movimiento).
 273+ 8698 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 869C 00 00
 274+ 869E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 86A1
 276+ 86A1 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 86A3 00           	db 0											; (Cola_de_desplazamiento).
 278+ 86A4
 279+ 86A4 00           	db 0 											; (Columnas).
 280+ 86A5 00 00        	defw 0											; (Limite_horizontal).
 281+ 86A7 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 86AA
 283+ 86AA              ; ---------- ---------- ---------- ---------- ----------
 284+ 86AA
 285+ 86AA 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 86AC 00 00        	defw 0											; (Posicion_actual).
 287+ 86AE 00 00        	defw 0 											; (Puntero_objeto).
 288+ 86B0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 86B3
 290+ 86B3 00           	db %00000000 									; (Attr).
 291+ 86B4
 292+ 86B4 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 86B6 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 86B8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 86BA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 86BC
 297+ 86BC 00 00        	defw 0											; (Posicion_inicio).
 298+ 86BE 00           	db 0											; (Cuad_objeto).
 299+ 86BF
 300+ 86BF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 86C3
 302+ 86C3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 86C4
 304+ 86C4 00 00        	db 0,0										    ; Variables_de_borrado
 305+ 86C6 00 00        	defw 0											;	" " " " " " "
 306+ 86C8 00 00        	defw 0											;	" " " " " " "
 307+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 308+ 86CE
 309+ 86CE 00 00        	db 0,0											; Variables_de_pintado
 310+ 86D0 00 00        	defw 0											;	" " " " " " "
 311+ 86D2 00 00        	defw 0											;	" " " " " " "
 312+ 86D4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D8
 314+ 86D8 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 315+ 86DA
 316+ 86DA 00           	db 0											; (Autoriza_movimiento).
 317+ 86DB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 317+ 86DF 00 00
 318+ 86E1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 319+ 86E4
 320+ 86E4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86E6 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86E7
 323+ 86E7 00           	db 0 											; (Columnas).
 324+ 86E8 00 00        	defw 0											; (Limite_horizontal).
 325+ 86EA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86ED
 327+ 86ED              ; ---------- ---------- ---------- ---------- ----------
 328+ 86ED
 329+ 86ED 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86EF 00 00        	defw 0											; (Posicion_actual).
 331+ 86F1 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86F3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86F6
 334+ 86F6 00           	db %00000000 									; (Attr).
 335+ 86F7
 336+ 86F7 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86F9 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86FB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86FD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86FF
 341+ 86FF 00 00        	defw 0											; (Posicion_inicio).
 342+ 8701 00           	db 0											; (Cuad_objeto).
 343+ 8702
 344+ 8702 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 8706
 346+ 8706 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 8707
 348+ 8707 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 8709 00 00        	defw 0											;	" " " " " " "
 350+ 870B 00 00        	defw 0											;	" " " " " " "
 351+ 870D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 8711
 353+ 8711 00 00        	db 0,0											; Variables_de_pintado
 354+ 8713 00 00        	defw 0											;	" " " " " " "
 355+ 8715 00 00        	defw 0											;	" " " " " " "
 356+ 8717 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 871B
 358+ 871B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 871D
 360+ 871D 00           	db 0											; (Autoriza_movimiento).
 361+ 871E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 8722 00 00
 362+ 8724 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 363+ 8727
 364+ 8727 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 365+ 8729 00           	db 0											; (Cola_de_desplazamiento).
 366+ 872A
 367+ 872A 00           	db 0 											; (Columnas).
 368+ 872B 00 00        	defw 0											; (Limite_horizontal).
 369+ 872D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 370+ 8730
 371+ 8730              ; ---------- ---------- ---------- ---------- ----------
 372+ 8730
 373+ 8730 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 374+ 8732 00 00        	defw 0											; (Posicion_actual).
 375+ 8734 00 00        	defw 0 											; (Puntero_objeto).
 376+ 8736 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 377+ 8739
 378+ 8739 00           	db %00000000 									; (Attr).
 379+ 873A
 380+ 873A 00 00        	defw 0											; (Indice_Sprite_der).
 381+ 873C 00 00        	defw 0											; (Indice_Sprite_izq).
 382+ 873E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 383+ 8740 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 384+ 8742
 385+ 8742 00 00        	defw 0											; (Posicion_inicio).
 386+ 8744 00           	db 0											; (Cuad_objeto).
 387+ 8745
 388+ 8745 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 389+ 8749
 390+ 8749 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 391+ 874A
 392+ 874A 00 00        	db 0,0										    ; Variables_de_borrado
 393+ 874C 00 00        	defw 0											;	" " " " " " "
 394+ 874E 00 00        	defw 0											;	" " " " " " "
 395+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 8754
 397+ 8754 00 00        	db 0,0											; Variables_de_pintado
 398+ 8756 00 00        	defw 0											;	" " " " " " "
 399+ 8758 00 00        	defw 0											;	" " " " " " "
 400+ 875A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875E
 402+ 875E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 403+ 8760
 404+ 8760 00           	db 0											; (Autoriza_movimiento).
 405+ 8761 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 405+ 8765 00 00
 406+ 8767 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 407+ 876A
 408+ 876A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 409+ 876C 00           	db 0											; (Cola_de_desplazamiento).
 410+ 876D
 411+ 876D 00           	db 0 											; (Columnas).
 412+ 876E 00 00        	defw 0											; (Limite_horizontal).
 413+ 8770 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 414+ 8773
 415+ 8773              ; ---------- ---------- ---------- ---------- ----------
 416+ 8773
 417+ 8773 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 418+ 8775 00 00        	defw 0											; (Posicion_actual).
 419+ 8777 00 00        	defw 0 											; (Puntero_objeto).
 420+ 8779 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 421+ 877C
 422+ 877C 00           	db %00000000 									; (Attr).
 423+ 877D
 424+ 877D 00 00        	defw 0											; (Indice_Sprite_der).
 425+ 877F 00 00        	defw 0											; (Indice_Sprite_izq).
 426+ 8781 00 00        	defw 0											; (Puntero_DESPLZ_der).
 427+ 8783 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 428+ 8785
 429+ 8785 00 00        	defw 0											; (Posicion_inicio).
 430+ 8787 00           	db 0											; (Cuad_objeto).
 431+ 8788
 432+ 8788 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 433+ 878C
 434+ 878C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 435+ 878D
 436+ 878D 00 00        	db 0,0										    ; Variables_de_borrado
 437+ 878F 00 00        	defw 0											;	" " " " " " "
 438+ 8791 00 00        	defw 0											;	" " " " " " "
 439+ 8793 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 440+ 8797
 441+ 8797 00 00        	db 0,0											; Variables_de_pintado
 442+ 8799 00 00        	defw 0											;	" " " " " " "
 443+ 879B 00 00        	defw 0											;	" " " " " " "
 444+ 879D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 87A1
 446+ 87A1 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 447+ 87A3
 448+ 87A3 00           	db 0											; (Autoriza_movimiento).
 449+ 87A4 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 449+ 87A8 00 00
 450+ 87AA 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 451+ 87AD
 452+ 87AD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 453+ 87AF 00           	db 0											; (Cola_de_desplazamiento).
 454+ 87B0
 455+ 87B0 00           	db 0 											; (Columnas).
 456+ 87B1 00 00        	defw 0											; (Limite_horizontal).
 457+ 87B3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 458+ 87B6
 459+ 87B6              ; -------------------------------------------------------------------------------------
 460+ 87B6              ;
 461+ 87B6              ;	20/05/23
 462+ 87B6              ;
 463+ 87B6              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 464+ 87B6              ;
 465+ 87B6              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 466+ 87B6              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 467+ 87B6              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 468+ 87B6              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 469+ 87B6
 470+ 87B6              Indice_de_entidades
 471+ 87B6
 472+ 87B6 BA 87        	defw Entidad_1
 473+ 87B8 CA 87        	defw Entidad_2
 474+ 87BA
 475+ 87BA              ;	BADSAT, (Satélite malvado).
 476+ 87BA
 477+ 87BA 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 478+ 87BC 04           	db %00000100									; (Attr).
 479+ 87BD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 480+ 87BF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 481+ 87C1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 482+ 87C3 01           	db 1											; (Cuad_objeto).
 483+ 87C4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 484+ 87C8 87 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 485+ 87CA
 486+ 87CA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 487+ 87CC 02           	db %00000010									; (Attr).
 488+ 87CD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 489+ 87CF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 490+ 87D1 40 50        	defw $5040                                      ; (Posicion_inicio).
 491+ 87D3 01           	db 1											; (Cuad_objeto).
 492+ 87D4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 493+ 87D8 87 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 494+ 87DA
# file closed: Cajas_y_disparos.asm
  22  87DA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87DA              ; 13/05/23
   2+ 87DA
   3+ 87DA              Indice_de_niveles
   4+ 87DA
   5+ 87DA E8 87        	defw Nivel_1
   6+ 87DC EC 87        	defw Nivel_2
   7+ 87DE F9 87        	defw Nivel_3
   8+ 87E0 09 88        	defw Nivel_4
   9+ 87E2 1B 88        	defw Nivel_5
  10+ 87E4              ;	...
  11+ 87E4              ;	...
  12+ 87E4              ;	+ Niveles ...
  13+ 87E4
  14+ 87E4 00 00        	defw 0
  15+ 87E6 00 00        	defw 0
  16+ 87E8
  17+ 87E8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87E9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  19+ 87EC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87ED 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 87F1 01 02
  21+ 87F3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87F7 01 02
  22+ 87F9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87FA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  23+ 87FE 01
  24+ 87FF 03 01 01 01  	db 3,1,1,1,1
  24+ 8803 01
  25+ 8804 03 01 01 01  	db 3,1,1,1,1
  25+ 8808 01
  26+ 8809 11           Nivel_4 db 17									; Nº de entidades.
  27+ 880A 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  27+ 880E 01
  28+ 880F 04 01 01 01  	db 4,1,1,1,1
  28+ 8813 01
  29+ 8814 04 01 01 01  	db 4,1,1,1,1
  29+ 8818 01
  30+ 8819 02 03        	db 2,3
  31+ 881B 14           Nivel_5 db 20									; Nº de entidades.
  32+ 881C 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  32+ 8820 01
  33+ 8821 05 01 01 01  	db 5,1,1,1,1
  33+ 8825 01
  34+ 8826 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  34+ 882A 01
  35+ 882B 05 01 01 01  	db 5,1,1,1,1
  35+ 882F 01
  36+ 8830
  37+ 8830              ;---------------------------------------------------------------------------------------------------------------
  38+ 8830              ;
  39+ 8830              ;   3/9/23
  40+ 8830              ;
  41+ 8830              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8830              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8830              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8830              ;	_en la caja DRAW correspondiente.
  45+ 8830              ;
  46+ 8830              ;	MODIFICA: HL,DE y A.
  47+ 8830              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8830
  49+ 8830              Inicializa_Punteros_de_nivel
  50+ 8830
  51+ 8830 21 DA 87     	ld hl,Indice_de_niveles
  52+ 8833 22 81 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8836 CD F3 8C     	call Extrae_address
  54+ 8839 7E           	ld a,(hl)
  55+ 883A 32 32 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 883D 23           	inc hl
  57+ 883E 22 83 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8841 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8842
  60+ 8842              ;---------------------------------------------------------------------------------------------------------------
  61+ 8842              ;
  62+ 8842              ;   13/5/23
  63+ 8842              ;
  64+ 8842              ;	Destruye A,BC,HL,DE
  65+ 8842
  66+ 8842              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8842              ;	_del juego.
  68+ 8842
  69+ 8842              Prepara_cajas
  70+ 8842
  71+ 8842              ; Preparamos los punteros de las cajas.
  72+ 8842
  73+ 8842 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8845 CD F3 8C     	call Extrae_address
  75+ 8848 CD 85 88     	call Avanza_caja
  76+ 884B
  77+ 884B CD C9 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 884E
  79+ 884E 2A 83 89     	ld hl,(Datos_de_nivel)
  80+ 8851
  81+ 8851              ; HL está en los datos del nivel correspondiente.
  82+ 8851              ; B actuará como contador de cajas.
  83+ 8851
  84+ 8851 C5           1 push bc
  85+ 8852
  86+ 8852 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8853 CD 76 88     	call PreparaBC
  88+ 8856
  89+ 8856 21 B6 87     	ld hl,Indice_de_entidades
  90+ 8859 CD 7E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 885C 22 38 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 885F
  93+ 885F CD 8F 88     	call Datos_de_entidad_a_caja
  94+ 8862
  95+ 8862 2A 30 89     	ld hl,(Indice_restore_caja)
  96+ 8865 CD F3 8C     	call Extrae_address
  97+ 8868 CD 85 88     	call Avanza_caja
  98+ 886B
  99+ 886B 2A 83 89     	ld hl,(Datos_de_nivel)
 100+ 886E 23           	inc hl
 101+ 886F 22 83 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8872
 103+ 8872 C1           	pop bc
 104+ 8873 10 DC        	djnz 1B
 105+ 8875 C9           	ret
 106+ 8876
 107+ 8876 CB 27        PreparaBC sla a
 108+ 8878 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 887A 4F           	ld c,a
 110+ 887B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 887D C9           	ret
 112+ 887E
 113+ 887E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 887F ED 4A        	adc hl,bc
 115+ 8881 CD F3 8C     	call Extrae_address
 116+ 8884 C9           	ret
 117+ 8885
 118+ 8885 22 2C 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8888 13           	inc de
 120+ 8889 13           	inc de
 121+ 888A EB           	ex de,hl
 122+ 888B 22 30 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 888E C9           	ret
 124+ 888F
 125+ 888F              Datos_de_entidad_a_caja
 126+ 888F
 127+ 888F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 888F
 129+ 888F
 130+ 888F ED 5B 2C 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8893
 132+ 8893 01 02 00     	ld bc,2
 133+ 8896 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8898
 135+ 8898 01 07 00     	ld bc,7
 136+ 889B CD C3 88     	call Situa_DE
 137+ 889E
 138+ 889E 01 05 00     	ld bc,5
 139+ 88A1 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 88A3
 141+ 88A3 01 04 00     	ld bc,4
 142+ 88A6 CD C3 88     	call Situa_DE
 143+ 88A9
 144+ 88A9 01 07 00     	ld bc,7
 145+ 88AC ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 88AE
 147+ 88AE 01 18 00     	ld bc,24
 148+ 88B1 CD C3 88     	call Situa_DE
 149+ 88B4
 150+ 88B4 01 02 00     	ld bc,2
 151+ 88B7 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 88B9
 153+ 88B9              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 88B9              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 88B9
 156+ 88B9 01 0F 00     	ld bc,15									; *****
 157+ 88BC CD C3 88     	call Situa_DE
 158+ 88BF
 159+ 88BF 3E 03        	ld a,3
 160+ 88C1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88C2
 162+ 88C2 C9           	ret
 163+ 88C3
 164+ 88C3 EB           Situa_DE ex de,hl
 165+ 88C4 A7           	and a
 166+ 88C5 ED 4A        	adc hl,bc
 167+ 88C7 EB           	ex de,hl
 168+ 88C8 C9           	ret
 169+ 88C9
 170+ 88C9              ;---------------------------------------------------------------------------------------------------------------
 171+ 88C9              ;
 172+ 88C9              ;	21/5/23
 173+ 88C9              ;
 174+ 88C9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88C9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88C9              ;
 177+ 88C9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88C9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88C9              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88C9              ;
 181+ 88C9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88C9              ;	MODIFICA: A y B.
 183+ 88C9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88C9
 185+ 88C9              Admin_num_entidades
 186+ 88C9
 187+ 88C9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88C9
 189+ 88C9 3A 32 89     	ld a,(Numero_de_entidades)
 190+ 88CC A7           	and a
 191+ 88CD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88CD              ;	jr z,$
 193+ 88CD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88CD
 195+ 88CD 20 03        	jr nz,3F
 196+ 88CF
 197+ 88CF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88CF
 199+ 88CF CD 30 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88D2
 201+ 88D2 3A 32 89     3 ld a,(Numero_de_entidades)
 202+ 88D5 FE 0A        	cp 10
 203+ 88D7 38 08        	jr c,1F
 204+ 88D9
 205+ 88D9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88D9              ; Actualizamos variables.
 207+ 88D9
 208+ 88D9 3E 0A        	ld a,10
 209+ 88DB 32 33 89     	ld (Numero_parcial_de_entidades),a
 210+ 88DE 47           	ld b,a
 211+ 88DF 18 04        	jr 2F
 212+ 88E1
 213+ 88E1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88E1              ; (Numero_de_entidades)="0".
 215+ 88E1
 216+ 88E1 32 33 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88E4 47           	ld b,a
 218+ 88E5 C9           2 ret
# file closed: Niveles.asm
  23  88E6
  24  88E6              ; ******************************************************************************************************************************************************************************************
  25  88E6              ; Constantes.
  26  88E6              ; ******************************************************************************************************************************************************************************************
  27  88E6              ;
  28  88E6              ; 4/9/23
  29  88E6              ;
  30  88E6              ; Constantes generales.
  31  88E6              ;
  32  88E6
  33  88E6              Sprite_vacio equ $f000
  34  88E6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  35  88E6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  36  88E6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  37  88E6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  38  88E6
  39  88E6              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  40  88E6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  41  88E6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  42  88E6              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  43  88E6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  44  88E6              ;
  45  88E6              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  46  88E6              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  47  88E6              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  48  88E6              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  49  88E6              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  50  88E6              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  51  88E6
  52  88E6              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
  53  88E6
  54  88E6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  55  88E6
  56  88E6              ; ******************************************************************************************************************************************************************************************
  57  88E6              ; Variables.
  58  88E6              ; ******************************************************************************************************************************************************************************************
  59  88E6              ;
  60  88E6              ; 28/07/23
  61  88E6              ;
  62  88E6              ; Variables de DRAW. (Motor principal).
  63  88E6              ;
  64  88E6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  65  88E6
  66  88E6 00           Filas db 0												; Filas. [DRAW]
  67  88E7 00           Columns db 0  											; Nº de columnas. [DRAW]
  68  88E8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  69  88EA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  70  88EC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  71  88ED 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  72  88EE
  73  88EE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  74  88EE
  75  88EE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  76  88EF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  77  88EF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  78  88EF 00           Attr db 0												; Atributos de la entidad:
  79  88F0
  80  88F0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  81  88F0              ;
  82  88F0              ;	COLORES: 0 ..... NEGRO
  83  88F0              ;    		 1 ..... AZUL
  84  88F0              ; 			 2 ..... ROJO
  85  88F0              ;			 3 ..... MAGENTA
  86  88F0              ; 			 4 ..... VERDE
  87  88F0              ; 			 5 ..... CIAN
  88  88F0              ;			 6 ..... AMARILLO
  89  88F0              ; 			 7 ..... BLANCO
  90  88F0
  91  88F0 00 00        Indice_Sprite_der defw 0
  92  88F2 00 00        Indice_Sprite_izq defw 0
  93  88F4 00 00        Puntero_DESPLZ_der defw 0
  94  88F6 00 00        Puntero_DESPLZ_izq defw 0
  95  88F8
  96  88F8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  97  88FA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  98  88FB
  99  88FB              ; Variables de objeto. (Características).
 100  88FB
 101  88FB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 102  88FC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 103  88FD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 104  88FE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 105  88FF
 106  88FF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 107  8900              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 108  8900              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 109  8900 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 110  8902 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 111  8904 00 00        	defw 0
 112  8906 00 00 00 00  	db 0,0,0,0
 113  890A
 114  890A 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 115  890C 00 00        	defw 0
 116  890E 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 117  8910 00 00 00 00  	db 0,0,0,0
 118  8914
 119  8914              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 120  8914
 121  8914 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 122  8915              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 123  8915              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 124  8915              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 125  8915              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 126  8915              ;
 127  8915              ; 														DESCRIPCIÖN:
 128  8915              ;
 129  8915              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 130  8915              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 131  8915              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 132  8915              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 133  8915              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 134  8915              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 135  8915              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 136  8915              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 137  8915              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 138  8915              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 139  8915              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 140  8915              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 141  8915              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 142  8915              ;
 143  8915              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 144  8915              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 145  8915              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 146  8915
 147  8915 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 148  8916
 149  8916              ; Movimiento. ------------------------------------------------------------------------------------------------------
 150  8916
 151  8916 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 152  8917 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 153  8919 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 154  891B 00 00        Puntero_indice_mov_bucle defw 0							;
 155  891D              ;
 156  891D              ;
 157  891D 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 158  891E              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 159  891E              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 160  891E 00           Incrementa_puntero_backup db 0
 161  891F 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 162  8920              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 163  8920 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 164  8921 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 165  8922 00           Cola_de_desplazamiento db 0								; Este byte indica:
 166  8923              ;
 167  8923              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 168  8923              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 169  8923              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 170  8923              ;
 171  8923              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 172  8923              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 173  8923              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 174  8923              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 175  8923              ;
 176  8923              ;														;	"$ff" ..... Bucle infinito de repetición.
 177  8923              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 178  8923              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 179  8923
 180  8923
 181  8923              ; Variables de funcionamiento. [DRAW].
 182  8923
 183  8923 00           Columnas db 0
 184  8924 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 185  8926              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 186  8926 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 187  8927
 188  8927              ; variables de control general.
 189  8927
 190  8927 00           Ctrl_2 db 0
 191  8928              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 192  8928              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 193  8928              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 194  8928              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 195  8928              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 196  8928              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 197  8928              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 198  8928              ;
 199  8928              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 200  8928              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 201  8928              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 202  8928              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 203  8928              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 204  8928
 205  8928 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 206  8929
 207  8929              ;! 67 Bytes por entidad.
 208  8929
 209  8929              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 210  8929              ;					         		---------;      ;---------
 211  8929
 212  8929
 213  8929              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 214  8929
 215  8929 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 216  892A
 217  892A              ;														DESCRIPCIÓN:
 218  892A              ;
 219  892A              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 220  892A              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 221  892A              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 222  892A              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 223  892A              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 224  892A              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 225  892A
 226  892A              ;														BIT 3, Recarga de nueva oleada.
 227  892A              ;														BIT 4, Recarga de nueva oleada.
 228  892A              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 229  892A              ;														BIT 6, **** Frame completo.
 230  892A
 231  892A 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 232  892C              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 233  892C              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 234  892C              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 235  892C
 236  892C
 237  892C
 238  892C              ; Gestión de ENTIDADES y CAJAS.
 239  892C
 240  892C 00 00        Puntero_store_caja defw 0
 241  892E 00 00        Puntero_restore_caja defw 0
 242  8930 00 00        Indice_restore_caja defw 0
 243  8932 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 244  8933 00           Numero_parcial_de_entidades db 0
 245  8934 00           Entidades_en_curso db 0									; ..... ..... .....
 246  8935 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 247  8936              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 248  8936              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 249  8936              ;														; _ (Numero_de_malotes)="0".
 250  8936 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 251  8938 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 252  893A              ;														; _ puntero (Indice_entidades).
 253  893A
 254  893A
 255  893A              ;---------------------------------------------------------------------------------------------------------------
 256  893A              ;
 257  893A              ;	2/9/23
 258  893A              ;
 259  893A              ;	Álbumes.
 260  893A
 261  893A 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 262  893C              ;														; _variable para almacenar lo posición del puntero_
 263  893C              ; 														; _de pila, SP.
 264  893C 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 265  893E              ;														; La utiliza la rutina [Extrae_foto_registros].
 266  893E 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 267  8940 00 00        Stack_snapshot defw 0
 268  8942 00 00        Stack_snapshot_disparos defw 0
 269  8944
 270  8944 00 00        End_Snapshot defw 0
 271  8946              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 272  8946 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 273  8948              ;														; _el snapshot de los registros del siguiente disparo.
 274  8948              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 275  8948 00 00        End_Snapshot_Amadeus defw 0
 276  894A 00 00        End_Snapshot_1 defw 0
 277  894C 00 00        End_Snapshot_disparos_1 defw 0
 278  894E 00 00        End_Snapshot_2 defw 0
 279  8950 00 00        End_Snapshot_disparos_2 defw 0
 280  8952 00 00        End_Snapshot_3 defw 0
 281  8954 00 00        End_Snapshot_disparos_3 defw 0
 282  8956
 283  8956 00 00        Puntero_indice_album_de_fotos defw 0
 284  8958 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 285  895A
 286  895A 00 00        Puntero_indice_End_Snapshot defw 0
 287  895C 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 288  895E 00 00        Puntero_de_End_Snapshot defw 0
 289  8960 00 00        Puntero_de_End_Snapshot_disparos defw 0
 290  8962
 291  8962              ;---------------------------------------------------------------------------------------------------------------
 292  8962
 293  8962              ; Gestión de Disparos.
 294  8962
 295  8962 00           Numero_de_disparotes db 0
 296  8963 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 297  8965 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 298  8967 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 299  8968              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 300  8968              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 301  8968 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 302  896A              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 303  896A              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 304  896A              ;														; _produzca colisión.
 305  896A 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 306  896C              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 307  896C 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 308  896F              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 309  896F 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 310  8972              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 311  8972 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 312  8974 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 313  8975
 314  8975              ;---------------------------------------------------------------------------------------------------------------
 315  8975
 316  8975              ; Relojes y temporizaciones.
 317  8975
 318  8975 00           Contador_de_frames db 0
 319  8976 00           Contador_de_frames_2 db 0
 320  8977
 321  8977 04           Clock_explosion db 4
 322  8978 1E           Clock_Entidades_en_curso db 30
 323  8979 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 324  897A              ;														; Repite la oleada de entidades.
 325  897A 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 326  897B 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 327  897C 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 328  897D
 329  897D 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 330  897E 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 331  897F 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 332  8980
 333  8980              ;---------------------------------------------------------------------------------------------------------------
 334  8980
 335  8980              ; Gestión de NIVELES.
 336  8980
 337  8980 00           Nivel db 0												; Nivel actual del juego.
 338  8981 00 00        Puntero_indice_NIVELES defw 0
 339  8983 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 340  8985              ; 														; _ que definen el NIVEL.
 341  8985              ; Y todo comienza aquí .....
 342  8985              ;
 343  8985              ; Rutina principal *************************************************************************************************************************************************************************
 344  8985              ;
 345  8985              ;	14/11/22
 346  8985
 347  8985              START
 348  8985
 349  8985 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 350  8988 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 351  898A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 352  898C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 353  898E F3           	DI
 354  898F
 355  898F 3E 07        	ld a,%00000111
 356  8991 CD B4 99     	call Cls
 357  8994
 358  8994 CD CC 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 359  8997
 360  8997              ; INICIALIZACIÓN.
 361  8997
 362  8997 CD 30 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 363  899A
 364  899A CD 42 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 365  899D
 366  899D CD 08 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 367  89A0              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 368  89A0 CD 1E 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 369  89A3              ;													     ; _ malotes antes de guardar ninguna foto.
 370  89A3              ; ----------
 371  89A3
 372  89A3 CD 7C 8D     	call Restore_entidad
 373  89A6
 374  89A6 21 33 89     	ld hl,Numero_parcial_de_entidades
 375  89A9 46           	ld b,(hl)
 376  89AA 04           	inc b
 377  89AB 05           	dec b
 378  89AC 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 379  89AE
 380  89AE              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 381  89AE              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 382  89AE              ;	Pintamos el resto de entidades:
 383  89AE
 384  89AE              ;	INICIA ENTIDADES !!!!!
 385  89AE
 386  89AE C5           1 push bc  												; Guardo el contador de entidades.
 387  89AF
 388  89AF CD AF 8B     	call Inicia_entidad
 389  89B2
 390  89B2 C1           	pop bc
 391  89B3 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 392  89B5
 393  89B5              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 394  89B5              ; (Esto se dá cuando se inicia una nueva oleada).
 395  89B5
 396  89B5 3A 29 89     	ld a,(Ctrl_1)
 397  89B8 CB 5F        	bit 3,a
 398  89BA 20 18        	jr nz,5F											; Loop
 399  89BC
 400  89BC              ; 	INICIA AMADEUS !!!!!
 401  89BC
 402  89BC CD A3 8D     3 call Restore_Amadeus
 403  89BF CD F9 8C     	call Inicia_Puntero_objeto
 404  89C2 CD A7 93     	call Draw
 405  89C5 CD A0 7F     	call Guarda_foto_registros
 406  89C8 11 9E 85     	ld de,Amadeus_db
 407  89CB CD B5 8D     	call Store_Amadeus
 408  89CE
 409  89CE              ; 	INICIA DISPAROS !!!!!
 410  89CE
 411  89CE CD 80 8C     	call Inicia_Puntero_Disparo_Entidades
 412  89D1 CD 87 8C     	call Inicia_Puntero_Disparo_Amadeus
 413  89D4
 414  89D4              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 415  89D4
 416  89D4 CD 08 8C     5 call Inicia_punteros_de_cajas
 417  89D7 CD 7C 8D     	call Restore_entidad
 418  89DA
 419  89DA 3A 29 89     	ld a,(Ctrl_1)
 420  89DD CB 5F        	bit 3,a
 421  89DF 28 0A        	jr z,6F
 422  89E1
 423  89E1              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 424  89E1
 425  89E1 21 29 89     	ld hl,Ctrl_1
 426  89E4 CB 9E        	res 3,(hl)
 427  89E6 CD A7 8C     	call Calcula_numero_de_malotes
 428  89E9 18 09        	jr Main
 429  89EB
 430  89EB              ; ----------
 431  89EB
 432  89EB 3A 33 89     6 ld a,(Numero_parcial_de_entidades)
 433  89EE 32 35 89     	ld (Numero_de_malotes),a
 434  89F1
 435  89F1              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 436  89F1              ; _ tenemos calculado (Numero_de_malotes).
 437  89F1              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 438  89F1              ; _ para situarnos en el siguiente album.
 439  89F1
 440  89F1 CD 4F 8C     	call Avanza_puntero_de_album_de_fotos_y_malotes
 441  89F4
 442  89F4              ; ------------------------------------
 443  89F4
 444  89F4              Main
 445  89F4              ;
 446  89F4              ;	3/8/23
 447  89F4
 448  89F4 FB           	ei
 449  89F5
 450  89F5 3A 78 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 451  89F8 47           	ld b,a
 452  89F9 3A 75 89     	ld a,(Contador_de_frames)
 453  89FC B8           	cp b
 454  89FD 20 18        	jr nz,13F
 455  89FF
 456  89FF 3A 33 89     	ld a,(Numero_parcial_de_entidades)
 457  8A02 47           	ld b,a
 458  8A03 3A 34 89     	ld a,(Entidades_en_curso)
 459  8A06 B8           	cp b
 460  8A07 28 0E        	jr z,13F
 461  8A09 30 0C        	jr nc,13F
 462  8A0B
 463  8A0B 3C           	inc a
 464  8A0C 32 34 89     	ld (Entidades_en_curso),a
 465  8A0F
 466  8A0F 3A 78 89     	ld a,(Clock_Entidades_en_curso)
 467  8A12
 468  8A12              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 469  8A12              ;! _ IMPREDECIBLE !!!!
 470  8A12
 471  8A12 C6 64        	add 100
 472  8A14 32 78 89     	ld (Clock_Entidades_en_curso),a
 473  8A17
 474  8A17              ; Habilita disparos.
 475  8A17
 476  8A17 21 7A 89     13 ld hl,Disparo_Amadeus
 477  8A1A 11 7C 89     	ld de,CLOCK_repone_disparo_Amadeus
 478  8A1D CD 78 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 479  8A20
 480  8A20 21 7D 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 481  8A23 11 7F 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 482  8A26 CD 78 9D     	call Habilita_disparos
 483  8A29
 484  8A29              ; COLISIONES.
 485  8A29
 486  8A29 CD 89 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 487  8A2C
 488  8A2C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 489  8A2C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 490  8A2C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 491  8A2C
 492  8A2C AF           	xor a
 493  8A2D 32 67 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 494  8A30
 495  8A30 CD 08 8C     	call Inicia_punteros_de_cajas
 496  8A33 CD 7C 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 497  8A36              ; 														; _ en DRAW.
 498  8A36 3A E6 88     	ld a,(Filas)
 499  8A39 A7           	and a
 500  8A3A 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 501  8A3C CD 8E 8D     	call Incrementa_punteros_de_cajas
 502  8A3F 18 F2        	jr 12B
 503  8A41
 504  8A41              ; ---------------------------------------------------------------------------------------
 505  8A41
 506  8A41 3A 33 89     10 ld a,(Numero_parcial_de_entidades)
 507  8A44 47               ld b,a
 508  8A45 A7           	and a
 509  8A46 20 14        	jr nz,11F
 510  8A48
 511  8A48 21 29 89     	ld hl,Ctrl_1
 512  8A4B CB 66        	bit 4,(hl)
 513  8A4D C2 D9 8A     	jp nz,16F
 514  8A50
 515  8A50 21 29 89     	ld hl,Ctrl_1
 516  8A53 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 517  8A55
 518  8A55 3A 75 89     	ld a,(Contador_de_frames)
 519  8A58 3C           	inc a
 520  8A59 32 79 89     	ld (Activa_recarga_cajas),a
 521  8A5C
 522  8A5C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 523  8A5C
 524  8A5C 3A 34 89     11 ld a,(Entidades_en_curso)
 525  8A5F A7           	and a
 526  8A60 CA D9 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 527  8A63 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 528  8A64
 529  8A64              ; Código que ejecutamos con cada entidad:
 530  8A64              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 531  8A64
 532  8A64 C5           15 push bc 												; Nº de entidades en curso.
 533  8A65
 534  8A65              ; Impacto ???
 535  8A65
 536  8A65 3A FF 88     	ld a,(Impacto)
 537  8A68 A7           	and a
 538  8A69 28 2D        	jr z,8F
 539  8A6B
 540  8A6B              ; Hay Impacto en esta entidad.
 541  8A6B
 542  8A6B 21 77 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 543  8A6E 35           	dec (hl)
 544  8A6F 20 62        	jr nz,17F
 545  8A71
 546  8A71              ;! Velocidad de la animación de la explosión.
 547  8A71
 548  8A71 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 549  8A73              ;														; _,(velocidad de la explosión).
 550  8A73 CD BF 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 551  8A76
 552  8A76              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 553  8A76
 554  8A76 3A 27 89     	ld a,(Ctrl_2)
 555  8A79 CB 4F        	bit 1,a
 556  8A7B 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 557  8A7D
 558  8A7D              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 559  8A7D
 560  8A7D 3A EE 88     	ld a,(CTRL_DESPLZ)
 561  8A80 A7           	and a
 562  8A81 20 08        	jr nz,18F
 563  8A83
 564  8A83 21 84 84     	ld hl,Indice_Explosion_2x2-2
 565  8A86 22 F4 88     	ld (Puntero_DESPLZ_der),hl
 566  8A89 18 06        	jr 19F
 567  8A8B
 568  8A8B 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 569  8A8E 22 F4 88     	ld (Puntero_DESPLZ_der),hl
 570  8A91
 571  8A91 21 27 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 572  8A94 CB CE        	set 1,(hl)
 573  8A96 18 22        	jr 7F
 574  8A98
 575  8A98              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 576  8A98              ; _con las coordenadas de la entidad almacenada en DRAW.
 577  8A98
 578  8A98 3A 29 89     8 ld a,(Ctrl_1)
 579  8A9B CB 57        	bit 2,a
 580  8A9D 28 1B        	jr z,7F
 581  8A9F
 582  8A9F 2A 6A 89     	ld hl,(Coordenadas_disparo_certero)
 583  8AA2 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 584  8AA3              ;														; E contiene la coordenada_X del disparo.
 585  8AA3 2A EC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 586  8AA6              ;														; H FILA, (Coordenada_y de la entidad).
 587  8AA6 A7           	and a
 588  8AA7 ED 52        	sbc hl,de
 589  8AA9
 590  8AA9 CD C0 92     	call Determina_resultado_comparativa
 591  8AAC
 592  8AAC 78           	ld a,b
 593  8AAD A7           	and a
 594  8AAE 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 595  8AB0
 596  8AB0              ; ----- ----- -----
 597  8AB0
 598  8AB0 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 599  8AB2 32 FF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 600  8AB5
 601  8AB5 21 29 89     	ld hl,Ctrl_1
 602  8AB8 CB 96        	res 2,(hl)
 603  8ABA
 604  8ABA CD 31 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 605  8ABD
 606  8ABD 3A 14 89     	ld a,(Ctrl_0)
 607  8AC0 CB 67        	bit 4,a
 608  8AC2 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 609  8AC4
 610  8AC4              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 611  8AC4              ; [[[
 612  8AC4 CD 17 8E     	call Detecta_disparo_entidad
 613  8AC7              ; ]]]
 614  8AC7 CD CF 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 615  8ACA
 616  8ACA 21 14 89     	ld hl,Ctrl_0
 617  8ACD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 618  8ACF AF           	xor a
 619  8AD0 32 15 89     	ld (Obj_dibujado),a
 620  8AD3
 621  8AD3 CD 41 8D     17 call Store_Restore_cajas
 622  8AD6
 623  8AD6 C1           	pop bc
 624  8AD7 10 8B        	djnz 15B
 625  8AD9
 626  8AD9              ; ------------------------------------
 627  8AD9
 628  8AD9              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 629  8AD9              ; Hemos gestionado todas las unidades.
 630  8AD9              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 631  8AD9
 632  8AD9              ;	ld hl,Ctrl_1
 633  8AD9              ;	res 2,(hl)
 634  8AD9
 635  8AD9              ; ------------------------------------
 636  8AD9
 637  8AD9              ; Tras la gestión de las entidades, ... AMADEUS.
 638  8AD9
 639  8AD9 CD A3 8D     16 call Restore_Amadeus
 640  8ADC
 641  8ADC              ;! Activa/desactiva impacto con Amadeus.
 642  8ADC
 643  8ADC 3A FF 88     	ld a,(Impacto)
 644  8ADF A7           	and a
 645  8AE0 20 FE        	jr nz,$
 646  8AE2
 647  8AE2 CD 90 8B     	call Mov_Amadeus
 648  8AE5
 649  8AE5 3A 14 89     	ld a,(Ctrl_0)
 650  8AE8 CB 67        	bit 4,a
 651  8AEA 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 652  8AEC
 653  8AEC CD CF 8B     	call Guarda_foto_entidad_a_pintar
 654  8AEF
 655  8AEF 21 14 89     14 ld hl,Ctrl_0
 656  8AF2 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 657  8AF4
 658  8AF4 AF           	xor a
 659  8AF5 32 15 89     	ld (Obj_dibujado),a
 660  8AF8
 661  8AF8 11 9E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 662  8AFB CD B5 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 663  8AFE
 664  8AFE              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 665  8AFE
 666  8AFE              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 667  8AFE
 668  8AFE              ;	call Calcula_numero_de_disparotes
 669  8AFE
 670  8AFE CD 4F 8C      call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 671  8B01              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 672  8B01              ;														; _ interrupción.
 673  8B01 3E 04        	ld a,4
 674  8B03 D3 FE        	out ($fe),a
 675  8B05
 676  8B05              ; ----------------------------------------
 677  8B05
 678  8B05 3A 29 89     	ld a,(Ctrl_1) 										; Existe Loop?
 679  8B08 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 680  8B0A CA F4 89     	jp z,Main
 681  8B0D
 682  8B0D              ; -----
 683  8B0D              ;	(((
 684  8B0D
 685  8B0D 3A 75 89     	ld a,(Contador_de_frames)
 686  8B10 47           	ld b,a
 687  8B11 3A 79 89     	ld a,(Activa_recarga_cajas)
 688  8B14 B8           	cp b
 689  8B15 28 08        	jr z,20F
 690  8B17
 691  8B17 21 29 89     	ld hl,Ctrl_1
 692  8B1A CB E6        	set 4,(hl)
 693  8B1C C3 F4 89     	jp Main
 694  8B1F
 695  8B1F 21 29 89     20 ld hl,Ctrl_1
 696  8B22 CB A6        	res 4,(hl)
 697  8B24 F3           	di
 698  8B25
 699  8B25 3A 75 89     	ld a,(Contador_de_frames)
 700  8B28
 701  8B28              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 702  8B28              ;! _ IMPREDECIBLE !!!!
 703  8B28
 704  8B28 C6 0A        	add 10
 705  8B2A 32 78 89     	ld (Clock_Entidades_en_curso),a
 706  8B2D
 707  8B2D C3 9A 89     	jp 4B
 708  8B30
 709  8B30 C9           	ret
 710  8B31
 711  8B31              ; --------------------------------------------------------------------------------------------------------------
 712  8B31              ;
 713  8B31              ;	27/05/23
 714  8B31
 715  8B31              Mov_obj
 716  8B31
 717  8B31 3A 27 89     	ld a,(Ctrl_2)
 718  8B34 CB 4F        	bit 1,a
 719  8B36 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 720  8B38
 721  8B38              ; Explosión:
 722  8B38
 723  8B38 3A 28 89     	ld a,(Frames_explosion)
 724  8B3B A7           	and a
 725  8B3C 20 11        	jr nz,4F
 726  8B3E
 727  8B3E              ; Una alimaña menos!!!!!!!!!1
 728  8B3E
 729  8B3E CD BE 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 730  8B41 21 33 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 731  8B44 35           	dec (hl)
 732  8B45 21 34 89     	ld hl,Entidades_en_curso
 733  8B48 35           	dec (hl)
 734  8B49 21 32 89     	ld hl,Numero_de_entidades
 735  8B4C 35           	dec (hl)
 736  8B4D 18 40        	jr 3F
 737  8B4F
 738  8B4F              ; -----
 739  8B4F
 740  8B4F              ;	`Movemos´ la explosión.
 741  8B4F
 742  8B4F 2A F4 88     4 ld hl,(Puntero_DESPLZ_der)
 743  8B52 23           	inc hl
 744  8B53 23           	inc hl
 745  8B54 22 F4 88     	ld (Puntero_DESPLZ_der),hl
 746  8B57 CD F3 8C     	call Extrae_address
 747  8B5A 22 EA 88     	ld (Puntero_objeto),hl
 748  8B5D
 749  8B5D 21 28 89     	ld hl,Frames_explosion
 750  8B60 35           	dec (hl)
 751  8B61
 752  8B61 CD BF 8B     	call Guarda_foto_entidad_a_borrar
 753  8B64 18 29        	jr 3F
 754  8B66
 755  8B66 AF           2 xor a
 756  8B67 32 15 89     	ld (Obj_dibujado),a
 757  8B6A 32 14 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 758  8B6D              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 759  8B6D              ; 														; _de la entidad.
 760  8B6D CD D9 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 761  8B70              ;														; Obj_dibujado="0".
 762  8B70              ; Movemos Entidades malignas.
 763  8B70
 764  8B70              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 765  8B70              ;	and a 												; _a movernos. (Limitador_de_entidades).
 766  8B70              ;	ret z
 767  8B70
 768  8B70 CD 23 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 769  8B73
 770  8B73 3A 14 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 771  8B76 CB 67        	bit 4,a
 772  8B78 C8           	ret z
 773  8B79
 774  8B79              ; Ha habido desplazamiento de la entidad maligna.
 775  8B79              ; Ha llegado a zona de AMADEUS ???
 776  8B79
 777  8B79 3A ED 88     	ld a,(Coordenada_y)
 778  8B7C FE 14        	cp $14
 779  8B7E D4 4E 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 780  8B81              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 781  8B81              ; ---------
 782  8B81
 783  8B81 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 784  8B83 32 15 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 785  8B86 CD D9 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 786  8B89 CD F0 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 787  8B8C CD BF 8B     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 788  8B8F C9           3 ret													; _de la misma.
 789  8B90
 790  8B90              ; --------------------------------------------------------------------------------------------------------------
 791  8B90              ;
 792  8B90              ;	29/1/23
 793  8B90
 794  8B90              Mov_Amadeus
 795  8B90
 796  8B90 AF           	xor a
 797  8B91 32 15 89     	ld (Obj_dibujado),a
 798  8B94 CD D9 8B         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 799  8B97              ;														; Obj_dibujado="0".
 800  8B97              ; Movemos Amadeus.
 801  8B97
 802  8B97 CD E0 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 803  8B9A 3A 14 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 804  8B9D CB 67        	bit 4,a
 805  8B9F C8           	ret z
 806  8BA0
 807  8BA0              ; ---------
 808  8BA0
 809  8BA0 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 810  8BA2 32 15 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 811  8BA5 CD D9 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 812  8BA8 CD F0 8B         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 813  8BAB CD BF 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 814  8BAE C9           	ret													; _de la nave.
 815  8BAF
 816  8BAF              ; -----------------------------------------------------------------------------------
 817  8BAF
 818  8BAF CD F9 8C     Inicia_entidad	call Inicia_Puntero_objeto
 819  8BB2 CD C8 99     	call Recompone_posicion_inicio
 820  8BB5 CD A7 93     	call Draw
 821  8BB8 CD A0 7F     	call Guarda_foto_registros
 822  8BBB CD 41 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 823  8BBE C9           	ret
 824  8BBF
 825  8BBF              ; --------------------------------------------------------------------------------------------------------------
 826  8BBF              ;
 827  8BBF              ;	31/8/23
 828  8BBF              ;
 829  8BBF              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 830  8BBF
 831  8BBF              Guarda_foto_entidad_a_borrar
 832  8BBF
 833  8BBF CD 8B 96     	call Prepara_draw
 834  8BC2 CD BB 95     	call calcula_CColumnass
 835  8BC5 CD F2 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 836  8BC8 CD 51 96     	call Define_rutina_de_impresion
 837  8BCB CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 838  8BCE C9           	ret
 839  8BCF
 840  8BCF              ; --------------------------------------------------------------------------------------------------------------
 841  8BCF              ;
 842  8BCF              ;	31/08/23
 843  8BCF              ;
 844  8BCF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 845  8BCF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 846  8BCF
 847  8BCF              Guarda_foto_entidad_a_pintar
 848  8BCF
 849  8BCF CD FC 8B     	call Repone_pintar
 850  8BD2 CD A7 93     	call Draw
 851  8BD5 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 852  8BD8 C9           	ret
 853  8BD9
 854  8BD9              ; --------------------------------------------------------------------------------------------------------------
 855  8BD9              ;
 856  8BD9              ;
 857  8BD9
 858  8BD9 21 E6 88     Prepara_var_pintado_borrado	ld hl,Filas
 859  8BDC 3A 15 89     	ld a,(Obj_dibujado)
 860  8BDF A7           	and a
 861  8BE0 28 05        	jr z,1F
 862  8BE2 11 0A 89     	ld de,Variables_de_pintado
 863  8BE5 18 03        	jr 2F
 864  8BE7 11 00 89     1 ld de,Variables_de_borrado
 865  8BEA 01 08 00     2 ld bc,8
 866  8BED ED B0        	ldir
 867  8BEF C9           	ret
 868  8BF0
 869  8BF0              ; --------------------------------------------------------------------------------------------------------------
 870  8BF0
 871  8BF0 21 00 89     Repone_borrar ld hl,Variables_de_borrado
 872  8BF3 11 E6 88     	ld de,Filas
 873  8BF6 01 08 00     	ld bc,8
 874  8BF9 ED B0        	ldir
 875  8BFB C9           	ret
 876  8BFC
 877  8BFC 21 0A 89     Repone_pintar ld hl,Variables_de_pintado
 878  8BFF 11 E6 88     	ld de,Filas
 879  8C02 01 08 00     	ld bc,8
 880  8C05 ED B0        	ldir
 881  8C07 C9           	ret
 882  8C08
 883  8C08              ; *************************************************************************************************************************************************************
 884  8C08              ;
 885  8C08              ; 8/1/23
 886  8C08              ;
 887  8C08              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 888  8C08              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 889  8C08              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 890  8C08
 891  8C08              ; Destruye HL y DE !!!!!
 892  8C08
 893  8C08              Inicia_punteros_de_cajas
 894  8C08
 895  8C08 21 8C 85     	ld hl,Indice_de_cajas
 896  8C0B CD F3 8C         call Extrae_address
 897  8C0E 22 2C 89         ld (Puntero_store_caja),hl
 898  8C11 21 8E 85     	ld hl,Indice_de_cajas+2
 899  8C14 22 30 89     	ld (Indice_restore_caja),hl
 900  8C17 CD F3 8C     	call Extrae_address
 901  8C1A 22 2E 89     	ld (Puntero_restore_caja),hl
 902  8C1D C9               ret
 903  8C1E
 904  8C1E              ; ---------------------------------------------------------------
 905  8C1E              ;
 906  8C1E              ;	9/8/23
 907  8C1E              ;
 908  8C1E              ;	Inicialización y gestión de álbumes de fotos y cajas.
 909  8C1E
 910  8C1E              Inicia_punteros_de_albumes_y_malotes
 911  8C1E
 912  8C1E 21 EC 84     	ld hl,Indice_album_de_fotos
 913  8C21 22 56 89     	ld (Puntero_indice_album_de_fotos),hl
 914  8C24 CD F3 8C     	call Extrae_address
 915  8C27 22 40 89     	ld (Stack_snapshot),hl
 916  8C2A
 917  8C2A 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 918  8C2D 22 58 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 919  8C30 CD F3 8C     	call Extrae_address
 920  8C33 22 42 89     	ld (Stack_snapshot_disparos),hl
 921  8C36
 922  8C36 21 FC 84     	ld hl,Indice_End_Snapshot
 923  8C39 22 5A 89     	ld (Puntero_indice_End_Snapshot),hl
 924  8C3C CD F3 8C     	call Extrae_address
 925  8C3F 22 5E 89     	ld (Puntero_de_End_Snapshot),hl
 926  8C42
 927  8C42 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 928  8C45 22 5C 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 929  8C48 CD F3 8C     	call Extrae_address
 930  8C4B 22 60 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 931  8C4E
 932  8C4E C9           	ret
 933  8C4F
 934  8C4F              ;	2/9/23
 935  8C4F
 936  8C4F              Avanza_puntero_de_album_de_fotos_y_malotes
 937  8C4F
 938  8C4F              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 939  8C4F
 940  8C4F              ; Estamos en el último álbum del índice???.
 941  8C4F
 942  8C4F 2A 56 89     	ld hl,(Puntero_indice_album_de_fotos)
 943  8C52 01 F2 84     	ld bc,Indice_album_de_fotos+6
 944  8C55 A7           	and a
 945  8C56 ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 946  8C58 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 947  8C5A
 948  8C5A 21 29 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 949  8C5D CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 950  8C5F 76           	halt
 951  8C60 C9           	ret
 952  8C61
 953  8C61 F3           1 di
 954  8C62 2A 56 89     	ld hl,(Puntero_indice_album_de_fotos)
 955  8C65 23           	inc hl
 956  8C66 23           	inc hl
 957  8C67 22 56 89     	ld (Puntero_indice_album_de_fotos),hl
 958  8C6A CD F3 8C     	call Extrae_address
 959  8C6D 22 40 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 960  8C70
 961  8C70 2A 5A 89     	ld hl,(Puntero_indice_End_Snapshot)
 962  8C73 23           	inc hl
 963  8C74 23           	inc hl
 964  8C75 22 5A 89     	ld (Puntero_indice_End_Snapshot),hl
 965  8C78 CD F3 8C     	call Extrae_address
 966  8C7B 22 5E 89     	ld (Puntero_de_End_Snapshot),hl
 967  8C7E FB           	ei
 968  8C7F
 969  8C7F C9           	ret
 970  8C80
 971  8C80              ; *************************************************************************************************************************************************************
 972  8C80              ;
 973  8C80              ; 8/1/23
 974  8C80              ;
 975  8C80              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 976  8C80
 977  8C80 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 978  8C83 22 63 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 979  8C86 C9           	ret
 980  8C87 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 981  8C8A 22 65 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 982  8C8D C9           	ret
 983  8C8E
 984  8C8E              ; -------------------------------------------------------------------------------------------------------------
 985  8C8E              ;
 986  8C8E              ; 4/9/23
 987  8C8E              ;
 988  8C8E
 989  8C8E              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 990  8C8E
 991  8C8E 2A 48 89     Limpia_album_Amadeus ld hl,(End_Snapshot_Amadeus)
 992  8C91 01 A0 72     	ld bc,Album_de_fotos_Amadeus
 993  8C94 A7           	and a
 994  8C95 ED 42        	sbc hl,bc
 995  8C97
 996  8C97 45           	ld b,l
 997  8C98
 998  8C98 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 999  8C9B 36 00        1 ld (hl),0
1000  8C9D 23           	inc hl
1001  8C9E 10 FB        	djnz 1B
1002  8CA0
1003  8CA0              ; Restauramos (End_Snapshot_Amadeus).
1004  8CA0
1005  8CA0 21 00 00     	ld hl,0
1006  8CA3 22 48 89     	ld (End_Snapshot_Amadeus),hl
1007  8CA6
1008  8CA6 C9           	ret
1009  8CA7
1010  8CA7              ; -------------------------------------------------------------------------------------------------------------
1011  8CA7              ;
1012  8CA7              ; 4/9/23
1013  8CA7              ;
1014  8CA7
1015  8CA7              Calcula_numero_de_malotes
1016  8CA7
1017  8CA7 21 00 70     	ld hl,Album_de_fotos
1018  8CAA EB           	ex de,hl
1019  8CAB 2A 44 89     	ld hl,(End_Snapshot)
1020  8CAE
1021  8CAE 06 00        4 ld b,0
1022  8CB0 7D           	ld a,l
1023  8CB1 93           	sub e
1024  8CB2 28 07        	jr z,1F
1025  8CB4
1026  8CB4              ; Nº de malotes no es "0".
1027  8CB4
1028  8CB4 D6 06        2 sub 6
1029  8CB6 04           	inc b
1030  8CB7 A7           	and a
1031  8CB8 20 FA        	jr nz,2B
1032  8CBA 78           	ld a,b
1033  8CBB
1034  8CBB 32 35 89     1 ld (Numero_de_malotes),a
1035  8CBE C9           	ret
1036  8CBF
1037  8CBF              ; -------------------------------------------------------------------------------------------------------------
1038  8CBF              ;
1039  8CBF              ; 4/9/23
1040  8CBF              ;
1041  8CBF
1042  8CBF              Calcula_malotes_Amadeus
1043  8CBF
1044  8CBF 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1045  8CC2 EB           	ex de,hl
1046  8CC3 2A 48 89     	ld hl,(End_Snapshot_Amadeus)
1047  8CC6
1048  8CC6 7C           	ld a,h
1049  8CC7 A7           	and a
1050  8CC8 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1051  8CCA
1052  8CCA 06 00        	ld b,0
1053  8CCC 7D           	ld a,l
1054  8CCD 93           	sub e
1055  8CCE 28 07        	jr z,1F
1056  8CD0
1057  8CD0              ; Nº de malotes no es "0".
1058  8CD0
1059  8CD0 D6 06        2 sub 6
1060  8CD2 04           	inc b
1061  8CD3 A7           	and a
1062  8CD4 20 FA        	jr nz,2B
1063  8CD6 78           	ld a,b
1064  8CD7
1065  8CD7 32 35 89     1 ld (Numero_de_malotes),a
1066  8CDA C9           	ret
1067  8CDB
1068  8CDB              ; -------------------------------------------------------------------------------------------------------------
1069  8CDB              ;
1070  8CDB              ; 28/2/23
1071  8CDB              ;
1072  8CDB
1073  8CDB              Calcula_numero_de_disparotes
1074  8CDB
1075  8CDB 21 50 71     	ld hl,Album_de_fotos_disparos
1076  8CDE EB           	ex de,hl
1077  8CDF 2A 60 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1078  8CE2
1079  8CE2 06 00        	ld b,0
1080  8CE4 7D           	ld a,l
1081  8CE5 93           	sub e
1082  8CE6 28 07        	jr z,1F
1083  8CE8
1084  8CE8              ; Nº de malotes no es "0".
1085  8CE8
1086  8CE8 D6 06        2 sub 6
1087  8CEA 04           	inc b
1088  8CEB A7           	and a
1089  8CEC 20 FA        	jr nz,2B
1090  8CEE 78           	ld a,b
1091  8CEF
1092  8CEF 32 62 89     1 ld (Numero_de_disparotes),a
1093  8CF2 C9           	ret
1094  8CF3
1095  8CF3              ; *************************************************************************************************************************************************************
1096  8CF3              ;
1097  8CF3              ; 20/10/22
1098  8CF3              ;
1099  8CF3              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1100  8CF3              ;
1101  8CF3              ; Destruye el puntero y DE !!!!!
1102  8CF3
1103  8CF3 5E           Extrae_address ld e,(hl)
1104  8CF4 23           	inc hl
1105  8CF5 56           	ld d,(hl)
1106  8CF6 2B           	dec hl
1107  8CF7 EB           	ex de,hl
1108  8CF8 C9           	ret
1109  8CF9
1110  8CF9              ; *************************************************************************************************************************************************************
1111  8CF9              ;
1112  8CF9              ;	7/2/23
1113  8CF9              ;
1114  8CF9              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1115  8CF9              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1116  8CF9              ;
1117  8CF9              ;   Destruye HL y BC !!!!!,
1118  8CF9              ;
1119  8CF9              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1120  8CF9              ;					"0" ..... Izquierda.
1121  8CF9
1122  8CF9              Inicia_Puntero_objeto
1123  8CF9
1124  8CF9 3A FA 88     	ld a,(Cuad_objeto)
1125  8CFC E6 01        	and 1
1126  8CFE F5           	push af
1127  8CFF CC 1D 8D     	call z,Inicia_puntero_objeto_izq
1128  8D02 F1           	pop af
1129  8D03 28 2B        	jr z,1F
1130  8D05 CD 0A 8D     	call Inicia_puntero_objeto_der
1131  8D08 18 26        	jr 1F
1132  8D0A
1133  8D0A              ; Arrancamos desde la parte izquierda de la pantalla.
1134  8D0A              ; Iniciamos (Indice_Sprite_der).
1135  8D0A
1136  8D0A 2A F0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1137  8D0D 22 F4 88     	ld (Puntero_DESPLZ_der),hl
1138  8D10 CD F3 8C     	call Extrae_address
1139  8D13 22 EA 88     	ld (Puntero_objeto),hl
1140  8D16
1141  8D16 2A F2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1142  8D19 22 F6 88     	ld (Puntero_DESPLZ_izq),hl
1143  8D1C C9           	ret
1144  8D1D
1145  8D1D              ; Arrancamos desde la parte derecha de la pantalla.
1146  8D1D              ; Iniciamos (Indice_Sprite_izq).
1147  8D1D
1148  8D1D 2A F2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1149  8D20 22 F6 88     	ld (Puntero_DESPLZ_izq),hl
1150  8D23 CD F3 8C     	call Extrae_address
1151  8D26 22 EA 88     	ld (Puntero_objeto),hl
1152  8D29
1153  8D29 2A F0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1154  8D2C 22 F4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1155  8D2F C9           	ret
1156  8D30
1157  8D30              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1158  8D30
1159  8D30 21 40 83     1 ld hl,Amadeus
1160  8D33 ED 4B EA 88  	ld bc,(Puntero_objeto)
1161  8D37 B7 ED 42     	sub hl,bc
1162  8D3A C0           	ret nz
1163  8D3B 21 14 89     	ld hl,Ctrl_0
1164  8D3E CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1165  8D40 C9           	ret 												; _de nuestra nave en los extremos.
1166  8D41
1167  8D41              ; *************************************************************************************************************************************************************
1168  8D41              ;
1169  8D41              ;	14/5/23
1170  8D41              ;
1171  8D41              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1172  8D41              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1173  8D41
1174  8D41              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1175  8D41              ;	_de la 2ª y 3ª entidad respectivamente.
1176  8D41
1177  8D41              Store_Restore_cajas
1178  8D41
1179  8D41 E5           	push hl
1180  8D42 D5           	push de
1181  8D43 C5            	push bc
1182  8D44
1183  8D44              ;	STORE !!!!!
1184  8D44              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1185  8D44
1186  8D44 21 E6 88     	ld hl,Filas
1187  8D47 ED 5B 2C 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1188  8D4B 01 43 00     	ld bc,67
1189  8D4E ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1190  8D50
1191  8D50              ; 	Entidad_sospechosa. 20/4/23
1192  8D50
1193  8D50 3A FF 88     	ld a,(Impacto)
1194  8D53 A7           	and a
1195  8D54 28 0C        	jr z,1F
1196  8D56
1197  8D56 2A 2C 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1198  8D59 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1199  8D5C A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1200  8D5D ED 4A        	adc hl,bc 											; _ "0" más adelante.
1201  8D5F 22 68 89     	ld (Entidad_sospechosa_de_colision),hl
1202  8D62
1203  8D62              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1204  8D62
1205  8D62 2A 2E 89     1 ld hl,(Puntero_restore_caja)
1206  8D65 7E           	ld a,(hl)
1207  8D66 A7           	and a
1208  8D67 F5           	push af
1209  8D68 28 08        	jr z,2F
1210  8D6A
1211  8D6A 11 E6 88     	ld de,Filas
1212  8D6D 01 43 00     	ld bc,67
1213  8D70 ED B0        	ldir
1214  8D72
1215  8D72 CD 8E 8D     2 call Incrementa_punteros_de_cajas
1216  8D75 F1           	pop af
1217  8D76 28 EA        	jr z,1B
1218  8D78
1219  8D78 C1           	pop bc
1220  8D79 D1           	pop de
1221  8D7A E1           	pop hl
1222  8D7B
1223  8D7B C9           	ret
1224  8D7C
1225  8D7C              ; **************************************************************************************************
1226  8D7C              ;
1227  8D7C              ;	12/05/23
1228  8D7C              ;
1229  8D7C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1230  8D7C
1231  8D7C E5           Restore_entidad push hl
1232  8D7D D5           	push de
1233  8D7E C5            	push bc
1234  8D7F
1235  8D7F 2A 2C 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1236  8D82 11 E6 88     	ld de,Filas
1237  8D85 01 43 00     	ld bc,67
1238  8D88 ED B0        	ldir
1239  8D8A
1240  8D8A C1           	pop bc
1241  8D8B D1           	pop de
1242  8D8C E1           	pop hl
1243  8D8D C9           	ret
1244  8D8E
1245  8D8E
1246  8D8E              ; **************************************************************************************************
1247  8D8E              ;
1248  8D8E              ;	08/05/23
1249  8D8E              ;
1250  8D8E              ;	Incrementamos los dos punteros de entidades. (+1).
1251  8D8E
1252  8D8E 2A 2E 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1253  8D91 22 2C 89     	ld (Puntero_store_caja),hl
1254  8D94 2A 30 89     	ld hl,(Indice_restore_caja)
1255  8D97 23           	inc hl
1256  8D98 23           	inc hl
1257  8D99 22 30 89     	ld (Indice_restore_caja),hl
1258  8D9C CD F3 8C         call Extrae_address
1259  8D9F 22 2E 89         ld (Puntero_restore_caja),hl
1260  8DA2 C9               ret
1261  8DA3
1262  8DA3              ; **************************************************************************************************
1263  8DA3              ;
1264  8DA3              ;	25/01/23
1265  8DA3              ;
1266  8DA3              ;	Restore_Amadeus
1267  8DA3              ;
1268  8DA3              ;	Cargamos en DRAW los parámetros de Amadeus.
1269  8DA3              ;
1270  8DA3
1271  8DA3 E5           Restore_Amadeus	push hl
1272  8DA4 D5           	push de
1273  8DA5 C5            	push bc
1274  8DA6 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1275  8DA9 11 E6 88     	ld de,Filas
1276  8DAC 01 43 00     	ld bc,67
1277  8DAF ED B0        	ldir
1278  8DB1 C1           	pop bc
1279  8DB2 D1           	pop de
1280  8DB3 E1           	pop hl
1281  8DB4 C9           	ret
1282  8DB5
1283  8DB5              ; *************************************************************************************************************************************************************
1284  8DB5              ;
1285  8DB5              ;	29/04/23
1286  8DB5              ;
1287  8DB5              ;	Store_Amadeus
1288  8DB5              ;
1289  8DB5              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1290  8DB5              ;
1291  8DB5              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1292  8DB5              ;
1293  8DB5              ;	DESTRUYE: HL y BC y DE.
1294  8DB5
1295  8DB5 21 E6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1296  8DB8 01 43 00     	ld bc,67
1297  8DBB ED B0        	ldir
1298  8DBD C9           	ret
1299  8DBE
1300  8DBE              ; -----------------------------------------------------------
1301  8DBE              ;
1302  8DBE              ;	27/04/23
1303  8DBE              ;
1304  8DBE              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1305  8DBE              ;
1306  8DBE              ;	Destruye: HL,BC,DE,A
1307  8DBE
1308  8DBE 21 E6 88     Borra_datos_entidad ld hl,Filas
1309  8DC1 01 42 00     	ld bc,66
1310  8DC4 AF           	xor a
1311  8DC5 77           	ld (hl),a
1312  8DC6 11 E7 88     	ld de,Filas+1
1313  8DC9 ED B0        	ldir
1314  8DCB C9           	ret
1315  8DCC
1316  8DCC              ; -----------------------------------------------------------
1317  8DCC
1318  8DCC              ; Teclado.
1319  8DCC
1320  8DCC 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1321  8DCE DB FE        	in a,($fe)
1322  8DD0 E6 01        	and $01
1323  8DD2 28 02        	jr z,1f
1324  8DD4 18 F6        	jr Pulsa_ENTER
1325  8DD6 C9           1 ret
1326  8DD7
1327  8DD7              ; **************************************************************************************************
1328  8DD7              ;
1329  8DD7              ; Temporización.
1330  8DD7
1331  8DD7              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1332  8DD7              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1333  8DD7              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1334  8DD7              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1335  8DD7
1336  8DD7              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1337  8DD7              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1338  8DD7              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1339  8DD7
1340  8DD7              ; A partir de $4f61 no hace falta DELAY.
1341  8DD7
1342  8DD7              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1343  8DD7
1344  8DD7 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1345  8DDA 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1346  8DDB 78           	LD A,B
1347  8DDC A7           	AND A
1348  8DDD 20 FB        	JR NZ,wait
1349  8DDF C9           	RET
1350  8DE0
1351  8DE0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1352  8DE0              ;
1353  8DE0              ;	5/3/23
1354  8DE0              ;
1355  8DE0              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1356  8DE0
1357  8DE0              Movimiento_Amadeus
1358  8DE0
1359  8DE0              ; Disparo.
1360  8DE0
1361  8DE0 3A 7A 89     	ld a,(Disparo_Amadeus)
1362  8DE3 A7           	and a
1363  8DE4 20 02        	jr nz,1F
1364  8DE6 18 15        	jr 2F
1365  8DE8
1366  8DE8 3E F7        1 ld a,$f7													; "5" para disparar.
1367  8DEA DB FE        	in a,($fe)
1368  8DEC E6 10        	and $10
1369  8DEE
1370  8DEE F5           	push af
1371  8DEF CC B1 8E     	call z,Genera_disparo
1372  8DF2 F1           	pop af
1373  8DF3 20 08        	jr nz,2F
1374  8DF5
1375  8DF5 3A 7A 89     	ld a,(Disparo_Amadeus)
1376  8DF8 EE 01        	xor 1
1377  8DFA 32 7A 89     	ld (Disparo_Amadeus),a
1378  8DFD
1379  8DFD 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1380  8DFF DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1381  8E01 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1382  8E03 CC 82 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1383  8E06 3E F7        	ld a,$f7
1384  8E08 DB FE        	in a,($fe)
1385  8E0A E6 01        	and $01
1386  8E0C C8           	ret z
1387  8E0D
1388  8E0D 3E F7        	ld a,$f7
1389  8E0F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1390  8E11 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1391  8E13 CC 64 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1392  8E16 C9           	ret
1393  8E17
1394  8E17              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1395  8E17              ;
1396  8E17              ;	Rutina provisional para que los malotes cagen balas.
1397  8E17
1398  8E17              Detecta_disparo_entidad
1399  8E17
1400  8E17 3A 7D 89     	ld a,(Disparo_entidad)
1401  8E1A A7           	and a
1402  8E1B C8           	ret z
1403  8E1C
1404  8E1C              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1405  8E1C
1406  8E1C              ;	ld a,$7f				; Detecta SPACE.
1407  8E1C              ;	in a,($fe)
1408  8E1C              ;	and 1
1409  8E1C              ;	ret nz
1410  8E1C
1411  8E1C              ;	call Genera_disparo
1412  8E1C C9           	ret
1413  8E1D
1414  8E1D              ; ----------------------------------------------------------------------
1415  8E1D              ;
1416  8E1D              ;	11/8/23
1417  8E1D
1418  8E1D              Frame
1419  8E1D
1420  8E1D              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1421  8E1D              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1422  8E1D
1423  8E1D              ; PINTAMOS.
1424  8E1D
1425  8E1D ED 73 3E 89  	ld (Stack_3),sp
1426  8E21
1427  8E21              ; Guardamos registros y SP.
1428  8E21
1429  8E21 08           	ex af,af'
1430  8E22 F5           	push af	;af'
1431  8E23 D9           	exx
1432  8E24 E5           	push hl	;hl'
1433  8E25 D5           	push de	;de'
1434  8E26 C5           	push bc	;bc'
1435  8E27 D9           	exx
1436  8E28 E5           	push hl	;hl
1437  8E29 D5           	push de	;de
1438  8E2A C5           	push bc	;bc
1439  8E2B 08           	ex af,af'
1440  8E2C F5           	push af	;af
1441  8E2D DD E5        	push ix
1442  8E2F FD E5        	push iy
1443  8E31
1444  8E31 3E 02        	ld a,2
1445  8E33 D3 FE            out ($fe),a											; Rojo.
1446  8E35
1447  8E35              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1448  8E35              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1449  8E35
1450  8E35 2A 56 89     	ld hl,(Puntero_indice_album_de_fotos)
1451  8E38 01 EC 84     	ld bc,Indice_album_de_fotos
1452  8E3B A7           	and a
1453  8E3C ED 42        	sbc hl,bc
1454  8E3E 28 57        	jr z,6F
1455  8E40
1456  8E40 CD A7 8C     	call Calcula_numero_de_malotes
1457  8E43 CD B5 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1458  8E46
1459  8E46 CD BF 8C     	call Calcula_malotes_Amadeus
1460  8E49 CD 37 97     	call Extrae_foto_Amadeus
1461  8E4C CD 8E 8C     	call Limpia_album_Amadeus
1462  8E4F
1463  8E4F              ;	call Extrae_foto_disparos
1464  8E4F 3E 01            ld a,1
1465  8E51 D3 FE            out ($fe),a											; Azul.
1466  8E53
1467  8E53              ; 	Gestiona albumes de fotos.
1468  8E53
1469  8E53              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1470  8E53 CD AD 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1471  8E56
1472  8E56              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1473  8E56
1474  8E56 3A 29 89     	ld a,(Ctrl_1)
1475  8E59 CB 6F        	bit 5,a
1476  8E5B 20 24        	jr nz,1F
1477  8E5D
1478  8E5D              ; No hemos terminado de guardar el último FRAME.
1479  8E5D
1480  8E5D 2A 56 89     	ld hl,(Puntero_indice_album_de_fotos)
1481  8E60              ;	ld bc,Indice_album_de_fotos
1482  8E60 2B           	dec hl
1483  8E61 2B           	dec hl
1484  8E62
1485  8E62              ;	ld a,l
1486  8E62              ;	sub c
1487  8E62              ;	jr z,$
1488  8E62
1489  8E62 22 56 89     	ld (Puntero_indice_album_de_fotos),hl
1490  8E65
1491  8E65 2A 5A 89     	ld hl,(Puntero_indice_End_Snapshot)
1492  8E68 2B           	dec hl
1493  8E69 2B           	dec hl
1494  8E6A 22 5A 89     	ld (Puntero_indice_End_Snapshot),hl
1495  8E6D CD F3 8C     	call Extrae_address
1496  8E70 22 5E 89     	ld (Puntero_de_End_Snapshot),hl
1497  8E73
1498  8E73 CD F3 8C     	call Extrae_address
1499  8E76
1500  8E76              ; Esta vacío este album???
1501  8E76
1502  8E76 24           	inc h
1503  8E77 25           	dec h
1504  8E78 20 02        	jr nz,5F
1505  8E7A
1506  8E7A              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1507  8E7A
1508  8E7A 18 05        	jr 1F
1509  8E7C
1510  8E7C 22 40 89     5 ld (Stack_snapshot),hl
1511  8E7F 18 09        	jr 2F
1512  8E81
1513  8E81              ; FRAME completo.
1514  8E81
1515  8E81 2A 56 89     1 ld hl,(Puntero_indice_album_de_fotos)
1516  8E84 CD F3 8C     	call Extrae_address
1517  8E87 22 40 89     	ld (Stack_snapshot),hl
1518  8E8A
1519  8E8A              ;	En este punto:
1520  8E8A
1521  8E8A              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1522  8E8A              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1523  8E8A
1524  8E8A              ; RELOJES.
1525  8E8A
1526  8E8A 21 75 89     2 ld hl,Contador_de_frames
1527  8E8D 7E           	ld a,(hl)
1528  8E8E FE FF        	cp $ff
1529  8E90 20 04        	jr nz,3F
1530  8E92 34           	inc (hl)
1531  8E93 21 76 89     	ld hl,Contador_de_frames_2
1532  8E96 34           3 inc (hl)											; 0 - 255
1533  8E97
1534  8E97 21 29 89     6 ld hl,Ctrl_1
1535  8E9A CB AE        	res 5,(hl)
1536  8E9C
1537  8E9C              ; Recuperamos registros y SP.
1538  8E9C
1539  8E9C FD E1        	pop iy
1540  8E9E DD E1        	pop ix
1541  8EA0 F1           	pop af
1542  8EA1 C1           	pop bc
1543  8EA2 D1           	pop de
1544  8EA3 E1           	pop hl
1545  8EA4 D9           	exx
1546  8EA5 C1           	pop bc
1547  8EA6 D1           	pop de
1548  8EA7 E1           	pop hl
1549  8EA8 08           	ex af,af'
1550  8EA9 F1           	pop af
1551  8EAA 08           	ex af,af'
1552  8EAB D9           	exx
1553  8EAC
1554  8EAC ED 7B 3E 89  	ld sp,(Stack_3)
1555  8EB0
1556  8EB0 C9           	ret
1557  8EB1
1558  8EB1              ; ---------------------------------------------------------------
1559  8EB1
1560  8EB1              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EB1              ; ******************************************************************************************************************************************************************************************
   2+ 8EB1              ;
   3+ 8EB1              ;   21/07/23
   4+ 8EB1              ;
   5+ 8EB1              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EB1              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EB1              ;
   8+ 8EB1              ;
   9+ 8EB1              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EB1              ;
  11+ 8EB1              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EB1              ;               _ hacen las entidades hacia abajo.
  13+ 8EB1              ;
  14+ 8EB1              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EB1              ;
  16+ 8EB1              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EB1              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EB1              ;
  19+ 8EB1              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EB1              ;           _ la bala.
  21+ 8EB1              ;
  22+ 8EB1              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EB1              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EB1              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EB1              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EB1              ;           _ en el momento de generarse la bala)).
  27+ 8EB1
  28+ 8EB1              Genera_disparo
  29+ 8EB1
  30+ 8EB1              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EB1              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EB1              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EB1              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EB1              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EB1              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EB1              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EB1
  38+ 8EB1              ; Exclusiones:
  39+ 8EB1
  40+ 8EB1 3A FE 88         ld a,(Vel_down)
  41+ 8EB4 47               ld b,a
  42+ 8EB5 3A 74 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EB8 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EB9 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EBA 3A 23 89         ld a,(Columnas)
  46+ 8EBD 47               ld b,a
  47+ 8EBE 3A E7 88         ld a,(Columns)
  48+ 8EC1 B8               cp b
  49+ 8EC2 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EC3
  51+ 8EC3              ; ----- ----- -----
  52+ 8EC3
  53+ 8EC3 3A 14 89         ld a,(Ctrl_0)
  54+ 8EC6 CB 77            bit 6,a
  55+ 8EC8 20 06            jr nz,14F
  56+ 8ECA
  57+ 8ECA 3A ED 88         ld a,(Coordenada_y)
  58+ 8ECD FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8ECF D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8ED0
  61+ 8ED0 21 00 80     14 ld hl,Indice_disparo
  62+ 8ED3 3A EE 88         ld a,(CTRL_DESPLZ)
  63+ 8ED6 4F               ld c,a
  64+ 8ED7 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8ED9              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8ED9              ;                                            ""        ""       "f9", B="1"
  67+ 8ED9              ;                                            ""        ""       "fb", B="2"
  68+ 8ED9              ;                                            ""        ""       "fb", B="3"
  69+ 8ED9 A7               and a
  70+ 8EDA 28 10            jr z,1F
  71+ 8EDC E6 01            and 1
  72+ 8EDE C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EDF
  74+ 8EDF 79               ld a,c
  75+ 8EE0 16 F9            ld d,$f9
  76+ 8EE2 23           2 inc hl
  77+ 8EE3 23               inc hl
  78+ 8EE4 04               inc b
  79+ 8EE5 BA               cp d
  80+ 8EE6 28 04            jr z,1F
  81+ 8EE8 14               inc d
  82+ 8EE9 14               inc d
  83+ 8EEA 18 F6            jr 2B
  84+ 8EEC
  85+ 8EEC CD F3 8C     1 call Extrae_address
  86+ 8EEF E5               push hl
  87+ 8EF0 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8EF2 DD 21 7D 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8EF6
  90+ 8EF6              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8EF6              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8EF6
  93+ 8EF6 3A 14 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8EF9 CB 77            bit 6,a
  95+ 8EFB 20 04            jr nz,19F
  96+ 8EFD
  97+ 8EFD AF               xor a
  98+ 8EFE 32 7D 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F01
 100+ 8F01 3A FA 88     19 ld a,(Cuad_objeto)
 101+ 8F04 FE 02            cp 2
 102+ 8F06 38 66            jr c,3F
 103+ 8F08 28 64            jr z,3F
 104+ 8F0A
 105+ 8F0A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F0A
 107+ 8F0A E6 01            and 1
 108+ 8F0C 28 30            jr z,4F
 109+ 8F0E
 110+ 8F0E              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F0E              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F0E              ;
 113+ 8F0E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F0E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F0E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F0E
 117+ 8F0E 2A E8 88     	ld hl,(Posicion_actual)
 118+ 8F11
 119+ 8F11              ;   Amadeus o entidad ???.
 120+ 8F11
 121+ 8F11 3A 14 89         ld a,(Ctrl_0)
 122+ 8F14 CB 77            bit 6,a
 123+ 8F16 28 0A            jr z,8F
 124+ 8F18
 125+ 8F18              ; 	Dispara Amadeus.
 126+ 8F18
 127+ 8F18 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F1A CD A6 96         call PreviousScan
 129+ 8F1D CD A6 96         call PreviousScan
 130+ 8F20
 131+ 8F20              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F20              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F20              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F20              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F20
 136+ 8F20 18 11            jr 10F
 137+ 8F22
 138+ 8F22              ; 	Dispara Entidad.
 139+ 8F22
 140+ 8F22 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F25              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F25
 143+ 8F25              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F25              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F25
 146+ 8F25 C5               push bc
 147+ 8F26 06 10            ld b,16
 148+ 8F28 CD 97 96     9 call NextScan
 149+ 8F2B 10 FB            djnz 9B
 150+ 8F2D C1               pop bc
 151+ 8F2E CD 98 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F31 18 06            jr 17F
 153+ 8F33
 154+ 8F33              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F33              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F33              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F33              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F33
 159+ 8F33 CD 98 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F36 CD 0D 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F39              ;                                                      ; _al generar el disparo.
 162+ 8F39
 163+ 8F39              ; 	LLegados a este punto tendremos:
 164+ 8F39              ;
 165+ 8F39              ;       Puntero_objeto_disparo en IY.
 166+ 8F39              ;       Rutinas_de_impresion en IX.
 167+ 8F39              ;       Puntero_de_impresion en HL.
 168+ 8F39              ;       Impacto/Dirección en BC.
 169+ 8F39
 170+ 8F39 CD A0 8F     17 call Almacena_disparo
 171+ 8F3C 18 52            jr 6F                                             ; RET.
 172+ 8F3E
 173+ 8F3E              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F3E              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F3E              ;
 176+ 8F3E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F3E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F3E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F3E
 180+ 8F3E 2A E8 88     4 ld hl,(Posicion_actual)
 181+ 8F41
 182+ 8F41              ;   Amadeus o entidad ???.
 183+ 8F41
 184+ 8F41 3A 14 89         ld a,(Ctrl_0)
 185+ 8F44 CB 77            bit 6,a
 186+ 8F46 28 0A            jr z,11F
 187+ 8F48
 188+ 8F48              ; 	Dispara Amadeus.
 189+ 8F48
 190+ 8F48 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F4A CD A6 96         call PreviousScan
 192+ 8F4D CD A6 96         call PreviousScan
 193+ 8F50
 194+ 8F50              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F50              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F50              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F50              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F50
 199+ 8F50 18 11            jr 13F
 200+ 8F52
 201+ 8F52              ; 	Dispara Entidad.
 202+ 8F52
 203+ 8F52 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F55              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F55
 206+ 8F55              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F55              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F55
 209+ 8F55 C5               push bc
 210+ 8F56 06 10            ld b,16
 211+ 8F58 CD 97 96     12 call NextScan
 212+ 8F5B 10 FB            djnz 12B
 213+ 8F5D C1               pop bc
 214+ 8F5E
 215+ 8F5E CD 91 8F         call Ajusta_disparo_parte_derecha
 216+ 8F61 18 06            jr 18F
 217+ 8F63
 218+ 8F63              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F63              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F63              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F63              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F63
 223+ 8F63 CD 91 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F66 CD 0D 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F69              ;                                                       ; _al generar el disparo.
 226+ 8F69
 227+ 8F69              ; LLegados a este punto tendremos:
 228+ 8F69              ;
 229+ 8F69              ;       Puntero_objeto_disparo en IY.
 230+ 8F69              ;       Rutinas_de_impresion en IX.
 231+ 8F69              ;       Puntero_de_impresion en HL.
 232+ 8F69              ;       Impacto/Dirección en BC.
 233+ 8F69
 234+ 8F69 CD A0 8F     18 call Almacena_disparo
 235+ 8F6C 18 22            jr 6F                                               ; RET.
 236+ 8F6E
 237+ 8F6E              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F6E
 239+ 8F6E 28 11        3 jr z,5F
 240+ 8F70
 241+ 8F70              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F70              ;
 243+ 8F70              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F70              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F70              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F70              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F70
 248+ 8F70              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F70              ;	   ""        ""       "f9", B="1"
 250+ 8F70              ;	   ""        ""       "fb", B="2"
 251+ 8F70              ; 	   ""        ""       "fb", B="3"
 252+ 8F70
 253+ 8F70 2A E8 88     	ld hl,(Posicion_actual)
 254+ 8F73 CD 97 96     	call NextScan
 255+ 8F76
 256+ 8F76              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F76              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F76              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F76              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F76
 261+ 8F76 CD 98 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F79
 263+ 8F79              ; 	No se produce impacto. B="$80"
 264+ 8F79              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F79
 266+ 8F79 01 80 80         ld bc,$8080
 267+ 8F7C
 268+ 8F7C              ; 	LLegados a este punto tendremos:
 269+ 8F7C              ;
 270+ 8F7C              ;       Puntero_objeto_disparo en IY.
 271+ 8F7C              ;       Rutinas_de_impresion en IX.
 272+ 8F7C              ;       Puntero_de_impresion en HL.
 273+ 8F7C              ;       Impacto/Dirección en BC.
 274+ 8F7C
 275+ 8F7C CD A0 8F         call Almacena_disparo
 276+ 8F7F 18 0F            jr 6F                                           ; RET.
 277+ 8F81
 278+ 8F81              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F81              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F81              ;
 281+ 8F81              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F81              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F81              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F81              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F81
 286+ 8F81 2A E8 88     5 ld hl,(Posicion_actual)
 287+ 8F84 CD 97 96     	call NextScan
 288+ 8F87
 289+ 8F87              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F87              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F87              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F87              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F87
 294+ 8F87 CD 91 8F         call Ajusta_disparo_parte_derecha
 295+ 8F8A
 296+ 8F8A              ; 	No se produce impacto. B="$80"
 297+ 8F8A              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F8A
 299+ 8F8A 01 80 80     15 ld bc,$8080
 300+ 8F8D
 301+ 8F8D              ; 	LLegados a este punto tendremos:
 302+ 8F8D              ;
 303+ 8F8D              ;       Puntero_objeto_disparo en IY.
 304+ 8F8D              ;       Rutinas_de_impresion en IX.
 305+ 8F8D              ;       Puntero_de_impresion en HL.
 306+ 8F8D              ;       Impacto/Dirección en BC.
 307+ 8F8D
 308+ 8F8D CD A0 8F         call Almacena_disparo
 309+ 8F90
 310+ 8F90 C9           6 ret
 311+ 8F91
 312+ 8F91              ; ----------------------------------------------------------------
 313+ 8F91              ;
 314+ 8F91              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F91              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F91              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F91
 318+ 8F91 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F92 FE 02            cp 2
 320+ 8F94 38 01            jr c,1F
 321+ 8F96 23               inc hl
 322+ 8F97 C9           1 ret
 323+ 8F98
 324+ 8F98 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F99 FE 01        	cp 1
 326+ 8F9B 20 01        	jr nz,1F
 327+ 8F9D 2B           	dec hl
 328+ 8F9E 2B           1 dec hl
 329+ 8F9F C9               ret
 330+ 8FA0
 331+ 8FA0              ; ----------------------------------------------------------------
 332+ 8FA0              ;
 333+ 8FA0              ;   25/02/23
 334+ 8FA0              ;
 335+ 8FA0              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FA0              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FA0              ;
 338+ 8FA0              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FA0              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FA0
 341+ 8FA0              Almacena_disparo
 342+ 8FA0
 343+ 8FA0 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FA1 F1               pop af
 345+ 8FA2 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FA3
 347+ 8FA3 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FA4 E6 01            and 1
 349+ 8FA6 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FA8              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FA8              ; 	Dispara AMADEUS.
 352+ 8FA8
 353+ 8FA8              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FA8              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FA8              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FA8              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FA8
 358+ 8FA8 C5               push bc
 359+ 8FA9 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FAC 2A 65 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FAF A7               and a
 362+ 8FB0 ED 42            sbc hl,bc
 363+ 8FB2 CC 87 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FB5 C1               pop bc
 365+ 8FB6 28 54            jr z,4F
 366+ 8FB8
 367+ 8FB8 2A 65 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FBB 23               inc hl
 369+ 8FBC 23               inc hl
 370+ 8FBD 22 65 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FC0              ;                                                   ; _ Disparo_(+1).
 372+ 8FC0 18 18            jr 2F
 373+ 8FC2
 374+ 8FC2              ; Dispara una entidad.
 375+ 8FC2
 376+ 8FC2 C5           1 push bc
 377+ 8FC3 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FC6 2A 63 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FC9 A7               and a
 380+ 8FCA ED 42            sbc hl,bc
 381+ 8FCC CC 80 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FCF C1               pop bc
 383+ 8FD0 28 3A            jr z,4F
 384+ 8FD2
 385+ 8FD2 2A 63 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FD5 23               inc hl
 387+ 8FD6 23               inc hl
 388+ 8FD7 22 63 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FDA              ;                                                   ; _ Disparo_(+1).
 390+ 8FDA CD F3 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FDD              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FDD              ;
 393+ 8FDD              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FDD              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FDD              ;                                                     Puntero_de_impresion en HL.
 396+ 8FDD              ;                                                     Impacto/Dirección en BC.
 397+ 8FDD
 398+ 8FDD 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FDE 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FDF 23               inc hl                                          ; _ al siguiente.
 401+ 8FE0 A7               and a
 402+ 8FE1 20 C0            jr nz,3B
 403+ 8FE3
 404+ 8FE3 08               ex af,af
 405+ 8FE4 ED 73 3A 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FE8 F9               ld sp,hl
 407+ 8FE9
 408+ 8FE9 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FEB F5               push af                                         ; Puntero de impresión.
 410+ 8FEC FD E5            push iy                                         ; Puntero objeto.
 411+ 8FEE C5               push bc                                         ; Control.
 412+ 8FEF
 413+ 8FEF ED 7B 3A 89      ld sp,(Stack)
 414+ 8FF3
 415+ 8FF3              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FF3
 417+ 8FF3 21 29 89     	ld hl,Ctrl_1
 418+ 8FF6 CB C6        	set 0,(hl)
 419+ 8FF8
 420+ 8FF8 DD E5        	push ix
 421+ 8FFA E1               pop hl
 422+ 8FFB F5               push af
 423+ 8FFC DD E1            pop ix
 424+ 8FFE
 425+ 8FFE CD A0 7F     	call Guarda_foto_registros
 426+ 9001
 427+ 9001 21 29 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9004 CB 86        	res 0,(hl)
 429+ 9006
 430+ 9006              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9006              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9006
 433+ 9006 CD 87 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9009 CD 80 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 900C
 436+ 900C C9           4 ret
 437+ 900D
 438+ 900D              ; ----------------------------------------------------------------
 439+ 900D              ;
 440+ 900D              ;   4/3/23
 441+ 900D              ;
 442+ 900D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 900D              ;   _ al generarse el disparo.
 444+ 900D              ;
 445+ 900D              ;       "$80" ..... No se produce colisión.
 446+ 900D              ;       "$81" ..... Se produce colisión.
 447+ 900D              ;
 448+ 900D              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 900D              ;         _ que forman el disparo.
 450+ 900D
 451+ 900D
 452+ 900D              Comprueba_Colision
 453+ 900D
 454+ 900D              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 900D
 456+ 900D FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 900F E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9010
 459+ 9010 CD 46 90         call Modifica_H_Velocidad_disparo
 460+ 9013
 461+ 9013 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9014 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9016 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9018
 465+ 9018 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 901A CD 36 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 901D
 468+ 901D 7B               ld a,e
 469+ 901E E6 01            and 1
 470+ 9020 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9022              ;                                                  ; _ para activar IMPACTO.
 472+ 9022 E1               pop hl
 473+ 9023 E5               push hl
 474+ 9024 CD 97 96         call NextScan
 475+ 9027
 476+ 9027 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9028 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 902A 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 902C              ;                                                  ; _ 2º scanline si esto es así.
 480+ 902C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 902E CD 36 90         call Bucle_2
 482+ 9031
 483+ 9031 43           1 ld b,e
 484+ 9032 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9033 FD E1            pop iy
 486+ 9035 C9               ret
 487+ 9036
 488+ 9036              ; ---------- ----------
 489+ 9036
 490+ 9036 06 02        Bucle_2 ld b,2
 491+ 9038 FD 7E 00     2 ld a,(iy)
 492+ 903B A6               and (hl)
 493+ 903C 28 02            jr z,1F
 494+ 903E 1E 81            ld e,$81
 495+ 9040 23           1 inc hl
 496+ 9041 FD 23            inc iy
 497+ 9043 10 F3            djnz 2B
 498+ 9045 C9               ret
 499+ 9046
 500+ 9046              ; ---------- ----------
 501+ 9046              ;
 502+ 9046              ;   21/7/23
 503+ 9046
 504+ 9046              Modifica_H_Velocidad_disparo
 505+ 9046
 506+ 9046 3A 74 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9049 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 904B D0               ret nc                                         ; _ incrementamos H.
 509+ 904C 24               inc h
 510+ 904D
 511+ 904D C9               ret
 512+ 904E
 513+ 904E              ; -------------------------------------------------------------------------------------------------------------
 514+ 904E              ;
 515+ 904E              ;   11/04/23
 516+ 904E              ;
 517+ 904E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 904E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 904E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 904E              ;
 521+ 904E              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 904E
 523+ 904E              Compara_coordenadas_X
 524+ 904E
 525+ 904E              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 904E              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 904E
 528+ 904E              ; Preparamos registros:
 529+ 904E
 530+ 904E 21 EC 88         ld hl,Filas+6
 531+ 9051 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9052 23               inc hl
 533+ 9053 23               inc hl
 534+ 9054 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9055 43               ld b,e
 536+ 9056
 537+ 9056 21 FA 88         ld hl,Filas+20
 538+ 9059 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 905A 21 6F 89         ld hl,Coordenadas_X_Entidad
 540+ 905D CD 79 92         call Guarda_coordenadas_X
 541+ 9060
 542+ 9060              ; Preparamos registros:
 543+ 9060
 544+ 9060 21 A4 85         ld hl,Amadeus_db+6
 545+ 9063 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9064 23               inc hl
 547+ 9065 23               inc hl
 548+ 9066 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9067 7B               ld a,e
 550+ 9068 08               ex af,af'
 551+ 9069 21 B2 85         ld hl,Amadeus_db+20
 552+ 906C 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 906D 21 6C 89         ld hl,Coordenadas_X_Amadeus
 554+ 9070 CD 79 92         call Guarda_coordenadas_X
 555+ 9073
 556+ 9073              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9073              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9073
 559+ 9073 04               inc b
 560+ 9074 05               dec b
 561+ 9075 28 04            jr z,1F
 562+ 9077 06 03            ld b,3
 563+ 9079 18 02            jr 2F
 564+ 907B 06 02        1 ld b,2
 565+ 907D 08           2 ex af,af'
 566+ 907E 3C               inc a
 567+ 907F 3D               dec a
 568+ 9080 28 04            jr z,5F
 569+ 9082 0E 03            ld c,3
 570+ 9084 18 02            jr 6F
 571+ 9086 0E 02        5 ld c,2
 572+ 9088 79           6 ld a,c
 573+ 9089 08               ex af,af'
 574+ 908A 11 6F 89         ld de,Coordenadas_X_Entidad
 575+ 908D 1A           4 ld a,(de)
 576+ 908E 21 6C 89         ld hl,Coordenadas_X_Amadeus
 577+ 9091 BE           3 cp (hl)
 578+ 9092 28 0E            jr z,7F
 579+ 9094 23               inc hl
 580+ 9095 0D               dec c
 581+ 9096 20 F9            jr nz,3B
 582+ 9098 13               inc de
 583+ 9099 08               ex af,af'
 584+ 909A 4F               ld c,a
 585+ 909B 08               ex af,af'
 586+ 909C 10 EF            djnz 4B
 587+ 909E
 588+ 909E              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 909E
 590+ 909E CD B5 92     8 call Limpia_Coordenadas_X
 591+ 90A1 C9               ret
 592+ 90A2
 593+ 90A2 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90A4 32 FF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90A7 21 67 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90AA CB D6            set 2,(hl)
 597+ 90AC 18 F0            jr 8B
 598+ 90AE
 599+ 90AE              ; -----------------------------------------------------------------------
 600+ 90AE              ;
 601+ 90AE              ;   17/04/23
 602+ 90AE              ;
 603+ 90AE
 604+ 90AE              Detecta_colision_nave_entidad
 605+ 90AE
 606+ 90AE              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90AE
 608+ 90AE 2A E8 88         ld hl,(Posicion_actual)
 609+ 90B1 CD F2 95         call Calcula_puntero_de_impresion
 610+ 90B4
 611+ 90B4              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90B4              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90B4
 614+ 90B4 DD E5            push ix
 615+ 90B6 E1               pop hl
 616+ 90B7 E5               push hl
 617+ 90B8
 618+ 90B8              ; ----- ----- -----
 619+ 90B8 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90BA 06 0A            ld b,10
 621+ 90BC CD EC 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90BF 7B               ld a,e
 623+ 90C0 FE 05            cp 5
 624+ 90C2 38 0E            jr c,3F
 625+ 90C4
 626+ 90C4              ; LLegados a este punto:
 627+ 90C4              ;
 628+ 90C4              ;   HAY COLISIÓN !!!!!.
 629+ 90C4              ;
 630+ 90C4              ;   .db (Impacto) de Amadeus a "1".
 631+ 90C4              ;   SET el bit3 de (Impacto2).
 632+ 90C4              ;
 633+ 90C4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90C4
 635+ 90C4 21 B7 85         ld hl,Amadeus_db+25
 636+ 90C7 36 01            ld (hl),1
 637+ 90C9 21 67 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90CC CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90CE CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90D0 18 18            jr 1F
 641+ 90D2
 642+ 90D2              ; -----
 643+ 90D2
 644+ 90D2 E1           3 pop hl
 645+ 90D3 CD 97 96         call NextScan
 646+ 90D6 E5               push hl
 647+ 90D7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90D8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90DA 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90DC 30 0C            jr nc,1F
 651+ 90DE              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90DE 10 DC            djnz 2B
 653+ 90E0
 654+ 90E0              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90E0
 656+ 90E0              ; LLegados a este punto:
 657+ 90E0              ;
 658+ 90E0              ;   NO HAY COLISIÓN !!!!!.
 659+ 90E0              ;
 660+ 90E0              ;   .db (Impacto) de Amadeus a "0".
 661+ 90E0              ;   RES el bit2 de (Impacto2).
 662+ 90E0              ;
 663+ 90E0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90E0              ;   Lo colocamos a "0".
 665+ 90E0
 666+ 90E0 21 67 89         ld hl,Impacto2
 667+ 90E3 CB 96            res 2,(hl)
 668+ 90E5 2A 68 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90E8 36 00            ld (hl),0
 670+ 90EA
 671+ 90EA E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90EB C9               ret
 673+ 90EC
 674+ 90EC               ; ---------- ----------
 675+ 90EC
 676+ 90EC C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90ED 3A E7 88         ld a,(Columns)
 678+ 90F0 47               ld b,a
 679+ 90F1 FD 7E 00     2 ld a,(iy)
 680+ 90F4 BE               cp (hl)
 681+ 90F5 28 01            jr z,1F
 682+ 90F7
 683+ 90F7 1C               inc e
 684+ 90F8
 685+ 90F8 23           1 inc hl
 686+ 90F9 FD 23            inc iy
 687+ 90FB 10 F4            djnz 2B
 688+ 90FD C1               pop bc
 689+ 90FE C9               ret
 690+ 90FF
 691+ 90FF              ; -------------------------------------------------------------------------------------------------------------
 692+ 90FF              ;
 693+ 90FF              ;   13/03/23
 694+ 90FF              ;
 695+ 90FF              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90FF              ;
 697+ 90FF              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90FF
 699+ 90FF 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9102 7E               ld a,(hl)
 701+ 9103 A7               and a
 702+ 9104 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9105
 704+ 9105 44               ld b,h
 705+ 9106 4D               ld c,l
 706+ 9107 2A 42 89         ld hl,(Stack_snapshot_disparos)
 707+ 910A E5               push hl
 708+ 910B A7               and a
 709+ 910C ED 42            sbc hl,bc
 710+ 910E E5               push hl
 711+ 910F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 9110
 713+ 9110 E1               pop hl
 714+ 9111 54               ld d,h
 715+ 9112 5D               ld e,l
 716+ 9113 1B               dec de
 717+ 9114 ED B8            lddr                                                ; Limpiamos.
 718+ 9116
 719+ 9116 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9119 22 42 89         ld (Stack_snapshot_disparos),hl
 721+ 911C
 722+ 911C C9               ret
 723+ 911D
 724+ 911D              ; -------------------------------------------------------------------------------------------------------------
 725+ 911D              ;
 726+ 911D              ;   18/07/23
 727+ 911D              ;
 728+ 911D
 729+ 911D              Motor_de_disparos
 730+ 911D
 731+ 911D              ; Gestiona DISPAROS DE AMADEUS.
 732+ 911D
 733+ 911D 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 9120 2A 65 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9123
 736+ 9123 CD F3 8C     2 call Extrae_address
 737+ 9126 7E               ld a,(hl)
 738+ 9127 A7               and a
 739+ 9128 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 912A
 741+ 912A              ; ----- ----- ----- ----- ----- -----
 742+ 912A
 743+ 912A C5               push bc
 744+ 912B CD EF 91         call foto_disparo_a_borrar
 745+ 912E
 746+ 912E              ; Existe colisión con este disparo???
 747+ 912E
 748+ 912E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 912F 7E               ld a,(hl)
 750+ 9130 2B               dec hl
 751+ 9131 E6 01            and 1
 752+ 9133 28 1D            jr z,9F
 753+ 9135
 754+ 9135              ;   En este punto:
 755+ 9135              ;
 756+ 9135              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9135              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9135              ;   _con la entidad).
 759+ 9135              ;
 760+ 9135              ;   Disparo_2A defw 0                                ; Control.
 761+ 9135              ;    defw 0                                          ; Puntero objeto.
 762+ 9135              ;    defw 0                                          ; Puntero de impresión.
 763+ 9135              ;    defw 0                                          ; Rutina de impresión.
 764+ 9135
 765+ 9135 E5               push hl
 766+ 9136
 767+ 9136 06 04            ld b,4
 768+ 9138 23           19 inc hl
 769+ 9139 10 FD            djnz 19B
 770+ 913B
 771+ 913B CD F3 8C         call Extrae_address
 772+ 913E CD 60 9D         call Genera_coordenadas_disparo
 773+ 9141
 774+ 9141              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9141
 776+ 9141 21 6A 89         ld hl,Coordenadas_disparo_certero
 777+ 9144 72               ld (hl),d
 778+ 9145 23               inc hl
 779+ 9146 73               ld (hl),e
 780+ 9147
 781+ 9147              ; Elimino el disparo de la base de datos.
 782+ 9147
 783+ 9147 E1               pop hl
 784+ 9148 CD 6E 92         call Elimina_disparo_de_base_de_datos
 785+ 914B 21 67 89         ld hl,Impacto2
 786+ 914E CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 9150
 788+ 9150 18 06            jr 11F
 789+ 9152
 790+ 9152 CD 18 92     9 call Mueve_disparo
 791+ 9155 CD EF 91         call foto_disparo_a_borrar
 792+ 9158
 793+ 9158 C1           11 pop bc
 794+ 9159 18 04            jr 7F
 795+ 915B
 796+ 915B              ; ----- ----- ----- ----- ----- -----
 797+ 915B
 798+ 915B ED 42        1 sbc hl,bc
 799+ 915D 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 915F
 801+ 915F 2A 65 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9162 23               inc hl
 803+ 9163 23               inc hl
 804+ 9164 22 65 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9167 18 BA            jr 2B
 806+ 9169
 807+ 9169 CD 87 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 916C              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 916C
 810+ 916C              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 916C
 812+ 916C 01 8A 85         ld bc,Disparo_11
 813+ 916F 2A 63 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9172
 815+ 9172 CD F3 8C     5 call Extrae_address
 816+ 9175 7E               ld a,(hl)
 817+ 9176 A7               and a
 818+ 9177 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9179
 820+ 9179              ; ----- ----- ----- ----- ----- -----
 821+ 9179
 822+ 9179 C5               push bc
 823+ 917A CD EF 91         call foto_disparo_a_borrar
 824+ 917D
 825+ 917D              ; Existe colisión con este disparo???
 826+ 917D
 827+ 917D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 917E 7E               ld a,(hl)
 829+ 917F 2B               dec hl
 830+ 9180 E6 01            and 1
 831+ 9182 28 4D            jr z,10F
 832+ 9184
 833+ 9184              ;! La colisión se produce con Amadeus???
 834+ 9184              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9184
 836+ 9184 E5               push hl
 837+ 9185
 838+ 9185 06 04            ld b,4
 839+ 9187 23           16 inc hl
 840+ 9188 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 918A
 842+ 918A CD F3 8C         call Extrae_address
 843+ 918D CD 60 9D         call Genera_coordenadas_disparo
 844+ 9190
 845+ 9190 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9191 FE 16            cp $16
 847+ 9193 38 2A            jr c,15F
 848+ 9195
 849+ 9195
 850+ 9195              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9195
 852+ 9195 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9196
 854+ 9196              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9196
 856+ 9196
 857+ 9196 2A 72 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9199
 859+ 9199              ; Coordenada X de Amadeus en D.
 860+ 9199
 861+ 9199 7D               ld a,l
 862+ 919A E6 1F            and $1F
 863+ 919C 57               ld d,a
 864+ 919D
 865+ 919D 21 A6 85         ld hl,Amadeus_db+8
 866+ 91A0 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91A1
 868+ 91A1 21 6C 89         ld hl,Coordenadas_X_Amadeus
 869+ 91A4 CD 79 92         call Guarda_coordenadas_X
 870+ 91A7
 871+ 91A7 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91A8
 873+ 91A8              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91A8
 875+ 91A8 06 02            ld b,2
 876+ 91AA C5           20 push bc
 877+ 91AB
 878+ 91AB 06 03            ld b,3
 879+ 91AD 21 6C 89         ld hl,Coordenadas_X_Amadeus
 880+ 91B0 7E           18 ld a,(hl)
 881+ 91B1 BA               cp d
 882+ 91B2 20 04            jr nz,17F
 883+ 91B4
 884+ 91B4              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91B4
 886+ 91B4 C1               pop bc
 887+ 91B5 E1               pop hl
 888+ 91B6 18 0D            jr 14F
 889+ 91B8
 890+ 91B8 23           17 inc hl
 891+ 91B9 10 F5            djnz 18B
 892+ 91BB
 893+ 91BB 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91BC
 895+ 91BC C1               pop bc
 896+ 91BD 10 EB            djnz 20B
 897+ 91BF
 898+ 91BF
 899+ 91BF              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91BF              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91BF
 902+ 91BF E1           15 pop hl
 903+ 91C0 23               inc hl
 904+ 91C1 35               dec (hl)
 905+ 91C2 2B               dec hl
 906+ 91C3 18 0C            jr 10F
 907+ 91C5
 908+ 91C5              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91C5              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91C5
 911+ 91C5 E5           14 push hl
 912+ 91C6 CD 6E 92         call Elimina_disparo_de_base_de_datos
 913+ 91C9 21 67 89         ld hl,Impacto2
 914+ 91CC CB CE            set 1,(hl)
 915+ 91CE E1               pop hl
 916+ 91CF 18 06            jr 12F
 917+ 91D1
 918+ 91D1              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91D1
 920+ 91D1 CD 18 92     10 call Mueve_disparo
 921+ 91D4 CD EF 91         call foto_disparo_a_borrar
 922+ 91D7 C1           12 pop bc
 923+ 91D8
 924+ 91D8 18 04            jr 8F
 925+ 91DA
 926+ 91DA              ; ----- ----- ----- ----- ----- -----
 927+ 91DA
 928+ 91DA ED 42        4 sbc hl,bc
 929+ 91DC 28 0A            jr z,6F
 930+ 91DE
 931+ 91DE 2A 63 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91E1 23               inc hl
 933+ 91E2 23               inc hl
 934+ 91E3 22 63 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91E6 18 8A            jr 5B
 936+ 91E8
 937+ 91E8 CD 80 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91EB CD B5 92         call Limpia_Coordenadas_X
 939+ 91EE C9               ret
 940+ 91EF
 941+ 91EF              ; ------------------------------------------------------------------
 942+ 91EF
 943+ 91EF              foto_disparo_a_borrar
 944+ 91EF
 945+ 91EF 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91F0 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91F1 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91F2
 949+ 91F2 E5               push hl
 950+ 91F3 23               inc hl
 951+ 91F4 23               inc hl
 952+ 91F5 ED 73 3A 89      ld (Stack),sp
 953+ 91F9 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91FA FD E1            pop iy
 955+ 91FC DD E1            pop ix
 956+ 91FE E1               pop hl
 957+ 91FF ED 7B 3A 89      ld sp,(Stack)
 958+ 9203 3A 29 89         ld a,(Ctrl_1)
 959+ 9206 CB C7            set 0,a
 960+ 9208 32 29 89         ld (Ctrl_1),a
 961+ 920B CD A0 7F         call Guarda_foto_registros
 962+ 920E 3A 29 89         ld a,(Ctrl_1)
 963+ 9211 CB 87            res 0,a
 964+ 9213 32 29 89         ld (Ctrl_1),a
 965+ 9216 E1               pop hl
 966+ 9217 C9               ret
 967+ 9218
 968+ 9218              ;---------------------------------------------------
 969+ 9218              ;
 970+ 9218              ;   18/07/23
 971+ 9218              ;
 972+ 9218
 973+ 9218              Mueve_disparo
 974+ 9218
 975+ 9218              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9218              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9218              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9218
 979+ 9218 E5               push hl
 980+ 9219
 981+ 9219 7E               ld a,(hl)
 982+ 921A
 983+ 921A 06 04            ld b,4
 984+ 921C 23           1 inc hl
 985+ 921D 10 FD            djnz 1B
 986+ 921F
 987+ 921F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 921F
 989+ 921F CD F3 8C         call Extrae_address
 990+ 9222
 991+ 9222 E6 01            and 1
 992+ 9224 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9226
 994+ 9226              ; Disparo hacia arriba, (Amadeus).
 995+ 9226
 996+ 9226              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9226              ; _ de la dificultad.
 998+ 9226
 999+ 9226 CD A6 96         call PreviousScan
1000+ 9229 CD A6 96         call PreviousScan
1001+ 922C CD A6 96         call PreviousScan
1002+ 922F CD A6 96         call PreviousScan
1003+ 9232
1004+ 9232              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9232
1006+ 9232 7C               ld a,h
1007+ 9233 FE 40            cp $40
1008+ 9235 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9237
1010+ 9237              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9237
1012+ 9237 EB               ex de,hl
1013+ 9238 06 04            ld b,4
1014+ 923A 2B           6 dec hl
1015+ 923B 10 FD            djnz 6B
1016+ 923D
1017+ 923D CD 6E 92         call Elimina_disparo_de_base_de_datos
1018+ 9240 E1               pop hl
1019+ 9241 18 10            jr 7F
1020+ 9243
1021+ 9243              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9243              ; HL contiene el puntero de impresión del disparo.
1023+ 9243              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9243
1025+ 9243 D5           3 push de
1026+ 9244 C5               push bc
1027+ 9245
1028+ 9245 CD 0D 90         call Comprueba_Colision
1029+ 9248
1030+ 9248              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9248
1032+ 9248 78               ld a,b
1033+ 9249
1034+ 9249 C1               pop bc
1035+ 924A D1               pop de
1036+ 924B
1037+ 924B EB               ex de,hl
1038+ 924C
1039+ 924C 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 924D 23               inc hl                                      ; _ movimiento.
1041+ 924E 72               ld (hl),d
1042+ 924F
1043+ 924F E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 9250
1045+ 9250 23               inc hl                                      ; _ en curso.
1046+ 9251 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9252 2B               dec hl
1048+ 9253
1049+ 9253 C9           7 ret
1050+ 9254
1051+ 9254              ; Disparo hacia abajo, (Entidad).
1052+ 9254
1053+ 9254 3A 74 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9257 47               ld b,a
1055+ 9258
1056+ 9258 CD 97 96     4 call NextScan
1057+ 925B 10 FB            djnz 4B
1058+ 925D
1059+ 925D              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 925D
1061+ 925D 7C               ld a,h
1062+ 925E FE 58            cp $58
1063+ 9260 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9262
1065+ 9262 EB               ex de,hl
1066+ 9263 06 04            ld b,4
1067+ 9265 2B           5 dec hl
1068+ 9266 10 FD            djnz 5B
1069+ 9268
1070+ 9268 CD 6E 92         call Elimina_disparo_de_base_de_datos
1071+ 926B E1               pop hl
1072+ 926C 18 E5            jr 7B
1073+ 926E
1074+ 926E              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 926E
1076+ 926E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9271 AF               xor a
1078+ 9272 77               ld (hl),a
1079+ 9273 54               ld d,h
1080+ 9274 5D               ld e,l
1081+ 9275 13               inc de
1082+ 9276 ED B0            ldir
1083+ 9278 C9               ret
1084+ 9279
1085+ 9279              ; -----------------------------------------------------------------
1086+ 9279              ;
1087+ 9279              ;   19/7/23
1088+ 9279              ;
1089+ 9279              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9279              ;
1091+ 9279              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9279              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9279              ;
1094+ 9279              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9279              ;
1096+ 9279              ;   INPUTS:
1097+ 9279              ;
1098+ 9279              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9279              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9279
1101+ 9279              ;   MODIFICA: A, HL, BC y DE.
1102+ 9279
1103+ 9279              Guarda_coordenadas_X
1104+ 9279
1105+ 9279 7B               ld a,e
1106+ 927A A7               and a
1107+ 927B 20 04            jr nz,1F
1108+ 927D
1109+ 927D 06 02            ld b,2
1110+ 927F 18 02            jr 2F
1111+ 9281
1112+ 9281 06 03        1 ld b,3
1113+ 9283 72           2 ld (hl),d
1114+ 9284 23               inc hl
1115+ 9285 14               inc d
1116+ 9286 10 FB            djnz 2B
1117+ 9288
1118+ 9288 C9               ret
1119+ 9289
1120+ 9289              ; -----------------------------------------------------------------
1121+ 9289              ;
1122+ 9289              ;   12/04/23
1123+ 9289              ;
1124+ 9289
1125+ 9289 3A 67 89     Selector_de_impactos ld a,(Impacto2)
1126+ 928C A7               and a
1127+ 928D C8               ret z
1128+ 928E
1129+ 928E FE 04            cp 4
1130+ 9290 20 09            jr nz,1F
1131+ 9292
1132+ 9292
1133+ 9292              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9292
1135+ 9292 CD AE 90         call Detecta_colision_nave_entidad
1136+ 9295
1137+ 9295 21 67 89         ld hl,Impacto2
1138+ 9298 CB 5E            bit 3,(hl)
1139+ 929A C0               ret nz                                               ; Existe colisión, RET.
1140+ 929B
1141+ 929B              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 929B              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 929B
1144+ 929B 21 67 89     1 ld hl,Impacto2
1145+ 929E CB 4E            bit 1,(hl)
1146+ 92A0 28 07            jr z,2F
1147+ 92A2
1148+ 92A2 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92A5 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92A7 18 0B            jr 3F
1151+ 92A9
1152+ 92A9 21 67 89     2 ld hl,Impacto2
1153+ 92AC CB 46            bit 0,(hl)
1154+ 92AE C8               ret z
1155+ 92AF
1156+ 92AF              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92AF
1158+ 92AF 21 29 89         ld hl,Ctrl_1
1159+ 92B2 CB D6            set 2,(hl)
1160+ 92B4
1161+ 92B4 C9           3 ret
1162+ 92B5
1163+ 92B5              ; -----------------------------------------------------------------
1164+ 92B5              ;
1165+ 92B5              ;   19/7/23
1166+ 92B5              ;
1167+ 92B5              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92B5
1169+ 92B5 AF           Limpia_Coordenadas_X xor a
1170+ 92B6 06 06            ld b,6
1171+ 92B8 21 6C 89         ld hl,Coordenadas_X_Amadeus
1172+ 92BB 77           1 ld (hl),a
1173+ 92BC 23               inc hl
1174+ 92BD 10 FC            djnz 1B
1175+ 92BF C9               ret
1176+ 92C0
1177+ 92C0              ; -----------------------------------------------------------------
1178+ 92C0              ;
1179+ 92C0              ;   25/04/23
1180+ 92C0              ;
1181+ 92C0
1182+ 92C0              Determina_resultado_comparativa
1183+ 92C0
1184+ 92C0              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92C0              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92C0              ;
1187+ 92C0              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92C0              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92C0              ;
1190+ 92C0              ;   SBC HL,DE
1191+ 92C0
1192+ 92C0              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92C0              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92C0
1195+ 92C0              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92C0              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92C0
1198+ 92C0
1199+ 92C0 3A FA 88         ld a,(Cuad_objeto)
1200+ 92C3 FE 02            cp 2
1201+ 92C5 28 26            jr z,2F
1202+ 92C7 38 24            jr c,2F
1203+ 92C9
1204+ 92C9              ; Cuadrantes 3º y 4º
1205+ 92C9
1206+ 92C9 E6 01            and 1
1207+ 92CB 28 10            jr z,4F
1208+ 92CD
1209+ 92CD              ; Cuadrante 3º
1210+ 92CD
1211+ 92CD 7C               ld a,h
1212+ 92CE 06 00            ld b,0
1213+ 92D0
1214+ 92D0 CD 5B 93         call Compara_cositas_H3
1215+ 92D3
1216+ 92D3 04               inc b
1217+ 92D4 05               dec b
1218+ 92D5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92D6
1220+ 92D6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92D7 06 00            ld b,0
1222+ 92D9
1223+ 92D9 CD 6D 93         call Compara_cositas_L3
1224+ 92DC C9               ret
1225+ 92DD
1226+ 92DD              ; Cuadrante 4º
1227+ 92DD
1228+ 92DD 7C           4 ld a,h
1229+ 92DE 06 00            ld b,0
1230+ 92E0
1231+ 92E0 CD 7F 93         call Compara_cositas_H4
1232+ 92E3
1233+ 92E3 04               inc b
1234+ 92E4 05               dec b
1235+ 92E5 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92E6
1237+ 92E6 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92E7 06 00            ld b,0
1239+ 92E9
1240+ 92E9 CD 95 93         call Compara_cositas_L4
1241+ 92EC C9               ret
1242+ 92ED
1243+ 92ED              ; Cuadrantes 1º y 2º.
1244+ 92ED
1245+ 92ED 28 10        2 jr z,3F
1246+ 92EF
1247+ 92EF              ; 1er Cuadrante
1248+ 92EF
1249+ 92EF 7C               ld a,h
1250+ 92F0 06 00            ld b,0
1251+ 92F2
1252+ 92F2 CD 33 93         call Compara_cositas_H1
1253+ 92F5
1254+ 92F5 04               inc b
1255+ 92F6 05               dec b
1256+ 92F7 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92F8
1258+ 92F8 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92F9 06 00            ld b,0
1260+ 92FB
1261+ 92FB CD 49 93         call Compara_cositas_L1
1262+ 92FE C9               ret
1263+ 92FF
1264+ 92FF
1265+ 92FF              ; 2º Cuadrante
1266+ 92FF
1267+ 92FF 7C           3 ld a,h
1268+ 9300 06 00            ld b,0
1269+ 9302
1270+ 9302 CD 0F 93         call Compara_cositas_H2
1271+ 9305
1272+ 9305 04               inc b
1273+ 9306 05               dec b
1274+ 9307 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9308
1276+ 9308 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9309 06 00            ld b,0
1278+ 930B
1279+ 930B CD 21 93         call Compara_cositas_L2
1280+ 930E C9               ret
1281+ 930F
1282+ 930F A7           Compara_cositas_H2 and a
1283+ 9310 28 0D            jr z,1F
1284+ 9312              ;    cp $fd
1285+ 9312              ;    jr z,1F
1286+ 9312              ;    cp $fe
1287+ 9312              ;    jr z,1F
1288+ 9312 FE FF            cp $ff
1289+ 9314 28 09            jr z,1F
1290+ 9316 FE 01            cp $01
1291+ 9318 28 05            jr z,1F
1292+ 931A FE 02            cp $02
1293+ 931C 28 01            jr z,1F
1294+ 931E C0               ret nz
1295+ 931F 04           1 inc b
1296+ 9320 C9               ret
1297+ 9321
1298+ 9321 A7           Compara_cositas_L2 and a
1299+ 9322 28 0D            jr z,1F
1300+ 9324              ;    cp $fd
1301+ 9324              ;    jr z,1F
1302+ 9324 FE FE            cp $fe
1303+ 9326 28 09            jr z,1F
1304+ 9328 FE FF            cp $ff
1305+ 932A 28 05            jr z,1F
1306+ 932C FE 01            cp $01
1307+ 932E 28 01            jr z,1F
1308+ 9330              ;    cp $02
1309+ 9330              ;    jr z,1F
1310+ 9330 C0               ret nz
1311+ 9331 04           1 inc b
1312+ 9332 C9               ret
1313+ 9333
1314+ 9333 A7           Compara_cositas_H1 and a
1315+ 9334 28 11            jr z,1F
1316+ 9336              ;    cp $fd
1317+ 9336              ;    jr z,1F
1318+ 9336              ;    cp $fe
1319+ 9336              ;    jr z,1F
1320+ 9336 FE FF            cp $ff
1321+ 9338 28 0D            jr z,1F
1322+ 933A FE 01            cp $01
1323+ 933C 28 09            jr z,1F
1324+ 933E FE 02            cp $02
1325+ 9340 28 05            jr z,1F
1326+ 9342 FE 03            cp $03
1327+ 9344 28 01            jr z,1F
1328+ 9346 C0               ret nz
1329+ 9347 04           1 inc b
1330+ 9348 C9               ret
1331+ 9349
1332+ 9349 A7           Compara_cositas_L1 and a
1333+ 934A 28 0D            jr z,1F
1334+ 934C              ;    cp $fd
1335+ 934C              ;    jr z,1F
1336+ 934C              ;    cp $fe
1337+ 934C              ;    jr z,1F
1338+ 934C              ;    cp $ff
1339+ 934C              ;    jr z,1F
1340+ 934C FE 01            cp $01
1341+ 934E 28 09            jr z,1F
1342+ 9350 FE 02            cp $02
1343+ 9352 28 05            jr z,1F
1344+ 9354 FE 03            cp $03
1345+ 9356 28 01            jr z,1F
1346+ 9358 C0               ret nz
1347+ 9359 04           1 inc b
1348+ 935A C9               ret
1349+ 935B
1350+ 935B A7           Compara_cositas_H3 and a
1351+ 935C 28 0D            jr z,1F
1352+ 935E              ;    cp $fd
1353+ 935E              ;    jr z,1F
1354+ 935E FE FE            cp $fe
1355+ 9360 28 09            jr z,1F
1356+ 9362 FE FF            cp $ff
1357+ 9364 28 05            jr z,1F
1358+ 9366 FE 01            cp $01
1359+ 9368 28 01            jr z,1F
1360+ 936A              ;    cp $02
1361+ 936A              ;    jr z,1F
1362+ 936A              ;    cp $03
1363+ 936A              ;    jr z,1F
1364+ 936A C0               ret nz
1365+ 936B 04           1 inc b
1366+ 936C C9               ret
1367+ 936D
1368+ 936D A7           Compara_cositas_L3 and a
1369+ 936E 28 0D            jr z,1F
1370+ 9370              ;    cp $fd
1371+ 9370              ;    jr z,1F
1372+ 9370              ;    cp $fe
1373+ 9370              ;    jr z,1F
1374+ 9370              ;    cp $ff
1375+ 9370              ;    jr z,1F
1376+ 9370 FE 01            cp $01
1377+ 9372 28 09            jr z,1F
1378+ 9374 FE 02            cp $02
1379+ 9376 28 05            jr z,1F
1380+ 9378 FE 03            cp $03
1381+ 937A 28 01            jr z,1F
1382+ 937C C0               ret nz
1383+ 937D 04           1 inc b
1384+ 937E C9               ret
1385+ 937F
1386+ 937F A7           Compara_cositas_H4 and a
1387+ 9380 28 11            jr z,1F
1388+ 9382 FE FD            cp $fd
1389+ 9384 28 0D            jr z,1F
1390+ 9386 FE FE            cp $fe
1391+ 9388 28 09            jr z,1F
1392+ 938A FE FF            cp $ff
1393+ 938C 28 05            jr z,1F
1394+ 938E FE 01            cp $01
1395+ 9390 28 01            jr z,1F
1396+ 9392              ;    cp $02
1397+ 9392              ;    jr z,1F
1398+ 9392              ;    cp $03
1399+ 9392              ;    jr z,1F
1400+ 9392 C0               ret nz
1401+ 9393 04           1 inc b
1402+ 9394 C9               ret
1403+ 9395
1404+ 9395 A7           Compara_cositas_L4 and a
1405+ 9396 28 0D            jr z,1F
1406+ 9398              ;    cp $fd
1407+ 9398              ;    jr z,1F
1408+ 9398 FE FE            cp $fe
1409+ 939A 28 09            jr z,1F
1410+ 939C FE FF            cp $ff
1411+ 939E 28 05            jr z,1F
1412+ 93A0 FE 01            cp $01
1413+ 93A2 28 01            jr z,1F
1414+ 93A4              ;    cp $02
1415+ 93A4              ;    jr z,1F
1416+ 93A4              ;    cp $03
1417+ 93A4              ;    jr z,1F
1418+ 93A4 C0               ret nz
1419+ 93A5 04           1 inc b
1420+ 93A6 C9               ret
# file closed: Disparo.asm
1561  93A7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93A7              ; ******************************************************************************************************************************************************************************************
   2+ 93A7              ;
   3+ 93A7              ; 26/06/23
   4+ 93A7              ;
   5+ 93A7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93A7
   7+ 93A7 CD 8B 96     Draw call Prepara_draw
   8+ 93AA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93AB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93AC 28 05        	jr z,2F
  11+ 93AE
  12+ 93AE 3A FA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93B1 18 0C        	jr 1F
  14+ 93B3
  15+ 93B3 2A F8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93B6 22 E8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93B9 CD 48 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93BC              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93BC CD ED 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93BF
  21+ 93BF 3A 14 89     1 ld a,(Ctrl_0)
  22+ 93C2 CB 6F        	bit 5,a
  23+ 93C4 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93C6
  25+ 93C6 CD DE 93     	call Comprueba_limite_horizontal
  26+ 93C9 CD 6E 94     	call Comprueba_limite_vertical
  27+ 93CC
  28+ 93CC              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93CC              ; -----------------------
  30+ 93CC              ; -----------------------
  31+ 93CC              ; -----------------------
  32+ 93CC
  33+ 93CC CD BB 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93CF CD F2 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93D2 CD 51 96     	call Define_rutina_de_impresion
  36+ 93D5
  37+ 93D5 3A 14 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93D8 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93DA 32 14 89     	ld (Ctrl_0),a
  40+ 93DD
  41+ 93DD C9           	ret
  42+ 93DE
  43+ 93DE              ; *******************************************************************************************************************************************************************************************
  44+ 93DE              ;	21/01/23
  45+ 93DE              ;
  46+ 93DE              ; 	Comprueba_limite_horizontal.
  47+ 93DE              ;
  48+ 93DE              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93DE              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93DE              ;
  51+ 93DE              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93DE              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93DE              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93DE              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93DE
  56+ 93DE
  57+ 93DE
  58+ 93DE 3A 14 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93E1 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93E3 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93E5 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93E7 32 14 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93EA 18 09            jr 6F
  64+ 93EC CB 5F        1 bit 3,a
  65+ 93EE 28 0A            jr z,2F
  66+ 93F0 E6 F7            and $f7
  67+ 93F2 32 14 89         ld (Ctrl_0),a
  68+ 93F5 CD 48 95     6 call Inicializacion
  69+ 93F8 18 5B            jr 5F
  70+ 93FA E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93FB
  72+ 93FB              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93FB              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93FB
  75+ 93FB EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93FC 2A 24 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93FF CD AA 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9402 67           	ld h,a
  79+ 9403 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9404 CD AA 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9407 67           	ld h,a
  82+ 9408 A7           	and a
  83+ 9409 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 940B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 940C 3A FA 88     	ld a,(Cuad_objeto)
  86+ 940F FE 02        	cp 2
  87+ 9411 38 1E        	jr c,3F
  88+ 9413 28 1C        	jr z,3F
  89+ 9415 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9416 28 23            jr z,7F
  91+ 9418 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 941A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 941C E1           	pop hl
  94+ 941D
  95+ 941D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 941D              ; _para indicar con E="2" en caso necesario.
  97+ 941D
  98+ 941D E5               push hl
  99+ 941E C5               push bc
 100+ 941F CD AA 99     	call calcula_tercio
 101+ 9422 FE 01        	cp 1
 102+ 9424 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9426 CD 56 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9429 28 26            jr z,9F
 105+ 942B 38 24            jr c,9F
 106+ 942D 1E 00        11 ld e,0
 107+ 942F 18 22            jr 8F
 108+ 9431 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9432 28 07        	jr z, 7F
 110+ 9434 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9436 1E 00         	ld e,0
 112+ 9438 E1           	pop hl
 113+ 9439 18 04        	jr 4F
 114+ 943B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 943D 18 15            jr 10F
 116+ 943F
 117+ 943F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 943F              ; _para indicar con E="2" en caso necesario.
 119+ 943F
 120+ 943F E5           4 push hl
 121+ 9440 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9441 CD AA 99     	call calcula_tercio
 123+ 9444 FE 01        	cp 1
 124+ 9446 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9448 CD 56 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 944B 28 04            jr z,9F
 127+ 944D 30 02            jr nc,9F
 128+ 944F 18 02        	jr 8F
 129+ 9451 1E 02        9 ld e,2
 130+ 9453 C1           8 pop bc
 131+ 9454 E1           10 pop hl
 132+ 9455 C9           5 ret
 133+ 9456
 134+ 9456              ; --------------------
 135+ 9456              ;
 136+ 9456              ; 25/08/22
 137+ 9456
 138+ 9456 CD AA 99     Comprueba_centro call calcula_tercio
 139+ 9459 67               ld h,a
 140+ 945A 08           	ex af,af
 141+ 945B FE 02        	cp 2
 142+ 945D 38 07        	jr c,1F
 143+ 945F 28 05        	jr z,1F
 144+ 9461 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9464 18 03        	jr 2F
 146+ 9466 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9469 08           2 ex af,af
 148+ 946A A7               and a
 149+ 946B ED 42            sbc hl,bc
 150+ 946D C9               ret
 151+ 946E
 152+ 946E              ; *********************************************************************************************************************************************************************************************
 153+ 946E              ;
 154+ 946E              ;   16/8/22
 155+ 946E              ;
 156+ 946E              ;	Comprueba_limite_vertical
 157+ 946E              ;
 158+ 946E              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 946E              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 946E              ;
 161+ 946E
 162+ 946E 2A E8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9471 7D           	ld a,l
 164+ 9472 E6 1F        	and $1F
 165+ 9474 57           	ld d,a
 166+ 9475 3A 26 89     	ld a,(Limite_vertical)
 167+ 9478 BA           	cp d 											; Límite - Posición.
 168+ 9479 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 947A 3A FA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 947D CB 47        	bit 0,a
 171+ 947F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9481
 173+ 9481              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9481
 175+ 9481 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9482 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9484
 178+ 9484              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9484              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9484
 181+ 9484 3A EC 88         ld a,(Coordenada_X)
 182+ 9487 16 0F            ld d,Centro_izquierda
 183+ 9489 A7               and a
 184+ 948A 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 948B 28 1E            jr z,3F
 186+ 948D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 948F              ;                                                    ; _salimos sin modificar nada.
 188+ 948F 18 0E            jr 2F
 189+ 9491 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9492 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9494
 192+ 9494              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9494              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9494
 195+ 9494 3A EC 88         ld a,(Coordenada_X)
 196+ 9497 16 10            ld d,Centro_derecha
 197+ 9499 A7               and a
 198+ 949A 92               sub d
 199+ 949B 28 0E            jr z,3F
 200+ 949D 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 949F              ;                                                    ; _salimos sin modificar nada.
 202+ 949F CB 43        2 bit 0,e
 203+ 94A1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94A3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94A4 CD 38 95         call Modificaccionne
 206+ 94A7 C1           	pop bc
 207+ 94A8 CD 48 95         call Inicializacion
 208+ 94AB C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94AC
 210+ 94AC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94AC
 212+ 94AC C5           4 push bc
 213+ 94AD 01 E7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94B0 0A           	ld a,(bc)
 215+ 94B1 3D           	dec a
 216+ 94B2 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94B3 7D           	ld a,l
 218+ 94B4 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94B5 CB 47        	bit 0,a
 220+ 94B7 28 03        	jr z,5F
 221+ 94B9 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94BA 18 2E        	jr 7F
 223+ 94BC
 224+ 94BC              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94BC
 226+ 94BC 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94BD F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94BE 3A 14 89     	ld a,(Ctrl_0)
 229+ 94C1 CB 4F        	bit 1,a
 230+ 94C3 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94C5 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94C6
 233+ 94C6              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94C6
 235+ 94C6 1C               inc e
 236+ 94C7 1D               dec e
 237+ 94C8 20 07            jr nz,12F
 238+ 94CA 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94CB 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94CC 22 E8 88     	ld (Posicion_actual),hl
 241+ 94CF 18 44        13 jr 9F
 242+ 94D1 CB 43        12 bit 0,e
 243+ 94D3 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94D5              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94D5 C1           	pop bc
 246+ 94D6 18 D3        	jr 3B
 247+ 94D8 80           14 add b
 248+ 94D9 6F               ld l,a
 249+ 94DA 22 E8 88     	ld (Posicion_actual),hl
 250+ 94DD CD 38 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94E0 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94E2 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94E4 32 14 89         ld (Ctrl_0),a
 254+ 94E7 F1           	pop af
 255+ 94E8 18 2B        	jr 9F
 256+ 94EA
 257+ 94EA              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94EA
 259+ 94EA F5           7 push af
 260+ 94EB 3A 14 89     	ld a,(Ctrl_0)
 261+ 94EE CB 47        	bit 0,a
 262+ 94F0 20 1D        	jr nz,8F
 263+ 94F2 F1           	pop af
 264+ 94F3
 265+ 94F3              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94F3
 267+ 94F3 1C           	inc e
 268+ 94F4 1D               dec e
 269+ 94F5 20 07            jr nz,10F
 270+ 94F7 90           	sub b
 271+ 94F8 6F               ld l,a
 272+ 94F9 22 E8 88     	ld (Posicion_actual),hl
 273+ 94FC 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94FE              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94FE CB 43        10 bit 0,e
 276+ 9500 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9502              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9502 C1           	pop bc
 279+ 9503 18 A6        	jr 3B
 280+ 9505 90           16 sub b
 281+ 9506 6F               ld l,a
 282+ 9507 22 E8 88     	ld (Posicion_actual),hl
 283+ 950A CD 38 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 950D 18 06            jr 9F
 285+ 950F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9511 32 14 89         ld (Ctrl_0),a
 287+ 9514 F1           	pop af
 288+ 9515 C1           9 pop bc
 289+ 9516 1E 00        	ld e,0
 290+ 9518 CD 48 95         call Inicializacion
 291+ 951B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 951C 08           	ex af,af
 293+ 951D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 951E 18 8B            jr 3B
 295+ 9520
 296+ 9520              ; --------------------
 297+ 9520
 298+ 9520 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9522 CD A6 96     1 call PreviousScan
 300+ 9525 10 FB            djnz 1B
 301+ 9527 22 E8 88     	ld (Posicion_actual),hl
 302+ 952A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 952B C9           	ret
 304+ 952C
 305+ 952C              ; --------------------
 306+ 952C
 307+ 952C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 952E CD 97 96     1 call NextScan
 309+ 9531 10 FB            djnz 1B
 310+ 9533 22 E8 88     	ld (Posicion_actual),hl
 311+ 9536 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9537 C9           	ret
 313+ 9538
 314+ 9538              ; --------------------
 315+ 9538              ;
 316+ 9538              ;	22/01/23
 317+ 9538              ;
 318+ 9538              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9538              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9538              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9538
 322+ 9538
 323+ 9538              Modificaccionne
 324+ 9538
 325+ 9538 3A FA 88     	ld a,(Cuad_objeto)
 326+ 953B FE 02        	cp 2
 327+ 953D CC 20 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9540 DC 20 95         call c,Modifica_Pos_actual
 329+ 9543 C8           	ret z
 330+ 9544 CD 2C 95         call Modifica_Pos_actual2
 331+ 9547 C9               ret
 332+ 9548
 333+ 9548              ; *************************************************************************************************************************************************************************************************
 334+ 9548              ;
 335+ 9548              ;	13/8/22
 336+ 9548              ;
 337+ 9548              ;	Inicializacion
 338+ 9548              ;
 339+ 9548              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9548              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9548              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9548              ;
 343+ 9548              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9548              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9548              ;	_ desaparece/aparece.
 346+ 9548
 347+ 9548              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9548              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9548              ;
 350+ 9548              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9548              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9548              ; 		   [E] ="0"
 353+ 9548
 354+ 9548              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9548
 356+ 9548 CD AA 99     Inicializacion call calcula_tercio
 357+ 954B 28 36        	jr z,primit
 358+ 954D E6 02        	and 2
 359+ 954F 20 07        	jr nz,segmit
 360+ 9551 7D           	ld a,l
 361+ 9552 FE 7F        	cp $7f
 362+ 9554 38 2D        	jr c,primit
 363+ 9556 28 2B        	jr z,primit
 364+ 9558 CD B5 95     segmit call column
 365+ 955B 38 13        	jr c,tercuad
 366+ 955D 3E 04        cuarcuad ld a,4
 367+ 955F 32 FA 88     	ld (Cuad_objeto),a
 368+ 9562 21 20 48     	ld hl,$4820
 369+ 9565 22 24 89     	ld (Limite_horizontal),hl
 370+ 9568 21 26 89     	ld hl,Limite_vertical
 371+ 956B 36 0D        	ld (hl),$0d
 372+ 956D 08           	ex af,af
 373+ 956E 18 3C        	jr 1F
 374+ 9570              tercuad
 375+ 9570 3E 03        	ld a,3
 376+ 9572 32 FA 88     	ld (Cuad_objeto),a
 377+ 9575 21 20 48     	ld hl,$4820
 378+ 9578 22 24 89     	ld (Limite_horizontal),hl
 379+ 957B 21 26 89     	ld hl,Limite_vertical
 380+ 957E 36 12        	ld (hl),$12
 381+ 9580 08           	ex af,af
 382+ 9581 18 29        	jr 1F
 383+ 9583 CD B5 95     primit call column
 384+ 9586 38 13        	jr c, primcuad
 385+ 9588              segcuad
 386+ 9588 3E 02        	ld a,2
 387+ 958A 32 FA 88     	ld (Cuad_objeto),a
 388+ 958D 21 C0 4F     	ld hl,$4fc0
 389+ 9590 22 24 89     	ld (Limite_horizontal),hl
 390+ 9593 21 26 89     	ld hl,Limite_vertical
 391+ 9596 36 0D        	ld (hl),$0d
 392+ 9598 08           	ex af,af
 393+ 9599 18 11        	jr 1F
 394+ 959B              primcuad
 395+ 959B 3E 01        	ld a,1
 396+ 959D 32 FA 88     	ld (Cuad_objeto),a
 397+ 95A0 21 C0 4F     	ld hl,$4fc0
 398+ 95A3 22 24 89     	ld (Limite_horizontal),hl
 399+ 95A6 21 26 89     	ld hl,Limite_vertical
 400+ 95A9 36 12        	ld (hl),$12
 401+ 95AB 08           	ex af,af
 402+ 95AC CD 35 9D     1 call Genera_coordenadas
 403+ 95AF 21 14 89     	ld hl,Ctrl_0
 404+ 95B2 CB EE        	set 5,(hl)
 405+ 95B4 C9           	ret
 406+ 95B5
 407+ 95B5              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95B5
 409+ 95B5              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95B5              ;
 411+ 95B5              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95B5
 413+ 95B5 7D           column ld a,l
 414+ 95B6 E6 1F        	and $1f
 415+ 95B8 FE 10         	cp $10
 416+ 95BA C9            	ret
 417+ 95BB
 418+ 95BB              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95BB              ;
 420+ 95BB              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95BB              ;
 422+ 95BB              ; 14/12/22
 423+ 95BB              ;
 424+ 95BB              ;	Modifica: A y BC.
 425+ 95BB
 426+ 95BB 3A FA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95BE E6 01        	and 1
 428+ 95C0 28 17        	jr z,1F
 429+ 95C2
 430+ 95C2              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95C2
 432+ 95C2 3A EC 88     	ld a,(Coordenada_X)
 433+ 95C5 47           	ld b,a
 434+ 95C6 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95C7 79           	ld a,c
 436+ 95C8 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95C9 38 08        	jr c,2F
 438+ 95CB 47           	ld b,a
 439+ 95CC 79           	ld a,c
 440+ 95CD 90           	sub b
 441+ 95CE 32 23 89     	ld (Columnas),a
 442+ 95D1 18 1B        	jr 4F
 443+ 95D3 79           2 ld a,c
 444+ 95D4 32 23 89     	ld (Columnas),a
 445+ 95D7 18 15        	jr 4F
 446+ 95D9
 447+ 95D9              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95D9
 449+ 95D9 3A EC 88     1 ld a,(Coordenada_X)
 450+ 95DC 81           	add c
 451+ 95DD 3D           	dec a
 452+ 95DE D6 1F        	sub $1f
 453+ 95E0 38 08        	jr c,3F
 454+ 95E2 47           	ld b,a
 455+ 95E3 79           	ld a,c
 456+ 95E4 90           	sub b
 457+ 95E5 32 23 89     	ld (Columnas),a
 458+ 95E8 18 04        	jr 4F
 459+ 95EA 79           3 ld a,c
 460+ 95EB 32 23 89     	ld (Columnas),a
 461+ 95EE D9           4 exx
 462+ 95EF 4F           	ld c,a
 463+ 95F0 D9           	exx
 464+ 95F1 C9            ret
 465+ 95F2
 466+ 95F2              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95F2              ;
 468+ 95F2              ;   19/7/23
 469+ 95F2              ;
 470+ 95F2              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95F2              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95F2              ;
 473+ 95F2              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95F2              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95F2              ;
 476+ 95F2              ;	DESTRUYE: HL,B Y A.
 477+ 95F2
 478+ 95F2 3A FA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95F5 FE 02        	cp 2
 480+ 95F7 38 18        	jr c,1F
 481+ 95F9 28 16        	jr z,1F
 482+ 95FB E6 01        	and 1
 483+ 95FD 28 0D        	jr z,3F
 484+ 95FF
 485+ 95FF              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95FF
 487+ 95FF CD 45 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9602
 489+ 9602 7D           9 ld a,l
 490+ 9603 E6 1F        	and $1f
 491+ 9605 28 2A        	jr z,7F
 492+ 9607 2B           	dec hl
 493+ 9608 10 F8        	djnz 9B
 494+ 960A 18 25        	jr 7F
 495+ 960C
 496+ 960C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 960C
 498+ 960C 2A E8 88     3 ld hl,(Posicion_actual)
 499+ 960F 18 20        	jr 7F
 500+ 9611
 501+ 9611 28 14        1 jr z,2F
 502+ 9613
 503+ 9613              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9613
 505+ 9613 CD 45 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9616
 507+ 9616 7D           4 ld a,l
 508+ 9617 E6 1F        	and $1f
 509+ 9619 28 03        	jr z,6F
 510+ 961B 2B           	dec hl
 511+ 961C 10 F8        	djnz 4B
 512+ 961E 06 0F        6 ld b,15
 513+ 9620 CD A6 96     5 call PreviousScan
 514+ 9623 10 FB        	djnz 5B
 515+ 9625 18 0A        	jr 7F
 516+ 9627
 517+ 9627              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9627
 519+ 9627 CD 45 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 962A 06 0F        	ld b,15
 521+ 962C CD A6 96     8 call PreviousScan
 522+ 962F 10 FB        	djnz 8B
 523+ 9631
 524+ 9631 E5           7 push hl
 525+ 9632 DD E1        	pop ix
 526+ 9634
 527+ 9634 2A EA 88     	ld hl,(Puntero_objeto)
 528+ 9637 E5           	push hl
 529+ 9638 FD E1        	pop iy
 530+ 963A
 531+ 963A              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 963A
 533+ 963A 3A 14 89     	ld a,(Ctrl_0)
 534+ 963D CB 77        	bit 6,a
 535+ 963F C8           	ret z
 536+ 9640
 537+ 9640              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9640              ; _ entidad / Amadeus´.
 539+ 9640
 540+ 9640 DD 22 72 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9644
 542+ 9644 C9           	ret
 543+ 9645
 544+ 9645              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9645              ;
 546+ 9645              ;	2/1/23
 547+ 9645              ;
 548+ 9645              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9645              ;
 550+ 9645              ;	Tras esta rutina tenemos:
 551+ 9645              ;
 552+ 9645              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9645              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9645              ;
 555+ 9645              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9645
 557+ 9645 2A E8 88     Operandos ld hl,(Posicion_actual)
 558+ 9648 3A 23 89     	ld a,(Columnas)
 559+ 964B 3D           	dec a
 560+ 964C 20 01        	jr nz,1F
 561+ 964E 3C           	inc a
 562+ 964F 47           1 ld b,a
 563+ 9650 C9           	ret
 564+ 9651
 565+ 9651              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9651              ;
 567+ 9651              ;	3/1/23
 568+ 9651              ;
 569+ 9651              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9651              ;
 571+ 9651              ;	Destruye: A,B,HL y DE.
 572+ 9651
 573+ 9651              Define_rutina_de_impresion
 574+ 9651
 575+ 9651 3A E7 88     	ld a,(Columns)
 576+ 9654 47           	ld b,a
 577+ 9655 3A 23 89     	ld a,(Columnas)
 578+ 9658 B8           	cp b
 579+ 9659 20 0D        	jr nz,2f
 580+ 965B
 581+ 965B              ;	La entidad se imprime entera.
 582+ 965B
 583+ 965B 21 7A 97     	ld hl, Indice_entidades_completas
 584+ 965E E6 01        	and 1
 585+ 9660 28 02        	jr z,1F
 586+ 9662
 587+ 9662 23           	inc hl
 588+ 9663 23           	inc hl
 589+ 9664
 590+ 9664 CD F3 8C     1 call Extrae_address
 591+ 9667 C9           	ret		;	ret
 592+ 9668
 593+ 9668              ;	La entidad no se imprime entera en pantalla.
 594+ 9668
 595+ 9668 3A FA 88     2 ld a,(Cuad_objeto)
 596+ 966B E6 01        	and 1
 597+ 966D 28 17        	jr z,3F
 598+ 966F
 599+ 966F              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 966F
 601+ 966F 21 7E 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9672 3A E7 88     4 ld a,(Columns)
 603+ 9675 E6 01        	and 1
 604+ 9677 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9679
 606+ 9679 23           	inc hl
 607+ 967A 23           	inc hl
 608+ 967B
 609+ 967B 3A 23 89     	ld a,(Columnas)
 610+ 967E E6 01        	and 1
 611+ 9680 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9682
 613+ 9682 23           	inc hl
 614+ 9683 23           	inc hl
 615+ 9684
 616+ 9684 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9686
 618+ 9686 21 84 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9689 18 E7        	jr 4B
 620+ 968B
 621+ 968B              ; --------------------------------------------------------------------------------------------------------------------
 622+ 968B              ;
 623+ 968B              ;	Prepara_draw
 624+ 968B              ;
 625+ 968B              ;	Es una rutina de carga.
 626+ 968B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 968B              ;
 628+ 968B              ;	FUNCIONAMIENTO:
 629+ 968B              ;
 630+ 968B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 968B              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 968B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 968B              ;
 634+ 968B              ;	DESTRUYE:
 635+ 968B              ;
 636+ 968B              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 968B
 638+ 968B 21 E6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 968E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 968F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9690 4E           	ld c,(hl)
 642+ 9691 2A E8 88     	ld hl,(Posicion_actual)
 643+ 9694 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9696 C9           	ret
 645+ 9697
 646+ 9697              ;----------------------------------------------------------------------------------------------------------------
 647+ 9697              ;
 648+ 9697              ;	5/08/22
 649+ 9697              ;
 650+ 9697              ;   NextScan.
 651+ 9697              ;
 652+ 9697              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9697              ;
 654+ 9697              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9697              ;
 656+ 9697              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9697              ;
 658+ 9697              ;       DESTRUIDOS: AF y HL !!!
 659+ 9697              ;
 660+ 9697              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9697              ;
 662+ 9697
 663+ 9697 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9698 7C               ld a,h
 665+ 9699 E6 07            and 7
 666+ 969B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 969C
 668+ 969C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 969D C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 969F 6F               ld l,a
 671+ 96A0 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96A1
 673+ 96A1 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96A2 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96A4 67               ld h,a
 676+ 96A5 C9               ret
 677+ 96A6
 678+ 96A6              ;----------------------------------------------------------------------------------------------------------------
 679+ 96A6              ;
 680+ 96A6              ;	5/08/22
 681+ 96A6              ;
 682+ 96A6              ;   PreviousScan.
 683+ 96A6              ;
 684+ 96A6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96A6              ;
 686+ 96A6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96A6              ;
 688+ 96A6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96A6              ;
 690+ 96A6              ;       DESTRUIDOS: AF y HL !!!
 691+ 96A6              ;
 692+ 96A6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96A6              ;
 694+ 96A6
 695+ 96A6 7C           PreviousScan ld a,h
 696+ 96A7 25               dec h               ; Dec H.
 697+ 96A8 E6 07            and 7
 698+ 96AA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96AB
 700+ 96AB 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96AC D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96AE 6F               ld l,a
 703+ 96AF D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96B0
 705+ 96B0 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96B1 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96B3 67               ld h,a
 708+ 96B4 C9               ret
 709+ 96B5
 710+ 96B5              ; -----------------------------------------------------------------------------------
 711+ 96B5              ;
 712+ 96B5              ;	31/7/23
 713+ 96B5              ;
 714+ 96B5              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96B5              ;	Extrae fotos de Album_de_fotos.
 716+ 96B5
 717+ 96B5              Extrae_foto_entidades
 718+ 96B5
 719+ 96B5 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96B8 7E           	ld a,(hl)
 721+ 96B9 A7           	and a
 722+ 96BA C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96BB
 724+ 96BB 3A 35 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96BE A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96BF C8           	ret z
 727+ 96C0
 728+ 96C0              ; -----------------------------------
 729+ 96C0
 730+ 96C0 ED 73 3A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96C4 31 00 70     	ld sp,Album_de_fotos
 732+ 96C7
 733+ 96C7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96C9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96CA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96CB
 737+ 96CB ED 73 3C 89  	ld (Stack_2),sp
 738+ 96CF ED 7B 3A 89  	ld sp,(Stack)
 739+ 96D3
 740+ 96D3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96D3
 742+ 96D3 3E CD        	ld a,$cd
 743+ 96D5 32 DD 96     	ld (Imprime),a
 744+ 96D8 EB           	ex de,hl
 745+ 96D9 22 DE 96     	ld (Imprime+1),hl
 746+ 96DC EB           	ex de,hl
 747+ 96DD
 748+ 96DD              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96DD
 750+ 96DD 00 00 00     Imprime db 0,0,0
 751+ 96E0
 752+ 96E0 ED 73 3A 89  	ld (Stack),sp
 753+ 96E4
 754+ 96E4 3A 35 89     	ld a,(Numero_de_malotes)
 755+ 96E7 3D           	dec a
 756+ 96E8 28 09        	jr z,1F
 757+ 96EA 32 35 89      	ld (Numero_de_malotes),a
 758+ 96ED
 759+ 96ED ED 7B 3C 89  	ld sp,(Stack_2)
 760+ 96F1 18 D4        	jr 2B
 761+ 96F3
 762+ 96F3 AF           1 xor a
 763+ 96F4 32 3C 89     	ld (Stack_2),a
 764+ 96F7
 765+ 96F7 C9           	ret
 766+ 96F8
 767+ 96F8              ; -----------------------------------------------------------------------------------
 768+ 96F8              ;
 769+ 96F8              ;	28/2/23
 770+ 96F8              ;
 771+ 96F8              ;	Pinta los disparos generados.
 772+ 96F8
 773+ 96F8              Extrae_foto_disparos
 774+ 96F8
 775+ 96F8 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 96FB 7E               ld a,(hl)
 777+ 96FC A7               and a
 778+ 96FD C8               ret z
 779+ 96FE
 780+ 96FE 3A 62 89     	ld a,(Numero_de_disparotes)
 781+ 9701 A7           	and a
 782+ 9702 C8           	ret z
 783+ 9703 ED 73 3A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9707 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 970A
 786+ 970A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 970C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 970D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 970E
 790+ 970E ED 73 3C 89  	ld (Stack_2),sp
 791+ 9712 ED 7B 3A 89  	ld sp,(Stack)
 792+ 9716
 793+ 9716              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9716
 795+ 9716 3E CD        	ld a,$cd
 796+ 9718 32 20 97     	ld (Imprime2),a
 797+ 971B EB           	ex de,hl
 798+ 971C 22 21 97     	ld (Imprime2+1),hl
 799+ 971F EB           	ex de,hl
 800+ 9720
 801+ 9720              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 9720
 803+ 9720 00 00 00     Imprime2 db 0,0,0
 804+ 9723
 805+ 9723 3A 62 89     	ld a,(Numero_de_disparotes)
 806+ 9726 3D           	dec a
 807+ 9727 28 09        	jr z,1F
 808+ 9729 32 62 89      	ld (Numero_de_disparotes),a
 809+ 972C
 810+ 972C ED 7B 3C 89  	ld sp,(Stack_2)
 811+ 9730 18 D8        	jr 2B
 812+ 9732
 813+ 9732 AF           1 xor a
 814+ 9733 32 3C 89     	ld (Stack_2),a
 815+ 9736 C9           	ret
 816+ 9737
 817+ 9737              ; -----------------------------------------------------------------------------------
 818+ 9737              ;
 819+ 9737              ;	4/9/23
 820+ 9737              ;
 821+ 9737              ;	Rutina principal de pintado de Amadeus.
 822+ 9737              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9737
 824+ 9737              Extrae_foto_Amadeus
 825+ 9737
 826+ 9737              ;	jr $
 827+ 9737
 828+ 9737 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 829+ 973A 7E           	ld a,(hl)
 830+ 973B A7           	and a
 831+ 973C C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 973D
 833+ 973D 3A 35 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9740 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9741 C8           	ret z
 836+ 9742
 837+ 9742              ; -----------------------------------
 838+ 9742
 839+ 9742 ED 73 3A 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9746 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 841+ 9749
 842+ 9749 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 974B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 974C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 974D
 846+ 974D ED 73 3C 89  	ld (Stack_2),sp
 847+ 9751 ED 7B 3A 89  	ld sp,(Stack)
 848+ 9755
 849+ 9755              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9755
 851+ 9755 3E CD        	ld a,$cd
 852+ 9757 32 5F 97     	ld (Imprime_Amadeus),a
 853+ 975A EB           	ex de,hl
 854+ 975B 22 60 97     	ld (Imprime_Amadeus+1),hl
 855+ 975E EB           	ex de,hl
 856+ 975F
 857+ 975F              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 975F
 859+ 975F 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9762
 861+ 9762 ED 73 3A 89  	ld (Stack),sp
 862+ 9766
 863+ 9766 3A 35 89     	ld a,(Numero_de_malotes)
 864+ 9769 3D           	dec a
 865+ 976A 28 09        	jr z,1F
 866+ 976C 32 35 89      	ld (Numero_de_malotes),a
 867+ 976F
 868+ 976F ED 7B 3C 89  	ld sp,(Stack_2)
 869+ 9773 18 D4        	jr 2B
 870+ 9775
 871+ 9775 AF           1 xor a
 872+ 9776 32 3C 89     	ld (Stack_2),a
 873+ 9779
 874+ 9779 C9           	ret
# file closed: Draw_XOR.asm
1562  977A              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 977A              ;   índices de Rutinas de impresión.
   2+ 977A
   3+ 977A 8A 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 977C B7 97            defw Pinta_Amadeus_3x2
   5+ 977E
   6+ 977E 0D 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9780 AD 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9782 61 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9784
  10+ 9784 37 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9786 3B 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9788 EF 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 978A
  14+ 978A
  15+ 978A              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 978A              ;
  17+ 978A              ;   12/12/22
  18+ 978A              ;
  19+ 978A              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 978A              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 978A              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 978A              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 978A              ;
  24+ 978A              ;   Modifica: DE y HL.
  25+ 978A
  26+ 978A ED 73 3A 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 978E FD F9        	ld sp,iy
  28+ 9790 06 10            ld b,16
  29+ 9792 D1           1 pop de
  30+ 9793 7B               ld a,e
  31+ 9794 AE               xor (hl)
  32+ 9795 77           	ld (hl),a
  33+ 9796 23           	inc hl
  34+ 9797 7A               ld a,d
  35+ 9798 AE               xor (hl)
  36+ 9799 77           	ld (hl),a
  37+ 979A 2B           	dec hl
  38+ 979B 24           	inc h
  39+ 979C 7C               ld a,h
  40+ 979D E6 07            and 7
  41+ 979F 20 0A            jr nz,2F
  42+ 97A1 7D               ld a,l
  43+ 97A2 C6 20            add a,$20
  44+ 97A4 6F               ld l,a
  45+ 97A5 38 04            jr c,2F
  46+ 97A7 7C               ld a,h
  47+ 97A8 D6 08            sub 8
  48+ 97AA 67               ld h,a
  49+ 97AB 7C           2 ld a,h
  50+ 97AC FE 58            cp $58
  51+ 97AE 28 02            jr z,3F
  52+ 97B0 10 E0            djnz 1B
  53+ 97B2 ED 7B 3A 89  3 ld sp,(Stack)
  54+ 97B6 C9           	ret
  55+ 97B7
  56+ 97B7 ED 73 3A 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97BB FD F9        	ld sp,iy
  58+ 97BD 06 08            ld b,8
  59+ 97BF D1           1 pop de
  60+ 97C0 7B               ld a,e
  61+ 97C1 AE               xor (hl)
  62+ 97C2 77           	ld (hl),a
  63+ 97C3 23           	inc hl
  64+ 97C4 7A               ld a,d
  65+ 97C5 AE               xor (hl)
  66+ 97C6 77           	ld (hl),a
  67+ 97C7 23           	inc hl
  68+ 97C8 D1           	pop de
  69+ 97C9 7B               ld a,e
  70+ 97CA AE               xor (hl)
  71+ 97CB 77           	ld (hl),a
  72+ 97CC 2B           	dec hl
  73+ 97CD 2B           	dec hl
  74+ 97CE 24           	inc h
  75+ 97CF 7C               ld a,h
  76+ 97D0 E6 07            and 7
  77+ 97D2 20 0A            jr nz,2F
  78+ 97D4 7D               ld a,l
  79+ 97D5 C6 20            add a,$20
  80+ 97D7 6F               ld l,a
  81+ 97D8 38 04            jr c,2F
  82+ 97DA 7C               ld a,h
  83+ 97DB D6 08            sub 8
  84+ 97DD 67               ld h,a
  85+ 97DE 7C           2 ld a,h
  86+ 97DF FE 58            cp $58
  87+ 97E1 28 25            jr z,4F
  88+ 97E3 7A               ld a,d
  89+ 97E4 AE               xor (hl)
  90+ 97E5 77               ld (hl),a
  91+ 97E6 D1           	pop de
  92+ 97E7 23           	inc hl
  93+ 97E8 7B               ld a,e
  94+ 97E9 AE               xor (hl)
  95+ 97EA 77           	ld (hl),a
  96+ 97EB 23           	inc hl
  97+ 97EC 7A               ld a,d
  98+ 97ED AE               xor (hl)
  99+ 97EE 77           	ld (hl),a
 100+ 97EF 2B           	dec hl
 101+ 97F0 2B           	dec hl
 102+ 97F1 24           	inc h
 103+ 97F2 7C               ld a,h
 104+ 97F3 E6 07            and 7
 105+ 97F5 20 0A            jr nz,3F
 106+ 97F7 7D               ld a,l
 107+ 97F8 C6 20            add a,$20
 108+ 97FA 6F               ld l,a
 109+ 97FB 38 04            jr c,3F
 110+ 97FD 7C               ld a,h
 111+ 97FE D6 08            sub 8
 112+ 9800 67               ld h,a
 113+ 9801 7C           3 ld a,h
 114+ 9802 FE 58            cp $58
 115+ 9804 28 02            jr z,4F
 116+ 9806 10 B7            djnz 1B
 117+ 9808 ED 7B 3A 89  4 ld sp,(Stack)
 118+ 980C C9           	ret
 119+ 980D
 120+ 980D              ; ---------------------------------------------------
 121+ 980D
 122+ 980D ED 73 3A 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9811 FD F9        	ld sp,iy
 124+ 9813
 125+ 9813              ; >>>
 126+ 9813
 127+ 9813 06 10            ld b,16
 128+ 9815 D1           1 pop de
 129+ 9816 7A           	ld a,d
 130+ 9817 AE           	xor (hl)
 131+ 9818 77           	ld (hl),a
 132+ 9819 24           	inc h
 133+ 981A 7C               ld a,h
 134+ 981B E6 07            and 7
 135+ 981D 20 0C            jr nz,2F
 136+ 981F 7D               ld a,l
 137+ 9820 C6 20            add a,$20
 138+ 9822 6F               ld l,a
 139+ 9823 38 06            jr c,2F
 140+ 9825 7C               ld a,h
 141+ 9826 D6 08            sub 8
 142+ 9828 67               ld h,a
 143+ 9829 18 00            jr 2F
 144+ 982B 7C           2 ld a,h
 145+ 982C FE 58            cp $58
 146+ 982E 28 02            jr z,3F
 147+ 9830 10 E3            djnz 1B
 148+ 9832 ED 7B 3A 89  3 ld sp,(Stack)
 149+ 9836 C9           	ret
 150+ 9837
 151+ 9837 ED 73 3A 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 983B FD F9        	ld sp,iy
 153+ 983D
 154+ 983D              ; >>>
 155+ 983D
 156+ 983D 06 10            ld b,16
 157+ 983F D1           1 pop de
 158+ 9840 7B           	ld a,e
 159+ 9841 AE           	xor (hl)
 160+ 9842 77           	ld (hl),a
 161+ 9843 24           	inc h
 162+ 9844 7C               ld a,h
 163+ 9845 E6 07            and 7
 164+ 9847 20 0C            jr nz,2F
 165+ 9849 7D               ld a,l
 166+ 984A C6 20            add a,$20
 167+ 984C 6F               ld l,a
 168+ 984D 38 06            jr c,2F
 169+ 984F 7C               ld a,h
 170+ 9850 D6 08            sub 8
 171+ 9852 67               ld h,a
 172+ 9853 18 00            jr 2F
 173+ 9855 7C           2 ld a,h
 174+ 9856 FE 58            cp $58
 175+ 9858 28 02            jr z,3F
 176+ 985A 10 E3            djnz 1B
 177+ 985C ED 7B 3A 89  3 ld sp,(Stack)
 178+ 9860 C9           	ret
 179+ 9861
 180+ 9861              ; ---------------------------------------------------
 181+ 9861
 182+ 9861 ED 73 3A 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9865 FD F9        	ld sp,iy
 184+ 9867 06 08            ld b,8
 185+ 9869 D1           1 pop de
 186+ 986A 7A           	ld a,d
 187+ 986B AE           	xor (hl)
 188+ 986C 77           	ld (hl),a
 189+ 986D 23           	inc hl
 190+ 986E D1           	pop de
 191+ 986F 7B           	ld a,e
 192+ 9870 AE           	xor (hl)
 193+ 9871 77           	ld (hl),a
 194+ 9872 2B           	dec hl
 195+ 9873 24            	inc h
 196+ 9874 7C               ld a,h
 197+ 9875 E6 07            and 7
 198+ 9877 20 0A            jr nz,2F
 199+ 9879 7D               ld a,l
 200+ 987A C6 20            add a,$20
 201+ 987C 6F               ld l,a
 202+ 987D 38 04            jr c,2F
 203+ 987F 7C               ld a,h
 204+ 9880 D6 08            sub 8
 205+ 9882 67               ld h,a
 206+ 9883 7C           2 ld a,h
 207+ 9884 FE 58            cp $58
 208+ 9886 28 20            jr z,4F
 209+ 9888 D1               pop de
 210+ 9889 7B           	ld a,e
 211+ 988A AE           	xor (hl)
 212+ 988B 77           	ld (hl),a
 213+ 988C 23           	inc hl
 214+ 988D 7A           	ld a,d
 215+ 988E AE           	xor (hl)
 216+ 988F 77           	ld (hl),a
 217+ 9890 2B           	dec hl
 218+ 9891 24           	inc h
 219+ 9892 7C               ld a,h
 220+ 9893 E6 07            and 7
 221+ 9895 20 0A            jr nz,3F
 222+ 9897 7D               ld a,l
 223+ 9898 C6 20            add a,$20
 224+ 989A 6F               ld l,a
 225+ 989B 38 04            jr c,3F
 226+ 989D 7C               ld a,h
 227+ 989E D6 08            sub 8
 228+ 98A0 67               ld h,a
 229+ 98A1 7C           3 ld a,h
 230+ 98A2 FE 58            cp $58
 231+ 98A4 28 02            jr z,4F
 232+ 98A6 10 C1            djnz 1B
 233+ 98A8 ED 7B 3A 89  4 ld sp,(Stack)
 234+ 98AC C9           	ret
 235+ 98AD
 236+ 98AD ED 73 3A 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98B1 FD F9        	ld sp,iy
 238+ 98B3 06 08            ld b,8
 239+ 98B5 D1           1 pop de
 240+ 98B6 D1           	pop de
 241+ 98B7 7B           	ld a,e
 242+ 98B8 AE           	xor (hl)
 243+ 98B9 77           	ld (hl),a
 244+ 98BA 24            	inc h
 245+ 98BB 7C               ld a,h
 246+ 98BC E6 07            and 7
 247+ 98BE 20 0A            jr nz,2F
 248+ 98C0 7D               ld a,l
 249+ 98C1 C6 20            add a,$20
 250+ 98C3 6F               ld l,a
 251+ 98C4 38 04            jr c,2F
 252+ 98C6 7C               ld a,h
 253+ 98C7 D6 08            sub 8
 254+ 98C9 67               ld h,a
 255+ 98CA 7C           2 ld a,h
 256+ 98CB FE 58            cp $58
 257+ 98CD 28 1B            jr z,4F
 258+ 98CF D1               pop de
 259+ 98D0 7A           	ld a,d
 260+ 98D1 AE           	xor (hl)
 261+ 98D2 77           	ld (hl),a
 262+ 98D3 24           	inc h
 263+ 98D4 7C               ld a,h
 264+ 98D5 E6 07            and 7
 265+ 98D7 20 0A            jr nz,3F
 266+ 98D9 7D               ld a,l
 267+ 98DA C6 20            add a,$20
 268+ 98DC 6F               ld l,a
 269+ 98DD 38 04            jr c,3F
 270+ 98DF 7C               ld a,h
 271+ 98E0 D6 08            sub 8
 272+ 98E2 67               ld h,a
 273+ 98E3 7C           3 ld a,h
 274+ 98E4 FE 58            cp $58
 275+ 98E6 28 02            jr z,4F
 276+ 98E8 10 CB            djnz 1B
 277+ 98EA ED 7B 3A 89  4 ld sp,(Stack)
 278+ 98EE C9           	ret
 279+ 98EF
 280+ 98EF ED 73 3A 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 98F3 FD F9        	ld sp,iy
 282+ 98F5 06 08            ld b,8
 283+ 98F7 D1           1 pop de
 284+ 98F8 7B           	ld a,e
 285+ 98F9 AE           	xor (hl)
 286+ 98FA 77           	ld (hl),a
 287+ 98FB 23           	inc hl
 288+ 98FC 7A           	ld a,d
 289+ 98FD AE           	xor (hl)
 290+ 98FE 77           	ld (hl),a
 291+ 98FF 2B           	dec hl
 292+ 9900 24             	inc h
 293+ 9901 7C               ld a,h
 294+ 9902 E6 07            and 7
 295+ 9904 20 0A            jr nz,2F
 296+ 9906 7D               ld a,l
 297+ 9907 C6 20            add a,$20
 298+ 9909 6F               ld l,a
 299+ 990A 38 04            jr c,2F
 300+ 990C 7C               ld a,h
 301+ 990D D6 08            sub 8
 302+ 990F 67               ld h,a
 303+ 9910 7C           2 ld a,h
 304+ 9911 FE 58            cp $58
 305+ 9913 28 21            jr z,4F
 306+ 9915 D1               pop de
 307+ 9916 7A           	ld a,d
 308+ 9917 AE           	xor (hl)
 309+ 9918 77           	ld (hl),a
 310+ 9919 23           	inc hl
 311+ 991A D1               pop de
 312+ 991B 7B           	ld a,e
 313+ 991C AE           	xor (hl)
 314+ 991D 77           	ld (hl),a
 315+ 991E 2B           	dec hl
 316+ 991F 24           	inc h
 317+ 9920 7C               ld a,h
 318+ 9921 E6 07            and 7
 319+ 9923 20 0A            jr nz,3F
 320+ 9925 7D               ld a,l
 321+ 9926 C6 20            add a,$20
 322+ 9928 6F               ld l,a
 323+ 9929 38 04            jr c,3F
 324+ 992B 7C               ld a,h
 325+ 992C D6 08            sub 8
 326+ 992E 67               ld h,a
 327+ 992F 7C           3 ld a,h
 328+ 9930 FE 58            cp $58
 329+ 9932 28 02            jr z,4F
 330+ 9934 10 C1            djnz 1B
 331+ 9936 ED 7B 3A 89  4 ld sp,(Stack)
 332+ 993A C9           	ret
 333+ 993B
 334+ 993B ED 73 3A 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 993F FD F9        	ld sp,iy
 336+ 9941 06 08            ld b,8
 337+ 9943 D1           1 pop de
 338+ 9944 7B           	ld a,e
 339+ 9945 AE           	xor (hl)
 340+ 9946 77           	ld (hl),a
 341+ 9947 24            	inc h
 342+ 9948 7C               ld a,h
 343+ 9949 E6 07            and 7
 344+ 994B 20 0A            jr nz,2F
 345+ 994D 7D               ld a,l
 346+ 994E C6 20            add a,$20
 347+ 9950 6F               ld l,a
 348+ 9951 38 04            jr c,2F
 349+ 9953 7C               ld a,h
 350+ 9954 D6 08            sub 8
 351+ 9956 67               ld h,a
 352+ 9957 7C           2 ld a,h
 353+ 9958 FE 58            cp $58
 354+ 995A 28 1C            jr z,4F
 355+ 995C D1               pop de
 356+ 995D 7A           	ld a,d
 357+ 995E AE           	xor (hl)
 358+ 995F 77           	ld (hl),a
 359+ 9960 24           	inc h
 360+ 9961 7C               ld a,h
 361+ 9962 E6 07            and 7
 362+ 9964 20 0A            jr nz,3F
 363+ 9966 7D               ld a,l
 364+ 9967 C6 20            add a,$20
 365+ 9969 6F               ld l,a
 366+ 996A 38 04            jr c,3F
 367+ 996C 7C               ld a,h
 368+ 996D D6 08            sub 8
 369+ 996F 67               ld h,a
 370+ 9970 7C           3 ld a,h
 371+ 9971 FE 58            cp $58
 372+ 9973 28 03            jr z,4F
 373+ 9975 D1               pop de
 374+ 9976 10 CB            djnz 1B
 375+ 9978 ED 7B 3A 89  4 ld sp,(Stack)
 376+ 997C C9           	ret
 377+ 997D
 378+ 997D              ; ---------------------------------------------------
 379+ 997D              ;
 380+ 997D              ;   27/02/23
 381+ 997D              ;
 382+ 997D              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 997D              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 997D              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 997D
 386+ 997D ED 73 3A 89  Pinta_Disparo ld (Stack),sp
 387+ 9981 FD F9            ld sp,iy
 388+ 9983 06 03            ld b,3
 389+ 9985 D1           1 pop de
 390+ 9986 7B               ld a,e
 391+ 9987 AE               xor (hl)
 392+ 9988 77               ld (hl),a
 393+ 9989 23               inc hl
 394+ 998A 7A               ld a,d
 395+ 998B AE               xor (hl)
 396+ 998C 77               ld (hl),a
 397+ 998D 2B               dec hl
 398+ 998E
 399+ 998E 24               inc h
 400+ 998F 7C               ld a,h
 401+ 9990 E6 07            and 7
 402+ 9992 20 0A            jr nz,2F
 403+ 9994 7D               ld a,l
 404+ 9995 C6 20            add a,$20
 405+ 9997 6F               ld l,a
 406+ 9998 38 04            jr c,2F
 407+ 999A 7C               ld a,h
 408+ 999B D6 08            sub 8
 409+ 999D 67               ld h,a
 410+ 999E 7C           2 ld a,h
 411+ 999F FE 58            cp $58
 412+ 99A1 28 02            jr z,3F
 413+ 99A3
 414+ 99A3 10 E0            djnz 1B
 415+ 99A5 ED 7B 3A 89  3 ld sp,(Stack)
 416+ 99A9 C9               ret
 417+ 99AA
# file closed: Rutinas_de_impresion_sprites.asm
1563  99AA              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99AA              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99AA              ;
   3+ 99AA              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99AA              ;
   5+ 99AA              ; *****************************************************************************************************************************************************************************************
   6+ 99AA              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99AA
   8+ 99AA 7C           calcula_tercio ld a,h
   9+ 99AB E6 18        	and $18
  10+ 99AD CB 2F        	sra a
  11+ 99AF CB 2F        	sra a
  12+ 99B1 CB 2F        	sra a
  13+ 99B3 C9           	ret
  14+ 99B4
# file closed: calcula_tercio.asm
1564  99B4              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99B4              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99B4              ;
   3+ 99B4              ;
   4+ 99B4              ;	CLS.
   5+ 99B4              ;
   6+ 99B4              ;	Limpia la pantalla y define sus atributos.
   7+ 99B4              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99B4              ;
   9+ 99B4              ;	COLORES: 0 ..... NEGRO
  10+ 99B4              ;    		 1 ..... AZUL
  11+ 99B4              ; 			 2 ..... ROJO
  12+ 99B4              ;			 3 ..... MAGENTA
  13+ 99B4              ; 			 4 ..... VERDE
  14+ 99B4              ; 			 5 ..... CIAN
  15+ 99B4              ;			 6 ..... AMARILLO
  16+ 99B4              ; 			 7 ..... BLANCO
  17+ 99B4              ;
  18+ 99B4              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99B4              ;
  20+ 99B4              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99B4
  22+ 99B4
  23+ 99B4 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99B7 11 01 40     	LD DE,$4001
  25+ 99BA 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99BD 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99BF ED B0        	LDIR
  28+ 99C1 01 FF 02     	LD BC,767
  29+ 99C4 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99C5 ED B0        	LDIR
  31+ 99C7 C9           	ret
  32+ 99C8
# file closed: Cls.asm
1565  99C8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99C8              ; ******************************************************************************************************************************************************************************************
   2+ 99C8              ;
   3+ 99C8              ;   20/05/23
   4+ 99C8              ;
   5+ 99C8              ;	Recompone_posicion_inicio
   6+ 99C8              ;
   7+ 99C8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99C8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99C8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99C8              ;	_ a una u otra rutina.
  11+ 99C8
  12+ 99C8              Recompone_posicion_inicio
  13+ 99C8
  14+ 99C8 2A F8 88     	ld hl,(Posicion_inicio)
  15+ 99CB 7D           	ld a,l
  16+ 99CC E6 1F        	and $1f
  17+ 99CE 28 16        	jr z,1F
  18+ 99D0
  19+ 99D0 FE 1F        	cp $1f
  20+ 99D2 28 0D        	jr z,3F
  21+ 99D4
  22+ 99D4 21 27 89     	ld hl,Ctrl_2
  23+ 99D7 CB C6        	set 0,(hl)
  24+ 99D9 2A EA 88     	ld hl,(Puntero_objeto)
  25+ 99DC 22 2A 89     	ld (Repone_puntero_objeto),hl
  26+ 99DF 18 08        	jr 2F
  27+ 99E1
  28+ 99E1 CD 82 9B     3 call Mov_left
  29+ 99E4 18 03        	jr 2F
  30+ 99E6
  31+ 99E6 CD 64 9A     1 call Mov_right
  32+ 99E9 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99EC 22 EA 88     	ld (Puntero_objeto),hl
  34+ 99EF C9           	ret
  35+ 99F0
  36+ 99F0              ; ******************************************************************************************************************************************************************************************
  37+ 99F0              ;
  38+ 99F0              ;   27/05/23
  39+ 99F0              ;
  40+ 99F0              ;	Mov_down
  41+ 99F0              ;
  42+ 99F0              ; 	Mueve el Sprite X px hacia abajo.
  43+ 99F0              ;
  44+ 99F0              ;
  45+ 99F0              Mov_down
  46+ 99F0
  47+ 99F0 CD 52 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 99F3              ;																	; _ repone (Puntero_objeto).
  49+ 99F3 21 14 89     	ld hl,Ctrl_0
  50+ 99F6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 99F8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 99F8              ; 																	; _ en el caso de que no lo haya.
  53+ 99F8 3A FE 88     	ld a,(Vel_down)
  54+ 99FB 47           	ld b,a
  55+ 99FC 2A E8 88         ld hl,(Posicion_actual)
  56+ 99FF CD AA 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A02 E6 02        	and 2
  58+ 9A04 28 0F        	jr z,1F
  59+ 9A06
  60+ 9A06              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A06              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A06
  63+ 9A06 7C           	ld a,h
  64+ 9A07 FE 57        	cp $57
  65+ 9A09 20 0A        	jr nz,1F
  66+ 9A0B
  67+ 9A0B 7D           	ld a,l
  68+ 9A0C C6 20        	add $20
  69+ 9A0E 30 05        	jr nc,1F
  70+ 9A10
  71+ 9A10              ; ------------------------------
  72+ 9A10              ;	call Reaparece_arriba
  73+ 9A10 CD 0F 9D     	call Reinicio
  74+ 9A13              ; ------------------------------
  75+ 9A13
  76+ 9A13 18 08        	jr 3F
  77+ 9A15 CD 97 96     1 call NextScan
  78+ 9A18 22 E8 88     	ld (Posicion_actual),hl
  79+ 9A1B 10 E2            djnz 2B
  80+ 9A1D CD 35 9D     3 call Genera_coordenadas
  81+ 9A20 C9           	ret
  82+ 9A21
  83+ 9A21              ; ******************************************************************************************************************************************************************************************
  84+ 9A21              ;
  85+ 9A21              ;   27/05/23
  86+ 9A21              ;
  87+ 9A21              ;	Mov_up
  88+ 9A21              ;
  89+ 9A21              ; 	Mueve el Sprite hacia arriba.
  90+ 9A21              ;
  91+ 9A21              ;
  92+ 9A21              Mov_up
  93+ 9A21
  94+ 9A21 CD 52 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A24              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A24 21 14 89     	ld hl,Ctrl_0
  97+ 9A27 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A29              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A29              ; 																		; _ en el caso de que no lo haya.
 100+ 9A29 3A FD 88     	ld a,(Vel_up)
 101+ 9A2C 47           	ld b,a
 102+ 9A2D 2A E8 88     	ld hl,(Posicion_actual)
 103+ 9A30 CD AA 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A33 A7           	and a
 105+ 9A34 20 10        	jr nz,1F
 106+ 9A36
 107+ 9A36              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A36              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A36
 110+ 9A36 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A37 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A39 20 0B            jr nz,1F
 113+ 9A3B 7D               ld a,l
 114+ 9A3C D6 20            sub $20
 115+ 9A3E 30 06            jr nc,1F
 116+ 9A40 25               dec h
 117+ 9A41
 118+ 9A41              ; -----------------------------
 119+ 9A41 CD F0 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A44              ;	call Reinicio
 121+ 9A44              ; -----------------------------
 122+ 9A44
 123+ 9A44 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A46 CD A6 96     1 call PreviousScan
 125+ 9A49 22 E8 88     	ld (Posicion_actual),hl
 126+ 9A4C 10 E2            djnz 3B
 127+ 9A4E CD 35 9D     2 call Genera_coordenadas
 128+ 9A51 C9           	ret
 129+ 9A52
 130+ 9A52              ; -----------------------------
 131+ 9A52              ;
 132+ 9A52              ;	27/5/23
 133+ 9A52              ;
 134+ 9A52              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A52              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A52              ;
 137+ 9A52              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A52              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A52              ;
 140+ 9A52              ;	Modifica: A y (Puntero_objeto).
 141+ 9A52
 142+ 9A52 3A 27 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A55 CB 47        	bit 0,a
 144+ 9A57 C8           	ret z
 145+ 9A58 CB 87        	res 0,a
 146+ 9A5A 32 27 89     	ld (Ctrl_2),a
 147+ 9A5D 2A 2A 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A60 22 EA 88     	ld (Puntero_objeto),hl
 149+ 9A63 C9           	ret
 150+ 9A64
 151+ 9A64              ; ******************************************************************************************************************************************************************************************
 152+ 9A64              ;
 153+ 9A64              ;	19/10/22
 154+ 9A64              ;
 155+ 9A64              ;	Mov_right.
 156+ 9A64              ;
 157+ 9A64              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A64              ;
 159+ 9A64
 160+ 9A64 21 14 89     Mov_right ld hl,Ctrl_0
 161+ 9A67 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A69              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A69              ; 																	; _ en el caso de que no lo haya.
 164+ 9A69 3A 14 89     	ld a,(Ctrl_0)
 165+ 9A6C CB 77        	bit 6,a
 166+ 9A6E 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A70
 168+ 9A70 CD 9E 9C     	call Stop_Amadeus_right
 169+ 9A73 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A74 18 4D        	jr 8F
 171+ 9A76
 172+ 9A76 3A EC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A79 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A7B 20 46        	jr nz,8F
 175+ 9A7D
 176+ 9A7D 3A EE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A80 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A81 28 40        	jr z,8F
 179+ 9A83
 180+ 9A83              ; ---------- ---------- ----------
 181+ 9A83              ;
 182+ 9A83              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A83
 184+ 9A83 3A FC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A86 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A88 28 11        	jr z,1F
 187+ 9A8A 38 06        	jr c,6F
 188+ 9A8C FE 04        	cp 4
 189+ 9A8E 28 14        	jr z,7F
 190+ 9A90 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A92
 192+ 9A92              ; ---------- ---------- ----------
 193+ 9A92              ;
 194+ 9A92              ; Perfiles de velocidad
 195+ 9A92              ;
 196+ 9A92
 197+ 9A92 3A EE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A95 FE FE        	cp $fe
 199+ 9A97 20 2A        	jr nz,8F
 200+ 9A99 18 10        	jr 3F
 201+ 9A9B 3A EE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A9E FE FD        	cp $fd
 203+ 9AA0 20 21        	jr nz,8F
 204+ 9AA2 18 07        	jr 3F
 205+ 9AA4 3A EE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AA7 FE FB        	cp $fb
 207+ 9AA9 20 18        	jr nz,8F
 208+ 9AAB
 209+ 9AAB              ; ---------- ---------- ----------
 210+ 9AAB
 211+ 9AAB              3
 212+ 9AAB CD DE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AAE              ;	call Reinicio
 214+ 9AAE
 215+ 9AAE              ; ---------- ---------- ----------
 216+ 9AAE              ;
 217+ 9AAE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AAE
 219+ 9AAE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AB0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AB1 CD CA 9A     	call DESPLZ_DER
 222+ 9AB4 C1           	pop bc
 223+ 9AB5 10 F9        	djnz 5B
 224+ 9AB7 2A E8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9ABA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9ABB 22 E8 88     	ld (Posicion_actual),hl
 227+ 9ABE CD 35 9D     	call Genera_coordenadas
 228+ 9AC1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AC3
 230+ 9AC3              ; ---------- ---------- ----------
 231+ 9AC3
 232+ 9AC3 2A E8 88     8 ld hl,(Posicion_actual)
 233+ 9AC6 CD CA 9A     	call DESPLZ_DER
 234+ 9AC9 C9           2 ret
 235+ 9ACA
 236+ 9ACA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9ACA              ;
 238+ 9ACA              ;	22/9/22
 239+ 9ACA              ;
 240+ 9ACA
 241+ 9ACA CD D9 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9ACD CD 25 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AD0 CD 4E 9B         call Ciclo_completo
 244+ 9AD3 21 14 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AD6 CB FE        	set 7,(hl)
 246+ 9AD8 C9           	ret
 247+ 9AD9
 248+ 9AD9              ; ******************************************************************************************************************************************************************************************
 249+ 9AD9              ;	15/02/23
 250+ 9AD9              ;
 251+ 9AD9
 252+ 9AD9 3A FC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9ADC 47           	ld b,a
 254+ 9ADD 2A F4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AE0 23           1 inc hl
 256+ 9AE1 23           	inc hl
 257+ 9AE2 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AE4 22 F4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AE7 CD F3 8C     	call Extrae_address
 260+ 9AEA 22 EA 88     	ld (Puntero_objeto),hl
 261+ 9AED
 262+ 9AED              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9AED
 264+ 9AED              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9AED              ; Cuántos movimientos hemos hecho ??
 266+ 9AED              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9AED
 268+ 9AED 2A F0 88     7 ld hl,(Indice_Sprite_der)
 269+ 9AF0 EB           	ex de,hl
 270+ 9AF1 A7           	and a
 271+ 9AF2 ED 52        	sbc hl,de
 272+ 9AF4 CB 3D        	srl l
 273+ 9AF6 3E 08        6 ld a,8
 274+ 9AF8 95           	sub l
 275+ 9AF9 30 1E        	jr nc,3F
 276+ 9AFB
 277+ 9AFB              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9AFB              ; B="0".
 279+ 9AFB
 280+ 9AFB 04           4 inc b
 281+ 9AFC 3C           	inc a
 282+ 9AFD 20 FC        	jr nz,4B
 283+ 9AFF 78           	ld a,b
 284+ 9B00 08           	ex af,af
 285+ 9B01 2A F0 88     	ld hl,(Indice_Sprite_der)
 286+ 9B04 23           5 inc hl
 287+ 9B05 23           	inc hl
 288+ 9B06 10 FC        	djnz 5B
 289+ 9B08 22 F4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B0B CD F3 8C     	call Extrae_address
 291+ 9B0E 22 EA 88     	ld (Puntero_objeto),hl
 292+ 9B11
 293+ 9B11              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B11              ; _(Posicion_actual).
 295+ 9B11
 296+ 9B11 21 E8 88     	ld hl,Posicion_actual
 297+ 9B14 34           	inc (hl)
 298+ 9B15 08               ex af,af
 299+ 9B16 6F           	ld l,a
 300+ 9B17 18 DD        	jr 6B
 301+ 9B19
 302+ 9B19              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B19
 304+ 9B19 47           3 ld b,a
 305+ 9B1A 2A F2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B1D 23           2 inc hl
 307+ 9B1E 23           	inc hl
 308+ 9B1F 10 FC        	djnz 2B
 309+ 9B21 22 F6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B24 C9           8 ret
 311+ 9B25
 312+ 9B25              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B25              ;
 314+ 9B25              ;	24/7/22
 315+ 9B25              ;
 316+ 9B25              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B25              ;
 318+ 9B25              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B25              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B25              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B25
 322+ 9B25 3A EE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B28 A7           	and a
 324+ 9B29 20 1F        	jr nz,1F
 325+ 9B2B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B2D 32 EE 88         ld (CTRL_DESPLZ),a
 327+ 9B30
 328+ 9B30 21 E7 88     	ld hl,Columns
 329+ 9B33 34           	inc (hl)
 330+ 9B34 3A FA 88     	ld a,(Cuad_objeto)
 331+ 9B37 E6 01        	and 1
 332+ 9B39 28 0F        	jr z,1F
 333+ 9B3B 2A E8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B3E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B3F 22 E8 88     	ld (Posicion_actual),hl
 336+ 9B42 CD 35 9D     	call Genera_coordenadas
 337+ 9B45 CD AA 9C     	call Inc_CTRL_DESPLZ
 338+ 9B48 18 03        	jr 2F
 339+ 9B4A CD AA 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B4D C9           2 ret
 341+ 9B4E
 342+ 9B4E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B4E              ;
 344+ 9B4E              ;	24/7/22
 345+ 9B4E              ;
 346+ 9B4E              ;	Ciclo_completo.
 347+ 9B4E              ;
 348+ 9B4E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B4E              ;
 350+ 9B4E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B4E              ; 	Decrementamos (Columns).
 352+ 9B4E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B4E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B4E
 355+ 9B4E
 356+ 9B4E 3A EE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B51 FE FF        	cp $ff
 358+ 9B53 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B55 E6 F0        	and $f0
 360+ 9B57 20 28        	jr nz,3F
 361+ 9B59
 362+ 9B59              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B59
 364+ 9B59 3A EE 88     	ld a,(CTRL_DESPLZ)
 365+ 9B5C 47           	ld b,a
 366+ 9B5D 3E F8        	ld a,$f8
 367+ 9B5F 80           	add b
 368+ 9B60 32 EE 88     	ld (CTRL_DESPLZ),a
 369+ 9B63 18 1C        	jr 3F
 370+ 9B65 21 E7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B68 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B69 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B6A 32 EE 88     	ld (CTRL_DESPLZ),a
 374+ 9B6D 3A FA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B70 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B72 20 0A        	jr nz,2F
 377+ 9B74 2A E8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B77 23           	inc hl
 379+ 9B78 22 E8 88     	ld (Posicion_actual),hl
 380+ 9B7B CD 35 9D     	call Genera_coordenadas
 381+ 9B7E
 382+ 9B7E              ; Inicia el puntero de Sprite.
 383+ 9B7E
 384+ 9B7E CD 0A 8D     2 call Inicia_puntero_objeto_der
 385+ 9B81 C9           3 ret
 386+ 9B82
 387+ 9B82              ; ******************************************************************************************************************************************************************************************
 388+ 9B82              ;
 389+ 9B82              ;	15/02/23
 390+ 9B82              ;
 391+ 9B82              ;	Mov_left.
 392+ 9B82              ;
 393+ 9B82              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B82              ;
 395+ 9B82 21 14 89     Mov_left ld hl,Ctrl_0
 396+ 9B85 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B87              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B87              ; 																	; _ en el caso de que no lo haya.
 399+ 9B87 3A 14 89     	ld a,(Ctrl_0)
 400+ 9B8A CB 77        	bit 6,a
 401+ 9B8C 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B8E
 403+ 9B8E CD A4 9C     	call Stop_Amadeus_left
 404+ 9B91 C8           	ret z
 405+ 9B92 20 4A        	jr nz,8F
 406+ 9B94
 407+ 9B94 3A EC 88     11 ld a,(Coordenada_X)
 408+ 9B97 A7           	and a
 409+ 9B98 20 44        	jr nz,8F
 410+ 9B9A
 411+ 9B9A 3A EE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B9D A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B9E 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BA0
 415+ 9BA0              ; ---------- ---------- ----------
 416+ 9BA0
 417+ 9BA0 3A FB 88     	ld a,(Vel_left)
 418+ 9BA3 FE 02        	cp 2
 419+ 9BA5 28 0F        	jr z,1F
 420+ 9BA7 38 04        	jr c,6F
 421+ 9BA9 FE 04        	cp 4
 422+ 9BAB 28 12        	jr z,7F
 423+ 9BAD
 424+ 9BAD              ; ---------- ---------- ----------
 425+ 9BAD
 426+ 9BAD 3A EE 88     6 ld a,(CTRL_DESPLZ)
 427+ 9BB0 FE F8        	cp $f8
 428+ 9BB2 20 2A        	jr nz,8F
 429+ 9BB4 18 10        	jr 4F
 430+ 9BB6 3A EE 88     1 ld a,(CTRL_DESPLZ)
 431+ 9BB9 FE F9        	cp $f9
 432+ 9BBB 20 21        	jr nz,8F
 433+ 9BBD 18 07        	jr 4F
 434+ 9BBF 3A EE 88     7 ld a,(CTRL_DESPLZ)
 435+ 9BC2 FE FB        	cp $fb
 436+ 9BC4 20 18        	jr nz,8F
 437+ 9BC6
 438+ 9BC6              ; ---------- ---------- ----------
 439+ 9BC6
 440+ 9BC6              4
 441+ 9BC6 CD CC 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BC9              ;	call Reinicio
 443+ 9BC9
 444+ 9BC9              ; ---------- ---------- ----------
 445+ 9BC9
 446+ 9BC9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BCB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BCC
 449+ 9BCC              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BCC              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BCC
 452+ 9BCC CD E5 9B     	call DESPLZ_IZQ
 453+ 9BCF C1           	pop bc
 454+ 9BD0 10 F9        	djnz 5B
 455+ 9BD2 2A E8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BD5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BD6 22 E8 88     	ld (Posicion_actual),hl
 458+ 9BD9 CD 35 9D     	call Genera_coordenadas
 459+ 9BDC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BDE
 461+ 9BDE              ; ---------- ---------- ----------
 462+ 9BDE
 463+ 9BDE              ; Movemos, no hay recolocación.
 464+ 9BDE
 465+ 9BDE 2A E8 88     8 ld hl,(Posicion_actual)
 466+ 9BE1 CD E5 9B     	call DESPLZ_IZQ
 467+ 9BE4 C9           2 ret
 468+ 9BE5
 469+ 9BE5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9BE5              ;
 471+ 9BE5              ;	22/9/22
 472+ 9BE5
 473+ 9BE5              DESPLZ_IZQ
 474+ 9BE5
 475+ 9BE5 CD F4 9B     	call Desplaza_izquierda
 476+ 9BE8 CD 40 9C         call modifica_parametros_1er_DESPLZ
 477+ 9BEB CD 68 9C     	call Ciclo_completo_2
 478+ 9BEE 21 14 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9BF1 CB BE        	res 7,(hl)
 480+ 9BF3 C9           	ret
 481+ 9BF4
 482+ 9BF4              Desplaza_izquierda
 483+ 9BF4
 484+ 9BF4 3A FB 88     	ld a,(Vel_left)
 485+ 9BF7 47           	ld b,a
 486+ 9BF8 2A F6 88     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9BFB 23           1 inc hl
 488+ 9BFC 23           	inc hl
 489+ 9BFD 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9BFF 22 F6 88     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C02 CD F3 8C     	call Extrae_address
 492+ 9C05 22 EA 88     	ld (Puntero_objeto),hl
 493+ 9C08
 494+ 9C08              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C08
 496+ 9C08              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C08              ; Cuántos movimientos hemos hecho ??
 498+ 9C08              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C08
 500+ 9C08 2A F2 88     7 ld hl,(Indice_Sprite_izq)
 501+ 9C0B EB           	ex de,hl
 502+ 9C0C A7           	and a
 503+ 9C0D ED 52        	sbc hl,de
 504+ 9C0F CB 3D        	srl l
 505+ 9C11 3E 08        6 ld a,8
 506+ 9C13 95           	sub l
 507+ 9C14 30 1E        	jr nc,3F
 508+ 9C16
 509+ 9C16              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C16              ; B="0".
 511+ 9C16
 512+ 9C16 04           4 inc b
 513+ 9C17 3C           	inc a
 514+ 9C18 20 FC        	jr nz,4B
 515+ 9C1A 78           	ld a,b
 516+ 9C1B 08           	ex af,af
 517+ 9C1C 2A F2 88     	ld hl,(Indice_Sprite_izq)
 518+ 9C1F 23           5 inc hl
 519+ 9C20 23           	inc hl
 520+ 9C21 10 FC        	djnz 5B
 521+ 9C23 22 F6 88     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C26 CD F3 8C     	call Extrae_address
 523+ 9C29 22 EA 88     	ld (Puntero_objeto),hl
 524+ 9C2C
 525+ 9C2C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C2C              ; _(Posicion_actual).
 527+ 9C2C
 528+ 9C2C 21 E8 88     	ld hl,Posicion_actual
 529+ 9C2F 35           	dec (hl)
 530+ 9C30 08           	ex af,af
 531+ 9C31 6F           	ld l,a
 532+ 9C32 18 DD        	jr 6B
 533+ 9C34
 534+ 9C34              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C34
 536+ 9C34 47           3 ld b,a
 537+ 9C35 2A F0 88     	ld hl,(Indice_Sprite_der)
 538+ 9C38 23           2 inc hl
 539+ 9C39 23           	inc hl
 540+ 9C3A 10 FC        	djnz 2B
 541+ 9C3C 22 F4 88     	ld (Puntero_DESPLZ_der),hl
 542+ 9C3F C9           8 ret
 543+ 9C40
 544+ 9C40              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C40              ;
 546+ 9C40              ;	modifica_parametros_1er_DESPLZ
 547+ 9C40              ;
 548+ 9C40              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C40              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C40              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C40
 552+ 9C40 3A EE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C43 A7           	and a
 554+ 9C44 20 1E        	jr nz,1F
 555+ 9C46 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C47 32 EE 88         ld (CTRL_DESPLZ),a
 557+ 9C4A 21 E7 88     	ld hl,Columns
 558+ 9C4D 34           	inc (hl)
 559+ 9C4E 3A FA 88     	ld a,(Cuad_objeto)
 560+ 9C51 E6 01        	and 1
 561+ 9C53 20 0F        	jr nz,1F
 562+ 9C55 2A E8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C58 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C59 22 E8 88     	ld (Posicion_actual),hl
 565+ 9C5C CD 35 9D     	call Genera_coordenadas
 566+ 9C5F CD BB 9C     	call Dec_CTRL_DESPLZ
 567+ 9C62 18 03        	jr 2F
 568+ 9C64 CD BB 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C67 C9           2 ret
 570+ 9C68
 571+ 9C68              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C68
 573+ 9C68 3A EE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C6B FE F7        	cp $f7
 575+ 9C6D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C6F 30 2C        	jr nc,3F
 577+ 9C71
 578+ 9C71              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C71
 580+ 9C71 06 00        	ld b,0
 581+ 9C73 04           4 inc b
 582+ 9C74 3C           	inc a
 583+ 9C75 FE F7        	cp $f7
 584+ 9C77 20 FA        	jr nz,4B
 585+ 9C79 3E FF        	ld a,$ff
 586+ 9C7B 90           	sub b
 587+ 9C7C 32 EE 88     	ld (CTRL_DESPLZ),a
 588+ 9C7F 18 1C        	jr 3F
 589+ 9C81
 590+ 9C81              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C81
 592+ 9C81 21 E7 88     1 ld hl,Columns
 593+ 9C84 35           	dec (hl)
 594+ 9C85 AF           	xor a
 595+ 9C86 32 EE 88     	ld (CTRL_DESPLZ),a
 596+ 9C89 3A FA 88     	ld a,(Cuad_objeto)
 597+ 9C8C E6 01        	and 1
 598+ 9C8E 28 0A        	jr z,2F
 599+ 9C90 2A E8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C93 2B           	dec hl
 601+ 9C94 22 E8 88     	ld (Posicion_actual),hl
 602+ 9C97 CD 35 9D     	call Genera_coordenadas
 603+ 9C9A
 604+ 9C9A              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C9A
 606+ 9C9A CD 1D 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C9D C9           3 ret
 608+ 9C9E
 609+ 9C9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C9E              ;
 611+ 9C9E              ;	19/10/22
 612+ 9C9E              ;
 613+ 9C9E              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C9E              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C9E
 616+ 9C9E 3A EC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CA1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CA3 C9           	ret
 619+ 9CA4
 620+ 9CA4              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CA4              ;
 622+ 9CA4              ;	19/10/22
 623+ 9CA4              ;
 624+ 9CA4              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CA4              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CA4
 627+ 9CA4 3A EC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CA7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CA9 C9           	ret
 630+ 9CAA
 631+ 9CAA              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CAA              ;
 633+ 9CAA              ;	24/7/22
 634+ 9CAA              ;
 635+ 9CAA              ;	Inc_CTRL_DESPLZ
 636+ 9CAA              ;
 637+ 9CAA              ;
 638+ 9CAA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CAA
 640+ 9CAA 21 EE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CAD 3A FC 88     	ld a,(Vel_right)
 642+ 9CB0 A7           	and a
 643+ 9CB1 28 06        	jr z,1F
 644+ 9CB3 47           	ld b,a
 645+ 9CB4 34           3 inc (hl)
 646+ 9CB5 10 FD        	djnz 3B
 647+ 9CB7 18 01        	jr 2F
 648+ 9CB9 34           1 inc (hl)
 649+ 9CBA C9           2 ret
 650+ 9CBB
 651+ 9CBB              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CBB              ;
 653+ 9CBB              ;	5/2/23
 654+ 9CBB              ;
 655+ 9CBB              ;	Dec_CTRL_DESPLZ
 656+ 9CBB              ;
 657+ 9CBB              ;
 658+ 9CBB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CBB
 660+ 9CBB 21 EE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CBE 3A FB 88     	ld a,(Vel_left)
 662+ 9CC1 A7           	and a
 663+ 9CC2 28 06        	jr z,1F
 664+ 9CC4 47           	ld b,a
 665+ 9CC5 35           3 dec (hl)
 666+ 9CC6 10 FD        	djnz 3B
 667+ 9CC8 18 01        	jr 2F
 668+ 9CCA 35           1 dec (hl)
 669+ 9CCB C9           2 ret
 670+ 9CCC
 671+ 9CCC              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CCC
 673+ 9CCC 2A E8 88     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CCF 01 1F 00     	ld bc,31
 675+ 9CD2 A7           	and a
 676+ 9CD3 ED 4A        	adc hl,bc
 677+ 9CD5 22 E8 88     	ld (Posicion_actual),hl
 678+ 9CD8 21 14 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CDB CB C6        	set 0,(hl)
 680+ 9CDD C9           	ret
 681+ 9CDE
 682+ 9CDE              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CDE
 684+ 9CDE 2A E8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CE1 01 1F 00     	ld bc,31
 686+ 9CE4 A7           	and a
 687+ 9CE5 ED 42        	sbc hl,bc
 688+ 9CE7 22 E8 88     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9CEA 21 14 89     	ld hl,Ctrl_0
 690+ 9CED CB CE        	set 1,(hl)
 691+ 9CEF C9           	ret
 692+ 9CF0
 693+ 9CF0              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9CF0
 695+ 9CF0 24           Reaparece_abajo inc h
 696+ 9CF1 01 E0 17     	ld bc,$17e0
 697+ 9CF4 A7           	and a
 698+ 9CF5 ED 4A        	adc hl,bc
 699+ 9CF7 22 E8 88     	ld (Posicion_actual),hl
 700+ 9CFA 21 14 89     	ld hl,Ctrl_0
 701+ 9CFD CB D6        	set 2,(hl)
 702+ 9CFF C9           	ret
 703+ 9D00
 704+ 9D00              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D00
 706+ 9D00 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D03 A7           	and a
 708+ 9D04 ED 42        	sbc hl,bc
 709+ 9D06 22 E8 88     	ld (Posicion_actual),hl
 710+ 9D09 21 14 89     	ld hl,Ctrl_0
 711+ 9D0C CB DE        	set 3,(hl)
 712+ 9D0E C9           	ret
 713+ 9D0F
 714+ 9D0F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D0F              ;
 716+ 9D0F              ;	15/07/23
 717+ 9D0F
 718+ 9D0F              Reinicio
 719+ 9D0F
 720+ 9D0F              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D0F
 722+ 9D0F AF           	xor a
 723+ 9D10 21 1B 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D13 CD 31 9D     	call Limpia_contenido_hl
 725+ 9D16
 726+ 9D16 21 E8 88     	ld hl,Posicion_actual
 727+ 9D19 CD 31 9D     	call Limpia_contenido_hl
 728+ 9D1C
 729+ 9D1C CD 63 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D1F CD ED 9F     	call Inicia_Puntero_mov
 731+ 9D22
 732+ 9D22 21 1D 89     	ld hl,Incrementa_puntero
 733+ 9D25 06 05        	ld b,5
 734+ 9D27 77           1 ld (hl),a
 735+ 9D28 23           	inc hl
 736+ 9D29 10 FC        	djnz 1B
 737+ 9D2B
 738+ 9D2B 21 27 89     	ld hl,Ctrl_2
 739+ 9D2E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D30
 741+ 9D30 C9           	ret
 742+ 9D31
 743+ 9D31 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D32 23           	inc hl
 745+ 9D33 77           	ld (hl),a
 746+ 9D34 C9           	ret
 747+ 9D35
 748+ 9D35
# file closed: Direcciones.asm
1566  9D35              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D35              ; ------------------------------------------------------------------------
   2+ 9D35              ;
   3+ 9D35              ;	02/04/23
   4+ 9D35              ;
   5+ 9D35              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D35              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D35              ;
   8+ 9D35              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D35              ;
  10+ 9D35              ;	Modifica: A,BC y DE.
  11+ 9D35
  12+ 9D35 C5           Genera_coordenadas push bc
  13+ 9D36 E5           	push hl
  14+ 9D37 D5           	push de
  15+ 9D38
  16+ 9D38 2A E8 88     	ld hl,(Posicion_actual)
  17+ 9D3B
  18+ 9D3B 7D           	ld a,l
  19+ 9D3C E6 1F        	and $1f
  20+ 9D3E 32 EC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D41
  22+ 9D41 CD AA 99     	call calcula_tercio
  23+ 9D44 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D45
  25+ 9D45 1E 00        	ld e,0
  26+ 9D47 7D           	ld a,l
  27+ 9D48 E6 E0        	and $e0
  28+ 9D4A 28 01        	jr z,1F
  29+ 9D4C 04           	inc b
  30+ 9D4D
  31+ 9D4D 04           1 inc b
  32+ 9D4E 05           	dec b
  33+ 9D4F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D51              ;														; _ , salimos.
  35+ 9D51 1C           3 inc e
  36+ 9D52 D6 20        	sub 32
  37+ 9D54 20 FB        	jr nz,3B
  38+ 9D56 10 F5        	djnz 1B
  39+ 9D58
  40+ 9D58 7B           2 ld a,e
  41+ 9D59 32 ED 88     	ld (Coordenada_y),a
  42+ 9D5C
  43+ 9D5C D1           	pop de
  44+ 9D5D E1           	pop hl
  45+ 9D5E C1           	pop bc
  46+ 9D5F
  47+ 9D5F C9           	ret
  48+ 9D60
  49+ 9D60              ; ------------------------------------------------------------------------
  50+ 9D60              ;	28/05/23
  51+ 9D60              ;
  52+ 9D60              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D60              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D60              ;
  55+ 9D60              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D60              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D60              ;
  58+ 9D60              ;		DE="$120d"
  59+ 9D60              ;
  60+ 9D60              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D60              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D60              ;
  63+ 9D60              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D60
  65+ 9D60              ;	Modifica: A,BC y DE.
  66+ 9D60
  67+ 9D60
  68+ 9D60              Genera_coordenadas_disparo
  69+ 9D60
  70+ 9D60              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D60
  72+ 9D60 7D           	ld a,l
  73+ 9D61 E6 1F        	and $1f
  74+ 9D63 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D64 CD AA 99     	call calcula_tercio
  76+ 9D67 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D68 1E 00        	ld e,0
  78+ 9D6A 7D           	ld a,l
  79+ 9D6B E6 E0        	and $e0
  80+ 9D6D 28 01        	jr z,1F
  81+ 9D6F 04           	inc b
  82+ 9D70 1C           1 inc e
  83+ 9D71 D6 20        	sub 32
  84+ 9D73 20 FB        	jr nz,1B
  85+ 9D75 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D77 C9           	ret
  87+ 9D78
# file closed: Genera_coordenadas.asm
1567  9D78              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D78              ; Relojes y temporizaciones.
   2+ 9D78
   3+ 9D78              ; ------------------------------------------------------
   4+ 9D78              ;
   5+ 9D78              ;	16/7/23
   6+ 9D78              ;
   7+ 9D78              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D78              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D78              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D78              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D78              ;
  12+ 9D78              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D78              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D78
  15+ 9D78              ; Disparo_entidad db 1
  16+ 9D78              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D78              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D78
  19+ 9D78              Habilita_disparos
  20+ 9D78
  21+ 9D78 7E           	ld a,(hl)
  22+ 9D79 A7           	and a
  23+ 9D7A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D7B
  25+ 9D7B EB           	ex de,hl
  26+ 9D7C
  27+ 9D7C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D7D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D7E
  30+ 9D7E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D7E
  32+ 9D7E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D7F 7E           	ld a,(hl)
  34+ 9D80 23           	inc hl
  35+ 9D81 77           	ld (hl),a
  36+ 9D82
  37+ 9D82 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D83 3E 01        	ld a,1
  39+ 9D85 77           	ld (hl),a
  40+ 9D86 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1568  9D87              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D87
   2+ 9D87
   3+ 9D87              ;   07/07/23
   4+ 9D87              ;
   5+ 9D87              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D87              ;
   7+ 9D87              ;   Codificación:
   8+ 9D87              ;
   9+ 9D87              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D87              ;
  11+ 9D87              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D87              ;
  13+ 9D87              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D87              ;
  15+ 9D87              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D87              ;
  17+ 9D87              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D87              ;                               ..... %01000010 Vel_up 4
  19+ 9D87              ;                                               Vel_down 2
  20+ 9D87              ;                               ..... $42
  21+ 9D87              ;
  22+ 9D87              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D87              ;
  24+ 9D87              ;                               ..... %01000010 Vel_left 4
  25+ 9D87              ;                                               Vel_right 2
  26+ 9D87              ;                               ..... $42
  27+ 9D87              ;
  28+ 9D87              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D87              ;
  30+ 9D87              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D87              ;
  32+ 9D87              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D87              ;
  34+ 9D87              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D87              ;                                     $53
  36+ 9D87              ;
  37+ 9D87              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D87              ;
  39+ 9D87              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D87              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D87              ;
  42+ 9D87              ;                       Arriba ..... $81
  43+ 9D87              ;                       Arriba - izquierda ..... $a1
  44+ 9D87              ;                       Arriba - derecha ..... $91
  45+ 9D87              ;
  46+ 9D87              ;                       Abajo ..... $41
  47+ 9D87              ;                       Abajo - izquierda ..... $61
  48+ 9D87              ;                       Abajo - derecha ..... $51
  49+ 9D87              ;
  50+ 9D87              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D87              ;
  52+ 9D87              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D87              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D87              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D87              ;
  56+ 9D87              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D87              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D87              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D87              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D87              ;
  61+ 9D87              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D87              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D87              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D87              ;
  65+ 9D87              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D87              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D87              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D87              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D87
  70+ 9D87              ; ----- ----- ----- ----- -----
  71+ 9D87
  72+ 9D87 B3 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D89 BB 9D            defw F_1
  74+ 9D8B C5 9D            defw F_2
  75+ 9D8D CF 9D            defw Codo_abajo_derecha
  76+ 9D8F 03 9E            defw Derecha_y_subiendo
  77+ 9D91 0D 9E            defw Derecha_y_subiendo_1
  78+ 9D93 17 9E            defw F_3
  79+ 9D95 21 9E            defw F_4
  80+ 9D97 2B 9E            defw Derecha_y_bajando
  81+ 9D99 35 9E            defw Derecha_y_bajando_1
  82+ 9D9B 3F 9E            defw Derecha_y_bajando_2
  83+ 9D9D 49 9E            defw Codo_derecha_abajo
  84+ 9D9F 79 9E            defw Codo_abajo_izq.
  85+ 9DA1 AD 9E            defw Izquierda_y_subiendo
  86+ 9DA3 B7 9E            defw Izquierda_y_subiendo_1
  87+ 9DA5 C1 9E            defw F_5
  88+ 9DA7 CB 9E            defw F_6
  89+ 9DA9 D5 9E            defw Izquierda_y_bajando
  90+ 9DAB DF 9E            defw Izquierda_y_bajando_1
  91+ 9DAD E9 9E            defw Izquierda_y_bajando_2
  92+ 9DAF F3 9E            defw Codo_izquierda_abajo
  93+ 9DB1 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DB3
  95+ 9DB3 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DB7 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DBB
  98+ 9DBB 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DBF 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DC3 08 00
 100+ 9DC5 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DC9 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DCD 0F FE
 102+ 9DCF
 103+ 9DCF 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DD3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DD7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DDB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DDF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DE3 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DE7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DEB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DEF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DF3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DF7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9DFB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9DFF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E03
 117+ 9E03 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E07 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E0B 06 00
 119+ 9E0D
 120+ 9E0D 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E11 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E15 02 00
 122+ 9E17
 123+ 9E17 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E1B 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E1F 04 00
 125+ 9E21 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E25 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E29 08 00
 127+ 9E2B
 128+ 9E2B 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E2F 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E33 02 00
 130+ 9E35
 131+ 9E35 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E39 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E3D 06 00
 133+ 9E3F
 134+ 9E3F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E43 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E47 06 00
 136+ 9E49
 137+ 9E49              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E49
 139+ 9E49 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E4D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E51 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E55 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E59 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E5D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E61 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E65 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E69 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E6D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E71 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E75 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E79
 152+ 9E79 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E7D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E81 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E85 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E89 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E8D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E91 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E95 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E99 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E9D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EA1 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EA5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EA9 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EAD
 166+ 9EAD 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EB1 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EB5 06 00
 168+ 9EB7
 169+ 9EB7 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EBB 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EBF 02 00
 171+ 9EC1
 172+ 9EC1 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EC5 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EC9 04 00
 174+ 9ECB 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ECF 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9ED3 08 00
 176+ 9ED5
 177+ 9ED5 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9ED9 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EDD 02 00
 179+ 9EDF
 180+ 9EDF 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EE3 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EE7 06 00
 182+ 9EE9
 183+ 9EE9 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EED 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EF1 06 00
 185+ 9EF3
 186+ 9EF3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EF7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9EFB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9EFF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F03 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F07 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F0B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F0F 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F13 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F17 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F1B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F1F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F23
 199+ 9F23              ; ----- ----- ----- ----- -----
 200+ 9F23              ;
 201+ 9F23              ;   27/06/23
 202+ 9F23
 203+ 9F23              Movimiento
 204+ 9F23
 205+ 9F23              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F23
 207+ 9F23              ;    ld hl,(Posicion_actual)
 208+ 9F23
 209+ 9F23 FB               ei
 210+ 9F24
 211+ 9F24 3A 27 89         ld a,(Ctrl_2)
 212+ 9F27 CB 57            bit 2,a
 213+ 9F29 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F2B
 215+ 9F2B 2A 19 89         ld hl,(Puntero_mov)
 216+ 9F2E 7E               ld a,(hl)
 217+ 9F2F
 218+ 9F2F              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F2F
 220+ 9F2F              Inicia_desplazamiento.
 221+ 9F2F
 222+ 9F2F              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F2F
 224+ 9F2F CD 24 A0         call Ajusta_velocidad_desplazamiento
 225+ 9F32
 226+ 9F32              ; Iniciamos (Repetimos_mov).
 227+ 9F32
 228+ 9F32 7E               ld a,(hl)
 229+ 9F33 E6 0F            and $0f
 230+ 9F35 32 1F 89         ld (Repetimos_desplazamiento),a
 231+ 9F38 32 20 89         ld (Repetimos_desplazamiento_backup),a
 232+ 9F3B
 233+ 9F3B              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F3B
 235+ 9F3B 23               inc hl
 236+ 9F3C 7E               ld a,(hl)
 237+ 9F3D 32 22 89         ld (Cola_de_desplazamiento),a
 238+ 9F40 2B               dec hl
 239+ 9F41
 240+ 9F41 21 27 89         ld hl,Ctrl_2
 241+ 9F44 CB D6            set 2,(hl)
 242+ 9F46
 243+ 9F46              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F46              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F46
 246+ 9F46              Desplazamiento_iniciado
 247+ 9F46
 248+ 9F46 CD F8 9F         call Aplica_desplazamiento
 249+ 9F49
 250+ 9F49 3A 27 89         ld a,(Ctrl_2)
 251+ 9F4C CB 67            bit 4,a
 252+ 9F4E C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F4F
 254+ 9F4F 21 1F 89     3 ld hl,Repetimos_desplazamiento
 255+ 9F52 35               dec (hl)
 256+ 9F53 C0               ret nz
 257+ 9F54
 258+ 9F54              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F54              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F54              ; Analiza (Cola_de_desplazamiento).
 261+ 9F54
 262+ 9F54 3A 22 89     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F57 A7               and a
 264+ 9F58 CC 4D A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F5B 28 30            jr z,Reinicia_el_movimiento
 266+ 9F5D
 267+ 9F5D FE FF            cp $ff
 268+ 9F5F 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F61
 270+ 9F61 FE FE            cp $fe
 271+ 9F63 CC D1 9F         call z,Fijamos_bucle
 272+ 9F66 28 25            jr z,Reinicia_el_movimiento
 273+ 9F68
 274+ 9F68 FE FD            cp $fd
 275+ 9F6A 20 11            jr nz,1F
 276+ 9F6C
 277+ 9F6C              ; ---
 278+ 9F6C              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F6C
 280+ 9F6C 3A 27 89         ld a,(Ctrl_2)
 281+ 9F6F CB 5F            bit 3,a
 282+ 9F71 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F73
 284+ 9F73              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F73
 286+ 9F73 21 27 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F76 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F78
 289+ 9F78 CD E2 9F         call Inicia_Repetimos_movimiento
 290+ 9F7B 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F7D              ; ---
 292+ 9F7D
 293+ 9F7D FE 01        1 cp 1
 294+ 9F7F CA BB 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9F82
 296+ 9F82 3D               dec a
 297+ 9F83 32 22 89         ld (Cola_de_desplazamiento),a
 298+ 9F86
 299+ 9F86 3A 20 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9F89 32 1F 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9F8C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9F8C C9               ret
 303+ 9F8D
 304+ 9F8D              Reinicia_el_movimiento
 305+ 9F8D
 306+ 9F8D F3               di
 307+ 9F8E
 308+ 9F8E 3A 27 89         ld a,(Ctrl_2)
 309+ 9F91 CB 5F            bit 3,a
 310+ 9F93 28 1B            jr z,2F
 311+ 9F95
 312+ 9F95              ; (Cola_de_desplazamiento)="254".
 313+ 9F95
 314+ 9F95 21 21 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9F98 35               dec (hl)
 316+ 9F99 20 15            jr nz,2F
 317+ 9F9B
 318+ 9F9B              ; Fin de las repeticiones del último movimiento.
 319+ 9F9B
 320+ 9F9B 21 27 89         ld hl,Ctrl_2
 321+ 9F9E CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FA0
 323+ 9FA0 2A 19 89         ld hl,(Puntero_mov)
 324+ 9FA3 23               inc hl
 325+ 9FA4 23               inc hl
 326+ 9FA5 23               inc hl
 327+ 9FA6 22 19 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FA9              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FA9 7E               ld a,(hl)
 330+ 9FAA 32 22 89         ld (Cola_de_desplazamiento),a
 331+ 9FAD
 332+ 9FAD C3 54 9F         jp Cola
 333+ 9FB0
 334+ 9FB0 CD ED 9F     2 call Inicia_Puntero_mov
 335+ 9FB3
 336+ 9FB3 21 27 89         ld hl,Ctrl_2
 337+ 9FB6 CB 96            res 2,(hl)
 338+ 9FB8
 339+ 9FB8 C3 23 9F         jp Movimiento
 340+ 9FBB
 341+ 9FBB              Siguiente_desplazamiento
 342+ 9FBB
 343+ 9FBB              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FBB              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FBB
 346+ 9FBB 21 27 89         ld hl,Ctrl_2
 347+ 9FBE CB 96            res 2,(hl)
 348+ 9FC0
 349+ 9FC0 2A 19 89         ld hl,(Puntero_mov)
 350+ 9FC3 23               inc hl
 351+ 9FC4 23               inc hl
 352+ 9FC5 22 19 89         ld (Puntero_mov),hl
 353+ 9FC8
 354+ 9FC8 7E               ld a,(hl)
 355+ 9FC9 A7               and a
 356+ 9FCA CC 4D A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FCD CA 8D 9F         jp z,Reinicia_el_movimiento
 358+ 9FD0
 359+ 9FD0 C9               ret
 360+ 9FD1              ; Subrutinas -----------------------------------------
 361+ 9FD1              ; ---------- --------- --------- ---------- ----------
 362+ 9FD1              ;
 363+ 9FD1              ;   24/07/23
 364+ 9FD1              ;
 365+ 9FD1              ;   Fijamos_bucle
 366+ 9FD1              ;
 367+ 9FD1              ;
 368+ 9FD1
 369+ 9FD1              Fijamos_bucle
 370+ 9FD1
 371+ 9FD1 3A 1D 89         ld a,(Incrementa_puntero)
 372+ 9FD4 3C               inc a
 373+ 9FD5 32 1E 89         ld (Incrementa_puntero_backup),a
 374+ 9FD8
 375+ 9FD8 CD 4D A0         call Incrementa_Puntero_indice_mov
 376+ 9FDB 2A 17 89         ld hl,(Puntero_indice_mov)
 377+ 9FDE 22 1B 89         ld (Puntero_indice_mov_bucle),hl
 378+ 9FE1 C9               ret
 379+ 9FE2
 380+ 9FE2              ; ---------- --------- --------- ---------- ----------
 381+ 9FE2              ;
 382+ 9FE2              ;   07/7/23
 383+ 9FE2              ;
 384+ 9FE2              ;   Inicia_Repetimos_movimiento
 385+ 9FE2              ;
 386+ 9FE2              ;
 387+ 9FE2
 388+ 9FE2              Inicia_Repetimos_movimiento
 389+ 9FE2
 390+ 9FE2              ; Iniciamos (Repetimos_movimiento).
 391+ 9FE2
 392+ 9FE2 DD 2A 19 89      ld ix,(Puntero_mov)
 393+ 9FE6 DD 7E 02         ld a,(ix+2)
 394+ 9FE9 32 21 89         ld (Repetimos_movimiento),a
 395+ 9FEC
 396+ 9FEC C9               ret
 397+ 9FED
 398+ 9FED              ; ---------- --------- --------- ---------- ----------
 399+ 9FED              ;
 400+ 9FED              ;   26/6/23
 401+ 9FED              ;
 402+ 9FED              ;   Inicia_Puntero_mov
 403+ 9FED              ;
 404+ 9FED              ;
 405+ 9FED
 406+ 9FED 2A 17 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ 9FF0 5E               ld e,(hl)
 408+ 9FF1 23               inc hl
 409+ 9FF2 56               ld d,(hl)
 410+ 9FF3 EB               ex de,hl
 411+ 9FF4 22 19 89         ld (Puntero_mov),hl
 412+ 9FF7 C9               ret
 413+ 9FF8
 414+ 9FF8              ; ---------- --------- --------- ---------- ----------
 415+ 9FF8              ;
 416+ 9FF8              ;   27/06/23
 417+ 9FF8              ;
 418+ 9FF8              ;   Aplica_movimiento.
 419+ 9FF8
 420+ 9FF8              Aplica_desplazamiento
 421+ 9FF8
 422+ 9FF8              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ 9FF8
 424+ 9FF8 2A 19 89         ld hl, (Puntero_mov)
 425+ 9FFB
 426+ 9FFB 7E               ld a,(hl)
 427+ 9FFC E6 F0            and $f0
 428+ 9FFE C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ 9FFF
 430+ 9FFF CB 7E            bit 7,(hl)
 431+ A001 28 03            jr z,1F
 432+ A003 CD 21 9A         call Mov_up
 433+ A006 2A 19 89     1 ld hl, (Puntero_mov)
 434+ A009 CB 76            bit 6,(hl)
 435+ A00B 28 03            jr z,2F
 436+ A00D CD F0 99         call Mov_down
 437+ A010 2A 19 89     2 ld hl, (Puntero_mov)
 438+ A013 CB 6E            bit 5,(hl)
 439+ A015 28 03            jr z,3F
 440+ A017 CD 82 9B         call Mov_left
 441+ A01A 2A 19 89     3 ld hl, (Puntero_mov)
 442+ A01D CB 66            bit 4,(hl)
 443+ A01F C8               ret z
 444+ A020 CD 64 9A         call Mov_right
 445+ A023 C9               ret
 446+ A024
 447+ A024              ; ---------- --------- --------- ---------- ----------
 448+ A024              ;
 449+ A024              ;   26/06/23
 450+ A024              ;
 451+ A024              ;   Ajusta_velocidad_desplazamiento.
 452+ A024
 453+ A024              Ajusta_velocidad_desplazamiento
 454+ A024
 455+ A024              ; 1er byte de la cadena de movimiento.
 456+ A024              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A024
 458+ A024 CD 42 A0         call Extrae_nibble_alto
 459+ A027
 460+ A027 32 FD 88         ld (Vel_up),a
 461+ A02A 79               ld a,c
 462+ A02B E6 0F            and $0f
 463+ A02D 32 FE 88         ld (Vel_down),a
 464+ A030
 465+ A030              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A030              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A030
 468+ A030 23               inc hl
 469+ A031 CD 42 A0         call Extrae_nibble_alto
 470+ A034
 471+ A034 32 FB 88         ld (Vel_left),a
 472+ A037 79               ld a,c
 473+ A038 E6 0F            and $0f
 474+ A03A 32 FC 88         ld (Vel_right),a
 475+ A03D
 476+ A03D              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A03D
 478+ A03D 23               inc hl
 479+ A03E 22 19 89         ld (Puntero_mov),hl
 480+ A041 C9               ret
 481+ A042
 482+ A042 06 04        Extrae_nibble_alto ld b,4
 483+ A044 7E               ld a,(hl)
 484+ A045 4F               ld c,a
 485+ A046 E6 F0            and $f0
 486+ A048 CB 3F        1 srl a
 487+ A04A 10 FC            djnz 1B
 488+ A04C C9               ret
 489+ A04D
 490+ A04D              ; ---------- --------- --------- ---------- ----------
 491+ A04D              ;
 492+ A04D              ;   5/7/23
 493+ A04D              ;
 494+ A04D              ;   Incrementa_Puntero_indice_mov
 495+ A04D
 496+ A04D              Incrementa_Puntero_indice_mov
 497+ A04D
 498+ A04D 21 1D 89         ld hl,Incrementa_puntero
 499+ A050 34               inc (hl)
 500+ A051
 501+ A051 2A 17 89         ld hl,(Puntero_indice_mov)
 502+ A054 01 02 00         ld bc,2
 503+ A057 A7               and a
 504+ A058 09               add hl,bc
 505+ A059 22 17 89         ld (Puntero_indice_mov),hl
 506+ A05C
 507+ A05C 7E               ld a,(hl)
 508+ A05D A7               and a
 509+ A05E
 510+ A05E              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A05E
 512+ A05E              ;    jr z,$
 513+ A05E
 514+ A05E              ;! Reinicia el Patrón de movimiento.
 515+ A05E
 516+ A05E CC 63 A0         call z,Inicializa_Puntero_indice_mov
 517+ A061
 518+ A061 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A062
 520+ A062 C9               ret
 521+ A063
 522+ A063
 523+ A063              ; ---------- --------- --------- ---------- ----------
 524+ A063              ;
 525+ A063              ;   24/07/23
 526+ A063              ;
 527+ A063              ;   Inicializa_Puntero_indice_mov
 528+ A063
 529+ A063              Inicializa_Puntero_indice_mov
 530+ A063
 531+ A063              ; Existe etiqueta de bucle principal???
 532+ A063
 533+ A063 2A 1B 89         ld hl,(Puntero_indice_mov_bucle)
 534+ A066 24               inc h
 535+ A067 25               dec h
 536+ A068 28 05            jr z,2F
 537+ A06A
 538+ A06A 22 17 89         ld (Puntero_indice_mov),hl
 539+ A06D 18 14            jr 3F
 540+ A06F
 541+ A06F              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A06F
 543+ A06F 3A 1D 89     2 ld a,(Incrementa_puntero)
 544+ A072 47               ld b,a
 545+ A073
 546+ A073 2A 17 89         ld hl,(Puntero_indice_mov)
 547+ A076 2B           1 dec hl
 548+ A077 2B               dec hl
 549+ A078 10 FC            djnz 1B
 550+ A07A 22 17 89         ld (Puntero_indice_mov),hl
 551+ A07D
 552+ A07D AF               xor a
 553+ A07E 32 1D 89         ld (Incrementa_puntero),a
 554+ A081 18 06            jr 4F
 555+ A083
 556+ A083 3A 1E 89     3 ld a,(Incrementa_puntero_backup)
 557+ A086 32 1D 89         ld (Incrementa_puntero),a
 558+ A089 C9           4 ret
 559+ A08A
 560+ A08A
 561+ A08A
# file closed: Patrones_de_mov.asm
1569  A08A              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A08A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A08A              ;
   3+ A08A              ;	4/9/23
   4+ A08A              ;
   5+ A08A              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A08A
   7+ A08A              ;	ADC HL,SP	LD (addr),SP
   8+ A08A              ;	ADD HL,SP	LD SP,(addr)
   9+ A08A              ;	ADD IX,SP	LD SP,nn
  10+ A08A              ; 	ADD IY,SP	LD SP,HL
  11+ A08A              ;				LD SP,IX
  12+ A08A              ;	DEC SP		LD SP,IY
  13+ A08A
  14+ A08A              ;	EX (SP),HL
  15+ A08A              ;	EX (SP),IX
  16+ A08A              ;	EX (SP),IY
  17+ A08A
  18+ A08A              ;	INC SP
  19+ A08A
  20+ A08A                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 3A 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A 29 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 42 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 0F            jr 4F
  46+ 7FB9
  47+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  48+ 7FB9
  49+ 7FB9 3A 14 89     2 ld a,(Ctrl_0)
  50+ 7FBC CB 77            bit 6,a
  51+ 7FBE 28 05            jr z,7F
  52+ 7FC0
  53+ 7FC0              ; Guardamos foto de Amadeus.
  54+ 7FC0
  55+ 7FC0 21 A0 72         ld hl,Album_de_fotos_Amadeus
  56+ 7FC3 18 03            jr 4F
  57+ 7FC5
  58+ 7FC5 2A 40 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  59+ 7FC8
  60+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  61+ 7FCA
  62+ 7FCA D1           1 pop de
  63+ 7FCB 73               ld (hl),e
  64+ 7FCC 23               inc hl
  65+ 7FCD 72               ld (hl),d
  66+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  67+ 7FCF 10 F9            djnz 1B
  68+ 7FD1
  69+ 7FD1 3A 29 89         ld a,(Ctrl_1)
  70+ 7FD4 CB 47            bit 0,a
  71+ 7FD6 28 05            jr z,5F
  72+ 7FD8
  73+ 7FD8 22 42 89         ld (Stack_snapshot_disparos),hl
  74+ 7FDB 18 12            jr 6F
  75+ 7FDD
  76+ 7FDD 3A 14 89     5 ld a,(Ctrl_0)
  77+ 7FE0 CB 77            bit 6,a
  78+ 7FE2 28 08            jr z,8F
  79+ 7FE4
  80+ 7FE4 22 48 89         ld (End_Snapshot_Amadeus),hl
  81+ 7FE7 ED 7B 3A 89      ld sp,(Stack)
  82+ 7FEB C9               ret
  83+ 7FEC
  84+ 7FEC 22 40 89     8 ld (Stack_snapshot),hl
  85+ 7FEF ED 7B 3A 89  6 ld sp,(Stack)
  86+ 7FF3
  87+ 7FF3              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  88+ 7FF3
  89+ 7FF3 5D               ld e,l
  90+ 7FF4 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  91+ 7FF5
  92+ 7FF5 2A 5E 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  93+ 7FF8 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  94+ 7FF9 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  95+ 7FFA 72               ld (hl),d                                     ; _ álbum a otro.
  96+ 7FFB
  97+ 7FFB FB               ei
  98+ 7FFC
  99+ 7FFC C9               ret
 100+ 7FFD
 101+ 7FFD              ; ------------------------------------------------
 102+ 7FFD              ;
 103+ 7FFD              ;   3/08/23
 104+ 7FFD              ;
 105+ 7FFD              ;   La rutina estará situada justo después de:
 106+ 7FFD              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 107+ 7FFD              ;
 108+ 7FFD              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 109+ 7FFD              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 110+ 7FFD
 111+ 7FFD                  org $72ad
 112+ 72AD
 113+ 72AD              Gestiona_albumes_de_fotos
 114+ 72AD
 115+ 72AD              ;   En 1er lugar limpiamos el FRAME pintado.
 116+ 72AD              ;   Vaciamos Album_de_fotos.
 117+ 72AD
 118+ 72AD              ;   Album_de_fotos. Contiene datos ???
 119+ 72AD
 120+ 72AD 21 01 70         ld hl,Album_de_fotos+1
 121+ 72B0 7E               ld a,(hl)
 122+ 72B1 A7               and a
 123+ 72B2 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 124+ 72B4
 125+ 72B4 2A 44 89         ld hl,(End_Snapshot)
 126+ 72B7 01 00 70         ld bc,Album_de_fotos
 127+ 72BA 11 01 70         ld de,Album_de_fotos+1
 128+ 72BD AF               xor a
 129+ 72BE 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 130+ 72BF
 131+ 72BF CD 4F 73         call Limpia_album
 132+ 72C2
 133+ 72C2 21 00 00         ld hl,0
 134+ 72C5 22 44 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 135+ 72C8
 136+ 72C8              ; ----- ----- ----- -----
 137+ 72C8
 138+ 72C8              ;   Album_de_fotos_1. Contiene datos ???
 139+ 72C8
 140+ 72C8 21 55 70     3 ld hl,Album_de_fotos_1+1
 141+ 72CB 7E               ld a,(hl)
 142+ 72CC A7               and a
 143+ 72CD 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 144+ 72CF              ;                               ; _ información del album2 al album1.
 145+ 72CF
 146+ 72CF              ; ----- ----- ----- -----
 147+ 72CF              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 148+ 72CF
 149+ 72CF 2A 4A 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 150+ 72D2 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 151+ 72D5 11 00 70         ld de,Album_de_fotos        ; Destino.
 152+ 72D8
 153+ 72D8 CD 4F 73         call Limpia_album
 154+ 72DB
 155+ 72DB              ;   Calculamos (End_Snapshot)
 156+ 72DB
 157+ 72DB A7               and a
 158+ 72DC ED 4A            adc hl,bc
 159+ 72DE 22 44 89         ld (End_Snapshot),hl
 160+ 72E1
 161+ 72E1              ;   Limpiamos Album_de_fotos_1.
 162+ 72E1
 163+ 72E1 2A 4A 89         ld hl,(End_Snapshot_1)
 164+ 72E4 01 54 70         ld bc,Album_de_fotos_1
 165+ 72E7 11 55 70         ld de,Album_de_fotos_1+1
 166+ 72EA AF               xor a
 167+ 72EB 02               ld (bc),a
 168+ 72EC
 169+ 72EC CD 4F 73         call Limpia_album
 170+ 72EF
 171+ 72EF 21 00 00         ld hl,0
 172+ 72F2 22 4A 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 173+ 72F5
 174+ 72F5              ; ----- ----- ----- -----
 175+ 72F5
 176+ 72F5              ;   Album_de_fotos_2. Contiene datos ???
 177+ 72F5
 178+ 72F5 21 A9 70     1 ld hl,Album_de_fotos_2+1
 179+ 72F8 7E               ld a,(hl)
 180+ 72F9 A7               and a
 181+ 72FA 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 182+ 72FC              ;                               ; _ información del album3 al album2.
 183+ 72FC              ; ----- ----- ----- -----
 184+ 72FC              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 185+ 72FC
 186+ 72FC 2A 4E 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 187+ 72FF 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 188+ 7302 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 189+ 7305
 190+ 7305 CD 4F 73         call Limpia_album
 191+ 7308
 192+ 7308              ;   Calculamos (End_Snapshot_1):
 193+ 7308
 194+ 7308 A7               and a
 195+ 7309 ED 4A            adc hl,bc
 196+ 730B 22 4A 89         ld (End_Snapshot_1),hl
 197+ 730E
 198+ 730E              ;   Limpiamos Album_de_fotos_2.
 199+ 730E
 200+ 730E 2A 4E 89         ld hl,(End_Snapshot_2)
 201+ 7311 01 A8 70         ld bc,Album_de_fotos_2
 202+ 7314 11 A9 70         ld de,Album_de_fotos_2+1
 203+ 7317 AF               xor a
 204+ 7318 02               ld (bc),a
 205+ 7319
 206+ 7319 CD 4F 73         call Limpia_album
 207+ 731C
 208+ 731C 21 00 00         ld hl,0
 209+ 731F 22 4E 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 210+ 7322
 211+ 7322              ; ----- ----- ----- -----
 212+ 7322
 213+ 7322              ;   Album_de_fotos_3. Contiene datos ???
 214+ 7322
 215+ 7322 21 FD 70     2 ld hl,Album_de_fotos_3+1
 216+ 7325 7E               ld a,(hl)
 217+ 7326 A7               and a
 218+ 7327 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 219+ 7328
 220+ 7328              ; ----- ----- ----- -----
 221+ 7328              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 222+ 7328
 223+ 7328 2A 52 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 224+ 732B 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 225+ 732E 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 226+ 7331
 227+ 7331 CD 4F 73         call Limpia_album
 228+ 7334
 229+ 7334              ;   Calculamos (End_Snapshot_2):
 230+ 7334
 231+ 7334 A7               and a
 232+ 7335 ED 4A            adc hl,bc
 233+ 7337 22 4E 89         ld (End_Snapshot_2),hl
 234+ 733A
 235+ 733A              ;   Limpiamos Album_de_fotos_3.
 236+ 733A
 237+ 733A 2A 52 89         ld hl,(End_Snapshot_3)
 238+ 733D 01 FC 70         ld bc,Album_de_fotos_3
 239+ 7340 11 FD 70         ld de,Album_de_fotos_3+1
 240+ 7343 AF               xor a
 241+ 7344 02               ld (bc),a
 242+ 7345
 243+ 7345 CD 4F 73         call Limpia_album
 244+ 7348
 245+ 7348 21 00 00         ld hl,0
 246+ 734B 22 52 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 247+ 734E C9               ret
 248+ 734F
 249+ 734F              ; ----------------------------------------------------
 250+ 734F              ;
 251+ 734F              ;   10/8/23
 252+ 734F              ;
 253+ 734F              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 254+ 734F              ;
 255+ 734F              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 256+ 734F              ;           BC ..... Dirección de inicio del álbum.
 257+ 734F              ;           DE ..... Dirección de inicio del álbum. +1
 258+ 734F
 259+ 734F              ;    ld hl,(End_Snapshot)
 260+ 734F              ;    ld bc,Album_de_fotos
 261+ 734F              ;    ld de,Album_de_fotos+1
 262+ 734F
 263+ 734F              ;   MODIFICA: A,HL,BC y DE.
 264+ 734F
 265+ 734F              Limpia_album
 266+ 734F D5               push de            ; Guardo DESTINO.
 267+ 7350 C5               push bc            ; Guardo ORIGEN.
 268+ 7351 ED 42            sbc hl,bc
 269+ 7353 4D               ld c,l
 270+ 7354 44               ld b,h
 271+ 7355 E1               pop hl
 272+ 7356 C5               push bc
 273+ 7357 ED B0            ldir
 274+ 7359 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 275+ 735A E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 276+ 735B C9               ret                         ; _ a otro).
 277+ 735C              ;
 278+ 735C
 279+ 735C              ; -----------------------------------------------
 280+ 735C
 281+ 735C
 282+ 735C
 283+ 735C
 284+ 735C
# file closed: Guarda_foto_registros.asm
1570  735C
1571  735C              	SAVESNA "Pruebas.sna", START
1572  735C
1573  735C
1574  735C
1575  735C
# file closed: Banco_de_pruebas.asm
