# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF FC 82        	defw $82fc															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_Amadeus_scanlines_album equ $827c	;	($827c - $8286) 		; Inicialmente 10 bytes, $0a.
  39  FE01              Disparos_Amadeus_scanlines_album_2 equ $8288	;	($8288 - $8292)
  40  FE01              Disparos_Entidades_scanlines_album equ $8294	;	($8294 - $82c6)		; Inicialmente 50 bytes, $32.
  41  FE01              Disparos_Entidades_scanlines_album_2 equ $82c8	;	($82c8 - $82fa)
  42  FE01
  43  FE01
  44  FE01
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $82fc
  61  82FC
  62  82FC F5           	push af
  63  82FD E5           	push hl
  64  82FE
  65  82FE              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  82FE 21 6D 8C     	ld hl,Ctrl_3
  67  8301 CB 46        	bit 0,(hl)
  68  8303 28 FE        	jr z,$
  69  8305              ;! -------------------
  70  8305
  71  8305              ; Shield -----------------------
  72  8305
  73  8305              Temporizacion_shield
  74  8305
  75  8305 21 92 8C     	ld hl,Shield
  76  8308 7E           	ld a,(hl)
  77  8309 A7           	and a
  78  830A 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  830C
  80  830C 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  830D
  82  830D 23           	inc hl
  83  830E 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  830F
  85  830F 20 17        	jr nz,Incrementa_FRAMES
  86  8311
  87  8311              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  8311
  89  8311              Cambio_de_estado
  90  8311
  91  8311              ;	Indica cambio de estado.
  92  8311
  93  8311 23           	inc hl						;	Sitúa en (Shield_3).
  94  8312
  95  8312 CB 5E        	bit 3,(hl)
  96  8314 28 05        	jr z,2F
  97  8316
  98  8316 CD C8 90     	call Inicia_Shield
  99  8319
 100  8319 18 0D        	jr Incrementa_FRAMES
 101  831B
 102  831B CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  831D
 104  831D              ;	Carga en (Shield_2) la siguiente temporización.
 105  831D
 106  831D 2A 90 8C     	ld hl,(Puntero_datos_shield)
 107  8320 23           	inc hl
 108  8321 22 90 8C     	ld (Puntero_datos_shield),hl
 109  8324 7E           	ld a,(hl)
 110  8325 32 93 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8328
 112  8328              Incrementa_FRAMES
 113  8328
 114  8328 2A 78 5C     	ld hl,(FRAMES)
 115  832B 23           	inc hl
 116  832C 22 78 5C     	ld (FRAMES),hl
 117  832F
 118  832F 7C           	ld a,h
 119  8330 B5           	or l
 120  8331 20 04        	jr nz,1F
 121  8333
 122  8333 21 7A 5C     	ld hl,FRAMES_3
 123  8336 34           	inc (hl)
 124  8337
 125  8337 D5           1 push de
 126  8338 C5           	push bc
 127  8339
 128  8339 CD D8 90     	call Actualiza_pantalla
 129  833C
 130  833C C1           	pop bc
 131  833D D1           	pop de
 132  833E E1           	pop hl
 133  833F F1           	pop af
 134  8340
 135  8340 FB           	ei
 136  8341
 137  8341 C9           	ret
 138  8342
 139  8342              ; --------------------------------------------------------------------------------
 140  8342
 141  8342              	include "Sprites_e_indices.asm"						; Comienza en $83a0
# file opened: Sprites_e_indices.asm
   1+ 8342              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 8342              ;
   3+ 8342              ;	17/02/23
   4+ 8342              ;
   5+ 8342              ;	Sprites e índices.
   6+ 8342
   7+ 8342              	org $83a0
   8+ 83A0
   9+ 83A0              ; Disparo.
  10+ 83A0
  11+ 83A0 A8 83        Indice_disparo defw Disparo_0
  12+ 83A2 AA 83        	defw Disparo_f9
  13+ 83A4 AC 83        	defw Disparo_fb
  14+ 83A6 AE 83        	defw Disparo_fd
  15+ 83A8
  16+ 83A8              ; Disparo (CTRL_DESPLZ)="0".
  17+ 83A8 01 80        Disparo_0 DEFB $01,$80
  18+ 83AA              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 83AA 00 60        Disparo_f9 DEFB $00,$60
  20+ 83AC              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 83AC 18 00        Disparo_fb DEFB $18,$00
  22+ 83AE              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 83AE 06 00        Disparo_fd DEFB $06,$00
  24+ 83B0
  25+ 83B0              ; ----------------------------------------------------------------------------------------
  26+ 83B0
  27+ 83B0              ; Badsat_izq. 2x2.
  28+ 83B0
  29+ 83B0 C0 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 83B2 30 85        	defw Badsat_izq_fe
  31+ 83B4 00 85        	defw Badsat_izq_fd
  32+ 83B6 C0 84        	defw Badsat_izq_fc
  33+ 83B8 90 84        	defw Badsat_izq_fb
  34+ 83BA 60 84        	defw Badsat_izq_fa
  35+ 83BC 30 84        	defw Badsat_izq_f9
  36+ 83BE 00 84        	defw Badsat_izq_f8
  37+ 83C0
  38+ 83C0 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 83C3 02 14 00     	DEFB 	$02,$14,$00
  40+ 83C6 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 83C9 02 55 00     	DEFB 	$02,$55,$00
  42+ 83CC 02 AA 00     	DEFB	$02,$AA,$00
  43+ 83CF 02 54 00     	DEFB 	$02,$54,$00
  44+ 83D2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83D5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83D8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83DB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83DE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83E1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83E4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83E7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83EA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83ED 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83F0
  55+ 83F0              	org $8400
  56+ 8400
  57+ 8400 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  57+ 8404 0A 00 01 15
  58+ 8408 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  58+ 840C 01 55 00 01
  59+ 8410 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  59+ 8414 00 01 B0 00
  60+ 8418 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  60+ 841C FC 00 15 F4
  61+ 8420 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  61+ 8424 55 30 00 2A
  62+ 8428 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  62+ 842C 00 08 00 00
  63+ 8430
  64+ 8430 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8434 85 00 00 8A
  65+ 8438 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 843C 00 AA 80 00
  66+ 8440 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8444 00 00 D8 00
  67+ 8448 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 844C FE 00 0A FA
  68+ 8450 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8454 2A 98 00 15
  69+ 8458 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 845C 00 04 00 00
  70+ 8460
  71+ 8460 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8464 42 80 00 45
  72+ 8468 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 846C 00 55 40 00
  73+ 8470 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8474 00 00 6C 00
  74+ 8478 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 847C FF 00 05 7D
  75+ 8480 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8484 15 4C 00 0A
  76+ 8488 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 848C 00 02 00 00
  77+ 8490
  78+ 8490 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8494 21 40 00 22
  79+ 8498 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 849C 00 2A A0 00
  80+ 84A0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 84A4 80 00 36 00
  81+ 84A8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 84AC 7F 80 02 BE
  82+ 84B0 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 84B4 0A A6 00 05
  83+ 84B8 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 84BC 00 01 00 00
  84+ 84C0
  85+ 84C0 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 84C4 10 A0 00 11
  86+ 84C8 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 84CC 00 15 50 00
  87+ 84D0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84D4 40 00 1B 00
  88+ 84D8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84DC BF C0 01 5F
  89+ 84E0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84E4 05 53 00 02
  90+ 84E8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84EC 00 00 80 00
  91+ 84F0
  92+ 84F0              	org $8500
  93+ 8500
  94+ 8500 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  94+ 8504 08 50 00 08
  95+ 8508 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  95+ 850C 00 0A A8 00
  96+ 8510 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  96+ 8514 A0 00 0D 80
  97+ 8518 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  97+ 851C 5F F8 00 AF
  98+ 8520 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  98+ 8524 02 A9 00 01
  99+ 8528 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  99+ 852C 00 00 40 00
 100+ 8530
 101+ 8530 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8534 04 28 00 04
 102+ 8538 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 853C 00 05 54 00
 103+ 8540 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8544 D0 00 06 C0
 104+ 8548 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 854C 2F FC 00 57
 105+ 8550 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8554 01 54 80 00
 106+ 8558 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 855C 00 00 20 00
 107+ 8560
 108+ 8560
 109+ 8560 70 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8562 A0 85        	defw Badsat_der_f8
 111+ 8564 D0 85        	defw Badsat_der_f9
 112+ 8566 00 86        	defw Badsat_der_fa
 113+ 8568 30 86        	defw Badsat_der_fb
 114+ 856A 60 86        	defw Badsat_der_fc
 115+ 856C 90 86        	defw Badsat_der_fd
 116+ 856E C0 86        	defw Badsat_der_fe
 117+ 8570
 118+ 8570 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8573 28 40 00     	DEFB    $28,$40,$00
 120+ 8576 54 40 00     	DEFB	$54,$40,$00
 121+ 8579 AA 40 00     	DEFB	$AA,$40,$00
 122+ 857C 55 40 00     	DEFB	$55,$40,$00
 123+ 857F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8582 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8585 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8588 07 50 00     	DEFB	$07,$50,$00
 127+ 858B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 858E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8591 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8594 06 55 00     	DEFB	$06,$55,$00
 131+ 8597 00 2A 00     	DEFB	$00,$2A,$00
 132+ 859A 00 14 00     	DEFB	$00,$14,$00
 133+ 859D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 85A0
 135+ 85A0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 85A4 20 00 2A 20
 136+ 85A8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 85AC 2A A0 00 15
 137+ 85B0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 85B4 00 03 60 00
 138+ 85B8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 85BC F4 00 0B EA
 139+ 85C0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 85C4 03 2A 80 00
 140+ 85C8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 85CC 00 00 04 00
 141+ 85D0
 142+ 85D0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85D4 10 00 15 10
 143+ 85D8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85DC 15 50 00 0A
 144+ 85E0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85E4 80 01 B0 00
 145+ 85E8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85EC FA 00 05 F5
 146+ 85F0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85F4 01 95 40 00
 147+ 85F8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85FC 00 00 02 00
 148+ 8600
 149+ 8600 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 8604 08 00 0A 88
 150+ 8608 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 860C 0A A8 00 05
 151+ 8610 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 8614 C0 00 D8 00
 152+ 8618 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 861C FD 00 02 FA
 153+ 8620 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 8624 00 CA A0 00
 154+ 8628 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 862C 80 00 01 00
 155+ 8630
 156+ 8630 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8634 84 00 05 44
 157+ 8638 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 863C 05 54 00 02
 158+ 8640 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8644 E0 00 6C 00
 159+ 8648 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 864C FE 80 01 7D
 160+ 8650 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8654 00 65 50 00
 161+ 8658 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 865C 40 00 00 80
 162+ 8660
 163+ 8660 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8664 42 00 02 A2
 164+ 8668 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 866C 02 AA 00 01
 165+ 8670 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8674 F0 00 36 00
 166+ 8678 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 867C FF 40 00 BE
 167+ 8680 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8684 00 32 A8 00
 168+ 8688 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 868C A0 00 00 40
 169+ 8690
 170+ 8690 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8694 A1 00 01 51
 171+ 8698 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 869C 01 55 00 00
 172+ 86A0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 86A4 F8 00 1B 00
 173+ 86A8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 86AC FF A0 00 1F
 174+ 86B0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 86B4 00 09 54 00
 175+ 86B8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 86BC 50 00 00 20
 176+ 86C0
 177+ 86C0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 86C4 50 80 00 A8
 178+ 86C8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 86CC 00 AA 80 00
 179+ 86D0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86D4 FC 00 0D 80
 180+ 86D8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86DC FF D0 00 0F
 181+ 86E0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86E4 00 04 AA 00
 182+ 86E8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86EC 28 00 00 10
 183+ 86F0
 184+ 86F0              ; ----------------------------------------------------------------------------------------
 185+ 86F0
 186+ 86F0              ; Amadeus. 2x2.
 187+ 86F0
 188+ 86F0 10 87        Indice_Amadeus_der defw Amadeus
 189+ 86F2 00 00        	defw 0
 190+ 86F4 40 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86F6 00 00        	defw 0
 192+ 86F8 70 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86FA 00 00        	defw 0
 194+ 86FC A0 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86FE 00 00        	defw 0	 								; (Fín de índice).
 196+ 8700
 197+ 8700 10 87        Indice_Amadeus_izq defw Amadeus
 198+ 8702 00 00        	defw 0
 199+ 8704 A0 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 8706 00 00        	defw 0
 201+ 8708 70 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 870A 00 00        	defw 0
 203+ 870C 40 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 870E 00 00        	defw 0	 								; (Fín de índice).
 205+ 8710
 206+ 8710 01 80 00     Amadeus DEFB $01,$80,0
 207+ 8713 23 C4 00     	DEFB	$23,$C4,0
 208+ 8716 26 64 00     	DEFB	$26,$64,0
 209+ 8719 24 24 00     	DEFB	$24,$24,0
 210+ 871C 2C 34 00     	DEFB	$2C,$34,0
 211+ 871F 6D B6 00     	DEFB	$6D,$B6,0
 212+ 8722 6F F6 00     	DEFB	$6F,$F6,0
 213+ 8725 67 E6 00     	DEFB	$67,$E6,0
 214+ 8728 E7 E7 00     	DEFB	$E7,$E7,0
 215+ 872B F3 CF 00     	DEFB	$F3,$CF,0
 216+ 872E F7 EF 00     	DEFB	$F7,$EF,0
 217+ 8731 FF FF 00     	DEFB	$FF,$FF,0
 218+ 8734 FB DF 00     	DEFB	$FB,$DF,0
 219+ 8737 FB DF 00     	DEFB	$FB,$DF,0
 220+ 873A 8B D1 00     	DEFB	$8B,$D1,0
 221+ 873D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 222+ 8740
 223+ 8740 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 223+ 8744 F1 00 09 99
 224+ 8748 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 224+ 874C 0B 0D 00 1B
 225+ 8750 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 225+ 8754 80 19 F9 80
 226+ 8758 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 226+ 875C F3 C0 3D FB
 227+ 8760 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 227+ 8764 3E F7 C0 3E
 228+ 8768 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 228+ 876C 40 1C 63 80
 229+ 8770
 230+ 8770 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 230+ 8774 3C 40 02 66
 231+ 8778 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 231+ 877C 02 C3 40 06
 232+ 8780 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 232+ 8784 60 06 7E 60
 233+ 8788 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 233+ 878C 3C F0 0F 7E
 234+ 8790 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 234+ 8794 0F BD F0 0F
 235+ 8798 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 235+ 879C 10 07 18 E0
 236+ 87A0
 237+ 87A0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 237+ 87A4 8F 10 00 99
 238+ 87A8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 238+ 87AC 00 B0 D0 01
 239+ 87B0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 239+ 87B4 D8 01 9F 98
 240+ 87B8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 240+ 87BC CF 3C 03 DF
 241+ 87C0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 241+ 87C4 03 EF 7C 03
 242+ 87C8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 242+ 87CC 44 01 C6 38
 243+ 87D0
 244+ 87D0              ; ----------------------------------------------------------------------------------------
 245+ 87D0
 246+ 87D0 00 88        Indice_Explosion_entidades defw Explosion_entidades_1
 247+ 87D2 30 88        	defw Explosion_entidades_2
 248+ 87D4 60 88        	defw Explosion_entidades_3
 249+ 87D6
 250+ 87D6              	org $8800
 251+ 8800
 252+ 8800 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 8803 08 10 00     	DEFB 	$08,$10,$00
 254+ 8806 04 38 40     	DEFB	$04,$38,$40
 255+ 8809 03 7D 80     	DEFB	$03,$7D,$80
 256+ 880C 02 E6 80     	DEFB	$02,$E6,$80
 257+ 880F 01 B7 00     	DEFB	$01,$B7,$00
 258+ 8812 01 7F 00     	DEFB	$01,$7F,$00
 259+ 8815 03 DD 80     	DEFB	$03,$DD,$80
 260+ 8818 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 881B 03 3B 80     	DEFB	$03,$3B,$80
 262+ 881E 01 9D 00     	DEFB	$01,$9D,$00
 263+ 8821 01 F6 00     	DEFB	$01,$F6,$00
 264+ 8824 02 FD 80     	DEFB	$02,$FD,$80
 265+ 8827 03 00 40     	DEFB	$03,$00,$40
 266+ 882A 04 00 00     	DEFB	$04,$00,$00
 267+ 882D 08 00 00     	DEFB	$08,$00,$00
 268+ 8830
 269+ 8830 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 269+ 8834 38 10 03 BC
 270+ 8838 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 270+ 883C 04 06 C0 00
 271+ 8840 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 271+ 8844 00 03 DD 80
 272+ 8848 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 272+ 884C 3A 70 01 9C
 273+ 8850 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 273+ 8854 04 F8 80 06
 274+ 8858 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 274+ 885C 00 00 00 00
 275+ 8860
 276+ 8860 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 276+ 8864 00 20 08 00
 277+ 8868 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 277+ 886C 00 06 00 00
 278+ 8870 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 278+ 8874 00 00 14 30
 279+ 8878 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 279+ 887C 38 00 01 08
 280+ 8880 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 280+ 8884 00 80 00 04
 281+ 8888 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 281+ 888C 10 08 00 20
 282+ 8890
 283+ 8890              ; ------------------------------------------
 284+ 8890
 285+ 8890 96 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 286+ 8892 C6 88        	defw Explosion_Amadeus_2
 287+ 8894 00 89        	defw Explosion_Amadeus_3
 288+ 8896
 289+ 8896 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 290+ 8899 02 3C 36     	DEFB	$02,$3C,$36
 291+ 889C 02 66 56     	DEFB	$02,$66,$56
 292+ 889F 02 42 48     	DEFB	$02,$42,$48
 293+ 88A2 02 C3 32     	DEFB	$02,$C3,$32
 294+ 88A5 06 DB 0C     	DEFB	$06,$DB,$0C
 295+ 88A8 06 FE 46     	DEFB	$06,$FE,$46
 296+ 88AB 06 79 68     	DEFB	$06,$79,$68
 297+ 88AE 0E 76 D8     	DEFB	$0E,$76,$D8
 298+ 88B1 1E 34 6C     	DEFB	$1E,$34,$6C
 299+ 88B4 0F 6E BE     	DEFB	$0F,$6E,$BE
 300+ 88B7 0F EF B0     	DEFB	$0F,$EF,$B0
 301+ 88BA 0F B5 A0     	DEFB	$0F,$B5,$A0
 302+ 88BD 0F B1 8A     	DEFB	$0F,$B1,$8A
 303+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 304+ 88C3 07 19 80     	DEFB	$07,$19,$80
 305+ 88C6
 306+ 88C6 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 307+ 88C9 00 3C 36     	DEFB	$00,$3C,$36
 308+ 88CC 00 66 56     	DEFB	$00,$66,$56
 309+ 88CF 04 42 48     	DEFB	$04,$42,$48
 310+ 88D2 0A 03 32     	DEFB	$0A,$03,$32
 311+ 88D5 14 DB 0C     	DEFB	$14,$DB,$0C
 312+ 88D8 1C DE 46     	DEFB	$1C,$DE,$46
 313+ 88DB 36 49 68     	DEFB 	$36,$49,$68
 314+ 88DE 0C 76 D8     	DEFB	$0C,$76,$D8
 315+ 88E1 10 34 6C     	DEFB	$10,$34,$6C
 316+ 88E4 2B 6E BE     	DEFB	$2B,$6E,$BE
 317+ 88E7 0E AF B0     	DEFB	$0E,$AF,$B0
 318+ 88EA 29 B5 A0     	DEFB	$29,$B5,$A0
 319+ 88ED 0C 91 8A     	DEFB	$0C,$91,$8A
 320+ 88F0 08 BA 4C     	DEFB	$08,$BA,$4C
 321+ 88F3 07 19 80     	DEFB	$07,$19,$80
 322+ 88F6
 323+ 88F6              	org $8900
 324+ 8900
 325+ 8900 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 8903 00 00 00     	DEFB	$00,$00,$00
 327+ 8906 00 00 00     	DEFB	$00,$00,$00
 328+ 8909 00 00 40     	DEFB	$00,$00,$40
 329+ 890C 00 00 30     	DEFB	$00,$00,$30
 330+ 890F 00 00 08     	DEFB	$00,$00,$08
 331+ 8912 00 82 40     	DEFB	$00,$82,$40
 332+ 8915 04 04 68     	DEFB	$04,$04,$68
 333+ 8918 04 20 58     	DEFB	$04,$20,$58
 334+ 891B 18 12 2C     	DEFB	$18,$12,$2C
 335+ 891E 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 8921 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 8924 29 80 A0     	DEFB	$29,$80,$A0
 338+ 8927 0F 84 88     	DEFB	$0F,$84,$88
 339+ 892A 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 892D 07 11 80     	DEFB	$07,$11,$80
 341+ 8930
# file closed: Sprites_e_indices.asm
 142  8930              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8930              ; ---------------------------------------------------------------------
   2+ 8930              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8930              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8930              ; ---------------------------------------------------------------------
   5+ 8930
   6+ 8930              ; 30/05/24
   7+ 8930              ;
   8+ 8930              ;	En esta tabla iremos almacenando:
   9+ 8930              ;
  10+ 8930              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 8930              ;
  12+ 8930              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 8930
  14+ 8930 00 00 00...  Numeros_aleatorios ds 7
  15+ 8937
  16+ 8937 00 00 00...  Tabla_de_pintado ds 27
  17+ 8952
  18+ 8952              ;	db 0, defw 0
  19+ 8952              ;	db 0, defw 0
  20+ 8952              ;	db 0, defw 0
  21+ 8952              ;	db 0, defw 0
  22+ 8952              ;	db 0, defw 0
  23+ 8952              ;	db 0, defw 0
  24+ 8952              ;	db 0, defw 0
  25+ 8952
  26+ 8952 47 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  27+ 8954              ;	defw ...
  28+ 8954              ; 	defw ...
  29+ 8954 00 00        	defw 0
  30+ 8956
  31+ 8956 5A 89        Indice_de_disparos_Amadeus defw Disparo_1A
  32+ 8958 5F 89        	defw Disparo_2A
  33+ 895A
  34+ 895A 00 00        Disparo_1A defw 0									; Puntero objeto.
  35+ 895C 00 00        	defw 0											; Puntero de impresión.
  36+ 895E 00           	db 0											; Impacto.
  37+ 895F
  38+ 895F 00 00        Disparo_2A defw 0									; Puntero objeto.
  39+ 8961 00 00        	defw 0											; Puntero de impresión.
  40+ 8963 00           	db 0											; Impacto.
  41+ 8964
  42+ 8964 78 89        Indice_de_disparos_entidades defw Disparo_1
  43+ 8966 7D 89        	defw Disparo_2
  44+ 8968 82 89        	defw Disparo_3
  45+ 896A 87 89        	defw Disparo_4
  46+ 896C 8C 89        	defw Disparo_5
  47+ 896E 91 89        	defw Disparo_6
  48+ 8970 96 89        	defw Disparo_7
  49+ 8972 9B 89        	defw Disparo_8
  50+ 8974 A0 89        	defw Disparo_9
  51+ 8976 A5 89        	defw Disparo_10
  52+ 8978
  53+ 8978 00 00        Disparo_1 defw 0									; Puntero objeto.
  54+ 897A 00 00        	defw 0											; Puntero de impresión.
  55+ 897C 00           	db 0											; Control.
  56+ 897D
  57+ 897D 00 00        Disparo_2 defw 0									; Puntero objeto.
  58+ 897F 00 00        	defw 0											; Puntero de impresión.
  59+ 8981 00           	db 0											; Control.
  60+ 8982
  61+ 8982 00 00        Disparo_3 defw 0									; Puntero objeto.
  62+ 8984 00 00        	defw 0											; Puntero de impresión.
  63+ 8986 00           	db 0											; Control.
  64+ 8987
  65+ 8987 00 00        Disparo_4 defw 0									; Puntero objeto.
  66+ 8989 00 00        	defw 0											; Puntero de impresión.
  67+ 898B 00           	db 0											; Control.
  68+ 898C
  69+ 898C 00 00        Disparo_5 defw 0									; Puntero objeto.
  70+ 898E 00 00        	defw 0											; Puntero de impresión.
  71+ 8990 00           	db 0											; Control.
  72+ 8991
  73+ 8991 00 00        Disparo_6 defw 0									; Puntero objeto.
  74+ 8993 00 00        	defw 0											; Puntero de impresión.
  75+ 8995 00           	db 0											; Control.
  76+ 8996
  77+ 8996 00 00        Disparo_7 defw 0									; Puntero objeto.
  78+ 8998 00 00        	defw 0											; Puntero de impresión.
  79+ 899A 00           	db 0											; Control.
  80+ 899B
  81+ 899B 00 00        Disparo_8 defw 0									; Puntero objeto.
  82+ 899D 00 00        	defw 0											; Puntero de impresión.
  83+ 899F 00           	db 0											; Control.
  84+ 89A0
  85+ 89A0 00 00        Disparo_9 defw 0									; Puntero objeto.
  86+ 89A2 00 00        	defw 0											; Puntero de impresión.
  87+ 89A4 00           	db 0											; Control.
  88+ 89A5
  89+ 89A5 00 00        Disparo_10 defw 0									; Puntero objeto.
  90+ 89A7 00 00        	defw 0											; Puntero de impresión.
  91+ 89A9 00           	db 0											; Control.
  92+ 89AA
  93+ 89AA              ; -------------------------------------------------------------------------------------
  94+ 89AA              ;
  95+ 89AA              ;	Índice de cajas de entidades.
  96+ 89AA              ;
  97+ 89AA              ;	18/1/24
  98+ 89AA              ;
  99+ 89AA
 100+ 89AA              Indice_de_cajas_de_entidades
 101+ 89AA
 102+ 89AA C8 89        	defw Caja_1
 103+ 89AC D4 89        	defw Caja_2
 104+ 89AE E0 89        	defw Caja_3
 105+ 89B0 EC 89        	defw Caja_4
 106+ 89B2 F8 89        	defw Caja_5
 107+ 89B4 04 8A        	defw Caja_6
 108+ 89B6 10 8A        	defw Caja_7
 109+ 89B8
 110+ 89B8 00 00        	defw 0
 111+ 89BA 00 00        	defw 0
 112+ 89BC
 113+ 89BC              ; -------------------------
 114+ 89BC
 115+ 89BC              ; Relleno para que no se corrompa el movimiento. ?????
 116+ 89BC
 117+ 89BC              ;	db 0
 118+ 89BC
 119+ 89BC              ; ---------- ---------- ---------- ---------- ----------
 120+ 89BC              ;
 121+ 89BC              ;	28/05/24
 122+ 89BC              ;
 123+ 89BC              ; 	Cada caja tiene 14 bytes !!!
 124+ 89BC              ;
 125+ 89BC              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 126+ 89BC
 127+ 89BC 00           Amadeus_BOX db 0										; (Tipo).
 128+ 89BD 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 129+ 89BF 00           	db 0												; (Contador_de_vueltas).
 130+ 89C0 00           Impacto_Amadeus	db 0									; (Impacto).
 131+ 89C1 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 132+ 89C3 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 133+ 89C5 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 134+ 89C7 00           	db 0												; (Velocidad).
 135+ 89C8
 136+ 89C8              ; ---------- ---------- ---------- ---------- ----------
 137+ 89C8              ;
 138+ 89C8              ;	22/01/24
 139+ 89C8              ;
 140+ 89C8              ; 	Cada caja tiene 12 bytes !!!
 141+ 89C8
 142+ 89C8 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 143+ 89CB 00           	db 0												; (Contador_de_vueltas).
 144+ 89CC 00           	db 0												; (Impacto).
 145+ 89CD 00 00        	defw 0												; (Puntero_de_impresion).
 146+ 89CF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 147+ 89D1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 148+ 89D3 00           	db 0												; (Velocidad).
 149+ 89D4
 150+ 89D4              ; ---------- ---------- ---------- ---------- ----------
 151+ 89D4
 152+ 89D4 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 153+ 89D7 00           	db 0 												; (Contador_de_vueltas).
 154+ 89D8 00           	db 0												; (Impacto).
 155+ 89D9 00 00        	defw 0												; (Puntero_de_impresion).
 156+ 89DB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 157+ 89DD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 158+ 89DF 00           	db 0												; (Velocidad).
 159+ 89E0
 160+ 89E0              ; ---------- ---------- ---------- ---------- ----------
 161+ 89E0
 162+ 89E0 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 163+ 89E3 00           	db 0 												; (Contador_de_vueltas).
 164+ 89E4 00           	db 0												; (Impacto).
 165+ 89E5 00 00        	defw 0												; (Puntero_de_impresion).
 166+ 89E7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 167+ 89E9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 168+ 89EB 00           	db 0												; (Velocidad).
 169+ 89EC
 170+ 89EC              ; ---------- ---------- ---------- ---------- ----------
 171+ 89EC
 172+ 89EC 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 173+ 89EF 00           	db 0 												; (Contador_de_vueltas).
 174+ 89F0 00           	db 0												; (Impacto).
 175+ 89F1 00 00        	defw 0												; (Puntero_de_impresion).
 176+ 89F3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 177+ 89F5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 178+ 89F7 00           	db 0												; (Velocidad).
 179+ 89F8
 180+ 89F8              ; ---------- ---------- ---------- ---------- ----------
 181+ 89F8
 182+ 89F8 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 89FB 00           	db 0 												; (Contador_de_vueltas).
 184+ 89FC 00           	db 0												; (Impacto).
 185+ 89FD 00 00        	defw 0												; (Puntero_de_impresion).
 186+ 89FF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 187+ 8A01 00 00        	defw 0 												; (Contador_de_mov_masticados).
 188+ 8A03 00           	db 0												; (Velocidad).
 189+ 8A04
 190+ 8A04              ; ---------- ---------- ---------- ---------- ----------
 191+ 8A04
 192+ 8A04 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 193+ 8A07 00           	db 0 												; (Contador_de_vueltas).
 194+ 8A08 00           	db 0												; (Impacto).
 195+ 8A09 00 00        	defw 0												; (Puntero_de_impresion).
 196+ 8A0B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 197+ 8A0D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 198+ 8A0F 00           	db 0												; (Velocidad).
 199+ 8A10
 200+ 8A10              ; ---------- ---------- ---------- ---------- ----------
 201+ 8A10
 202+ 8A10 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 203+ 8A13 00           	db 0 												; (Contador_de_vueltas).
 204+ 8A14 00           	db 0												; (Impacto).
 205+ 8A15 00 00        	defw 0												; (Puntero_de_impresion).
 206+ 8A17 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 207+ 8A19 00 00        	defw 0 												; (Contador_de_mov_masticados).
 208+ 8A1B 00           	db 0												; (Velocidad).
 209+ 8A1C
 210+ 8A1C              ; -------------------------------------------------------------------------------------
 211+ 8A1C              ;
 212+ 8A1C              ;	11/1/24
 213+ 8A1C              ;
 214+ 8A1C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 215+ 8A1C              ;
 216+ 8A1C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 217+ 8A1C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 218+ 8A1C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 219+ 8A1C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 220+ 8A1C
 221+ 8A1C              Indice_de_definiciones_de_entidades
 222+ 8A1C
 223+ 8A1C 20 8A        	defw Entidad_1
 224+ 8A1E 2D 8A        	defw Entidad_2
 225+ 8A20
 226+ 8A20              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 227+ 8A20
 228+ 8A20              ;	BADSAT, (Satélite malvado).
 229+ 8A20
 230+ 8A20 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 231+ 8A23 01           	db 1												; (Contador_de_vueltas).
 232+ 8A24 60 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 233+ 8A26 B0 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 234+ 8A28 03 40        	defw $4003	                                     	; (Posicion_inicio).
 235+ 8A2A 01           	db 1												; (Cuad_objeto).
 236+ 8A2B 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 237+ 8A2D
 238+ 8A2D 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 239+ 8A30 01           	db 1												; (Contador_de_vueltas).
 240+ 8A31 60 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 241+ 8A33 B0 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 242+ 8A35 40 50        	defw $5040                                      	; (Posicion_inicio).
 243+ 8A37 01           	db 1												; (Cuad_objeto).
 244+ 8A38 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 245+ 8A3A
 246+ 8A3A              ; -------------------------------------------------------------------------------------
 247+ 8A3A              ;
 248+ 8A3A              ;	28/05/24
 249+ 8A3A              ;
 250+ 8A3A              ;	Definición de Amadeus.
 251+ 8A3A              ;
 252+ 8A3A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 253+ 8A3A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 254+ 8A3A
 255+ 8A3A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 256+ 8A3D 00           	db 0												; (Contador_de_vueltas).
 257+ 8A3E F0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 258+ 8A40 00 87        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 259+ 8A42 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 260+ 8A44 03           	db 3												; (Cuad_objeto).
 261+ 8A45 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  8A47              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A47
   2+ 8A47
   3+ 8A47              ;   07/07/23
   4+ 8A47              ;
   5+ 8A47              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A47              ;
   7+ 8A47              ;   Codificación:
   8+ 8A47              ;
   9+ 8A47              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A47              ;
  11+ 8A47              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A47              ;
  13+ 8A47              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A47              ;
  15+ 8A47              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A47              ;
  17+ 8A47              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A47              ;                               ..... %01000010 Vel_up 4
  19+ 8A47              ;                                               Vel_down 2
  20+ 8A47              ;                               ..... $42
  21+ 8A47              ;
  22+ 8A47              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A47              ;
  24+ 8A47              ;                               ..... %01000010 Vel_left 4
  25+ 8A47              ;                                               Vel_right 2
  26+ 8A47              ;                               ..... $42
  27+ 8A47              ;
  28+ 8A47              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A47              ;
  30+ 8A47              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A47              ;
  32+ 8A47              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A47              ;
  34+ 8A47              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A47              ;                                     $53
  36+ 8A47              ;
  37+ 8A47              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A47              ;
  39+ 8A47              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A47              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A47              ;
  42+ 8A47              ;                       Arriba ..... $81
  43+ 8A47              ;                       Arriba - izquierda ..... $a1
  44+ 8A47              ;                       Arriba - derecha ..... $91
  45+ 8A47              ;
  46+ 8A47              ;                       Abajo ..... $41
  47+ 8A47              ;                       Abajo - izquierda ..... $61
  48+ 8A47              ;                       Abajo - derecha ..... $51
  49+ 8A47              ;
  50+ 8A47              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A47              ;
  52+ 8A47              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A47              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A47              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A47              ;
  56+ 8A47              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A47              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A47              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A47              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A47              ;
  61+ 8A47              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A47              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A47              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A47              ;
  65+ 8A47              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A47              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A47              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A47              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A47
  70+ 8A47              ; ----- ----- ----- ----- -----
  71+ 8A47
  72+ 8A47 73 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A49 7B 8A            defw F_1
  74+ 8A4B 85 8A            defw F_2
  75+ 8A4D 8F 8A            defw Codo_abajo_derecha
  76+ 8A4F C3 8A            defw Derecha_y_subiendo
  77+ 8A51 CD 8A            defw Derecha_y_subiendo_1
  78+ 8A53 D7 8A            defw F_3
  79+ 8A55 E1 8A            defw F_4
  80+ 8A57 EB 8A            defw Derecha_y_bajando
  81+ 8A59 F5 8A            defw Derecha_y_bajando_1
  82+ 8A5B FF 8A            defw Derecha_y_bajando_2
  83+ 8A5D 09 8B            defw Codo_derecha_abajo
  84+ 8A5F 39 8B            defw Codo_abajo_izq.
  85+ 8A61 6D 8B            defw Izquierda_y_subiendo
  86+ 8A63 77 8B            defw Izquierda_y_subiendo_1
  87+ 8A65 81 8B            defw F_5
  88+ 8A67 8B 8B            defw F_6
  89+ 8A69 95 8B            defw Izquierda_y_bajando
  90+ 8A6B 9F 8B            defw Izquierda_y_bajando_1
  91+ 8A6D A9 8B            defw Izquierda_y_bajando_2
  92+ 8A6F B3 8B            defw Codo_izquierda_abajo
  93+ 8A71 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A73
  95+ 8A73 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A77 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A7B
  98+ 8A7B 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A7F 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A83 08 00
 100+ 8A85
 101+ 8A85 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A89 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A8D 0F FE
 103+ 8A8F
 104+ 8A8F 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A93 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A9B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A9F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8AA3 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8AA7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8AAB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8AAF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AB3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AB7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8ABB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8ABF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AC3
 118+ 8AC3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AC7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8ACB 06 00
 120+ 8ACD
 121+ 8ACD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8AD1 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8AD5 02 00
 123+ 8AD7
 124+ 8AD7 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8ADB 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8ADF 04 00
 126+ 8AE1
 127+ 8AE1 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8AE5 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8AE9 08 00
 129+ 8AEB
 130+ 8AEB 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AEF 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AF3 02 00
 132+ 8AF5
 133+ 8AF5 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AF9 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AFD 06 00
 135+ 8AFF
 136+ 8AFF 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8B03 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8B07 06 00
 138+ 8B09
 139+ 8B09              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8B09
 141+ 8B09 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8B0D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B11 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B15 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B19 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B1D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B21 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B25 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B29 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B2D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B31 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B35 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B39
 154+ 8B39 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B3D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B41 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B45 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B49 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B4D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B51 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B55 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B59 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B5D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B61 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B65 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B69 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B6D
 168+ 8B6D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B71 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B75 06 00
 170+ 8B77
 171+ 8B77 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B7B 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B7F 02 00
 173+ 8B81
 174+ 8B81 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B85 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B89 04 00
 176+ 8B8B
 177+ 8B8B 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B8F 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B93 08 00
 179+ 8B95
 180+ 8B95 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B99 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B9D 02 00
 182+ 8B9F
 183+ 8B9F 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8BA3 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8BA7 06 00
 185+ 8BA9
 186+ 8BA9 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8BAD 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BB1 06 00
 188+ 8BB3
 189+ 8BB3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BB7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BBB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BBF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BC3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BC7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BCB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BCF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8BD3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8BD7 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8BDB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8BDF 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8BE3
 202+ 8BE3
 203+ 8BE3
 204+ 8BE3
 205+ 8BE3
 206+ 8BE3
 207+ 8BE3
 208+ 8BE3
 209+ 8BE3
 210+ 8BE3
# file closed: Patrones_de_mov.asm
 144  8BE3              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8BE3              ; 19/1/24
   2+ 8BE3
   3+ 8BE3              Indice_de_niveles
   4+ 8BE3
   5+ 8BE3 EB 8B        	defw Nivel_1
   6+ 8BE5 F6 8B        	defw Nivel_2
   7+ 8BE7
   8+ 8BE7              ;	...
   9+ 8BE7              ;	...
  10+ 8BE7              ;	+ Niveles ...
  11+ 8BE7
  12+ 8BE7 00 00        	defw 0
  13+ 8BE9 00 00        	defw 0
  14+ 8BEB
  15+ 8BEB 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BEC 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BF0 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BF4 01 01
  18+ 8BF6
  19+ 8BF6 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BF7 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BFB 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BFF 01 02
  22+ 8C01 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8C05 01 02
  23+ 8C07
# file closed: Niveles.asm
 145  8C07
 146  8C07              ; --------------------------------------------------------------------------------
 147  8C07              ;
 148  8C07              ; 12/05/24
 149  8C07              ;
 150  8C07              ; Parámetros DRAW.
 151  8C07              ;
 152  8C07
 153  8C07              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8C07
 155  8C07 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8C08              ;															- Patrón de movimiento.
 157  8C08 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8C09 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8C0A
 160  8C0A 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8C0B              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8C0B
 163  8C0B              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8C0B              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8C0B              ; Ejemplos.
 166  8C0B
 167  8C0B              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8C0B              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8C0B              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8C0B              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8C0B              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8C0B
 173  8C0B 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8C0C              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8C0C              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8C0C
 177  8C0C 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8C0E              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8C0E
 180  8C0E 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8C10
 182  8C10              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8C10              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 184  8C10
 185  8C10 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 186  8C12              ;														; _palabras que componen el "movimiento_masticado".
 187  8C12
 188  8C12              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  8C12
 190  8C12 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 191  8C13              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 192  8C13              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 193  8C13              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 194  8C13              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 195  8C13
 196  8C13 00           Ctrl_2 db 0
 197  8C14              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 198  8C14              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 199  8C14              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 200  8C14              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 201  8C14              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 202  8C14              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 203  8C14              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 204  8C14              ;
 205  8C14              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 206  8C14              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 207  8C14              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 208  8C14              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 209  8C14              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 210  8C14              ;														BIT 4, ???
 211  8C14              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 212  8C14
 213  8C14 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 214  8C15              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 215  8C15              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 216  8C15              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 217  8C15              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 218  8C15              ;
 219  8C15              ; 														DESCRIPCIÖN:
 220  8C15              ;
 221  8C15              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 222  8C15              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 223  8C15              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 224  8C15              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 225  8C15              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 226  8C15              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 227  8C15              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 228  8C15              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 229  8C15              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 230  8C15              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 231  8C15              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 232  8C15              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 233  8C15              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 234  8C15              ;
 235  8C15              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 236  8C15              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 237  8C15              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 238  8C15
 239  8C15              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 240  8C15
 241  8C15 00           Filas db 0												; Filas. [DRAW]
 242  8C16 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 243  8C17 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 244  8C19 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 245  8C1B
 246  8C1B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 247  8C1B
 248  8C1B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 249  8C1C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 250  8C1C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 251  8C1C
 252  8C1C              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 253  8C1C
 254  8C1C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 255  8C1C              ;
 256  8C1C              ;	COLORES: 0 ..... NEGRO
 257  8C1C              ;    		 1 ..... AZUL
 258  8C1C              ; 			 2 ..... ROJO
 259  8C1C              ;			 3 ..... MAGENTA
 260  8C1C              ; 			 4 ..... VERDE
 261  8C1C              ; 			 5 ..... CIAN
 262  8C1C              ;			 6 ..... AMARILLO
 263  8C1C              ; 			 7 ..... BLANCO
 264  8C1C
 265  8C1C 00 00        Indice_Sprite_der defw 0
 266  8C1E 00 00        Indice_Sprite_izq defw 0
 267  8C20 00 00        Puntero_DESPLZ_der defw 0
 268  8C22 00 00        Puntero_DESPLZ_izq defw 0
 269  8C24
 270  8C24 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 271  8C26 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 272  8C27 00           Columnas db 0
 273  8C28 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 274  8C2A              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8C2A 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 276  8C2B
 277  8C2B              ; variables de control general.
 278  8C2B
 279  8C2B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 280  8C2C
 281  8C2C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 282  8C2C
 283  8C2C              Perfiles_de_velocidad
 284  8C2C
 285  8C2C 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 286  8C2D 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 287  8C2E 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 288  8C2F 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 289  8C30
 290  8C30              ; Contadores de 16 bits.
 291  8C30
 292  8C30 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 293  8C32 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 294  8C34 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 295  8C36 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 296  8C38
 297  8C38              ; Movimiento. ------------------------------------------------------------------------------------------------------
 298  8C38
 299  8C38 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 300  8C3A 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 301  8C3C 00 00        Puntero_indice_mov_bucle defw 0							;
 302  8C3E              ;
 303  8C3E              ;
 304  8C3E 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 305  8C3F              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 306  8C3F              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 307  8C3F 00           Incrementa_puntero_backup db 0
 308  8C40 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 309  8C41              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 310  8C41 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 311  8C42 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 312  8C43 00           Cola_de_desplazamiento db 0								; Este byte indica:
 313  8C44              ;
 314  8C44              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 315  8C44              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 316  8C44              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 317  8C44              ;
 318  8C44              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 319  8C44              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 320  8C44              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 321  8C44              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 322  8C44              ;
 323  8C44              ;														;	"$ff" ..... Bucle infinito de repetición.
 324  8C44              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 325  8C44              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 326  8C44
 327  8C44 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 328  8C45
 329  8C45              ;														DESCRIPCIÓN:
 330  8C45              ;
 331  8C45              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 332  8C45              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 333  8C45              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 334  8C45              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 335  8C45              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 336  8C45              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 337  8C45
 338  8C45              ;														BIT 3, Recarga de nueva oleada.
 339  8C45              ;														BIT 4, Recarga de nueva oleada.
 340  8C45              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 341  8C45              ;														BIT 6, **** Frame completo.
 342  8C45              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 343  8C45
 344  8C45 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 345  8C47              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 346  8C47              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 347  8C47              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 348  8C47
 349  8C47              ; Gestión de ENTIDADES y CAJAS.
 350  8C47
 351  8C47 00 00        Puntero_store_caja defw 0
 352  8C49 00 00        Puntero_restore_caja defw 0
 353  8C4B 00 00        Indice_restore_caja defw 0
 354  8C4D 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 355  8C4E 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 356  8C4F 00           Entidades_en_curso db 0									; ..... ..... .....
 357  8C50              ;Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 358  8C50              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 359  8C50              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 360  8C50              ;														; _ (Numero_de_malotes)="0".
 361  8C50 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C52 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C54              ;														; _ puntero (Indice_entidades).
 364  8C54
 365  8C54              ;---------------------------------------------------------------------------------------------------------------
 366  8C54              ;
 367  8C54              ;	12/08/24
 368  8C54              ;
 369  8C54              ;	Álbumes.
 370  8C54
 371  8C54 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C56              ;														; _variable para almacenar lo posición del puntero_
 373  8C56              ; 														; _de pila, SP.
 374  8C56 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C58              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C58
 377  8C58              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C58
 379  8C58 00 00        Album_de_pintado defw 0
 380  8C5A 00 00        Album_de_borrado defw 0
 381  8C5C 00 00        Album_de_pintado_Amadeus defw 0
 382  8C5E 00 00        Album_de_borrado_Amadeus defw 0
 383  8C60 00 00        Techo_Scanlines_album defw 0
 384  8C62 00 00        Techo_Scanlines_album_2 defw 0
 385  8C64 00           Switch db 0
 386  8C65 00 00        Techo defw 0
 387  8C67 00 00        Scanlines_album_SP defw 0
 388  8C69 37 89        India_SP defw Tabla_de_pintado
 389  8C6B 3A 89        India_2_SP defw Tabla_de_pintado+3
 390  8C6D
 391  8C6D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 392  8C6E              ;
 393  8C6E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 394  8C6E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 395  8C6E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 396  8C6E              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 397  8C6E              ;																Habilita el borrado/pintado de sprites.
 398  8C6E              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 399  8C6E              ;																_ a la baja.
 400  8C6E              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 401  8C6E              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 402  8C6E              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 403  8C6E              ; 																_ el último frame de la explosión de nuestra nave.
 404  8C6E              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 405  8C6E              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 406  8C6E
 407  8C6E 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 408  8C6F              ;
 409  8C6F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 410  8C6F              ;
 411  8C6F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 412  8C6F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 413  8C6F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 414  8C6F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 415  8C6F              ;
 416  8C6F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 417  8C6F              ;															_ masticados ya generados.
 418  8C6F              ;
 419  8C6F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 420  8C6F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 421  8C6F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 422  8C6F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 423  8C6F
 424  8C6F
 425  8C6F              ; Gestión de Disparos.
 426  8C6F
 427  8C6F              ;Numero_de_disparotes db 0
 428  8C6F
 429  8C6F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 430  8C71 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 431  8C73
 432  8C73 00           Impacto2 db 0											; Byte de control de impactos.
 433  8C74
 434  8C74              ;
 435  8C74              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 436  8C74              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 437  8C74              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 438  8C74              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 439  8C74
 440  8C74
 441  8C74
 442  8C74
 443  8C74
 444  8C74
 445  8C74
 446  8C74 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 447  8C76              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 448  8C76              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 449  8C76
 450  8C76 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 451  8C78              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 452  8C78 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 453  8C7B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 454  8C7B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 455  8C7E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 456  8C7E
 457  8C7E              ;---------------------------------------------------------------------------------------------------------------
 458  8C7E
 459  8C7E              ; Relojes y temporizaciones.
 460  8C7E
 461  8C7E 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 462  8C7F 05           Clock_explosion_Amadeus db 5
 463  8C80 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 464  8C81
 465  8C81 30 89        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 466  8C83
 467  8C83 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 468  8C85 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 469  8C86              ;														; Repite la oleada de entidades.
 470  8C86 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 471  8C87
 472  8C87              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 473  8C87              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 474  8C87
 475  8C87              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 476  8C87              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 477  8C87              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 478  8C87
 479  8C87              ;---------------------------------------------------------------------------------------------------------------
 480  8C87
 481  8C87              ; Gestión de NIVELES.
 482  8C87
 483  8C87 00           Nivel db 0												; Nivel actual del juego.
 484  8C88 00 00        Puntero_indice_NIVELES defw 0
 485  8C8A 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 486  8C8C              ; 														; _ que definen el NIVEL.
 487  8C8C
 488  8C8C              ; ---------------------------------------------------------------------------------------------------------------
 489  8C8C
 490  8C8C              ; Temporizaciones Shield.
 491  8C8C
 492  8C8C 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 493  8C90 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 494  8C92 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 495  8C93 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 496  8C94 00           Shield_3 db 0
 497  8C95
 498  8C95 06           Lives db 6
 499  8C96
 500  8C96              ; 	INICIO  *************************************************************************************************************************************************************************
 501  8C96              ;
 502  8C96              ;	5/1/24
 503  8C96
 504  8C96              START
 505  8C96
 506  8C96 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 507  8C99 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 508  8C9B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 509  8C9D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 510  8C9F F3           	DI
 511  8CA0
 512  8CA0              ; Limpiamos pantalla.
 513  8CA0
 514  8CA0 3E 07        	ld a,%00000111
 515  8CA2              ;	call Cls
 516  8CA2 CD BD 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 517  8CA5
 518  8CA5              ; INICIALIZACIÓN.
 519  8CA5
 520  8CA5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 521  8CA7 CD 0A 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 522  8CAA CD 64 8E     	call Extrae_numero_aleatorio_y_avanza
 523  8CAD
 524  8CAD 6F           	ld l,a
 525  8CAE 26 00        	ld h,0
 526  8CB0 22 83 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CB3
 528  8CB3              ;	Inicializa 1er Nivel.
 529  8CB3
 530  8CB3 21 E3 8B     	ld hl,Indice_de_niveles
 531  8CB6 22 88 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 532  8CB9 CD 3A 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 533  8CBC              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 534  8CBC              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 535  8CBC              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 536  8CBC CD 19 90     	call Inicia_albumes_de_lineas
 537  8CBF              ;
 538  8CBF CD 29 90     	call Inicia_albumes_de_lineas_Amadeus
 539  8CC2
 540  8CC2 CD 7F 92     4 call Inicia_Entidades
 541  8CC5 CD E2 92     	call Inicia_Amadeus
 542  8CC8
 543  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 544  8CC8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 545  8CC8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 546  8CC8
 547  8CC8 11 BC 89     	ld de,Amadeus_BOX
 548  8CCB CD 35 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 549  8CCE CD 25 93     	call Limpiamos_bandeja_DRAW
 550  8CD1
 551  8CD1              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 552  8CD1
 553  8CD1 06 3C        	ld b,60
 554  8CD3 CD 07 9D     2 call Amadeus_a_izquierda
 555  8CD6 10 FB        	djnz 2B
 556  8CD8
 557  8CD8 CD F7 8F     	call Genera_datos_de_impresion_Amadeus
 558  8CDB
 559  8CDB              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 560  8CDB
 561  8CDB CD 36 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 562  8CDE              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 563  8CDE
 564  8CDE              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 565  8CDE              ; (Esto se dá cuando se inicia una nueva oleada).
 566  8CDE
 567  8CDE              ;	ld a,(Ctrl_1)
 568  8CDE              ;	bit 3,a
 569  8CDE              ;	jr nz,5F											 ; Loop
 570  8CDE
 571  8CDE              ;	ld de,Amadeus_db
 572  8CDE              ;	call Store_Amadeus
 573  8CDE
 574  8CDE              ; 	INICIA DISPAROS !!!!!
 575  8CDE
 576  8CDE CD 4C 90     	call Inicia_Puntero_Disparo_Entidades
 577  8CE1 CD 53 90     	call Inicia_Puntero_Disparo_Amadeus
 578  8CE4
 579  8CE4              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 580  8CE4
 581  8CE4              ;5 call Inicia_punteros_de_cajas
 582  8CE4              ;	call Restore_entidad
 583  8CE4
 584  8CE4              ;	ld a,(Ctrl_1)
 585  8CE4              ;	bit 3,a
 586  8CE4              ;	jr z,6F
 587  8CE4
 588  8CE4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 589  8CE4
 590  8CE4              ;	ld hl,Ctrl_1
 591  8CE4              ;	res 3,(hl)
 592  8CE4              ;	jr Main
 593  8CE4
 594  8CE4              ; Damos por concluida la construcción del FRAME.
 595  8CE4              ;
 596  8CE4
 597  8CE4 CD C8 90     	call Inicia_Shield
 598  8CE7
 599  8CE7
 600  8CE7 2A 67 8C     6 ld hl,(Scanlines_album_SP)
 601  8CEA 22 60 8C     	ld (Techo_Scanlines_album),hl
 602  8CED
 603  8CED 2A 5A 8C     	ld hl,(Album_de_borrado)
 604  8CF0 22 67 8C     	ld (Scanlines_album_SP),hl
 605  8CF3
 606  8CF3 21 37 89     	ld hl,Tabla_de_pintado
 607  8CF6 22 69 8C     	ld (India_SP),hl
 608  8CF9
 609  8CF9 21 6D 8C     	ld hl,Ctrl_3
 610  8CFC CB C6        	set 0,(hl) 											; Indica Frame completo.
 611  8CFE CB D6        	set 2,(hl)
 612  8D00 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 613  8D02
 614  8D02 FB           	ei 													; Ha de apuntar a $5c3a.
 615  8D03
 616  8D03 76           	halt
 617  8D04
 618  8D04              ; ------------------------------------
 619  8D04
 620  8D04              Main
 621  8D04              ;
 622  8D04              ; 13/05/24
 623  8D04
 624  8D04              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 625  8D04              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 626  8D04              ; Este hecho lo indica el bit2 de (Impacto2).
 627  8D04
 628  8D04 CD D1 9F     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 629  8D07
 630  8D07 2A 83 8C     16 ld hl,(Clock_next_entity)
 631  8D0A ED 4B 78 5C  	ld bc,(FRAMES)
 632  8D0E A7           	and a
 633  8D0F ED 42        	sbc hl,bc
 634  8D11 20 16        	jr nz,13F
 635  8D13
 636  8D13              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 637  8D13              ; _ (Clock_next_entity) para la siguiente entidad.
 638  8D13
 639  8D13 3A 4E 8C     21 ld a,(Numero_parcial_de_entidades)
 640  8D16 47           	ld b,a
 641  8D17 3A 4F 8C     	ld a,(Entidades_en_curso)
 642  8D1A B8           	cp b
 643  8D1B 28 0C        	jr z,13F
 644  8D1D 30 0A        	jr nc,13F
 645  8D1F
 646  8D1F 3C           	inc a
 647  8D20 32 4F 8C     	ld (Entidades_en_curso),a
 648  8D23
 649  8D23              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 650  8D23
 651  8D23 CD 64 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 652  8D26 CD 80 8E     	call Define_Clock_next_entity
 653  8D29
 654  8D29              ; -------------------------------------------------------------------------------------------------------------
 655  8D29
 656  8D29              ; Habilita disparos.
 657  8D29
 658  8D29              13
 659  8D29
 660  8D29              ;	ld hl,Disparo_Amadeus
 661  8D29              ;	ld de,CLOCK_repone_disparo_Amadeus
 662  8D29              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 663  8D29
 664  8D29              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 665  8D29              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 666  8D29              ;	call Habilita_disparos
 667  8D29
 668  8D29              ; COLISIONES.
 669  8D29
 670  8D29              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 671  8D29
 672  8D29              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 673  8D29              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 674  8D29              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 675  8D29
 676  8D29              ;	xor a
 677  8D29              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 678  8D29
 679  8D29              ;	call Inicia_punteros_de_cajas
 680  8D29              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 681  8D29              ; 														; _ en DRAW.
 682  8D29
 683  8D29              ;	ld a,(Filas)
 684  8D29              ;	and a
 685  8D29              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 686  8D29              ;	call Incrementa_punteros_de_cajas
 687  8D29              ;	jr 12B
 688  8D29
 689  8D29              ; ---------------------------------------------------------------------------------------
 690  8D29
 691  8D29              ;10 ld a,(Numero_parcial_de_entidades)
 692  8D29              ;    ld b,a
 693  8D29              ;	and a
 694  8D29              ;	jr nz,11F
 695  8D29
 696  8D29              ;	ld hl,Ctrl_1;
 697  8D29              ;	bit 4,(hl)
 698  8D29              ;	jp nz,16F
 699  8D29
 700  8D29              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 701  8D29
 702  8D29              ;	ld hl,Ctrl_1
 703  8D29              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 704  8D29
 705  8D29              ;	ld a,(Contador_de_frames)
 706  8D29              ;	inc a
 707  8D29              ;	ld (Activa_recarga_cajas),a
 708  8D29
 709  8D29              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 710  8D29
 711  8D29 3A 4F 8C     11 ld a,(Entidades_en_curso)
 712  8D2C A7           	and a
 713  8D2D CA 95 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 714  8D30 47           	ld b,a												; No hay entidades que gestionar.
 715  8D31
 716  8D31              ; ( Código que ejecutamos con cada entidad: ).
 717  8D31
 718  8D31              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 719  8D31              ;
 720  8D31              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 721  8D31
 722  8D31 21 37 89     	ld hl,Tabla_de_pintado
 723  8D34 22 69 8C     	ld (India_SP),hl
 724  8D37
 725  8D37 21 6D 8C     	ld hl,Ctrl_3
 726  8D3A CB D6        	set 2,(hl)
 727  8D3C CD 39 8E     	call Change
 728  8D3F
 729  8D3F C5           15 push bc 												; Nº de entidades en curso.
 730  8D40
 731  8D40 CD 95 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 732  8D43 ED 5B 67 8C  	ld de,(Scanlines_album_SP)
 733  8D47
 734  8D47              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 735  8D47
 736  8D47              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 737  8D47
 738  8D47 3A 0B 8C     	ld a,(Impacto)
 739  8D4A A7           	and a
 740  8D4B 28 13        	jr z,8F
 741  8D4D
 742  8D4D              ; 5/7/24
 743  8D4D              ; Nota importante:
 744  8D4D              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 745  8D4D              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 746  8D4D              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 747  8D4D
 748  8D4D 3A 6D 8C     	ld a,(Ctrl_3)
 749  8D50 CB 7F        	bit 7,a
 750  8D52 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 751  8D54              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 752  8D54 3A C0 89     	ld a,(Impacto_Amadeus)
 753  8D57 A7           	and a
 754  8D58 C4 A5 91     	call nz,Genera_explosion
 755  8D5B 20 1B        	jr nz,Gestiona_siguiente_entidad
 756  8D5D
 757  8D5D              ; Falsa colisión !!!
 758  8D5D
 759  8D5D 32 0B 8C     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 760  8D60
 761  8D60              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 762  8D60              ;	set 1,(hl)
 763  8D60              ;	jr 7F
 764  8D60
 765  8D60              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 766  8D60              ; _con las coordenadas de la entidad almacenada en DRAW.
 767  8D60
 768  8D60              ;	ld a,(Ctrl_1)
 769  8D60              ;	bit 2,a
 770  8D60              ;	jr z,7F
 771  8D60
 772  8D60              ;	ld hl,(Coordenadas_disparo_certero)
 773  8D60              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 774  8D60              ;														; E contiene la coordenada_X del disparo.
 775  8D60              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 776  8D60              ;														; H FILA, (Coordenada_y de la entidad).
 777  8D60              ;	and a
 778  8D60              ;	sbc hl,de
 779  8D60
 780  8D60              ;	call Determina_resultado_comparativa
 781  8D60
 782  8D60              ;	ld a,b
 783  8D60              ;	and a
 784  8D60              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 785  8D60
 786  8D60              ; ----- ----- -----
 787  8D60
 788  8D60              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 789  8D60              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 790  8D60
 791  8D60              ;	ld hl,Ctrl_1
 792  8D60              ;	res 2,(hl)
 793  8D60
 794  8D60              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 795  8D60
 796  8D60              ;	ld a,(Ctrl_0)
 797  8D60              ;	bit 4,a
 798  8D60              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 799  8D60
 800  8D60              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 801  8D60              ; [[[
 802  8D60              ;	call Detecta_disparo_entidad
 803  8D60              ; ]]]
 804  8D60
 805  8D60              ;	dec a
 806  8D60              ;	ld (Impacto),a
 807  8D60
 808  8D60              ; Existe "Entidad_guía" ???.
 809  8D60              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 810  8D60
 811  8D60              ;	ld a,(Ctrl_3)
 812  8D60              ;	bit 1,a
 813  8D60              ;	jr nz,22F
 814  8D60
 815  8D60              ; Almacén de "Movimientos_masticados" lleno ???
 816  8D60              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 817  8D60              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 818  8D60
 819  8D60              ;;	ld a,(Ctrl_3)
 820  8D60              ;;	bit 3,a
 821  8D60              ;;	jr nz,22F
 822  8D60
 823  8D60              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 824  8D60
 825  8D60              ;	ld hl,Ctrl_2
 826  8D60              ;	set 5,(hl)
 827  8D60              ;	ld hl,Ctrl_3
 828  8D60              ;	set 1,(hl)
 829  8D60
 830  8D60              ; -------------------------------------------
 831  8D60
 832  8D60 CD C4 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 833  8D63 CD 19 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 834  8D66 CD B0 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 835  8D69 CD A5 94     	call Genera_datos_de_impresion
 836  8D6C CD 48 93     	call Decrementa_Contador_de_mov_masticados
 837  8D6F
 838  8D6F              ; -------------------------------------------
 839  8D6F
 840  8D6F              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 841  8D6F
 842  8D6F 2A 0C 8C     	ld hl,(Puntero_de_impresion)
 843  8D72 CD 79 94     	call Genera_coordenadas
 844  8D75
 845  8D75 CD 4F 9F     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 846  8D78
 847  8D78              ;	ld hl,Ctrl_0
 848  8D78              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 849  8D78
 850  8D78              Gestiona_siguiente_entidad
 851  8D78
 852  8D78 CD 1A 93      	call Store_Restore_cajas
 853  8D7B C1           	pop bc
 854  8D7C 10 C1        	djnz 15B
 855  8D7E
 856  8D7E              ; Hemos gestionado todas las entidades.
 857  8D7E
 858  8D7E CD D4 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 859  8D81 CD EB 8E     	call Ordena_tabla_de_impresion
 860  8D84 CD 36 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 861  8D87
 862  8D87              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 863  8D87              ; Hemos gestionado todas las unidades.
 864  8D87              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 865  8D87
 866  8D87              ;	ld hl,Ctrl_1
 867  8D87              ;	res 2,(hl)
 868  8D87
 869  8D87 CD 95 8E     	call Borra_diferencia
 870  8D8A
 871  8D8A 3A 6D 8C     	ld a,(Ctrl_3)
 872  8D8D CB 5F        	bit 3,a
 873  8D8F 20 04        	jr nz,Gestion_de_Amadeus
 874  8D91
 875  8D91 EB           	ex de,hl
 876  8D92 71           	ld (hl),c
 877  8D93 2C           	inc l
 878  8D94 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 879  8D95
 880  8D95
 881  8D95              ;! GESTIONA AMADEUS !!!!!!!!!!
 882  8D95
 883  8D95              Gestion_de_Amadeus
 884  8D95
 885  8D95 21 6D 8C     	ld hl,Ctrl_3
 886  8D98 CB 76        	bit 6,(hl)
 887  8D9A 28 13        	jr z,Amadeus_vivo
 888  8D9C
 889  8D9C              ; Amadeus ha sido destruido.
 890  8D9C              ; Decrementa (Temp_new_live).
 891  8D9C
 892  8D9C 21 80 8C     	ld hl,Temp_new_live
 893  8D9F 35           	dec (hl)
 894  8DA0 20 26        	jr nz,End_frame
 895  8DA2
 896  8DA2              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 897  8DA2
 898  8DA2 21 95 8C     	ld hl,Lives
 899  8DA5 35           	dec (hl)
 900  8DA6
 901  8DA6              ;! Fin del juego
 902  8DA6
 903  8DA6 F3           	di
 904  8DA7 28 FE        	jr z,$
 905  8DA9 FB           	ei
 906  8DAA
 907  8DAA              ; Nueva nave.
 908  8DAA
 909  8DAA CD DF 8D     	call Reinicia_Amadeus
 910  8DAD 18 19        	jr End_frame
 911  8DAF
 912  8DAF              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 913  8DAF
 914  8DAF              Amadeus_vivo
 915  8DAF
 916  8DAF 3A C0 89     	ld a,(Impacto_Amadeus)
 917  8DB2 A7           	and a
 918  8DB3 C4 D5 91     	call nz, Genera_explosion_Amadeus
 919  8DB6 20 10        	jr nz, End_frame
 920  8DB8
 921  8DB8 CD 82 91     	call Teclado
 922  8DBB
 923  8DBB 21 6D 8C     	ld hl,Ctrl_3
 924  8DBE CB 6E        	bit 5,(hl)
 925  8DC0 28 06        	jr z,End_frame
 926  8DC2
 927  8DC2              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 928  8DC2
 929  8DC2 CD 54 8E     	call Change_Amadeus
 930  8DC5 CD F7 8F     	call Genera_datos_de_impresion_Amadeus
 931  8DC8
 932  8DC8              End_frame
 933  8DC8
 934  8DC8 2A 5A 8C     	ld hl,(Album_de_borrado)
 935  8DCB 22 67 8C     	ld (Scanlines_album_SP),hl
 936  8DCE
 937  8DCE 21 6D 8C     	ld hl,Ctrl_3
 938  8DD1 CB C6        	set 0,(hl) 											; Indica Frame completo.
 939  8DD3 CB 9E        	res 3,(hl)
 940  8DD5 CB A6        	res 4,(hl)
 941  8DD7
 942  8DD7 AF           	xor a
 943  8DD8 D3 FE        	out ($fe),a
 944  8DDA
 945  8DDA 76           	halt
 946  8DDB
 947  8DDB              ; ----------------------------------------
 948  8DDB
 949  8DDB              ;	ld a,(Ctrl_1) 										; Existe Loop?
 950  8DDB              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 951  8DDB CA 04 8D     	jp z,Main
 952  8DDE
 953  8DDE              ; RECARGA DE NUEVA OLEADA.
 954  8DDE
 955  8DDE              ;	ld a,(Contador_de_frames)
 956  8DDE              ;	ld b,a
 957  8DDE              ;	ld a,(Activa_recarga_cajas)
 958  8DDE              ;	cp b
 959  8DDE              ;	jr z,20F
 960  8DDE
 961  8DDE              ;	ld hl,Ctrl_1
 962  8DDE              ;	set 4,(hl)
 963  8DDE              ;	jp Main
 964  8DDE
 965  8DDE              ;20 ld hl,Ctrl_1
 966  8DDE              ;	res 4,(hl)
 967  8DDE
 968  8DDE              ;	ld a,(Contador_de_frames)
 969  8DDE
 970  8DDE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 971  8DDE              ;! _ IMPREDECIBLE !!!!
 972  8DDE
 973  8DDE              ;	add 10
 974  8DDE              ;	ld (Clock_next_entity),a
 975  8DDE
 976  8DDE              ;	jp 4B
 977  8DDE
 978  8DDE C9           	ret
 979  8DDF
 980  8DDF              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 981  8DDF              ;
 982  8DDF              ;	16/11/23
 983  8DDF
 984  8DDF              ;;Gestiona_Amadeus
 985  8DDF
 986  8DDF              ;! Activa/desactiva impacto con Amadeus.
 987  8DDF
 988  8DDF              ;	ld a,(Impacto)
 989  8DDF              ;	and a
 990  8DDF              ;	jr nz,2F
 991  8DDF
 992  8DDF              ;;	call Mov_Amadeus
 993  8DDF
 994  8DDF              ;;2 ld a,(Ctrl_0)
 995  8DDF              ;;	bit 4,a
 996  8DDF              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 997  8DDF
 998  8DDF              ;;	call Guarda_foto_entidad_a_pintar
 999  8DDF              ;;	call Guarda_datos_de_borrado_Amadeus
1000  8DDF
1001  8DDF              ;;1 ld hl,Ctrl_0
1002  8DDF              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
1003  8DDF
1004  8DDF              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
1005  8DDF
1006  8DDF              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
1007  8DDF
1008  8DDF              ;	call Calcula_numero_de_disparotes
1009  8DDF
1010  8DDF              ;;	ret
1011  8DDF
1012  8DDF              ; -----------------------------
1013  8DDF              ;
1014  8DDF              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
1015  8DDF              ;
1016  8DDF              ;	INPUTS: B a de estar a "0".
1017  8DDF
1018  8DDF              ;Prepara_Borra_sprites
1019  8DDF
1020  8DDF              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1021  8DDF              ;	ld a,l
1022  8DDF              ;	ret z
1023  8DDF
1024  8DDF              ;	srl a
1025  8DDF
1026  8DDF              ;2 sub 16
1027  8DDF              ;	jr z,1F
1028  8DDF              ;	inc b
1029  8DDF              ;	jr 2B
1030  8DDF
1031  8DDF              ;1 inc b
1032  8DDF
1033  8DDF              ;	exx
1034  8DDF              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1035  8DDF              ;	exx
1036  8DDF
1037  8DDF              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1038  8DDF              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1039  8DDF
1040  8DDF              ;	ret
1041  8DDF
1042  8DDF              ; --------------------------------------------------------------------------------------------------------------
1043  8DDF              ;
1044  8DDF              ;	15/12/23
1045  8DDF
1046  8DDF              ;Mov_obj
1047  8DDF
1048  8DDF              ;	ld a,(Ctrl_2)
1049  8DDF              ;	bit 1,a
1050  8DDF              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1051  8DDF
1052  8DDF              ; Explosión:
1053  8DDF
1054  8DDF              ;	ld a,(Frames_explosion)
1055  8DDF              ;	and a
1056  8DDF              ;	jr nz,4F
1057  8DDF
1058  8DDF              ;!  Una alimaña menos!!!!!!!!!1
1059  8DDF
1060  8DDF              ; Se trataba de una Entidad_guía ???
1061  8DDF
1062  8DDF              ;	ld a,(Ctrl_2)
1063  8DDF              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1064  8DDF              ;	jr z,5F
1065  8DDF
1066  8DDF              ;	ld hl,Ctrl_3
1067  8DDF              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1068  8DDF
1069  8DDF              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1070  8DDF              ;!! _generado puede ser distinto, (aletoriedad).
1071  8DDF
1072  8DDF              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1073  8DDF              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1074  8DDF              ;	dec (hl)
1075  8DDF              ;	ld hl,Entidades_en_curso
1076  8DDF              ;	dec (hl)
1077  8DDF              ;	ld hl,Numero_de_entidades
1078  8DDF              ;	dec (hl)
1079  8DDF              ;	jr 3F
1080  8DDF
1081  8DDF              ; -----
1082  8DDF
1083  8DDF              ;	`Movemos´ la explosión.
1084  8DDF
1085  8DDF              ;4 ld hl,(Puntero_DESPLZ_der)
1086  8DDF              ;	inc hl
1087  8DDF              ;	inc hl
1088  8DDF              ;	call Extrae_address
1089  8DDF              ;;	ld (Puntero_objeto),hl
1090  8DDF
1091  8DDF              ;;	ld hl,Frames_explosion
1092  8DDF              ;;	dec (hl)
1093  8DDF
1094  8DDF              ;;	ld hl,Ctrl_0
1095  8DDF              ;;	set 4,(hl);;
1096  8DDF
1097  8DDF              ;;	jr 3F
1098  8DDF
1099  8DDF              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1100  8DDF
1101  8DDF              ;2 xor a
1102  8DDF              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1103  8DDF
1104  8DDF              ; Movemos Entidades malignas.
1105  8DDF              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1106  8DDF
1107  8DDF              ;	ld a,(Ctrl_2)
1108  8DDF              ;	bit 5,a
1109  8DDF              ;	jr nz,8F
1110  8DDF
1111  8DDF              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1112  8DDF              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1113  8DDF              ;	jr 7F
1114  8DDF
1115  8DDF              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1116  8DDF
1117  8DDF              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1118  8DDF              ;	bit 4,a
1119  8DDF              ;	ret z
1120  8DDF
1121  8DDF              ; Ha habido desplazamiento de la entidad maligna.
1122  8DDF              ; Ha llegado a zona de AMADEUS ???
1123  8DDF
1124  8DDF              ;7 ld a,(Coordenada_y)
1125  8DDF              ;	cp $14
1126  8DDF              ;	jr c,1F
1127  8DDF
1128  8DDF              ; ---------
1129  8DDF
1130  8DDF              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1131  8DDF              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1132  8DDF
1133  8DDF              ;	di
1134  8DDF              ;	call Genera_coordenadas_X
1135  8DDF              ;	call Compara_coordenadas_X
1136  8DDF              ;	ei
1137  8DDF
1138  8DDF              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1139  8DDF
1140  8DDF              ; ---------
1141  8DDF
1142  8DDF              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1143  8DDF              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1144  8DDF              ;	call Limpia_Variables_de_borrado
1145  8DDF
1146  8DDF              ;3 ret
1147  8DDF
1148  8DDF              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1149  8DDF              ;
1150  8DDF              ;	24/07/24
1151  8DDF
1152  8DDF              Reinicia_Amadeus
1153  8DDF
1154  8DDF              ;	Reinicia posición y estado.
1155  8DDF
1156  8DDF 21 CF 50     	ld hl,$50cf
1157  8DE2 22 C1 89     	ld (p.imp.amadeus),hl
1158  8DE5 21 F0 E0     	ld hl,$e0f0
1159  8DE8 22 C3 89     	ld (Pamm_Amadeus),hl
1160  8DEB 21 3D 00     	ld hl,$003d
1161  8DEE 22 C5 89     	ld (Comm_Amadeus),hl
1162  8DF1
1163  8DF1              ;	limpiamos el álbum de borrado.
1164  8DF1
1165  8DF1 2A 5E 8C     	ld hl,(Album_de_borrado_Amadeus)
1166  8DF4
1167  8DF4 AF           	xor a
1168  8DF5 77           	ld (hl),a
1169  8DF6
1170  8DF6 E5           	push hl
1171  8DF7 D1           	pop de
1172  8DF8 13           	inc de
1173  8DF9
1174  8DF9 01 23 00     	ld bc,35
1175  8DFC ED B0        	ldir
1176  8DFE
1177  8DFE CD F7 8F     	call Genera_datos_de_impresion_Amadeus
1178  8E01
1179  8E01              ;	Reinicia temporizaciones.
1180  8E01
1181  8E01 CD C8 90     	call Inicia_Shield
1182  8E04
1183  8E04 3E 5A        	ld a,90
1184  8E06 32 92 8C     	ld (Shield),a
1185  8E09
1186  8E09 3E 64        	ld a,100
1187  8E0B 32 80 8C     	ld (Temp_new_live),a
1188  8E0E
1189  8E0E              ; 	Restauramos el FLAG: Amadeus vivo.
1190  8E0E
1191  8E0E 21 6D 8C     	ld hl,Ctrl_3
1192  8E11 CB B6        	res 6,(hl)
1193  8E13
1194  8E13              ;	Fuerza la impresión de la nave en el siguiente frame.
1195  8E13
1196  8E13 21 6D 8C      	ld hl,Ctrl_3
1197  8E16 CB EE        	set 5,(hl)
1198  8E18
1199  8E18 C9           	ret
1200  8E19
1201  8E19              ; --------------------------------------------------------------------------------------------------------------
1202  8E19              ;
1203  8E19              ;	12/05/24
1204  8E19
1205  8E19 3A 12 8C     Ajusta_velocidad_entidad ld a,(Velocidad)
1206  8E1C CB 27        	sla a
1207  8E1E 32 12 8C     	ld (Velocidad),a
1208  8E21 E6 10        	and $10
1209  8E23 C8           	ret z
1210  8E24
1211  8E24              ; Restaura (Velocidad) a razón del nº de vueltas.
1212  8E24
1213  8E24 3A 0A 8C     	ld a,(Contador_de_vueltas)
1214  8E27 CB 2F        	sra a
1215  8E29 CB 2F        	sra a
1216  8E2B 32 12 8C     	ld (Velocidad),a
1217  8E2E
1218  8E2E 2A 0E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1219  8E31 23           	inc hl
1220  8E32 23           	inc hl
1221  8E33 23           	inc hl
1222  8E34 23           	inc hl
1223  8E35 22 0E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1224  8E38
1225  8E38 C9           	ret
1226  8E39
1227  8E39              ; --------------------------------------------------------------------------------------------------------------
1228  8E39              ;
1229  8E39              ;	18/06/24
1230  8E39
1231  8E39              Change
1232  8E39
1233  8E39 3A 64 8C     	ld a,(Switch)
1234  8E3C EE 01        	xor 1
1235  8E3E 32 64 8C     	ld (Switch),a
1236  8E41 2A 58 8C     	ld hl,(Album_de_pintado)
1237  8E44 ED 5B 5A 8C  	ld de,(Album_de_borrado)
1238  8E48 EB           	ex de,hl
1239  8E49 22 58 8C     	ld (Album_de_pintado),hl
1240  8E4C 22 67 8C     	ld (Scanlines_album_SP),hl
1241  8E4F ED 53 5A 8C  	ld (Album_de_borrado),de
1242  8E53 C9           	ret
1243  8E54
1244  8E54              Change_Amadeus
1245  8E54
1246  8E54 2A 5C 8C     	ld hl,(Album_de_pintado_Amadeus)
1247  8E57 ED 5B 5E 8C  	ld de,(Album_de_borrado_Amadeus)
1248  8E5B EB           	ex de,hl
1249  8E5C 22 5C 8C     	ld (Album_de_pintado_Amadeus),hl
1250  8E5F ED 53 5E 8C  	ld (Album_de_borrado_Amadeus),de
1251  8E63 C9           	ret
1252  8E64
1253  8E64              ; ------------------------------------
1254  8E64              ;
1255  8E64              ; 1/05/24
1256  8E64
1257  8E64              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1258  8E64              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1259  8E64
1260  8E64              ;	DESTRUYE: HL,DE,A
1261  8E64              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1262  8E64
1263  8E64              ;	Variables implicadas: (RND_SP).
1264  8E64
1265  8E64              Extrae_numero_aleatorio_y_avanza
1266  8E64
1267  8E64 21 37 89     	ld hl,Tabla_de_pintado
1268  8E67 EB           	ex de,hl
1269  8E68 2A 81 8C     	ld hl,(RND_SP)
1270  8E6B EB           	ex de,hl
1271  8E6C A7           	and a
1272  8E6D ED 52        	sbc hl,de
1273  8E6F
1274  8E6F 2A 81 8C     	ld hl,(RND_SP)
1275  8E72 20 06        	jr nz,1F
1276  8E74
1277  8E74              ; Sitúa HL al principio de la tabla de nº aleatorios.
1278  8E74
1279  8E74 21 30 89     	ld hl,Numeros_aleatorios
1280  8E77 22 81 8C     	ld (RND_SP),HL
1281  8E7A
1282  8E7A              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1283  8E7A
1284  8E7A 7E           1 ld a,(hl)
1285  8E7B 23           	inc hl
1286  8E7C 22 81 8C     	ld (RND_SP),hl
1287  8E7F C9           	ret
1288  8E80
1289  8E80              ; ------------------------------------
1290  8E80              ;
1291  8E80              ; 1/05/24
1292  8E80
1293  8E80              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1294  8E80              ; (1 a 4 segundos).
1295  8E80              ; Actualizamos (Clock_next_entity) con A.
1296  8E80
1297  8E80              ;	DESTRUYE: A y B.
1298  8E80              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1299  8E80              ;			 Actualiza (Clock_next_entity) con A.
1300  8E80
1301  8E80              ;	Variables implicadas: (Clock_next_entity).
1302  8E80
1303  8E80              ; Notas:
1304  8E80
1305  8E80              ; 	$32 1 seg.
1306  8E80              ; 	$64 2 seg.
1307  8E80              ; 	$96 3 seg.
1308  8E80              ; 	$c8 4 seg.
1309  8E80              ; 	$fa 5 seg.
1310  8E80
1311  8E80              ; $ffff 1310,7 seg, 22 minutos.
1312  8E80
1313  8E80              ;	$0100  5 seg. aproximadamente.
1314  8E80              ;	$0200 10 seg. aproximadamente.
1315  8E80              ;	$0300 15 seg. aproximadamente.
1316  8E80              ;	$0400 20 seg. aproximadamente.
1317  8E80              ;	$0500 25 seg. aproximadamente.
1318  8E80              ;	$0600 30 seg. aproximadamente.
1319  8E80
1320  8E80              Define_Clock_next_entity
1321  8E80
1322  8E80 FE 34        	cp $34
1323  8E82 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1324  8E84
1325  8E84              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1326  8E84
1327  8E84 4F           3 ld c,a
1328  8E85 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1329  8E87 2A 78 5C     	ld hl,(FRAMES)
1330  8E8A A7           	and a
1331  8E8B ED 4A        	adc hl,bc
1332  8E8D 22 83 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1333  8E90 C9           	ret
1334  8E91
1335  8E91 3E 34        1 ld a,$34
1336  8E93 18 EF        	jr 3B
1337  8E95
1338  8E95              ; ------------------------------------
1339  8E95              ;
1340  8E95              ; 18/03/24
1341  8E95
1342  8E95              Borra_diferencia
1343  8E95
1344  8E95 ED 4B 67 8C  	ld bc,(Scanlines_album_SP)
1345  8E99
1346  8E99 3A 64 8C     	ld a,(Switch)
1347  8E9C A7           	and a
1348  8E9D 28 08        	jr z,2F
1349  8E9F
1350  8E9F 2A 62 8C     	ld hl,(Techo_Scanlines_album_2)
1351  8EA2 11 62 8C     	ld de,Techo_Scanlines_album_2
1352  8EA5 18 06        	jr 3F
1353  8EA7
1354  8EA7 2A 60 8C     2 ld hl,(Techo_Scanlines_album)
1355  8EAA 11 60 8C     	ld de,Techo_Scanlines_album
1356  8EAD
1357  8EAD              ; Diferencia.
1358  8EAD
1359  8EAD ED 42        3 sbc hl,bc
1360  8EAF
1361  8EAF C8           	ret z
1362  8EB0 D8           	ret c
1363  8EB1
1364  8EB1              ; Nuevo techo, (más bajo que el anterior).
1365  8EB1              ; Fijamos nuevo techo y borramos bytes sobrantes.
1366  8EB1
1367  8EB1 EB           	ex de,hl
1368  8EB2
1369  8EB2 71           	ld (hl),c
1370  8EB3 2C           	inc l
1371  8EB4 70           	ld (hl),b
1372  8EB5
1373  8EB5 AF           	xor a
1374  8EB6 43           	ld b,e
1375  8EB7
1376  8EB7 2A 67 8C     	ld hl,(Scanlines_album_SP)
1377  8EBA
1378  8EBA 77           1 ld (hl),a
1379  8EBB 23           	inc hl
1380  8EBC 10 FC        	djnz 1B
1381  8EBE
1382  8EBE              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1383  8EBE
1384  8EBE 21 6D 8C     	ld hl,Ctrl_3
1385  8EC1 CB DE        	set 3,(hl)
1386  8EC3
1387  8EC3 C9           	ret
1388  8EC4
1389  8EC4              ; --------------------------------------------------------------------------------------------------------------
1390  8EC4              ;
1391  8EC4              ;	26/3/24
1392  8EC4
1393  8EC4              Recauda_informacion_de_entidad_en_curso
1394  8EC4
1395  8EC4              ; Almacena la Coordenada Y de la entidad en curso.
1396  8EC4
1397  8EC4              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1398  8EC4
1399  8EC4 3A 09 8C     	ld a,(Coordenada_y)
1400  8EC7 2A 69 8C     	ld hl,(India_SP)
1401  8ECA 77           	ld (hl),a
1402  8ECB 2C           	inc l
1403  8ECC
1404  8ECC              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1405  8ECC
1406  8ECC              ;	ld de,(Scanlines_album_SP)
1407  8ECC
1408  8ECC 73           	ld (hl),e
1409  8ECD 2C           	inc l
1410  8ECE 72           	ld (hl),d
1411  8ECF 2C           	inc l
1412  8ED0
1413  8ED0 22 69 8C     	ld (India_SP),hl
1414  8ED3
1415  8ED3 C9           	ret
1416  8ED4
1417  8ED4              ; --------------------------------------------------------------------------------------------------------------
1418  8ED4              ;
1419  8ED4              ;	27/03/24
1420  8ED4              ;
1421  8ED4
1422  8ED4              Inicializa_India_y_limpia_Tabla_de_impresion
1423  8ED4
1424  8ED4 2A 69 8C     	ld hl,(India_SP)
1425  8ED7 01 4F 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1426  8EDA
1427  8EDA 79           	ld a,c
1428  8EDB 95           	sub l
1429  8EDC 28 06        	jr z,2F
1430  8EDE 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1431  8EDF              ;														; _ y pasamos a inicializar (India_SP).
1432  8EDF AF           	xor a
1433  8EE0
1434  8EE0 77           1 ld (hl),a
1435  8EE1 2C           	inc l
1436  8EE2 10 FC        	djnz 1B												; Limpia Tabla.
1437  8EE4
1438  8EE4 21 37 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1439  8EE7 22 69 8C     	ld (India_SP),hl
1440  8EEA
1441  8EEA C9           	ret
1442  8EEB
1443  8EEB              ; --------------------------------------------------------------------------------------------------------------
1444  8EEB              ;
1445  8EEB              ;	31/3/24
1446  8EEB
1447  8EEB              Ordena_tabla_de_impresion
1448  8EEB
1449  8EEB              ; 5794 T/states.
1450  8EEB              ; 6278 T/states.
1451  8EEB              ; 5310 T/states.
1452  8EEB
1453  8EEB              ; Inicializamos punteros (India_SP) e (India_2_SP).
1454  8EEB              ; Inicializamos contador de comparaciones, [C].
1455  8EEB              ; Cargamos los registros A y B para efectuar comparación.
1456  8EEB
1457  8EEB FD 2E 00     	ld iyl,0
1458  8EEE
1459  8EEE 3A 4F 8C     	ld a,(Entidades_en_curso)
1460  8EF1 FE 04        	cp 4 	;	4
1461  8EF3 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1462  8EF4
1463  8EF4 3D           	dec a
1464  8EF5 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1465  8EF6 51           	ld d,c 										; Copia de respaldo.
1466  8EF7
1467  8EF7 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1468  8EF8
1469  8EF8 21 3A 89     	ld hl,Tabla_de_pintado+3
1470  8EFB 46           	ld b,(hl)
1471  8EFC 22 6B 8C     	ld (India_2_SP),hl
1472  8EFF
1473  8EFF B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1474  8F00 DC 28 8F     	call c, Avanza_India_2_SP
1475  8F03 CC 28 8F     	call z, Avanza_India_2_SP
1476  8F06
1477  8F06 FD 2D        	dec iyl
1478  8F08 28 18        	jr z,2F
1479  8F0A
1480  8F0A
1481  8F0A              ; --------------------------------------------------------------------------------------------------------------
1482  8F0A              ;
1483  8F0A              ;	7/4/24
1484  8F0A
1485  8F0A              Trueque
1486  8F0A
1487  8F0A              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1488  8F0A              ;  			A contiene en nº de fila de (India_SP).
1489  8F0A              ;			HL contiene (India_2_SP).
1490  8F0A
1491  8F0A D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1492  8F0B E5           	push hl										; Preservo (India_2_SP).
1493  8F0C
1494  8F0C ED 5B 69 8C  	ld de,(India_SP)
1495  8F10 EB           	ex de,hl
1496  8F11 70           	ld (hl),b
1497  8F12 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1498  8F13
1499  8F13 CD 54 8F     	call Intercambia_1_byte
1500  8F16 CD 54 8F     	call Intercambia_1_byte
1501  8F19
1502  8F19
1503  8F19              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1504  8F19              ; Recuperamos (India_2_SP) en HL.
1505  8F19
1506  8F19 2A 69 8C     	ld hl,(India_SP)
1507  8F1C 7E           	ld a,(hl)
1508  8F1D
1509  8F1D E1           	pop hl
1510  8F1E D1           	pop de
1511  8F1F
1512  8F1F              ; --------------------------------------------------------------------------------------------------------------
1513  8F1F
1514  8F1F CD 28 8F     	call Avanza_India_2_SP
1515  8F22
1516  8F22 14           2 inc d
1517  8F23 15           	dec d
1518  8F24 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1519  8F25 18 D8        	jr 1B
1520  8F27
1521  8F27 C9           	ret
1522  8F28
1523  8F28              ; ----- ----- ----- ----- -----
1524  8F28
1525  8F28              Avanza_India_2_SP
1526  8F28
1527  8F28 0D           	dec c
1528  8F29 28 0A        	jr z,Avanza_punteros_indios
1529  8F2B
1530  8F2B FD 2C        	inc iyl
1531  8F2D
1532  8F2D 2C           	inc l
1533  8F2E 2C           	inc l
1534  8F2F 2C           	inc l
1535  8F30
1536  8F30 46           	ld b,(hl)
1537  8F31 22 6B 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1538  8F34
1539  8F34 C9           	ret
1540  8F35
1541  8F35              ; ----- ----- ----- ----- -----
1542  8F35
1543  8F35              Avanza_punteros_indios
1544  8F35
1545  8F35 15           	dec d
1546  8F36 28 15        	jr z,Prepara_salida
1547  8F38
1548  8F38 4A           	ld c,d
1549  8F39
1550  8F39 2A 69 8C     	ld hl,(India_SP)
1551  8F3C 2C           	inc l
1552  8F3D 2C           	inc l
1553  8F3E 2C           	inc l
1554  8F3F 7E           	ld a,(hl)
1555  8F40 22 69 8C     	ld (India_SP),hl
1556  8F43
1557  8F43 2C           	inc l
1558  8F44 2C           	inc l
1559  8F45 2C           	inc l
1560  8F46 46           	ld b,(hl)
1561  8F47 22 6B 8C     	ld (India_2_SP),hl
1562  8F4A
1563  8F4A FD 2C        	inc iyl
1564  8F4C
1565  8F4C C9           	ret
1566  8F4D
1567  8F4D              Prepara_salida
1568  8F4D
1569  8F4D 21 37 89     	ld hl,Tabla_de_pintado
1570  8F50 22 69 8C     	ld (India_SP),hl
1571  8F53 C9           	ret
1572  8F54
1573  8F54
1574  8F54 2C           Intercambia_1_byte inc l
1575  8F55 1C           	inc e
1576  8F56 46           	ld b,(hl)
1577  8F57 1A           	ld a,(de)
1578  8F58 EB           	ex de,hl
1579  8F59 70           	ld (hl),b
1580  8F5A 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1581  8F5B C9           	ret
1582  8F5C
1583  8F5C              ; -----------------------------------------------------------------------------------
1584  8F5C              ;
1585  8F5C              ;	20/01/24
1586  8F5C              ;
1587  8F5C              ;
1588  8F5C
1589  8F5C              Construye_movimientos_masticados_entidad
1590  8F5C
1591  8F5C 2A 0E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1592  8F5F E5           	push hl
1593  8F60 CD A3 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1594  8F63              ;															; _ el (Contador_de_mov_masticados).
1595  8F63 CD 60 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1596  8F66              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1597  8F66 CD 8D 99     	call Recompone_posicion_inicio
1598  8F69
1599  8F69 CD BD 96     1 call Draw
1600  8F6C CD 88 8F     	call Guarda_movimiento_masticado
1601  8F6F
1602  8F6F CD 3A 9D     	call Movimiento
1603  8F72
1604  8F72 3A 6D 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1605  8F75 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1606  8F77 28 F0        	jr z,1B
1607  8F79
1608  8F79              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1609  8F79              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1610  8F79
1611  8F79 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1612  8F7A 22 0E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1613  8F7D
1614  8F7D              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1615  8F7D
1616  8F7D CD 9E 9E     	call Situa_en_contador_general_de_mov_masticados
1617  8F80
1618  8F80              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1619  8F80              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1620  8F80
1621  8F80 ED 4B 10 8C  	ld bc,(Contador_de_mov_masticados)
1622  8F84
1623  8F84 71           	ld (hl),c
1624  8F85 23           	inc hl
1625  8F86 70           	ld (hl),b
1626  8F87
1627  8F87 C9           	ret
1628  8F88
1629  8F88              ; -----------------------------------------------------------------------------------
1630  8F88              ;
1631  8F88              ;	28/12/23
1632  8F88              ;
1633  8F88              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1634  8F88              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1635  8F88
1636  8F88              Guarda_movimiento_masticado
1637  8F88
1638  8F88 ED 73 54 8C  	ld (Stack),sp
1639  8F8C ED 7B 0E 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1640  8F90
1641  8F90 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1642  8F92 FD E5            push iy 												; Pushea Puntero_objeto.
1643  8F94
1644  8F94 ED 7B 54 8C      ld sp,(Stack)
1645  8F98
1646  8F98 2A 10 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1647  8F9B 23           	inc hl
1648  8F9C 22 10 8C     	ld (Contador_de_mov_masticados),hl
1649  8F9F
1650  8F9F CD A3 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1651  8FA2              ;															; _ el (Contador_de_mov_masticados).
1652  8FA2 C9               ret
1653  8FA3
1654  8FA3              ; --------------------------------------------------------------------------------------------------------------
1655  8FA3              ;
1656  8FA3              ;	12/1/24
1657  8FA3              ;
1658  8FA3              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1659  8FA3
1660  8FA3              Actualiza_Puntero_de_almacen_de_mov_masticados
1661  8FA3
1662  8FA3 2A 0E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1663  8FA6 01 04 00     	ld bc,4
1664  8FA9 A7           	and a
1665  8FAA ED 4A        	adc hl,bc
1666  8FAC 22 0E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1667  8FAF C9           	ret
1668  8FB0
1669  8FB0              ; --------------------------------------------------------------------------------------------------------------
1670  8FB0              ;
1671  8FB0              ;	24/03/24
1672  8FB0              ;
1673  8FB0              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1674  8FB0              ;
1675  8FB0              ;	IX contiene el puntero de impresión.
1676  8FB0              ;	DE contiene (Puntero_objeto).
1677  8FB0
1678  8FB0
1679  8FB0              Cargamos_registros_con_mov_masticado
1680  8FB0
1681  8FB0 ED 73 54 8C  	ld (Stack),sp
1682  8FB4 ED 7B 0E 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1683  8FB8
1684  8FB8 D1           	pop de 															; DE contiene Puntero_objeto
1685  8FB9 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1686  8FBB
1687  8FBB ED 73 0E 8C  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1688  8FBF ED 7B 54 8C  	ld sp,(Stack)
1689  8FC3
1690  8FC3 7B           	ld a,e
1691  8FC4 82           	add d															; Comprueba si ya no hay datos en el almacén.
1692  8FC5
1693  8FC5 CC 50 93     	call z,Reinicia_entidad_maliciosa
1694  8FC8
1695  8FC8 C9           	ret
1696  8FC9
1697  8FC9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1698  8FC9              ;
1699  8FC9              ;	22/7/24
1700  8FC9
1701  8FC9              Cargamos_registros_con_explosion
1702  8FC9
1703  8FC9
1704  8FC9 2A 0E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1705  8FCC CD 5A 90     	call Extrae_address
1706  8FCF
1707  8FCF 5D           	ld e,l
1708  8FD0 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1709  8FD1
1710  8FD1 DD 2A 0C 8C  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1711  8FD5
1712  8FD5 C9           	ret
1713  8FD6
1714  8FD6
1715  8FD6              Cargamos_registros_con_explosion_Amadeus
1716  8FD6
1717  8FD6 2A C3 89     	ld hl,(Pamm_Amadeus)
1718  8FD9 CD 5A 90     	call Extrae_address
1719  8FDC
1720  8FDC 5D           	ld e,l
1721  8FDD 54           	ld d,h
1722  8FDE
1723  8FDE DD 2A C1 89  	ld ix,(p.imp.amadeus)
1724  8FE2
1725  8FE2 C9           	ret
1726  8FE3
1727  8FE3              ; --------------------------------------------------------------------------------------------------------------
1728  8FE3              ;
1729  8FE3              ;	17/06/24
1730  8FE3              ;
1731  8FE3              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1732  8FE3              ;
1733  8FE3              ;	IX contiene el puntero de impresión.
1734  8FE3              ;	DE contiene (Puntero_objeto).
1735  8FE3
1736  8FE3
1737  8FE3              Cargamos_registros_con_mov_masticado_Amadeus
1738  8FE3
1739  8FE3 ED 73 54 8C  	ld (Stack),sp
1740  8FE7 ED 7B C3 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1741  8FEB D1           	pop de 															; DE contiene Puntero_objeto
1742  8FEC DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1743  8FEE DD 22 C1 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1744  8FF2 ED 7B 54 8C  	ld sp,(Stack)
1745  8FF6 C9           	ret
1746  8FF7
1747  8FF7              ; ---------------------------------------------------------------------------------------------------------------------
1748  8FF7              ;
1749  8FF7              ;	18/6/24
1750  8FF7              ;
1751  8FF7              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1752  8FF7
1753  8FF7              Genera_datos_de_impresion_Amadeus
1754  8FF7
1755  8FF7 3A C0 89     	ld a,(Impacto_Amadeus)
1756  8FFA A7           	and a
1757  8FFB 20 03        	jr nz,1F
1758  8FFD
1759  8FFD              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1760  8FFD              ; _apuntando a la correspondiente explosión.
1761  8FFD
1762  8FFD CD E3 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1763  9000
1764  9000 DD 7D        1 ld a,ixl
1765  9002 E6 1F        	and $1f
1766  9004 32 BD 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1767  9007
1768  9007 2A 67 8C     	ld hl,(Scanlines_album_SP)
1769  900A E5           	push hl
1770  900B
1771  900B 2A 5C 8C     	ld hl,(Album_de_pintado_Amadeus)
1772  900E 22 67 8C     	ld (Scanlines_album_SP),hl
1773  9011
1774  9011 CD A5 94     	call Genera_datos_de_impresion
1775  9014
1776  9014 E1           	pop hl
1777  9015 22 67 8C     	ld (Scanlines_album_SP),hl
1778  9018
1779  9018 C9           	ret
1780  9019
1781  9019              ; ---------------------------------------------------------------------------------------------------------------------
1782  9019              ;
1783  9019              ;	13/03/24
1784  9019              ;
1785  9019
1786  9019              Inicia_albumes_de_lineas
1787  9019
1788  9019              ;	Entidades.
1789  9019
1790  9019 21 00 80     	ld hl,Scanlines_album
1791  901C 22 58 8C     	ld (Album_de_pintado),hl
1792  901F 22 67 8C     	ld (Scanlines_album_SP),hl
1793  9022
1794  9022 21 1A 81     	ld hl,Scanlines_album_2
1795  9025 22 5A 8C     	ld (Album_de_borrado),hl
1796  9028
1797  9028 C9           	ret
1798  9029
1799  9029              Inicia_albumes_de_lineas_Amadeus
1800  9029
1801  9029 21 34 82     	ld hl,Amadeus_scanlines_album
1802  902C 22 5C 8C     	ld (Album_de_pintado_Amadeus),hl
1803  902F 21 58 82     	ld hl,Amadeus_scanlines_album_2
1804  9032 22 5E 8C     	ld (Album_de_borrado_Amadeus),hl
1805  9035
1806  9035 C9           	ret
1807  9036
1808  9036              ; ---------------------------------------------------------------------------------------------------------------------
1809  9036              ;
1810  9036              ; 8/1/23
1811  9036              ;
1812  9036              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1813  9036              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1814  9036              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1815  9036
1816  9036              ; Destruye HL y DE !!!!!
1817  9036
1818  9036              Inicia_punteros_de_cajas
1819  9036
1820  9036 21 AA 89     	ld hl,Indice_de_cajas_de_entidades
1821  9039 CD 5A 90         call Extrae_address
1822  903C 22 47 8C         ld (Puntero_store_caja),hl
1823  903F 21 AC 89     	ld hl,Indice_de_cajas_de_entidades+2
1824  9042 22 4B 8C     	ld (Indice_restore_caja),hl
1825  9045 CD 5A 90     	call Extrae_address
1826  9048 22 49 8C     	ld (Puntero_restore_caja),hl
1827  904B C9               ret
1828  904C
1829  904C              ; *************************************************************************************************************************************************************
1830  904C              ;
1831  904C              ; 8/1/23
1832  904C              ;
1833  904C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1834  904C
1835  904C 21 64 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1836  904F 22 6F 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1837  9052 C9           	ret
1838  9053 21 56 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1839  9056 22 71 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1840  9059 C9           	ret
1841  905A
1842  905A              ; *************************************************************************************************************************************************************
1843  905A              ;
1844  905A              ; 20/10/22
1845  905A              ;
1846  905A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1847  905A              ;
1848  905A              ; Destruye el puntero y DE !!!!!
1849  905A
1850  905A 5E           Extrae_address ld e,(hl)
1851  905B 23           	inc hl
1852  905C 56           	ld d,(hl)
1853  905D 2B           	dec hl
1854  905E EB           	ex de,hl
1855  905F C9           	ret
1856  9060
1857  9060              ; *************************************************************************************************************************************************************
1858  9060              ;
1859  9060              ;	20/1/24
1860  9060              ;
1861  9060              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1862  9060              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1863  9060              ;
1864  9060              ;   Destruye HL y BC !!!!!,
1865  9060              ;
1866  9060              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1867  9060              ;					"0" ..... Izquierda.
1868  9060
1869  9060              Inicia_Puntero_objeto
1870  9060
1871  9060 3A 26 8C     	ld a,(Cuad_objeto)
1872  9063 E6 01        	and 1
1873  9065 F5           	push af
1874  9066 CC 82 90     	call z,Inicia_puntero_objeto_izq
1875  9069 F1           	pop af
1876  906A C8           	ret z
1877  906B CD 6F 90     	call Inicia_puntero_objeto_der
1878  906E C9           	ret
1879  906F
1880  906F              ; Arrancamos desde la parte izquierda de la pantalla.
1881  906F              ; Iniciamos (Indice_Sprite_der).
1882  906F
1883  906F 2A 1C 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1884  9072 22 20 8C     	ld (Puntero_DESPLZ_der),hl
1885  9075 CD 5A 90     	call Extrae_address
1886  9078 22 19 8C     	ld (Puntero_objeto),hl
1887  907B
1888  907B 2A 1E 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1889  907E 22 22 8C     	ld (Puntero_DESPLZ_izq),hl
1890  9081 C9           	ret
1891  9082
1892  9082              ; Arrancamos desde la parte derecha de la pantalla.
1893  9082              ; Iniciamos (Indice_Sprite_izq).
1894  9082
1895  9082 2A 1E 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1896  9085 22 22 8C     	ld (Puntero_DESPLZ_izq),hl
1897  9088 CD 5A 90     	call Extrae_address
1898  908B 22 19 8C     	ld (Puntero_objeto),hl
1899  908E
1900  908E 2A 1C 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1901  9091 22 20 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1902  9094 C9           	ret
1903  9095
1904  9095              ; **************************************************************************************************
1905  9095              ;
1906  9095              ;	06/07/24
1907  9095              ;
1908  9095              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1909  9095
1910  9095              Restore_entidad
1911  9095
1912  9095 2A 47 8C     	ld hl,(Puntero_store_caja)
1913  9098 7E           	ld a,(hl)
1914  9099 A7           	and a
1915  909A CC A8 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1916  909D 28 F6        	jr z,Restore_entidad
1917  909F
1918  909F 11 07 8C     	ld de,Bandeja_DRAW
1919  90A2 01 0C 00     	ld bc,12
1920  90A5 ED B0        	ldir
1921  90A7 C9           	ret
1922  90A8
1923  90A8              ; **************************************************************************************************
1924  90A8              ;
1925  90A8              ;	08/05/23
1926  90A8              ;
1927  90A8              ;	Incrementamos los dos punteros de entidades. (+1).
1928  90A8
1929  90A8              Incrementa_punteros_de_cajas
1930  90A8
1931  90A8 2A 49 8C     	ld hl,(Puntero_restore_caja)
1932  90AB 22 47 8C     	ld (Puntero_store_caja),hl
1933  90AE 2A 4B 8C     	ld hl,(Indice_restore_caja)
1934  90B1 23           	inc hl
1935  90B2 23           	inc hl
1936  90B3 22 4B 8C     	ld (Indice_restore_caja),hl
1937  90B6 CD 5A 90         call Extrae_address
1938  90B9 22 49 8C         ld (Puntero_restore_caja),hl
1939  90BC C9               ret
1940  90BD
1941  90BD              ; -----------------------------------------------------------
1942  90BD
1943  90BD              ; Teclado.
1944  90BD
1945  90BD 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1946  90BF DB FE        	in a,($fe)
1947  90C1 E6 01        	and $01
1948  90C3 28 02        	jr z,1f
1949  90C5 18 F6        	jr Pulsa_ENTER
1950  90C7 C9           1 ret
1951  90C8
1952  90C8              ; **************************************************************************************************
1953  90C8              ;
1954  90C8              ; Temporización.
1955  90C8
1956  90C8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1957  90C8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1958  90C8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1959  90C8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1960  90C8
1961  90C8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1962  90C8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1963  90C8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1964  90C8
1965  90C8              ; A partir de $4f61 no hace falta DELAY.
1966  90C8
1967  90C8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1968  90C8
1969  90C8              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1970  90C8              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1971  90C8              ;	LD A,B
1972  90C8              ;	AND A
1973  90C8              ;	JR NZ,wait
1974  90C8              ;	RET
1975  90C8
1976  90C8              ; ---------------------------------------------------------------------------------------------------------------
1977  90C8              ;
1978  90C8              ;	13/07/24
1979  90C8              ;
1980  90C8
1981  90C8              Inicia_Shield
1982  90C8
1983  90C8 21 8C 8C     	ld hl,Datos_Shield
1984  90CB 22 90 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1985  90CE
1986  90CE 7E           	ld a,(hl)
1987  90CF 32 93 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1988  90D2
1989  90D2 3E 01        	ld a,1
1990  90D4 32 94 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1991  90D7
1992  90D7 C9           	ret
1993  90D8
1994  90D8              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1995  90D8              ;
1996  90D8              ;	4/6/24
1997  90D8              ;
1998  90D8              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1999  90D8              ;
2000  90D8              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2001  90D8              ;
2002  90D8
2003  90D8              Actualiza_pantalla
2004  90D8
2005  90D8 3E 02        	ld a,2
2006  90DA D3 FE        	out ($fe),a
2007  90DC
2008  90DC 3A 6D 8C     	ld a,(Ctrl_3)
2009  90DF              ;	bit 0,a
2010  90DF              ;	jr z,Ejecuta_escudo									 		  	; No pintamos si el FRAME no se ha completado.
2011  90DF CB 57        	bit 2,a
2012  90E1 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2013  90E3
2014  90E3              Borrando_entidades
2015  90E3
2016  90E3 2A 67 8C     	ld hl,(Scanlines_album_SP)
2017  90E6 CD 5A 90     	call Extrae_address
2018  90E9 24           	inc h
2019  90EA 25           	dec h
2020  90EB 28 05        	jr z,Pintando_entidades
2021  90ED CD 9A 95     	call Pinta_Sprites
2022  90F0 18 F1        	jr Borrando_entidades
2023  90F2
2024  90F2              Pintando_entidades
2025  90F2
2026  90F2 2A 69 8C     	ld hl,(India_SP)
2027  90F5 2C           	inc l
2028  90F6 CD 5A 90     	call Extrae_address
2029  90F9 24           	inc h
2030  90FA 25           	dec h
2031  90FB 28 0E        	jr z,Ejecuta_escudo
2032  90FD 1C           	inc e
2033  90FE 1C           	inc e
2034  90FF ED 53 69 8C  	ld (India_SP),de
2035  9103 CD 5A 90     	call Extrae_address
2036  9106 CD 9A 95     	call Pinta_Sprites
2037  9109 18 E7        	jr Pintando_entidades
2038  910B
2039  910B              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2040  910B
2041  910B              Ejecuta_escudo
2042  910B
2043  910B 3A 92 8C     	ld a,(Shield)
2044  910E A7           	and a
2045  910F 20 2F        	jr nz,Aplica_Shield
2046  9111
2047  9111              Borrando_Amadeus
2048  9111
2049  9111 21 6D 8C     	ld hl,Ctrl_3
2050  9114 CB 6E        	bit 5,(hl)
2051  9116 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2052  9118
2053  9118 2A 5E 8C     	ld hl,(Album_de_borrado_Amadeus)
2054  911B CD 5A 90     	call Extrae_address
2055  911E 24           	inc h
2056  911F 25           	dec h
2057  9120 28 03        	jr z,Pintando_Amadeus
2058  9122 CD 9A 95     	call Pinta_Sprites
2059  9125
2060  9125              Pintando_Amadeus
2061  9125
2062  9125 2A 5C 8C     	ld hl,(Album_de_pintado_Amadeus)
2063  9128 CD 5A 90     	call Extrae_address
2064  912B 24           	inc h
2065  912C 25           	dec h
2066  912D 28 03        	jr z,1F
2067  912F CD 9A 95     	call Pinta_Sprites
2068  9132
2069  9132              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2070  9132
2071  9132 21 6D 8C     1 ld hl,Ctrl_3
2072  9135 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2073  9137 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2074  9139 CB AE        	res 5,(hl)
2075  913B
2076  913B 3E 01        	ld a,1												; Borde azul.
2077  913D D3 FE        	out ($fe),a
2078  913F
2079  913F C9           	ret
2080  9140
2081  9140
2082  9140
2083  9140              Aplica_Shield
2084  9140
2085  9140              ;	Bit 1 "1" (Shield_3) Sólo borra.
2086  9140              ;		  "0"     ""     Borra/Pinta.
2087  9140              ;	Bit 2    ""  RET.	 No borra, no pinta.
2088  9140
2089  9140 21 94 8C     	ld hl,Shield_3
2090  9143
2091  9143 CB 5E        	bit 3,(hl)
2092  9145 20 DE        	jr nz,Pintando_Amadeus
2093  9147
2094  9147 CB 56        	bit 2,(hl)
2095  9149 20 E7        	jr nz,1B
2096  914B
2097  914B CB 4E        	bit 1,(hl)
2098  914D C4 54 91     	call nz,Borra_Amadeus_shield
2099  9150
2100  9150 28 BF        	jr z,Borrando_Amadeus
2101  9152 18 DE        	jr 1B
2102  9154
2103  9154              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2104  9154
2105  9154              Borra_Amadeus_shield
2106  9154
2107  9154 3A 6D 8C     	ld a,(Ctrl_3)
2108  9157 CB 6F        	bit 5,a
2109  9159 28 08        	jr z,1F
2110  915B
2111  915B 2A 5E 8C     	ld hl,(Album_de_borrado_Amadeus)
2112  915E CD 5A 90     	call Extrae_address
2113  9161 18 06        	jr 2F
2114  9163
2115  9163 2A 5C 8C     1 ld hl,(Album_de_pintado_Amadeus)
2116  9166 CD 5A 90     	call Extrae_address
2117  9169
2118  9169 CD 9A 95     2 call Pinta_Sprites
2119  916C
2120  916C AF           	xor a
2121  916D 3C           	inc a											; Asegura NZ en la salida de la rutina.
2122  916E
2123  916E C9           	ret
2124  916F
2125  916F              Pinta_Amadeus_shield
2126  916F
2127  916F 2A 5C 8C     	ld hl,(Album_de_pintado_Amadeus)
2128  9172 CD 5A 90     	call Extrae_address
2129  9175 CD 9A 95     	call Pinta_Sprites
2130  9178
2131  9178 AF           	xor a
2132  9179 3C           	inc a											; Asegura NZ en la salida de la rutina.
2133  917A
2134  917A C9           	ret
2135  917B
2136  917B              Borra_Pinta_Amadeus_shield
2137  917B
2138  917B CD 54 91     	call Borra_Amadeus_shield
2139  917E CD 6F 91     	call Pinta_Amadeus_shield
2140  9181 C9           	ret
2141  9182
2142  9182              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2143  9182              ;
2144  9182              ;	19/6/24
2145  9182              ;
2146  9182
2147  9182              Teclado
2148  9182
2149  9182              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2150  9182
2151  9182 3E F7        	ld a,$f7												; "5" para disparar.
2152  9184 DB FE        	in a,($fe)
2153  9186 E6 10        	and $10
2154  9188
2155  9188 CC B4 9E     	call z,Genera_disparo_Amadeus
2156  918B
2157  918B 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2158  918D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2159  918F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2160  9191 CC 07 9D         call z,Amadeus_a_izquierda
2161  9194
2162  9194 3E F7        	ld a,$f7
2163  9196 DB FE        	in a,($fe)
2164  9198 E6 01        	and $01
2165  919A C8           	ret z
2166  919B
2167  919B 3E F7        	ld a,$f7
2168  919D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2169  919F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2170  91A1 CC 1F 9D     	call z,Amadeus_a_derecha
2171  91A4
2172  91A4 C9           	ret
2173  91A5
2174  91A5              ; ------------------------------------------------------------------------------------------------------------------------
2175  91A5              ;
2176  91A5              ;	06/07/24
2177  91A5              ;
2178  91A5
2179  91A5              Genera_explosion
2180  91A5
2181  91A5 21 7E 8C     	ld hl,Clock_explosion
2182  91A8 35           	dec (hl)
2183  91A9 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2184  91AB
2185  91AB              Borra_entidad_colisionada
2186  91AB
2187  91AB CD C4 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2188  91AE CD C9 8F     	call Cargamos_registros_con_explosion
2189  91B1 CD A5 94     	call Genera_datos_de_impresion
2190  91B4
2191  91B4 AF           	xor a
2192  91B5 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2193  91B6
2194  91B6 C9           	ret
2195  91B7
2196  91B7              Siguiente_frame_explosion
2197  91B7
2198  91B7 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2199  91B9
2200  91B9              ; Avanza Frame de explosión.
2201  91B9
2202  91B9 2A 0E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2203  91BC 01 D4 87     	ld bc,Indice_Explosion_entidades+4
2204  91BF
2205  91BF 79           	ld a,c
2206  91C0 95           	sub l
2207  91C1 20 0B        	jr nz,1F
2208  91C3
2209  91C3              ; Fín de la entidad !!!!!!!!!!!!!
2210  91C3
2211  91C3 21 4E 8C     	ld hl,Numero_parcial_de_entidades
2212  91C6 35           	dec (hl)
2213  91C7 23           	inc hl
2214  91C8 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2215  91C9
2216  91C9 CD 25 93     	call Limpiamos_bandeja_DRAW
2217  91CC 18 DD        	jr Borra_entidad_colisionada
2218  91CE
2219  91CE 2C           1 inc l
2220  91CF 2C           	inc l
2221  91D0 22 0E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
2222  91D3 18 D6        	jr Borra_entidad_colisionada
2223  91D5
2224  91D5              ; ----- ----- ----- ----- -----
2225  91D5
2226  91D5              Genera_explosion_Amadeus
2227  91D5
2228  91D5 21 7F 8C     	ld hl,Clock_explosion_Amadeus
2229  91D8 35           	dec (hl)
2230  91D9 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2231  91DB
2232  91DB              Borra_Amadeus_impactado
2233  91DB
2234  91DB CD 54 8E     	call Change_Amadeus
2235  91DE CD D6 8F     	call Cargamos_registros_con_explosion_Amadeus
2236  91E1 CD F7 8F     	call Genera_datos_de_impresion_Amadeus
2237  91E4
2238  91E4 21 6D 8C     	ld hl,Ctrl_3
2239  91E7 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2240  91E9
2241  91E9 AF           	xor a
2242  91EA 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2243  91EB
2244  91EB C9           	ret
2245  91EC
2246  91EC              Siguiente_frame_explosion_Amadeus
2247  91EC
2248  91EC 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2249  91EE
2250  91EE              ; Avanza Frame de explosión.
2251  91EE
2252  91EE 2A C3 89     	ld hl,(Pamm_Amadeus)
2253  91F1 01 94 88     	ld bc,Indice_Explosion_Amadeus+4
2254  91F4
2255  91F4 79           	ld a,c
2256  91F5 95           	sub l
2257  91F6 20 0B        	jr nz,1F
2258  91F8
2259  91F8              ; Fín de Amadeus !!!!!!!!!!!!!
2260  91F8              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2261  91F8
2262  91F8 AF           	xor a
2263  91F9 32 C0 89     	ld (Impacto_Amadeus),a
2264  91FC 21 6D 8C     	ld hl,Ctrl_3
2265  91FF CB F6        	set 6,(hl)
2266  9201
2267  9201 18 D8        	jr Borra_Amadeus_impactado
2268  9203
2269  9203 2C           1 inc l
2270  9204 2C           	inc l
2271  9205 22 C3 89     	ld (Pamm_Amadeus),hl
2272  9208 18 D1        	jr Borra_Amadeus_impactado
2273  920A
2274  920A              ; ---------------------------------------------------------------
2275  920A
2276  920A              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 920A              ; ******************************************************************************************************************************************************************************************
   2+ 920A              ;
   3+ 920A              ;   21/04/24
   4+ 920A              ;
   5+ 920A              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 920A              ;   (XOR) bit a bit.
   7+ 920A              ;
   8+ 920A              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 920A
  10+ 920A              Derivando_RND
  11+ 920A
  12+ 920A 21 30 89         ld hl,Numeros_aleatorios
  13+ 920D
  14+ 920D ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 920F C5               push bc
  16+ 9210              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9210 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9213              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9213
  20+ 9213 A7           6 and a                                 ; Carry a "0".
  21+ 9214 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9216 30 02            jr nc,1F
  23+ 9218
  24+ 9218 CB C1            set 0,c
  25+ 921A
  26+ 921A 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 921B E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 921D 5F               ld e,a
  29+ 921E
  30+ 921E 7A               ld a,d
  31+ 921F E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9221 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9223
  34+ 9223 CB 3F            srl a
  35+ 9225
  36+ 9225 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9226
  38+ 9226 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9227 28 04            jr z,4F
  40+ 9229
  41+ 9229 CB FF            set 7,a
  42+ 922B 18 02            jr 5F
  43+ 922D
  44+ 922D CB BF        4 res 7,a
  45+ 922F
  46+ 922F CB 21        5 sla c
  47+ 9231 10 E0            djnz 6B
  48+ 9233
  49+ 9233 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9234
  51+ 9234 77               ld (hl),a
  52+ 9235 23               inc hl
  53+ 9236 C1               pop bc
  54+ 9237 10 D4            djnz 3B
  55+ 9239
  56+ 9239 C9               ret
  57+ 923A
  58+ 923A
  59+ 923A
# file closed: RND_Derivando.asm
2277  923A              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 923A              ;---------------------------------------------------------------------------------------------------------------
   2+ 923A              ;
   3+ 923A              ;   8/3/24
   4+ 923A              ;
   5+ 923A              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 923A              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 923A              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 923A              ;	_ de la 1ª entidad del Nivel.
   9+ 923A              ;
  10+ 923A              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 923A
  12+ 923A              ;	MODIFICA: HL,DE y A.
  13+ 923A              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 923A
  15+ 923A              Inicializa_Nivel
  16+ 923A
  17+ 923A 2A 88 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 923D CD 5A 90     	call Extrae_address
  19+ 9240 7E           	ld a,(hl)
  20+ 9241 32 4D 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9244 23           	inc hl
  22+ 9245 CD 52 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9248 22 8A 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 924B CD 5B 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 924E
  26+ 924E CD 6C 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9251 C9           	ret
  28+ 9252
  29+ 9252              ; ----------------------
  30+ 9252
  31+ 9252 11 2C 8C     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9255 01 04 00     	ld bc,4
  33+ 9258 ED B0        	ldir
  34+ 925A C9           	ret
  35+ 925B
  36+ 925B 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 925C CD F6 93         call Calcula_salto_en_BC
  38+ 925F 21 52 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9262 A7               and a
  40+ 9263 ED 4A            adc hl,bc
  41+ 9265 CD 5A 90         call Extrae_address
  42+ 9268 22 38 8C         ld (Puntero_indice_mov),hl
  43+ 926B C9               ret
  44+ 926C
  45+ 926C 3A 07 8C     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 926F CD F6 93     	call Calcula_salto_en_BC
  47+ 9272 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9275 A7               and a
  49+ 9276 ED 4A            adc hl,bc
  50+ 9278 CD 5A 90         call Extrae_address
  51+ 927B 22 0E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 927E C9           	ret
  53+ 927F
  54+ 927F              ;---------------------------------------------------------------------------------------------------------------
  55+ 927F              ;
  56+ 927F              ;   5/1/24
  57+ 927F              ;
  58+ 927F              ;	Destruye A,BC,HL,DE
  59+ 927F
  60+ 927F              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 927F              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 927F
  63+ 927F              Inicia_Entidades
  64+ 927F
  65+ 927F              ; Preparamos los punteros de las cajas de entidades:
  66+ 927F
  67+ 927F CD 36 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9282              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9282 CD 3E 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 9285
  71+ 9285 2A 8A 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 9288
  73+ 9288 22 8A 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 928B
  75+ 928B CD A4 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 928E
  77+ 928E 2A 8A 8C     	ld hl,(Datos_de_nivel)
  78+ 9291
  79+ 9291              ; En este punto:
  80+ 9291              ;
  81+ 9291              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 9291              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 9291
  84+ 9291 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 9292
  86+ 9292 7E           	ld a,(hl)
  87+ 9293 CD 10 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 9296
  89+ 9296 CD 08 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9299
  91+ 9299              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9299
  93+ 9299 CD C6 93     	call Busca_mov_masticados_segun_tipo
  94+ 929C
  95+ 929C A7           	and a
  96+ 929D 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 929F
  98+ 929F              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 929F
 100+ 929F              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 929F              ;	_ de este tipo de entidad.
 102+ 929F
 103+ 929F CD 9E 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92A2 CD AB 9E     	call Transfiere_datos_de_contadores
 105+ 92A5
 106+ 92A5 18 06        	jr 4F
 107+ 92A7
 108+ 92A7 CD 5C 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92AA
 110+ 92AA              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92AA              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92AA              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92AA              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92AA              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92AA
 116+ 92AA CD 84 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92AD              ;																; _ Mov_masticados ya generados.
 118+ 92AD
 119+ 92AD CD B0 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92B0
 121+ 92B0 DD E5        	push ix
 122+ 92B2 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92B3
 124+ 92B3 D5           	push de
 125+ 92B4 CD 79 94     	call Genera_coordenadas
 126+ 92B7
 127+ 92B7 ED 5B 67 8C  	ld de,(Scanlines_album_SP)
 128+ 92BB CD C4 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92BE D1           	pop de
 130+ 92BF
 131+ 92BF CD A5 94     	call Genera_datos_de_impresion
 132+ 92C2              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92C2              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92C2              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92C2              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92C2
 137+ 92C2 CD 48 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92C5
 139+ 92C5              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92C5
 141+ 92C5 ED 5B 47 8C  	ld de,(Puntero_store_caja)
 142+ 92C9 CD 35 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92CC
 144+ 92CC CD 25 93     	call Limpiamos_bandeja_DRAW
 145+ 92CF CD A8 90     	call Incrementa_punteros_de_cajas
 146+ 92D2
 147+ 92D2              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92D2              ; _ entidad del Nivel.
 149+ 92D2
 150+ 92D2 3A 6E 8C     	ld a,(Ctrl_4)
 151+ 92D5 E6 F0        	and $f0
 152+ 92D7 32 6E 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92DA
 154+ 92DA              ; Siguiente entidad del Nivel.
 155+ 92DA
 156+ 92DA 2A 8A 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92DD 23           	inc hl 														; _ entidad del Nivel.
 158+ 92DE
 159+ 92DE C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92DF
 161+ 92DF 10 A7        	djnz 2B
 162+ 92E1
 163+ 92E1 C9           	ret
 164+ 92E2
 165+ 92E2              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92E2              ;
 167+ 92E2              ;	27/5/24
 168+ 92E2              ;
 169+ 92E2              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92E2              ;
 171+ 92E2
 172+ 92E2              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92E2              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92E2
 175+ 92E2 21 3A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92E5 CD 08 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92E8
 178+ 92E8
 179+ 92E8              Construye_movimientos_masticados_Amadeus
 180+ 92E8
 181+ 92E8 2A 0E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92EB CD A3 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92EE              ;															; _ el (Contador_de_mov_masticados).
 184+ 92EE CD 60 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 92F1              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 92F1
 187+ 92F1              ; Generamos movimientos masticados de Amadeus.
 188+ 92F1
 189+ 92F1 06 79        	ld b,121												; $0079, 121d.
 190+ 92F3
 191+ 92F3 C5           1 push bc
 192+ 92F4 CD BD 96     	call Draw
 193+ 92F7 CD 88 8F     	call Guarda_movimiento_masticado
 194+ 92FA
 195+ 92FA CD 31 9A     	call Mov_right
 196+ 92FD CD 31 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9300
 198+ 9300 C1           	pop bc
 199+ 9301 10 F0        	djnz 1B
 200+ 9303
 201+ 9303              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9303
 203+ 9303              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9303              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9303
 206+ 9303 2A 0E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9306 01 08 00     	ld bc,8
 208+ 9309 A7           	and a
 209+ 930A ED 42        	sbc hl,bc
 210+ 930C 22 0E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 930F
 212+ 930F C9           	ret
 213+ 9310
 214+ 9310              ; ---------------------------------------------------------------------
 215+ 9310              ;
 216+ 9310              ;	10/02/24
 217+ 9310              ;
 218+ 9310              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9310              ;
 220+ 9310              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9310
 222+ 9310              Definicion_segun_tipo
 223+ 9310
 224+ 9310 CD F6 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9313 21 1C 8A     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9316 CD FE 93     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9319 C9           	ret
 228+ 931A
 229+ 931A              ; ---------------------------------------------------------------------
 230+ 931A              ;
 231+ 931A              ;	6/7/24
 232+ 931A
 233+ 931A
 234+ 931A              Store_Restore_cajas
 235+ 931A
 236+ 931A ED 5B 47 8C  	ld de,(Puntero_store_caja)
 237+ 931E CD 35 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9321 CD A8 90     	call Incrementa_punteros_de_cajas
 239+ 9324 C9           	ret
 240+ 9325
 241+ 9325              ; ---------------------------------------------------------------------
 242+ 9325              ;
 243+ 9325              ;	23/6/24
 244+ 9325              ;
 245+ 9325              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9325              ;
 247+ 9325              ;	MODIFY: HL
 248+ 9325
 249+ 9325              Limpiamos_bandeja_DRAW
 250+ 9325
 251+ 9325 ED 73 54 8C  	ld (Stack),sp
 252+ 9329 31 2C 8C     	ld sp,Vel_left
 253+ 932C
 254+ 932C AF           	xor a
 255+ 932D 67           	ld h,a
 256+ 932E 6F           	ld l,a
 257+ 932F
 258+ 932F E5           	push hl
 259+ 9330 E5           	push hl
 260+ 9331 E5           	push hl
 261+ 9332 E5           	push hl
 262+ 9333 E5           	push hl
 263+ 9334 E5           	push hl
 264+ 9335 E5           	push hl
 265+ 9336 E5           	push hl
 266+ 9337 E5           	push hl
 267+ 9338 E5           	push hl
 268+ 9339 E5           	push hl
 269+ 933A E5           	push hl
 270+ 933B E5           	push hl
 271+ 933C E5           	push hl
 272+ 933D E5           	push hl
 273+ 933E E5           	push hl
 274+ 933F E5           	push hl
 275+ 9340 E5           	push hl
 276+ 9341
 277+ 9341 33           	inc sp
 278+ 9342
 279+ 9342 E5           	push hl
 280+ 9343 ED 7B 54 8C  	ld sp,(Stack)
 281+ 9347
 282+ 9347 C9           	ret
 283+ 9348
 284+ 9348              ; ---------------------------------------------------------------------
 285+ 9348              ;
 286+ 9348              ;	24/03/24
 287+ 9348
 288+ 9348 2A 10 8C     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 934B 2B           	dec hl
 290+ 934C 22 10 8C     	ld (Contador_de_mov_masticados),hl
 291+ 934F C9           	ret
 292+ 9350
 293+ 9350              ; ---------------------------------------------------------------------
 294+ 9350              ;
 295+ 9350              ;	8/5/24
 296+ 9350
 297+ 9350              Reinicia_entidad_maliciosa
 298+ 9350
 299+ 9350              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9350
 301+ 9350 CD 9E 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9353 CD AB 9E     	call Transfiere_datos_de_contadores
 303+ 9356
 304+ 9356              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9356
 306+ 9356 3A 07 8C     	ld a,(Tipo)
 307+ 9359 CD 10 93     	call Definicion_segun_tipo
 308+ 935C
 309+ 935C E5           	push hl
 310+ 935D DD E1        	pop ix
 311+ 935F
 312+ 935F DD 6E 0B     	ld l,(ix+11)
 313+ 9362 DD 66 0C     	ld h,(ix+12)
 314+ 9365
 315+ 9365 22 0E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9368
 317+ 9368 CD B0 8F     	call Cargamos_registros_con_mov_masticado
 318+ 936B
 319+ 936B              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 936B              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 936B              ; Ejemplos.
 322+ 936B
 323+ 936B              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 936B              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 936B              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 936B              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 936B              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 936B
 329+ 936B 21 0A 8C     	ld hl,Contador_de_vueltas
 330+ 936E CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9370
 332+ 9370 7E           	ld a,(hl)
 333+ 9371 CB 2F        	sra a
 334+ 9373 CB 2F        	sra a
 335+ 9375
 336+ 9375 32 12 8C     	ld (Velocidad),a
 337+ 9378
 338+ 9378 3E 40        	ld a,$40
 339+ 937A BE           	cp (hl)
 340+ 937B C0           	ret nz
 341+ 937C
 342+ 937C              ; Límitador.
 343+ 937C
 344+ 937C              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 937C
 346+ 937C CB 2E        	sra (hl)
 347+ 937E 21 12 8C     	ld hl,Velocidad
 348+ 9381 CB 2E        	sra (hl)
 349+ 9383
 350+ 9383 C9           	ret
 351+ 9384
 352+ 9384              ; ---------------------------------------------------------------------
 353+ 9384              ;
 354+ 9384              ;	22/01/24
 355+ 9384
 356+ 9384 21 6E 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 9387 CB 46        	bit 0,(hl)
 358+ 9389 20 0D        	jr nz,1F
 359+ 938B CB 4E        	bit 1,(hl)
 360+ 938D 20 0C        	jr nz,2F
 361+ 938F CB 56        	bit 2,(hl)
 362+ 9391 20 0B        	jr nz,3F
 363+ 9393 CB 5E        	bit 3,(hl)
 364+ 9395 20 0A        	jr nz,4F
 365+ 9397 C9           	ret
 366+ 9398
 367+ 9398 CB E6        1 set 4,(hl)
 368+ 939A C9           	ret
 369+ 939B CB EE        2 set 5,(hl)
 370+ 939D C9           	ret
 371+ 939E CB F6        3 set 6,(hl)
 372+ 93A0 C9           	ret
 373+ 93A1 CB FE        4 set 7,(hl)
 374+ 93A3 C9           	ret
 375+ 93A4
 376+ 93A4              ; ---------------------------------------------------------------------
 377+ 93A4              ;
 378+ 93A4              ;	23/01/24
 379+ 93A4              ;
 380+ 93A4              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93A4              ;
 382+ 93A4              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93A4              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93A4              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93A4              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93A4
 387+ 93A4              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93A4
 389+ 93A4 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93A5 3D           	dec a
 391+ 93A6 20 06        	jr nz,1F
 392+ 93A8
 393+ 93A8              ; --- Tipo_1
 394+ 93A8
 395+ 93A8 21 6E 8C     	ld hl,Ctrl_4
 396+ 93AB CB C6        	set 0,(hl)
 397+ 93AD C9           	ret
 398+ 93AE
 399+ 93AE 3D           1 dec a
 400+ 93AF 20 06        	jr nz,2F
 401+ 93B1
 402+ 93B1              ; --- Tipo_2
 403+ 93B1
 404+ 93B1 21 6E 8C     	ld hl,Ctrl_4
 405+ 93B4 CB CE        	set 1,(hl)
 406+ 93B6 C9           	ret
 407+ 93B7
 408+ 93B7 3D           2 dec a
 409+ 93B8 20 06        	jr nz,3F
 410+ 93BA
 411+ 93BA              ; --- Tipo_3
 412+ 93BA
 413+ 93BA 21 6E 8C     	ld hl,Ctrl_4
 414+ 93BD CB D6        	set 2,(hl)
 415+ 93BF C9           	ret
 416+ 93C0
 417+ 93C0              ; --- Tipo_3
 418+ 93C0
 419+ 93C0 21 6E 8C     3 ld hl,Ctrl_4
 420+ 93C3 CB D6        	set 2,(hl)
 421+ 93C5 C9           	ret
 422+ 93C6
 423+ 93C6              ; ---------------------------------------------------------------------
 424+ 93C6              ;
 425+ 93C6              ;	22/01/24
 426+ 93C6
 427+ 93C6 21 6E 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93C9 CB 46        	bit 0,(hl)
 429+ 93CB 20 0E        	jr nz,1F
 430+ 93CD
 431+ 93CD CB 4E        	bit 1,(hl)
 432+ 93CF 20 10        	jr nz,2F
 433+ 93D1
 434+ 93D1 CB 56        	bit 2,(hl)
 435+ 93D3 20 12        	jr nz,3F
 436+ 93D5
 437+ 93D5 CB 5E        	bit 3,(hl)
 438+ 93D7 20 14        	jr nz,4F
 439+ 93D9 18 19        	jr 6F
 440+ 93DB
 441+ 93DB              ; Entidad_de_Tipo_1.
 442+ 93DB
 443+ 93DB CB 66        1 bit 4,(hl)
 444+ 93DD 28 15        	jr z,6F
 445+ 93DF 18 10        	jr 5F
 446+ 93E1
 447+ 93E1              ; Entidad_de_Tipo_2.
 448+ 93E1
 449+ 93E1 CB 6E        2 bit 5,(hl)
 450+ 93E3 28 0F        	jr z,6F
 451+ 93E5 18 0A        	jr 5F
 452+ 93E7
 453+ 93E7              ; Entidad_de_Tipo_3.
 454+ 93E7
 455+ 93E7 CB 76        3 bit 6,(hl)
 456+ 93E9 28 09        	jr z,6F
 457+ 93EB 18 04        	jr 5F
 458+ 93ED
 459+ 93ED              ; Entidad_de_Tipo_4.
 460+ 93ED
 461+ 93ED CB 7E        4 bit 7,(hl)
 462+ 93EF 28 03        	jr z,6F
 463+ 93F1
 464+ 93F1              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 93F1
 466+ 93F1 AF           5 xor a
 467+ 93F2 3C           	inc a
 468+ 93F3 C9           	ret
 469+ 93F4
 470+ 93F4              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 93F4
 472+ 93F4 AF           6 xor a
 473+ 93F5 C9           	ret
 474+ 93F6
 475+ 93F6              ;	------------------------------------------------------------------------------------
 476+ 93F6              ;
 477+ 93F6              ;	12/01/24
 478+ 93F6              ;
 479+ 93F6              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 93F6              ;
 481+ 93F6              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 93F6              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 93F6
 484+ 93F6 CB 27        Calcula_salto_en_BC sla a
 485+ 93F8 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 93FA 4F           	ld c,a
 487+ 93FB 06 00        	ld b,0
 488+ 93FD C9           	ret
 489+ 93FE
 490+ 93FE              ; ------------------------------------------------------------------
 491+ 93FE              ;
 492+ 93FE              ;	19/1/24
 493+ 93FE              ;
 494+ 93FE              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 93FE              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 93FE
 497+ 93FE A7           Situa_en_datos_de_definicion and a
 498+ 93FF ED 4A        	adc hl,bc
 499+ 9401 CD 5A 90     	call Extrae_address
 500+ 9404 22 52 8C         ld (Datos_de_entidad),hl
 501+ 9407 C9           	ret
 502+ 9408
 503+ 9408              ; ------------------------------------------------------------------
 504+ 9408
 505+ 9408              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9408              ; 	inc de
 507+ 9408              ; 	inc de
 508+ 9408              ; 	ex de,hl
 509+ 9408              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9408              ; 	ret
 511+ 9408
 512+ 9408              ; ----------------------------------------------------------------------------------------------------------
 513+ 9408              ;
 514+ 9408              ;	24/6/24
 515+ 9408              ;
 516+ 9408              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9408              ;	_ de entidad.
 518+ 9408              ;
 519+ 9408              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9408              ;
 521+ 9408              ;
 522+ 9408              ;	MODIFICA: HL,DE y BC
 523+ 9408
 524+ 9408
 525+ 9408              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9408
 527+ 9408 11 07 8C     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 940B 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 940C 12           	ld (de),a
 530+ 940D 23           	inc hl
 531+ 940E              ;
 532+ 940E 11 15 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9411 01 02 00     	ld bc,2
 534+ 9414 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9416              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9416 11 0A 8C     	ld de,Contador_de_vueltas
 537+ 9419 7E           	ld a,(hl)
 538+ 941A 12           	ld (de),a
 539+ 941B 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 941C
 541+ 941C 11 1C 8C     	ld de,Indice_Sprite_der
 542+ 941F 01 04 00     	ld bc,4
 543+ 9422 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9424
 545+ 9424 11 24 8C     	ld de,Posicion_inicio
 546+ 9427 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 942A ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 942C
 549+ 942C 11 0E 8C     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 942F 01 02 00     	ld bc,2
 551+ 9432 ED B0        	ldir
 552+ 9434
 553+ 9434 C9           	ret
 554+ 9435
 555+ 9435              ; ----------------------------------------------------------------------------------------------------------
 556+ 9435              ;
 557+ 9435              ;	1/8/24
 558+ 9435              ;
 559+ 9435
 560+ 9435              Parametros_de_bandeja_DRAW_a_caja
 561+ 9435
 562+ 9435 21 07 8C     	ld hl,Bandeja_DRAW
 563+ 9438 01 0C 00     	ld bc,12
 564+ 943B ED B0        	ldir
 565+ 943D C9           	ret
 566+ 943E
 567+ 943E              ;---------------------------------------------------------------------------------------------------------------
 568+ 943E              ;
 569+ 943E              ;	5/1/24
 570+ 943E              ;
 571+ 943E              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 943E              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 943E              ;
 574+ 943E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 943E              ;
 576+ 943E              ;	(Numero_parcial_de_entidades)="7".
 577+ 943E              ;
 578+ 943E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 943E              ;
 580+ 943E              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 943E              ;
 582+ 943E              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 943E              ;	MODIFICA: A y B.
 584+ 943E              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 943E
 586+ 943E              Inicializa_Numero_parcial_de_entidades
 587+ 943E
 588+ 943E              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 943E
 590+ 943E 3A 4D 8C     	ld a,(Numero_de_entidades)
 591+ 9441 A7           	and a
 592+ 9442
 593+ 9442              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9442              ;	jr z,$
 595+ 9442              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9442
 597+ 9442 20 03        	jr nz,3F
 598+ 9444
 599+ 9444              ; ---------- ---------- ----------
 600+ 9444
 601+ 9444              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9444              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9444
 604+ 9444 CD 3A 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9447
 606+ 9447              ; ---------- ---------- ----------
 607+ 9447
 608+ 9447 3A 4D 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 944A FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 944C 38 08        	jr c,1F
 611+ 944E
 612+ 944E              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 944E              ; Actualizamos variables.
 614+ 944E
 615+ 944E 3E 07        	ld a,7
 616+ 9450 32 4E 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9453 47           	ld b,a
 618+ 9454 18 04        	jr 2F
 619+ 9456
 620+ 9456              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9456              ; (Numero_de_entidades)="0".
 622+ 9456
 623+ 9456 32 4E 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9459 47           	ld b,a
 625+ 945A C9           2 ret
 626+ 945B
# file closed: Rutinas_de_inicio_y_niveles.asm
2278  945B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 945B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 945B              ;
   3+ 945B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 945B              ;
   5+ 945B              ; *****************************************************************************************************************************************************************************************
   6+ 945B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 945B
   8+ 945B 7C           calcula_tercio ld a,h
   9+ 945C E6 18        	and $18
  10+ 945E CB 2F        	sra a
  11+ 9460 CB 2F        	sra a
  12+ 9462 CB 2F        	sra a
  13+ 9464 C9           	ret
  14+ 9465
# file closed: calcula_tercio.asm
2279  9465              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9465              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9465              ;
   3+ 9465              ;
   4+ 9465              ;	CLS.
   5+ 9465              ;
   6+ 9465              ;	Limpia la pantalla y define sus atributos.
   7+ 9465              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9465              ;
   9+ 9465              ;	COLORES: 0 ..... NEGRO
  10+ 9465              ;    		 1 ..... AZUL
  11+ 9465              ; 			 2 ..... ROJO
  12+ 9465              ;			 3 ..... MAGENTA
  13+ 9465              ; 			 4 ..... VERDE
  14+ 9465              ; 			 5 ..... CIAN
  15+ 9465              ;			 6 ..... AMARILLO
  16+ 9465              ; 			 7 ..... BLANCO
  17+ 9465              ;
  18+ 9465              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9465              ;
  20+ 9465              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9465
  22+ 9465
  23+ 9465 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9468 11 01 40     	LD DE,$4001
  25+ 946B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 946E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9470 ED B0        	LDIR
  28+ 9472 01 FF 02     	LD BC,767
  29+ 9475 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9476 ED B0        	LDIR
  31+ 9478 C9           	ret
  32+ 9479
# file closed: Cls.asm
2280  9479              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9479              ; ------------------------------------------------------------------------
   2+ 9479              ;
   3+ 9479              ;	30/1/24
   4+ 9479              ;
   5+ 9479              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9479              ;	Fila superior "0", Columna izquierda "0".
   7+ 9479              ;
   8+ 9479              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9479              ;
  10+ 9479              ;	Modifica: A,BC y DE.
  11+ 9479
  12+ 9479 7D           Genera_coordenadas ld a,l
  13+ 947A E6 1F        	and $1f
  14+ 947C 32 08 8C     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 947F
  16+ 947F 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9480 FE 40        	cp $40
  18+ 9482 38 1C        	jr c,4F
  19+ 9484
  20+ 9484 CD 5B 94     	call calcula_tercio
  21+ 9487 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9488
  23+ 9488 1E 00        	ld e,0
  24+ 948A 7D           	ld a,l
  25+ 948B E6 E0        	and $e0
  26+ 948D 28 01        	jr z,1F
  27+ 948F 04           	inc b
  28+ 9490
  29+ 9490 04           1 inc b
  30+ 9491 05           	dec b
  31+ 9492 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9494              ;														; _ , salimos.
  33+ 9494 1C           3 inc e
  34+ 9495 D6 20        	sub 32
  35+ 9497 20 FB        	jr nz,3B
  36+ 9499 10 F5        	djnz 1B
  37+ 949B
  38+ 949B 7B           2 ld a,e
  39+ 949C 32 09 8C     	ld (Coordenada_y),a
  40+ 949F C9           	ret
  41+ 94A0
  42+ 94A0 AF           4 xor a
  43+ 94A1 32 09 8C     	ld (Coordenada_y),a
  44+ 94A4 C9           	ret
  45+ 94A5
# file closed: Genera_coordenadas.asm
2281  94A5              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94A5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94A5              ;
   3+ 94A5              ;	11/03/24
   4+ 94A5              ;
   5+ 94A5              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94A5              ;   DE contiene Puntero_objeto.
   7+ 94A5              ;   IX contiene el Puntero de impresión.
   8+ 94A5
   9+ 94A5              Genera_datos_de_impresion
  10+ 94A5
  11+ 94A5 ED 73 54 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94A9
  13+ 94A9 31 0E 8C         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94AC DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94AE
  16+ 94AE 2A 67 8C         ld hl,(Scanlines_album_SP)
  17+ 94B1
  18+ 94B1 3E 05            ld a,5
  19+ 94B3 85               add l
  20+ 94B4 6F               ld l,a
  21+ 94B5
  22+ 94B5 F9               ld sp,hl
  23+ 94B6 22 67 8C         ld (Scanlines_album_SP),hl
  24+ 94B9
  25+ 94B9 21 00 00         ld hl,0
  26+ 94BC
  27+ 94BC DD E5            push ix
  28+ 94BE 3B               dec sp
  29+ 94BF ED 7A            adc hl,sp
  30+ 94C1 D5               push de
  31+ 94C2
  32+ 94C2              ; Recuperamos SP.
  33+ 94C2
  34+ 94C2 ED 7B 54 8C      ld sp,(Stack)
  35+ 94C6
  36+ 94C6 E5               push hl
  37+ 94C7 F1               pop af
  38+ 94C8 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94C9
  40+ 94C9              ; Tenemos el encabezado listo.
  41+ 94C9              ; Preparamos registros para generar los scanlines.
  42+ 94C9
  43+ 94C9 DD E5            push ix
  44+ 94CB E1               pop hl                                          ; 1er scanline en HL.
  45+ 94CC
  46+ 94CC ED 5B 67 8C      ld de,(Scanlines_album_SP)
  47+ 94D0
  48+ 94D0              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94D0              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94D0
  51+ 94D0 7C               ld a,h
  52+ 94D1 FE 50            cp $50
  53+ 94D3 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94D5
  55+ 94D5 20 05            jr nz,2F
  56+ 94D7
  57+ 94D7 7D               ld a,l
  58+ 94D8 FE E0            cp $e0
  59+ 94DA 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94DC
  61+ 94DC 7D           2 ld a,l
  62+ 94DD FE C0            cp $c0
  63+ 94DF D2 71 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94E2
  65+ 94E2              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94E2
  67+ 94E2 CD 6F 99         call NextScan
  68+ 94E5 EB               ex de,hl
  69+ 94E6
  70+ 94E6 73               ld (hl),e
  71+ 94E7 23               inc hl
  72+ 94E8 72               ld (hl),d
  73+ 94E9 23               inc hl
  74+ 94EA
  75+ 94EA EB               ex de,hl
  76+ 94EB
  77+ 94EB CD 6F 99         call NextScan
  78+ 94EE EB               ex de,hl
  79+ 94EF
  80+ 94EF 73               ld (hl),e
  81+ 94F0 23               inc hl
  82+ 94F1 72               ld (hl),d
  83+ 94F2 23               inc hl
  84+ 94F3
  85+ 94F3 EB               ex de,hl
  86+ 94F4
  87+ 94F4 CD 6F 99         call NextScan
  88+ 94F7 EB               ex de,hl
  89+ 94F8
  90+ 94F8 73               ld (hl),e
  91+ 94F9 23               inc hl
  92+ 94FA 72               ld (hl),d
  93+ 94FB 23               inc hl
  94+ 94FC
  95+ 94FC EB               ex de,hl
  96+ 94FD
  97+ 94FD CD 6F 99         call NextScan
  98+ 9500 EB               ex de,hl
  99+ 9501
 100+ 9501 73               ld (hl),e
 101+ 9502 23               inc hl
 102+ 9503 72               ld (hl),d
 103+ 9504 23               inc hl
 104+ 9505
 105+ 9505 EB               ex de,hl
 106+ 9506
 107+ 9506 CD 6F 99         call NextScan
 108+ 9509 EB               ex de,hl
 109+ 950A
 110+ 950A 73               ld (hl),e
 111+ 950B 23               inc hl
 112+ 950C 72               ld (hl),d
 113+ 950D 23               inc hl
 114+ 950E
 115+ 950E EB               ex de,hl
 116+ 950F
 117+ 950F CD 6F 99         call NextScan
 118+ 9512 EB               ex de,hl
 119+ 9513
 120+ 9513 73               ld (hl),e
 121+ 9514 23               inc hl
 122+ 9515 72               ld (hl),d
 123+ 9516 23               inc hl
 124+ 9517
 125+ 9517 EB               ex de,hl
 126+ 9518
 127+ 9518 CD 6F 99         call NextScan
 128+ 951B EB               ex de,hl
 129+ 951C
 130+ 951C 73               ld (hl),e
 131+ 951D 23               inc hl
 132+ 951E 72               ld (hl),d
 133+ 951F 23               inc hl
 134+ 9520
 135+ 9520 EB               ex de,hl
 136+ 9521
 137+ 9521 CD 6F 99         call NextScan
 138+ 9524 EB               ex de,hl
 139+ 9525
 140+ 9525 73               ld (hl),e
 141+ 9526 23               inc hl
 142+ 9527 72               ld (hl),d
 143+ 9528 23               inc hl
 144+ 9529
 145+ 9529 EB               ex de,hl
 146+ 952A
 147+ 952A CD 6F 99         call NextScan
 148+ 952D EB               ex de,hl
 149+ 952E
 150+ 952E 73               ld (hl),e
 151+ 952F 23               inc hl
 152+ 9530 72               ld (hl),d
 153+ 9531 23               inc hl
 154+ 9532
 155+ 9532 EB               ex de,hl
 156+ 9533
 157+ 9533 CD 6F 99         call NextScan
 158+ 9536 EB               ex de,hl
 159+ 9537
 160+ 9537 73               ld (hl),e
 161+ 9538 23               inc hl
 162+ 9539 72               ld (hl),d
 163+ 953A 23               inc hl
 164+ 953B
 165+ 953B EB               ex de,hl
 166+ 953C
 167+ 953C CD 6F 99         call NextScan
 168+ 953F EB               ex de,hl
 169+ 9540
 170+ 9540 73               ld (hl),e
 171+ 9541 23               inc hl
 172+ 9542 72               ld (hl),d
 173+ 9543 23               inc hl
 174+ 9544
 175+ 9544 EB               ex de,hl
 176+ 9545
 177+ 9545 CD 6F 99         call NextScan
 178+ 9548 EB               ex de,hl
 179+ 9549
 180+ 9549 73               ld (hl),e
 181+ 954A 23               inc hl
 182+ 954B 72               ld (hl),d
 183+ 954C 23               inc hl
 184+ 954D
 185+ 954D EB               ex de,hl
 186+ 954E
 187+ 954E CD 6F 99         call NextScan
 188+ 9551 EB               ex de,hl
 189+ 9552
 190+ 9552 73               ld (hl),e
 191+ 9553 23               inc hl
 192+ 9554 72               ld (hl),d
 193+ 9555 23               inc hl
 194+ 9556
 195+ 9556 EB               ex de,hl
 196+ 9557
 197+ 9557 CD 6F 99         call NextScan
 198+ 955A EB               ex de,hl
 199+ 955B
 200+ 955B 73               ld (hl),e
 201+ 955C 23               inc hl
 202+ 955D 72               ld (hl),d
 203+ 955E 23               inc hl
 204+ 955F
 205+ 955F EB               ex de,hl
 206+ 9560
 207+ 9560 CD 6F 99         call NextScan
 208+ 9563 EB               ex de,hl
 209+ 9564
 210+ 9564 73               ld (hl),e
 211+ 9565 23               inc hl
 212+ 9566 72               ld (hl),d
 213+ 9567 23               inc hl
 214+ 9568
 215+ 9568              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9568
 217+ 9568 22 67 8C         ld (Scanlines_album_SP),hl
 218+ 956B
 219+ 956B              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 956B
 221+ 956B 08               ex af,af
 222+ 956C
 223+ 956C F5               push af
 224+ 956D E1               pop hl
 225+ 956E
 226+ 956E 36 10            ld (hl),16
 227+ 9570
 228+ 9570 C9               ret
 229+ 9571
 230+ 9571              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9571
 232+ 9571              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9571
 234+ 9571 3E 57            ld a,$57
 235+ 9573 94               sub h
 236+ 9574 47               ld b,a
 237+ 9575
 238+ 9575 3E DF            ld a,$df
 239+ 9577 BD               cp l
 240+ 9578 38 04            jr c,1F
 241+ 957A
 242+ 957A 3E 08            ld a,8
 243+ 957C 80               add b
 244+ 957D 47               ld b,a
 245+ 957E
 246+ 957E              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 957E              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 957E
 249+ 957E 48           1 ld c,b
 250+ 957F 0C               inc c
 251+ 9580
 252+ 9580 04               inc b
 253+ 9581 05               dec b
 254+ 9582 20 02            jr nz,3F
 255+ 9584
 256+ 9584 18 0B            jr 6F
 257+ 9586
 258+ 9586 CD 6F 99     3 call NextScan
 259+ 9589 EB               ex de,hl
 260+ 958A
 261+ 958A 73               ld (hl),e
 262+ 958B 23               inc hl
 263+ 958C 72               ld (hl),d
 264+ 958D 23               inc hl
 265+ 958E
 266+ 958E EB               ex de,hl
 267+ 958F 10 F5            djnz 3B
 268+ 9591
 269+ 9591 ED 53 67 8C  6 ld (Scanlines_album_SP),de
 270+ 9595
 271+ 9595 08           5 ex af,af
 272+ 9596 F5               push af
 273+ 9597 E1               pop hl
 274+ 9598
 275+ 9598 71               ld (hl),c
 276+ 9599
 277+ 9599 C9               ret
 278+ 959A
# file closed: Genera_datos_de_impresion.asm
2282  959A              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 959A              ; -----------------------------------------------------------------------------
   2+ 959A              ;
   3+ 959A              ;   11/03/24
   4+ 959A              ;
   5+ 959A
   6+ 959A              Pinta_Sprites
   7+ 959A
   8+ 959A              ;    ld hl,(Scanlines_album_SP)
   9+ 959A              ;    call Extrae_address
  10+ 959A
  11+ 959A              ;    inc h
  12+ 959A              ;    dec h
  13+ 959A              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 959A
  15+ 959A ED 73 54 8C      ld (Stack),sp
  16+ 959E
  17+ 959E EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 959F              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 959F 2C               inc l
  20+ 95A0 2C               inc l
  21+ 95A1
  22+ 95A1 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95A2
  24+ 95A2 2C               inc l
  25+ 95A3 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95A4
  27+ 95A4              ;   Seleccionamos rutina de impresión:
  28+ 95A4
  29+ 95A4 3E 10            ld a,16
  30+ 95A6 B8               cp b
  31+ 95A7 C2 A3 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95AA
  33+ 95AA              ;   Rutinas:
  34+ 95AA
  35+ 95AA              Pinta_rapido    ;   1520 t/states.
  36+ 95AA
  37+ 95AA E1               pop hl
  38+ 95AB
  39+ 95AB 1A               ld a,(de)
  40+ 95AC AE               xor (hl)
  41+ 95AD 77               ld (hl),a
  42+ 95AE 2C               inc l
  43+ 95AF 1C               inc e
  44+ 95B0 1A               ld a,(de)
  45+ 95B1 AE               xor (hl)
  46+ 95B2 77               ld (hl),a
  47+ 95B3 2C               inc l
  48+ 95B4 1C               inc e
  49+ 95B5 1A               ld a,(de)
  50+ 95B6 AE               xor (hl)
  51+ 95B7 77               ld (hl),a
  52+ 95B8 13               inc de
  53+ 95B9
  54+ 95B9 E1               pop hl
  55+ 95BA
  56+ 95BA 1A               ld a,(de)
  57+ 95BB AE               xor (hl)
  58+ 95BC 77               ld (hl),a
  59+ 95BD 2C               inc l
  60+ 95BE 1C               inc e
  61+ 95BF 1A               ld a,(de)
  62+ 95C0 AE               xor (hl)
  63+ 95C1 77               ld (hl),a
  64+ 95C2 2C               inc l
  65+ 95C3 1C               inc e
  66+ 95C4 1A               ld a,(de)
  67+ 95C5 AE               xor (hl)
  68+ 95C6 77               ld (hl),a
  69+ 95C7 13               inc de
  70+ 95C8
  71+ 95C8 E1               pop hl
  72+ 95C9
  73+ 95C9 1A               ld a,(de)
  74+ 95CA AE               xor (hl)
  75+ 95CB 77               ld (hl),a
  76+ 95CC 2C               inc l
  77+ 95CD 1C               inc e
  78+ 95CE 1A               ld a,(de)
  79+ 95CF AE               xor (hl)
  80+ 95D0 77               ld (hl),a
  81+ 95D1 2C               inc l
  82+ 95D2 1C               inc e
  83+ 95D3 1A               ld a,(de)
  84+ 95D4 AE               xor (hl)
  85+ 95D5 77               ld (hl),a
  86+ 95D6 13               inc de
  87+ 95D7
  88+ 95D7 E1               pop hl
  89+ 95D8
  90+ 95D8 1A               ld a,(de)
  91+ 95D9 AE               xor (hl)
  92+ 95DA 77               ld (hl),a
  93+ 95DB 2C               inc l
  94+ 95DC 1C               inc e
  95+ 95DD 1A               ld a,(de)
  96+ 95DE AE               xor (hl)
  97+ 95DF 77               ld (hl),a
  98+ 95E0 2C               inc l
  99+ 95E1 1C               inc e
 100+ 95E2 1A               ld a,(de)
 101+ 95E3 AE               xor (hl)
 102+ 95E4 77               ld (hl),a
 103+ 95E5 13               inc de
 104+ 95E6
 105+ 95E6 E1               pop hl
 106+ 95E7
 107+ 95E7 1A               ld a,(de)
 108+ 95E8 AE               xor (hl)
 109+ 95E9 77               ld (hl),a
 110+ 95EA 2C               inc l
 111+ 95EB 1C               inc e
 112+ 95EC 1A               ld a,(de)
 113+ 95ED AE               xor (hl)
 114+ 95EE 77               ld (hl),a
 115+ 95EF 2C               inc l
 116+ 95F0 1C               inc e
 117+ 95F1 1A               ld a,(de)
 118+ 95F2 AE               xor (hl)
 119+ 95F3 77               ld (hl),a
 120+ 95F4 13               inc de
 121+ 95F5
 122+ 95F5 E1               pop hl
 123+ 95F6
 124+ 95F6 1A               ld a,(de)
 125+ 95F7 AE               xor (hl)
 126+ 95F8 77               ld (hl),a
 127+ 95F9 2C               inc l
 128+ 95FA 1C               inc e
 129+ 95FB 1A               ld a,(de)
 130+ 95FC AE               xor (hl)
 131+ 95FD 77               ld (hl),a
 132+ 95FE 2C               inc l
 133+ 95FF 1C               inc e
 134+ 9600 1A               ld a,(de)
 135+ 9601 AE               xor (hl)
 136+ 9602 77               ld (hl),a
 137+ 9603 13               inc de
 138+ 9604
 139+ 9604 E1               pop hl
 140+ 9605
 141+ 9605 1A               ld a,(de)
 142+ 9606 AE               xor (hl)
 143+ 9607 77               ld (hl),a
 144+ 9608 2C               inc l
 145+ 9609 1C               inc e
 146+ 960A 1A               ld a,(de)
 147+ 960B AE               xor (hl)
 148+ 960C 77               ld (hl),a
 149+ 960D 2C               inc l
 150+ 960E 1C               inc e
 151+ 960F 1A               ld a,(de)
 152+ 9610 AE               xor (hl)
 153+ 9611 77               ld (hl),a
 154+ 9612 13               inc de
 155+ 9613
 156+ 9613 E1               pop hl
 157+ 9614
 158+ 9614 1A               ld a,(de)
 159+ 9615 AE               xor (hl)
 160+ 9616 77               ld (hl),a
 161+ 9617 2C               inc l
 162+ 9618 1C               inc e
 163+ 9619 1A               ld a,(de)
 164+ 961A AE               xor (hl)
 165+ 961B 77               ld (hl),a
 166+ 961C 2C               inc l
 167+ 961D 1C               inc e
 168+ 961E 1A               ld a,(de)
 169+ 961F AE               xor (hl)
 170+ 9620 77               ld (hl),a
 171+ 9621 13               inc de
 172+ 9622
 173+ 9622 E1               pop hl
 174+ 9623
 175+ 9623 1A               ld a,(de)
 176+ 9624 AE               xor (hl)
 177+ 9625 77               ld (hl),a
 178+ 9626 2C               inc l
 179+ 9627 1C               inc e
 180+ 9628 1A               ld a,(de)
 181+ 9629 AE               xor (hl)
 182+ 962A 77               ld (hl),a
 183+ 962B 2C               inc l
 184+ 962C 1C               inc e
 185+ 962D 1A               ld a,(de)
 186+ 962E AE               xor (hl)
 187+ 962F 77               ld (hl),a
 188+ 9630 13               inc de
 189+ 9631
 190+ 9631 E1               pop hl
 191+ 9632
 192+ 9632 1A               ld a,(de)
 193+ 9633 AE               xor (hl)
 194+ 9634 77               ld (hl),a
 195+ 9635 2C               inc l
 196+ 9636 1C               inc e
 197+ 9637 1A               ld a,(de)
 198+ 9638 AE               xor (hl)
 199+ 9639 77               ld (hl),a
 200+ 963A 2C               inc l
 201+ 963B 1C               inc e
 202+ 963C 1A               ld a,(de)
 203+ 963D AE               xor (hl)
 204+ 963E 77               ld (hl),a
 205+ 963F 13               inc de
 206+ 9640
 207+ 9640 E1               pop hl
 208+ 9641
 209+ 9641 1A               ld a,(de)
 210+ 9642 AE               xor (hl)
 211+ 9643 77               ld (hl),a
 212+ 9644 2C               inc l
 213+ 9645 1C               inc e
 214+ 9646 1A               ld a,(de)
 215+ 9647 AE               xor (hl)
 216+ 9648 77               ld (hl),a
 217+ 9649 2C               inc l
 218+ 964A 1C               inc e
 219+ 964B 1A               ld a,(de)
 220+ 964C AE               xor (hl)
 221+ 964D 77               ld (hl),a
 222+ 964E 13               inc de
 223+ 964F
 224+ 964F E1               pop hl
 225+ 9650
 226+ 9650 1A               ld a,(de)
 227+ 9651 AE               xor (hl)
 228+ 9652 77               ld (hl),a
 229+ 9653 2C               inc l
 230+ 9654 1C               inc e
 231+ 9655 1A               ld a,(de)
 232+ 9656 AE               xor (hl)
 233+ 9657 77               ld (hl),a
 234+ 9658 2C               inc l
 235+ 9659 1C               inc e
 236+ 965A 1A               ld a,(de)
 237+ 965B AE               xor (hl)
 238+ 965C 77               ld (hl),a
 239+ 965D 13               inc de
 240+ 965E
 241+ 965E E1               pop hl
 242+ 965F
 243+ 965F 1A               ld a,(de)
 244+ 9660 AE               xor (hl)
 245+ 9661 77               ld (hl),a
 246+ 9662 2C               inc l
 247+ 9663 1C               inc e
 248+ 9664 1A               ld a,(de)
 249+ 9665 AE               xor (hl)
 250+ 9666 77               ld (hl),a
 251+ 9667 2C               inc l
 252+ 9668 1C               inc e
 253+ 9669 1A               ld a,(de)
 254+ 966A AE               xor (hl)
 255+ 966B 77               ld (hl),a
 256+ 966C 13               inc de
 257+ 966D
 258+ 966D E1               pop hl
 259+ 966E
 260+ 966E 1A               ld a,(de)
 261+ 966F AE               xor (hl)
 262+ 9670 77               ld (hl),a
 263+ 9671 2C               inc l
 264+ 9672 1C               inc e
 265+ 9673 1A               ld a,(de)
 266+ 9674 AE               xor (hl)
 267+ 9675 77               ld (hl),a
 268+ 9676 2C               inc l
 269+ 9677 1C               inc e
 270+ 9678 1A               ld a,(de)
 271+ 9679 AE               xor (hl)
 272+ 967A 77               ld (hl),a
 273+ 967B 13               inc de
 274+ 967C
 275+ 967C E1               pop hl
 276+ 967D
 277+ 967D 1A               ld a,(de)
 278+ 967E AE               xor (hl)
 279+ 967F 77               ld (hl),a
 280+ 9680 2C               inc l
 281+ 9681 1C               inc e
 282+ 9682 1A               ld a,(de)
 283+ 9683 AE               xor (hl)
 284+ 9684 77               ld (hl),a
 285+ 9685 2C               inc l
 286+ 9686 1C               inc e
 287+ 9687 1A               ld a,(de)
 288+ 9688 AE               xor (hl)
 289+ 9689 77               ld (hl),a
 290+ 968A 13               inc de
 291+ 968B
 292+ 968B E1               pop hl
 293+ 968C
 294+ 968C 1A               ld a,(de)
 295+ 968D AE               xor (hl)
 296+ 968E 77               ld (hl),a
 297+ 968F 2C               inc l
 298+ 9690 1C               inc e
 299+ 9691 1A               ld a,(de)
 300+ 9692 AE               xor (hl)
 301+ 9693 77               ld (hl),a
 302+ 9694 2C               inc l
 303+ 9695 1C               inc e
 304+ 9696 1A               ld a,(de)
 305+ 9697 AE               xor (hl)
 306+ 9698 77               ld (hl),a
 307+ 9699 13               inc de
 308+ 969A
 309+ 969A ED 73 67 8C      ld (Scanlines_album_SP),sp
 310+ 969E ED 7B 54 8C      ld sp,(Stack)
 311+ 96A2 C9               ret
 312+ 96A3
 313+ 96A3              Pinta_lento
 314+ 96A3
 315+ 96A3 E1           1 pop hl
 316+ 96A4
 317+ 96A4 1A               ld a,(de)
 318+ 96A5 AE               xor (hl)
 319+ 96A6 77               ld (hl),a
 320+ 96A7 2C               inc l
 321+ 96A8 1C               inc e
 322+ 96A9 1A               ld a,(de)
 323+ 96AA AE               xor (hl)
 324+ 96AB 77               ld (hl),a
 325+ 96AC 2C               inc l
 326+ 96AD 1C               inc e
 327+ 96AE 1A               ld a,(de)
 328+ 96AF AE               xor (hl)
 329+ 96B0 77               ld (hl),a
 330+ 96B1 13               inc de
 331+ 96B2
 332+ 96B2 10 EF            djnz 1B
 333+ 96B4
 334+ 96B4 ED 73 67 8C      ld (Scanlines_album_SP),sp
 335+ 96B8 ED 7B 54 8C      ld sp,(Stack)
 336+ 96BC C9               ret
# file closed: Pinta_Sprites.asm
2283  96BD              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96BD              ; ******************************************************************************************************************************************************************************************
   2+ 96BD              ;
   3+ 96BD              ; 26/06/23
   4+ 96BD              ;
   5+ 96BD              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96BD
   7+ 96BD              Draw
   8+ 96BD
   9+ 96BD CD 63 99     	call Prepara_draw
  10+ 96C0 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96C1 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96C2 28 05        	jr z,2F
  13+ 96C4
  14+ 96C4 3A 26 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96C7 18 0C        	jr 1F
  16+ 96C9
  17+ 96C9 2A 24 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96CC 22 17 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96CF CD 5B 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96D2              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96D2
  22+ 96D2 CD 02 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96D5
  24+ 96D5 3A 14 8C     1 ld a,(Ctrl_0)
  25+ 96D8 CB 6F        	bit 5,a
  26+ 96DA 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96DC
  28+ 96DC CD F1 96     	call Comprueba_limite_horizontal
  29+ 96DF CD 81 97     	call Comprueba_limite_vertical
  30+ 96E2
  31+ 96E2              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96E2              ; -----------------------
  33+ 96E2              ; -----------------------
  34+ 96E2              ; -----------------------
  35+ 96E2
  36+ 96E2 CD D7 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96E5 CD 0E 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96E8
  39+ 96E8 3A 14 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96EB CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96ED 32 14 8C     	ld (Ctrl_0),a
  42+ 96F0
  43+ 96F0 C9           	ret
  44+ 96F1
  45+ 96F1              ; *******************************************************************************************************************************************************************************************
  46+ 96F1              ;	21/01/23
  47+ 96F1              ;
  48+ 96F1              ; 	Comprueba_limite_horizontal.
  49+ 96F1              ;
  50+ 96F1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96F1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96F1              ;
  53+ 96F1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96F1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96F1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96F1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96F1
  58+ 96F1
  59+ 96F1
  60+ 96F1 3A 14 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96F4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96F6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96F8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 96FA 32 14 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 96FD 18 09            jr 6F
  66+ 96FF CB 5F        1 bit 3,a
  67+ 9701 28 0A            jr z,2F
  68+ 9703 E6 F7            and $f7
  69+ 9705 32 14 8C         ld (Ctrl_0),a
  70+ 9708 CD 5B 98     6 call Inicializacion
  71+ 970B 18 5B            jr 5F
  72+ 970D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 970E
  74+ 970E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 970E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 970E
  77+ 970E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 970F 2A 28 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9712 CD 5B 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9715 67           	ld h,a
  81+ 9716 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9717 CD 5B 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 971A 67           	ld h,a
  84+ 971B A7           	and a
  85+ 971C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 971E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 971F 3A 26 8C     	ld a,(Cuad_objeto)
  88+ 9722 FE 02        	cp 2
  89+ 9724 38 1E        	jr c,3F
  90+ 9726 28 1C        	jr z,3F
  91+ 9728 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9729 28 23            jr z,7F
  93+ 972B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 972D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 972F E1           	pop hl
  96+ 9730
  97+ 9730              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9730              ; _para indicar con E="2" en caso necesario.
  99+ 9730
 100+ 9730 E5               push hl
 101+ 9731 C5               push bc
 102+ 9732 CD 5B 94     	call calcula_tercio
 103+ 9735 FE 01        	cp 1
 104+ 9737 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9739 CD 69 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 973C 28 26            jr z,9F
 107+ 973E 38 24            jr c,9F
 108+ 9740 1E 00        11 ld e,0
 109+ 9742 18 22            jr 8F
 110+ 9744 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9745 28 07        	jr z, 7F
 112+ 9747 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9749 1E 00         	ld e,0
 114+ 974B E1           	pop hl
 115+ 974C 18 04        	jr 4F
 116+ 974E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9750 18 15            jr 10F
 118+ 9752
 119+ 9752              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9752              ; _para indicar con E="2" en caso necesario.
 121+ 9752
 122+ 9752 E5           4 push hl
 123+ 9753 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9754 CD 5B 94     	call calcula_tercio
 125+ 9757 FE 01        	cp 1
 126+ 9759 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 975B CD 69 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 975E 28 04            jr z,9F
 129+ 9760 30 02            jr nc,9F
 130+ 9762 18 02        	jr 8F
 131+ 9764 1E 02        9 ld e,2
 132+ 9766 C1           8 pop bc
 133+ 9767 E1           10 pop hl
 134+ 9768 C9           5 ret
 135+ 9769
 136+ 9769              ; --------------------
 137+ 9769              ;
 138+ 9769              ; 25/08/22
 139+ 9769
 140+ 9769 CD 5B 94     Comprueba_centro call calcula_tercio
 141+ 976C 67               ld h,a
 142+ 976D 08           	ex af,af
 143+ 976E FE 02        	cp 2
 144+ 9770 38 07        	jr c,1F
 145+ 9772 28 05        	jr z,1F
 146+ 9774 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9777 18 03        	jr 2F
 148+ 9779 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 977C 08           2 ex af,af
 150+ 977D A7               and a
 151+ 977E ED 42            sbc hl,bc
 152+ 9780 C9               ret
 153+ 9781
 154+ 9781              ; *********************************************************************************************************************************************************************************************
 155+ 9781              ;
 156+ 9781              ;   16/8/22
 157+ 9781              ;
 158+ 9781              ;	Comprueba_limite_vertical
 159+ 9781              ;
 160+ 9781              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9781              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9781              ;
 163+ 9781
 164+ 9781 2A 17 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9784 7D           	ld a,l
 166+ 9785 E6 1F        	and $1F
 167+ 9787 57           	ld d,a
 168+ 9788 3A 2A 8C     	ld a,(Limite_vertical)
 169+ 978B BA           	cp d 											; Límite - Posición.
 170+ 978C 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 978D 3A 26 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9790 CB 47        	bit 0,a
 173+ 9792 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9794
 175+ 9794              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9794
 177+ 9794 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9795 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9797
 180+ 9797              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9797              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9797
 183+ 9797 3A 08 8C         ld a,(Coordenada_X)
 184+ 979A 16 0F            ld d,Centro_izquierda
 185+ 979C A7               and a
 186+ 979D 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 979E 28 1E            jr z,3F
 188+ 97A0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97A2              ;                                                    ; _salimos sin modificar nada.
 190+ 97A2 18 0E            jr 2F
 191+ 97A4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97A5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97A7
 194+ 97A7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97A7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97A7
 197+ 97A7 3A 08 8C         ld a,(Coordenada_X)
 198+ 97AA 16 10            ld d,Centro_derecha
 199+ 97AC A7               and a
 200+ 97AD 92               sub d
 201+ 97AE 28 0E            jr z,3F
 202+ 97B0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97B2              ;                                                    ; _salimos sin modificar nada.
 204+ 97B2 CB 43        2 bit 0,e
 205+ 97B4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97B6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97B7 CD 4B 98         call Modificaccionne
 208+ 97BA C1           	pop bc
 209+ 97BB CD 5B 98         call Inicializacion
 210+ 97BE C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97BF
 212+ 97BF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97BF
 214+ 97BF C5           4 push bc
 215+ 97C0 01 16 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97C3 0A           	ld a,(bc)
 217+ 97C4 3D           	dec a
 218+ 97C5 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97C6 7D           	ld a,l
 220+ 97C7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97C8 CB 47        	bit 0,a
 222+ 97CA 28 03        	jr z,5F
 223+ 97CC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97CD 18 2E        	jr 7F
 225+ 97CF
 226+ 97CF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97CF
 228+ 97CF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97D0 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97D1 3A 14 8C     	ld a,(Ctrl_0)
 231+ 97D4 CB 4F        	bit 1,a
 232+ 97D6 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97D8 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97D9
 235+ 97D9              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97D9
 237+ 97D9 1C               inc e
 238+ 97DA 1D               dec e
 239+ 97DB 20 07            jr nz,12F
 240+ 97DD 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97DE 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97DF 22 17 8C     	ld (Posicion_actual),hl
 243+ 97E2 18 44        13 jr 9F
 244+ 97E4 CB 43        12 bit 0,e
 245+ 97E6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97E8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97E8 C1           	pop bc
 248+ 97E9 18 D3        	jr 3B
 249+ 97EB 80           14 add b
 250+ 97EC 6F               ld l,a
 251+ 97ED 22 17 8C     	ld (Posicion_actual),hl
 252+ 97F0 CD 4B 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97F3 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97F5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97F7 32 14 8C         ld (Ctrl_0),a
 256+ 97FA F1           	pop af
 257+ 97FB 18 2B        	jr 9F
 258+ 97FD
 259+ 97FD              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 97FD
 261+ 97FD F5           7 push af
 262+ 97FE 3A 14 8C     	ld a,(Ctrl_0)
 263+ 9801 CB 47        	bit 0,a
 264+ 9803 20 1D        	jr nz,8F
 265+ 9805 F1           	pop af
 266+ 9806
 267+ 9806              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9806
 269+ 9806 1C           	inc e
 270+ 9807 1D               dec e
 271+ 9808 20 07            jr nz,10F
 272+ 980A 90           	sub b
 273+ 980B 6F               ld l,a
 274+ 980C 22 17 8C     	ld (Posicion_actual),hl
 275+ 980F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9811              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9811 CB 43        10 bit 0,e
 278+ 9813 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9815              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9815 C1           	pop bc
 281+ 9816 18 A6        	jr 3B
 282+ 9818 90           16 sub b
 283+ 9819 6F               ld l,a
 284+ 981A 22 17 8C     	ld (Posicion_actual),hl
 285+ 981D CD 4B 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9820 18 06            jr 9F
 287+ 9822 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9824 32 14 8C         ld (Ctrl_0),a
 289+ 9827 F1           	pop af
 290+ 9828 C1           9 pop bc
 291+ 9829 1E 00        	ld e,0
 292+ 982B CD 5B 98         call Inicializacion
 293+ 982E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 982F 08           	ex af,af
 295+ 9830 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9831 18 8B            jr 3B
 297+ 9833
 298+ 9833              ; --------------------
 299+ 9833
 300+ 9833 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9835 CD 7E 99     1 call PreviousScan
 302+ 9838 10 FB            djnz 1B
 303+ 983A 22 17 8C     	ld (Posicion_actual),hl
 304+ 983D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 983E C9           	ret
 306+ 983F
 307+ 983F              ; --------------------
 308+ 983F
 309+ 983F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9841 CD 6F 99     1 call NextScan
 311+ 9844 10 FB            djnz 1B
 312+ 9846 22 17 8C     	ld (Posicion_actual),hl
 313+ 9849 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 984A C9           	ret
 315+ 984B
 316+ 984B              ; --------------------
 317+ 984B              ;
 318+ 984B              ;	22/01/23
 319+ 984B              ;
 320+ 984B              ;	E="1". Hemos cambiado de cuadrante.
 321+ 984B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 984B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 984B
 324+ 984B
 325+ 984B              Modificaccionne
 326+ 984B
 327+ 984B 3A 26 8C     	ld a,(Cuad_objeto)
 328+ 984E FE 02        	cp 2
 329+ 9850 CC 33 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9853 DC 33 98         call c,Modifica_Pos_actual
 331+ 9856 C8           	ret z
 332+ 9857 CD 3F 98         call Modifica_Pos_actual2
 333+ 985A C9               ret
 334+ 985B
 335+ 985B              ; *************************************************************************************************************************************************************************************************
 336+ 985B              ;
 337+ 985B              ;	13/8/22
 338+ 985B              ;
 339+ 985B              ;	Inicializacion
 340+ 985B              ;
 341+ 985B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 985B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 985B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 985B              ;
 345+ 985B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 985B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 985B              ;	_ desaparece/aparece.
 348+ 985B
 349+ 985B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 985B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 985B              ;
 352+ 985B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 985B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 985B              ; 		   [E] ="0"
 355+ 985B
 356+ 985B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 985B
 358+ 985B CD 5B 94     Inicializacion call calcula_tercio
 359+ 985E 28 36        	jr z,primit
 360+ 9860 E6 02        	and 2
 361+ 9862 20 07        	jr nz,segmit
 362+ 9864 7D           	ld a,l
 363+ 9865 FE 7F        	cp $7f
 364+ 9867 38 2D        	jr c,primit
 365+ 9869 28 2B        	jr z,primit
 366+ 986B CD D1 98     segmit call column
 367+ 986E 38 13        	jr c,tercuad
 368+ 9870 3E 04        cuarcuad ld a,4
 369+ 9872 32 26 8C     	ld (Cuad_objeto),a
 370+ 9875 21 20 48     	ld hl,$4820
 371+ 9878 22 28 8C     	ld (Limite_horizontal),hl
 372+ 987B 21 2A 8C     	ld hl,Limite_vertical
 373+ 987E 36 0D        	ld (hl),$0d
 374+ 9880 08           	ex af,af
 375+ 9881 18 3C        	jr 1F
 376+ 9883              tercuad
 377+ 9883 3E 03        	ld a,3
 378+ 9885 32 26 8C     	ld (Cuad_objeto),a
 379+ 9888 21 20 48     	ld hl,$4820
 380+ 988B 22 28 8C     	ld (Limite_horizontal),hl
 381+ 988E 21 2A 8C     	ld hl,Limite_vertical
 382+ 9891 36 12        	ld (hl),$12
 383+ 9893 08           	ex af,af
 384+ 9894 18 29        	jr 1F
 385+ 9896 CD D1 98     primit call column
 386+ 9899 38 13        	jr c, primcuad
 387+ 989B              segcuad
 388+ 989B 3E 02        	ld a,2
 389+ 989D 32 26 8C     	ld (Cuad_objeto),a
 390+ 98A0 21 C0 4F     	ld hl,$4fc0
 391+ 98A3 22 28 8C     	ld (Limite_horizontal),hl
 392+ 98A6 21 2A 8C     	ld hl,Limite_vertical
 393+ 98A9 36 0D        	ld (hl),$0d
 394+ 98AB 08           	ex af,af
 395+ 98AC 18 11        	jr 1F
 396+ 98AE              primcuad
 397+ 98AE 3E 01        	ld a,1
 398+ 98B0 32 26 8C     	ld (Cuad_objeto),a
 399+ 98B3 21 C0 4F     	ld hl,$4fc0
 400+ 98B6 22 28 8C     	ld (Limite_horizontal),hl
 401+ 98B9 21 2A 8C     	ld hl,Limite_vertical
 402+ 98BC 36 12        	ld (hl),$12
 403+ 98BE 08           	ex af,af
 404+ 98BF
 405+ 98BF C5           1 push bc
 406+ 98C0 E5           	push hl
 407+ 98C1 D5           	push de
 408+ 98C2
 409+ 98C2 2A 17 8C     	ld hl,(Posicion_actual)
 410+ 98C5 CD 79 94     	call Genera_coordenadas
 411+ 98C8
 412+ 98C8 D1           	pop de
 413+ 98C9 E1           	pop hl
 414+ 98CA C1           	pop bc
 415+ 98CB
 416+ 98CB 21 14 8C     	ld hl,Ctrl_0
 417+ 98CE CB EE        	set 5,(hl)
 418+ 98D0 C9           	ret
 419+ 98D1
 420+ 98D1              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98D1
 422+ 98D1              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98D1              ;
 424+ 98D1              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98D1
 426+ 98D1 7D           column ld a,l
 427+ 98D2 E6 1F        	and $1f
 428+ 98D4 FE 10         	cp $10
 429+ 98D6 C9            	ret
 430+ 98D7
 431+ 98D7              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98D7              ;
 433+ 98D7              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98D7              ;
 435+ 98D7              ; 14/12/22
 436+ 98D7              ;
 437+ 98D7              ;	Modifica: A y BC.
 438+ 98D7
 439+ 98D7 3A 26 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98DA E6 01        	and 1
 441+ 98DC 28 17        	jr z,1F
 442+ 98DE
 443+ 98DE              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98DE
 445+ 98DE 3A 08 8C     	ld a,(Coordenada_X)
 446+ 98E1 47           	ld b,a
 447+ 98E2 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98E3 79           	ld a,c
 449+ 98E4 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98E5 38 08        	jr c,2F
 451+ 98E7 47           	ld b,a
 452+ 98E8 79           	ld a,c
 453+ 98E9 90           	sub b
 454+ 98EA 32 27 8C     	ld (Columnas),a
 455+ 98ED 18 1B        	jr 4F
 456+ 98EF 79           2 ld a,c
 457+ 98F0 32 27 8C     	ld (Columnas),a
 458+ 98F3 18 15        	jr 4F
 459+ 98F5
 460+ 98F5              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98F5
 462+ 98F5 3A 08 8C     1 ld a,(Coordenada_X)
 463+ 98F8 81           	add c
 464+ 98F9 3D           	dec a
 465+ 98FA D6 1F        	sub $1f
 466+ 98FC 38 08        	jr c,3F
 467+ 98FE 47           	ld b,a
 468+ 98FF 79           	ld a,c
 469+ 9900 90           	sub b
 470+ 9901 32 27 8C     	ld (Columnas),a
 471+ 9904 18 04        	jr 4F
 472+ 9906 79           3 ld a,c
 473+ 9907 32 27 8C     	ld (Columnas),a
 474+ 990A D9           4 exx
 475+ 990B 4F           	ld c,a
 476+ 990C D9           	exx
 477+ 990D C9            ret
 478+ 990E
 479+ 990E              ; --------------------------------------------------------------------------------------------------------------------
 480+ 990E              ;
 481+ 990E              ;   19/7/23
 482+ 990E              ;
 483+ 990E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 990E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 990E              ;
 486+ 990E              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 990E              ;			HL e IY Contienen (Puntero_objeto).
 488+ 990E              ;
 489+ 990E              ;	DESTRUYE: HL,B Y A.
 490+ 990E
 491+ 990E 3A 26 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9911 FE 02        	cp 2
 493+ 9913 38 18        	jr c,1F
 494+ 9915 28 16        	jr z,1F
 495+ 9917 E6 01        	and 1
 496+ 9919 28 0D        	jr z,3F
 497+ 991B
 498+ 991B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 991B
 500+ 991B CD 57 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 991E
 502+ 991E 7D           9 ld a,l
 503+ 991F E6 1F        	and $1f
 504+ 9921 28 2A        	jr z,7F
 505+ 9923 2B           	dec hl
 506+ 9924 10 F8        	djnz 9B
 507+ 9926 18 25        	jr 7F
 508+ 9928
 509+ 9928              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9928
 511+ 9928 2A 17 8C     3 ld hl,(Posicion_actual)
 512+ 992B 18 20        	jr 7F
 513+ 992D
 514+ 992D 28 14        1 jr z,2F
 515+ 992F
 516+ 992F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 992F
 518+ 992F CD 57 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9932
 520+ 9932 7D           4 ld a,l
 521+ 9933 E6 1F        	and $1f
 522+ 9935 28 03        	jr z,6F
 523+ 9937 2B           	dec hl
 524+ 9938 10 F8        	djnz 4B
 525+ 993A 06 0F        6 ld b,15
 526+ 993C CD 7E 99     5 call PreviousScan
 527+ 993F 10 FB        	djnz 5B
 528+ 9941 18 0A        	jr 7F
 529+ 9943
 530+ 9943              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9943
 532+ 9943 CD 57 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9946 06 0F        	ld b,15
 534+ 9948 CD 7E 99     8 call PreviousScan
 535+ 994B 10 FB        	djnz 8B
 536+ 994D
 537+ 994D E5           7 push hl
 538+ 994E DD E1        	pop ix
 539+ 9950
 540+ 9950 2A 19 8C     	ld hl,(Puntero_objeto)
 541+ 9953 E5           	push hl
 542+ 9954 FD E1        	pop iy
 543+ 9956
 544+ 9956 C9           	ret
 545+ 9957
 546+ 9957              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9957              ;
 548+ 9957              ;	2/1/23
 549+ 9957              ;
 550+ 9957              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9957              ;
 552+ 9957              ;	Tras esta rutina tenemos:
 553+ 9957              ;
 554+ 9957              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9957              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9957              ;
 557+ 9957              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9957
 559+ 9957 2A 17 8C     Operandos ld hl,(Posicion_actual)
 560+ 995A 3A 27 8C     	ld a,(Columnas)
 561+ 995D 3D           	dec a
 562+ 995E 20 01        	jr nz,1F
 563+ 9960 3C           	inc a
 564+ 9961 47           1 ld b,a
 565+ 9962 C9           	ret
 566+ 9963
 567+ 9963              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9963              ;
 569+ 9963              ;	Prepara_draw
 570+ 9963              ;
 571+ 9963              ;	Es una rutina de carga.
 572+ 9963              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9963              ;
 574+ 9963              ;	FUNCIONAMIENTO:
 575+ 9963              ;
 576+ 9963              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9963              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9963              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9963              ;
 580+ 9963              ;	DESTRUYE:
 581+ 9963              ;
 582+ 9963              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9963
 584+ 9963 21 15 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9966 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9967 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9968 4E           	ld c,(hl)
 588+ 9969 2A 17 8C     	ld hl,(Posicion_actual)
 589+ 996C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 996E C9           	ret
 591+ 996F
 592+ 996F              ;----------------------------------------------------------------------------------------------------------------
 593+ 996F              ;
 594+ 996F              ;	5/08/22
 595+ 996F              ;
 596+ 996F              ;   NextScan.
 597+ 996F              ;
 598+ 996F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 996F              ;
 600+ 996F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 996F              ;
 602+ 996F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 996F              ;
 604+ 996F              ;       DESTRUIDOS: AF y HL !!!
 605+ 996F              ;
 606+ 996F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 996F              ;
 608+ 996F
 609+ 996F 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9970 7C               ld a,h
 611+ 9971 E6 07            and 7
 612+ 9973 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 9974
 614+ 9974 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9975 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9977 6F               ld l,a
 617+ 9978 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9979
 619+ 9979 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 997A D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 997C 67               ld h,a
 622+ 997D C9               ret
 623+ 997E
 624+ 997E              ;----------------------------------------------------------------------------------------------------------------
 625+ 997E              ;
 626+ 997E              ;	5/08/22
 627+ 997E              ;
 628+ 997E              ;   PreviousScan.
 629+ 997E              ;
 630+ 997E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 997E              ;
 632+ 997E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 997E              ;
 634+ 997E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 997E              ;
 636+ 997E              ;       DESTRUIDOS: AF y HL !!!
 637+ 997E              ;
 638+ 997E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 997E              ;
 640+ 997E
 641+ 997E 7C           PreviousScan ld a,h
 642+ 997F 25               dec h               ; Dec H.
 643+ 9980 E6 07            and 7
 644+ 9982 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9983
 646+ 9983 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9984 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9986 6F               ld l,a
 649+ 9987 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9988
 651+ 9988 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9989 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 998B 67               ld h,a
 654+ 998C C9               ret
 655+ 998D
 656+ 998D
 657+ 998D
 658+ 998D
 659+ 998D
 660+ 998D
 661+ 998D
 662+ 998D
 663+ 998D
 664+ 998D
 665+ 998D
 666+ 998D
# file closed: Draw_XOR.asm
2284  998D              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 998D
   2+ 998D              ; ******************************************************************************************************************************************************************************************
   3+ 998D              ;
   4+ 998D              ;   20/05/23
   5+ 998D              ;
   6+ 998D              ;	Recompone_posicion_inicio
   7+ 998D              ;
   8+ 998D              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 998D              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 998D              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 998D              ;	_ a una u otra rutina.
  12+ 998D
  13+ 998D              Recompone_posicion_inicio
  14+ 998D
  15+ 998D 2A 24 8C     	ld hl,(Posicion_inicio)
  16+ 9990 7D           	ld a,l
  17+ 9991 E6 1F        	and $1f
  18+ 9993 28 16        	jr z,1F
  19+ 9995
  20+ 9995 FE 1F        	cp $1f
  21+ 9997 28 0D        	jr z,3F
  22+ 9999
  23+ 9999 21 13 8C     	ld hl,Ctrl_2
  24+ 999C CB C6        	set 0,(hl)
  25+ 999E 2A 19 8C     	ld hl,(Puntero_objeto)
  26+ 99A1 22 45 8C     	ld (Repone_puntero_objeto),hl
  27+ 99A4 18 08        	jr 2F
  28+ 99A6
  29+ 99A6 CD 54 9B     3 call Mov_left
  30+ 99A9 18 03        	jr 2F
  31+ 99AB
  32+ 99AB CD 31 9A     1 call Mov_right
  33+ 99AE 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99B1 22 19 8C     	ld (Puntero_objeto),hl
  35+ 99B4 C9           	ret
  36+ 99B5
  37+ 99B5              ; ******************************************************************************************************************************************************************************************
  38+ 99B5              ;
  39+ 99B5              ;   27/05/23
  40+ 99B5              ;
  41+ 99B5              ;	Mov_down
  42+ 99B5              ;
  43+ 99B5              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99B5              ;
  45+ 99B5              ;
  46+ 99B5              Mov_down
  47+ 99B5
  48+ 99B5 CD 1F 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99B8              ;																	; _ repone (Puntero_objeto).
  50+ 99B8 21 14 8C     	ld hl,Ctrl_0
  51+ 99BB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99BD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99BD              ; 																	; _ en el caso de que no lo haya.
  54+ 99BD 3A 2F 8C     	ld a,(Vel_down)
  55+ 99C0 47           	ld b,a
  56+ 99C1 2A 17 8C         ld hl,(Posicion_actual)
  57+ 99C4 CD 5B 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99C7 E6 02        	and 2
  59+ 99C9 28 17        	jr z,1F
  60+ 99CB
  61+ 99CB              ; Nos encontramos en el último tercio de pantalla.
  62+ 99CB              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99CB
  64+ 99CB 7C           	ld a,h
  65+ 99CC FE 57        	cp $57
  66+ 99CE 20 12        	jr nz,1F
  67+ 99D0
  68+ 99D0 7D           	ld a,l
  69+ 99D1 C6 20        	add $20
  70+ 99D3 30 0D        	jr nc,1F
  71+ 99D5
  72+ 99D5              ; ------------------------------
  73+ 99D5              ;
  74+ 99D5              ;	12/01/24
  75+ 99D5
  76+ 99D5              ;	call Reaparece_arriba
  77+ 99D5 CD E1 9C     	call Reinicio
  78+ 99D8
  79+ 99D8              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99D8
  81+ 99D8 3A 6D 8C     	ld a,(Ctrl_3)
  82+ 99DB CB CF        	set 1,a
  83+ 99DD 32 6D 8C     	ld (Ctrl_3),a
  84+ 99E0
  85+ 99E0 18 08        	jr 3F
  86+ 99E2              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99E2              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99E2              ; ------------------------------
  89+ 99E2
  90+ 99E2 CD 6F 99     1 call NextScan
  91+ 99E5 22 17 8C     	ld (Posicion_actual),hl
  92+ 99E8 10 DA            djnz 2B
  93+ 99EA CD 79 94     3 call Genera_coordenadas
  94+ 99ED C9           	ret
  95+ 99EE
  96+ 99EE              ; ******************************************************************************************************************************************************************************************
  97+ 99EE              ;
  98+ 99EE              ;   27/05/23
  99+ 99EE              ;
 100+ 99EE              ;	Mov_up
 101+ 99EE              ;
 102+ 99EE              ; 	Mueve el Sprite hacia arriba.
 103+ 99EE              ;
 104+ 99EE              ;
 105+ 99EE              Mov_up
 106+ 99EE
 107+ 99EE CD 1F 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99F1              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99F1 21 14 8C     	ld hl,Ctrl_0
 110+ 99F4 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99F6              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99F6              ; 																		; _ en el caso de que no lo haya.
 113+ 99F6 3A 2E 8C     	ld a,(Vel_up)
 114+ 99F9 47           	ld b,a
 115+ 99FA 2A 17 8C     	ld hl,(Posicion_actual)
 116+ 99FD CD 5B 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A00 A7           	and a
 118+ 9A01 20 10        	jr nz,1F
 119+ 9A03
 120+ 9A03              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A03              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A03
 123+ 9A03 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A04 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A06 20 0B            jr nz,1F
 126+ 9A08 7D               ld a,l
 127+ 9A09 D6 20            sub $20
 128+ 9A0B 30 06            jr nc,1F
 129+ 9A0D 25               dec h
 130+ 9A0E
 131+ 9A0E              ; -----------------------------
 132+ 9A0E CD C2 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A11              ;	call Reinicio
 134+ 9A11              ; -----------------------------
 135+ 9A11
 136+ 9A11 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A13 CD 7E 99     1 call PreviousScan
 138+ 9A16 22 17 8C     	ld (Posicion_actual),hl
 139+ 9A19 10 E2            djnz 3B
 140+ 9A1B CD 79 94     2 call Genera_coordenadas
 141+ 9A1E C9           	ret
 142+ 9A1F
 143+ 9A1F              ; -----------------------------
 144+ 9A1F              ;
 145+ 9A1F              ;	27/5/23
 146+ 9A1F              ;
 147+ 9A1F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A1F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A1F              ;
 150+ 9A1F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A1F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A1F              ;
 153+ 9A1F              ;	Modifica: A y (Puntero_objeto).
 154+ 9A1F
 155+ 9A1F 3A 13 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A22 CB 47        	bit 0,a
 157+ 9A24 C8           	ret z
 158+ 9A25 CB 87        	res 0,a
 159+ 9A27 32 13 8C     	ld (Ctrl_2),a
 160+ 9A2A 2A 45 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A2D 22 19 8C     	ld (Puntero_objeto),hl
 162+ 9A30 C9           	ret
 163+ 9A31
 164+ 9A31              ; ******************************************************************************************************************************************************************************************
 165+ 9A31              ;
 166+ 9A31              ;	19/10/22
 167+ 9A31              ;
 168+ 9A31              ;	Mov_right.
 169+ 9A31              ;
 170+ 9A31              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A31              ;
 172+ 9A31
 173+ 9A31 3A 14 8C     Mov_right ld a,(Ctrl_0)
 174+ 9A34 CB 77        	bit 6,a
 175+ 9A36 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A38
 177+ 9A38 CD 70 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A3B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A3C
 180+ 9A3C 21 14 8C     	ld hl,Ctrl_0
 181+ 9A3F CB E6        	set 4,(hl)
 182+ 9A41 18 52        	jr 8F
 183+ 9A43
 184+ 9A43 21 14 8C     10 ld hl,Ctrl_0
 185+ 9A46 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A48              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A48              ; 																	; _ en el caso de que no lo haya.
 188+ 9A48 3A 08 8C     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A4B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A4D 20 46        	jr nz,8F
 191+ 9A4F
 192+ 9A4F 3A 1B 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A52 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A53 28 40        	jr z,8F
 195+ 9A55
 196+ 9A55              ; ---------- ---------- ----------
 197+ 9A55              ;
 198+ 9A55              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A55
 200+ 9A55 3A 2D 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A58 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A5A 28 11        	jr z,1F
 203+ 9A5C 38 06        	jr c,6F
 204+ 9A5E FE 04        	cp 4
 205+ 9A60 28 14        	jr z,7F
 206+ 9A62 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A64
 208+ 9A64              ; ---------- ---------- ----------
 209+ 9A64              ;
 210+ 9A64              ; Perfiles de velocidad
 211+ 9A64              ;
 212+ 9A64
 213+ 9A64 3A 1B 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A67 FE FE        	cp $fe
 215+ 9A69 20 2A        	jr nz,8F
 216+ 9A6B 18 10        	jr 3F
 217+ 9A6D 3A 1B 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A70 FE FD        	cp $fd
 219+ 9A72 20 21        	jr nz,8F
 220+ 9A74 18 07        	jr 3F
 221+ 9A76 3A 1B 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A79 FE FB        	cp $fb
 223+ 9A7B 20 18        	jr nz,8F
 224+ 9A7D
 225+ 9A7D              ; ---------- ---------- ----------
 226+ 9A7D
 227+ 9A7D              3
 228+ 9A7D CD B0 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A80              ;	call Reinicio
 230+ 9A80
 231+ 9A80              ; ---------- ---------- ----------
 232+ 9A80              ;
 233+ 9A80              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A80
 235+ 9A80 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A82 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A83 CD 9C 9A     	call DESPLZ_DER
 238+ 9A86 C1           	pop bc
 239+ 9A87 10 F9        	djnz 5B
 240+ 9A89 2A 17 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A8C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A8D 22 17 8C     	ld (Posicion_actual),hl
 243+ 9A90 CD 79 94     	call Genera_coordenadas
 244+ 9A93 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A95
 246+ 9A95              ; ---------- ---------- ----------
 247+ 9A95
 248+ 9A95 2A 17 8C     8 ld hl,(Posicion_actual)
 249+ 9A98 CD 9C 9A     	call DESPLZ_DER
 250+ 9A9B C9           2 ret
 251+ 9A9C
 252+ 9A9C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9A9C              ;
 254+ 9A9C              ;	22/9/22
 255+ 9A9C              ;
 256+ 9A9C
 257+ 9A9C CD AB 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9A9F CD F7 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9AA2 CD 20 9B         call Ciclo_completo
 260+ 9AA5 21 14 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AA8 CB FE        	set 7,(hl)
 262+ 9AAA C9           	ret
 263+ 9AAB
 264+ 9AAB              ; ******************************************************************************************************************************************************************************************
 265+ 9AAB              ;	15/02/23
 266+ 9AAB              ;
 267+ 9AAB
 268+ 9AAB 3A 2D 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9AAE 47           	ld b,a
 270+ 9AAF 2A 20 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AB2 23           1 inc hl
 272+ 9AB3 23           	inc hl
 273+ 9AB4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AB6 22 20 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AB9 CD 5A 90     	call Extrae_address
 276+ 9ABC 22 19 8C     	ld (Puntero_objeto),hl
 277+ 9ABF
 278+ 9ABF              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9ABF
 280+ 9ABF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9ABF              ; Cuántos movimientos hemos hecho ??
 282+ 9ABF              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9ABF
 284+ 9ABF 2A 1C 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9AC2 EB           	ex de,hl
 286+ 9AC3 A7           	and a
 287+ 9AC4 ED 52        	sbc hl,de
 288+ 9AC6 CB 3D        	srl l
 289+ 9AC8 3E 08        6 ld a,8
 290+ 9ACA 95           	sub l
 291+ 9ACB 30 1E        	jr nc,3F
 292+ 9ACD
 293+ 9ACD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9ACD              ; B="0".
 295+ 9ACD
 296+ 9ACD 04           4 inc b
 297+ 9ACE 3C           	inc a
 298+ 9ACF 20 FC        	jr nz,4B
 299+ 9AD1 78           	ld a,b
 300+ 9AD2 08           	ex af,af
 301+ 9AD3 2A 1C 8C     	ld hl,(Indice_Sprite_der)
 302+ 9AD6 23           5 inc hl
 303+ 9AD7 23           	inc hl
 304+ 9AD8 10 FC        	djnz 5B
 305+ 9ADA 22 20 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9ADD CD 5A 90     	call Extrae_address
 307+ 9AE0 22 19 8C     	ld (Puntero_objeto),hl
 308+ 9AE3
 309+ 9AE3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AE3              ; _(Posicion_actual).
 311+ 9AE3
 312+ 9AE3 21 17 8C     	ld hl,Posicion_actual
 313+ 9AE6 34           	inc (hl)
 314+ 9AE7 08               ex af,af
 315+ 9AE8 6F           	ld l,a
 316+ 9AE9 18 DD        	jr 6B
 317+ 9AEB
 318+ 9AEB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AEB
 320+ 9AEB 47           3 ld b,a
 321+ 9AEC 2A 1E 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9AEF 23           2 inc hl
 323+ 9AF0 23           	inc hl
 324+ 9AF1 10 FC        	djnz 2B
 325+ 9AF3 22 22 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9AF6 C9           8 ret
 327+ 9AF7
 328+ 9AF7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9AF7              ;
 330+ 9AF7              ;	24/7/22
 331+ 9AF7              ;
 332+ 9AF7              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9AF7              ;
 334+ 9AF7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9AF7              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9AF7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9AF7
 338+ 9AF7 3A 1B 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9AFA A7           	and a
 340+ 9AFB 20 1F        	jr nz,1F
 341+ 9AFD D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9AFF 32 1B 8C         ld (CTRL_DESPLZ),a
 343+ 9B02
 344+ 9B02 21 16 8C     	ld hl,Columns
 345+ 9B05 34           	inc (hl)
 346+ 9B06 3A 26 8C     	ld a,(Cuad_objeto)
 347+ 9B09 E6 01        	and 1
 348+ 9B0B 28 0F        	jr z,1F
 349+ 9B0D 2A 17 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B10 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B11 22 17 8C     	ld (Posicion_actual),hl
 352+ 9B14 CD 79 94     	call Genera_coordenadas
 353+ 9B17 CD 7C 9C     	call Inc_CTRL_DESPLZ
 354+ 9B1A 18 03        	jr 2F
 355+ 9B1C CD 7C 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B1F C9           2 ret
 357+ 9B20
 358+ 9B20              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B20              ;
 360+ 9B20              ;	24/7/22
 361+ 9B20              ;
 362+ 9B20              ;	Ciclo_completo.
 363+ 9B20              ;
 364+ 9B20              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B20              ;
 366+ 9B20              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B20              ; 	Decrementamos (Columns).
 368+ 9B20              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B20              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B20
 371+ 9B20
 372+ 9B20 3A 1B 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B23 FE FF        	cp $ff
 374+ 9B25 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B27 E6 F0        	and $f0
 376+ 9B29 20 28        	jr nz,3F
 377+ 9B2B
 378+ 9B2B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B2B
 380+ 9B2B 3A 1B 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B2E 47           	ld b,a
 382+ 9B2F 3E F8        	ld a,$f8
 383+ 9B31 80           	add b
 384+ 9B32 32 1B 8C     	ld (CTRL_DESPLZ),a
 385+ 9B35 18 1C        	jr 3F
 386+ 9B37 21 16 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B3A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B3B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B3C 32 1B 8C     	ld (CTRL_DESPLZ),a
 390+ 9B3F 3A 26 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B42 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B44 20 0A        	jr nz,2F
 393+ 9B46 2A 17 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B49 23           	inc hl
 395+ 9B4A 22 17 8C     	ld (Posicion_actual),hl
 396+ 9B4D CD 79 94     	call Genera_coordenadas
 397+ 9B50
 398+ 9B50              ; Inicia el puntero de Sprite.
 399+ 9B50
 400+ 9B50 CD 6F 90     2 call Inicia_puntero_objeto_der
 401+ 9B53 C9           3 ret
 402+ 9B54
 403+ 9B54              ; ******************************************************************************************************************************************************************************************
 404+ 9B54              ;
 405+ 9B54              ;	15/02/23
 406+ 9B54              ;
 407+ 9B54              ;	Mov_left.
 408+ 9B54              ;
 409+ 9B54              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B54              ;
 411+ 9B54              Mov_left
 412+ 9B54
 413+ 9B54 21 14 8C     	ld hl,Ctrl_0
 414+ 9B57 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B59              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B59              ; 																	; _ en el caso de que no lo haya.
 417+ 9B59 3A 14 8C     	ld a,(Ctrl_0)
 418+ 9B5C CB 77        	bit 6,a
 419+ 9B5E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B60
 421+ 9B60 CD 76 9C     	call Stop_Amadeus_left
 422+ 9B63 C8           	ret z
 423+ 9B64 20 4A        	jr nz,8F
 424+ 9B66
 425+ 9B66 3A 08 8C     11 ld a,(Coordenada_X)
 426+ 9B69 A7           	and a
 427+ 9B6A 20 44        	jr nz,8F
 428+ 9B6C
 429+ 9B6C 3A 1B 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B6F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B70 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B72
 433+ 9B72              ; ---------- ---------- ----------
 434+ 9B72
 435+ 9B72 3A 2C 8C     	ld a,(Vel_left)
 436+ 9B75 FE 02        	cp 2
 437+ 9B77 28 0F        	jr z,1F
 438+ 9B79 38 04        	jr c,6F
 439+ 9B7B FE 04        	cp 4
 440+ 9B7D 28 12        	jr z,7F
 441+ 9B7F
 442+ 9B7F              ; ---------- ---------- ----------
 443+ 9B7F
 444+ 9B7F 3A 1B 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9B82 FE F8        	cp $f8
 446+ 9B84 20 2A        	jr nz,8F
 447+ 9B86 18 10        	jr 4F
 448+ 9B88 3A 1B 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9B8B FE F9        	cp $f9
 450+ 9B8D 20 21        	jr nz,8F
 451+ 9B8F 18 07        	jr 4F
 452+ 9B91 3A 1B 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9B94 FE FB        	cp $fb
 454+ 9B96 20 18        	jr nz,8F
 455+ 9B98
 456+ 9B98              ; ---------- ---------- ----------
 457+ 9B98
 458+ 9B98              4
 459+ 9B98 CD 9E 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9B9B              ;	call Reinicio
 461+ 9B9B
 462+ 9B9B              ; ---------- ---------- ----------
 463+ 9B9B
 464+ 9B9B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9B9D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9B9E
 467+ 9B9E              ;	ld hl,(Indice_Sprite_izq)
 468+ 9B9E              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9B9E
 470+ 9B9E CD B7 9B     	call DESPLZ_IZQ
 471+ 9BA1 C1           	pop bc
 472+ 9BA2 10 F9        	djnz 5B
 473+ 9BA4 2A 17 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BA7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BA8 22 17 8C     	ld (Posicion_actual),hl
 476+ 9BAB CD 79 94     	call Genera_coordenadas
 477+ 9BAE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BB0
 479+ 9BB0              ; ---------- ---------- ----------
 480+ 9BB0
 481+ 9BB0              ; Movemos, no hay recolocación.
 482+ 9BB0
 483+ 9BB0 2A 17 8C     8 ld hl,(Posicion_actual)
 484+ 9BB3 CD B7 9B     	call DESPLZ_IZQ
 485+ 9BB6 C9           2 ret
 486+ 9BB7
 487+ 9BB7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BB7              ;
 489+ 9BB7              ;	22/9/22
 490+ 9BB7
 491+ 9BB7              DESPLZ_IZQ
 492+ 9BB7
 493+ 9BB7 CD C6 9B     	call Desplaza_izquierda
 494+ 9BBA CD 12 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BBD CD 3A 9C     	call Ciclo_completo_2
 496+ 9BC0 21 14 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BC3 CB BE        	res 7,(hl)
 498+ 9BC5 C9           	ret
 499+ 9BC6
 500+ 9BC6              Desplaza_izquierda
 501+ 9BC6
 502+ 9BC6 3A 2C 8C     	ld a,(Vel_left)
 503+ 9BC9 47           	ld b,a
 504+ 9BCA 2A 22 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BCD 23           1 inc hl
 506+ 9BCE 23           	inc hl
 507+ 9BCF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BD1 22 22 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BD4 CD 5A 90     	call Extrae_address
 510+ 9BD7 22 19 8C     	ld (Puntero_objeto),hl
 511+ 9BDA
 512+ 9BDA              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BDA
 514+ 9BDA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BDA              ; Cuántos movimientos hemos hecho ??
 516+ 9BDA              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BDA
 518+ 9BDA 2A 1E 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9BDD EB           	ex de,hl
 520+ 9BDE A7           	and a
 521+ 9BDF ED 52        	sbc hl,de
 522+ 9BE1 CB 3D        	srl l
 523+ 9BE3 3E 08        6 ld a,8
 524+ 9BE5 95           	sub l
 525+ 9BE6 30 1E        	jr nc,3F
 526+ 9BE8
 527+ 9BE8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BE8              ; B="0".
 529+ 9BE8
 530+ 9BE8 04           4 inc b
 531+ 9BE9 3C           	inc a
 532+ 9BEA 20 FC        	jr nz,4B
 533+ 9BEC 78           	ld a,b
 534+ 9BED 08           	ex af,af
 535+ 9BEE 2A 1E 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9BF1 23           5 inc hl
 537+ 9BF2 23           	inc hl
 538+ 9BF3 10 FC        	djnz 5B
 539+ 9BF5 22 22 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BF8 CD 5A 90     	call Extrae_address
 541+ 9BFB 22 19 8C     	ld (Puntero_objeto),hl
 542+ 9BFE
 543+ 9BFE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9BFE              ; _(Posicion_actual).
 545+ 9BFE
 546+ 9BFE 21 17 8C     	ld hl,Posicion_actual
 547+ 9C01 35           	dec (hl)
 548+ 9C02 08           	ex af,af
 549+ 9C03 6F           	ld l,a
 550+ 9C04 18 DD        	jr 6B
 551+ 9C06
 552+ 9C06              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C06
 554+ 9C06 47           3 ld b,a
 555+ 9C07 2A 1C 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C0A 23           2 inc hl
 557+ 9C0B 23           	inc hl
 558+ 9C0C 10 FC        	djnz 2B
 559+ 9C0E 22 20 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C11 C9           8 ret
 561+ 9C12
 562+ 9C12              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C12              ;
 564+ 9C12              ;	modifica_parametros_1er_DESPLZ
 565+ 9C12              ;
 566+ 9C12              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C12              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C12              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C12
 570+ 9C12 3A 1B 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C15 A7           	and a
 572+ 9C16 20 1E        	jr nz,1F
 573+ 9C18 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C19 32 1B 8C         ld (CTRL_DESPLZ),a
 575+ 9C1C 21 16 8C     	ld hl,Columns
 576+ 9C1F 34           	inc (hl)
 577+ 9C20 3A 26 8C     	ld a,(Cuad_objeto)
 578+ 9C23 E6 01        	and 1
 579+ 9C25 20 0F        	jr nz,1F
 580+ 9C27 2A 17 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C2A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C2B 22 17 8C     	ld (Posicion_actual),hl
 583+ 9C2E CD 79 94     	call Genera_coordenadas
 584+ 9C31 CD 8D 9C     	call Dec_CTRL_DESPLZ
 585+ 9C34 18 03        	jr 2F
 586+ 9C36 CD 8D 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C39 C9           2 ret
 588+ 9C3A
 589+ 9C3A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C3A
 591+ 9C3A 3A 1B 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C3D FE F7        	cp $f7
 593+ 9C3F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C41 30 2C        	jr nc,3F
 595+ 9C43
 596+ 9C43              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C43
 598+ 9C43 06 00        	ld b,0
 599+ 9C45 04           4 inc b
 600+ 9C46 3C           	inc a
 601+ 9C47 FE F7        	cp $f7
 602+ 9C49 20 FA        	jr nz,4B
 603+ 9C4B 3E FF        	ld a,$ff
 604+ 9C4D 90           	sub b
 605+ 9C4E 32 1B 8C     	ld (CTRL_DESPLZ),a
 606+ 9C51 18 1C        	jr 3F
 607+ 9C53
 608+ 9C53              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C53
 610+ 9C53 21 16 8C     1 ld hl,Columns
 611+ 9C56 35           	dec (hl)
 612+ 9C57 AF           	xor a
 613+ 9C58 32 1B 8C     	ld (CTRL_DESPLZ),a
 614+ 9C5B 3A 26 8C     	ld a,(Cuad_objeto)
 615+ 9C5E E6 01        	and 1
 616+ 9C60 28 0A        	jr z,2F
 617+ 9C62 2A 17 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C65 2B           	dec hl
 619+ 9C66 22 17 8C     	ld (Posicion_actual),hl
 620+ 9C69 CD 79 94     	call Genera_coordenadas
 621+ 9C6C
 622+ 9C6C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C6C
 624+ 9C6C CD 82 90     2 call Inicia_puntero_objeto_izq
 625+ 9C6F C9           3 ret
 626+ 9C70
 627+ 9C70              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C70              ;
 629+ 9C70              ;	19/10/22
 630+ 9C70              ;
 631+ 9C70              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C70              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C70
 634+ 9C70 3A 08 8C     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C73 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C75 C9           	ret
 637+ 9C76
 638+ 9C76              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C76              ;
 640+ 9C76              ;	19/10/22
 641+ 9C76              ;
 642+ 9C76              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C76              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C76
 645+ 9C76 3A 08 8C     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C79 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C7B C9           	ret
 648+ 9C7C
 649+ 9C7C              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C7C              ;
 651+ 9C7C              ;	24/7/22
 652+ 9C7C              ;
 653+ 9C7C              ;	Inc_CTRL_DESPLZ
 654+ 9C7C              ;
 655+ 9C7C              ;
 656+ 9C7C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C7C
 658+ 9C7C 21 1B 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C7F 3A 2D 8C     	ld a,(Vel_right)
 660+ 9C82 A7           	and a
 661+ 9C83 28 06        	jr z,1F
 662+ 9C85 47           	ld b,a
 663+ 9C86 34           3 inc (hl)
 664+ 9C87 10 FD        	djnz 3B
 665+ 9C89 18 01        	jr 2F
 666+ 9C8B 34           1 inc (hl)
 667+ 9C8C C9           2 ret
 668+ 9C8D
 669+ 9C8D              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C8D              ;
 671+ 9C8D              ;	5/2/23
 672+ 9C8D              ;
 673+ 9C8D              ;	Dec_CTRL_DESPLZ
 674+ 9C8D              ;
 675+ 9C8D              ;
 676+ 9C8D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C8D
 678+ 9C8D 21 1B 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C90 3A 2C 8C     	ld a,(Vel_left)
 680+ 9C93 A7           	and a
 681+ 9C94 28 06        	jr z,1F
 682+ 9C96 47           	ld b,a
 683+ 9C97 35           3 dec (hl)
 684+ 9C98 10 FD        	djnz 3B
 685+ 9C9A 18 01        	jr 2F
 686+ 9C9C 35           1 dec (hl)
 687+ 9C9D C9           2 ret
 688+ 9C9E
 689+ 9C9E              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9C9E
 691+ 9C9E 2A 17 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CA1 01 1F 00     	ld bc,31
 693+ 9CA4 A7           	and a
 694+ 9CA5 ED 4A        	adc hl,bc
 695+ 9CA7 22 17 8C     	ld (Posicion_actual),hl
 696+ 9CAA 21 14 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9CAD CB C6        	set 0,(hl)
 698+ 9CAF C9           	ret
 699+ 9CB0
 700+ 9CB0              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CB0
 702+ 9CB0 2A 17 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CB3 01 1F 00     	ld bc,31
 704+ 9CB6 A7           	and a
 705+ 9CB7 ED 42        	sbc hl,bc
 706+ 9CB9 22 17 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CBC 21 14 8C     	ld hl,Ctrl_0
 708+ 9CBF CB CE        	set 1,(hl)
 709+ 9CC1 C9           	ret
 710+ 9CC2
 711+ 9CC2              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CC2
 713+ 9CC2 24           Reaparece_abajo inc h
 714+ 9CC3 01 E0 17     	ld bc,$17e0
 715+ 9CC6 A7           	and a
 716+ 9CC7 ED 4A        	adc hl,bc
 717+ 9CC9 22 17 8C     	ld (Posicion_actual),hl
 718+ 9CCC 21 14 8C     	ld hl,Ctrl_0
 719+ 9CCF CB D6        	set 2,(hl)
 720+ 9CD1 C9           	ret
 721+ 9CD2
 722+ 9CD2              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CD2
 724+ 9CD2 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CD5 A7           	and a
 726+ 9CD6 ED 42        	sbc hl,bc
 727+ 9CD8 22 17 8C     	ld (Posicion_actual),hl
 728+ 9CDB 21 14 8C     	ld hl,Ctrl_0
 729+ 9CDE CB DE        	set 3,(hl)
 730+ 9CE0 C9           	ret
 731+ 9CE1
 732+ 9CE1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CE1              ;
 734+ 9CE1              ;	15/07/23
 735+ 9CE1
 736+ 9CE1              Reinicio
 737+ 9CE1
 738+ 9CE1              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CE1
 740+ 9CE1 AF           	xor a
 741+ 9CE2 21 3C 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9CE5 CD 03 9D     	call Limpia_contenido_hl
 743+ 9CE8
 744+ 9CE8 21 17 8C     	ld hl,Posicion_actual
 745+ 9CEB CD 03 9D     	call Limpia_contenido_hl
 746+ 9CEE
 747+ 9CEE CD 5B 92     	call Inicializa_Puntero_indice_mov
 748+ 9CF1 CD 02 9E     	call Inicia_Puntero_mov
 749+ 9CF4
 750+ 9CF4 21 3E 8C     	ld hl,Incrementa_puntero
 751+ 9CF7 06 05        	ld b,5
 752+ 9CF9 77           1 ld (hl),a
 753+ 9CFA 23           	inc hl
 754+ 9CFB 10 FC        	djnz 1B
 755+ 9CFD
 756+ 9CFD 21 13 8C     	ld hl,Ctrl_2
 757+ 9D00 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D02
 759+ 9D02 C9           	ret
 760+ 9D03
 761+ 9D03 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D04 23           	inc hl
 763+ 9D05 77           	ld (hl),a
 764+ 9D06 C9           	ret
 765+ 9D07
 766+ 9D07              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D07              ;
 768+ 9D07              ;	18/6/24
 769+ 9D07              ;
 770+ 9D07
 771+ 9D07              Amadeus_a_izquierda
 772+ 9D07
 773+ 9D07              ;	Actualiza contador de movimientos.
 774+ 9D07
 775+ 9D07 21 C5 89     	ld hl,Comm_Amadeus
 776+ 9D0A 35           	dec (hl)
 777+ 9D0B 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D0D
 779+ 9D0D 2A C3 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D10 2B           	dec hl
 781+ 9D11 2B           	dec hl
 782+ 9D12 2B           	dec hl
 783+ 9D13 2B           	dec hl
 784+ 9D14 22 C3 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D17
 786+ 9D17 21 6D 8C     	ld hl,Ctrl_3
 787+ 9D1A CB EE        	set 5,(hl)
 788+ 9D1C
 789+ 9D1C C9           	ret
 790+ 9D1D
 791+ 9D1D 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D1E C9           	ret
 793+ 9D1F
 794+ 9D1F
 795+ 9D1F              Amadeus_a_derecha
 796+ 9D1F
 797+ 9D1F              ;	Actualiza contador de movimientos.
 798+ 9D1F
 799+ 9D1F 21 C5 89     	ld hl,Comm_Amadeus
 800+ 9D22 34           	inc (hl)
 801+ 9D23 3E 7A        	ld a,$7a
 802+ 9D25 BE           	cp (hl)
 803+ 9D26 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D28
 805+ 9D28 2A C3 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D2B 23           	inc hl
 807+ 9D2C 23           	inc hl
 808+ 9D2D 23           	inc hl
 809+ 9D2E 23           	inc hl
 810+ 9D2F 22 C3 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D32
 812+ 9D32 21 6D 8C     	ld hl,Ctrl_3
 813+ 9D35 CB EE        	set 5,(hl)
 814+ 9D37 C9           	ret
 815+ 9D38
 816+ 9D38 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D39 C9           	ret
# file closed: Direcciones.asm
2285  9D3A              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D3A              ; ----- ----- ----- ----- -----
   2+ 9D3A              ;
   3+ 9D3A              ;   28/12/23
   4+ 9D3A
   5+ 9D3A              Movimiento
   6+ 9D3A
   7+ 9D3A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D3A
   9+ 9D3A 3A 13 8C         ld a,(Ctrl_2)
  10+ 9D3D CB 57            bit 2,a
  11+ 9D3F 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D41
  13+ 9D41 2A 3A 8C         ld hl,(Puntero_mov)
  14+ 9D44 7E               ld a,(hl)
  15+ 9D45
  16+ 9D45              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D45
  18+ 9D45              Inicia_desplazamiento.
  19+ 9D45
  20+ 9D45              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D45
  22+ 9D45 CD 38 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D48
  24+ 9D48              ; Iniciamos (Repetimos_mov).
  25+ 9D48
  26+ 9D48 7E               ld a,(hl)
  27+ 9D49 E6 0F            and $0f
  28+ 9D4B 32 40 8C         ld (Repetimos_desplazamiento),a
  29+ 9D4E 32 41 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9D51
  31+ 9D51              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D51
  33+ 9D51 23               inc hl
  34+ 9D52 7E               ld a,(hl)
  35+ 9D53 32 43 8C         ld (Cola_de_desplazamiento),a
  36+ 9D56 2B               dec hl
  37+ 9D57
  38+ 9D57 21 13 8C         ld hl,Ctrl_2
  39+ 9D5A CB D6            set 2,(hl)
  40+ 9D5C
  41+ 9D5C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D5C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D5C
  44+ 9D5C              Desplazamiento_iniciado
  45+ 9D5C
  46+ 9D5C CD 0C 9E         call Aplica_desplazamiento
  47+ 9D5F
  48+ 9D5F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D5F
  50+ 9D5F 3A 6D 8C         ld a,(Ctrl_3)
  51+ 9D62 CB 4F            bit 1,a
  52+ 9D64 C0               ret nz
  53+ 9D65
  54+ 9D65 21 40 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9D68 35               dec (hl)
  56+ 9D69 C0               ret nz
  57+ 9D6A
  58+ 9D6A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D6A              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D6A              ; Analiza (Cola_de_desplazamiento).
  61+ 9D6A
  62+ 9D6A 3A 43 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D6D A7               and a
  64+ 9D6E CC 61 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D71 28 30            jr z,Reinicia_el_movimiento
  66+ 9D73
  67+ 9D73 FE FF            cp $ff
  68+ 9D75 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D77
  70+ 9D77 FE FE            cp $fe
  71+ 9D79 CC E6 9D         call z,Fijamos_bucle
  72+ 9D7C 28 25            jr z,Reinicia_el_movimiento
  73+ 9D7E
  74+ 9D7E FE FD            cp $fd
  75+ 9D80 20 11            jr nz,1F
  76+ 9D82
  77+ 9D82              ; ---
  78+ 9D82              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D82
  80+ 9D82 3A 13 8C         ld a,(Ctrl_2)
  81+ 9D85 CB 5F            bit 3,a
  82+ 9D87 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D89
  84+ 9D89              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D89
  86+ 9D89 21 13 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D8C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D8E
  89+ 9D8E CD F7 9D         call Inicia_Repetimos_movimiento
  90+ 9D91 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D93              ; ---
  92+ 9D93
  93+ 9D93 FE 01        1 cp 1
  94+ 9D95 CA D0 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D98
  96+ 9D98 3D               dec a
  97+ 9D99 32 43 8C         ld (Cola_de_desplazamiento),a
  98+ 9D9C
  99+ 9D9C 3A 41 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9D9F 32 40 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DA2              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DA2 C9               ret
 103+ 9DA3
 104+ 9DA3              Reinicia_el_movimiento
 105+ 9DA3
 106+ 9DA3 3A 13 8C         ld a,(Ctrl_2)
 107+ 9DA6 CB 5F            bit 3,a
 108+ 9DA8 28 1B            jr z,2F
 109+ 9DAA
 110+ 9DAA              ; (Cola_de_desplazamiento)="254".
 111+ 9DAA
 112+ 9DAA 21 42 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DAD 35               dec (hl)
 114+ 9DAE 20 15            jr nz,2F
 115+ 9DB0
 116+ 9DB0              ; Fin de las repeticiones del último movimiento.
 117+ 9DB0
 118+ 9DB0 21 13 8C         ld hl,Ctrl_2
 119+ 9DB3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DB5
 121+ 9DB5 2A 3A 8C         ld hl,(Puntero_mov)
 122+ 9DB8 23               inc hl
 123+ 9DB9 23               inc hl
 124+ 9DBA 23               inc hl
 125+ 9DBB 22 3A 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DBE              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DBE 7E               ld a,(hl)
 128+ 9DBF 32 43 8C         ld (Cola_de_desplazamiento),a
 129+ 9DC2
 130+ 9DC2 C3 6A 9D         jp Cola
 131+ 9DC5
 132+ 9DC5 CD 02 9E     2 call Inicia_Puntero_mov
 133+ 9DC8
 134+ 9DC8 21 13 8C         ld hl,Ctrl_2
 135+ 9DCB CB 96            res 2,(hl)
 136+ 9DCD
 137+ 9DCD C3 3A 9D         jp Movimiento
 138+ 9DD0
 139+ 9DD0              Siguiente_desplazamiento
 140+ 9DD0
 141+ 9DD0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DD0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DD0
 144+ 9DD0 21 13 8C         ld hl,Ctrl_2
 145+ 9DD3 CB 96            res 2,(hl)
 146+ 9DD5
 147+ 9DD5 2A 3A 8C         ld hl,(Puntero_mov)
 148+ 9DD8 23               inc hl
 149+ 9DD9 23               inc hl
 150+ 9DDA 22 3A 8C         ld (Puntero_mov),hl
 151+ 9DDD
 152+ 9DDD 7E               ld a,(hl)
 153+ 9DDE A7               and a
 154+ 9DDF CC 61 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DE2 CA A3 9D         jp z,Reinicia_el_movimiento
 156+ 9DE5
 157+ 9DE5 C9               ret
 158+ 9DE6
 159+ 9DE6              ; Subrutinas -----------------------------------------
 160+ 9DE6              ; ---------- --------- --------- ---------- ----------
 161+ 9DE6              ;
 162+ 9DE6              ;   24/07/23
 163+ 9DE6              ;
 164+ 9DE6              ;   Fijamos_bucle
 165+ 9DE6              ;
 166+ 9DE6              ;
 167+ 9DE6
 168+ 9DE6              Fijamos_bucle
 169+ 9DE6
 170+ 9DE6 3A 3E 8C         ld a,(Incrementa_puntero)
 171+ 9DE9 3C               inc a
 172+ 9DEA 32 3F 8C         ld (Incrementa_puntero_backup),a
 173+ 9DED
 174+ 9DED CD 61 9E         call Incrementa_Puntero_indice_mov
 175+ 9DF0 2A 38 8C         ld hl,(Puntero_indice_mov)
 176+ 9DF3 22 3C 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9DF6 C9               ret
 178+ 9DF7
 179+ 9DF7              ; ---------- --------- --------- ---------- ----------
 180+ 9DF7              ;
 181+ 9DF7              ;   07/7/23
 182+ 9DF7              ;
 183+ 9DF7              ;   Inicia_Repetimos_movimiento
 184+ 9DF7              ;
 185+ 9DF7              ;
 186+ 9DF7
 187+ 9DF7              Inicia_Repetimos_movimiento
 188+ 9DF7
 189+ 9DF7              ; Iniciamos (Repetimos_movimiento).
 190+ 9DF7
 191+ 9DF7 DD 2A 3A 8C      ld ix,(Puntero_mov)
 192+ 9DFB DD 7E 02         ld a,(ix+2)
 193+ 9DFE 32 42 8C         ld (Repetimos_movimiento),a
 194+ 9E01
 195+ 9E01 C9               ret
 196+ 9E02
 197+ 9E02              ; ---------- --------- --------- ---------- ----------
 198+ 9E02              ;
 199+ 9E02              ;   26/6/23
 200+ 9E02              ;
 201+ 9E02              ;   Inicia_Puntero_mov
 202+ 9E02              ;
 203+ 9E02              ;
 204+ 9E02
 205+ 9E02 2A 38 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E05 CD 5A 90         call Extrae_address
 207+ 9E08 22 3A 8C         ld (Puntero_mov),hl
 208+ 9E0B C9               ret
 209+ 9E0C
 210+ 9E0C              ; ---------- --------- --------- ---------- ----------
 211+ 9E0C              ;
 212+ 9E0C              ;   27/06/23
 213+ 9E0C              ;
 214+ 9E0C              ;   Aplica_movimiento.
 215+ 9E0C
 216+ 9E0C              Aplica_desplazamiento
 217+ 9E0C
 218+ 9E0C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E0C
 220+ 9E0C 2A 3A 8C         ld hl, (Puntero_mov)
 221+ 9E0F
 222+ 9E0F 7E               ld a,(hl)
 223+ 9E10 E6 F0            and $f0
 224+ 9E12 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E13
 226+ 9E13 CB 7E            bit 7,(hl)
 227+ 9E15 28 03            jr z,1F
 228+ 9E17 CD EE 99         call Mov_up
 229+ 9E1A 2A 3A 8C     1 ld hl, (Puntero_mov)
 230+ 9E1D CB 76            bit 6,(hl)
 231+ 9E1F 28 03            jr z,2F
 232+ 9E21 CD B5 99         call Mov_down
 233+ 9E24
 234+ 9E24              ; Se ha aplicado reinicio ???
 235+ 9E24              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E24
 237+ 9E24              ;    ld a,(Ctrl_3)
 238+ 9E24              ;    bit 1,a
 239+ 9E24              ;    ret nz
 240+ 9E24
 241+ 9E24 2A 3A 8C     2 ld hl, (Puntero_mov)
 242+ 9E27 CB 6E            bit 5,(hl)
 243+ 9E29 28 03            jr z,3F
 244+ 9E2B CD 54 9B         call Mov_left
 245+ 9E2E 2A 3A 8C     3 ld hl, (Puntero_mov)
 246+ 9E31 CB 66            bit 4,(hl)
 247+ 9E33 C8               ret z
 248+ 9E34 CD 31 9A         call Mov_right
 249+ 9E37 C9               ret
 250+ 9E38
 251+ 9E38              ; ---------- --------- --------- ---------- ----------
 252+ 9E38              ;
 253+ 9E38              ;   26/06/23
 254+ 9E38              ;
 255+ 9E38              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E38
 257+ 9E38              Ajusta_velocidad_desplazamiento
 258+ 9E38
 259+ 9E38              ; 1er byte de la cadena de movimiento.
 260+ 9E38              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E38
 262+ 9E38 CD 56 9E         call Extrae_nibble_alto
 263+ 9E3B
 264+ 9E3B 32 2E 8C         ld (Vel_up),a
 265+ 9E3E 79               ld a,c
 266+ 9E3F E6 0F            and $0f
 267+ 9E41 32 2F 8C         ld (Vel_down),a
 268+ 9E44
 269+ 9E44              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E44              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E44
 272+ 9E44 23               inc hl
 273+ 9E45 CD 56 9E         call Extrae_nibble_alto
 274+ 9E48
 275+ 9E48 32 2C 8C         ld (Vel_left),a
 276+ 9E4B 79               ld a,c
 277+ 9E4C E6 0F            and $0f
 278+ 9E4E 32 2D 8C         ld (Vel_right),a
 279+ 9E51
 280+ 9E51              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E51
 282+ 9E51 23               inc hl
 283+ 9E52 22 3A 8C         ld (Puntero_mov),hl
 284+ 9E55 C9               ret
 285+ 9E56
 286+ 9E56 06 04        Extrae_nibble_alto ld b,4
 287+ 9E58 7E               ld a,(hl)
 288+ 9E59 4F               ld c,a
 289+ 9E5A E6 F0            and $f0
 290+ 9E5C CB 3F        1 srl a
 291+ 9E5E 10 FC            djnz 1B
 292+ 9E60 C9               ret
 293+ 9E61
 294+ 9E61              ; ---------- --------- --------- ---------- ----------
 295+ 9E61              ;
 296+ 9E61              ;   5/7/23
 297+ 9E61              ;
 298+ 9E61              ;   Incrementa_Puntero_indice_mov
 299+ 9E61
 300+ 9E61              Incrementa_Puntero_indice_mov
 301+ 9E61
 302+ 9E61 21 3E 8C         ld hl,Incrementa_puntero
 303+ 9E64 34               inc (hl)
 304+ 9E65
 305+ 9E65 2A 38 8C         ld hl,(Puntero_indice_mov)
 306+ 9E68 01 02 00         ld bc,2
 307+ 9E6B A7               and a
 308+ 9E6C 09               add hl,bc
 309+ 9E6D 22 38 8C         ld (Puntero_indice_mov),hl
 310+ 9E70
 311+ 9E70 7E               ld a,(hl)
 312+ 9E71 A7               and a
 313+ 9E72
 314+ 9E72              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E72
 316+ 9E72              ;    jr z,$
 317+ 9E72
 318+ 9E72              ;! Reinicia el Patrón de movimiento.
 319+ 9E72
 320+ 9E72 CC 77 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E75
 322+ 9E75 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E76
 324+ 9E76 C9               ret
 325+ 9E77
 326+ 9E77              ; ---------- --------- --------- ---------- ----------
 327+ 9E77              ;
 328+ 9E77              ;   15/01/24
 329+ 9E77              ;
 330+ 9E77              ;   Inicializa_Puntero_indice_mov
 331+ 9E77
 332+ 9E77              Inicializa_Puntero_indice_mov_2
 333+ 9E77
 334+ 9E77              ; Existe etiqueta de bucle principal???
 335+ 9E77
 336+ 9E77 2A 3C 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E7A 24               inc h
 338+ 9E7B 25               dec h
 339+ 9E7C 28 05            jr z,2F
 340+ 9E7E
 341+ 9E7E 22 38 8C         ld (Puntero_indice_mov),hl
 342+ 9E81 18 14            jr 3F
 343+ 9E83
 344+ 9E83              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E83
 346+ 9E83 3A 3E 8C     2 ld a,(Incrementa_puntero)
 347+ 9E86 47               ld b,a
 348+ 9E87
 349+ 9E87 2A 38 8C         ld hl,(Puntero_indice_mov)
 350+ 9E8A 2B           1 dec hl
 351+ 9E8B 2B               dec hl
 352+ 9E8C 10 FC            djnz 1B
 353+ 9E8E 22 38 8C         ld (Puntero_indice_mov),hl
 354+ 9E91
 355+ 9E91 AF               xor a
 356+ 9E92 32 3E 8C         ld (Incrementa_puntero),a
 357+ 9E95 18 06            jr 4F
 358+ 9E97
 359+ 9E97 3A 3F 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9E9A 32 3E 8C         ld (Incrementa_puntero),a
 361+ 9E9D C9           4 ret
 362+ 9E9E
 363+ 9E9E              ; ----------------------------------------------------------------------
 364+ 9E9E              ;
 365+ 9E9E              ;   30/01/24
 366+ 9E9E              ;
 367+ 9E9E              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9E9E
 369+ 9E9E 3A 07 8C     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EA1 CD F6 93         call Calcula_salto_en_BC
 371+ 9EA4 21 30 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EA7 A7               and a
 373+ 9EA8 ED 4A            adc hl,bc
 374+ 9EAA C9               ret
 375+ 9EAB
 376+ 9EAB              ; ----------------------------------------------------------------------
 377+ 9EAB              ;
 378+ 9EAB              ;   30/01/24
 379+ 9EAB              ;
 380+ 9EAB              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EAB              ;
 382+ 9EAB              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EAB
 384+ 9EAB 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EAC 23               inc hl
 386+ 9EAD 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EAE 69               ld l,c
 388+ 9EAF 60               ld h,b
 389+ 9EB0 22 10 8C         ld (Contador_de_mov_masticados),hl
 390+ 9EB3 C9               ret
 391+ 9EB4
# file closed: Movimiento.asm
2286  9EB4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EB4              ; --------------------------------------------------------------------------------------
   2+ 9EB4              ;
   3+ 9EB4              ;   12/8/24
   4+ 9EB4              ;
   5+ 9EB4
   6+ 9EB4              Genera_disparo_Amadeus
   7+ 9EB4
   8+ 9EB4              ;   Exclusiones.
   9+ 9EB4
  10+ 9EB4 3A 86 8C         ld a,(Disparo_Amadeus)
  11+ 9EB7 A7               and a
  12+ 9EB8 C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
  13+ 9EB9
  14+ 9EB9              Define_puntero_objeto_disparo
  15+ 9EB9
  16+ 9EB9              ;    dec a
  17+ 9EB9              ;    ld (Disparo_Amadeus),a                                  ;  Deshabilita el disparo.
  18+ 9EB9
  19+ 9EB9              ;   Inicializamos contador.
  20+ 9EB9
  21+ 9EB9 06 00            ld b,0
  22+ 9EBB 2A C1 89         ld hl,(p.imp.amadeus)
  23+ 9EBE 2C               inc l
  24+ 9EBF
  25+ 9EBF 3E 80            ld a,$80
  26+ 9EC1 BE               cp (hl)
  27+ 9EC2 28 0D            jr z,1F
  28+ 9EC4
  29+ 9EC4 04               inc b
  30+ 9EC5 3E 60            ld a,$60
  31+ 9EC7 BE               cp (hl)
  32+ 9EC8 28 07            jr z,1F
  33+ 9ECA
  34+ 9ECA 04               inc b
  35+ 9ECB 3E 18            ld a,$18
  36+ 9ECD BE               cp (hl)
  37+ 9ECE 28 01            jr z,1F
  38+ 9ED0
  39+ 9ED0 04               inc b
  40+ 9ED1
  41+ 9ED1              ;   Calcula el Puntero_de_impresión del disparo.
  42+ 9ED1
  43+ 9ED1 CD 7E 99     1 call PreviousScan
  44+ 9ED4 CD 7E 99         call PreviousScan
  45+ 9ED7 CD 7E 99         call PreviousScan
  46+ 9EDA
  47+ 9EDA 78               ld a,b
  48+ 9EDB CB 3F            srl a
  49+ 9EDD 28 03            jr z,4F
  50+ 9EDF
  51+ 9EDF              ; --- Guarda el puntero_de_impresión del disparo en la pila.
  52+ 9EDF E5               push hl
  53+ 9EE0 18 02            jr 5F
  54+ 9EE2 2D           4 dec l
  55+ 9EE3 E5               push hl
  56+ 9EE4              ; ---
  57+ 9EE4
  58+ 9EE4              ;   Calcula el Puntero_objeto del disparo.
  59+ 9EE4
  60+ 9EE4 21 A0 83     5 ld hl,Indice_disparo
  61+ 9EE7 04               inc b
  62+ 9EE8 05               dec b
  63+ 9EE9 28 04            jr z,2F
  64+ 9EEB
  65+ 9EEB              ;   Nos desplazamos por el índice de disparos.
  66+ 9EEB
  67+ 9EEB 2C           3 inc l
  68+ 9EEC 2C               inc l
  69+ 9EED 10 FC            djnz 3B
  70+ 9EEF
  71+ 9EEF              ; --- Guarda el Puntero_objeto del disparo en la pila.
  72+ 9EEF CD 5A 90     2 call Extrae_address
  73+ 9EF2 E5               push hl
  74+ 9EF3              ; ---
  75+ 9EF3
  76+ 9EF3              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
  77+ 9EF3              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
  78+ 9EF3
  79+ 9EF3 2A 71 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
  80+ 9EF6 CD 5A 90         call Extrae_address
  81+ 9EF9
  82+ 9EF9 06 02            ld b,2
  83+ 9EFB
  84+ 9EFB D1           6 pop de
  85+ 9EFC 73               ld (hl),e
  86+ 9EFD 23               inc hl
  87+ 9EFE 72               ld (hl),d
  88+ 9EFF 23               inc hl
  89+ 9F00
  90+ 9F00 10 F9            djnz 6B
  91+ 9F02
  92+ 9F02              Detecta_impacto_en_disparo_de_Amadeus
  93+ 9F02
  94+ 9F02 CD 37 9F         call Detecta_impacto_en_disparo_de_Amadeus01
  95+ 9F05
  96+ 9F05 2A 71 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
  97+ 9F08 23               inc hl
  98+ 9F09 23               inc hl
  99+ 9F0A CD 5A 90         call Extrae_address
 100+ 9F0D 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 101+ 9F0E 28 02            jr z,7F
 102+ 9F10 3E 01            ld a,1
 103+ 9F12 77           7 ld (hl),a
 104+ 9F13 C8               ret z
 105+ 9F14
 106+ 9F14              Genera_coordenadas_de_disparo_Amadeus
 107+ 9F14
 108+ 9F14              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 109+ 9F14              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 110+ 9F14
 111+ 9F14 F3               di
 112+ 9F15 18 FE            jr $
 113+ 9F17 FB               ei
 114+ 9F18
 115+ 9F18 2A 71 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 116+ 9F1B CD 5A 90         call Extrae_address
 117+ 9F1E 23               inc hl
 118+ 9F1F 23               inc hl
 119+ 9F20
 120+ 9F20 CD 5A 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 121+ 9F23 CD 79 94         call Genera_coordenadas
 122+ 9F26
 123+ 9F26 3D               dec a
 124+ 9F27
 125+ 9F27 21 76 8C         ld hl,Coordenadas_disparo_certero
 126+ 9F2A 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 127+ 9F2B 23               inc hl
 128+ 9F2C 3A 08 8C         ld a,(Coordenada_X)
 129+ 9F2F 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 130+ 9F30
 131+ 9F30 21 73 8C         ld hl,Impacto2
 132+ 9F33 CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 133+ 9F35
 134+ 9F35 AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 135+ 9F36 C9               ret
 136+ 9F37
 137+ 9F37              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 138+ 9F37              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 139+ 9F37              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 140+ 9F37
 141+ 9F37              ; ----------------------------------------------
 142+ 9F37              ;
 143+ 9F37              ;   12/08/24
 144+ 9F37              ;
 145+ 9F37
 146+ 9F37
 147+ 9F37              Detecta_impacto_en_disparo_de_Amadeus01
 148+ 9F37
 149+ 9F37              Extraccion_de_datos
 150+ 9F37
 151+ 9F37 21 56 89         ld hl,Indice_de_disparos_Amadeus
 152+ 9F3A CD 5A 90         call Extrae_address
 153+ 9F3D
 154+ 9F3D 5E               ld e,(hl)
 155+ 9F3E 23               inc hl
 156+ 9F3F 56               ld d,(hl)
 157+ 9F40 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 158+ 9F41
 159+ 9F41 4E               ld c,(hl)
 160+ 9F42 23               inc hl
 161+ 9F43 46               ld b,(hl)
 162+ 9F44 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 163+ 9F45
 164+ 9F45 C5               push bc
 165+ 9F46 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 166+ 9F47
 167+ 9F47              Detecta_impacto_
 168+ 9F47
 169+ 9F47 1A               ld a,(de)
 170+ 9F48 A6               and (hl)
 171+ 9F49 C0               ret nz
 172+ 9F4A
 173+ 9F4A 13               inc de
 174+ 9F4B 23               inc hl
 175+ 9F4C
 176+ 9F4C 1A               ld a,(de)
 177+ 9F4D A6               and (hl)
 178+ 9F4E C9               ret
 179+ 9F4F
 180+ 9F4F              ; -------------------------------------------------------------------------------------------------------------
 181+ 9F4F              ;
 182+ 9F4F              ;   8/8/24
 183+ 9F4F              ;
 184+ 9F4F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 185+ 9F4F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 186+ 9F4F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 187+ 9F4F              ;
 188+ 9F4F              ;   MODIFICA: HL,DE,BC y A.
 189+ 9F4F              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 190+ 9F4F              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 191+ 9F4F
 192+ 9F4F              Colision_Entidad_Amadeus
 193+ 9F4F
 194+ 9F4F              ; Posible contacto de entidad con Amadeus. ?????
 195+ 9F4F
 196+ 9F4F              ; Exclusiones:
 197+ 9F4F
 198+ 9F4F 3A 92 8C         ld a,(Shield)
 199+ 9F52 A7               and a
 200+ 9F53 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 201+ 9F54
 202+ 9F54 21 6D 8C         ld hl,Ctrl_3
 203+ 9F57 CB 76            bit 6,(hl)
 204+ 9F59 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 205+ 9F5A
 206+ 9F5A 21 73 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 207+ 9F5D CB 56            bit 2,(hl)
 208+ 9F5F C0               ret nz
 209+ 9F60
 210+ 9F60 3A 09 8C     	ld a,(Coordenada_y)
 211+ 9F63 FE 14        	cp $14
 212+ 9F65 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 213+ 9F66
 214+ 9F66 3A C0 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 215+ 9F69 A7               and a
 216+ 9F6A C0               ret nz
 217+ 9F6B
 218+ 9F6B              Genera_coordenadas_X
 219+ 9F6B
 220+ 9F6B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 221+ 9F6B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 222+ 9F6B
 223+ 9F6B              ;   Limpiamos almacenes.
 224+ 9F6B
 225+ 9F6B              ;    call Limpia_Coordenadas_X
 226+ 9F6B
 227+ 9F6B              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 228+ 9F6B
 229+ 9F6B 21 78 8C         ld hl,Coordenadas_X_Entidad
 230+ 9F6E 3A 08 8C         ld a,(Coordenada_X)
 231+ 9F71 CD 93 9F         call Guarda_coordenadas_X
 232+ 9F74
 233+ 9F74              ;   Almacenamos las coordenadas X de Amadeus.
 234+ 9F74
 235+ 9F74 3A BD 89         ld a,(CX_Amadeus)
 236+ 9F77 CD 93 9F         call Guarda_coordenadas_X
 237+ 9F7A CD A7 9F         call Compara_coordenadas_X
 238+ 9F7D C0               ret nz
 239+ 9F7E
 240+ 9F7E 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 241+ 9F80 32 0B 8C         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 242+ 9F83
 243+ 9F83 2A 47 8C         ld hl,(Puntero_store_caja)
 244+ 9F86 2C               inc l
 245+ 9F87 2C               inc l
 246+ 9F88 2C               inc l
 247+ 9F89 2C               inc l
 248+ 9F8A 22 74 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 249+ 9F8D
 250+ 9F8D 21 73 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 251+ 9F90 CB D6            set 2,(hl)
 252+ 9F92
 253+ 9F92 C9               ret
 254+ 9F93
 255+ 9F93               ; ----- ----- ----- ----- -----
 256+ 9F93
 257+ 9F93 77           Guarda_coordenadas_X ld (hl),a
 258+ 9F94 3C               inc a
 259+ 9F95 2C               inc l
 260+ 9F96 77               ld (hl),a
 261+ 9F97 3C               inc a
 262+ 9F98 2C               inc l
 263+ 9F99 77               ld (hl),a
 264+ 9F9A 2C               inc l
 265+ 9F9B C9               ret
 266+ 9F9C
 267+ 9F9C AF           Limpia_Coordenadas_X xor a
 268+ 9F9D 06 06            ld b,6
 269+ 9F9F 21 7B 8C         ld hl,Coordenadas_X_Amadeus
 270+ 9FA2 77           1 ld (hl),a
 271+ 9FA3 23               inc hl
 272+ 9FA4 10 FC            djnz 1B
 273+ 9FA6 C9               ret
 274+ 9FA7
 275+ 9FA7              ; ----- ----- ----- ----- -----
 276+ 9FA7
 277+ 9FA7              Compara_coordenadas_X
 278+ 9FA7
 279+ 9FA7 DD 21 78 8C      ld ix,Coordenadas_X_Entidad
 280+ 9FAB DD 7E 00         ld a,(ix+0)
 281+ 9FAE CD BC 9F         call Comparando
 282+ 9FB1 C8               ret z
 283+ 9FB2
 284+ 9FB2 3C               inc a
 285+ 9FB3 CD CB 9F         call Comparando_1
 286+ 9FB6 C8               ret z
 287+ 9FB7
 288+ 9FB7 3C               inc a
 289+ 9FB8 CD CB 9F         call Comparando_1
 290+ 9FBB C9               ret
 291+ 9FBC
 292+ 9FBC              ; ----- ----- ----- ----- -----
 293+ 9FBC              ;
 294+ 9FBC              ;   4/12/23
 295+ 9FBC              ;
 296+ 9FBC              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 297+ 9FBC
 298+ 9FBC              Comparando
 299+ 9FBC
 300+ 9FBC DD 2C            inc ixl
 301+ 9FBE DD 2C            inc ixl
 302+ 9FC0 DD 2C            inc ixl
 303+ 9FC2
 304+ 9FC2 DD 46 00         ld b,(ix+0)
 305+ 9FC5 DD 4E 01         ld c,(ix+1)
 306+ 9FC8 DD 56 02         ld d,(ix+2)
 307+ 9FCB
 308+ 9FCB B8           Comparando_1 cp b
 309+ 9FCC C8               ret z
 310+ 9FCD B9               cp c
 311+ 9FCE C8               ret z
 312+ 9FCF BA               cp d
 313+ 9FD0 C9               ret
 314+ 9FD1
 315+ 9FD1              ; -----------------------------------------------------------------------
 316+ 9FD1              ;
 317+ 9FD1              ;   04/7/24
 318+ 9FD1              ;
 319+ 9FD1
 320+ 9FD1              Detecta_colision_nave_entidad
 321+ 9FD1
 322+ 9FD1              ; Exclusiones:
 323+ 9FD1
 324+ 9FD1              ; Salimos de la rutina si no hay advertencia de posible colisión.
 325+ 9FD1
 326+ 9FD1 21 73 8C     	ld hl,Impacto2
 327+ 9FD4 CB 56        	bit 2,(hl)
 328+ 9FD6 C8           	ret z
 329+ 9FD7
 330+ 9FD7              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 331+ 9FD7
 332+ 9FD7 2A C3 89         ld hl,(Pamm_Amadeus)
 333+ 9FDA CD 5A 90         call Extrae_address
 334+ 9FDD 54               ld d,h
 335+ 9FDE 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 336+ 9FDF
 337+ 9FDF 2A C1 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 338+ 9FE2 06 10            ld b,16                                        ; Contador de scanlines en B.
 339+ 9FE4 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 340+ 9FE7
 341+ 9FE7 C5           1 push bc
 342+ 9FE8 06 03            ld b,3
 343+ 9FEA E5               push hl
 344+ 9FEB
 345+ 9FEB              ; .db
 346+ 9FEB
 347+ 9FEB 1A           3 ld a,(de)
 348+ 9FEC A7               and a
 349+ 9FED 20 03            jr nz,4F
 350+ 9FEF
 351+ 9FEF 2C               inc l
 352+ 9FF0 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 353+ 9FF2
 354+ 9FF2 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 355+ 9FF4 28 04            jr z,2F
 356+ 9FF6
 357+ 9FF6              ; Impacto.
 358+ 9FF6 FD 2D            dec iyl
 359+ 9FF8 28 22            jr z,5F
 360+ 9FFA
 361+ 9FFA 1C           2 inc e
 362+ 9FFB 10 EE            djnz 3B
 363+ 9FFD
 364+ 9FFD E1               pop hl
 365+ 9FFE
 366+ 9FFE              ; Hay salto de línea en el puntero de impresión ???
 367+ 9FFE
 368+ 9FFE 7C               ld a,h
 369+ 9FFF D6 57            sub $57
 370+ A001 20 0A            jr nz,6F
 371+ A003
 372+ A003              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 373+ A003
 374+ A003 2A C1 89         ld hl,(p.imp.amadeus)
 375+ A006 3E 20            ld a,$20
 376+ A008 A7               and a
 377+ A009 85               add l
 378+ A00A 6F               ld l,a
 379+ A00B 18 01            jr 7F
 380+ A00D
 381+ A00D 24           6 inc h
 382+ A00E
 383+ A00E C1           7 pop bc
 384+ A00F 10 D6            djnz 1B
 385+ A011
 386+ A011              ;   Fin de la comparativa.
 387+ A011
 388+ A011              ;   NO HAY COLISIÓN !!!!!.
 389+ A011              ;
 390+ A011              ;   .db (Impacto) de Amadeus a "0".
 391+ A011              ;   RES el bit2 de (Impacto2).
 392+ A011              ;
 393+ A011              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 394+ A011              ;   Lo colocamos a "0".
 395+ A011
 396+ A011 21 73 8C         ld hl,Impacto2
 397+ A014 CB 96            res 2,(hl)
 398+ A016 2A 74 8C         ld hl,(Entidad_sospechosa_de_colision)
 399+ A019 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 400+ A01B C9               ret
 401+ A01C
 402+ A01C              ;   POSIBLE COLISIÓN !!!!!.
 403+ A01C              ;
 404+ A01C              ;   .db (Impacto) de Amadeus a "1".
 405+ A01C              ;   SET el bit3 de (Impacto2).
 406+ A01C              ;
 407+ A01C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 408+ A01C
 409+ A01C E1           5 pop hl
 410+ A01D C1               pop bc
 411+ A01E
 412+ A01E 21 C0 89         ld hl,Impacto_Amadeus
 413+ A021 36 01            ld (hl),1
 414+ A023 21 73 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 415+ A026 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 416+ A028
 417+ A028 11 D0 87         ld de,Indice_Explosion_entidades
 418+ A02B 2A 74 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 419+ A02E 2C               inc l
 420+ A02F 2C               inc l
 421+ A030 2C               inc l
 422+ A031 73               ld (hl),e
 423+ A032 2C               inc l
 424+ A033 72               ld (hl),d
 425+ A034
 426+ A034              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 427+ A034
 428+ A034 11 90 88         ld de,Indice_Explosion_Amadeus
 429+ A037 21 C3 89         ld hl,Pamm_Amadeus
 430+ A03A 73               ld (hl),e
 431+ A03B 2C               inc l
 432+ A03C 72               ld (hl),d
 433+ A03D
 434+ A03D C9               ret
 435+ A03E
 436+ A03E
 437+ A03E
# file closed: Disparo.asm
2287  A03E
2288  A03E              	SAVESNA "Pruebas.sna", START
2289  A03E
2290  A03E
2291  A03E
2292  A03E
# file closed: Banco_de_pruebas.asm
