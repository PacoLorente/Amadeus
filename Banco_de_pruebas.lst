# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 29 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Shield -----------------------
  67  82FD
  68  82FD              Temporizacion_shield
  69  82FD
  70  82FD 21 4E 8C     	ld hl,Shield
  71  8300 7E           	ld a,(hl)
  72  8301 A7           	and a
  73  8302 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  74  8304
  75  8304 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  76  8305
  77  8305 23           	inc hl
  78  8306 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  79  8307
  80  8307 20 17        	jr nz,Incrementa_FRAMES
  81  8309
  82  8309              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  83  8309
  84  8309              Cambio_de_estado
  85  8309
  86  8309              ;	Indica cambio de estado.
  87  8309
  88  8309 23           	inc hl						;	Sitúa en (Shield_3).
  89  830A
  90  830A CB 5E        	bit 3,(hl)
  91  830C 28 05        	jr z,2F
  92  830E
  93  830E CD A1 90     	call Inicia_Shield
  94  8311
  95  8311 18 0D        	jr Incrementa_FRAMES
  96  8313
  97  8313 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
  98  8315
  99  8315              ;	Carga en (Shield_2) la siguiente temporización.
 100  8315
 101  8315 2A 4C 8C     	ld hl,(Puntero_datos_shield)
 102  8318 23           	inc hl
 103  8319 22 4C 8C     	ld (Puntero_datos_shield),hl
 104  831C 7E           	ld a,(hl)
 105  831D 32 4F 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 106  8320
 107  8320              Incrementa_FRAMES
 108  8320
 109  8320 2A 78 5C     	ld hl,(FRAMES)
 110  8323 23           	inc hl
 111  8324 22 78 5C     	ld (FRAMES),hl
 112  8327
 113  8327 7C           	ld a,h
 114  8328 B5           	or l
 115  8329 20 04        	jr nz,1F
 116  832B
 117  832B 21 7A 5C     	ld hl,FRAMES_3
 118  832E 34           	inc (hl)
 119  832F
 120  832F D5           1 push de
 121  8330 C5           	push bc
 122  8331
 123  8331 CD B1 90     	call Actualiza_pantalla
 124  8334
 125  8334 C1           	pop bc
 126  8335 D1           	pop de
 127  8336 E1           	pop hl
 128  8337 F1           	pop af
 129  8338
 130  8338 FB           	ei
 131  8339
 132  8339 C9           	ret
 133  833A
 134  833A              ; --------------------------------------------------------------------------------
 135  833A
 136  833A              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833A              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833A              ;
   3+ 833A              ;	17/02/23
   4+ 833A              ;
   5+ 833A              ;	Sprites e índices.
   6+ 833A
   7+ 833A              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 137  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 138  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 139  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 140  8BBB
 141  8BBB              ; --------------------------------------------------------------------------------
 142  8BBB              ;
 143  8BBB              ; 12/05/24
 144  8BBB              ;
 145  8BBB              ; Parámetros DRAW.
 146  8BBB              ;
 147  8BBB
 148  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 149  8BBB
 150  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  8BBC              ;															- Patrón de movimiento.
 152  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 153  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 154  8BBE
 155  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 156  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 157  8BBF
 158  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 159  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 160  8BBF              ; Ejemplos.
 161  8BBF
 162  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 163  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 164  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 165  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 166  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 167  8BBF
 168  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 169  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 170  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 171  8BC0
 172  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 173  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 174  8BC2
 175  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 176  8BC4
 177  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 178  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 179  8BC4
 180  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 181  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 182  8BC6
 183  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 184  8BC6
 185  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 186  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 187  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 188  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 189  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 190  8BC7
 191  8BC7 00           Ctrl_2 db 0
 192  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 193  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 194  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 195  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 196  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 197  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 198  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 199  8BC8              ;
 200  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 201  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 202  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 203  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 204  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 205  8BC8              ;														BIT 4, ???
 206  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 207  8BC8
 208  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 209  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 210  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 211  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 212  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 213  8BC9              ;
 214  8BC9              ; 														DESCRIPCIÖN:
 215  8BC9              ;
 216  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 217  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 218  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 219  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 220  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 221  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 222  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 223  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 224  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 225  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 226  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 227  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 228  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 229  8BC9              ;
 230  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 231  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 232  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 233  8BC9
 234  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 235  8BC9
 236  8BC9 00           Filas db 0												; Filas. [DRAW]
 237  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 238  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 239  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 240  8BCF
 241  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 242  8BCF
 243  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 244  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 245  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 246  8BD0
 247  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 248  8BD0
 249  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 250  8BD0              ;
 251  8BD0              ;	COLORES: 0 ..... NEGRO
 252  8BD0              ;    		 1 ..... AZUL
 253  8BD0              ; 			 2 ..... ROJO
 254  8BD0              ;			 3 ..... MAGENTA
 255  8BD0              ; 			 4 ..... VERDE
 256  8BD0              ; 			 5 ..... CIAN
 257  8BD0              ;			 6 ..... AMARILLO
 258  8BD0              ; 			 7 ..... BLANCO
 259  8BD0
 260  8BD0 00 00        Indice_Sprite_der defw 0
 261  8BD2 00 00        Indice_Sprite_izq defw 0
 262  8BD4 00 00        Puntero_DESPLZ_der defw 0
 263  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 264  8BD8
 265  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 266  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 267  8BDB 00           Columnas db 0
 268  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 269  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 270  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 271  8BDF
 272  8BDF              ; variables de control general.
 273  8BDF
 274  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 275  8BE0
 276  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 277  8BE0
 278  8BE0              Perfiles_de_velocidad
 279  8BE0
 280  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 281  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 282  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 283  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 284  8BE4
 285  8BE4              ; Contadores de 16 bits.
 286  8BE4
 287  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 288  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 289  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 290  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 291  8BEC
 292  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 293  8BEC
 294  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 295  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 296  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 297  8BF2              ;
 298  8BF2              ;
 299  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 300  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 301  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 302  8BF3 00           Incrementa_puntero_backup db 0
 303  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 304  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 305  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 306  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 307  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 308  8BF8              ;
 309  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 310  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 311  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 312  8BF8              ;
 313  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 314  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 315  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 316  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 317  8BF8              ;
 318  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 319  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 320  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 321  8BF8
 322  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 323  8BF9
 324  8BF9              ;														DESCRIPCIÓN:
 325  8BF9              ;
 326  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 327  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 328  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 329  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 330  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 331  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 332  8BF9
 333  8BF9              ;														BIT 3, Recarga de nueva oleada.
 334  8BF9              ;														BIT 4, Recarga de nueva oleada.
 335  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 336  8BF9              ;														BIT 6, **** Frame completo.
 337  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 338  8BF9
 339  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 340  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 341  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 342  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 343  8BFB
 344  8BFB              ; Gestión de ENTIDADES y CAJAS.
 345  8BFB
 346  8BFB 00 00        Puntero_store_caja defw 0
 347  8BFD 00 00        Puntero_restore_caja defw 0
 348  8BFF 00 00        Indice_restore_caja defw 0
 349  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 350  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 351  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 352  8C04              ;Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 353  8C04              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 354  8C04              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 355  8C04              ;														; _ (Numero_de_malotes)="0".
 356  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 357  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 358  8C08              ;														; _ puntero (Indice_entidades).
 359  8C08
 360  8C08              ;---------------------------------------------------------------------------------------------------------------
 361  8C08              ;
 362  8C08              ;	12/08/24
 363  8C08              ;
 364  8C08              ;	Álbumes.
 365  8C08
 366  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 367  8C0A              ;														; _variable para almacenar lo posición del puntero_
 368  8C0A              ; 														; _de pila, SP.
 369  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 370  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 371  8C0C
 372  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 373  8C0C
 374  8C0C 00 00        Album_de_pintado defw 0
 375  8C0E 00 00        Album_de_borrado defw 0
 376  8C10 00 00        Album_de_pintado_Amadeus defw 0
 377  8C12 00 00        Album_de_borrado_Amadeus defw 0
 378  8C14 00 00        Album_de_pintado_disparos defw 0
 379  8C16 00 00        Album_de_borrado_disparos defw 0
 380  8C18
 381  8C18 00 00        Nivel_scanlines_disparos_album defw 0
 382  8C1A 00 00        Puntero_rancio_disparos_album defw 0
 383  8C1C
 384  8C1C 00 00        Techo_Scanlines_album defw 0
 385  8C1E 00 00        Techo_Scanlines_album_2 defw 0
 386  8C20 00           Switch db 0
 387  8C21 00 00        Techo defw 0
 388  8C23 00 00        Scanlines_album_SP defw 0
 389  8C25 00 89        India_SP defw Tabla_de_pintado
 390  8C27 03 89        India_2_SP defw Tabla_de_pintado+3
 391  8C29
 392  8C29 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 393  8C2A              ;
 394  8C2A              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 395  8C2A              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 396  8C2A              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 397  8C2A              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 398  8C2A              ;																Habilita el borrado/pintado de sprites.
 399  8C2A              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 400  8C2A              ;																_ a la baja.
 401  8C2A              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 402  8C2A              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 403  8C2A              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 404  8C2A              ; 																_ el último frame de la explosión de nuestra nave.
 405  8C2A              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 406  8C2A              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 407  8C2A
 408  8C2A 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 409  8C2B              ;
 410  8C2B              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 411  8C2B              ;
 412  8C2B              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 413  8C2B              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 414  8C2B              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 415  8C2B              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 416  8C2B              ;
 417  8C2B              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 418  8C2B              ;															_ masticados ya generados.
 419  8C2B              ;
 420  8C2B              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 421  8C2B              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 422  8C2B              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 423  8C2B              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 424  8C2B
 425  8C2B
 426  8C2B              ; Gestión de Disparos.
 427  8C2B
 428  8C2B              ;Numero_de_disparotes db 0
 429  8C2B
 430  8C2B 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 431  8C2D 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 432  8C2F
 433  8C2F 00           Impacto2 db 0											; Byte de control de impactos.
 434  8C30
 435  8C30              ;
 436  8C30              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 437  8C30              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 438  8C30              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 439  8C30              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 440  8C30
 441  8C30
 442  8C30
 443  8C30
 444  8C30
 445  8C30
 446  8C30
 447  8C30 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 448  8C32              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 449  8C32              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 450  8C32
 451  8C32 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 452  8C34              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 453  8C34 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 454  8C37              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 455  8C37 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 456  8C3A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 457  8C3A
 458  8C3A              ;---------------------------------------------------------------------------------------------------------------
 459  8C3A
 460  8C3A              ; Relojes y temporizaciones.
 461  8C3A
 462  8C3A 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 463  8C3B 05           Clock_explosion_Amadeus db 5
 464  8C3C 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 465  8C3D
 466  8C3D F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 467  8C3F
 468  8C3F 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 469  8C41 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 470  8C42              ;														; Repite la oleada de entidades.
 471  8C42 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 472  8C43
 473  8C43              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 474  8C43              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 475  8C43
 476  8C43              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 477  8C43              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 478  8C43              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 479  8C43
 480  8C43              ;---------------------------------------------------------------------------------------------------------------
 481  8C43
 482  8C43              ; Gestión de NIVELES.
 483  8C43
 484  8C43 00           Nivel db 0												; Nivel actual del juego.
 485  8C44 00 00        Puntero_indice_NIVELES defw 0
 486  8C46 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 487  8C48              ; 														; _ que definen el NIVEL.
 488  8C48
 489  8C48              ; ---------------------------------------------------------------------------------------------------------------
 490  8C48
 491  8C48              ; Temporizaciones Shield.
 492  8C48
 493  8C48 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 494  8C4C 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 495  8C4E 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 496  8C4F 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 497  8C50 00           Shield_3 db 0
 498  8C51
 499  8C51 06           Lives db 6
 500  8C52
 501  8C52              ; 	INICIO  *************************************************************************************************************************************************************************
 502  8C52              ;
 503  8C52              ;	5/1/24
 504  8C52
 505  8C52              START
 506  8C52
 507  8C52 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 508  8C55 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 509  8C57 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 510  8C59 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 511  8C5B F3           	DI
 512  8C5C
 513  8C5C              ; Limpiamos pantalla.
 514  8C5C
 515  8C5C 3E 07        	ld a,%00000111
 516  8C5E              ;	call Cls
 517  8C5E CD 96 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 518  8C61
 519  8C61              ; INICIALIZACIÓN.
 520  8C61
 521  8C61 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 522  8C63 CD E1 91     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 523  8C66 CD 2A 8E     	call Extrae_numero_aleatorio_y_avanza
 524  8C69
 525  8C69 6F           	ld l,a
 526  8C6A 26 00        	ld h,0
 527  8C6C 22 3F 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 528  8C6F
 529  8C6F              ;	Inicializa 1er Nivel.
 530  8C6F
 531  8C6F 21 97 8B     	ld hl,Indice_de_niveles
 532  8C72 22 44 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 533  8C75 CD 11 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 534  8C78              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 535  8C78              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 536  8C78              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 537  8C78
 538  8C78              ;	Inicia los álbumes de líneas.
 539  8C78
 540  8C78 CD DF 8F     	call Inicia_albumes_de_lineas
 541  8C7B              ;
 542  8C7B CD EF 8F     	call Inicia_albumes_de_lineas_Amadeus
 543  8C7E CD FC 8F     	call Inicia_albumes_de_disparos
 544  8C81
 545  8C81
 546  8C81 CD 56 92     4 call Inicia_Entidades
 547  8C84 CD B9 92     	call Inicia_Amadeus
 548  8C87
 549  8C87              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 550  8C87              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 551  8C87              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 552  8C87
 553  8C87 11 70 89     	ld de,Amadeus_BOX
 554  8C8A CD 0C 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 555  8C8D CD FC 92     	call Limpiamos_bandeja_DRAW
 556  8C90
 557  8C90              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 558  8C90
 559  8C90 06 3C        	ld b,60
 560  8C92 CD DE 9C     2 call Amadeus_a_izquierda
 561  8C95 10 FB        	djnz 2B
 562  8C97
 563  8C97 CD BD 8F     	call Genera_datos_de_impresion_Amadeus
 564  8C9A
 565  8C9A              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 566  8C9A
 567  8C9A CD 0F 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 568  8C9D              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 569  8C9D
 570  8C9D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 571  8C9D              ; (Esto se dá cuando se inicia una nueva oleada).
 572  8C9D
 573  8C9D              ;	ld a,(Ctrl_1)
 574  8C9D              ;	bit 3,a
 575  8C9D              ;	jr nz,5F											 ; Loop
 576  8C9D
 577  8C9D              ;	ld de,Amadeus_db
 578  8C9D              ;	call Store_Amadeus
 579  8C9D
 580  8C9D              ; 	INICIA DISPAROS !!!!!
 581  8C9D
 582  8C9D CD 25 90     	call Inicia_Puntero_Disparo_Entidades
 583  8CA0 CD 2C 90     	call Inicia_Puntero_Disparo_Amadeus
 584  8CA3
 585  8CA3              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 586  8CA3
 587  8CA3              ;5 call Inicia_punteros_de_cajas
 588  8CA3              ;	call Restore_entidad
 589  8CA3
 590  8CA3              ;	ld a,(Ctrl_1)
 591  8CA3              ;	bit 3,a
 592  8CA3              ;	jr z,6F
 593  8CA3
 594  8CA3              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 595  8CA3
 596  8CA3              ;	ld hl,Ctrl_1
 597  8CA3              ;	res 3,(hl)
 598  8CA3              ;	jr Main
 599  8CA3
 600  8CA3              ; Damos por concluida la construcción del FRAME.
 601  8CA3              ;
 602  8CA3
 603  8CA3 CD A1 90     	call Inicia_Shield
 604  8CA6
 605  8CA6
 606  8CA6 2A 23 8C     6 ld hl,(Scanlines_album_SP)
 607  8CA9 22 1C 8C     	ld (Techo_Scanlines_album),hl
 608  8CAC
 609  8CAC 2A 0E 8C     	ld hl,(Album_de_borrado)
 610  8CAF 22 23 8C     	ld (Scanlines_album_SP),hl
 611  8CB2
 612  8CB2 21 00 89     	ld hl,Tabla_de_pintado
 613  8CB5 22 25 8C     	ld (India_SP),hl
 614  8CB8
 615  8CB8 21 29 8C     	ld hl,Ctrl_3
 616  8CBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 617  8CBD CB D6        	set 2,(hl)
 618  8CBF CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 619  8CC1
 620  8CC1 FB           	ei 													; Ha de apuntar a $5c3a.
 621  8CC2
 622  8CC2 76           	halt
 623  8CC3
 624  8CC3              ; ------------------------------------
 625  8CC3
 626  8CC3              Main
 627  8CC3              ;
 628  8CC3              ; 13/05/24
 629  8CC3
 630  8CC3              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 631  8CC3              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 632  8CC3              ; Este hecho lo indica el bit2 de (Impacto2).
 633  8CC3
 634  8CC3 CD E0 9F     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 635  8CC6
 636  8CC6 2A 3F 8C     16 ld hl,(Clock_next_entity)
 637  8CC9 ED 4B 78 5C  	ld bc,(FRAMES)
 638  8CCD A7           	and a
 639  8CCE ED 42        	sbc hl,bc
 640  8CD0 20 16        	jr nz,13F
 641  8CD2
 642  8CD2              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 643  8CD2              ; _ (Clock_next_entity) para la siguiente entidad.
 644  8CD2
 645  8CD2 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 646  8CD5 47           	ld b,a
 647  8CD6 3A 03 8C     	ld a,(Entidades_en_curso)
 648  8CD9 B8           	cp b
 649  8CDA 28 0C        	jr z,13F
 650  8CDC 30 0A        	jr nc,13F
 651  8CDE
 652  8CDE 3C           	inc a
 653  8CDF 32 03 8C     	ld (Entidades_en_curso),a
 654  8CE2
 655  8CE2              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 656  8CE2
 657  8CE2 CD 2A 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 658  8CE5 CD 46 8E     	call Define_Clock_next_entity
 659  8CE8
 660  8CE8              ; -------------------------------------------------------------------------------------------------------------
 661  8CE8
 662  8CE8              ; Habilita disparos.
 663  8CE8
 664  8CE8              13
 665  8CE8
 666  8CE8              ;	ld hl,Disparo_Amadeus
 667  8CE8              ;	ld de,CLOCK_repone_disparo_Amadeus
 668  8CE8              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 669  8CE8
 670  8CE8              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 671  8CE8              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 672  8CE8              ;	call Habilita_disparos
 673  8CE8
 674  8CE8              ; COLISIONES.
 675  8CE8
 676  8CE8              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 677  8CE8
 678  8CE8              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 679  8CE8              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 680  8CE8              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 681  8CE8
 682  8CE8              ;	xor a
 683  8CE8              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 684  8CE8
 685  8CE8              ;	call Inicia_punteros_de_cajas
 686  8CE8              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 687  8CE8              ; 														; _ en DRAW.
 688  8CE8
 689  8CE8              ;	ld a,(Filas)
 690  8CE8              ;	and a
 691  8CE8              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 692  8CE8              ;	call Incrementa_punteros_de_cajas
 693  8CE8              ;	jr 12B
 694  8CE8
 695  8CE8              ; ---------------------------------------------------------------------------------------
 696  8CE8
 697  8CE8              ;10 ld a,(Numero_parcial_de_entidades)
 698  8CE8              ;    ld b,a
 699  8CE8              ;	and a
 700  8CE8              ;	jr nz,11F
 701  8CE8
 702  8CE8              ;	ld hl,Ctrl_1;
 703  8CE8              ;	bit 4,(hl)
 704  8CE8              ;	jp nz,16F
 705  8CE8
 706  8CE8              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 707  8CE8
 708  8CE8              ;	ld hl,Ctrl_1
 709  8CE8              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 710  8CE8
 711  8CE8              ;	ld a,(Contador_de_frames)
 712  8CE8              ;	inc a
 713  8CE8              ;	ld (Activa_recarga_cajas),a
 714  8CE8
 715  8CE8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 716  8CE8
 717  8CE8 3A 03 8C     11 ld a,(Entidades_en_curso)
 718  8CEB A7           	and a
 719  8CEC CA 54 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 720  8CEF 47           	ld b,a												; No hay entidades que gestionar.
 721  8CF0
 722  8CF0              ; ( Código que ejecutamos con cada entidad: ).
 723  8CF0
 724  8CF0              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 725  8CF0              ;
 726  8CF0              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 727  8CF0
 728  8CF0 21 00 89     	ld hl,Tabla_de_pintado
 729  8CF3 22 25 8C     	ld (India_SP),hl
 730  8CF6
 731  8CF6 21 29 8C     	ld hl,Ctrl_3
 732  8CF9 CB D6        	set 2,(hl)
 733  8CFB CD FF 8D     	call Change
 734  8CFE
 735  8CFE C5           15 push bc 												; Nº de entidades en curso.
 736  8CFF
 737  8CFF CD 6E 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 738  8D02 ED 5B 23 8C  	ld de,(Scanlines_album_SP)
 739  8D06
 740  8D06              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 741  8D06
 742  8D06              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 743  8D06
 744  8D06 3A BF 8B     	ld a,(Impacto)
 745  8D09 A7           	and a
 746  8D0A 28 13        	jr z,8F
 747  8D0C
 748  8D0C              ; 5/7/24
 749  8D0C              ; Nota importante:
 750  8D0C              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 751  8D0C              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 752  8D0C              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 753  8D0C
 754  8D0C 3A 29 8C     	ld a,(Ctrl_3)
 755  8D0F CB 7F        	bit 7,a
 756  8D11 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 757  8D13              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 758  8D13 3A 74 89     	ld a,(Impacto_Amadeus)
 759  8D16 A7           	and a
 760  8D17 C4 7C 91     	call nz,Genera_explosion
 761  8D1A 20 1B        	jr nz,Gestiona_siguiente_entidad
 762  8D1C
 763  8D1C              ; Falsa colisión !!!
 764  8D1C
 765  8D1C 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 766  8D1F
 767  8D1F              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 768  8D1F              ;	set 1,(hl)
 769  8D1F              ;	jr 7F
 770  8D1F
 771  8D1F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 772  8D1F              ; _con las coordenadas de la entidad almacenada en DRAW.
 773  8D1F
 774  8D1F              ;	ld a,(Ctrl_1)
 775  8D1F              ;	bit 2,a
 776  8D1F              ;	jr z,7F
 777  8D1F
 778  8D1F              ;	ld hl,(Coordenadas_disparo_certero)
 779  8D1F              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 780  8D1F              ;														; E contiene la coordenada_X del disparo.
 781  8D1F              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 782  8D1F              ;														; H FILA, (Coordenada_y de la entidad).
 783  8D1F              ;	and a
 784  8D1F              ;	sbc hl,de
 785  8D1F
 786  8D1F              ;	call Determina_resultado_comparativa
 787  8D1F
 788  8D1F              ;	ld a,b
 789  8D1F              ;	and a
 790  8D1F              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 791  8D1F
 792  8D1F              ; ----- ----- -----
 793  8D1F
 794  8D1F              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 795  8D1F              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 796  8D1F
 797  8D1F              ;	ld hl,Ctrl_1
 798  8D1F              ;	res 2,(hl)
 799  8D1F
 800  8D1F              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 801  8D1F
 802  8D1F              ;	ld a,(Ctrl_0)
 803  8D1F              ;	bit 4,a
 804  8D1F              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 805  8D1F
 806  8D1F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 807  8D1F              ; [[[
 808  8D1F              ;	call Detecta_disparo_entidad
 809  8D1F              ; ]]]
 810  8D1F
 811  8D1F              ;	dec a
 812  8D1F              ;	ld (Impacto),a
 813  8D1F
 814  8D1F              ; Existe "Entidad_guía" ???.
 815  8D1F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 816  8D1F
 817  8D1F              ;	ld a,(Ctrl_3)
 818  8D1F              ;	bit 1,a
 819  8D1F              ;	jr nz,22F
 820  8D1F
 821  8D1F              ; Almacén de "Movimientos_masticados" lleno ???
 822  8D1F              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 823  8D1F              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 824  8D1F
 825  8D1F              ;;	ld a,(Ctrl_3)
 826  8D1F              ;;	bit 3,a
 827  8D1F              ;;	jr nz,22F
 828  8D1F
 829  8D1F              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 830  8D1F
 831  8D1F              ;	ld hl,Ctrl_2
 832  8D1F              ;	set 5,(hl)
 833  8D1F              ;	ld hl,Ctrl_3
 834  8D1F              ;	set 1,(hl)
 835  8D1F
 836  8D1F              ; -------------------------------------------
 837  8D1F
 838  8D1F CD 8A 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 839  8D22 CD DF 8D     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 840  8D25 CD 76 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 841  8D28 CD 7C 94     	call Genera_datos_de_impresion
 842  8D2B CD 1F 93     	call Decrementa_Contador_de_mov_masticados
 843  8D2E
 844  8D2E              ; -------------------------------------------
 845  8D2E
 846  8D2E              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 847  8D2E
 848  8D2E 2A C0 8B     	ld hl,(Puntero_de_impresion)
 849  8D31 CD 50 94     	call Genera_coordenadas
 850  8D34
 851  8D34 CD 5E 9F     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 852  8D37
 853  8D37              ;	ld hl,Ctrl_0
 854  8D37              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 855  8D37
 856  8D37              Gestiona_siguiente_entidad
 857  8D37
 858  8D37 CD F1 92      	call Store_Restore_cajas
 859  8D3A C1           	pop bc
 860  8D3B 10 C1        	djnz 15B
 861  8D3D
 862  8D3D              ; Hemos gestionado todas las entidades.
 863  8D3D
 864  8D3D CD 9A 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 865  8D40 CD B1 8E     	call Ordena_tabla_de_impresion
 866  8D43 CD 0F 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 867  8D46
 868  8D46              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 869  8D46              ; Hemos gestionado todas las unidades.
 870  8D46              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 871  8D46
 872  8D46              ;	ld hl,Ctrl_1
 873  8D46              ;	res 2,(hl)
 874  8D46
 875  8D46 CD 5B 8E     	call Borra_diferencia
 876  8D49
 877  8D49 3A 29 8C     	ld a,(Ctrl_3)
 878  8D4C CB 5F        	bit 3,a
 879  8D4E 20 04        	jr nz,Gestion_de_Amadeus
 880  8D50
 881  8D50 EB           	ex de,hl
 882  8D51 71           	ld (hl),c
 883  8D52 2C           	inc l
 884  8D53 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 885  8D54
 886  8D54
 887  8D54              ;! GESTIONA AMADEUS !!!!!!!!!!
 888  8D54
 889  8D54              Gestion_de_Amadeus
 890  8D54
 891  8D54 21 29 8C     	ld hl,Ctrl_3
 892  8D57 CB 76        	bit 6,(hl)
 893  8D59 28 17        	jr z,Amadeus_vivo
 894  8D5B
 895  8D5B              ; Amadeus ha sido destruido.
 896  8D5B              ; Decrementa (Temp_new_live).
 897  8D5B
 898  8D5B 21 3C 8C     	ld hl,Temp_new_live
 899  8D5E 35           	dec (hl)
 900  8D5F 20 2D        	jr nz,End_frame
 901  8D61
 902  8D61              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 903  8D61
 904  8D61 F3           	di
 905  8D62 18 FE        	jr $
 906  8D64 FB           	ei
 907  8D65
 908  8D65 21 51 8C     	ld hl,Lives
 909  8D68 35           	dec (hl)
 910  8D69
 911  8D69              ;! Fin del juego
 912  8D69
 913  8D69 F3           	di
 914  8D6A 28 FE        	jr z,$
 915  8D6C FB           	ei
 916  8D6D
 917  8D6D              ; Nueva nave.
 918  8D6D
 919  8D6D CD A5 8D     	call Reinicia_Amadeus
 920  8D70 18 1C        	jr End_frame
 921  8D72
 922  8D72              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 923  8D72
 924  8D72              Amadeus_vivo
 925  8D72
 926  8D72 3A 74 89     	ld a,(Impacto_Amadeus)
 927  8D75 A7           	and a
 928  8D76 C4 AC 91     	call nz, Genera_explosion_Amadeus
 929  8D79 20 13        	jr nz, End_frame
 930  8D7B
 931  8D7B CD 59 91     	call Teclado
 932  8D7E
 933  8D7E CD 8B 9E     	call Genera_datos_de_impresion_disparos_Amadeus
 934  8D81
 935  8D81 21 29 8C     	ld hl,Ctrl_3
 936  8D84 CB 6E        	bit 5,(hl)
 937  8D86 28 06        	jr z,End_frame
 938  8D88
 939  8D88              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 940  8D88
 941  8D88 CD 1A 8E     	call Change_Amadeus
 942  8D8B CD BD 8F     	call Genera_datos_de_impresion_Amadeus
 943  8D8E
 944  8D8E              End_frame
 945  8D8E
 946  8D8E 2A 0E 8C     	ld hl,(Album_de_borrado)
 947  8D91 22 23 8C     	ld (Scanlines_album_SP),hl
 948  8D94
 949  8D94 21 29 8C     	ld hl,Ctrl_3
 950  8D97 CB C6        	set 0,(hl) 											; Indica Frame completo.
 951  8D99 CB 9E        	res 3,(hl)
 952  8D9B CB A6        	res 4,(hl)
 953  8D9D
 954  8D9D AF           	xor a
 955  8D9E D3 FE        	out ($fe),a
 956  8DA0
 957  8DA0 76           	halt
 958  8DA1
 959  8DA1              ; ----------------------------------------
 960  8DA1
 961  8DA1              ;	ld a,(Ctrl_1) 										; Existe Loop?
 962  8DA1              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 963  8DA1 CA C3 8C     	jp z,Main
 964  8DA4
 965  8DA4              ; RECARGA DE NUEVA OLEADA.
 966  8DA4
 967  8DA4              ;	ld a,(Contador_de_frames)
 968  8DA4              ;	ld b,a
 969  8DA4              ;	ld a,(Activa_recarga_cajas)
 970  8DA4              ;	cp b
 971  8DA4              ;	jr z,20F
 972  8DA4
 973  8DA4              ;	ld hl,Ctrl_1
 974  8DA4              ;	set 4,(hl)
 975  8DA4              ;	jp Main
 976  8DA4
 977  8DA4              ;20 ld hl,Ctrl_1
 978  8DA4              ;	res 4,(hl)
 979  8DA4
 980  8DA4              ;	ld a,(Contador_de_frames)
 981  8DA4
 982  8DA4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 983  8DA4              ;! _ IMPREDECIBLE !!!!
 984  8DA4
 985  8DA4              ;	add 10
 986  8DA4              ;	ld (Clock_next_entity),a
 987  8DA4
 988  8DA4              ;	jp 4B
 989  8DA4
 990  8DA4 C9           	ret
 991  8DA5
 992  8DA5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 993  8DA5              ;
 994  8DA5              ;	16/11/23
 995  8DA5
 996  8DA5              ;;Gestiona_Amadeus
 997  8DA5
 998  8DA5              ;! Activa/desactiva impacto con Amadeus.
 999  8DA5
1000  8DA5              ;	ld a,(Impacto)
1001  8DA5              ;	and a
1002  8DA5              ;	jr nz,2F
1003  8DA5
1004  8DA5              ;;	call Mov_Amadeus
1005  8DA5
1006  8DA5              ;;2 ld a,(Ctrl_0)
1007  8DA5              ;;	bit 4,a
1008  8DA5              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
1009  8DA5
1010  8DA5              ;;	call Guarda_foto_entidad_a_pintar
1011  8DA5              ;;	call Guarda_datos_de_borrado_Amadeus
1012  8DA5
1013  8DA5              ;;1 ld hl,Ctrl_0
1014  8DA5              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
1015  8DA5
1016  8DA5              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
1017  8DA5
1018  8DA5              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
1019  8DA5
1020  8DA5              ;	call Calcula_numero_de_disparotes
1021  8DA5
1022  8DA5              ;;	ret
1023  8DA5
1024  8DA5              ; -----------------------------
1025  8DA5              ;
1026  8DA5              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
1027  8DA5              ;
1028  8DA5              ;	INPUTS: B a de estar a "0".
1029  8DA5
1030  8DA5              ;Prepara_Borra_sprites
1031  8DA5
1032  8DA5              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1033  8DA5              ;	ld a,l
1034  8DA5              ;	ret z
1035  8DA5
1036  8DA5              ;	srl a
1037  8DA5
1038  8DA5              ;2 sub 16
1039  8DA5              ;	jr z,1F
1040  8DA5              ;	inc b
1041  8DA5              ;	jr 2B
1042  8DA5
1043  8DA5              ;1 inc b
1044  8DA5
1045  8DA5              ;	exx
1046  8DA5              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1047  8DA5              ;	exx
1048  8DA5
1049  8DA5              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1050  8DA5              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1051  8DA5
1052  8DA5              ;	ret
1053  8DA5
1054  8DA5              ; --------------------------------------------------------------------------------------------------------------
1055  8DA5              ;
1056  8DA5              ;	15/12/23
1057  8DA5
1058  8DA5              ;Mov_obj
1059  8DA5
1060  8DA5              ;	ld a,(Ctrl_2)
1061  8DA5              ;	bit 1,a
1062  8DA5              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1063  8DA5
1064  8DA5              ; Explosión:
1065  8DA5
1066  8DA5              ;	ld a,(Frames_explosion)
1067  8DA5              ;	and a
1068  8DA5              ;	jr nz,4F
1069  8DA5
1070  8DA5              ;!  Una alimaña menos!!!!!!!!!1
1071  8DA5
1072  8DA5              ; Se trataba de una Entidad_guía ???
1073  8DA5
1074  8DA5              ;	ld a,(Ctrl_2)
1075  8DA5              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1076  8DA5              ;	jr z,5F
1077  8DA5
1078  8DA5              ;	ld hl,Ctrl_3
1079  8DA5              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1080  8DA5
1081  8DA5              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1082  8DA5              ;!! _generado puede ser distinto, (aletoriedad).
1083  8DA5
1084  8DA5              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1085  8DA5              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1086  8DA5              ;	dec (hl)
1087  8DA5              ;	ld hl,Entidades_en_curso
1088  8DA5              ;	dec (hl)
1089  8DA5              ;	ld hl,Numero_de_entidades
1090  8DA5              ;	dec (hl)
1091  8DA5              ;	jr 3F
1092  8DA5
1093  8DA5              ; -----
1094  8DA5
1095  8DA5              ;	`Movemos´ la explosión.
1096  8DA5
1097  8DA5              ;4 ld hl,(Puntero_DESPLZ_der)
1098  8DA5              ;	inc hl
1099  8DA5              ;	inc hl
1100  8DA5              ;	call Extrae_address
1101  8DA5              ;;	ld (Puntero_objeto),hl
1102  8DA5
1103  8DA5              ;;	ld hl,Frames_explosion
1104  8DA5              ;;	dec (hl)
1105  8DA5
1106  8DA5              ;;	ld hl,Ctrl_0
1107  8DA5              ;;	set 4,(hl);;
1108  8DA5
1109  8DA5              ;;	jr 3F
1110  8DA5
1111  8DA5              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1112  8DA5
1113  8DA5              ;2 xor a
1114  8DA5              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1115  8DA5
1116  8DA5              ; Movemos Entidades malignas.
1117  8DA5              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1118  8DA5
1119  8DA5              ;	ld a,(Ctrl_2)
1120  8DA5              ;	bit 5,a
1121  8DA5              ;	jr nz,8F
1122  8DA5
1123  8DA5              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1124  8DA5              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1125  8DA5              ;	jr 7F
1126  8DA5
1127  8DA5              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1128  8DA5
1129  8DA5              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1130  8DA5              ;	bit 4,a
1131  8DA5              ;	ret z
1132  8DA5
1133  8DA5              ; Ha habido desplazamiento de la entidad maligna.
1134  8DA5              ; Ha llegado a zona de AMADEUS ???
1135  8DA5
1136  8DA5              ;7 ld a,(Coordenada_y)
1137  8DA5              ;	cp $14
1138  8DA5              ;	jr c,1F
1139  8DA5
1140  8DA5              ; ---------
1141  8DA5
1142  8DA5              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1143  8DA5              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1144  8DA5
1145  8DA5              ;	di
1146  8DA5              ;	call Genera_coordenadas_X
1147  8DA5              ;	call Compara_coordenadas_X
1148  8DA5              ;	ei
1149  8DA5
1150  8DA5              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1151  8DA5
1152  8DA5              ; ---------
1153  8DA5
1154  8DA5              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1155  8DA5              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1156  8DA5              ;	call Limpia_Variables_de_borrado
1157  8DA5
1158  8DA5              ;3 ret
1159  8DA5
1160  8DA5              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1161  8DA5              ;
1162  8DA5              ;	24/07/24
1163  8DA5
1164  8DA5              Reinicia_Amadeus
1165  8DA5
1166  8DA5              ;	Reinicia posición y estado.
1167  8DA5
1168  8DA5 21 CF 50     	ld hl,$50cf
1169  8DA8 22 75 89     	ld (p.imp.amadeus),hl
1170  8DAB 21 F0 E0     	ld hl,$e0f0
1171  8DAE 22 77 89     	ld (Pamm_Amadeus),hl
1172  8DB1 21 3D 00     	ld hl,$003d
1173  8DB4 22 79 89     	ld (Comm_Amadeus),hl
1174  8DB7
1175  8DB7              ;	limpiamos el álbum de borrado.
1176  8DB7
1177  8DB7 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1178  8DBA
1179  8DBA AF           	xor a
1180  8DBB 77           	ld (hl),a
1181  8DBC
1182  8DBC E5           	push hl
1183  8DBD D1           	pop de
1184  8DBE 13           	inc de
1185  8DBF
1186  8DBF 01 23 00     	ld bc,35
1187  8DC2 ED B0        	ldir
1188  8DC4
1189  8DC4 CD BD 8F     	call Genera_datos_de_impresion_Amadeus
1190  8DC7
1191  8DC7              ;	Reinicia temporizaciones.
1192  8DC7
1193  8DC7 CD A1 90     	call Inicia_Shield
1194  8DCA
1195  8DCA 3E 5A        	ld a,90
1196  8DCC 32 4E 8C     	ld (Shield),a
1197  8DCF
1198  8DCF 3E 64        	ld a,100
1199  8DD1 32 3C 8C     	ld (Temp_new_live),a
1200  8DD4
1201  8DD4              ; 	Restauramos el FLAG: Amadeus vivo.
1202  8DD4
1203  8DD4 21 29 8C     	ld hl,Ctrl_3
1204  8DD7 CB B6        	res 6,(hl)
1205  8DD9
1206  8DD9              ;	Fuerza la impresión de la nave en el siguiente frame.
1207  8DD9
1208  8DD9 21 29 8C      	ld hl,Ctrl_3
1209  8DDC CB EE        	set 5,(hl)
1210  8DDE
1211  8DDE C9           	ret
1212  8DDF
1213  8DDF              ; --------------------------------------------------------------------------------------------------------------
1214  8DDF              ;
1215  8DDF              ;	12/05/24
1216  8DDF
1217  8DDF 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1218  8DE2 CB 27        	sla a
1219  8DE4 32 C6 8B     	ld (Velocidad),a
1220  8DE7 E6 10        	and $10
1221  8DE9 C8           	ret z
1222  8DEA
1223  8DEA              ; Restaura (Velocidad) a razón del nº de vueltas.
1224  8DEA
1225  8DEA 3A BE 8B     	ld a,(Contador_de_vueltas)
1226  8DED CB 2F        	sra a
1227  8DEF CB 2F        	sra a
1228  8DF1 32 C6 8B     	ld (Velocidad),a
1229  8DF4
1230  8DF4 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1231  8DF7 23           	inc hl
1232  8DF8 23           	inc hl
1233  8DF9 23           	inc hl
1234  8DFA 23           	inc hl
1235  8DFB 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1236  8DFE
1237  8DFE C9           	ret
1238  8DFF
1239  8DFF              ; --------------------------------------------------------------------------------------------------------------
1240  8DFF              ;
1241  8DFF              ;	18/06/24
1242  8DFF
1243  8DFF              Change
1244  8DFF
1245  8DFF 3A 20 8C     	ld a,(Switch)
1246  8E02 EE 01        	xor 1
1247  8E04 32 20 8C     	ld (Switch),a
1248  8E07 2A 0C 8C     	ld hl,(Album_de_pintado)
1249  8E0A ED 5B 0E 8C  	ld de,(Album_de_borrado)
1250  8E0E EB           	ex de,hl
1251  8E0F 22 0C 8C     	ld (Album_de_pintado),hl
1252  8E12 22 23 8C     	ld (Scanlines_album_SP),hl
1253  8E15 ED 53 0E 8C  	ld (Album_de_borrado),de
1254  8E19 C9           	ret
1255  8E1A
1256  8E1A              Change_Amadeus
1257  8E1A
1258  8E1A 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1259  8E1D ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1260  8E21 EB           	ex de,hl
1261  8E22 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1262  8E25 ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1263  8E29 C9           	ret
1264  8E2A
1265  8E2A              ; ------------------------------------
1266  8E2A              ;
1267  8E2A              ; 1/05/24
1268  8E2A
1269  8E2A              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1270  8E2A              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1271  8E2A
1272  8E2A              ;	DESTRUYE: HL,DE,A
1273  8E2A              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1274  8E2A
1275  8E2A              ;	Variables implicadas: (RND_SP).
1276  8E2A
1277  8E2A              Extrae_numero_aleatorio_y_avanza
1278  8E2A
1279  8E2A 21 00 89     	ld hl,Tabla_de_pintado
1280  8E2D EB           	ex de,hl
1281  8E2E 2A 3D 8C     	ld hl,(RND_SP)
1282  8E31 EB           	ex de,hl
1283  8E32 A7           	and a
1284  8E33 ED 52        	sbc hl,de
1285  8E35
1286  8E35 2A 3D 8C     	ld hl,(RND_SP)
1287  8E38 20 06        	jr nz,1F
1288  8E3A
1289  8E3A              ; Sitúa HL al principio de la tabla de nº aleatorios.
1290  8E3A
1291  8E3A 21 F6 88     	ld hl,Numeros_aleatorios
1292  8E3D 22 3D 8C     	ld (RND_SP),HL
1293  8E40
1294  8E40              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1295  8E40
1296  8E40 7E           1 ld a,(hl)
1297  8E41 23           	inc hl
1298  8E42 22 3D 8C     	ld (RND_SP),hl
1299  8E45 C9           	ret
1300  8E46
1301  8E46              ; ------------------------------------
1302  8E46              ;
1303  8E46              ; 1/05/24
1304  8E46
1305  8E46              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1306  8E46              ; (1 a 4 segundos).
1307  8E46              ; Actualizamos (Clock_next_entity) con A.
1308  8E46
1309  8E46              ;	DESTRUYE: A y B.
1310  8E46              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1311  8E46              ;			 Actualiza (Clock_next_entity) con A.
1312  8E46
1313  8E46              ;	Variables implicadas: (Clock_next_entity).
1314  8E46
1315  8E46              ; Notas:
1316  8E46
1317  8E46              ; 	$32 1 seg.
1318  8E46              ; 	$64 2 seg.
1319  8E46              ; 	$96 3 seg.
1320  8E46              ; 	$c8 4 seg.
1321  8E46              ; 	$fa 5 seg.
1322  8E46
1323  8E46              ; $ffff 1310,7 seg, 22 minutos.
1324  8E46
1325  8E46              ;	$0100  5 seg. aproximadamente.
1326  8E46              ;	$0200 10 seg. aproximadamente.
1327  8E46              ;	$0300 15 seg. aproximadamente.
1328  8E46              ;	$0400 20 seg. aproximadamente.
1329  8E46              ;	$0500 25 seg. aproximadamente.
1330  8E46              ;	$0600 30 seg. aproximadamente.
1331  8E46
1332  8E46              Define_Clock_next_entity
1333  8E46
1334  8E46 FE 34        	cp $34
1335  8E48 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1336  8E4A
1337  8E4A              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1338  8E4A
1339  8E4A 4F           3 ld c,a
1340  8E4B 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1341  8E4D 2A 78 5C     	ld hl,(FRAMES)
1342  8E50 A7           	and a
1343  8E51 ED 4A        	adc hl,bc
1344  8E53 22 3F 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1345  8E56 C9           	ret
1346  8E57
1347  8E57 3E 34        1 ld a,$34
1348  8E59 18 EF        	jr 3B
1349  8E5B
1350  8E5B              ; ------------------------------------
1351  8E5B              ;
1352  8E5B              ; 18/03/24
1353  8E5B
1354  8E5B              Borra_diferencia
1355  8E5B
1356  8E5B ED 4B 23 8C  	ld bc,(Scanlines_album_SP)
1357  8E5F
1358  8E5F 3A 20 8C     	ld a,(Switch)
1359  8E62 A7           	and a
1360  8E63 28 08        	jr z,2F
1361  8E65
1362  8E65 2A 1E 8C     	ld hl,(Techo_Scanlines_album_2)
1363  8E68 11 1E 8C     	ld de,Techo_Scanlines_album_2
1364  8E6B 18 06        	jr 3F
1365  8E6D
1366  8E6D 2A 1C 8C     2 ld hl,(Techo_Scanlines_album)
1367  8E70 11 1C 8C     	ld de,Techo_Scanlines_album
1368  8E73
1369  8E73              ; Diferencia.
1370  8E73
1371  8E73 ED 42        3 sbc hl,bc
1372  8E75
1373  8E75 C8           	ret z
1374  8E76 D8           	ret c
1375  8E77
1376  8E77              ; Nuevo techo, (más bajo que el anterior).
1377  8E77              ; Fijamos nuevo techo y borramos bytes sobrantes.
1378  8E77
1379  8E77 EB           	ex de,hl
1380  8E78
1381  8E78 71           	ld (hl),c
1382  8E79 2C           	inc l
1383  8E7A 70           	ld (hl),b
1384  8E7B
1385  8E7B AF           	xor a
1386  8E7C 43           	ld b,e
1387  8E7D
1388  8E7D 2A 23 8C     	ld hl,(Scanlines_album_SP)
1389  8E80
1390  8E80 77           1 ld (hl),a
1391  8E81 23           	inc hl
1392  8E82 10 FC        	djnz 1B
1393  8E84
1394  8E84              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1395  8E84
1396  8E84 21 29 8C     	ld hl,Ctrl_3
1397  8E87 CB DE        	set 3,(hl)
1398  8E89
1399  8E89 C9           	ret
1400  8E8A
1401  8E8A              ; --------------------------------------------------------------------------------------------------------------
1402  8E8A              ;
1403  8E8A              ;	26/3/24
1404  8E8A
1405  8E8A              Recauda_informacion_de_entidad_en_curso
1406  8E8A
1407  8E8A              ; Almacena la Coordenada Y de la entidad en curso.
1408  8E8A
1409  8E8A              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1410  8E8A
1411  8E8A 3A BD 8B     	ld a,(Coordenada_y)
1412  8E8D 2A 25 8C     	ld hl,(India_SP)
1413  8E90 77           	ld (hl),a
1414  8E91 2C           	inc l
1415  8E92
1416  8E92              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1417  8E92
1418  8E92              ;	ld de,(Scanlines_album_SP)
1419  8E92
1420  8E92 73           	ld (hl),e
1421  8E93 2C           	inc l
1422  8E94 72           	ld (hl),d
1423  8E95 2C           	inc l
1424  8E96
1425  8E96 22 25 8C     	ld (India_SP),hl
1426  8E99
1427  8E99 C9           	ret
1428  8E9A
1429  8E9A              ; --------------------------------------------------------------------------------------------------------------
1430  8E9A              ;
1431  8E9A              ;	27/03/24
1432  8E9A              ;
1433  8E9A
1434  8E9A              Inicializa_India_y_limpia_Tabla_de_impresion
1435  8E9A
1436  8E9A 2A 25 8C     	ld hl,(India_SP)
1437  8E9D 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1438  8EA0
1439  8EA0 79           	ld a,c
1440  8EA1 95           	sub l
1441  8EA2 28 06        	jr z,2F
1442  8EA4 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1443  8EA5              ;														; _ y pasamos a inicializar (India_SP).
1444  8EA5 AF           	xor a
1445  8EA6
1446  8EA6 77           1 ld (hl),a
1447  8EA7 2C           	inc l
1448  8EA8 10 FC        	djnz 1B												; Limpia Tabla.
1449  8EAA
1450  8EAA 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1451  8EAD 22 25 8C     	ld (India_SP),hl
1452  8EB0
1453  8EB0 C9           	ret
1454  8EB1
1455  8EB1              ; --------------------------------------------------------------------------------------------------------------
1456  8EB1              ;
1457  8EB1              ;	31/3/24
1458  8EB1
1459  8EB1              Ordena_tabla_de_impresion
1460  8EB1
1461  8EB1              ; 5794 T/states.
1462  8EB1              ; 6278 T/states.
1463  8EB1              ; 5310 T/states.
1464  8EB1
1465  8EB1              ; Inicializamos punteros (India_SP) e (India_2_SP).
1466  8EB1              ; Inicializamos contador de comparaciones, [C].
1467  8EB1              ; Cargamos los registros A y B para efectuar comparación.
1468  8EB1
1469  8EB1 FD 2E 00     	ld iyl,0
1470  8EB4
1471  8EB4 3A 03 8C     	ld a,(Entidades_en_curso)
1472  8EB7 FE 04        	cp 4 	;	4
1473  8EB9 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1474  8EBA
1475  8EBA 3D           	dec a
1476  8EBB 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1477  8EBC 51           	ld d,c 										; Copia de respaldo.
1478  8EBD
1479  8EBD 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1480  8EBE
1481  8EBE 21 03 89     	ld hl,Tabla_de_pintado+3
1482  8EC1 46           	ld b,(hl)
1483  8EC2 22 27 8C     	ld (India_2_SP),hl
1484  8EC5
1485  8EC5 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1486  8EC6 DC EE 8E     	call c, Avanza_India_2_SP
1487  8EC9 CC EE 8E     	call z, Avanza_India_2_SP
1488  8ECC
1489  8ECC FD 2D        	dec iyl
1490  8ECE 28 18        	jr z,2F
1491  8ED0
1492  8ED0
1493  8ED0              ; --------------------------------------------------------------------------------------------------------------
1494  8ED0              ;
1495  8ED0              ;	7/4/24
1496  8ED0
1497  8ED0              Trueque
1498  8ED0
1499  8ED0              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1500  8ED0              ;  			A contiene en nº de fila de (India_SP).
1501  8ED0              ;			HL contiene (India_2_SP).
1502  8ED0
1503  8ED0 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1504  8ED1 E5           	push hl										; Preservo (India_2_SP).
1505  8ED2
1506  8ED2 ED 5B 25 8C  	ld de,(India_SP)
1507  8ED6 EB           	ex de,hl
1508  8ED7 70           	ld (hl),b
1509  8ED8 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1510  8ED9
1511  8ED9 CD 1A 8F     	call Intercambia_1_byte
1512  8EDC CD 1A 8F     	call Intercambia_1_byte
1513  8EDF
1514  8EDF
1515  8EDF              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1516  8EDF              ; Recuperamos (India_2_SP) en HL.
1517  8EDF
1518  8EDF 2A 25 8C     	ld hl,(India_SP)
1519  8EE2 7E           	ld a,(hl)
1520  8EE3
1521  8EE3 E1           	pop hl
1522  8EE4 D1           	pop de
1523  8EE5
1524  8EE5              ; --------------------------------------------------------------------------------------------------------------
1525  8EE5
1526  8EE5 CD EE 8E     	call Avanza_India_2_SP
1527  8EE8
1528  8EE8 14           2 inc d
1529  8EE9 15           	dec d
1530  8EEA C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1531  8EEB 18 D8        	jr 1B
1532  8EED
1533  8EED C9           	ret
1534  8EEE
1535  8EEE              ; ----- ----- ----- ----- -----
1536  8EEE
1537  8EEE              Avanza_India_2_SP
1538  8EEE
1539  8EEE 0D           	dec c
1540  8EEF 28 0A        	jr z,Avanza_punteros_indios
1541  8EF1
1542  8EF1 FD 2C        	inc iyl
1543  8EF3
1544  8EF3 2C           	inc l
1545  8EF4 2C           	inc l
1546  8EF5 2C           	inc l
1547  8EF6
1548  8EF6 46           	ld b,(hl)
1549  8EF7 22 27 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1550  8EFA
1551  8EFA C9           	ret
1552  8EFB
1553  8EFB              ; ----- ----- ----- ----- -----
1554  8EFB
1555  8EFB              Avanza_punteros_indios
1556  8EFB
1557  8EFB 15           	dec d
1558  8EFC 28 15        	jr z,Prepara_salida
1559  8EFE
1560  8EFE 4A           	ld c,d
1561  8EFF
1562  8EFF 2A 25 8C     	ld hl,(India_SP)
1563  8F02 2C           	inc l
1564  8F03 2C           	inc l
1565  8F04 2C           	inc l
1566  8F05 7E           	ld a,(hl)
1567  8F06 22 25 8C     	ld (India_SP),hl
1568  8F09
1569  8F09 2C           	inc l
1570  8F0A 2C           	inc l
1571  8F0B 2C           	inc l
1572  8F0C 46           	ld b,(hl)
1573  8F0D 22 27 8C     	ld (India_2_SP),hl
1574  8F10
1575  8F10 FD 2C        	inc iyl
1576  8F12
1577  8F12 C9           	ret
1578  8F13
1579  8F13              Prepara_salida
1580  8F13
1581  8F13 21 00 89     	ld hl,Tabla_de_pintado
1582  8F16 22 25 8C     	ld (India_SP),hl
1583  8F19 C9           	ret
1584  8F1A
1585  8F1A
1586  8F1A 2C           Intercambia_1_byte inc l
1587  8F1B 1C           	inc e
1588  8F1C 46           	ld b,(hl)
1589  8F1D 1A           	ld a,(de)
1590  8F1E EB           	ex de,hl
1591  8F1F 70           	ld (hl),b
1592  8F20 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1593  8F21 C9           	ret
1594  8F22
1595  8F22              ; -----------------------------------------------------------------------------------
1596  8F22              ;
1597  8F22              ;	20/01/24
1598  8F22              ;
1599  8F22              ;
1600  8F22
1601  8F22              Construye_movimientos_masticados_entidad
1602  8F22
1603  8F22 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1604  8F25 E5           	push hl
1605  8F26 CD 69 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1606  8F29              ;															; _ el (Contador_de_mov_masticados).
1607  8F29 CD 39 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1608  8F2C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1609  8F2C CD 64 99     	call Recompone_posicion_inicio
1610  8F2F
1611  8F2F CD 94 96     1 call Draw
1612  8F32 CD 4E 8F     	call Guarda_movimiento_masticado
1613  8F35
1614  8F35 CD 11 9D     	call Movimiento
1615  8F38
1616  8F38 3A 29 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1617  8F3B CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1618  8F3D 28 F0        	jr z,1B
1619  8F3F
1620  8F3F              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1621  8F3F              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1622  8F3F
1623  8F3F E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1624  8F40 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1625  8F43
1626  8F43              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1627  8F43
1628  8F43 CD 75 9E     	call Situa_en_contador_general_de_mov_masticados
1629  8F46
1630  8F46              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1631  8F46              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1632  8F46
1633  8F46 ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1634  8F4A
1635  8F4A 71           	ld (hl),c
1636  8F4B 23           	inc hl
1637  8F4C 70           	ld (hl),b
1638  8F4D
1639  8F4D C9           	ret
1640  8F4E
1641  8F4E              ; -----------------------------------------------------------------------------------
1642  8F4E              ;
1643  8F4E              ;	28/12/23
1644  8F4E              ;
1645  8F4E              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1646  8F4E              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1647  8F4E
1648  8F4E              Guarda_movimiento_masticado
1649  8F4E
1650  8F4E ED 73 08 8C  	ld (Stack),sp
1651  8F52 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1652  8F56
1653  8F56 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1654  8F58 FD E5            push iy 												; Pushea Puntero_objeto.
1655  8F5A
1656  8F5A ED 7B 08 8C      ld sp,(Stack)
1657  8F5E
1658  8F5E 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1659  8F61 23           	inc hl
1660  8F62 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1661  8F65
1662  8F65 CD 69 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1663  8F68              ;															; _ el (Contador_de_mov_masticados).
1664  8F68 C9               ret
1665  8F69
1666  8F69              ; --------------------------------------------------------------------------------------------------------------
1667  8F69              ;
1668  8F69              ;	12/1/24
1669  8F69              ;
1670  8F69              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1671  8F69
1672  8F69              Actualiza_Puntero_de_almacen_de_mov_masticados
1673  8F69
1674  8F69 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1675  8F6C 01 04 00     	ld bc,4
1676  8F6F A7           	and a
1677  8F70 ED 4A        	adc hl,bc
1678  8F72 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1679  8F75 C9           	ret
1680  8F76
1681  8F76              ; --------------------------------------------------------------------------------------------------------------
1682  8F76              ;
1683  8F76              ;	24/03/24
1684  8F76              ;
1685  8F76              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1686  8F76              ;
1687  8F76              ;	IX contiene el puntero de impresión.
1688  8F76              ;	DE contiene (Puntero_objeto).
1689  8F76
1690  8F76
1691  8F76              Cargamos_registros_con_mov_masticado
1692  8F76
1693  8F76 ED 73 08 8C  	ld (Stack),sp
1694  8F7A ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1695  8F7E
1696  8F7E D1           	pop de 															; DE contiene Puntero_objeto
1697  8F7F DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1698  8F81
1699  8F81 ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1700  8F85 ED 7B 08 8C  	ld sp,(Stack)
1701  8F89
1702  8F89 7B           	ld a,e
1703  8F8A 82           	add d															; Comprueba si ya no hay datos en el almacén.
1704  8F8B
1705  8F8B CC 27 93     	call z,Reinicia_entidad_maliciosa
1706  8F8E
1707  8F8E C9           	ret
1708  8F8F
1709  8F8F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1710  8F8F              ;
1711  8F8F              ;	22/7/24
1712  8F8F
1713  8F8F              Cargamos_registros_con_explosion
1714  8F8F
1715  8F8F
1716  8F8F 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1717  8F92 CD 33 90     	call Extrae_address
1718  8F95
1719  8F95 5D           	ld e,l
1720  8F96 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1721  8F97
1722  8F97 DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1723  8F9B
1724  8F9B C9           	ret
1725  8F9C
1726  8F9C
1727  8F9C              Cargamos_registros_con_explosion_Amadeus
1728  8F9C
1729  8F9C 2A 77 89     	ld hl,(Pamm_Amadeus)
1730  8F9F CD 33 90     	call Extrae_address
1731  8FA2
1732  8FA2 5D           	ld e,l
1733  8FA3 54           	ld d,h
1734  8FA4
1735  8FA4 DD 2A 75 89  	ld ix,(p.imp.amadeus)
1736  8FA8
1737  8FA8 C9           	ret
1738  8FA9
1739  8FA9              ; --------------------------------------------------------------------------------------------------------------
1740  8FA9              ;
1741  8FA9              ;	17/06/24
1742  8FA9              ;
1743  8FA9              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1744  8FA9              ;
1745  8FA9              ;	IX contiene el puntero de impresión.
1746  8FA9              ;	DE contiene (Puntero_objeto).
1747  8FA9
1748  8FA9
1749  8FA9              Cargamos_registros_con_mov_masticado_Amadeus
1750  8FA9
1751  8FA9 ED 73 08 8C  	ld (Stack),sp
1752  8FAD ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1753  8FB1 D1           	pop de 															; DE contiene Puntero_objeto
1754  8FB2 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1755  8FB4 DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1756  8FB8 ED 7B 08 8C  	ld sp,(Stack)
1757  8FBC C9           	ret
1758  8FBD
1759  8FBD              ; ---------------------------------------------------------------------------------------------------------------------
1760  8FBD              ;
1761  8FBD              ;	18/6/24
1762  8FBD              ;
1763  8FBD              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1764  8FBD
1765  8FBD              Genera_datos_de_impresion_Amadeus
1766  8FBD
1767  8FBD 3A 74 89     	ld a,(Impacto_Amadeus)
1768  8FC0 A7           	and a
1769  8FC1 20 03        	jr nz,1F
1770  8FC3
1771  8FC3              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1772  8FC3              ; _apuntando a la correspondiente explosión.
1773  8FC3
1774  8FC3 CD A9 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1775  8FC6
1776  8FC6 DD 7D        1 ld a,ixl
1777  8FC8 E6 1F        	and $1f
1778  8FCA 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1779  8FCD
1780  8FCD 2A 23 8C     	ld hl,(Scanlines_album_SP)
1781  8FD0 E5           	push hl
1782  8FD1
1783  8FD1 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1784  8FD4 22 23 8C     	ld (Scanlines_album_SP),hl
1785  8FD7
1786  8FD7 CD 7C 94     	call Genera_datos_de_impresion
1787  8FDA
1788  8FDA E1           	pop hl
1789  8FDB 22 23 8C     	ld (Scanlines_album_SP),hl
1790  8FDE
1791  8FDE C9           	ret
1792  8FDF
1793  8FDF              ; ---------------------------------------------------------------------------------------------------------------------
1794  8FDF              ;
1795  8FDF              ;	13/03/24
1796  8FDF              ;
1797  8FDF              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1798  8FDF
1799  8FDF              Inicia_albumes_de_lineas
1800  8FDF
1801  8FDF 21 00 80     	ld hl,Scanlines_album
1802  8FE2 22 0C 8C     	ld (Album_de_pintado),hl
1803  8FE5 22 23 8C     	ld (Scanlines_album_SP),hl
1804  8FE8
1805  8FE8 21 1A 81     	ld hl,Scanlines_album_2
1806  8FEB 22 0E 8C     	ld (Album_de_borrado),hl
1807  8FEE
1808  8FEE C9           	ret
1809  8FEF
1810  8FEF              Inicia_albumes_de_lineas_Amadeus
1811  8FEF
1812  8FEF 21 34 82     	ld hl,Amadeus_scanlines_album
1813  8FF2 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1814  8FF5 21 58 82     	ld hl,Amadeus_scanlines_album_2
1815  8FF8 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1816  8FFB
1817  8FFB C9           	ret
1818  8FFC
1819  8FFC              Inicia_albumes_de_disparos
1820  8FFC
1821  8FFC 21 7C 82     	ld hl,Disparos_scanlines_album
1822  8FFF 22 14 8C     	ld (Album_de_pintado_disparos),hl
1823  9002 21 8E 82     	ld hl,Disparos_scanlines_album_2
1824  9005 22 16 8C     	ld (Album_de_borrado_disparos),hl
1825  9008
1826  9008 21 7C 82     	ld hl,Disparos_scanlines_album
1827  900B 22 18 8C     	ld (Nivel_scanlines_disparos_album),hl
1828  900E
1829  900E C9           	ret
1830  900F
1831  900F              ; ---------------------------------------------------------------------------------------------------------------------
1832  900F              ;
1833  900F              ; 8/1/23
1834  900F              ;
1835  900F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1836  900F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1837  900F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1838  900F
1839  900F              ; Destruye HL y DE !!!!!
1840  900F
1841  900F              Inicia_punteros_de_cajas
1842  900F
1843  900F 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1844  9012 CD 33 90         call Extrae_address
1845  9015 22 FB 8B         ld (Puntero_store_caja),hl
1846  9018 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1847  901B 22 FF 8B     	ld (Indice_restore_caja),hl
1848  901E CD 33 90     	call Extrae_address
1849  9021 22 FD 8B     	ld (Puntero_restore_caja),hl
1850  9024 C9               ret
1851  9025
1852  9025              ; *************************************************************************************************************************************************************
1853  9025              ;
1854  9025              ; 8/1/23
1855  9025              ;
1856  9025              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1857  9025
1858  9025 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1859  9028 22 2B 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1860  902B C9           	ret
1861  902C 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1862  902F 22 2D 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1863  9032 C9           	ret
1864  9033
1865  9033              ; *************************************************************************************************************************************************************
1866  9033              ;
1867  9033              ; 20/10/22
1868  9033              ;
1869  9033              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1870  9033              ;
1871  9033              ; Destruye el puntero y DE !!!!!
1872  9033
1873  9033 5E           Extrae_address ld e,(hl)
1874  9034 23           	inc hl
1875  9035 56           	ld d,(hl)
1876  9036 2B           	dec hl
1877  9037 EB           	ex de,hl
1878  9038 C9           	ret
1879  9039
1880  9039              ; *************************************************************************************************************************************************************
1881  9039              ;
1882  9039              ;	20/1/24
1883  9039              ;
1884  9039              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1885  9039              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1886  9039              ;
1887  9039              ;   Destruye HL y BC !!!!!,
1888  9039              ;
1889  9039              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1890  9039              ;					"0" ..... Izquierda.
1891  9039
1892  9039              Inicia_Puntero_objeto
1893  9039
1894  9039 3A DA 8B     	ld a,(Cuad_objeto)
1895  903C E6 01        	and 1
1896  903E F5           	push af
1897  903F CC 5B 90     	call z,Inicia_puntero_objeto_izq
1898  9042 F1           	pop af
1899  9043 C8           	ret z
1900  9044 CD 48 90     	call Inicia_puntero_objeto_der
1901  9047 C9           	ret
1902  9048
1903  9048              ; Arrancamos desde la parte izquierda de la pantalla.
1904  9048              ; Iniciamos (Indice_Sprite_der).
1905  9048
1906  9048 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1907  904B 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1908  904E CD 33 90     	call Extrae_address
1909  9051 22 CD 8B     	ld (Puntero_objeto),hl
1910  9054
1911  9054 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1912  9057 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1913  905A C9           	ret
1914  905B
1915  905B              ; Arrancamos desde la parte derecha de la pantalla.
1916  905B              ; Iniciamos (Indice_Sprite_izq).
1917  905B
1918  905B 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1919  905E 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1920  9061 CD 33 90     	call Extrae_address
1921  9064 22 CD 8B     	ld (Puntero_objeto),hl
1922  9067
1923  9067 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1924  906A 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1925  906D C9           	ret
1926  906E
1927  906E              ; **************************************************************************************************
1928  906E              ;
1929  906E              ;	06/07/24
1930  906E              ;
1931  906E              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1932  906E
1933  906E              Restore_entidad
1934  906E
1935  906E 2A FB 8B     	ld hl,(Puntero_store_caja)
1936  9071 7E           	ld a,(hl)
1937  9072 A7           	and a
1938  9073 CC 81 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1939  9076 28 F6        	jr z,Restore_entidad
1940  9078
1941  9078 11 BB 8B     	ld de,Bandeja_DRAW
1942  907B 01 0C 00     	ld bc,12
1943  907E ED B0        	ldir
1944  9080 C9           	ret
1945  9081
1946  9081              ; **************************************************************************************************
1947  9081              ;
1948  9081              ;	08/05/23
1949  9081              ;
1950  9081              ;	Incrementamos los dos punteros de entidades. (+1).
1951  9081
1952  9081              Incrementa_punteros_de_cajas
1953  9081
1954  9081 2A FD 8B     	ld hl,(Puntero_restore_caja)
1955  9084 22 FB 8B     	ld (Puntero_store_caja),hl
1956  9087 2A FF 8B     	ld hl,(Indice_restore_caja)
1957  908A 23           	inc hl
1958  908B 23           	inc hl
1959  908C 22 FF 8B     	ld (Indice_restore_caja),hl
1960  908F CD 33 90         call Extrae_address
1961  9092 22 FD 8B         ld (Puntero_restore_caja),hl
1962  9095 C9               ret
1963  9096
1964  9096              ; -----------------------------------------------------------
1965  9096
1966  9096              ; Teclado.
1967  9096
1968  9096 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1969  9098 DB FE        	in a,($fe)
1970  909A E6 01        	and $01
1971  909C 28 02        	jr z,1f
1972  909E 18 F6        	jr Pulsa_ENTER
1973  90A0 C9           1 ret
1974  90A1
1975  90A1              ; **************************************************************************************************
1976  90A1              ;
1977  90A1              ; Temporización.
1978  90A1
1979  90A1              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1980  90A1              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1981  90A1              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1982  90A1              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1983  90A1
1984  90A1              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1985  90A1              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1986  90A1              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1987  90A1
1988  90A1              ; A partir de $4f61 no hace falta DELAY.
1989  90A1
1990  90A1              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1991  90A1
1992  90A1              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1993  90A1              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1994  90A1              ;	LD A,B
1995  90A1              ;	AND A
1996  90A1              ;	JR NZ,wait
1997  90A1              ;	RET
1998  90A1
1999  90A1              ; ---------------------------------------------------------------------------------------------------------------
2000  90A1              ;
2001  90A1              ;	13/07/24
2002  90A1              ;
2003  90A1
2004  90A1              Inicia_Shield
2005  90A1
2006  90A1 21 48 8C     	ld hl,Datos_Shield
2007  90A4 22 4C 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
2008  90A7
2009  90A7 7E           	ld a,(hl)
2010  90A8 32 4F 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
2011  90AB
2012  90AB 3E 01        	ld a,1
2013  90AD 32 50 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2014  90B0
2015  90B0 C9           	ret
2016  90B1
2017  90B1              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2018  90B1              ;
2019  90B1              ;	4/6/24
2020  90B1              ;
2021  90B1              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2022  90B1              ;
2023  90B1              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2024  90B1              ;
2025  90B1
2026  90B1              Actualiza_pantalla
2027  90B1
2028  90B1 3E 02        	ld a,2
2029  90B3 D3 FE        	out ($fe),a
2030  90B5
2031  90B5 3A 29 8C     	ld a,(Ctrl_3)
2032  90B8 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2033  90BA
2034  90BA              Borrando_entidades
2035  90BA
2036  90BA 2A 23 8C     	ld hl,(Scanlines_album_SP)
2037  90BD CD 33 90     	call Extrae_address
2038  90C0 24           	inc h
2039  90C1 25           	dec h
2040  90C2 28 05        	jr z,Pintando_entidades
2041  90C4 CD 71 95     	call Pinta_Sprites
2042  90C7 18 F1        	jr Borrando_entidades
2043  90C9
2044  90C9              Pintando_entidades
2045  90C9
2046  90C9 2A 25 8C     	ld hl,(India_SP)
2047  90CC 2C           	inc l
2048  90CD CD 33 90     	call Extrae_address
2049  90D0 24           	inc h
2050  90D1 25           	dec h
2051  90D2 28 0E        	jr z,Ejecuta_escudo
2052  90D4 1C           	inc e
2053  90D5 1C           	inc e
2054  90D6 ED 53 25 8C  	ld (India_SP),de
2055  90DA CD 33 90     	call Extrae_address
2056  90DD CD 71 95     	call Pinta_Sprites
2057  90E0 18 E7        	jr Pintando_entidades
2058  90E2
2059  90E2              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2060  90E2
2061  90E2              Ejecuta_escudo
2062  90E2
2063  90E2 3A 4E 8C     	ld a,(Shield)
2064  90E5 A7           	and a
2065  90E6 20 2F        	jr nz,Aplica_Shield
2066  90E8
2067  90E8              Borrando_Amadeus
2068  90E8
2069  90E8 21 29 8C     	ld hl,Ctrl_3
2070  90EB CB 6E        	bit 5,(hl)
2071  90ED 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2072  90EF
2073  90EF 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2074  90F2 CD 33 90     	call Extrae_address
2075  90F5 24           	inc h
2076  90F6 25           	dec h
2077  90F7 28 03        	jr z,Pintando_Amadeus
2078  90F9 CD 71 95     	call Pinta_Sprites
2079  90FC
2080  90FC              Pintando_Amadeus
2081  90FC
2082  90FC 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2083  90FF CD 33 90     	call Extrae_address
2084  9102 24           	inc h
2085  9103 25           	dec h
2086  9104 28 03        	jr z,1F
2087  9106 CD 71 95     	call Pinta_Sprites
2088  9109
2089  9109              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2090  9109
2091  9109 21 29 8C     1 ld hl,Ctrl_3
2092  910C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2093  910E CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2094  9110 CB AE        	res 5,(hl)
2095  9112
2096  9112 3E 01        	ld a,1												; Borde azul.
2097  9114 D3 FE        	out ($fe),a
2098  9116
2099  9116 C9           	ret
2100  9117
2101  9117
2102  9117
2103  9117              Aplica_Shield
2104  9117
2105  9117              ;	Bit 1 "1" (Shield_3) Sólo borra.
2106  9117              ;		  "0"     ""     Borra/Pinta.
2107  9117              ;	Bit 2    ""  RET.	 No borra, no pinta.
2108  9117
2109  9117 21 50 8C     	ld hl,Shield_3
2110  911A
2111  911A CB 5E        	bit 3,(hl)
2112  911C 20 DE        	jr nz,Pintando_Amadeus
2113  911E
2114  911E CB 56        	bit 2,(hl)
2115  9120 20 E7        	jr nz,1B
2116  9122
2117  9122 CB 4E        	bit 1,(hl)
2118  9124 C4 2B 91     	call nz,Borra_Amadeus_shield
2119  9127
2120  9127 28 BF        	jr z,Borrando_Amadeus
2121  9129 18 DE        	jr 1B
2122  912B
2123  912B              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2124  912B
2125  912B              Borra_Amadeus_shield
2126  912B
2127  912B 3A 29 8C     	ld a,(Ctrl_3)
2128  912E CB 6F        	bit 5,a
2129  9130 28 08        	jr z,1F
2130  9132
2131  9132 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2132  9135 CD 33 90     	call Extrae_address
2133  9138 18 06        	jr 2F
2134  913A
2135  913A 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2136  913D CD 33 90     	call Extrae_address
2137  9140
2138  9140 CD 71 95     2 call Pinta_Sprites
2139  9143
2140  9143 AF           	xor a
2141  9144 3C           	inc a											; Asegura NZ en la salida de la rutina.
2142  9145
2143  9145 C9           	ret
2144  9146
2145  9146              Pinta_Amadeus_shield
2146  9146
2147  9146 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2148  9149 CD 33 90     	call Extrae_address
2149  914C CD 71 95     	call Pinta_Sprites
2150  914F
2151  914F AF           	xor a
2152  9150 3C           	inc a											; Asegura NZ en la salida de la rutina.
2153  9151
2154  9151 C9           	ret
2155  9152
2156  9152              Borra_Pinta_Amadeus_shield
2157  9152
2158  9152 CD 2B 91     	call Borra_Amadeus_shield
2159  9155 CD 46 91     	call Pinta_Amadeus_shield
2160  9158 C9           	ret
2161  9159
2162  9159              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2163  9159              ;
2164  9159              ;	19/6/24
2165  9159              ;
2166  9159
2167  9159              Teclado
2168  9159
2169  9159              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2170  9159
2171  9159 3E F7        	ld a,$f7												; "5" para disparar.
2172  915B DB FE        	in a,($fe)
2173  915D E6 10        	and $10
2174  915F
2175  915F CC C9 9E     	call z,Genera_disparo_Amadeus
2176  9162
2177  9162 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2178  9164 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2179  9166 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2180  9168 CC DE 9C         call z,Amadeus_a_izquierda
2181  916B
2182  916B 3E F7        	ld a,$f7
2183  916D DB FE        	in a,($fe)
2184  916F E6 01        	and $01
2185  9171 C8           	ret z
2186  9172
2187  9172 3E F7        	ld a,$f7
2188  9174 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2189  9176 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2190  9178 CC F6 9C     	call z,Amadeus_a_derecha
2191  917B
2192  917B C9           	ret
2193  917C
2194  917C              ; ------------------------------------------------------------------------------------------------------------------------
2195  917C              ;
2196  917C              ;	06/07/24
2197  917C              ;
2198  917C
2199  917C              Genera_explosion
2200  917C
2201  917C 21 3A 8C     	ld hl,Clock_explosion
2202  917F 35           	dec (hl)
2203  9180 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2204  9182
2205  9182              Borra_entidad_colisionada
2206  9182
2207  9182 CD 8A 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2208  9185 CD 8F 8F     	call Cargamos_registros_con_explosion
2209  9188 CD 7C 94     	call Genera_datos_de_impresion
2210  918B
2211  918B AF           	xor a
2212  918C 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2213  918D
2214  918D C9           	ret
2215  918E
2216  918E              Siguiente_frame_explosion
2217  918E
2218  918E 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2219  9190
2220  9190              ; Avanza Frame de explosión.
2221  9190
2222  9190 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2223  9193 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2224  9196
2225  9196 79           	ld a,c
2226  9197 95           	sub l
2227  9198 20 0B        	jr nz,1F
2228  919A
2229  919A              ; Fín de la entidad !!!!!!!!!!!!!
2230  919A
2231  919A 21 02 8C     	ld hl,Numero_parcial_de_entidades
2232  919D 35           	dec (hl)
2233  919E 23           	inc hl
2234  919F 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2235  91A0
2236  91A0 CD FC 92     	call Limpiamos_bandeja_DRAW
2237  91A3 18 DD        	jr Borra_entidad_colisionada
2238  91A5
2239  91A5 23           1 inc hl
2240  91A6 23           	inc hl
2241  91A7 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2242  91AA 18 D6        	jr Borra_entidad_colisionada
2243  91AC
2244  91AC              ; ----- ----- ----- ----- -----
2245  91AC
2246  91AC              Genera_explosion_Amadeus
2247  91AC
2248  91AC 21 3B 8C     	ld hl,Clock_explosion_Amadeus
2249  91AF 35           	dec (hl)
2250  91B0 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2251  91B2
2252  91B2              Borra_Amadeus_impactado
2253  91B2
2254  91B2 CD 1A 8E     	call Change_Amadeus
2255  91B5 CD 9C 8F     	call Cargamos_registros_con_explosion_Amadeus
2256  91B8 CD BD 8F     	call Genera_datos_de_impresion_Amadeus
2257  91BB
2258  91BB 21 29 8C     	ld hl,Ctrl_3
2259  91BE CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2260  91C0
2261  91C0 AF           	xor a
2262  91C1 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2263  91C2
2264  91C2 C9           	ret
2265  91C3
2266  91C3              Siguiente_frame_explosion_Amadeus
2267  91C3
2268  91C3 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2269  91C5
2270  91C5              ; Avanza Frame de explosión.
2271  91C5
2272  91C5 2A 77 89     	ld hl,(Pamm_Amadeus)
2273  91C8 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2274  91CB
2275  91CB 79           	ld a,c
2276  91CC 95           	sub l
2277  91CD 20 0B        	jr nz,1F
2278  91CF
2279  91CF              ; Fín de Amadeus !!!!!!!!!!!!!
2280  91CF              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2281  91CF
2282  91CF AF           	xor a
2283  91D0 32 74 89     	ld (Impacto_Amadeus),a
2284  91D3 21 29 8C     	ld hl,Ctrl_3
2285  91D6 CB F6        	set 6,(hl)
2286  91D8
2287  91D8 18 D8        	jr Borra_Amadeus_impactado
2288  91DA
2289  91DA 23           1 inc hl
2290  91DB 23           	inc hl
2291  91DC 22 77 89     	ld (Pamm_Amadeus),hl
2292  91DF 18 D1        	jr Borra_Amadeus_impactado
2293  91E1
2294  91E1              ; ---------------------------------------------------------------
2295  91E1
2296  91E1              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 91E1              ; ******************************************************************************************************************************************************************************************
   2+ 91E1              ;
   3+ 91E1              ;   21/04/24
   4+ 91E1              ;
   5+ 91E1              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 91E1              ;   (XOR) bit a bit.
   7+ 91E1              ;
   8+ 91E1              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 91E1
  10+ 91E1              Derivando_RND
  11+ 91E1
  12+ 91E1 21 F6 88         ld hl,Numeros_aleatorios
  13+ 91E4
  14+ 91E4 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 91E6 C5               push bc
  16+ 91E7              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 91E7 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 91EA              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 91EA
  20+ 91EA A7           6 and a                                 ; Carry a "0".
  21+ 91EB CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 91ED 30 02            jr nc,1F
  23+ 91EF
  24+ 91EF CB C1            set 0,c
  25+ 91F1
  26+ 91F1 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 91F2 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 91F4 5F               ld e,a
  29+ 91F5
  30+ 91F5 7A               ld a,d
  31+ 91F6 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 91F8 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 91FA
  34+ 91FA CB 3F            srl a
  35+ 91FC
  36+ 91FC AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 91FD
  38+ 91FD 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 91FE 28 04            jr z,4F
  40+ 9200
  41+ 9200 CB FF            set 7,a
  42+ 9202 18 02            jr 5F
  43+ 9204
  44+ 9204 CB BF        4 res 7,a
  45+ 9206
  46+ 9206 CB 21        5 sla c
  47+ 9208 10 E0            djnz 6B
  48+ 920A
  49+ 920A 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 920B
  51+ 920B 77               ld (hl),a
  52+ 920C 23               inc hl
  53+ 920D C1               pop bc
  54+ 920E 10 D4            djnz 3B
  55+ 9210
  56+ 9210 C9               ret
  57+ 9211
  58+ 9211
  59+ 9211
# file closed: RND_Derivando.asm
2297  9211              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9211              ;---------------------------------------------------------------------------------------------------------------
   2+ 9211              ;
   3+ 9211              ;   8/3/24
   4+ 9211              ;
   5+ 9211              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9211              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9211              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9211              ;	_ de la 1ª entidad del Nivel.
   9+ 9211              ;
  10+ 9211              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9211
  12+ 9211              ;	MODIFICA: HL,DE y A.
  13+ 9211              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9211
  15+ 9211              Inicializa_Nivel
  16+ 9211
  17+ 9211 2A 44 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9214 CD 33 90     	call Extrae_address
  19+ 9217 7E           	ld a,(hl)
  20+ 9218 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 921B 23           	inc hl
  22+ 921C CD 29 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 921F 22 46 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9222 CD 32 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9225
  26+ 9225 CD 43 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9228 C9           	ret
  28+ 9229
  29+ 9229              ; ----------------------
  30+ 9229
  31+ 9229 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 922C 01 04 00     	ld bc,4
  33+ 922F ED B0        	ldir
  34+ 9231 C9           	ret
  35+ 9232
  36+ 9232 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9233 CD CD 93         call Calcula_salto_en_BC
  38+ 9236 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9239 A7               and a
  40+ 923A ED 4A            adc hl,bc
  41+ 923C CD 33 90         call Extrae_address
  42+ 923F 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 9242 C9               ret
  44+ 9243
  45+ 9243 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 9246 CD CD 93     	call Calcula_salto_en_BC
  47+ 9249 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 924C A7               and a
  49+ 924D ED 4A            adc hl,bc
  50+ 924F CD 33 90         call Extrae_address
  51+ 9252 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 9255 C9           	ret
  53+ 9256
  54+ 9256              ;---------------------------------------------------------------------------------------------------------------
  55+ 9256              ;
  56+ 9256              ;   5/1/24
  57+ 9256              ;
  58+ 9256              ;	Destruye A,BC,HL,DE
  59+ 9256
  60+ 9256              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 9256              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 9256
  63+ 9256              Inicia_Entidades
  64+ 9256
  65+ 9256              ; Preparamos los punteros de las cajas de entidades:
  66+ 9256
  67+ 9256 CD 0F 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 9259              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 9259 CD 15 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 925C
  71+ 925C 2A 46 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 925F
  73+ 925F 22 46 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 9262
  75+ 9262 CD 7B 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 9265
  77+ 9265 2A 46 8C     	ld hl,(Datos_de_nivel)
  78+ 9268
  79+ 9268              ; En este punto:
  80+ 9268              ;
  81+ 9268              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 9268              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 9268
  84+ 9268 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 9269
  86+ 9269 7E           	ld a,(hl)
  87+ 926A CD E7 92     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 926D
  89+ 926D CD DF 93     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 9270
  91+ 9270              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 9270
  93+ 9270 CD 9D 93     	call Busca_mov_masticados_segun_tipo
  94+ 9273
  95+ 9273 A7           	and a
  96+ 9274 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 9276
  98+ 9276              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 9276
 100+ 9276              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 9276              ;	_ de este tipo de entidad.
 102+ 9276
 103+ 9276 CD 75 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 9279 CD 82 9E     	call Transfiere_datos_de_contadores
 105+ 927C
 106+ 927C 18 06        	jr 4F
 107+ 927E
 108+ 927E CD 22 8F     3 call Construye_movimientos_masticados_entidad
 109+ 9281
 110+ 9281              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 9281              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 9281              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 9281              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 9281              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 9281
 116+ 9281 CD 5B 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9284              ;																; _ Mov_masticados ya generados.
 118+ 9284
 119+ 9284 CD 76 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9287
 121+ 9287 DD E5        	push ix
 122+ 9289 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 928A
 124+ 928A D5           	push de
 125+ 928B CD 50 94     	call Genera_coordenadas
 126+ 928E
 127+ 928E ED 5B 23 8C  	ld de,(Scanlines_album_SP)
 128+ 9292 CD 8A 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9295 D1           	pop de
 130+ 9296
 131+ 9296 CD 7C 94     	call Genera_datos_de_impresion
 132+ 9299              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9299              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9299              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9299              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9299
 137+ 9299 CD 1F 93     	call Decrementa_Contador_de_mov_masticados
 138+ 929C
 139+ 929C              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 929C
 141+ 929C ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92A0 CD 0C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92A3
 144+ 92A3 CD FC 92     	call Limpiamos_bandeja_DRAW
 145+ 92A6 CD 81 90     	call Incrementa_punteros_de_cajas
 146+ 92A9
 147+ 92A9              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92A9              ; _ entidad del Nivel.
 149+ 92A9
 150+ 92A9 3A 2A 8C     	ld a,(Ctrl_4)
 151+ 92AC E6 F0        	and $f0
 152+ 92AE 32 2A 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92B1
 154+ 92B1              ; Siguiente entidad del Nivel.
 155+ 92B1
 156+ 92B1 2A 46 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92B4 23           	inc hl 														; _ entidad del Nivel.
 158+ 92B5
 159+ 92B5 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92B6
 161+ 92B6 10 A7        	djnz 2B
 162+ 92B8
 163+ 92B8 C9           	ret
 164+ 92B9
 165+ 92B9              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92B9              ;
 167+ 92B9              ;	27/5/24
 168+ 92B9              ;
 169+ 92B9              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92B9              ;
 171+ 92B9
 172+ 92B9              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92B9              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92B9
 175+ 92B9 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 92BC CD DF 93     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 92BF
 178+ 92BF
 179+ 92BF              Construye_movimientos_masticados_Amadeus
 180+ 92BF
 181+ 92BF 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 92C2 CD 69 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 92C5              ;															; _ el (Contador_de_mov_masticados).
 184+ 92C5 CD 39 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 92C8              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 92C8
 187+ 92C8              ; Generamos movimientos masticados de Amadeus.
 188+ 92C8
 189+ 92C8 06 79        	ld b,121												; $0079, 121d.
 190+ 92CA
 191+ 92CA C5           1 push bc
 192+ 92CB CD 94 96     	call Draw
 193+ 92CE CD 4E 8F     	call Guarda_movimiento_masticado
 194+ 92D1
 195+ 92D1 CD 08 9A     	call Mov_right
 196+ 92D4 CD 08 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 92D7
 198+ 92D7 C1           	pop bc
 199+ 92D8 10 F0        	djnz 1B
 200+ 92DA
 201+ 92DA              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 92DA
 203+ 92DA              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 92DA              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 92DA
 206+ 92DA 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 92DD 01 08 00     	ld bc,8
 208+ 92E0 A7           	and a
 209+ 92E1 ED 42        	sbc hl,bc
 210+ 92E3 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 92E6
 212+ 92E6 C9           	ret
 213+ 92E7
 214+ 92E7              ; ---------------------------------------------------------------------
 215+ 92E7              ;
 216+ 92E7              ;	10/02/24
 217+ 92E7              ;
 218+ 92E7              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 92E7              ;
 220+ 92E7              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 92E7
 222+ 92E7              Definicion_segun_tipo
 223+ 92E7
 224+ 92E7 CD CD 93     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 92EA 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 92ED CD D5 93     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 92F0 C9           	ret
 228+ 92F1
 229+ 92F1              ; ---------------------------------------------------------------------
 230+ 92F1              ;
 231+ 92F1              ;	6/7/24
 232+ 92F1
 233+ 92F1
 234+ 92F1              Store_Restore_cajas
 235+ 92F1
 236+ 92F1 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 92F5 CD 0C 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 92F8 CD 81 90     	call Incrementa_punteros_de_cajas
 239+ 92FB C9           	ret
 240+ 92FC
 241+ 92FC              ; ---------------------------------------------------------------------
 242+ 92FC              ;
 243+ 92FC              ;	23/6/24
 244+ 92FC              ;
 245+ 92FC              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 92FC              ;
 247+ 92FC              ;	MODIFY: HL
 248+ 92FC
 249+ 92FC              Limpiamos_bandeja_DRAW
 250+ 92FC
 251+ 92FC ED 73 08 8C  	ld (Stack),sp
 252+ 9300 31 E0 8B     	ld sp,Vel_left
 253+ 9303
 254+ 9303 AF           	xor a
 255+ 9304 67           	ld h,a
 256+ 9305 6F           	ld l,a
 257+ 9306
 258+ 9306 E5           	push hl
 259+ 9307 E5           	push hl
 260+ 9308 E5           	push hl
 261+ 9309 E5           	push hl
 262+ 930A E5           	push hl
 263+ 930B E5           	push hl
 264+ 930C E5           	push hl
 265+ 930D E5           	push hl
 266+ 930E E5           	push hl
 267+ 930F E5           	push hl
 268+ 9310 E5           	push hl
 269+ 9311 E5           	push hl
 270+ 9312 E5           	push hl
 271+ 9313 E5           	push hl
 272+ 9314 E5           	push hl
 273+ 9315 E5           	push hl
 274+ 9316 E5           	push hl
 275+ 9317 E5           	push hl
 276+ 9318
 277+ 9318 33           	inc sp
 278+ 9319
 279+ 9319 E5           	push hl
 280+ 931A ED 7B 08 8C  	ld sp,(Stack)
 281+ 931E
 282+ 931E C9           	ret
 283+ 931F
 284+ 931F              ; ---------------------------------------------------------------------
 285+ 931F              ;
 286+ 931F              ;	24/03/24
 287+ 931F
 288+ 931F 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9322 2B           	dec hl
 290+ 9323 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 9326 C9           	ret
 292+ 9327
 293+ 9327              ; ---------------------------------------------------------------------
 294+ 9327              ;
 295+ 9327              ;	8/5/24
 296+ 9327
 297+ 9327              Reinicia_entidad_maliciosa
 298+ 9327
 299+ 9327              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9327
 301+ 9327 CD 75 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 932A CD 82 9E     	call Transfiere_datos_de_contadores
 303+ 932D
 304+ 932D              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 932D
 306+ 932D 3A BB 8B     	ld a,(Tipo)
 307+ 9330 CD E7 92     	call Definicion_segun_tipo
 308+ 9333
 309+ 9333 E5           	push hl
 310+ 9334 DD E1        	pop ix
 311+ 9336
 312+ 9336 DD 6E 0B     	ld l,(ix+11)
 313+ 9339 DD 66 0C     	ld h,(ix+12)
 314+ 933C
 315+ 933C 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 933F
 317+ 933F CD 76 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9342
 319+ 9342              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9342              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9342              ; Ejemplos.
 322+ 9342
 323+ 9342              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9342              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9342              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9342              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9342              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9342
 329+ 9342 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 9345 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 9347
 332+ 9347 7E           	ld a,(hl)
 333+ 9348 CB 2F        	sra a
 334+ 934A CB 2F        	sra a
 335+ 934C
 336+ 934C 32 C6 8B     	ld (Velocidad),a
 337+ 934F
 338+ 934F 3E 40        	ld a,$40
 339+ 9351 BE           	cp (hl)
 340+ 9352 C0           	ret nz
 341+ 9353
 342+ 9353              ; Límitador.
 343+ 9353
 344+ 9353              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 9353
 346+ 9353 CB 2E        	sra (hl)
 347+ 9355 21 C6 8B     	ld hl,Velocidad
 348+ 9358 CB 2E        	sra (hl)
 349+ 935A
 350+ 935A C9           	ret
 351+ 935B
 352+ 935B              ; ---------------------------------------------------------------------
 353+ 935B              ;
 354+ 935B              ;	22/01/24
 355+ 935B
 356+ 935B 21 2A 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 935E CB 46        	bit 0,(hl)
 358+ 9360 20 0D        	jr nz,1F
 359+ 9362 CB 4E        	bit 1,(hl)
 360+ 9364 20 0C        	jr nz,2F
 361+ 9366 CB 56        	bit 2,(hl)
 362+ 9368 20 0B        	jr nz,3F
 363+ 936A CB 5E        	bit 3,(hl)
 364+ 936C 20 0A        	jr nz,4F
 365+ 936E C9           	ret
 366+ 936F
 367+ 936F CB E6        1 set 4,(hl)
 368+ 9371 C9           	ret
 369+ 9372 CB EE        2 set 5,(hl)
 370+ 9374 C9           	ret
 371+ 9375 CB F6        3 set 6,(hl)
 372+ 9377 C9           	ret
 373+ 9378 CB FE        4 set 7,(hl)
 374+ 937A C9           	ret
 375+ 937B
 376+ 937B              ; ---------------------------------------------------------------------
 377+ 937B              ;
 378+ 937B              ;	23/01/24
 379+ 937B              ;
 380+ 937B              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 937B              ;
 382+ 937B              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 937B              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 937B              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 937B              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 937B
 387+ 937B              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 937B
 389+ 937B 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 937C 3D           	dec a
 391+ 937D 20 06        	jr nz,1F
 392+ 937F
 393+ 937F              ; --- Tipo_1
 394+ 937F
 395+ 937F 21 2A 8C     	ld hl,Ctrl_4
 396+ 9382 CB C6        	set 0,(hl)
 397+ 9384 C9           	ret
 398+ 9385
 399+ 9385 3D           1 dec a
 400+ 9386 20 06        	jr nz,2F
 401+ 9388
 402+ 9388              ; --- Tipo_2
 403+ 9388
 404+ 9388 21 2A 8C     	ld hl,Ctrl_4
 405+ 938B CB CE        	set 1,(hl)
 406+ 938D C9           	ret
 407+ 938E
 408+ 938E 3D           2 dec a
 409+ 938F 20 06        	jr nz,3F
 410+ 9391
 411+ 9391              ; --- Tipo_3
 412+ 9391
 413+ 9391 21 2A 8C     	ld hl,Ctrl_4
 414+ 9394 CB D6        	set 2,(hl)
 415+ 9396 C9           	ret
 416+ 9397
 417+ 9397              ; --- Tipo_3
 418+ 9397
 419+ 9397 21 2A 8C     3 ld hl,Ctrl_4
 420+ 939A CB D6        	set 2,(hl)
 421+ 939C C9           	ret
 422+ 939D
 423+ 939D              ; ---------------------------------------------------------------------
 424+ 939D              ;
 425+ 939D              ;	22/01/24
 426+ 939D
 427+ 939D 21 2A 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93A0 CB 46        	bit 0,(hl)
 429+ 93A2 20 0E        	jr nz,1F
 430+ 93A4
 431+ 93A4 CB 4E        	bit 1,(hl)
 432+ 93A6 20 10        	jr nz,2F
 433+ 93A8
 434+ 93A8 CB 56        	bit 2,(hl)
 435+ 93AA 20 12        	jr nz,3F
 436+ 93AC
 437+ 93AC CB 5E        	bit 3,(hl)
 438+ 93AE 20 14        	jr nz,4F
 439+ 93B0 18 19        	jr 6F
 440+ 93B2
 441+ 93B2              ; Entidad_de_Tipo_1.
 442+ 93B2
 443+ 93B2 CB 66        1 bit 4,(hl)
 444+ 93B4 28 15        	jr z,6F
 445+ 93B6 18 10        	jr 5F
 446+ 93B8
 447+ 93B8              ; Entidad_de_Tipo_2.
 448+ 93B8
 449+ 93B8 CB 6E        2 bit 5,(hl)
 450+ 93BA 28 0F        	jr z,6F
 451+ 93BC 18 0A        	jr 5F
 452+ 93BE
 453+ 93BE              ; Entidad_de_Tipo_3.
 454+ 93BE
 455+ 93BE CB 76        3 bit 6,(hl)
 456+ 93C0 28 09        	jr z,6F
 457+ 93C2 18 04        	jr 5F
 458+ 93C4
 459+ 93C4              ; Entidad_de_Tipo_4.
 460+ 93C4
 461+ 93C4 CB 7E        4 bit 7,(hl)
 462+ 93C6 28 03        	jr z,6F
 463+ 93C8
 464+ 93C8              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 93C8
 466+ 93C8 AF           5 xor a
 467+ 93C9 3C           	inc a
 468+ 93CA C9           	ret
 469+ 93CB
 470+ 93CB              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 93CB
 472+ 93CB AF           6 xor a
 473+ 93CC C9           	ret
 474+ 93CD
 475+ 93CD              ;	------------------------------------------------------------------------------------
 476+ 93CD              ;
 477+ 93CD              ;	12/01/24
 478+ 93CD              ;
 479+ 93CD              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 93CD              ;
 481+ 93CD              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 93CD              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 93CD
 484+ 93CD CB 27        Calcula_salto_en_BC sla a
 485+ 93CF D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 93D1 4F           	ld c,a
 487+ 93D2 06 00        	ld b,0
 488+ 93D4 C9           	ret
 489+ 93D5
 490+ 93D5              ; ------------------------------------------------------------------
 491+ 93D5              ;
 492+ 93D5              ;	19/1/24
 493+ 93D5              ;
 494+ 93D5              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 93D5              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 93D5
 497+ 93D5 A7           Situa_en_datos_de_definicion and a
 498+ 93D6 ED 4A        	adc hl,bc
 499+ 93D8 CD 33 90     	call Extrae_address
 500+ 93DB 22 06 8C         ld (Datos_de_entidad),hl
 501+ 93DE C9           	ret
 502+ 93DF
 503+ 93DF              ; ------------------------------------------------------------------
 504+ 93DF
 505+ 93DF              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 93DF              ; 	inc de
 507+ 93DF              ; 	inc de
 508+ 93DF              ; 	ex de,hl
 509+ 93DF              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 93DF              ; 	ret
 511+ 93DF
 512+ 93DF              ; ----------------------------------------------------------------------------------------------------------
 513+ 93DF              ;
 514+ 93DF              ;	24/6/24
 515+ 93DF              ;
 516+ 93DF              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 93DF              ;	_ de entidad.
 518+ 93DF              ;
 519+ 93DF              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 93DF              ;
 521+ 93DF              ;
 522+ 93DF              ;	MODIFICA: HL,DE y BC
 523+ 93DF
 524+ 93DF
 525+ 93DF              Definicion_de_entidad_a_bandeja_DRAW
 526+ 93DF
 527+ 93DF 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 93E2 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 93E3 12           	ld (de),a
 530+ 93E4 23           	inc hl
 531+ 93E5              ;
 532+ 93E5 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 93E8 01 02 00     	ld bc,2
 534+ 93EB ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 93ED              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 93ED 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 93F0 7E           	ld a,(hl)
 538+ 93F1 12           	ld (de),a
 539+ 93F2 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 93F3
 541+ 93F3 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 93F6 01 04 00     	ld bc,4
 543+ 93F9 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 93FB
 545+ 93FB 11 D8 8B     	ld de,Posicion_inicio
 546+ 93FE 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9401 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9403
 549+ 9403 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9406 01 02 00     	ld bc,2
 551+ 9409 ED B0        	ldir
 552+ 940B
 553+ 940B C9           	ret
 554+ 940C
 555+ 940C              ; ----------------------------------------------------------------------------------------------------------
 556+ 940C              ;
 557+ 940C              ;	1/8/24
 558+ 940C              ;
 559+ 940C
 560+ 940C              Parametros_de_bandeja_DRAW_a_caja
 561+ 940C
 562+ 940C 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 940F 01 0C 00     	ld bc,12
 564+ 9412 ED B0        	ldir
 565+ 9414 C9           	ret
 566+ 9415
 567+ 9415              ;---------------------------------------------------------------------------------------------------------------
 568+ 9415              ;
 569+ 9415              ;	5/1/24
 570+ 9415              ;
 571+ 9415              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9415              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9415              ;
 574+ 9415              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9415              ;
 576+ 9415              ;	(Numero_parcial_de_entidades)="7".
 577+ 9415              ;
 578+ 9415              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9415              ;
 580+ 9415              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9415              ;
 582+ 9415              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9415              ;	MODIFICA: A y B.
 584+ 9415              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9415
 586+ 9415              Inicializa_Numero_parcial_de_entidades
 587+ 9415
 588+ 9415              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9415
 590+ 9415 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 9418 A7           	and a
 592+ 9419
 593+ 9419              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9419              ;	jr z,$
 595+ 9419              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9419
 597+ 9419 20 03        	jr nz,3F
 598+ 941B
 599+ 941B              ; ---------- ---------- ----------
 600+ 941B
 601+ 941B              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 941B              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 941B
 604+ 941B CD 11 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 941E
 606+ 941E              ; ---------- ---------- ----------
 607+ 941E
 608+ 941E 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9421 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9423 38 08        	jr c,1F
 611+ 9425
 612+ 9425              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9425              ; Actualizamos variables.
 614+ 9425
 615+ 9425 3E 07        	ld a,7
 616+ 9427 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 942A 47           	ld b,a
 618+ 942B 18 04        	jr 2F
 619+ 942D
 620+ 942D              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 942D              ; (Numero_de_entidades)="0".
 622+ 942D
 623+ 942D 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9430 47           	ld b,a
 625+ 9431 C9           2 ret
 626+ 9432
# file closed: Rutinas_de_inicio_y_niveles.asm
2298  9432              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9432              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9432              ;
   3+ 9432              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9432              ;
   5+ 9432              ; *****************************************************************************************************************************************************************************************
   6+ 9432              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9432
   8+ 9432 7C           calcula_tercio ld a,h
   9+ 9433 E6 18        	and $18
  10+ 9435 CB 2F        	sra a
  11+ 9437 CB 2F        	sra a
  12+ 9439 CB 2F        	sra a
  13+ 943B C9           	ret
  14+ 943C
# file closed: calcula_tercio.asm
2299  943C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 943C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 943C              ;
   3+ 943C              ;
   4+ 943C              ;	CLS.
   5+ 943C              ;
   6+ 943C              ;	Limpia la pantalla y define sus atributos.
   7+ 943C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 943C              ;
   9+ 943C              ;	COLORES: 0 ..... NEGRO
  10+ 943C              ;    		 1 ..... AZUL
  11+ 943C              ; 			 2 ..... ROJO
  12+ 943C              ;			 3 ..... MAGENTA
  13+ 943C              ; 			 4 ..... VERDE
  14+ 943C              ; 			 5 ..... CIAN
  15+ 943C              ;			 6 ..... AMARILLO
  16+ 943C              ; 			 7 ..... BLANCO
  17+ 943C              ;
  18+ 943C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 943C              ;
  20+ 943C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 943C
  22+ 943C
  23+ 943C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 943F 11 01 40     	LD DE,$4001
  25+ 9442 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9445 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9447 ED B0        	LDIR
  28+ 9449 01 FF 02     	LD BC,767
  29+ 944C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 944D ED B0        	LDIR
  31+ 944F C9           	ret
  32+ 9450
# file closed: Cls.asm
2300  9450              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9450              ; ------------------------------------------------------------------------
   2+ 9450              ;
   3+ 9450              ;	30/1/24
   4+ 9450              ;
   5+ 9450              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9450              ;	Fila superior "0", Columna izquierda "0".
   7+ 9450              ;
   8+ 9450              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9450              ;
  10+ 9450              ;	Modifica: A,BC y DE.
  11+ 9450
  12+ 9450 7D           Genera_coordenadas ld a,l
  13+ 9451 E6 1F        	and $1f
  14+ 9453 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9456
  16+ 9456 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9457 FE 40        	cp $40
  18+ 9459 38 1C        	jr c,4F
  19+ 945B
  20+ 945B CD 32 94     	call calcula_tercio
  21+ 945E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 945F
  23+ 945F 1E 00        	ld e,0
  24+ 9461 7D           	ld a,l
  25+ 9462 E6 E0        	and $e0
  26+ 9464 28 01        	jr z,1F
  27+ 9466 04           	inc b
  28+ 9467
  29+ 9467 04           1 inc b
  30+ 9468 05           	dec b
  31+ 9469 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 946B              ;														; _ , salimos.
  33+ 946B 1C           3 inc e
  34+ 946C D6 20        	sub 32
  35+ 946E 20 FB        	jr nz,3B
  36+ 9470 10 F5        	djnz 1B
  37+ 9472
  38+ 9472 7B           2 ld a,e
  39+ 9473 32 BD 8B     	ld (Coordenada_y),a
  40+ 9476 C9           	ret
  41+ 9477
  42+ 9477 AF           4 xor a
  43+ 9478 32 BD 8B     	ld (Coordenada_y),a
  44+ 947B C9           	ret
  45+ 947C
# file closed: Genera_coordenadas.asm
2301  947C              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 947C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 947C              ;
   3+ 947C              ;	11/03/24
   4+ 947C              ;
   5+ 947C              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 947C              ;   DE contiene Puntero_objeto.
   7+ 947C              ;   IX contiene el Puntero de impresión.
   8+ 947C
   9+ 947C              Genera_datos_de_impresion
  10+ 947C
  11+ 947C ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 9480
  13+ 9480 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 9483 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9485
  16+ 9485 2A 23 8C         ld hl,(Scanlines_album_SP)
  17+ 9488
  18+ 9488 3E 05            ld a,5
  19+ 948A 85               add l
  20+ 948B 6F               ld l,a
  21+ 948C
  22+ 948C F9               ld sp,hl
  23+ 948D 22 23 8C         ld (Scanlines_album_SP),hl
  24+ 9490
  25+ 9490 21 00 00         ld hl,0
  26+ 9493
  27+ 9493 DD E5            push ix
  28+ 9495 3B               dec sp
  29+ 9496 ED 7A            adc hl,sp
  30+ 9498 D5               push de
  31+ 9499
  32+ 9499              ; Recuperamos SP.
  33+ 9499
  34+ 9499 ED 7B 08 8C      ld sp,(Stack)
  35+ 949D
  36+ 949D E5               push hl
  37+ 949E F1               pop af
  38+ 949F 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94A0
  40+ 94A0              ; Tenemos el encabezado listo.
  41+ 94A0              ; Preparamos registros para generar los scanlines.
  42+ 94A0
  43+ 94A0 DD E5            push ix
  44+ 94A2 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94A3
  46+ 94A3 ED 5B 23 8C      ld de,(Scanlines_album_SP)
  47+ 94A7
  48+ 94A7              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94A7              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94A7
  51+ 94A7 7C               ld a,h
  52+ 94A8 FE 50            cp $50
  53+ 94AA 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94AC
  55+ 94AC 20 05            jr nz,2F
  56+ 94AE
  57+ 94AE 7D               ld a,l
  58+ 94AF FE E0            cp $e0
  59+ 94B1 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94B3
  61+ 94B3 7D           2 ld a,l
  62+ 94B4 FE C0            cp $c0
  63+ 94B6 D2 48 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94B9
  65+ 94B9              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94B9
  67+ 94B9 CD 46 99         call NextScan
  68+ 94BC EB               ex de,hl
  69+ 94BD
  70+ 94BD 73               ld (hl),e
  71+ 94BE 23               inc hl
  72+ 94BF 72               ld (hl),d
  73+ 94C0 23               inc hl
  74+ 94C1
  75+ 94C1 EB               ex de,hl
  76+ 94C2
  77+ 94C2 CD 46 99         call NextScan
  78+ 94C5 EB               ex de,hl
  79+ 94C6
  80+ 94C6 73               ld (hl),e
  81+ 94C7 23               inc hl
  82+ 94C8 72               ld (hl),d
  83+ 94C9 23               inc hl
  84+ 94CA
  85+ 94CA EB               ex de,hl
  86+ 94CB
  87+ 94CB CD 46 99         call NextScan
  88+ 94CE EB               ex de,hl
  89+ 94CF
  90+ 94CF 73               ld (hl),e
  91+ 94D0 23               inc hl
  92+ 94D1 72               ld (hl),d
  93+ 94D2 23               inc hl
  94+ 94D3
  95+ 94D3 EB               ex de,hl
  96+ 94D4
  97+ 94D4 CD 46 99         call NextScan
  98+ 94D7 EB               ex de,hl
  99+ 94D8
 100+ 94D8 73               ld (hl),e
 101+ 94D9 23               inc hl
 102+ 94DA 72               ld (hl),d
 103+ 94DB 23               inc hl
 104+ 94DC
 105+ 94DC EB               ex de,hl
 106+ 94DD
 107+ 94DD CD 46 99         call NextScan
 108+ 94E0 EB               ex de,hl
 109+ 94E1
 110+ 94E1 73               ld (hl),e
 111+ 94E2 23               inc hl
 112+ 94E3 72               ld (hl),d
 113+ 94E4 23               inc hl
 114+ 94E5
 115+ 94E5 EB               ex de,hl
 116+ 94E6
 117+ 94E6 CD 46 99         call NextScan
 118+ 94E9 EB               ex de,hl
 119+ 94EA
 120+ 94EA 73               ld (hl),e
 121+ 94EB 23               inc hl
 122+ 94EC 72               ld (hl),d
 123+ 94ED 23               inc hl
 124+ 94EE
 125+ 94EE EB               ex de,hl
 126+ 94EF
 127+ 94EF CD 46 99         call NextScan
 128+ 94F2 EB               ex de,hl
 129+ 94F3
 130+ 94F3 73               ld (hl),e
 131+ 94F4 23               inc hl
 132+ 94F5 72               ld (hl),d
 133+ 94F6 23               inc hl
 134+ 94F7
 135+ 94F7 EB               ex de,hl
 136+ 94F8
 137+ 94F8 CD 46 99         call NextScan
 138+ 94FB EB               ex de,hl
 139+ 94FC
 140+ 94FC 73               ld (hl),e
 141+ 94FD 23               inc hl
 142+ 94FE 72               ld (hl),d
 143+ 94FF 23               inc hl
 144+ 9500
 145+ 9500 EB               ex de,hl
 146+ 9501
 147+ 9501 CD 46 99         call NextScan
 148+ 9504 EB               ex de,hl
 149+ 9505
 150+ 9505 73               ld (hl),e
 151+ 9506 23               inc hl
 152+ 9507 72               ld (hl),d
 153+ 9508 23               inc hl
 154+ 9509
 155+ 9509 EB               ex de,hl
 156+ 950A
 157+ 950A CD 46 99         call NextScan
 158+ 950D EB               ex de,hl
 159+ 950E
 160+ 950E 73               ld (hl),e
 161+ 950F 23               inc hl
 162+ 9510 72               ld (hl),d
 163+ 9511 23               inc hl
 164+ 9512
 165+ 9512 EB               ex de,hl
 166+ 9513
 167+ 9513 CD 46 99         call NextScan
 168+ 9516 EB               ex de,hl
 169+ 9517
 170+ 9517 73               ld (hl),e
 171+ 9518 23               inc hl
 172+ 9519 72               ld (hl),d
 173+ 951A 23               inc hl
 174+ 951B
 175+ 951B EB               ex de,hl
 176+ 951C
 177+ 951C CD 46 99         call NextScan
 178+ 951F EB               ex de,hl
 179+ 9520
 180+ 9520 73               ld (hl),e
 181+ 9521 23               inc hl
 182+ 9522 72               ld (hl),d
 183+ 9523 23               inc hl
 184+ 9524
 185+ 9524 EB               ex de,hl
 186+ 9525
 187+ 9525 CD 46 99         call NextScan
 188+ 9528 EB               ex de,hl
 189+ 9529
 190+ 9529 73               ld (hl),e
 191+ 952A 23               inc hl
 192+ 952B 72               ld (hl),d
 193+ 952C 23               inc hl
 194+ 952D
 195+ 952D EB               ex de,hl
 196+ 952E
 197+ 952E CD 46 99         call NextScan
 198+ 9531 EB               ex de,hl
 199+ 9532
 200+ 9532 73               ld (hl),e
 201+ 9533 23               inc hl
 202+ 9534 72               ld (hl),d
 203+ 9535 23               inc hl
 204+ 9536
 205+ 9536 EB               ex de,hl
 206+ 9537
 207+ 9537 CD 46 99         call NextScan
 208+ 953A EB               ex de,hl
 209+ 953B
 210+ 953B 73               ld (hl),e
 211+ 953C 23               inc hl
 212+ 953D 72               ld (hl),d
 213+ 953E 23               inc hl
 214+ 953F
 215+ 953F              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 953F
 217+ 953F 22 23 8C         ld (Scanlines_album_SP),hl
 218+ 9542
 219+ 9542              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 9542
 221+ 9542 08               ex af,af
 222+ 9543
 223+ 9543 F5               push af
 224+ 9544 E1               pop hl
 225+ 9545
 226+ 9545 36 10            ld (hl),16
 227+ 9547
 228+ 9547 C9               ret
 229+ 9548
 230+ 9548              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 9548
 232+ 9548              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 9548
 234+ 9548 3E 57            ld a,$57
 235+ 954A 94               sub h
 236+ 954B 47               ld b,a
 237+ 954C
 238+ 954C 3E DF            ld a,$df
 239+ 954E BD               cp l
 240+ 954F 38 04            jr c,1F
 241+ 9551
 242+ 9551 3E 08            ld a,8
 243+ 9553 80               add b
 244+ 9554 47               ld b,a
 245+ 9555
 246+ 9555              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 9555              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 9555
 249+ 9555 48           1 ld c,b
 250+ 9556 0C               inc c
 251+ 9557
 252+ 9557 04               inc b
 253+ 9558 05               dec b
 254+ 9559 20 02            jr nz,3F
 255+ 955B
 256+ 955B 18 0B            jr 6F
 257+ 955D
 258+ 955D CD 46 99     3 call NextScan
 259+ 9560 EB               ex de,hl
 260+ 9561
 261+ 9561 73               ld (hl),e
 262+ 9562 23               inc hl
 263+ 9563 72               ld (hl),d
 264+ 9564 23               inc hl
 265+ 9565
 266+ 9565 EB               ex de,hl
 267+ 9566 10 F5            djnz 3B
 268+ 9568
 269+ 9568 ED 53 23 8C  6 ld (Scanlines_album_SP),de
 270+ 956C
 271+ 956C 08           5 ex af,af
 272+ 956D F5               push af
 273+ 956E E1               pop hl
 274+ 956F
 275+ 956F 71               ld (hl),c
 276+ 9570
 277+ 9570 C9               ret
 278+ 9571
# file closed: Genera_datos_de_impresion.asm
2302  9571              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 9571              ; -----------------------------------------------------------------------------
   2+ 9571              ;
   3+ 9571              ;   11/03/24
   4+ 9571              ;
   5+ 9571
   6+ 9571              Pinta_Sprites
   7+ 9571
   8+ 9571              ;    ld hl,(Scanlines_album_SP)
   9+ 9571              ;    call Extrae_address
  10+ 9571
  11+ 9571              ;    inc h
  12+ 9571              ;    dec h
  13+ 9571              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 9571
  15+ 9571 ED 73 08 8C      ld (Stack),sp
  16+ 9575
  17+ 9575 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 9576              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 9576 2C               inc l
  20+ 9577 2C               inc l
  21+ 9578
  22+ 9578 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 9579
  24+ 9579 2C               inc l
  25+ 957A F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 957B
  27+ 957B              ;   Seleccionamos rutina de impresión:
  28+ 957B
  29+ 957B 3E 10            ld a,16
  30+ 957D B8               cp b
  31+ 957E C2 7A 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9581
  33+ 9581              ;   Rutinas:
  34+ 9581
  35+ 9581              Pinta_rapido    ;   1520 t/states.
  36+ 9581
  37+ 9581 E1               pop hl
  38+ 9582
  39+ 9582 1A               ld a,(de)
  40+ 9583 AE               xor (hl)
  41+ 9584 77               ld (hl),a
  42+ 9585 2C               inc l
  43+ 9586 1C               inc e
  44+ 9587 1A               ld a,(de)
  45+ 9588 AE               xor (hl)
  46+ 9589 77               ld (hl),a
  47+ 958A 2C               inc l
  48+ 958B 1C               inc e
  49+ 958C 1A               ld a,(de)
  50+ 958D AE               xor (hl)
  51+ 958E 77               ld (hl),a
  52+ 958F 13               inc de
  53+ 9590
  54+ 9590 E1               pop hl
  55+ 9591
  56+ 9591 1A               ld a,(de)
  57+ 9592 AE               xor (hl)
  58+ 9593 77               ld (hl),a
  59+ 9594 2C               inc l
  60+ 9595 1C               inc e
  61+ 9596 1A               ld a,(de)
  62+ 9597 AE               xor (hl)
  63+ 9598 77               ld (hl),a
  64+ 9599 2C               inc l
  65+ 959A 1C               inc e
  66+ 959B 1A               ld a,(de)
  67+ 959C AE               xor (hl)
  68+ 959D 77               ld (hl),a
  69+ 959E 13               inc de
  70+ 959F
  71+ 959F E1               pop hl
  72+ 95A0
  73+ 95A0 1A               ld a,(de)
  74+ 95A1 AE               xor (hl)
  75+ 95A2 77               ld (hl),a
  76+ 95A3 2C               inc l
  77+ 95A4 1C               inc e
  78+ 95A5 1A               ld a,(de)
  79+ 95A6 AE               xor (hl)
  80+ 95A7 77               ld (hl),a
  81+ 95A8 2C               inc l
  82+ 95A9 1C               inc e
  83+ 95AA 1A               ld a,(de)
  84+ 95AB AE               xor (hl)
  85+ 95AC 77               ld (hl),a
  86+ 95AD 13               inc de
  87+ 95AE
  88+ 95AE E1               pop hl
  89+ 95AF
  90+ 95AF 1A               ld a,(de)
  91+ 95B0 AE               xor (hl)
  92+ 95B1 77               ld (hl),a
  93+ 95B2 2C               inc l
  94+ 95B3 1C               inc e
  95+ 95B4 1A               ld a,(de)
  96+ 95B5 AE               xor (hl)
  97+ 95B6 77               ld (hl),a
  98+ 95B7 2C               inc l
  99+ 95B8 1C               inc e
 100+ 95B9 1A               ld a,(de)
 101+ 95BA AE               xor (hl)
 102+ 95BB 77               ld (hl),a
 103+ 95BC 13               inc de
 104+ 95BD
 105+ 95BD E1               pop hl
 106+ 95BE
 107+ 95BE 1A               ld a,(de)
 108+ 95BF AE               xor (hl)
 109+ 95C0 77               ld (hl),a
 110+ 95C1 2C               inc l
 111+ 95C2 1C               inc e
 112+ 95C3 1A               ld a,(de)
 113+ 95C4 AE               xor (hl)
 114+ 95C5 77               ld (hl),a
 115+ 95C6 2C               inc l
 116+ 95C7 1C               inc e
 117+ 95C8 1A               ld a,(de)
 118+ 95C9 AE               xor (hl)
 119+ 95CA 77               ld (hl),a
 120+ 95CB 13               inc de
 121+ 95CC
 122+ 95CC E1               pop hl
 123+ 95CD
 124+ 95CD 1A               ld a,(de)
 125+ 95CE AE               xor (hl)
 126+ 95CF 77               ld (hl),a
 127+ 95D0 2C               inc l
 128+ 95D1 1C               inc e
 129+ 95D2 1A               ld a,(de)
 130+ 95D3 AE               xor (hl)
 131+ 95D4 77               ld (hl),a
 132+ 95D5 2C               inc l
 133+ 95D6 1C               inc e
 134+ 95D7 1A               ld a,(de)
 135+ 95D8 AE               xor (hl)
 136+ 95D9 77               ld (hl),a
 137+ 95DA 13               inc de
 138+ 95DB
 139+ 95DB E1               pop hl
 140+ 95DC
 141+ 95DC 1A               ld a,(de)
 142+ 95DD AE               xor (hl)
 143+ 95DE 77               ld (hl),a
 144+ 95DF 2C               inc l
 145+ 95E0 1C               inc e
 146+ 95E1 1A               ld a,(de)
 147+ 95E2 AE               xor (hl)
 148+ 95E3 77               ld (hl),a
 149+ 95E4 2C               inc l
 150+ 95E5 1C               inc e
 151+ 95E6 1A               ld a,(de)
 152+ 95E7 AE               xor (hl)
 153+ 95E8 77               ld (hl),a
 154+ 95E9 13               inc de
 155+ 95EA
 156+ 95EA E1               pop hl
 157+ 95EB
 158+ 95EB 1A               ld a,(de)
 159+ 95EC AE               xor (hl)
 160+ 95ED 77               ld (hl),a
 161+ 95EE 2C               inc l
 162+ 95EF 1C               inc e
 163+ 95F0 1A               ld a,(de)
 164+ 95F1 AE               xor (hl)
 165+ 95F2 77               ld (hl),a
 166+ 95F3 2C               inc l
 167+ 95F4 1C               inc e
 168+ 95F5 1A               ld a,(de)
 169+ 95F6 AE               xor (hl)
 170+ 95F7 77               ld (hl),a
 171+ 95F8 13               inc de
 172+ 95F9
 173+ 95F9 E1               pop hl
 174+ 95FA
 175+ 95FA 1A               ld a,(de)
 176+ 95FB AE               xor (hl)
 177+ 95FC 77               ld (hl),a
 178+ 95FD 2C               inc l
 179+ 95FE 1C               inc e
 180+ 95FF 1A               ld a,(de)
 181+ 9600 AE               xor (hl)
 182+ 9601 77               ld (hl),a
 183+ 9602 2C               inc l
 184+ 9603 1C               inc e
 185+ 9604 1A               ld a,(de)
 186+ 9605 AE               xor (hl)
 187+ 9606 77               ld (hl),a
 188+ 9607 13               inc de
 189+ 9608
 190+ 9608 E1               pop hl
 191+ 9609
 192+ 9609 1A               ld a,(de)
 193+ 960A AE               xor (hl)
 194+ 960B 77               ld (hl),a
 195+ 960C 2C               inc l
 196+ 960D 1C               inc e
 197+ 960E 1A               ld a,(de)
 198+ 960F AE               xor (hl)
 199+ 9610 77               ld (hl),a
 200+ 9611 2C               inc l
 201+ 9612 1C               inc e
 202+ 9613 1A               ld a,(de)
 203+ 9614 AE               xor (hl)
 204+ 9615 77               ld (hl),a
 205+ 9616 13               inc de
 206+ 9617
 207+ 9617 E1               pop hl
 208+ 9618
 209+ 9618 1A               ld a,(de)
 210+ 9619 AE               xor (hl)
 211+ 961A 77               ld (hl),a
 212+ 961B 2C               inc l
 213+ 961C 1C               inc e
 214+ 961D 1A               ld a,(de)
 215+ 961E AE               xor (hl)
 216+ 961F 77               ld (hl),a
 217+ 9620 2C               inc l
 218+ 9621 1C               inc e
 219+ 9622 1A               ld a,(de)
 220+ 9623 AE               xor (hl)
 221+ 9624 77               ld (hl),a
 222+ 9625 13               inc de
 223+ 9626
 224+ 9626 E1               pop hl
 225+ 9627
 226+ 9627 1A               ld a,(de)
 227+ 9628 AE               xor (hl)
 228+ 9629 77               ld (hl),a
 229+ 962A 2C               inc l
 230+ 962B 1C               inc e
 231+ 962C 1A               ld a,(de)
 232+ 962D AE               xor (hl)
 233+ 962E 77               ld (hl),a
 234+ 962F 2C               inc l
 235+ 9630 1C               inc e
 236+ 9631 1A               ld a,(de)
 237+ 9632 AE               xor (hl)
 238+ 9633 77               ld (hl),a
 239+ 9634 13               inc de
 240+ 9635
 241+ 9635 E1               pop hl
 242+ 9636
 243+ 9636 1A               ld a,(de)
 244+ 9637 AE               xor (hl)
 245+ 9638 77               ld (hl),a
 246+ 9639 2C               inc l
 247+ 963A 1C               inc e
 248+ 963B 1A               ld a,(de)
 249+ 963C AE               xor (hl)
 250+ 963D 77               ld (hl),a
 251+ 963E 2C               inc l
 252+ 963F 1C               inc e
 253+ 9640 1A               ld a,(de)
 254+ 9641 AE               xor (hl)
 255+ 9642 77               ld (hl),a
 256+ 9643 13               inc de
 257+ 9644
 258+ 9644 E1               pop hl
 259+ 9645
 260+ 9645 1A               ld a,(de)
 261+ 9646 AE               xor (hl)
 262+ 9647 77               ld (hl),a
 263+ 9648 2C               inc l
 264+ 9649 1C               inc e
 265+ 964A 1A               ld a,(de)
 266+ 964B AE               xor (hl)
 267+ 964C 77               ld (hl),a
 268+ 964D 2C               inc l
 269+ 964E 1C               inc e
 270+ 964F 1A               ld a,(de)
 271+ 9650 AE               xor (hl)
 272+ 9651 77               ld (hl),a
 273+ 9652 13               inc de
 274+ 9653
 275+ 9653 E1               pop hl
 276+ 9654
 277+ 9654 1A               ld a,(de)
 278+ 9655 AE               xor (hl)
 279+ 9656 77               ld (hl),a
 280+ 9657 2C               inc l
 281+ 9658 1C               inc e
 282+ 9659 1A               ld a,(de)
 283+ 965A AE               xor (hl)
 284+ 965B 77               ld (hl),a
 285+ 965C 2C               inc l
 286+ 965D 1C               inc e
 287+ 965E 1A               ld a,(de)
 288+ 965F AE               xor (hl)
 289+ 9660 77               ld (hl),a
 290+ 9661 13               inc de
 291+ 9662
 292+ 9662 E1               pop hl
 293+ 9663
 294+ 9663 1A               ld a,(de)
 295+ 9664 AE               xor (hl)
 296+ 9665 77               ld (hl),a
 297+ 9666 2C               inc l
 298+ 9667 1C               inc e
 299+ 9668 1A               ld a,(de)
 300+ 9669 AE               xor (hl)
 301+ 966A 77               ld (hl),a
 302+ 966B 2C               inc l
 303+ 966C 1C               inc e
 304+ 966D 1A               ld a,(de)
 305+ 966E AE               xor (hl)
 306+ 966F 77               ld (hl),a
 307+ 9670 13               inc de
 308+ 9671
 309+ 9671 ED 73 23 8C      ld (Scanlines_album_SP),sp
 310+ 9675 ED 7B 08 8C      ld sp,(Stack)
 311+ 9679 C9               ret
 312+ 967A
 313+ 967A              Pinta_lento
 314+ 967A
 315+ 967A E1           1 pop hl
 316+ 967B
 317+ 967B 1A               ld a,(de)
 318+ 967C AE               xor (hl)
 319+ 967D 77               ld (hl),a
 320+ 967E 2C               inc l
 321+ 967F 1C               inc e
 322+ 9680 1A               ld a,(de)
 323+ 9681 AE               xor (hl)
 324+ 9682 77               ld (hl),a
 325+ 9683 2C               inc l
 326+ 9684 1C               inc e
 327+ 9685 1A               ld a,(de)
 328+ 9686 AE               xor (hl)
 329+ 9687 77               ld (hl),a
 330+ 9688 13               inc de
 331+ 9689
 332+ 9689 10 EF            djnz 1B
 333+ 968B
 334+ 968B ED 73 23 8C      ld (Scanlines_album_SP),sp
 335+ 968F ED 7B 08 8C      ld sp,(Stack)
 336+ 9693 C9               ret
# file closed: Pinta_Sprites.asm
2303  9694              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9694              ; ******************************************************************************************************************************************************************************************
   2+ 9694              ;
   3+ 9694              ; 26/06/23
   4+ 9694              ;
   5+ 9694              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9694
   7+ 9694              Draw
   8+ 9694
   9+ 9694 CD 3A 99     	call Prepara_draw
  10+ 9697 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9698 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9699 28 05        	jr z,2F
  13+ 969B
  14+ 969B 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 969E 18 0C        	jr 1F
  16+ 96A0
  17+ 96A0 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96A3 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96A6 CD 32 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96A9              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96A9
  22+ 96A9 CD D9 9D     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96AC
  24+ 96AC 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96AF CB 6F        	bit 5,a
  26+ 96B1 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96B3
  28+ 96B3 CD C8 96     	call Comprueba_limite_horizontal
  29+ 96B6 CD 58 97     	call Comprueba_limite_vertical
  30+ 96B9
  31+ 96B9              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96B9              ; -----------------------
  33+ 96B9              ; -----------------------
  34+ 96B9              ; -----------------------
  35+ 96B9
  36+ 96B9 CD AE 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 96BC CD E5 98     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 96BF
  39+ 96BF 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 96C2 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 96C4 32 C8 8B     	ld (Ctrl_0),a
  42+ 96C7
  43+ 96C7 C9           	ret
  44+ 96C8
  45+ 96C8              ; *******************************************************************************************************************************************************************************************
  46+ 96C8              ;	21/01/23
  47+ 96C8              ;
  48+ 96C8              ; 	Comprueba_limite_horizontal.
  49+ 96C8              ;
  50+ 96C8              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 96C8              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 96C8              ;
  53+ 96C8              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 96C8              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 96C8              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 96C8              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 96C8
  58+ 96C8
  59+ 96C8
  60+ 96C8 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 96CB CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 96CD 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 96CF E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 96D1 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 96D4 18 09            jr 6F
  66+ 96D6 CB 5F        1 bit 3,a
  67+ 96D8 28 0A            jr z,2F
  68+ 96DA E6 F7            and $f7
  69+ 96DC 32 C8 8B         ld (Ctrl_0),a
  70+ 96DF CD 32 98     6 call Inicializacion
  71+ 96E2 18 5B            jr 5F
  72+ 96E4 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 96E5
  74+ 96E5              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 96E5              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 96E5
  77+ 96E5 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 96E6 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 96E9 CD 32 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 96EC 67           	ld h,a
  81+ 96ED EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 96EE CD 32 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 96F1 67           	ld h,a
  84+ 96F2 A7           	and a
  85+ 96F3 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 96F5 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 96F6 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 96F9 FE 02        	cp 2
  89+ 96FB 38 1E        	jr c,3F
  90+ 96FD 28 1C        	jr z,3F
  91+ 96FF 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9700 28 23            jr z,7F
  93+ 9702 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9704 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 9706 E1           	pop hl
  96+ 9707
  97+ 9707              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9707              ; _para indicar con E="2" en caso necesario.
  99+ 9707
 100+ 9707 E5               push hl
 101+ 9708 C5               push bc
 102+ 9709 CD 32 94     	call calcula_tercio
 103+ 970C FE 01        	cp 1
 104+ 970E 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9710 CD 40 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9713 28 26            jr z,9F
 107+ 9715 38 24            jr c,9F
 108+ 9717 1E 00        11 ld e,0
 109+ 9719 18 22            jr 8F
 110+ 971B 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 971C 28 07        	jr z, 7F
 112+ 971E 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9720 1E 00         	ld e,0
 114+ 9722 E1           	pop hl
 115+ 9723 18 04        	jr 4F
 116+ 9725 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9727 18 15            jr 10F
 118+ 9729
 119+ 9729              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9729              ; _para indicar con E="2" en caso necesario.
 121+ 9729
 122+ 9729 E5           4 push hl
 123+ 972A C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 972B CD 32 94     	call calcula_tercio
 125+ 972E FE 01        	cp 1
 126+ 9730 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9732 CD 40 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9735 28 04            jr z,9F
 129+ 9737 30 02            jr nc,9F
 130+ 9739 18 02        	jr 8F
 131+ 973B 1E 02        9 ld e,2
 132+ 973D C1           8 pop bc
 133+ 973E E1           10 pop hl
 134+ 973F C9           5 ret
 135+ 9740
 136+ 9740              ; --------------------
 137+ 9740              ;
 138+ 9740              ; 25/08/22
 139+ 9740
 140+ 9740 CD 32 94     Comprueba_centro call calcula_tercio
 141+ 9743 67               ld h,a
 142+ 9744 08           	ex af,af
 143+ 9745 FE 02        	cp 2
 144+ 9747 38 07        	jr c,1F
 145+ 9749 28 05        	jr z,1F
 146+ 974B 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 974E 18 03        	jr 2F
 148+ 9750 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9753 08           2 ex af,af
 150+ 9754 A7               and a
 151+ 9755 ED 42            sbc hl,bc
 152+ 9757 C9               ret
 153+ 9758
 154+ 9758              ; *********************************************************************************************************************************************************************************************
 155+ 9758              ;
 156+ 9758              ;   16/8/22
 157+ 9758              ;
 158+ 9758              ;	Comprueba_limite_vertical
 159+ 9758              ;
 160+ 9758              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9758              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9758              ;
 163+ 9758
 164+ 9758 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 975B 7D           	ld a,l
 166+ 975C E6 1F        	and $1F
 167+ 975E 57           	ld d,a
 168+ 975F 3A DE 8B     	ld a,(Limite_vertical)
 169+ 9762 BA           	cp d 											; Límite - Posición.
 170+ 9763 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9764 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9767 CB 47        	bit 0,a
 173+ 9769 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 976B
 175+ 976B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 976B
 177+ 976B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 976C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 976E
 180+ 976E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 976E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 976E
 183+ 976E 3A BC 8B         ld a,(Coordenada_X)
 184+ 9771 16 0F            ld d,Centro_izquierda
 185+ 9773 A7               and a
 186+ 9774 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9775 28 1E            jr z,3F
 188+ 9777 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9779              ;                                                    ; _salimos sin modificar nada.
 190+ 9779 18 0E            jr 2F
 191+ 977B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 977C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 977E
 194+ 977E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 977E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 977E
 197+ 977E 3A BC 8B         ld a,(Coordenada_X)
 198+ 9781 16 10            ld d,Centro_derecha
 199+ 9783 A7               and a
 200+ 9784 92               sub d
 201+ 9785 28 0E            jr z,3F
 202+ 9787 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9789              ;                                                    ; _salimos sin modificar nada.
 204+ 9789 CB 43        2 bit 0,e
 205+ 978B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 978D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 978E CD 22 98         call Modificaccionne
 208+ 9791 C1           	pop bc
 209+ 9792 CD 32 98         call Inicializacion
 210+ 9795 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9796
 212+ 9796              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9796
 214+ 9796 C5           4 push bc
 215+ 9797 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 979A 0A           	ld a,(bc)
 217+ 979B 3D           	dec a
 218+ 979C 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 979D 7D           	ld a,l
 220+ 979E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 979F CB 47        	bit 0,a
 222+ 97A1 28 03        	jr z,5F
 223+ 97A3 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97A4 18 2E        	jr 7F
 225+ 97A6
 226+ 97A6              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97A6
 228+ 97A6 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97A7 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97A8 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97AB CB 4F        	bit 1,a
 232+ 97AD 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97AF F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97B0
 235+ 97B0              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97B0
 237+ 97B0 1C               inc e
 238+ 97B1 1D               dec e
 239+ 97B2 20 07            jr nz,12F
 240+ 97B4 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97B5 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97B6 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97B9 18 44        13 jr 9F
 244+ 97BB CB 43        12 bit 0,e
 245+ 97BD 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 97BF              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 97BF C1           	pop bc
 248+ 97C0 18 D3        	jr 3B
 249+ 97C2 80           14 add b
 250+ 97C3 6F               ld l,a
 251+ 97C4 22 CB 8B     	ld (Posicion_actual),hl
 252+ 97C7 CD 22 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 97CA 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 97CC E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 97CE 32 C8 8B         ld (Ctrl_0),a
 256+ 97D1 F1           	pop af
 257+ 97D2 18 2B        	jr 9F
 258+ 97D4
 259+ 97D4              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 97D4
 261+ 97D4 F5           7 push af
 262+ 97D5 3A C8 8B     	ld a,(Ctrl_0)
 263+ 97D8 CB 47        	bit 0,a
 264+ 97DA 20 1D        	jr nz,8F
 265+ 97DC F1           	pop af
 266+ 97DD
 267+ 97DD              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 97DD
 269+ 97DD 1C           	inc e
 270+ 97DE 1D               dec e
 271+ 97DF 20 07            jr nz,10F
 272+ 97E1 90           	sub b
 273+ 97E2 6F               ld l,a
 274+ 97E3 22 CB 8B     	ld (Posicion_actual),hl
 275+ 97E6 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 97E8              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 97E8 CB 43        10 bit 0,e
 278+ 97EA 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 97EC              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 97EC C1           	pop bc
 281+ 97ED 18 A6        	jr 3B
 282+ 97EF 90           16 sub b
 283+ 97F0 6F               ld l,a
 284+ 97F1 22 CB 8B     	ld (Posicion_actual),hl
 285+ 97F4 CD 22 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 97F7 18 06            jr 9F
 287+ 97F9 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 97FB 32 C8 8B         ld (Ctrl_0),a
 289+ 97FE F1           	pop af
 290+ 97FF C1           9 pop bc
 291+ 9800 1E 00        	ld e,0
 292+ 9802 CD 32 98         call Inicializacion
 293+ 9805 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 9806 08           	ex af,af
 295+ 9807 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9808 18 8B            jr 3B
 297+ 980A
 298+ 980A              ; --------------------
 299+ 980A
 300+ 980A 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 980C CD 55 99     1 call PreviousScan
 302+ 980F 10 FB            djnz 1B
 303+ 9811 22 CB 8B     	ld (Posicion_actual),hl
 304+ 9814 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9815 C9           	ret
 306+ 9816
 307+ 9816              ; --------------------
 308+ 9816
 309+ 9816 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9818 CD 46 99     1 call NextScan
 311+ 981B 10 FB            djnz 1B
 312+ 981D 22 CB 8B     	ld (Posicion_actual),hl
 313+ 9820 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9821 C9           	ret
 315+ 9822
 316+ 9822              ; --------------------
 317+ 9822              ;
 318+ 9822              ;	22/01/23
 319+ 9822              ;
 320+ 9822              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9822              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9822              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9822
 324+ 9822
 325+ 9822              Modificaccionne
 326+ 9822
 327+ 9822 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 9825 FE 02        	cp 2
 329+ 9827 CC 0A 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 982A DC 0A 98         call c,Modifica_Pos_actual
 331+ 982D C8           	ret z
 332+ 982E CD 16 98         call Modifica_Pos_actual2
 333+ 9831 C9               ret
 334+ 9832
 335+ 9832              ; *************************************************************************************************************************************************************************************************
 336+ 9832              ;
 337+ 9832              ;	13/8/22
 338+ 9832              ;
 339+ 9832              ;	Inicializacion
 340+ 9832              ;
 341+ 9832              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9832              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9832              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9832              ;
 345+ 9832              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9832              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9832              ;	_ desaparece/aparece.
 348+ 9832
 349+ 9832              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9832              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9832              ;
 352+ 9832              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9832              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9832              ; 		   [E] ="0"
 355+ 9832
 356+ 9832              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9832
 358+ 9832 CD 32 94     Inicializacion call calcula_tercio
 359+ 9835 28 36        	jr z,primit
 360+ 9837 E6 02        	and 2
 361+ 9839 20 07        	jr nz,segmit
 362+ 983B 7D           	ld a,l
 363+ 983C FE 7F        	cp $7f
 364+ 983E 38 2D        	jr c,primit
 365+ 9840 28 2B        	jr z,primit
 366+ 9842 CD A8 98     segmit call column
 367+ 9845 38 13        	jr c,tercuad
 368+ 9847 3E 04        cuarcuad ld a,4
 369+ 9849 32 DA 8B     	ld (Cuad_objeto),a
 370+ 984C 21 20 48     	ld hl,$4820
 371+ 984F 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 9852 21 DE 8B     	ld hl,Limite_vertical
 373+ 9855 36 0D        	ld (hl),$0d
 374+ 9857 08           	ex af,af
 375+ 9858 18 3C        	jr 1F
 376+ 985A              tercuad
 377+ 985A 3E 03        	ld a,3
 378+ 985C 32 DA 8B     	ld (Cuad_objeto),a
 379+ 985F 21 20 48     	ld hl,$4820
 380+ 9862 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 9865 21 DE 8B     	ld hl,Limite_vertical
 382+ 9868 36 12        	ld (hl),$12
 383+ 986A 08           	ex af,af
 384+ 986B 18 29        	jr 1F
 385+ 986D CD A8 98     primit call column
 386+ 9870 38 13        	jr c, primcuad
 387+ 9872              segcuad
 388+ 9872 3E 02        	ld a,2
 389+ 9874 32 DA 8B     	ld (Cuad_objeto),a
 390+ 9877 21 C0 4F     	ld hl,$4fc0
 391+ 987A 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 987D 21 DE 8B     	ld hl,Limite_vertical
 393+ 9880 36 0D        	ld (hl),$0d
 394+ 9882 08           	ex af,af
 395+ 9883 18 11        	jr 1F
 396+ 9885              primcuad
 397+ 9885 3E 01        	ld a,1
 398+ 9887 32 DA 8B     	ld (Cuad_objeto),a
 399+ 988A 21 C0 4F     	ld hl,$4fc0
 400+ 988D 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 9890 21 DE 8B     	ld hl,Limite_vertical
 402+ 9893 36 12        	ld (hl),$12
 403+ 9895 08           	ex af,af
 404+ 9896
 405+ 9896 C5           1 push bc
 406+ 9897 E5           	push hl
 407+ 9898 D5           	push de
 408+ 9899
 409+ 9899 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 989C CD 50 94     	call Genera_coordenadas
 411+ 989F
 412+ 989F D1           	pop de
 413+ 98A0 E1           	pop hl
 414+ 98A1 C1           	pop bc
 415+ 98A2
 416+ 98A2 21 C8 8B     	ld hl,Ctrl_0
 417+ 98A5 CB EE        	set 5,(hl)
 418+ 98A7 C9           	ret
 419+ 98A8
 420+ 98A8              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98A8
 422+ 98A8              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98A8              ;
 424+ 98A8              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98A8
 426+ 98A8 7D           column ld a,l
 427+ 98A9 E6 1F        	and $1f
 428+ 98AB FE 10         	cp $10
 429+ 98AD C9            	ret
 430+ 98AE
 431+ 98AE              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98AE              ;
 433+ 98AE              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98AE              ;
 435+ 98AE              ; 14/12/22
 436+ 98AE              ;
 437+ 98AE              ;	Modifica: A y BC.
 438+ 98AE
 439+ 98AE 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98B1 E6 01        	and 1
 441+ 98B3 28 17        	jr z,1F
 442+ 98B5
 443+ 98B5              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98B5
 445+ 98B5 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98B8 47           	ld b,a
 447+ 98B9 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98BA 79           	ld a,c
 449+ 98BB 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 98BC 38 08        	jr c,2F
 451+ 98BE 47           	ld b,a
 452+ 98BF 79           	ld a,c
 453+ 98C0 90           	sub b
 454+ 98C1 32 DB 8B     	ld (Columnas),a
 455+ 98C4 18 1B        	jr 4F
 456+ 98C6 79           2 ld a,c
 457+ 98C7 32 DB 8B     	ld (Columnas),a
 458+ 98CA 18 15        	jr 4F
 459+ 98CC
 460+ 98CC              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 98CC
 462+ 98CC 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 98CF 81           	add c
 464+ 98D0 3D           	dec a
 465+ 98D1 D6 1F        	sub $1f
 466+ 98D3 38 08        	jr c,3F
 467+ 98D5 47           	ld b,a
 468+ 98D6 79           	ld a,c
 469+ 98D7 90           	sub b
 470+ 98D8 32 DB 8B     	ld (Columnas),a
 471+ 98DB 18 04        	jr 4F
 472+ 98DD 79           3 ld a,c
 473+ 98DE 32 DB 8B     	ld (Columnas),a
 474+ 98E1 D9           4 exx
 475+ 98E2 4F           	ld c,a
 476+ 98E3 D9           	exx
 477+ 98E4 C9            ret
 478+ 98E5
 479+ 98E5              ; --------------------------------------------------------------------------------------------------------------------
 480+ 98E5              ;
 481+ 98E5              ;   19/7/23
 482+ 98E5              ;
 483+ 98E5              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 98E5              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 98E5              ;
 486+ 98E5              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 98E5              ;			HL e IY Contienen (Puntero_objeto).
 488+ 98E5              ;
 489+ 98E5              ;	DESTRUYE: HL,B Y A.
 490+ 98E5
 491+ 98E5 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 98E8 FE 02        	cp 2
 493+ 98EA 38 18        	jr c,1F
 494+ 98EC 28 16        	jr z,1F
 495+ 98EE E6 01        	and 1
 496+ 98F0 28 0D        	jr z,3F
 497+ 98F2
 498+ 98F2              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 98F2
 500+ 98F2 CD 2E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 98F5
 502+ 98F5 7D           9 ld a,l
 503+ 98F6 E6 1F        	and $1f
 504+ 98F8 28 2A        	jr z,7F
 505+ 98FA 2B           	dec hl
 506+ 98FB 10 F8        	djnz 9B
 507+ 98FD 18 25        	jr 7F
 508+ 98FF
 509+ 98FF              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 98FF
 511+ 98FF 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 9902 18 20        	jr 7F
 513+ 9904
 514+ 9904 28 14        1 jr z,2F
 515+ 9906
 516+ 9906              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 9906
 518+ 9906 CD 2E 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9909
 520+ 9909 7D           4 ld a,l
 521+ 990A E6 1F        	and $1f
 522+ 990C 28 03        	jr z,6F
 523+ 990E 2B           	dec hl
 524+ 990F 10 F8        	djnz 4B
 525+ 9911 06 0F        6 ld b,15
 526+ 9913 CD 55 99     5 call PreviousScan
 527+ 9916 10 FB        	djnz 5B
 528+ 9918 18 0A        	jr 7F
 529+ 991A
 530+ 991A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 991A
 532+ 991A CD 2E 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 991D 06 0F        	ld b,15
 534+ 991F CD 55 99     8 call PreviousScan
 535+ 9922 10 FB        	djnz 8B
 536+ 9924
 537+ 9924 E5           7 push hl
 538+ 9925 DD E1        	pop ix
 539+ 9927
 540+ 9927 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 992A E5           	push hl
 542+ 992B FD E1        	pop iy
 543+ 992D
 544+ 992D C9           	ret
 545+ 992E
 546+ 992E              ; --------------------------------------------------------------------------------------------------------------------
 547+ 992E              ;
 548+ 992E              ;	2/1/23
 549+ 992E              ;
 550+ 992E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 992E              ;
 552+ 992E              ;	Tras esta rutina tenemos:
 553+ 992E              ;
 554+ 992E              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 992E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 992E              ;
 557+ 992E              ;	DESTRUYE!!!!! HL,B y A.
 558+ 992E
 559+ 992E 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9931 3A DB 8B     	ld a,(Columnas)
 561+ 9934 3D           	dec a
 562+ 9935 20 01        	jr nz,1F
 563+ 9937 3C           	inc a
 564+ 9938 47           1 ld b,a
 565+ 9939 C9           	ret
 566+ 993A
 567+ 993A              ; --------------------------------------------------------------------------------------------------------------------
 568+ 993A              ;
 569+ 993A              ;	Prepara_draw
 570+ 993A              ;
 571+ 993A              ;	Es una rutina de carga.
 572+ 993A              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 993A              ;
 574+ 993A              ;	FUNCIONAMIENTO:
 575+ 993A              ;
 576+ 993A              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 993A              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 993A              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 993A              ;
 580+ 993A              ;	DESTRUYE:
 581+ 993A              ;
 582+ 993A              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 993A
 584+ 993A 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 993D 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 993E 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 993F 4E           	ld c,(hl)
 588+ 9940 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 9943 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9945 C9           	ret
 591+ 9946
 592+ 9946              ;----------------------------------------------------------------------------------------------------------------
 593+ 9946              ;
 594+ 9946              ;	5/08/22
 595+ 9946              ;
 596+ 9946              ;   NextScan.
 597+ 9946              ;
 598+ 9946              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 9946              ;
 600+ 9946              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 9946              ;
 602+ 9946              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 9946              ;
 604+ 9946              ;       DESTRUIDOS: AF y HL !!!
 605+ 9946              ;
 606+ 9946              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 9946              ;
 608+ 9946
 609+ 9946 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 9947 7C               ld a,h
 611+ 9948 E6 07            and 7
 612+ 994A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 994B
 614+ 994B 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 994C C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 994E 6F               ld l,a
 617+ 994F D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9950
 619+ 9950 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9951 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9953 67               ld h,a
 622+ 9954 C9               ret
 623+ 9955
 624+ 9955              ;----------------------------------------------------------------------------------------------------------------
 625+ 9955              ;
 626+ 9955              ;	5/08/22
 627+ 9955              ;
 628+ 9955              ;   PreviousScan.
 629+ 9955              ;
 630+ 9955              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9955              ;
 632+ 9955              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9955              ;
 634+ 9955              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9955              ;
 636+ 9955              ;       DESTRUIDOS: AF y HL !!!
 637+ 9955              ;
 638+ 9955              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9955              ;
 640+ 9955
 641+ 9955 7C           PreviousScan ld a,h
 642+ 9956 25               dec h               ; Dec H.
 643+ 9957 E6 07            and 7
 644+ 9959 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 995A
 646+ 995A 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 995B D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 995D 6F               ld l,a
 649+ 995E D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 995F
 651+ 995F 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9960 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 9962 67               ld h,a
 654+ 9963 C9               ret
 655+ 9964
 656+ 9964
 657+ 9964
 658+ 9964
 659+ 9964
 660+ 9964
 661+ 9964
 662+ 9964
 663+ 9964
 664+ 9964
 665+ 9964
 666+ 9964
# file closed: Draw_XOR.asm
2304  9964              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9964
   2+ 9964              ; ******************************************************************************************************************************************************************************************
   3+ 9964              ;
   4+ 9964              ;   20/05/23
   5+ 9964              ;
   6+ 9964              ;	Recompone_posicion_inicio
   7+ 9964              ;
   8+ 9964              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9964              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9964              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9964              ;	_ a una u otra rutina.
  12+ 9964
  13+ 9964              Recompone_posicion_inicio
  14+ 9964
  15+ 9964 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 9967 7D           	ld a,l
  17+ 9968 E6 1F        	and $1f
  18+ 996A 28 16        	jr z,1F
  19+ 996C
  20+ 996C FE 1F        	cp $1f
  21+ 996E 28 0D        	jr z,3F
  22+ 9970
  23+ 9970 21 C7 8B     	ld hl,Ctrl_2
  24+ 9973 CB C6        	set 0,(hl)
  25+ 9975 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 9978 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 997B 18 08        	jr 2F
  28+ 997D
  29+ 997D CD 2B 9B     3 call Mov_left
  30+ 9980 18 03        	jr 2F
  31+ 9982
  32+ 9982 CD 08 9A     1 call Mov_right
  33+ 9985 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9988 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 998B C9           	ret
  36+ 998C
  37+ 998C              ; ******************************************************************************************************************************************************************************************
  38+ 998C              ;
  39+ 998C              ;   27/05/23
  40+ 998C              ;
  41+ 998C              ;	Mov_down
  42+ 998C              ;
  43+ 998C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 998C              ;
  45+ 998C              ;
  46+ 998C              Mov_down
  47+ 998C
  48+ 998C CD F6 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 998F              ;																	; _ repone (Puntero_objeto).
  50+ 998F 21 C8 8B     	ld hl,Ctrl_0
  51+ 9992 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9994              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9994              ; 																	; _ en el caso de que no lo haya.
  54+ 9994 3A E3 8B     	ld a,(Vel_down)
  55+ 9997 47           	ld b,a
  56+ 9998 2A CB 8B         ld hl,(Posicion_actual)
  57+ 999B CD 32 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 999E E6 02        	and 2
  59+ 99A0 28 17        	jr z,1F
  60+ 99A2
  61+ 99A2              ; Nos encontramos en el último tercio de pantalla.
  62+ 99A2              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99A2
  64+ 99A2 7C           	ld a,h
  65+ 99A3 FE 57        	cp $57
  66+ 99A5 20 12        	jr nz,1F
  67+ 99A7
  68+ 99A7 7D           	ld a,l
  69+ 99A8 C6 20        	add $20
  70+ 99AA 30 0D        	jr nc,1F
  71+ 99AC
  72+ 99AC              ; ------------------------------
  73+ 99AC              ;
  74+ 99AC              ;	12/01/24
  75+ 99AC
  76+ 99AC              ;	call Reaparece_arriba
  77+ 99AC CD B8 9C     	call Reinicio
  78+ 99AF
  79+ 99AF              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99AF
  81+ 99AF 3A 29 8C     	ld a,(Ctrl_3)
  82+ 99B2 CB CF        	set 1,a
  83+ 99B4 32 29 8C     	ld (Ctrl_3),a
  84+ 99B7
  85+ 99B7 18 08        	jr 3F
  86+ 99B9              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99B9              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99B9              ; ------------------------------
  89+ 99B9
  90+ 99B9 CD 46 99     1 call NextScan
  91+ 99BC 22 CB 8B     	ld (Posicion_actual),hl
  92+ 99BF 10 DA            djnz 2B
  93+ 99C1 CD 50 94     3 call Genera_coordenadas
  94+ 99C4 C9           	ret
  95+ 99C5
  96+ 99C5              ; ******************************************************************************************************************************************************************************************
  97+ 99C5              ;
  98+ 99C5              ;   27/05/23
  99+ 99C5              ;
 100+ 99C5              ;	Mov_up
 101+ 99C5              ;
 102+ 99C5              ; 	Mueve el Sprite hacia arriba.
 103+ 99C5              ;
 104+ 99C5              ;
 105+ 99C5              Mov_up
 106+ 99C5
 107+ 99C5 CD F6 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 99C8              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 99C8 21 C8 8B     	ld hl,Ctrl_0
 110+ 99CB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 99CD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 99CD              ; 																		; _ en el caso de que no lo haya.
 113+ 99CD 3A E2 8B     	ld a,(Vel_up)
 114+ 99D0 47           	ld b,a
 115+ 99D1 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 99D4 CD 32 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 99D7 A7           	and a
 118+ 99D8 20 10        	jr nz,1F
 119+ 99DA
 120+ 99DA              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 99DA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 99DA
 123+ 99DA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 99DB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 99DD 20 0B            jr nz,1F
 126+ 99DF 7D               ld a,l
 127+ 99E0 D6 20            sub $20
 128+ 99E2 30 06            jr nc,1F
 129+ 99E4 25               dec h
 130+ 99E5
 131+ 99E5              ; -----------------------------
 132+ 99E5 CD 99 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 99E8              ;	call Reinicio
 134+ 99E8              ; -----------------------------
 135+ 99E8
 136+ 99E8 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 99EA CD 55 99     1 call PreviousScan
 138+ 99ED 22 CB 8B     	ld (Posicion_actual),hl
 139+ 99F0 10 E2            djnz 3B
 140+ 99F2 CD 50 94     2 call Genera_coordenadas
 141+ 99F5 C9           	ret
 142+ 99F6
 143+ 99F6              ; -----------------------------
 144+ 99F6              ;
 145+ 99F6              ;	27/5/23
 146+ 99F6              ;
 147+ 99F6              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 99F6              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 99F6              ;
 150+ 99F6              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 99F6              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 99F6              ;
 153+ 99F6              ;	Modifica: A y (Puntero_objeto).
 154+ 99F6
 155+ 99F6 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 99F9 CB 47        	bit 0,a
 157+ 99FB C8           	ret z
 158+ 99FC CB 87        	res 0,a
 159+ 99FE 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A01 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A04 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A07 C9           	ret
 163+ 9A08
 164+ 9A08              ; ******************************************************************************************************************************************************************************************
 165+ 9A08              ;
 166+ 9A08              ;	19/10/22
 167+ 9A08              ;
 168+ 9A08              ;	Mov_right.
 169+ 9A08              ;
 170+ 9A08              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A08              ;
 172+ 9A08
 173+ 9A08 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A0B CB 77        	bit 6,a
 175+ 9A0D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A0F
 177+ 9A0F CD 47 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A12 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A13
 180+ 9A13 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A16 CB E6        	set 4,(hl)
 182+ 9A18 18 52        	jr 8F
 183+ 9A1A
 184+ 9A1A 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A1D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A1F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A1F              ; 																	; _ en el caso de que no lo haya.
 188+ 9A1F 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A22 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A24 20 46        	jr nz,8F
 191+ 9A26
 192+ 9A26 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A29 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A2A 28 40        	jr z,8F
 195+ 9A2C
 196+ 9A2C              ; ---------- ---------- ----------
 197+ 9A2C              ;
 198+ 9A2C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A2C
 200+ 9A2C 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A2F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A31 28 11        	jr z,1F
 203+ 9A33 38 06        	jr c,6F
 204+ 9A35 FE 04        	cp 4
 205+ 9A37 28 14        	jr z,7F
 206+ 9A39 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A3B
 208+ 9A3B              ; ---------- ---------- ----------
 209+ 9A3B              ;
 210+ 9A3B              ; Perfiles de velocidad
 211+ 9A3B              ;
 212+ 9A3B
 213+ 9A3B 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A3E FE FE        	cp $fe
 215+ 9A40 20 2A        	jr nz,8F
 216+ 9A42 18 10        	jr 3F
 217+ 9A44 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A47 FE FD        	cp $fd
 219+ 9A49 20 21        	jr nz,8F
 220+ 9A4B 18 07        	jr 3F
 221+ 9A4D 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A50 FE FB        	cp $fb
 223+ 9A52 20 18        	jr nz,8F
 224+ 9A54
 225+ 9A54              ; ---------- ---------- ----------
 226+ 9A54
 227+ 9A54              3
 228+ 9A54 CD 87 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A57              ;	call Reinicio
 230+ 9A57
 231+ 9A57              ; ---------- ---------- ----------
 232+ 9A57              ;
 233+ 9A57              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A57
 235+ 9A57 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A59 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A5A CD 73 9A     	call DESPLZ_DER
 238+ 9A5D C1           	pop bc
 239+ 9A5E 10 F9        	djnz 5B
 240+ 9A60 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9A63 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9A64 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9A67 CD 50 94     	call Genera_coordenadas
 244+ 9A6A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9A6C
 246+ 9A6C              ; ---------- ---------- ----------
 247+ 9A6C
 248+ 9A6C 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9A6F CD 73 9A     	call DESPLZ_DER
 250+ 9A72 C9           2 ret
 251+ 9A73
 252+ 9A73              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9A73              ;
 254+ 9A73              ;	22/9/22
 255+ 9A73              ;
 256+ 9A73
 257+ 9A73 CD 82 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9A76 CD CE 9A         call modifica_parametros_1er_DESPLZ_2
 259+ 9A79 CD F7 9A         call Ciclo_completo
 260+ 9A7C 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9A7F CB FE        	set 7,(hl)
 262+ 9A81 C9           	ret
 263+ 9A82
 264+ 9A82              ; ******************************************************************************************************************************************************************************************
 265+ 9A82              ;	15/02/23
 266+ 9A82              ;
 267+ 9A82
 268+ 9A82 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9A85 47           	ld b,a
 270+ 9A86 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9A89 23           1 inc hl
 272+ 9A8A 23           	inc hl
 273+ 9A8B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9A8D 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9A90 CD 33 90     	call Extrae_address
 276+ 9A93 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9A96
 278+ 9A96              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9A96
 280+ 9A96              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9A96              ; Cuántos movimientos hemos hecho ??
 282+ 9A96              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9A96
 284+ 9A96 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9A99 EB           	ex de,hl
 286+ 9A9A A7           	and a
 287+ 9A9B ED 52        	sbc hl,de
 288+ 9A9D CB 3D        	srl l
 289+ 9A9F 3E 08        6 ld a,8
 290+ 9AA1 95           	sub l
 291+ 9AA2 30 1E        	jr nc,3F
 292+ 9AA4
 293+ 9AA4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AA4              ; B="0".
 295+ 9AA4
 296+ 9AA4 04           4 inc b
 297+ 9AA5 3C           	inc a
 298+ 9AA6 20 FC        	jr nz,4B
 299+ 9AA8 78           	ld a,b
 300+ 9AA9 08           	ex af,af
 301+ 9AAA 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AAD 23           5 inc hl
 303+ 9AAE 23           	inc hl
 304+ 9AAF 10 FC        	djnz 5B
 305+ 9AB1 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AB4 CD 33 90     	call Extrae_address
 307+ 9AB7 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9ABA
 309+ 9ABA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9ABA              ; _(Posicion_actual).
 311+ 9ABA
 312+ 9ABA 21 CB 8B     	ld hl,Posicion_actual
 313+ 9ABD 34           	inc (hl)
 314+ 9ABE 08               ex af,af
 315+ 9ABF 6F           	ld l,a
 316+ 9AC0 18 DD        	jr 6B
 317+ 9AC2
 318+ 9AC2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9AC2
 320+ 9AC2 47           3 ld b,a
 321+ 9AC3 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9AC6 23           2 inc hl
 323+ 9AC7 23           	inc hl
 324+ 9AC8 10 FC        	djnz 2B
 325+ 9ACA 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9ACD C9           8 ret
 327+ 9ACE
 328+ 9ACE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9ACE              ;
 330+ 9ACE              ;	24/7/22
 331+ 9ACE              ;
 332+ 9ACE              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9ACE              ;
 334+ 9ACE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9ACE              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9ACE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9ACE
 338+ 9ACE 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9AD1 A7           	and a
 340+ 9AD2 20 1F        	jr nz,1F
 341+ 9AD4 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9AD6 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9AD9
 344+ 9AD9 21 CA 8B     	ld hl,Columns
 345+ 9ADC 34           	inc (hl)
 346+ 9ADD 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9AE0 E6 01        	and 1
 348+ 9AE2 28 0F        	jr z,1F
 349+ 9AE4 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9AE7 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9AE8 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9AEB CD 50 94     	call Genera_coordenadas
 353+ 9AEE CD 53 9C     	call Inc_CTRL_DESPLZ
 354+ 9AF1 18 03        	jr 2F
 355+ 9AF3 CD 53 9C     1 call Inc_CTRL_DESPLZ
 356+ 9AF6 C9           2 ret
 357+ 9AF7
 358+ 9AF7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9AF7              ;
 360+ 9AF7              ;	24/7/22
 361+ 9AF7              ;
 362+ 9AF7              ;	Ciclo_completo.
 363+ 9AF7              ;
 364+ 9AF7              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9AF7              ;
 366+ 9AF7              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9AF7              ; 	Decrementamos (Columns).
 368+ 9AF7              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9AF7              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9AF7
 371+ 9AF7
 372+ 9AF7 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9AFA FE FF        	cp $ff
 374+ 9AFC 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9AFE E6 F0        	and $f0
 376+ 9B00 20 28        	jr nz,3F
 377+ 9B02
 378+ 9B02              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B02
 380+ 9B02 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B05 47           	ld b,a
 382+ 9B06 3E F8        	ld a,$f8
 383+ 9B08 80           	add b
 384+ 9B09 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B0C 18 1C        	jr 3F
 386+ 9B0E 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B11 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B12 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B13 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B16 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B19 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B1B 20 0A        	jr nz,2F
 393+ 9B1D 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B20 23           	inc hl
 395+ 9B21 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B24 CD 50 94     	call Genera_coordenadas
 397+ 9B27
 398+ 9B27              ; Inicia el puntero de Sprite.
 399+ 9B27
 400+ 9B27 CD 48 90     2 call Inicia_puntero_objeto_der
 401+ 9B2A C9           3 ret
 402+ 9B2B
 403+ 9B2B              ; ******************************************************************************************************************************************************************************************
 404+ 9B2B              ;
 405+ 9B2B              ;	15/02/23
 406+ 9B2B              ;
 407+ 9B2B              ;	Mov_left.
 408+ 9B2B              ;
 409+ 9B2B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B2B              ;
 411+ 9B2B              Mov_left
 412+ 9B2B
 413+ 9B2B 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B2E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B30              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B30              ; 																	; _ en el caso de que no lo haya.
 417+ 9B30 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B33 CB 77        	bit 6,a
 419+ 9B35 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B37
 421+ 9B37 CD 4D 9C     	call Stop_Amadeus_left
 422+ 9B3A C8           	ret z
 423+ 9B3B 20 4A        	jr nz,8F
 424+ 9B3D
 425+ 9B3D 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B40 A7           	and a
 427+ 9B41 20 44        	jr nz,8F
 428+ 9B43
 429+ 9B43 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B46 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B47 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B49
 433+ 9B49              ; ---------- ---------- ----------
 434+ 9B49
 435+ 9B49 3A E0 8B     	ld a,(Vel_left)
 436+ 9B4C FE 02        	cp 2
 437+ 9B4E 28 0F        	jr z,1F
 438+ 9B50 38 04        	jr c,6F
 439+ 9B52 FE 04        	cp 4
 440+ 9B54 28 12        	jr z,7F
 441+ 9B56
 442+ 9B56              ; ---------- ---------- ----------
 443+ 9B56
 444+ 9B56 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B59 FE F8        	cp $f8
 446+ 9B5B 20 2A        	jr nz,8F
 447+ 9B5D 18 10        	jr 4F
 448+ 9B5F 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9B62 FE F9        	cp $f9
 450+ 9B64 20 21        	jr nz,8F
 451+ 9B66 18 07        	jr 4F
 452+ 9B68 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9B6B FE FB        	cp $fb
 454+ 9B6D 20 18        	jr nz,8F
 455+ 9B6F
 456+ 9B6F              ; ---------- ---------- ----------
 457+ 9B6F
 458+ 9B6F              4
 459+ 9B6F CD 75 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9B72              ;	call Reinicio
 461+ 9B72
 462+ 9B72              ; ---------- ---------- ----------
 463+ 9B72
 464+ 9B72 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9B74 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9B75
 467+ 9B75              ;	ld hl,(Indice_Sprite_izq)
 468+ 9B75              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9B75
 470+ 9B75 CD 8E 9B     	call DESPLZ_IZQ
 471+ 9B78 C1           	pop bc
 472+ 9B79 10 F9        	djnz 5B
 473+ 9B7B 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9B7E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9B7F 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9B82 CD 50 94     	call Genera_coordenadas
 477+ 9B85 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9B87
 479+ 9B87              ; ---------- ---------- ----------
 480+ 9B87
 481+ 9B87              ; Movemos, no hay recolocación.
 482+ 9B87
 483+ 9B87 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9B8A CD 8E 9B     	call DESPLZ_IZQ
 485+ 9B8D C9           2 ret
 486+ 9B8E
 487+ 9B8E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9B8E              ;
 489+ 9B8E              ;	22/9/22
 490+ 9B8E
 491+ 9B8E              DESPLZ_IZQ
 492+ 9B8E
 493+ 9B8E CD 9D 9B     	call Desplaza_izquierda
 494+ 9B91 CD E9 9B         call modifica_parametros_1er_DESPLZ
 495+ 9B94 CD 11 9C     	call Ciclo_completo_2
 496+ 9B97 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9B9A CB BE        	res 7,(hl)
 498+ 9B9C C9           	ret
 499+ 9B9D
 500+ 9B9D              Desplaza_izquierda
 501+ 9B9D
 502+ 9B9D 3A E0 8B     	ld a,(Vel_left)
 503+ 9BA0 47           	ld b,a
 504+ 9BA1 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BA4 23           1 inc hl
 506+ 9BA5 23           	inc hl
 507+ 9BA6 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BA8 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BAB CD 33 90     	call Extrae_address
 510+ 9BAE 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BB1
 512+ 9BB1              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BB1
 514+ 9BB1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BB1              ; Cuántos movimientos hemos hecho ??
 516+ 9BB1              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BB1
 518+ 9BB1 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BB4 EB           	ex de,hl
 520+ 9BB5 A7           	and a
 521+ 9BB6 ED 52        	sbc hl,de
 522+ 9BB8 CB 3D        	srl l
 523+ 9BBA 3E 08        6 ld a,8
 524+ 9BBC 95           	sub l
 525+ 9BBD 30 1E        	jr nc,3F
 526+ 9BBF
 527+ 9BBF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9BBF              ; B="0".
 529+ 9BBF
 530+ 9BBF 04           4 inc b
 531+ 9BC0 3C           	inc a
 532+ 9BC1 20 FC        	jr nz,4B
 533+ 9BC3 78           	ld a,b
 534+ 9BC4 08           	ex af,af
 535+ 9BC5 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9BC8 23           5 inc hl
 537+ 9BC9 23           	inc hl
 538+ 9BCA 10 FC        	djnz 5B
 539+ 9BCC 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9BCF CD 33 90     	call Extrae_address
 541+ 9BD2 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9BD5
 543+ 9BD5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9BD5              ; _(Posicion_actual).
 545+ 9BD5
 546+ 9BD5 21 CB 8B     	ld hl,Posicion_actual
 547+ 9BD8 35           	dec (hl)
 548+ 9BD9 08           	ex af,af
 549+ 9BDA 6F           	ld l,a
 550+ 9BDB 18 DD        	jr 6B
 551+ 9BDD
 552+ 9BDD              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9BDD
 554+ 9BDD 47           3 ld b,a
 555+ 9BDE 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9BE1 23           2 inc hl
 557+ 9BE2 23           	inc hl
 558+ 9BE3 10 FC        	djnz 2B
 559+ 9BE5 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9BE8 C9           8 ret
 561+ 9BE9
 562+ 9BE9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9BE9              ;
 564+ 9BE9              ;	modifica_parametros_1er_DESPLZ
 565+ 9BE9              ;
 566+ 9BE9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9BE9              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9BE9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9BE9
 570+ 9BE9 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9BEC A7           	and a
 572+ 9BED 20 1E        	jr nz,1F
 573+ 9BEF 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9BF0 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9BF3 21 CA 8B     	ld hl,Columns
 576+ 9BF6 34           	inc (hl)
 577+ 9BF7 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9BFA E6 01        	and 1
 579+ 9BFC 20 0F        	jr nz,1F
 580+ 9BFE 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C01 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C02 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C05 CD 50 94     	call Genera_coordenadas
 584+ 9C08 CD 64 9C     	call Dec_CTRL_DESPLZ
 585+ 9C0B 18 03        	jr 2F
 586+ 9C0D CD 64 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C10 C9           2 ret
 588+ 9C11
 589+ 9C11              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C11
 591+ 9C11 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C14 FE F7        	cp $f7
 593+ 9C16 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C18 30 2C        	jr nc,3F
 595+ 9C1A
 596+ 9C1A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C1A
 598+ 9C1A 06 00        	ld b,0
 599+ 9C1C 04           4 inc b
 600+ 9C1D 3C           	inc a
 601+ 9C1E FE F7        	cp $f7
 602+ 9C20 20 FA        	jr nz,4B
 603+ 9C22 3E FF        	ld a,$ff
 604+ 9C24 90           	sub b
 605+ 9C25 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C28 18 1C        	jr 3F
 607+ 9C2A
 608+ 9C2A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C2A
 610+ 9C2A 21 CA 8B     1 ld hl,Columns
 611+ 9C2D 35           	dec (hl)
 612+ 9C2E AF           	xor a
 613+ 9C2F 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C32 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C35 E6 01        	and 1
 616+ 9C37 28 0A        	jr z,2F
 617+ 9C39 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C3C 2B           	dec hl
 619+ 9C3D 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C40 CD 50 94     	call Genera_coordenadas
 621+ 9C43
 622+ 9C43              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C43
 624+ 9C43 CD 5B 90     2 call Inicia_puntero_objeto_izq
 625+ 9C46 C9           3 ret
 626+ 9C47
 627+ 9C47              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C47              ;
 629+ 9C47              ;	19/10/22
 630+ 9C47              ;
 631+ 9C47              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C47              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C47
 634+ 9C47 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C4A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C4C C9           	ret
 637+ 9C4D
 638+ 9C4D              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C4D              ;
 640+ 9C4D              ;	19/10/22
 641+ 9C4D              ;
 642+ 9C4D              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C4D              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C4D
 645+ 9C4D 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C50 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C52 C9           	ret
 648+ 9C53
 649+ 9C53              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C53              ;
 651+ 9C53              ;	24/7/22
 652+ 9C53              ;
 653+ 9C53              ;	Inc_CTRL_DESPLZ
 654+ 9C53              ;
 655+ 9C53              ;
 656+ 9C53              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C53
 658+ 9C53 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C56 3A E1 8B     	ld a,(Vel_right)
 660+ 9C59 A7           	and a
 661+ 9C5A 28 06        	jr z,1F
 662+ 9C5C 47           	ld b,a
 663+ 9C5D 34           3 inc (hl)
 664+ 9C5E 10 FD        	djnz 3B
 665+ 9C60 18 01        	jr 2F
 666+ 9C62 34           1 inc (hl)
 667+ 9C63 C9           2 ret
 668+ 9C64
 669+ 9C64              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9C64              ;
 671+ 9C64              ;	5/2/23
 672+ 9C64              ;
 673+ 9C64              ;	Dec_CTRL_DESPLZ
 674+ 9C64              ;
 675+ 9C64              ;
 676+ 9C64              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9C64
 678+ 9C64 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9C67 3A E0 8B     	ld a,(Vel_left)
 680+ 9C6A A7           	and a
 681+ 9C6B 28 06        	jr z,1F
 682+ 9C6D 47           	ld b,a
 683+ 9C6E 35           3 dec (hl)
 684+ 9C6F 10 FD        	djnz 3B
 685+ 9C71 18 01        	jr 2F
 686+ 9C73 35           1 dec (hl)
 687+ 9C74 C9           2 ret
 688+ 9C75
 689+ 9C75              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9C75
 691+ 9C75 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9C78 01 1F 00     	ld bc,31
 693+ 9C7B A7           	and a
 694+ 9C7C ED 4A        	adc hl,bc
 695+ 9C7E 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9C81 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9C84 CB C6        	set 0,(hl)
 698+ 9C86 C9           	ret
 699+ 9C87
 700+ 9C87              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9C87
 702+ 9C87 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9C8A 01 1F 00     	ld bc,31
 704+ 9C8D A7           	and a
 705+ 9C8E ED 42        	sbc hl,bc
 706+ 9C90 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9C93 21 C8 8B     	ld hl,Ctrl_0
 708+ 9C96 CB CE        	set 1,(hl)
 709+ 9C98 C9           	ret
 710+ 9C99
 711+ 9C99              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9C99
 713+ 9C99 24           Reaparece_abajo inc h
 714+ 9C9A 01 E0 17     	ld bc,$17e0
 715+ 9C9D A7           	and a
 716+ 9C9E ED 4A        	adc hl,bc
 717+ 9CA0 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CA3 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CA6 CB D6        	set 2,(hl)
 720+ 9CA8 C9           	ret
 721+ 9CA9
 722+ 9CA9              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CA9
 724+ 9CA9 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CAC A7           	and a
 726+ 9CAD ED 42        	sbc hl,bc
 727+ 9CAF 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CB2 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CB5 CB DE        	set 3,(hl)
 730+ 9CB7 C9           	ret
 731+ 9CB8
 732+ 9CB8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CB8              ;
 734+ 9CB8              ;	15/07/23
 735+ 9CB8
 736+ 9CB8              Reinicio
 737+ 9CB8
 738+ 9CB8              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CB8
 740+ 9CB8 AF           	xor a
 741+ 9CB9 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9CBC CD DA 9C     	call Limpia_contenido_hl
 743+ 9CBF
 744+ 9CBF 21 CB 8B     	ld hl,Posicion_actual
 745+ 9CC2 CD DA 9C     	call Limpia_contenido_hl
 746+ 9CC5
 747+ 9CC5 CD 32 92     	call Inicializa_Puntero_indice_mov
 748+ 9CC8 CD D9 9D     	call Inicia_Puntero_mov
 749+ 9CCB
 750+ 9CCB 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9CCE 06 05        	ld b,5
 752+ 9CD0 77           1 ld (hl),a
 753+ 9CD1 23           	inc hl
 754+ 9CD2 10 FC        	djnz 1B
 755+ 9CD4
 756+ 9CD4 21 C7 8B     	ld hl,Ctrl_2
 757+ 9CD7 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9CD9
 759+ 9CD9 C9           	ret
 760+ 9CDA
 761+ 9CDA 77           Limpia_contenido_hl	ld (hl),a
 762+ 9CDB 23           	inc hl
 763+ 9CDC 77           	ld (hl),a
 764+ 9CDD C9           	ret
 765+ 9CDE
 766+ 9CDE              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9CDE              ;
 768+ 9CDE              ;	18/6/24
 769+ 9CDE              ;
 770+ 9CDE
 771+ 9CDE              Amadeus_a_izquierda
 772+ 9CDE
 773+ 9CDE              ;	Actualiza contador de movimientos.
 774+ 9CDE
 775+ 9CDE 21 79 89     	ld hl,Comm_Amadeus
 776+ 9CE1 35           	dec (hl)
 777+ 9CE2 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9CE4
 779+ 9CE4 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9CE7 2B           	dec hl
 781+ 9CE8 2B           	dec hl
 782+ 9CE9 2B           	dec hl
 783+ 9CEA 2B           	dec hl
 784+ 9CEB 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9CEE
 786+ 9CEE 21 29 8C     	ld hl,Ctrl_3
 787+ 9CF1 CB EE        	set 5,(hl)
 788+ 9CF3
 789+ 9CF3 C9           	ret
 790+ 9CF4
 791+ 9CF4 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9CF5 C9           	ret
 793+ 9CF6
 794+ 9CF6
 795+ 9CF6              Amadeus_a_derecha
 796+ 9CF6
 797+ 9CF6              ;	Actualiza contador de movimientos.
 798+ 9CF6
 799+ 9CF6 21 79 89     	ld hl,Comm_Amadeus
 800+ 9CF9 34           	inc (hl)
 801+ 9CFA 3E 7A        	ld a,$7a
 802+ 9CFC BE           	cp (hl)
 803+ 9CFD 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9CFF
 805+ 9CFF 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D02 23           	inc hl
 807+ 9D03 23           	inc hl
 808+ 9D04 23           	inc hl
 809+ 9D05 23           	inc hl
 810+ 9D06 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D09
 812+ 9D09 21 29 8C     	ld hl,Ctrl_3
 813+ 9D0C CB EE        	set 5,(hl)
 814+ 9D0E C9           	ret
 815+ 9D0F
 816+ 9D0F 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D10 C9           	ret
# file closed: Direcciones.asm
2305  9D11              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D11              ; ----- ----- ----- ----- -----
   2+ 9D11              ;
   3+ 9D11              ;   28/12/23
   4+ 9D11
   5+ 9D11              Movimiento
   6+ 9D11
   7+ 9D11              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D11
   9+ 9D11 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D14 CB 57            bit 2,a
  11+ 9D16 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D18
  13+ 9D18 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D1B 7E               ld a,(hl)
  15+ 9D1C
  16+ 9D1C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D1C
  18+ 9D1C              Inicia_desplazamiento.
  19+ 9D1C
  20+ 9D1C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D1C
  22+ 9D1C CD 0F 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D1F
  24+ 9D1F              ; Iniciamos (Repetimos_mov).
  25+ 9D1F
  26+ 9D1F 7E               ld a,(hl)
  27+ 9D20 E6 0F            and $0f
  28+ 9D22 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D25 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D28
  31+ 9D28              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D28
  33+ 9D28 23               inc hl
  34+ 9D29 7E               ld a,(hl)
  35+ 9D2A 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D2D 2B               dec hl
  37+ 9D2E
  38+ 9D2E 21 C7 8B         ld hl,Ctrl_2
  39+ 9D31 CB D6            set 2,(hl)
  40+ 9D33
  41+ 9D33              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D33              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D33
  44+ 9D33              Desplazamiento_iniciado
  45+ 9D33
  46+ 9D33 CD E3 9D         call Aplica_desplazamiento
  47+ 9D36
  48+ 9D36              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D36
  50+ 9D36 3A 29 8C         ld a,(Ctrl_3)
  51+ 9D39 CB 4F            bit 1,a
  52+ 9D3B C0               ret nz
  53+ 9D3C
  54+ 9D3C 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D3F 35               dec (hl)
  56+ 9D40 C0               ret nz
  57+ 9D41
  58+ 9D41              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D41              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D41              ; Analiza (Cola_de_desplazamiento).
  61+ 9D41
  62+ 9D41 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D44 A7               and a
  64+ 9D45 CC 38 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D48 28 30            jr z,Reinicia_el_movimiento
  66+ 9D4A
  67+ 9D4A FE FF            cp $ff
  68+ 9D4C 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D4E
  70+ 9D4E FE FE            cp $fe
  71+ 9D50 CC BD 9D         call z,Fijamos_bucle
  72+ 9D53 28 25            jr z,Reinicia_el_movimiento
  73+ 9D55
  74+ 9D55 FE FD            cp $fd
  75+ 9D57 20 11            jr nz,1F
  76+ 9D59
  77+ 9D59              ; ---
  78+ 9D59              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D59
  80+ 9D59 3A C7 8B         ld a,(Ctrl_2)
  81+ 9D5C CB 5F            bit 3,a
  82+ 9D5E 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9D60
  84+ 9D60              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9D60
  86+ 9D60 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9D63 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9D65
  89+ 9D65 CD CE 9D         call Inicia_Repetimos_movimiento
  90+ 9D68 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9D6A              ; ---
  92+ 9D6A
  93+ 9D6A FE 01        1 cp 1
  94+ 9D6C CA A7 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9D6F
  96+ 9D6F 3D               dec a
  97+ 9D70 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9D73
  99+ 9D73 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9D76 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9D79              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9D79 C9               ret
 103+ 9D7A
 104+ 9D7A              Reinicia_el_movimiento
 105+ 9D7A
 106+ 9D7A 3A C7 8B         ld a,(Ctrl_2)
 107+ 9D7D CB 5F            bit 3,a
 108+ 9D7F 28 1B            jr z,2F
 109+ 9D81
 110+ 9D81              ; (Cola_de_desplazamiento)="254".
 111+ 9D81
 112+ 9D81 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9D84 35               dec (hl)
 114+ 9D85 20 15            jr nz,2F
 115+ 9D87
 116+ 9D87              ; Fin de las repeticiones del último movimiento.
 117+ 9D87
 118+ 9D87 21 C7 8B         ld hl,Ctrl_2
 119+ 9D8A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9D8C
 121+ 9D8C 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9D8F 23               inc hl
 123+ 9D90 23               inc hl
 124+ 9D91 23               inc hl
 125+ 9D92 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9D95              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9D95 7E               ld a,(hl)
 128+ 9D96 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9D99
 130+ 9D99 C3 41 9D         jp Cola
 131+ 9D9C
 132+ 9D9C CD D9 9D     2 call Inicia_Puntero_mov
 133+ 9D9F
 134+ 9D9F 21 C7 8B         ld hl,Ctrl_2
 135+ 9DA2 CB 96            res 2,(hl)
 136+ 9DA4
 137+ 9DA4 C3 11 9D         jp Movimiento
 138+ 9DA7
 139+ 9DA7              Siguiente_desplazamiento
 140+ 9DA7
 141+ 9DA7              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DA7              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DA7
 144+ 9DA7 21 C7 8B         ld hl,Ctrl_2
 145+ 9DAA CB 96            res 2,(hl)
 146+ 9DAC
 147+ 9DAC 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DAF 23               inc hl
 149+ 9DB0 23               inc hl
 150+ 9DB1 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DB4
 152+ 9DB4 7E               ld a,(hl)
 153+ 9DB5 A7               and a
 154+ 9DB6 CC 38 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DB9 CA 7A 9D         jp z,Reinicia_el_movimiento
 156+ 9DBC
 157+ 9DBC C9               ret
 158+ 9DBD
 159+ 9DBD              ; Subrutinas -----------------------------------------
 160+ 9DBD              ; ---------- --------- --------- ---------- ----------
 161+ 9DBD              ;
 162+ 9DBD              ;   24/07/23
 163+ 9DBD              ;
 164+ 9DBD              ;   Fijamos_bucle
 165+ 9DBD              ;
 166+ 9DBD              ;
 167+ 9DBD
 168+ 9DBD              Fijamos_bucle
 169+ 9DBD
 170+ 9DBD 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9DC0 3C               inc a
 172+ 9DC1 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9DC4
 174+ 9DC4 CD 38 9E         call Incrementa_Puntero_indice_mov
 175+ 9DC7 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9DCA 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9DCD C9               ret
 178+ 9DCE
 179+ 9DCE              ; ---------- --------- --------- ---------- ----------
 180+ 9DCE              ;
 181+ 9DCE              ;   07/7/23
 182+ 9DCE              ;
 183+ 9DCE              ;   Inicia_Repetimos_movimiento
 184+ 9DCE              ;
 185+ 9DCE              ;
 186+ 9DCE
 187+ 9DCE              Inicia_Repetimos_movimiento
 188+ 9DCE
 189+ 9DCE              ; Iniciamos (Repetimos_movimiento).
 190+ 9DCE
 191+ 9DCE DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9DD2 DD 7E 02         ld a,(ix+2)
 193+ 9DD5 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9DD8
 195+ 9DD8 C9               ret
 196+ 9DD9
 197+ 9DD9              ; ---------- --------- --------- ---------- ----------
 198+ 9DD9              ;
 199+ 9DD9              ;   26/6/23
 200+ 9DD9              ;
 201+ 9DD9              ;   Inicia_Puntero_mov
 202+ 9DD9              ;
 203+ 9DD9              ;
 204+ 9DD9
 205+ 9DD9 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9DDC CD 33 90         call Extrae_address
 207+ 9DDF 22 EE 8B         ld (Puntero_mov),hl
 208+ 9DE2 C9               ret
 209+ 9DE3
 210+ 9DE3              ; ---------- --------- --------- ---------- ----------
 211+ 9DE3              ;
 212+ 9DE3              ;   27/06/23
 213+ 9DE3              ;
 214+ 9DE3              ;   Aplica_movimiento.
 215+ 9DE3
 216+ 9DE3              Aplica_desplazamiento
 217+ 9DE3
 218+ 9DE3              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9DE3
 220+ 9DE3 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9DE6
 222+ 9DE6 7E               ld a,(hl)
 223+ 9DE7 E6 F0            and $f0
 224+ 9DE9 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9DEA
 226+ 9DEA CB 7E            bit 7,(hl)
 227+ 9DEC 28 03            jr z,1F
 228+ 9DEE CD C5 99         call Mov_up
 229+ 9DF1 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9DF4 CB 76            bit 6,(hl)
 231+ 9DF6 28 03            jr z,2F
 232+ 9DF8 CD 8C 99         call Mov_down
 233+ 9DFB
 234+ 9DFB              ; Se ha aplicado reinicio ???
 235+ 9DFB              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9DFB
 237+ 9DFB              ;    ld a,(Ctrl_3)
 238+ 9DFB              ;    bit 1,a
 239+ 9DFB              ;    ret nz
 240+ 9DFB
 241+ 9DFB 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9DFE CB 6E            bit 5,(hl)
 243+ 9E00 28 03            jr z,3F
 244+ 9E02 CD 2B 9B         call Mov_left
 245+ 9E05 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E08 CB 66            bit 4,(hl)
 247+ 9E0A C8               ret z
 248+ 9E0B CD 08 9A         call Mov_right
 249+ 9E0E C9               ret
 250+ 9E0F
 251+ 9E0F              ; ---------- --------- --------- ---------- ----------
 252+ 9E0F              ;
 253+ 9E0F              ;   26/06/23
 254+ 9E0F              ;
 255+ 9E0F              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E0F
 257+ 9E0F              Ajusta_velocidad_desplazamiento
 258+ 9E0F
 259+ 9E0F              ; 1er byte de la cadena de movimiento.
 260+ 9E0F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E0F
 262+ 9E0F CD 2D 9E         call Extrae_nibble_alto
 263+ 9E12
 264+ 9E12 32 E2 8B         ld (Vel_up),a
 265+ 9E15 79               ld a,c
 266+ 9E16 E6 0F            and $0f
 267+ 9E18 32 E3 8B         ld (Vel_down),a
 268+ 9E1B
 269+ 9E1B              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E1B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E1B
 272+ 9E1B 23               inc hl
 273+ 9E1C CD 2D 9E         call Extrae_nibble_alto
 274+ 9E1F
 275+ 9E1F 32 E0 8B         ld (Vel_left),a
 276+ 9E22 79               ld a,c
 277+ 9E23 E6 0F            and $0f
 278+ 9E25 32 E1 8B         ld (Vel_right),a
 279+ 9E28
 280+ 9E28              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E28
 282+ 9E28 23               inc hl
 283+ 9E29 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E2C C9               ret
 285+ 9E2D
 286+ 9E2D 06 04        Extrae_nibble_alto ld b,4
 287+ 9E2F 7E               ld a,(hl)
 288+ 9E30 4F               ld c,a
 289+ 9E31 E6 F0            and $f0
 290+ 9E33 CB 3F        1 srl a
 291+ 9E35 10 FC            djnz 1B
 292+ 9E37 C9               ret
 293+ 9E38
 294+ 9E38              ; ---------- --------- --------- ---------- ----------
 295+ 9E38              ;
 296+ 9E38              ;   5/7/23
 297+ 9E38              ;
 298+ 9E38              ;   Incrementa_Puntero_indice_mov
 299+ 9E38
 300+ 9E38              Incrementa_Puntero_indice_mov
 301+ 9E38
 302+ 9E38 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E3B 34               inc (hl)
 304+ 9E3C
 305+ 9E3C 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E3F 01 02 00         ld bc,2
 307+ 9E42 A7               and a
 308+ 9E43 09               add hl,bc
 309+ 9E44 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E47
 311+ 9E47 7E               ld a,(hl)
 312+ 9E48 A7               and a
 313+ 9E49
 314+ 9E49              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E49
 316+ 9E49              ;    jr z,$
 317+ 9E49
 318+ 9E49              ;! Reinicia el Patrón de movimiento.
 319+ 9E49
 320+ 9E49 CC 4E 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E4C
 322+ 9E4C AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E4D
 324+ 9E4D C9               ret
 325+ 9E4E
 326+ 9E4E              ; ---------- --------- --------- ---------- ----------
 327+ 9E4E              ;
 328+ 9E4E              ;   15/01/24
 329+ 9E4E              ;
 330+ 9E4E              ;   Inicializa_Puntero_indice_mov
 331+ 9E4E
 332+ 9E4E              Inicializa_Puntero_indice_mov_2
 333+ 9E4E
 334+ 9E4E              ; Existe etiqueta de bucle principal???
 335+ 9E4E
 336+ 9E4E 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E51 24               inc h
 338+ 9E52 25               dec h
 339+ 9E53 28 05            jr z,2F
 340+ 9E55
 341+ 9E55 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E58 18 14            jr 3F
 343+ 9E5A
 344+ 9E5A              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E5A
 346+ 9E5A 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9E5D 47               ld b,a
 348+ 9E5E
 349+ 9E5E 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9E61 2B           1 dec hl
 351+ 9E62 2B               dec hl
 352+ 9E63 10 FC            djnz 1B
 353+ 9E65 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9E68
 355+ 9E68 AF               xor a
 356+ 9E69 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9E6C 18 06            jr 4F
 358+ 9E6E
 359+ 9E6E 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9E71 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9E74 C9           4 ret
 362+ 9E75
 363+ 9E75              ; ----------------------------------------------------------------------
 364+ 9E75              ;
 365+ 9E75              ;   30/01/24
 366+ 9E75              ;
 367+ 9E75              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9E75
 369+ 9E75 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9E78 CD CD 93         call Calcula_salto_en_BC
 371+ 9E7B 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9E7E A7               and a
 373+ 9E7F ED 4A            adc hl,bc
 374+ 9E81 C9               ret
 375+ 9E82
 376+ 9E82              ; ----------------------------------------------------------------------
 377+ 9E82              ;
 378+ 9E82              ;   30/01/24
 379+ 9E82              ;
 380+ 9E82              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9E82              ;
 382+ 9E82              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9E82
 384+ 9E82 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9E83 23               inc hl
 386+ 9E84 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9E85 69               ld l,c
 388+ 9E86 60               ld h,b
 389+ 9E87 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9E8A C9               ret
 391+ 9E8B
# file closed: Movimiento.asm
2306  9E8B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9E8B              ; --------------------------------------------------------------------------------------
   2+ 9E8B              ;
   3+ 9E8B              ;   17/8/24
   4+ 9E8B              ;
   5+ 9E8B              ;   Modifica: HL y DE.
   6+ 9E8B
   7+ 9E8B
   8+ 9E8B              Genera_datos_de_impresion_disparos_Amadeus
   9+ 9E8B
  10+ 9E8B ED 73 08 8C      ld (Stack),sp
  11+ 9E8F 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
  12+ 9E92
  13+ 9E92 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
  14+ 9E95 ED 72            sbc hl,sp                                                 ; Última caja ???
  15+ 9E97 28 2B            jr z,Salida
  16+ 9E99
  17+ 9E99 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
  18+ 9E9A
  19+ 9E9A 14               inc d
  20+ 9E9B 15               dec d
  21+ 9E9C
  22+ 9E9C 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
  23+ 9E9E
  24+ 9E9E              Siguiente_disparo_Amadeus
  25+ 9E9E
  26+ 9E9E D1               pop de
  27+ 9E9F 33               inc sp
  28+ 9EA0 18 F0            jr 1B
  29+ 9EA2
  30+ 9EA2              Genera_scanlines_de_disparo_Amadeus
  31+ 9EA2
  32+ 9EA2 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
  33+ 9EA3              ;                                                             ; Puntero_de_impresión del disparo en HL.
  34+ 9EA3 33               inc sp
  35+ 9EA4 ED 73 1A 8C      ld (Puntero_rancio_disparos_album),sp                     ; Siguiente disparo en (Nivel_scanlines_disparos_album).
  36+ 9EA8
  37+ 9EA8 ED 7B 18 8C      ld sp,(Nivel_scanlines_disparos_album)
  38+ 9EAC
  39+ 9EAC C1               pop bc
  40+ 9EAD C1               pop bc
  41+ 9EAE C1               pop bc
  42+ 9EAF C1               pop bc
  43+ 9EB0
  44+ 9EB0 ED 73 18 8C      ld (Nivel_scanlines_disparos_album),sp                    ; Nuevo nivel del album de disparos.
  45+ 9EB4
  46+ 9EB4 E5               push hl                                                   ; 3er scanline del disparo.
  47+ 9EB5 CD 55 99         call PreviousScan
  48+ 9EB8 E5               push hl                                                   ; 2º scanline.
  49+ 9EB9 CD 55 99         call PreviousScan
  50+ 9EBC E5               push hl                                                   ; 1er scanline.
  51+ 9EBD D5               push de                                                   ; Puntero_objeto del disparo.
  52+ 9EBE
  53+ 9EBE ED 7B 1A 8C      ld sp,(Puntero_rancio_disparos_album)
  54+ 9EC2 18 CE            jr 1B
  55+ 9EC4
  56+ 9EC4 ED 7B 08 8C  Salida ld sp,(Stack)
  57+ 9EC8 C9               ret
  58+ 9EC9
  59+ 9EC9              ; --------------------------------------------------------------------------------------
  60+ 9EC9              ;
  61+ 9EC9              ;   17/08/24
  62+ 9EC9              ;
  63+ 9EC9
  64+ 9EC9              Genera_disparo_Amadeus
  65+ 9EC9
  66+ 9EC9              ;   Exclusiones.
  67+ 9EC9
  68+ 9EC9 3A 42 8C         ld a,(Disparo_Amadeus)
  69+ 9ECC A7               and a
  70+ 9ECD C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
  71+ 9ECE
  72+ 9ECE              ;! Provisionalmente sólo 1 disparo !!!!!!
  73+ 9ECE 3D               dec a
  74+ 9ECF 32 42 8C         ld (Disparo_Amadeus),a
  75+ 9ED2              ; ----- ----- ----- -----
  76+ 9ED2
  77+ 9ED2              Define_puntero_objeto_disparo
  78+ 9ED2
  79+ 9ED2              ;   Inicializamos contador.
  80+ 9ED2
  81+ 9ED2 06 00            ld b,0
  82+ 9ED4 2A 75 89         ld hl,(p.imp.amadeus)
  83+ 9ED7 2C               inc l
  84+ 9ED8
  85+ 9ED8 3E 80            ld a,$80
  86+ 9EDA BE               cp (hl)
  87+ 9EDB 28 0D            jr z,1F
  88+ 9EDD
  89+ 9EDD 04               inc b
  90+ 9EDE 3E 60            ld a,$60
  91+ 9EE0 BE               cp (hl)
  92+ 9EE1 28 07            jr z,1F
  93+ 9EE3
  94+ 9EE3 04               inc b
  95+ 9EE4 3E 18            ld a,$18
  96+ 9EE6 BE               cp (hl)
  97+ 9EE7 28 01            jr z,1F
  98+ 9EE9
  99+ 9EE9 04               inc b
 100+ 9EEA
 101+ 9EEA              ;   Calcula el Puntero_de_impresión del disparo.
 102+ 9EEA
 103+ 9EEA              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 104+ 9EEA
 105+ 9EEA CD 55 99     1 call PreviousScan
 106+ 9EED
 107+ 9EED 78               ld a,b
 108+ 9EEE CB 3F            srl a
 109+ 9EF0 28 03            jr z,4F
 110+ 9EF2
 111+ 9EF2              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 112+ 9EF2 E5               push hl
 113+ 9EF3 18 02            jr 5F
 114+ 9EF5 2D           4 dec l
 115+ 9EF6 E5               push hl
 116+ 9EF7              ; ---
 117+ 9EF7
 118+ 9EF7              ;   Calcula el Puntero_objeto del disparo.
 119+ 9EF7
 120+ 9EF7 21 70 83     5 ld hl,Indice_disparo
 121+ 9EFA 04               inc b
 122+ 9EFB 05               dec b
 123+ 9EFC 28 04            jr z,2F
 124+ 9EFE
 125+ 9EFE              ;   Nos desplazamos por el índice de disparos.
 126+ 9EFE
 127+ 9EFE 2C           3 inc l
 128+ 9EFF 2C               inc l
 129+ 9F00 10 FC            djnz 3B
 130+ 9F02
 131+ 9F02              ; --- Guarda el Puntero_objeto del disparo en la pila.
 132+ 9F02 CD 33 90     2 call Extrae_address
 133+ 9F05 E5               push hl
 134+ 9F06              ; ---
 135+ 9F06
 136+ 9F06              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 137+ 9F06              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
 138+ 9F06
 139+ 9F06 2A 2D 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 140+ 9F09 CD 33 90         call Extrae_address
 141+ 9F0C
 142+ 9F0C 06 02            ld b,2
 143+ 9F0E
 144+ 9F0E D1           6 pop de
 145+ 9F0F 73               ld (hl),e
 146+ 9F10 23               inc hl
 147+ 9F11 72               ld (hl),d
 148+ 9F12 23               inc hl
 149+ 9F13
 150+ 9F13 10 F9            djnz 6B
 151+ 9F15
 152+ 9F15              Detecta_impacto_en_disparo_de_Amadeus
 153+ 9F15
 154+ 9F15 CD 46 9F         call Detecta_impacto_en_disparo_de_Amadeus01
 155+ 9F18
 156+ 9F18 2A 2D 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 157+ 9F1B 23               inc hl
 158+ 9F1C 23               inc hl
 159+ 9F1D CD 33 90         call Extrae_address
 160+ 9F20 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 161+ 9F21 28 02            jr z,7F
 162+ 9F23 3E 01            ld a,1
 163+ 9F25 77           7 ld (hl),a
 164+ 9F26 C8               ret z
 165+ 9F27
 166+ 9F27              Genera_coordenadas_de_disparo_Amadeus
 167+ 9F27
 168+ 9F27              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 169+ 9F27              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 170+ 9F27
 171+ 9F27 2A 2D 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 172+ 9F2A CD 33 90         call Extrae_address
 173+ 9F2D 23               inc hl
 174+ 9F2E 23               inc hl
 175+ 9F2F
 176+ 9F2F CD 33 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 177+ 9F32 CD 50 94         call Genera_coordenadas
 178+ 9F35
 179+ 9F35 3D               dec a
 180+ 9F36
 181+ 9F36 21 32 8C         ld hl,Coordenadas_disparo_certero
 182+ 9F39 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 183+ 9F3A 23               inc hl
 184+ 9F3B 3A BC 8B         ld a,(Coordenada_X)
 185+ 9F3E 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 186+ 9F3F
 187+ 9F3F 21 2F 8C         ld hl,Impacto2
 188+ 9F42 CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 189+ 9F44
 190+ 9F44 AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 191+ 9F45 C9               ret
 192+ 9F46
 193+ 9F46              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 194+ 9F46              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 195+ 9F46              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 196+ 9F46
 197+ 9F46              ; ----------------------------------------------
 198+ 9F46              ;
 199+ 9F46              ;   12/08/24
 200+ 9F46              ;
 201+ 9F46
 202+ 9F46
 203+ 9F46              Detecta_impacto_en_disparo_de_Amadeus01
 204+ 9F46
 205+ 9F46              Extraccion_de_datos
 206+ 9F46
 207+ 9F46 21 1F 89         ld hl,Indice_de_disparos_Amadeus
 208+ 9F49 CD 33 90         call Extrae_address
 209+ 9F4C
 210+ 9F4C 5E               ld e,(hl)
 211+ 9F4D 23               inc hl
 212+ 9F4E 56               ld d,(hl)
 213+ 9F4F 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 214+ 9F50
 215+ 9F50 4E               ld c,(hl)
 216+ 9F51 23               inc hl
 217+ 9F52 46               ld b,(hl)
 218+ 9F53 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 219+ 9F54
 220+ 9F54 C5               push bc
 221+ 9F55 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 222+ 9F56
 223+ 9F56              Detecta_impacto_
 224+ 9F56
 225+ 9F56 1A               ld a,(de)
 226+ 9F57 A6               and (hl)
 227+ 9F58 C0               ret nz
 228+ 9F59
 229+ 9F59 13               inc de
 230+ 9F5A 23               inc hl
 231+ 9F5B
 232+ 9F5B 1A               ld a,(de)
 233+ 9F5C A6               and (hl)
 234+ 9F5D C9               ret
 235+ 9F5E
 236+ 9F5E              ; -------------------------------------------------------------------------------------------------------------
 237+ 9F5E              ;
 238+ 9F5E              ;   8/8/24
 239+ 9F5E              ;
 240+ 9F5E              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 241+ 9F5E              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 242+ 9F5E              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 243+ 9F5E              ;
 244+ 9F5E              ;   MODIFICA: HL,DE,BC y A.
 245+ 9F5E              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 246+ 9F5E              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 247+ 9F5E
 248+ 9F5E              Colision_Entidad_Amadeus
 249+ 9F5E
 250+ 9F5E              ; Posible contacto de entidad con Amadeus. ?????
 251+ 9F5E
 252+ 9F5E              ; Exclusiones:
 253+ 9F5E
 254+ 9F5E 3A 4E 8C         ld a,(Shield)
 255+ 9F61 A7               and a
 256+ 9F62 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 257+ 9F63
 258+ 9F63 21 29 8C         ld hl,Ctrl_3
 259+ 9F66 CB 76            bit 6,(hl)
 260+ 9F68 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 261+ 9F69
 262+ 9F69 21 2F 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 263+ 9F6C CB 56            bit 2,(hl)
 264+ 9F6E C0               ret nz
 265+ 9F6F
 266+ 9F6F 3A BD 8B     	ld a,(Coordenada_y)
 267+ 9F72 FE 14        	cp $14
 268+ 9F74 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 269+ 9F75
 270+ 9F75 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 271+ 9F78 A7               and a
 272+ 9F79 C0               ret nz
 273+ 9F7A
 274+ 9F7A              Genera_coordenadas_X
 275+ 9F7A
 276+ 9F7A              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 277+ 9F7A              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 278+ 9F7A
 279+ 9F7A              ;   Limpiamos almacenes.
 280+ 9F7A
 281+ 9F7A              ;    call Limpia_Coordenadas_X
 282+ 9F7A
 283+ 9F7A              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 284+ 9F7A
 285+ 9F7A 21 34 8C         ld hl,Coordenadas_X_Entidad
 286+ 9F7D 3A BC 8B         ld a,(Coordenada_X)
 287+ 9F80 CD A2 9F         call Guarda_coordenadas_X
 288+ 9F83
 289+ 9F83              ;   Almacenamos las coordenadas X de Amadeus.
 290+ 9F83
 291+ 9F83 3A 71 89         ld a,(CX_Amadeus)
 292+ 9F86 CD A2 9F         call Guarda_coordenadas_X
 293+ 9F89 CD B6 9F         call Compara_coordenadas_X
 294+ 9F8C C0               ret nz
 295+ 9F8D
 296+ 9F8D 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 297+ 9F8F 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 298+ 9F92
 299+ 9F92 2A FB 8B         ld hl,(Puntero_store_caja)
 300+ 9F95 2C               inc l
 301+ 9F96 2C               inc l
 302+ 9F97 2C               inc l
 303+ 9F98 2C               inc l
 304+ 9F99 22 30 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 305+ 9F9C
 306+ 9F9C 21 2F 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 307+ 9F9F CB D6            set 2,(hl)
 308+ 9FA1
 309+ 9FA1 C9               ret
 310+ 9FA2
 311+ 9FA2               ; ----- ----- ----- ----- -----
 312+ 9FA2
 313+ 9FA2 77           Guarda_coordenadas_X ld (hl),a
 314+ 9FA3 3C               inc a
 315+ 9FA4 2C               inc l
 316+ 9FA5 77               ld (hl),a
 317+ 9FA6 3C               inc a
 318+ 9FA7 2C               inc l
 319+ 9FA8 77               ld (hl),a
 320+ 9FA9 2C               inc l
 321+ 9FAA C9               ret
 322+ 9FAB
 323+ 9FAB AF           Limpia_Coordenadas_X xor a
 324+ 9FAC 06 06            ld b,6
 325+ 9FAE 21 37 8C         ld hl,Coordenadas_X_Amadeus
 326+ 9FB1 77           1 ld (hl),a
 327+ 9FB2 23               inc hl
 328+ 9FB3 10 FC            djnz 1B
 329+ 9FB5 C9               ret
 330+ 9FB6
 331+ 9FB6              ; ----- ----- ----- ----- -----
 332+ 9FB6
 333+ 9FB6              Compara_coordenadas_X
 334+ 9FB6
 335+ 9FB6 DD 21 34 8C      ld ix,Coordenadas_X_Entidad
 336+ 9FBA DD 7E 00         ld a,(ix+0)
 337+ 9FBD CD CB 9F         call Comparando
 338+ 9FC0 C8               ret z
 339+ 9FC1
 340+ 9FC1 3C               inc a
 341+ 9FC2 CD DA 9F         call Comparando_1
 342+ 9FC5 C8               ret z
 343+ 9FC6
 344+ 9FC6 3C               inc a
 345+ 9FC7 CD DA 9F         call Comparando_1
 346+ 9FCA C9               ret
 347+ 9FCB
 348+ 9FCB              ; ----- ----- ----- ----- -----
 349+ 9FCB              ;
 350+ 9FCB              ;   4/12/23
 351+ 9FCB              ;
 352+ 9FCB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 353+ 9FCB
 354+ 9FCB              Comparando
 355+ 9FCB
 356+ 9FCB DD 2C            inc ixl
 357+ 9FCD DD 2C            inc ixl
 358+ 9FCF DD 2C            inc ixl
 359+ 9FD1
 360+ 9FD1 DD 46 00         ld b,(ix+0)
 361+ 9FD4 DD 4E 01         ld c,(ix+1)
 362+ 9FD7 DD 56 02         ld d,(ix+2)
 363+ 9FDA
 364+ 9FDA B8           Comparando_1 cp b
 365+ 9FDB C8               ret z
 366+ 9FDC B9               cp c
 367+ 9FDD C8               ret z
 368+ 9FDE BA               cp d
 369+ 9FDF C9               ret
 370+ 9FE0
 371+ 9FE0              ; -----------------------------------------------------------------------
 372+ 9FE0              ;
 373+ 9FE0              ;   04/7/24
 374+ 9FE0              ;
 375+ 9FE0
 376+ 9FE0              Detecta_colision_nave_entidad
 377+ 9FE0
 378+ 9FE0              ; Exclusiones:
 379+ 9FE0
 380+ 9FE0              ; Salimos de la rutina si no hay advertencia de posible colisión.
 381+ 9FE0
 382+ 9FE0 21 2F 8C     	ld hl,Impacto2
 383+ 9FE3 CB 56        	bit 2,(hl)
 384+ 9FE5 C8           	ret z
 385+ 9FE6
 386+ 9FE6              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 387+ 9FE6
 388+ 9FE6 2A 77 89         ld hl,(Pamm_Amadeus)
 389+ 9FE9 CD 33 90         call Extrae_address
 390+ 9FEC 54               ld d,h
 391+ 9FED 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 392+ 9FEE
 393+ 9FEE 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 394+ 9FF1 06 10            ld b,16                                        ; Contador de scanlines en B.
 395+ 9FF3 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 396+ 9FF6
 397+ 9FF6 C5           1 push bc
 398+ 9FF7 06 03            ld b,3
 399+ 9FF9 E5               push hl
 400+ 9FFA
 401+ 9FFA              ; .db
 402+ 9FFA
 403+ 9FFA 1A           3 ld a,(de)
 404+ 9FFB A7               and a
 405+ 9FFC 20 03            jr nz,4F
 406+ 9FFE
 407+ 9FFE 2C               inc l
 408+ 9FFF 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 409+ A001
 410+ A001 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 411+ A003 28 04            jr z,2F
 412+ A005
 413+ A005              ; Impacto.
 414+ A005 FD 2D            dec iyl
 415+ A007 28 22            jr z,5F
 416+ A009
 417+ A009 1C           2 inc e
 418+ A00A 10 EE            djnz 3B
 419+ A00C
 420+ A00C E1               pop hl
 421+ A00D
 422+ A00D              ; Hay salto de línea en el puntero de impresión ???
 423+ A00D
 424+ A00D 7C               ld a,h
 425+ A00E D6 57            sub $57
 426+ A010 20 0A            jr nz,6F
 427+ A012
 428+ A012              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 429+ A012
 430+ A012 2A 75 89         ld hl,(p.imp.amadeus)
 431+ A015 3E 20            ld a,$20
 432+ A017 A7               and a
 433+ A018 85               add l
 434+ A019 6F               ld l,a
 435+ A01A 18 01            jr 7F
 436+ A01C
 437+ A01C 24           6 inc h
 438+ A01D
 439+ A01D C1           7 pop bc
 440+ A01E 10 D6            djnz 1B
 441+ A020
 442+ A020              ;   Fin de la comparativa.
 443+ A020
 444+ A020              ;   NO HAY COLISIÓN !!!!!.
 445+ A020              ;
 446+ A020              ;   .db (Impacto) de Amadeus a "0".
 447+ A020              ;   RES el bit2 de (Impacto2).
 448+ A020              ;
 449+ A020              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 450+ A020              ;   Lo colocamos a "0".
 451+ A020
 452+ A020 21 2F 8C         ld hl,Impacto2
 453+ A023 CB 96            res 2,(hl)
 454+ A025 2A 30 8C         ld hl,(Entidad_sospechosa_de_colision)
 455+ A028 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 456+ A02A C9               ret
 457+ A02B
 458+ A02B              ;   COLISIÓN !!!!!.
 459+ A02B              ;
 460+ A02B              ;   .db (Impacto) de Amadeus a "1".
 461+ A02B              ;   SET el bit3 de (Impacto2).
 462+ A02B              ;
 463+ A02B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 464+ A02B
 465+ A02B E1           5 pop hl
 466+ A02C C1               pop bc
 467+ A02D
 468+ A02D 21 74 89         ld hl,Impacto_Amadeus
 469+ A030 36 01            ld (hl),1
 470+ A032 21 2F 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 471+ A035 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 472+ A037
 473+ A037 11 C0 87         ld de,Indice_Explosion_entidades
 474+ A03A 2A 30 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 475+ A03D
 476+ A03D 23               inc hl
 477+ A03E 23               inc hl
 478+ A03F 23               inc hl
 479+ A040
 480+ A040 73               ld (hl),e
 481+ A041 23               inc hl
 482+ A042 72               ld (hl),d
 483+ A043
 484+ A043              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 485+ A043
 486+ A043 11 60 88         ld de,Indice_Explosion_Amadeus
 487+ A046 21 77 89         ld hl,Pamm_Amadeus
 488+ A049
 489+ A049 73               ld (hl),e
 490+ A04A 23               inc hl
 491+ A04B 72               ld (hl),d
 492+ A04C
 493+ A04C C9               ret
 494+ A04D
 495+ A04D
 496+ A04D
# file closed: Disparo.asm
2307  A04D
2308  A04D              	SAVESNA "Pruebas.sna", START
2309  A04D
2310  A04D
2311  A04D
2312  A04D
# file closed: Banco_de_pruebas.asm
