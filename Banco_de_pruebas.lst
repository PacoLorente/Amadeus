# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 F5           	push af
  15  A102 E5           	push hl
  16  A103
  17  A103 CD 70 8E     	call Frame
  18  A106
  19  A106 E1           	pop hl
  20  A107 F1           	pop af
  21  A108
  22  A108 ED 4D        	reti
  23  A10A
  24  A10A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A10A
  26  A10A              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10A              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10A              ;
   3+ A10A              ;	17/02/23
   4+ A10A              ;
   5+ A10A              ;	Sprites e índices.
   6+ A10A
   7+ A10A              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 4/8/23
 254+ 84EC
 255+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 256+ 84EE 84 70        	defw Album_de_fotos_1
 257+ 84F0 07 71        	defw Album_de_fotos_2
 258+ 84F2 8A 71        	defw Album_de_fotos_3
 259+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 260+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 261+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 262+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 263+ 84FC
 264+ 84FC
 265+ 84FC
 266+ 84FC
 267+ 84FC
 268+ 84FC
 269+ 84FC
# file closed: Sprites_e_indices.asm
  27  84FC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84FC
   2+ 84FC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84FC
   4+ 84FC              ; 13/05/23
   5+ 84FC
   6+ 84FC              ; Control. %00000001 00000001
   7+ 84FC              ;
   8+ 84FC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84FC              ;                    _ hacen las entidades hacia abajo.
  10+ 84FC              ;
  11+ 84FC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84FC
  13+ 84FC 02 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84FE 0A 85        	defw Disparo_2A
  15+ 8500 12 85        	defw Disparo_3A
  16+ 8502
  17+ 8502 00 00        Disparo_1A defw 0									; Control.
  18+ 8504 00 00        	defw 0											; Puntero objeto.
  19+ 8506 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8508 00 00        	defw 0											; Rutina de impresión.
  21+ 850A
  22+ 850A 00 00        Disparo_2A defw 0									; Control.
  23+ 850C 00 00        	defw 0											; Puntero objeto.
  24+ 850E 00 00        	defw 0											; Puntero de impresión.
  25+ 8510 00 00        	defw 0											; Rutina de impresión.
  26+ 8512
  27+ 8512 00 00        Disparo_3A defw 0
  28+ 8514
  29+ 8514 2A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8516 32 85        	defw Disparo_2
  31+ 8518 3A 85        	defw Disparo_3
  32+ 851A 42 85        	defw Disparo_4
  33+ 851C 4A 85        	defw Disparo_5
  34+ 851E 52 85        	defw Disparo_6
  35+ 8520 5A 85        	defw Disparo_7
  36+ 8522 62 85        	defw Disparo_8
  37+ 8524 6A 85        	defw Disparo_9
  38+ 8526 72 85        	defw Disparo_10
  39+ 8528 7A 85        	defw Disparo_11
  40+ 852A
  41+ 852A 00 00        Disparo_1 defw 0									; Control.
  42+ 852C 00 00        	defw 0											; Puntero objeto.
  43+ 852E 00 00        	defw 0											; Puntero de impresión.
  44+ 8530 00 00        	defw 0											; Rutina de impresión.
  45+ 8532
  46+ 8532 00 00        Disparo_2 defw 0									; Control.
  47+ 8534 00 00        	defw 0											; Puntero objeto.
  48+ 8536 00 00        	defw 0											; Puntero de impresión.
  49+ 8538 00 00        	defw 0											; Rutina de impresión.
  50+ 853A
  51+ 853A 00 00        Disparo_3 defw 0									; Control.
  52+ 853C 00 00        	defw 0											; Puntero objeto.
  53+ 853E 00 00        	defw 0											; Puntero de impresión.
  54+ 8540 00 00        	defw 0											; Rutina de impresión.
  55+ 8542
  56+ 8542 00 00        Disparo_4 defw 0									; Control.
  57+ 8544 00 00        	defw 0											; Puntero objeto.
  58+ 8546 00 00        	defw 0											; Puntero de impresión.
  59+ 8548 00 00        	defw 0											; Rutina de impresión.
  60+ 854A
  61+ 854A 00 00        Disparo_5 defw 0									; Control.
  62+ 854C 00 00        	defw 0											; Puntero objeto.
  63+ 854E 00 00        	defw 0											; Puntero de impresión.
  64+ 8550 00 00        	defw 0											; Rutina de impresión.
  65+ 8552
  66+ 8552 00 00        Disparo_6 defw 0									; Control.
  67+ 8554 00 00        	defw 0											; Puntero objeto.
  68+ 8556 00 00        	defw 0											; Puntero de impresión.
  69+ 8558 00 00        	defw 0											; Rutina de impresión.
  70+ 855A
  71+ 855A 00 00        Disparo_7 defw 0									; Control.
  72+ 855C 00 00        	defw 0											; Puntero objeto.
  73+ 855E 00 00        	defw 0											; Puntero de impresión.
  74+ 8560 00 00        	defw 0											; Rutina de impresión.
  75+ 8562
  76+ 8562 00 00        Disparo_8 defw 0									; Control.
  77+ 8564 00 00        	defw 0											; Puntero objeto.
  78+ 8566 00 00        	defw 0											; Puntero de impresión.
  79+ 8568 00 00        	defw 0											; Rutina de impresión.
  80+ 856A
  81+ 856A 00 00        Disparo_9 defw 0									; Control.
  82+ 856C 00 00        	defw 0											; Puntero objeto.
  83+ 856E 00 00        	defw 0											; Puntero de impresión.
  84+ 8570 00 00        	defw 0											; Rutina de impresión.
  85+ 8572
  86+ 8572 00 00        Disparo_10 defw 0									; Control.
  87+ 8574 00 00        	defw 0											; Puntero objeto.
  88+ 8576 00 00        	defw 0											; Puntero de impresión.
  89+ 8578 00 00        	defw 0											; Rutina de impresión.
  90+ 857A
  91+ 857A 00 00        Disparo_11 defw 0
  92+ 857C
  93+ 857C              ; -------------------------------------------------------------------------------------
  94+ 857C
  95+ 857C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 857C
  97+ 857C D7 85        	defw Caja_1
  98+ 857E 1A 86        	defw Caja_2
  99+ 8580 5D 86        	defw Caja_3
 100+ 8582 A0 86        	defw Caja_4
 101+ 8584 E3 86        	defw Caja_5
 102+ 8586 26 87        	defw Caja_6
 103+ 8588 69 87        	defw Caja_7
 104+ 858A AC 87        	defw Caja_8
 105+ 858C EF 87        	defw Caja_9
 106+ 858E 32 88        	defw Caja_10
 107+ 8590              ;	...
 108+ 8590              ;	...
 109+ 8590              ;	+ entidades ...
 110+ 8590 00 00        	defw 0
 111+ 8592 00 00        	defw 0
 112+ 8594
 113+ 8594              ; ---------- ---------- ---------- ---------- ----------
 114+ 8594
 115+ 8594 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8596 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8598 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 859A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 859D
 120+ 859D 05           	db %00000101									; (Attr).
 121+ 859E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85A0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85A2
 124+ 85A2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85A4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85A6
 127+ 85A6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A8 04           	db 4 											; (Cuad_objeto).
 129+ 85A9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85AD
 131+ 85AD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85AE
 133+ 85AE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85B0 00 00        	defw 0											;	" " " " " " "
 135+ 85B2 00 00        	defw 0											;	" " " " " " "
 136+ 85B4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B8
 138+ 85B8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85BA 00 00        	defw 0											;	" " " " " " "
 140+ 85BC 00 00        	defw 0											;	" " " " " " "
 141+ 85BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85C2
 143+ 85C2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85C4
 145+ 85C4 00           	db 0											; (Autoriza_movimiento).
 146+ 85C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85C9 00 00
 147+ 85CB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85CE
 149+ 85CE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85D0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85D1
 152+ 85D1 00           	db 0 											; (Columnas).
 153+ 85D2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85D4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85D7
 156+ 85D7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85D7
 158+ 85D7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85D9 00 00        	defw 0											; (Posicion_actual).
 160+ 85DB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85DD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85E0
 163+ 85E0 00           	db %00000000 									; (Attr).
 164+ 85E1
 165+ 85E1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85E3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85E5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85E7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85E9
 170+ 85E9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85EB 00           	db 0											; (Cuad_objeto).
 172+ 85EC
 173+ 85EC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 85F0
 175+ 85F0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 85F1
 177+ 85F1 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 85F3 00 00        	defw 0											;	" " " " " " "
 179+ 85F5 00 00        	defw 0											;	" " " " " " "
 180+ 85F7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85FB
 182+ 85FB 00 00        	db 0,0											; Variables_de_pintado
 183+ 85FD 00 00        	defw 0											;	" " " " " " "
 184+ 85FF 00 00        	defw 0											;	" " " " " " "
 185+ 8601 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8605
 187+ 8605 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8607
 189+ 8607 00           	db 0											; (Autoriza_movimiento).
 190+ 8608 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 860C 00 00
 191+ 860E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8611
 193+ 8611 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8613 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8614
 196+ 8614 00           	db 0 											; (Columnas).
 197+ 8615 00 00        	defw 0											; (Limite_horizontal).
 198+ 8617 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 861A
 200+ 861A              ; ---------- ---------- ---------- ---------- ----------
 201+ 861A
 202+ 861A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 861C 00 00        	defw 0											; (Posicion_actual).
 204+ 861E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8620 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8623
 207+ 8623 00           	db %00000000 									; (Attr).
 208+ 8624
 209+ 8624 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8626 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8628 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 862C
 214+ 862C 00 00        	defw 0											; (Posicion_inicio).
 215+ 862E 00           	db 0											; (Cuad_objeto).
 216+ 862F
 217+ 862F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8633
 219+ 8633 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8634
 221+ 8634 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8636 00 00        	defw 0											;	" " " " " " "
 223+ 8638 00 00        	defw 0											;	" " " " " " "
 224+ 863A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 863E
 226+ 863E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8640 00 00        	defw 0											;	" " " " " " "
 228+ 8642 00 00        	defw 0											;	" " " " " " "
 229+ 8644 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8648
 231+ 8648 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 864A
 233+ 864A 00           	db 0											; (Autoriza_movimiento).
 234+ 864B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 864F 00 00
 235+ 8651 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8654
 237+ 8654 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8656 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8657
 240+ 8657 00           	db 0 											; (Columnas).
 241+ 8658 00 00        	defw 0											; (Limite_horizontal).
 242+ 865A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 865D
 244+ 865D              ; ---------- ---------- ---------- ---------- ----------
 245+ 865D
 246+ 865D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 865F 00 00        	defw 0											; (Posicion_actual).
 248+ 8661 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8663 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8666
 251+ 8666 00           	db %00000000 									; (Attr).
 252+ 8667
 253+ 8667 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8669 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 866D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 866F
 258+ 866F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8671 00           	db 0											; (Cuad_objeto).
 260+ 8672
 261+ 8672 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8676
 263+ 8676 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8677
 265+ 8677 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8679 00 00        	defw 0											;	" " " " " " "
 267+ 867B 00 00        	defw 0											;	" " " " " " "
 268+ 867D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8681
 270+ 8681 00 00        	db 0,0											; Variables_de_pintado
 271+ 8683 00 00        	defw 0											;	" " " " " " "
 272+ 8685 00 00        	defw 0											;	" " " " " " "
 273+ 8687 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 868B
 275+ 868B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 868D
 277+ 868D 00           	db 0											; (Autoriza_movimiento).
 278+ 868E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 8692 00 00
 279+ 8694 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 8697
 281+ 8697 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 8699 00           	db 0											; (Cola_de_desplazamiento).
 283+ 869A
 284+ 869A 00           	db 0 											; (Columnas).
 285+ 869B 00 00        	defw 0											; (Limite_horizontal).
 286+ 869D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86A0
 288+ 86A0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86A0
 290+ 86A0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86A2 00 00        	defw 0											; (Posicion_actual).
 292+ 86A4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86A6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86A9
 295+ 86A9 00           	db %00000000 									; (Attr).
 296+ 86AA
 297+ 86AA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86AC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86AE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86B0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86B2
 302+ 86B2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86B4 00           	db 0											; (Cuad_objeto).
 304+ 86B5
 305+ 86B5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86B9
 307+ 86B9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86BA
 309+ 86BA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86BC 00 00        	defw 0											;	" " " " " " "
 311+ 86BE 00 00        	defw 0											;	" " " " " " "
 312+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86C4
 314+ 86C4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86C6 00 00        	defw 0											;	" " " " " " "
 316+ 86C8 00 00        	defw 0											;	" " " " " " "
 317+ 86CA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86CE
 319+ 86CE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86D0
 321+ 86D0 00           	db 0											; (Autoriza_movimiento).
 322+ 86D1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86D5 00 00
 323+ 86D7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86DA
 325+ 86DA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86DC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86DD
 328+ 86DD 00           	db 0 											; (Columnas).
 329+ 86DE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86E0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86E3
 332+ 86E3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86E3
 334+ 86E3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86E5 00 00        	defw 0											; (Posicion_actual).
 336+ 86E7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86E9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86EC
 339+ 86EC 00           	db %00000000 									; (Attr).
 340+ 86ED
 341+ 86ED 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86EF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 86F1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 86F3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 86F5
 346+ 86F5 00 00        	defw 0											; (Posicion_inicio).
 347+ 86F7 00           	db 0											; (Cuad_objeto).
 348+ 86F8
 349+ 86F8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 86FC
 351+ 86FC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 86FD
 353+ 86FD 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 86FF 00 00        	defw 0											;	" " " " " " "
 355+ 8701 00 00        	defw 0											;	" " " " " " "
 356+ 8703 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8707
 358+ 8707 00 00        	db 0,0											; Variables_de_pintado
 359+ 8709 00 00        	defw 0											;	" " " " " " "
 360+ 870B 00 00        	defw 0											;	" " " " " " "
 361+ 870D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8711
 363+ 8711 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8713
 365+ 8713 00           	db 0											; (Autoriza_movimiento).
 366+ 8714 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8718 00 00
 367+ 871A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 871D
 369+ 871D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 871F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8720
 372+ 8720 00           	db 0 											; (Columnas).
 373+ 8721 00 00        	defw 0											; (Limite_horizontal).
 374+ 8723 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8726
 376+ 8726              ; ---------- ---------- ---------- ---------- ----------
 377+ 8726
 378+ 8726 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8728 00 00        	defw 0											; (Posicion_actual).
 380+ 872A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 872C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 872F
 383+ 872F 00           	db %00000000 									; (Attr).
 384+ 8730
 385+ 8730 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8732 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8734 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8736 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8738
 390+ 8738 00 00        	defw 0											; (Posicion_inicio).
 391+ 873A 00           	db 0											; (Cuad_objeto).
 392+ 873B
 393+ 873B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 873F
 395+ 873F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8740
 397+ 8740 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8742 00 00        	defw 0											;	" " " " " " "
 399+ 8744 00 00        	defw 0											;	" " " " " " "
 400+ 8746 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 874A
 402+ 874A 00 00        	db 0,0											; Variables_de_pintado
 403+ 874C 00 00        	defw 0											;	" " " " " " "
 404+ 874E 00 00        	defw 0											;	" " " " " " "
 405+ 8750 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8754
 407+ 8754 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8756
 409+ 8756 00           	db 0											; (Autoriza_movimiento).
 410+ 8757 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 875B 00 00
 411+ 875D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8760
 413+ 8760 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8762 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8763
 416+ 8763 00           	db 0 											; (Columnas).
 417+ 8764 00 00        	defw 0											; (Limite_horizontal).
 418+ 8766 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8769
 420+ 8769              ; ---------- ---------- ---------- ---------- ----------
 421+ 8769
 422+ 8769 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 876B 00 00        	defw 0											; (Posicion_actual).
 424+ 876D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 876F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8772
 427+ 8772 00           	db %00000000 									; (Attr).
 428+ 8773
 429+ 8773 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8775 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8777 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8779 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 877B
 434+ 877B 00 00        	defw 0											; (Posicion_inicio).
 435+ 877D 00           	db 0											; (Cuad_objeto).
 436+ 877E
 437+ 877E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8782
 439+ 8782 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8783
 441+ 8783 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8785 00 00        	defw 0											;	" " " " " " "
 443+ 8787 00 00        	defw 0											;	" " " " " " "
 444+ 8789 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 878D
 446+ 878D 00 00        	db 0,0											; Variables_de_pintado
 447+ 878F 00 00        	defw 0											;	" " " " " " "
 448+ 8791 00 00        	defw 0											;	" " " " " " "
 449+ 8793 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 8797
 451+ 8797 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 8799
 453+ 8799 00           	db 0											; (Autoriza_movimiento).
 454+ 879A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 879E 00 00
 455+ 87A0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87A3
 457+ 87A3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87A5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87A6
 460+ 87A6 00           	db 0 											; (Columnas).
 461+ 87A7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87A9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87AC
 464+ 87AC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87AC
 466+ 87AC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87AE 00 00        	defw 0											; (Posicion_actual).
 468+ 87B0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87B2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87B5
 471+ 87B5 00           	db %00000000 									; (Attr).
 472+ 87B6
 473+ 87B6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87B8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87BA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87BC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87BE
 478+ 87BE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87C0 00           	db 0											; (Cuad_objeto).
 480+ 87C1
 481+ 87C1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87C5
 483+ 87C5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87C6
 485+ 87C6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87C8 00 00        	defw 0											;	" " " " " " "
 487+ 87CA 00 00        	defw 0											;	" " " " " " "
 488+ 87CC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87D0
 490+ 87D0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87D2 00 00        	defw 0											;	" " " " " " "
 492+ 87D4 00 00        	defw 0											;	" " " " " " "
 493+ 87D6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87DA
 495+ 87DA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87DC
 497+ 87DC 00           	db 0											; (Autoriza_movimiento).
 498+ 87DD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87E1 00 00
 499+ 87E3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87E6
 501+ 87E6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87E8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87E9
 504+ 87E9 00           	db 0 											; (Columnas).
 505+ 87EA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87EC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87EF
 508+ 87EF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87EF
 510+ 87EF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 87F1 00 00        	defw 0											; (Posicion_actual).
 512+ 87F3 00 00        	defw 0 											; (Puntero_objeto).
 513+ 87F5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 87F8
 515+ 87F8 00           	db %00000000 									; (Attr).
 516+ 87F9
 517+ 87F9 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 87FB 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 87FD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 87FF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8801
 522+ 8801 00 00        	defw 0											; (Posicion_inicio).
 523+ 8803 00           	db 0											; (Cuad_objeto).
 524+ 8804
 525+ 8804 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8808
 527+ 8808 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8809
 529+ 8809 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 880B 00 00        	defw 0											;	" " " " " " "
 531+ 880D 00 00        	defw 0											;	" " " " " " "
 532+ 880F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8813
 534+ 8813 00 00        	db 0,0											; Variables_de_pintado
 535+ 8815 00 00        	defw 0											;	" " " " " " "
 536+ 8817 00 00        	defw 0											;	" " " " " " "
 537+ 8819 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 881D
 539+ 881D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 881F
 541+ 881F 00           	db 0											; (Autoriza_movimiento).
 542+ 8820 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8824 00 00
 543+ 8826 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8829
 545+ 8829 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 882B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 882C
 548+ 882C 00           	db 0 											; (Columnas).
 549+ 882D 00 00        	defw 0											; (Limite_horizontal).
 550+ 882F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8832
 552+ 8832              ; ---------- ---------- ---------- ---------- ----------
 553+ 8832
 554+ 8832 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8834 00 00        	defw 0											; (Posicion_actual).
 556+ 8836 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8838 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 883B
 559+ 883B 00           	db %00000000 									; (Attr).
 560+ 883C
 561+ 883C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 883E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8840 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8842 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8844
 566+ 8844 00 00        	defw 0											; (Posicion_inicio).
 567+ 8846 00           	db 0											; (Cuad_objeto).
 568+ 8847
 569+ 8847 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 884B
 571+ 884B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 884C
 573+ 884C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 884E 00 00        	defw 0											;	" " " " " " "
 575+ 8850 00 00        	defw 0											;	" " " " " " "
 576+ 8852 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8856
 578+ 8856 00 00        	db 0,0											; Variables_de_pintado
 579+ 8858 00 00        	defw 0											;	" " " " " " "
 580+ 885A 00 00        	defw 0											;	" " " " " " "
 581+ 885C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8860
 583+ 8860 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8862
 585+ 8862 00           	db 0											; (Autoriza_movimiento).
 586+ 8863 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8867 00 00
 587+ 8869 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 886C
 589+ 886C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 886E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 886F
 592+ 886F 00           	db 0 											; (Columnas).
 593+ 8870 00 00        	defw 0											; (Limite_horizontal).
 594+ 8872 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8875
 596+ 8875              ; -------------------------------------------------------------------------------------
 597+ 8875              ;
 598+ 8875              ;	20/05/23
 599+ 8875              ;
 600+ 8875              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8875              ;
 602+ 8875              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8875              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8875              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8875              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8875
 607+ 8875              Indice_de_entidades
 608+ 8875
 609+ 8875 79 88        	defw Entidad_1
 610+ 8877 89 88        	defw Entidad_2
 611+ 8879
 612+ 8879              ;	BADSAT, (Satélite malvado).
 613+ 8879
 614+ 8879 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 887B 04           	db %00000100									; (Attr).
 616+ 887C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 887E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8880 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8882 01           	db 1											; (Cuad_objeto).
 620+ 8883 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8887 10 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8889
 623+ 8889 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 888B 02           	db %00000010									; (Attr).
 625+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 8890 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 8892 01           	db 1											; (Cuad_objeto).
 629+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 8897 10 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 8899
# file closed: Cajas_y_disparos.asm
  28  8899              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8899              ; 13/05/23
   2+ 8899
   3+ 8899              Indice_de_niveles
   4+ 8899
   5+ 8899 A7 88        	defw Nivel_1
   6+ 889B A9 88        	defw Nivel_2
   7+ 889D B6 88        	defw Nivel_3
   8+ 889F C6 88        	defw Nivel_4
   9+ 88A1 D8 88        	defw Nivel_5
  10+ 88A3
  11+ 88A3              ;	...
  12+ 88A3              ;	...
  13+ 88A3              ;	+ Niveles ...
  14+ 88A3
  15+ 88A3 00 00        	defw 0
  16+ 88A5 00 00        	defw 0
  17+ 88A7
  18+ 88A7 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88A8 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88A9 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88AA 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88AE 01 02
  22+ 88B0 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88B4 01 02
  23+ 88B6 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88B7 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88BB 01
  25+ 88BC 03 01 01 01  	db 3,1,1,1,1
  25+ 88C0 01
  26+ 88C1 03 01 01 01  	db 3,1,1,1,1
  26+ 88C5 01
  27+ 88C6 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88C7 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88CB 01
  29+ 88CC 04 01 01 01  	db 4,1,1,1,1
  29+ 88D0 01
  30+ 88D1 04 01 01 01  	db 4,1,1,1,1
  30+ 88D5 01
  31+ 88D6 02 03        	db 2,3
  32+ 88D8 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88D9 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88DD 01
  34+ 88DE 05 01 01 01  	db 5,1,1,1,1
  34+ 88E2 01
  35+ 88E3 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88E7 01
  36+ 88E8 05 01 01 01  	db 5,1,1,1,1
  36+ 88EC 01
  37+ 88ED
  38+ 88ED              ;---------------------------------------------------------------------------------------------------------------
  39+ 88ED              ;
  40+ 88ED              ;   21/5/23
  41+ 88ED              ;
  42+ 88ED              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88ED              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88ED              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88ED              ;	_en la caja DRAW correspondiente.
  46+ 88ED              ;
  47+ 88ED              ;	MODIFICA: HL,DE y A.
  48+ 88ED              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88ED
  50+ 88ED              Inicializa_Punteros_de_nivel
  51+ 88ED
  52+ 88ED 21 99 88     	ld hl,Indice_de_niveles
  53+ 88F0 22 31 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 88F3 CD 46 8D     	call Extrae_address
  55+ 88F6 7E           	ld a,(hl)
  56+ 88F7 32 EF 89     	ld (Numero_de_entidades),a
  57+ 88FA 23           	inc hl
  58+ 88FB 22 33 8A     	ld (Datos_de_nivel),hl
  59+ 88FE C9           	ret
  60+ 88FF
  61+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  62+ 88FF              ;
  63+ 88FF              ;   13/5/23
  64+ 88FF              ;
  65+ 88FF              ;	Destruye A,BC,HL,DE
  66+ 88FF
  67+ 88FF              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 88FF              ;	_del juego.
  69+ 88FF
  70+ 88FF              Prepara_cajas
  71+ 88FF
  72+ 88FF              ; Preparamos los punteros de las cajas.
  73+ 88FF
  74+ 88FF 21 7C 85     	ld hl,Indice_de_cajas
  75+ 8902 CD 46 8D     	call Extrae_address
  76+ 8905 CD 42 89     	call Avanza_caja
  77+ 8908
  78+ 8908 CD 86 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 890B
  80+ 890B 2A 33 8A     	ld hl,(Datos_de_nivel)
  81+ 890E
  82+ 890E              ; HL está en los datos del nivel correspondiente.
  83+ 890E              ; B actuará como contador de cajas.
  84+ 890E
  85+ 890E C5           1 push bc
  86+ 890F
  87+ 890F 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8910 CD 33 89     	call PreparaBC
  89+ 8913
  90+ 8913 21 75 88     	ld hl,Indice_de_entidades
  91+ 8916 CD 3B 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8919 22 F5 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 891C
  94+ 891C CD 4C 89     	call Datos_de_entidad_a_caja
  95+ 891F
  96+ 891F 2A ED 89     	ld hl,(Indice_restore_caja)
  97+ 8922 CD 46 8D     	call Extrae_address
  98+ 8925 CD 42 89     	call Avanza_caja
  99+ 8928
 100+ 8928 2A 33 8A     	ld hl,(Datos_de_nivel)
 101+ 892B 23           	inc hl
 102+ 892C 22 33 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 892F
 104+ 892F C1           	pop bc
 105+ 8930 10 DC        	djnz 1B
 106+ 8932 C9           	ret
 107+ 8933
 108+ 8933 CB 27        PreparaBC sla a
 109+ 8935 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8937 4F           	ld c,a
 111+ 8938 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 893A C9           	ret
 113+ 893B
 114+ 893B A7           SBC_HL_con_BC_y_Extrae and a
 115+ 893C ED 4A        	adc hl,bc
 116+ 893E CD 46 8D     	call Extrae_address
 117+ 8941 C9           	ret
 118+ 8942
 119+ 8942 22 E9 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8945 13           	inc de
 121+ 8946 13           	inc de
 122+ 8947 EB           	ex de,hl
 123+ 8948 22 ED 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 894B C9           	ret
 125+ 894C
 126+ 894C              Datos_de_entidad_a_caja
 127+ 894C
 128+ 894C              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 894C
 130+ 894C
 131+ 894C ED 5B E9 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8950
 133+ 8950 01 02 00     	ld bc,2
 134+ 8953 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8955
 136+ 8955 01 07 00     	ld bc,7
 137+ 8958 CD 80 89     	call Situa_DE
 138+ 895B
 139+ 895B 01 05 00     	ld bc,5
 140+ 895E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8960
 142+ 8960 01 04 00     	ld bc,4
 143+ 8963 CD 80 89     	call Situa_DE
 144+ 8966
 145+ 8966 01 07 00     	ld bc,7
 146+ 8969 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 896B
 148+ 896B 01 18 00     	ld bc,24
 149+ 896E CD 80 89     	call Situa_DE
 150+ 8971
 151+ 8971 01 02 00     	ld bc,2
 152+ 8974 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8976
 154+ 8976              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8976              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8976
 157+ 8976 01 0F 00     	ld bc,15									; *****
 158+ 8979 CD 80 89     	call Situa_DE
 159+ 897C
 160+ 897C 3E 03        	ld a,3
 161+ 897E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 897F
 163+ 897F C9           	ret
 164+ 8980
 165+ 8980 EB           Situa_DE ex de,hl
 166+ 8981 A7           	and a
 167+ 8982 ED 4A        	adc hl,bc
 168+ 8984 EB           	ex de,hl
 169+ 8985 C9           	ret
 170+ 8986
 171+ 8986              ;---------------------------------------------------------------------------------------------------------------
 172+ 8986              ;
 173+ 8986              ;	21/5/23
 174+ 8986              ;
 175+ 8986              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8986              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8986              ;
 178+ 8986              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8986              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8986              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8986              ;
 182+ 8986              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8986              ;	MODIFICA: A y B.
 184+ 8986              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8986
 186+ 8986              Admin_num_entidades
 187+ 8986
 188+ 8986              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8986
 190+ 8986 3A EF 89     	ld a,(Numero_de_entidades)
 191+ 8989 A7           	and a
 192+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 898A              ;	jr z,$
 194+ 898A              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 898A
 196+ 898A 20 03        	jr nz,3F
 197+ 898C
 198+ 898C              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 898C
 200+ 898C CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 898F
 202+ 898F
 203+ 898F 3A EF 89     3 ld a,(Numero_de_entidades)
 204+ 8992 FE 0A        	cp 10
 205+ 8994 38 08        	jr c,1F
 206+ 8996
 207+ 8996              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 8996              ; Actualizamos variables.
 209+ 8996
 210+ 8996 3E 0A        	ld a,10
 211+ 8998 32 F0 89     	ld (Numero_parcial_de_entidades),a
 212+ 899B 47           	ld b,a
 213+ 899C 18 04        	jr 2F
 214+ 899E
 215+ 899E              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 899E              ; (Numero_de_entidades)="0".
 217+ 899E
 218+ 899E 32 F0 89     1 ld (Numero_parcial_de_entidades),a
 219+ 89A1 47           	ld b,a
 220+ 89A2 C9           2 ret
# file closed: Niveles.asm
  29  89A3
  30  89A3              ; ******************************************************************************************************************************************************************************************
  31  89A3              ; Constantes.
  32  89A3              ; ******************************************************************************************************************************************************************************************
  33  89A3              ;
  34  89A3              ; 25/05/23
  35  89A3              ;
  36  89A3              ; Constantes generales.
  37  89A3              ;
  38  89A3
  39  89A3              Sprite_vacio equ $f000
  40  89A3              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89A3              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89A3              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89A3              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89A3
  45  89A3              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89A3              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89A3              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89A3              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89A3              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89A3              ;                               				        ; De momento situamos este almacén en $7060.
  51  89A3              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  52  89A3              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  53  89A3              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  54  89A3              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  55  89A3              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  56  89A3              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  57  89A3
  58  89A3              Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
  59  89A3              Caja_de_disparotes equ $741d ; (741dh - 7420h) 4 bytes.
  60  89A3
  61  89A3              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  62  89A3
  63  89A3              ; ******************************************************************************************************************************************************************************************
  64  89A3              ; Variables.
  65  89A3              ; ******************************************************************************************************************************************************************************************
  66  89A3              ;
  67  89A3              ; 28/07/23
  68  89A3              ;
  69  89A3              ; Variables de DRAW. (Motor principal).
  70  89A3              ;
  71  89A3              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  72  89A3
  73  89A3 00           Filas db 0												; Filas. [DRAW]
  74  89A4 00           Columns db 0  											; Nº de columnas. [DRAW]
  75  89A5 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  76  89A7 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  77  89A9 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  78  89AA 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  79  89AB
  80  89AB              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  81  89AB
  82  89AB 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  83  89AC              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  84  89AC              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  85  89AC 00           Attr db 0												; Atributos de la entidad:
  86  89AD
  87  89AD              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  88  89AD              ;
  89  89AD              ;	COLORES: 0 ..... NEGRO
  90  89AD              ;    		 1 ..... AZUL
  91  89AD              ; 			 2 ..... ROJO
  92  89AD              ;			 3 ..... MAGENTA
  93  89AD              ; 			 4 ..... VERDE
  94  89AD              ; 			 5 ..... CIAN
  95  89AD              ;			 6 ..... AMARILLO
  96  89AD              ; 			 7 ..... BLANCO
  97  89AD
  98  89AD 00 00        Indice_Sprite_der defw 0
  99  89AF 00 00        Indice_Sprite_izq defw 0
 100  89B1 00 00        Puntero_DESPLZ_der defw 0
 101  89B3 00 00        Puntero_DESPLZ_izq defw 0
 102  89B5
 103  89B5 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 104  89B7 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 105  89B8
 106  89B8              ; Variables de objeto. (Características).
 107  89B8
 108  89B8 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 109  89B9 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 110  89BA 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 111  89BB 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 112  89BC
 113  89BC 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 114  89BD              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 115  89BD              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 116  89BD
 117  89BD 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 118  89BF 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 119  89C1 00 00        	defw 0
 120  89C3 00 00 00 00  	db 0,0,0,0
 121  89C7
 122  89C7 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 123  89C9 00 00        	defw 0
 124  89CB 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 125  89CD 00 00 00 00  	db 0,0,0,0
 126  89D1
 127  89D1              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 128  89D1
 129  89D1 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 130  89D2              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 131  89D2              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 132  89D2              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 133  89D2              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 134  89D2              ;
 135  89D2              ; 														DESCRIPCIÖN:
 136  89D2              ;
 137  89D2              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 138  89D2              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 139  89D2              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 140  89D2              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 141  89D2              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 142  89D2              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 143  89D2              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 144  89D2              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 145  89D2              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 146  89D2              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 147  89D2              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 148  89D2              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 149  89D2              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 150  89D2              ;
 151  89D2              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 152  89D2              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 153  89D2              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 154  89D2
 155  89D2 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 156  89D3
 157  89D3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 158  89D3
 159  89D3 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 160  89D4 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 161  89D6 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 162  89D8 00 00        Puntero_indice_mov_bucle defw 0							;
 163  89DA              ;
 164  89DA              ;
 165  89DA 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 166  89DB              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 167  89DB              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 168  89DB 00           Incrementa_puntero_backup db 0
 169  89DC 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 170  89DD              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 171  89DD 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 172  89DE 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 173  89DF 00           Cola_de_desplazamiento db 0								; Este byte indica:
 174  89E0              ;
 175  89E0              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 176  89E0              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 177  89E0              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 178  89E0              ;
 179  89E0              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 180  89E0              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 181  89E0              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 182  89E0              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 183  89E0              ;
 184  89E0              ;														;	"$ff" ..... Bucle infinito de repetición.
 185  89E0              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 186  89E0              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 187  89E0
 188  89E0
 189  89E0              ; Variables de funcionamiento. [DRAW].
 190  89E0
 191  89E0 00           Columnas db 0
 192  89E1 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 193  89E3              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 194  89E3 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 195  89E4
 196  89E4              ; variables de control general.
 197  89E4
 198  89E4 00           Ctrl_2 db 0
 199  89E5              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 200  89E5              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 201  89E5              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 202  89E5              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 203  89E5              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 204  89E5              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 205  89E5              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 206  89E5              ;
 207  89E5              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 208  89E5              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 209  89E5              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 210  89E5              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 211  89E5              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 212  89E5
 213  89E5 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 214  89E6
 215  89E6              ;! 67 Bytes por entidad.
 216  89E6
 217  89E6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 218  89E6              ;					         		---------;      ;---------
 219  89E6
 220  89E6
 221  89E6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 222  89E6
 223  89E6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 224  89E7
 225  89E7              ;														DESCRIPCIÓN:
 226  89E7              ;
 227  89E7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 228  89E7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 229  89E7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 230  89E7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 231  89E7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 232  89E7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 233  89E7
 234  89E7              ;														BIT 3, Recarga de nueva oleada.
 235  89E7              ;														BIT 4, Recarga de nueva oleada.
 236  89E7
 237  89E7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 238  89E9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 239  89E9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 240  89E9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 241  89E9
 242  89E9
 243  89E9
 244  89E9              ; Gestión de ENTIDADES y CAJAS.
 245  89E9
 246  89E9 00 00        Puntero_store_caja defw 0
 247  89EB 00 00        Puntero_restore_caja defw 0
 248  89ED 00 00        Indice_restore_caja defw 0
 249  89EF 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 250  89F0 00           Numero_parcial_de_entidades db 0
 251  89F1 00           Entidades_en_curso db 0									; ..... ..... .....
 252  89F2 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 253  89F3              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 254  89F3              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 255  89F3              ;														; _ (Numero_de_malotes)="0".
 256  89F3 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 257  89F5 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 258  89F7              ;														; _ puntero (Indice_entidades).
 259  89F7
 260  89F7
 261  89F7              ;---------------------------------------------------------------------------------------------------------------
 262  89F7              ;
 263  89F7              ;	4/8/23
 264  89F7              ;
 265  89F7              ;	Álbumes.
 266  89F7
 267  89F7 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 268  89F9              ;															; _variable para almacenar lo posición del puntero_
 269  89F9              ; 															; _de pila, SP.
 270  89F9 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 271  89FB              ;															; La utiliza la rutina [Extrae_foto_registros].
 272  89FB 00 70        Stack_snapshot defw Album_de_fotos							; Puntero que indica la posición de memoria donde vamos a guardar_
 273  89FD              ;															; _el snapshot de los registros de la siguiente entidad.
 274  89FD              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 275  89FD 0D 72        Stack_snapshot_disparos defw Album_de_fotos_disparos		; Puntero que indica la posición de memoria donde vamos a guardar_
 276  89FF              ;															; _el snapshot de los registros del siguiente disparo.
 277  89FF              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 278  89FF 84 70        Stack_snapshot_1 defw Album_de_fotos_1
 279  8A01 90 72        Stack_snapshot_disparos_1 defw Album_de_fotos_disparos_1
 280  8A03 07 71        Stack_snapshot_2 defw Album_de_fotos_2
 281  8A05 19 73        Stack_snapshot_disparos_2 defw Album_de_fotos_disparos_2
 282  8A07 8A 71        Stack_snapshot_3 defw Album_de_fotos_3
 283  8A09 96 73        Stack_snapshot_disparos_3 defw Album_de_fotos_disparos_3
 284  8A0B
 285  8A0B 00 00        Puntero_indice_album_de_fotos defw 0
 286  8A0D 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 287  8A0F
 288  8A0F 00 00        Puntero_de_album_de_fotos defw 0
 289  8A11 00 00        Puntero_de_album_de_fotos_de_disparos defw 0
 290  8A13
 291  8A13              ;---------------------------------------------------------------------------------------------------------------
 292  8A13
 293  8A13              ; Gestión de Disparos.
 294  8A13
 295  8A13 00           Numero_de_disparotes db 0
 296  8A14 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 297  8A16 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 298  8A18 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 299  8A19              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 300  8A19              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 301  8A19 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 302  8A1B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 303  8A1B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 304  8A1B              ;														; _produzca colisión.
 305  8A1B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 306  8A1D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 307  8A1D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 308  8A20              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 309  8A20 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 310  8A23              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 311  8A23 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 312  8A25 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 313  8A26
 314  8A26              ;---------------------------------------------------------------------------------------------------------------
 315  8A26
 316  8A26              ; Relojes y temporizaciones.
 317  8A26
 318  8A26 00           Contador_de_frames db 0
 319  8A27 04           Clock_explosion db 4
 320  8A28 1E           Clock_Entidades_en_curso db 30
 321  8A29 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 322  8A2A              ;														; Repite la oleada de entidades.
 323  8A2A 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 324  8A2B 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 325  8A2C 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 326  8A2D
 327  8A2D 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 328  8A2E 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 329  8A2F 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 330  8A30
 331  8A30              ;---------------------------------------------------------------------------------------------------------------
 332  8A30
 333  8A30              ; Gestión de NIVELES.
 334  8A30
 335  8A30 00           Nivel db 0												; Nivel actual del juego.
 336  8A31 00 00        Puntero_indice_NIVELES defw 0
 337  8A33 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 338  8A35              ; 														; _ que definen el NIVEL.
 339  8A35              ; Y todo comienza aquí .....
 340  8A35              ;
 341  8A35              ; Rutina principal *************************************************************************************************************************************************************************
 342  8A35              ;
 343  8A35              ;	14/11/22
 344  8A35
 345  8A35              START
 346  8A35
 347  8A35 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 348  8A38 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 349  8A3A ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 350  8A3C ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 351  8A3E F3           	DI
 352  8A3F
 353  8A3F 3E 07        	ld a,%00000111
 354  8A41 CD 4C 99     	call Cls
 355  8A44
 356  8A44 CD 1F 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 357  8A47
 358  8A47              ; INICIALIZACIÓN.
 359  8A47
 360  8A47 CD ED 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 361  8A4A
 362  8A4A CD FF 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 363  8A4D
 364  8A4D CD D4 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 365  8A50              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 366  8A50 CD EA 8C     	call Inicia_punteros_de_albumes
 367  8A53
 368  8A53              ; ----------
 369  8A53
 370  8A53 CD CF 8D     	call Restore_entidad
 371  8A56
 372  8A56 21 F0 89     	ld hl,Numero_parcial_de_entidades
 373  8A59 46           	ld b,(hl)
 374  8A5A 04           	inc b
 375  8A5B 05           	dec b
 376  8A5C 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 377  8A5E
 378  8A5E              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 379  8A5E              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 380  8A5E              ;	Pintamos el resto de entidades:
 381  8A5E
 382  8A5E              ;	INICIA ENTIDADES !!!!!
 383  8A5E
 384  8A5E C5           1 push bc  												; Guardo el contador de entidades.
 385  8A5F
 386  8A5F CD 7B 8C     	call Inicia_entidad
 387  8A62
 388  8A62 C1           	pop bc
 389  8A63 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 390  8A65
 391  8A65              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 392  8A65              ; (Esto se dá cuando se inicia una nueva oleada).
 393  8A65
 394  8A65 3A E6 89     	ld a,(Ctrl_1)
 395  8A68 CB 5F        	bit 3,a
 396  8A6A 20 18        	jr nz,5F											; Loop
 397  8A6C
 398  8A6C              ; 	INICIA AMADEUS !!!!!
 399  8A6C
 400  8A6C CD F6 8D     3 call Restore_Amadeus
 401  8A6F CD 4C 8D     	call Inicia_Puntero_objeto
 402  8A72 CD 82 93     	call Draw
 403  8A75 CD A0 7F     	call Guarda_foto_registros
 404  8A78 11 94 85     	ld de,Amadeus_db
 405  8A7B CD 08 8E     	call Store_Amadeus
 406  8A7E
 407  8A7E              ; 	INICIA DISPAROS !!!!!
 408  8A7E
 409  8A7E CD 04 8D     	call Inicia_Puntero_Disparo_Entidades
 410  8A81 CD 0B 8D     	call Inicia_Puntero_Disparo_Amadeus
 411  8A84
 412  8A84              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 413  8A84
 414  8A84 CD D4 8C     5 call Inicia_punteros_de_cajas
 415  8A87 CD CF 8D     	call Restore_entidad
 416  8A8A
 417  8A8A 3A E6 89     	ld a,(Ctrl_1)
 418  8A8D CB 5F        	bit 3,a
 419  8A8F 28 0A        	jr z,6F
 420  8A91
 421  8A91              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 422  8A91
 423  8A91 21 E6 89     	ld hl,Ctrl_1
 424  8A94 CB 9E        	res 3,(hl)
 425  8A96 CD 12 8D     	call Calcula_numero_de_malotes
 426  8A99 18 11        	jr 2F
 427  8A9B
 428  8A9B              ; ----------
 429  8A9B
 430  8A9B 3A F0 89     6 ld a,(Numero_parcial_de_entidades)
 431  8A9E 3C           	inc a
 432  8A9F 32 F2 89     	ld (Numero_de_malotes),a
 433  8AA2
 434  8AA2              ; Guardamos el nº de malotes en su caja, Caja_de_malotes+3.
 435  8AA2
 436  8AA2 21 1C 74     	ld hl,Caja_de_malotes+3
 437  8AA5 77           	ld (hl),a
 438  8AA6
 439  8AA6 CD 5D 74     	call Gestiona_albumes_de_fotos
 440  8AA9              ;	call Gestiona_albumes_de_fotos_disparos
 441  8AA9 CD 21 74     	call Gestiona_cajas_de_malotes
 442  8AAC
 443  8AAC              ; ------------------------------------
 444  8AAC
 445  8AAC FB           2 ei ; Interrupciones habilitadas.
 446  8AAD
 447  8AAD
 448  8AAD              ; -----------------------------------------------------------------------
 449  8AAD              ;
 450  8AAD              ;	3/8/23
 451  8AAD
 452  8AAD 3A 28 8A     Main ld a,(Clock_Entidades_en_curso)
 453  8AB0 47           	ld b,a
 454  8AB1 3A 26 8A     	ld a,(Contador_de_frames)
 455  8AB4 B8           	cp b
 456  8AB5 20 18        	jr nz,13F
 457  8AB7
 458  8AB7 3A F0 89     	ld a,(Numero_parcial_de_entidades)
 459  8ABA 47           	ld b,a
 460  8ABB 3A F1 89     	ld a,(Entidades_en_curso)
 461  8ABE B8           	cp b
 462  8ABF 28 0E        	jr z,13F
 463  8AC1 30 0C        	jr nc,13F
 464  8AC3
 465  8AC3 3C           	inc a
 466  8AC4 32 F1 89     	ld (Entidades_en_curso),a
 467  8AC7
 468  8AC7 3A 28 8A     	ld a,(Clock_Entidades_en_curso)
 469  8ACA
 470  8ACA              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 471  8ACA              ;! _ IMPREDECIBLE !!!!
 472  8ACA
 473  8ACA C6 64        	add 100
 474  8ACC 32 28 8A     	ld (Clock_Entidades_en_curso),a
 475  8ACF
 476  8ACF              ; Habilita disparos.
 477  8ACF
 478  8ACF 21 2A 8A     13 ld hl,Disparo_Amadeus
 479  8AD2 11 2C 8A     	ld de,CLOCK_repone_disparo_Amadeus
 480  8AD5 CD 11 A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 481  8AD8
 482  8AD8 21 2D 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 483  8ADB 11 2F 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 484  8ADE CD 11 A0     	call Habilita_disparos
 485  8AE1
 486  8AE1              ; COLISIONES.
 487  8AE1
 488  8AE1 CD 64 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 489  8AE4
 490  8AE4              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 491  8AE4              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 492  8AE4              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 493  8AE4
 494  8AE4 AF           	xor a
 495  8AE5 32 18 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 496  8AE8
 497  8AE8 CD D4 8C     	call Inicia_punteros_de_cajas
 498  8AEB CD CF 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 499  8AEE              ; 														; _ en DRAW.
 500  8AEE 3A A3 89     	ld a,(Filas)
 501  8AF1 A7           	and a
 502  8AF2 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 503  8AF4 CD E1 8D     	call Incrementa_punteros_de_cajas
 504  8AF7 18 F2        	jr 12B
 505  8AF9
 506  8AF9              ; ---------------------------------------------------------------------------------------
 507  8AF9
 508  8AF9 3A F0 89     10 ld a,(Numero_parcial_de_entidades)
 509  8AFC 47               ld b,a
 510  8AFD A7           	and a
 511  8AFE 20 14        	jr nz,11F
 512  8B00
 513  8B00 21 E6 89     	ld hl,Ctrl_1
 514  8B03 CB 66        	bit 4,(hl)
 515  8B05 C2 91 8B     	jp nz,16F
 516  8B08
 517  8B08 21 E6 89     	ld hl,Ctrl_1
 518  8B0B CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 519  8B0D
 520  8B0D 3A 26 8A     	ld a,(Contador_de_frames)
 521  8B10 3C           	inc a
 522  8B11 32 29 8A     	ld (Activa_recarga_cajas),a
 523  8B14
 524  8B14              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 525  8B14
 526  8B14 3A F1 89     11 ld a,(Entidades_en_curso)
 527  8B17 A7           	and a
 528  8B18 CA 91 8B     	jp z,16F												; Si no hay entidades en curso, RESTORE AMADEUS.
 529  8B1B 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 530  8B1C
 531  8B1C              ; Código que ejecutamos con cada entidad:
 532  8B1C              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 533  8B1C
 534  8B1C C5           15 push bc 												; Nº de entidades en curso.
 535  8B1D
 536  8B1D              ; Impacto ???
 537  8B1D
 538  8B1D 3A BC 89     	ld a,(Impacto)
 539  8B20 A7           	and a
 540  8B21 28 2D        	jr z,8F
 541  8B23
 542  8B23              ; Hay Impacto en esta entidad.
 543  8B23
 544  8B23 21 27 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 545  8B26 35           	dec (hl)
 546  8B27 20 62        	jr nz,17F
 547  8B29
 548  8B29              ;! Velocidad de la animación de la explosión.
 549  8B29
 550  8B29 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 551  8B2B              ;														; _,(velocidad de la explosión).
 552  8B2B CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 553  8B2E
 554  8B2E              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 555  8B2E
 556  8B2E 3A E4 89     	ld a,(Ctrl_2)
 557  8B31 CB 4F        	bit 1,a
 558  8B33 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 559  8B35
 560  8B35              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 561  8B35
 562  8B35 3A AB 89     	ld a,(CTRL_DESPLZ)
 563  8B38 A7           	and a
 564  8B39 20 08        	jr nz,18F
 565  8B3B
 566  8B3B 21 84 84     	ld hl,Indice_Explosion_2x2-2
 567  8B3E 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 568  8B41 18 06        	jr 19F
 569  8B43
 570  8B43 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 571  8B46 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 572  8B49
 573  8B49 21 E4 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 574  8B4C CB CE        	set 1,(hl)
 575  8B4E 18 22        	jr 7F
 576  8B50
 577  8B50              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 578  8B50              ; _con las coordenadas de la entidad almacenada en DRAW.
 579  8B50
 580  8B50 3A E6 89     8 ld a,(Ctrl_1)
 581  8B53 CB 57        	bit 2,a
 582  8B55 28 1B        	jr z,7F
 583  8B57
 584  8B57 2A 1B 8A     	ld hl,(Coordenadas_disparo_certero)
 585  8B5A EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 586  8B5B              ;														; E contiene la coordenada_X del disparo.
 587  8B5B 2A A9 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 588  8B5E              ;														; H FILA, (Coordenada_y de la entidad).
 589  8B5E A7           	and a
 590  8B5F ED 52        	sbc hl,de
 591  8B61
 592  8B61 CD 9B 92     	call Determina_resultado_comparativa
 593  8B64
 594  8B64 78           	ld a,b
 595  8B65 A7           	and a
 596  8B66 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 597  8B68
 598  8B68              ; ----- ----- -----
 599  8B68
 600  8B68 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 601  8B6A 32 BC 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 602  8B6D
 603  8B6D 21 E6 89     	ld hl,Ctrl_1
 604  8B70 CB 96        	res 2,(hl)
 605  8B72
 606  8B72 CD FD 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 607  8B75
 608  8B75 3A D1 89     	ld a,(Ctrl_0)
 609  8B78 CB 67        	bit 4,a
 610  8B7A 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 611  8B7C
 612  8B7C              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 613  8B7C              ; [[[
 614  8B7C CD 6A 8E     	call Detecta_disparo_entidad
 615  8B7F              ; ]]]
 616  8B7F CD 9B 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 617  8B82
 618  8B82 21 D1 89     	ld hl,Ctrl_0
 619  8B85 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 620  8B87 AF           	xor a
 621  8B88 32 D2 89     	ld (Obj_dibujado),a
 622  8B8B
 623  8B8B CD 94 8D     17 call Store_Restore_cajas
 624  8B8E
 625  8B8E C1           	pop bc
 626  8B8F 10 8B        	djnz 15B
 627  8B91
 628  8B91              ; ------------------------------------
 629  8B91              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 630  8B91              ; Hemos gestionado todas las unidades.
 631  8B91              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 632  8B91
 633  8B91              ;	ld hl,Ctrl_1
 634  8B91              ;	res 2,(hl)
 635  8B91
 636  8B91              ; ------------------------------------
 637  8B91
 638  8B91              ; Tras la gestión de las entidades, ... AMADEUS.
 639  8B91
 640  8B91 CD F6 8D     16 call Restore_Amadeus
 641  8B94
 642  8B94 3A BC 89     	ld a,(Impacto)
 643  8B97 A7           	and a
 644  8B98 20 FE        	jr nz,$
 645  8B9A
 646  8B9A CD 5C 8C     	call Mov_Amadeus
 647  8B9D
 648  8B9D 3A D1 89     	ld a,(Ctrl_0)
 649  8BA0 CB 67        	bit 4,a
 650  8BA2 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 651  8BA4
 652  8BA4 CD 9B 8C     	call Guarda_foto_entidad_a_pintar
 653  8BA7
 654  8BA7 21 D1 89     14 ld hl,Ctrl_0
 655  8BAA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 656  8BAC AF           	xor a
 657  8BAD 32 D2 89     	ld (Obj_dibujado),a
 658  8BB0
 659  8BB0 11 94 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 660  8BB3 CD 08 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 661  8BB6
 662  8BB6 CD F8 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 663  8BB9
 664  8BB9              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 665  8BB9
 666  8BB9 CD 2E 8D     	call Calcula_numero_de_disparotes
 667  8BBC CD 12 8D     9 call Calcula_numero_de_malotes
 668  8BBF
 669  8BBF 3A 26 8A     	ld a,(Contador_de_frames)
 670  8BC2 18 FE        	jr $
 671  8BC4
 672  8BC4 CD 5D 74     	call Gestiona_albumes_de_fotos
 673  8BC7 CD 49 75     	call Gestiona_albumes_de_fotos_disparos
 674  8BCA CD 21 74     	call Gestiona_cajas_de_malotes
 675  8BCD
 676  8BCD 3E 04        	ld a,4
 677  8BCF D3 FE        	out ($fe),a
 678  8BD1
 679  8BD1              ; ----------------------------------------
 680  8BD1
 681  8BD1 3A E6 89     	ld a,(Ctrl_1) 										; Existe Loop?
 682  8BD4 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 683  8BD6 CA AD 8A     	jp z,Main
 684  8BD9
 685  8BD9              ; -----
 686  8BD9              ;	(((
 687  8BD9
 688  8BD9 3A 26 8A     	ld a,(Contador_de_frames)
 689  8BDC 47           	ld b,a
 690  8BDD 3A 29 8A     	ld a,(Activa_recarga_cajas)
 691  8BE0 B8           	cp b
 692  8BE1 28 08        	jr z,20F
 693  8BE3
 694  8BE3 21 E6 89     	ld hl,Ctrl_1
 695  8BE6 CB E6        	set 4,(hl)
 696  8BE8 C3 AD 8A     	jp Main
 697  8BEB
 698  8BEB 21 E6 89     20 ld hl,Ctrl_1
 699  8BEE CB A6        	res 4,(hl)
 700  8BF0 F3           	di
 701  8BF1
 702  8BF1 3A 26 8A     	ld a,(Contador_de_frames)
 703  8BF4
 704  8BF4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 705  8BF4              ;! _ IMPREDECIBLE !!!!
 706  8BF4
 707  8BF4 C6 0A        	add 10
 708  8BF6 32 28 8A     	ld (Clock_Entidades_en_curso),a
 709  8BF9
 710  8BF9 C3 4A 8A     	jp 4B
 711  8BFC
 712  8BFC C9           	ret
 713  8BFD
 714  8BFD              ; --------------------------------------------------------------------------------------------------------------
 715  8BFD              ;
 716  8BFD              ;	27/05/23
 717  8BFD
 718  8BFD              Mov_obj
 719  8BFD
 720  8BFD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 721  8BFD
 722  8BFD 3A E4 89     	ld a,(Ctrl_2)
 723  8C00 CB 4F        	bit 1,a
 724  8C02 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 725  8C04
 726  8C04              ; Explosión:
 727  8C04
 728  8C04 3A E5 89     	ld a,(Frames_explosion)
 729  8C07 A7           	and a
 730  8C08 20 11        	jr nz,4F
 731  8C0A
 732  8C0A              ; Una alimaña menos!!!!!!!!!1
 733  8C0A
 734  8C0A CD 11 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 735  8C0D 21 F0 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 736  8C10 35           	dec (hl)
 737  8C11 21 F1 89     	ld hl,Entidades_en_curso
 738  8C14 35           	dec (hl)
 739  8C15 21 EF 89     	ld hl,Numero_de_entidades
 740  8C18 35           	dec (hl)
 741  8C19 18 40        	jr 3F
 742  8C1B
 743  8C1B              ; -----
 744  8C1B
 745  8C1B              ;	`Movemos´ la explosión.
 746  8C1B
 747  8C1B 2A B1 89     4 ld hl,(Puntero_DESPLZ_der)
 748  8C1E 23           	inc hl
 749  8C1F 23           	inc hl
 750  8C20 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 751  8C23 CD 46 8D     	call Extrae_address
 752  8C26 22 A7 89     	ld (Puntero_objeto),hl
 753  8C29
 754  8C29 21 E5 89     	ld hl,Frames_explosion
 755  8C2C 35           	dec (hl)
 756  8C2D
 757  8C2D CD 8B 8C     	call Guarda_foto_entidad_a_borrar
 758  8C30 18 29        	jr 3F
 759  8C32
 760  8C32 AF           2 xor a
 761  8C33 32 D2 89     	ld (Obj_dibujado),a
 762  8C36 32 D1 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 763  8C39              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 764  8C39              ; 														; _de la entidad.
 765  8C39 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 766  8C3C              ;														; Obj_dibujado="0".
 767  8C3C              ; Movemos Entidades malignas.
 768  8C3C
 769  8C3C              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 770  8C3C              ;	and a 												; _a movernos. (Limitador_de_entidades).
 771  8C3C              ;	ret z
 772  8C3C
 773  8C3C CD AC 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 774  8C3F
 775  8C3F 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 776  8C42 CB 67        	bit 4,a
 777  8C44 C8           	ret z
 778  8C45
 779  8C45              ; Ha habido desplazamiento de la entidad maligna.
 780  8C45              ; Ha llegado a zona de AMADEUS ???
 781  8C45
 782  8C45 3A AA 89     	ld a,(Coordenada_y)
 783  8C48 FE 14        	cp $14
 784  8C4A D4 29 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 785  8C4D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 786  8C4D              ; ---------
 787  8C4D
 788  8C4D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 789  8C4F 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 790  8C52 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 791  8C55 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 792  8C58 CD 8B 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 793  8C5B C9           3 ret													; _de la misma.
 794  8C5C
 795  8C5C              ; --------------------------------------------------------------------------------------------------------------
 796  8C5C              ;
 797  8C5C              ;	29/1/23
 798  8C5C
 799  8C5C              Mov_Amadeus
 800  8C5C
 801  8C5C AF           	xor a
 802  8C5D 32 D2 89     	ld (Obj_dibujado),a
 803  8C60 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 804  8C63              ;														; Obj_dibujado="0".
 805  8C63              ; Movemos Amadeus.
 806  8C63
 807  8C63 CD 33 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 808  8C66 3A D1 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 809  8C69 CB 67        	bit 4,a
 810  8C6B C8           	ret z
 811  8C6C
 812  8C6C              ; ---------
 813  8C6C
 814  8C6C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 815  8C6E 32 D2 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 816  8C71 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 817  8C74 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 818  8C77 CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 819  8C7A C9           	ret													; _de la nave.
 820  8C7B
 821  8C7B              ; -----------------------------------------------------------------------------------
 822  8C7B
 823  8C7B CD 4C 8D     Inicia_entidad	call Inicia_Puntero_objeto
 824  8C7E CD 60 99     	call Recompone_posicion_inicio
 825  8C81 CD 82 93     	call Draw
 826  8C84 CD A0 7F     	call Guarda_foto_registros
 827  8C87 CD 94 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 828  8C8A C9           	ret
 829  8C8B
 830  8C8B              ; --------------------------------------------------------------------------------------------------------------
 831  8C8B              ;
 832  8C8B              ;	31/01/23
 833  8C8B              ;
 834  8C8B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 835  8C8B
 836  8C8B              Guarda_foto_entidad_a_borrar
 837  8C8B
 838  8C8B CD 66 96     	call Prepara_draw
 839  8C8E CD 96 95     	call calcula_CColumnass
 840  8C91 CD CD 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 841  8C94 CD 2C 96     	call Define_rutina_de_impresion
 842  8C97 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 843  8C9A C9           	ret
 844  8C9B
 845  8C9B              ; --------------------------------------------------------------------------------------------------------------
 846  8C9B              ;
 847  8C9B              ;	31/01/23
 848  8C9B              ;
 849  8C9B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 850  8C9B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 851  8C9B
 852  8C9B              Guarda_foto_entidad_a_pintar
 853  8C9B
 854  8C9B CD C8 8C     	call Repone_pintar
 855  8C9E CD 82 93     	call Draw
 856  8CA1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 857  8CA4 C9           	ret
 858  8CA5
 859  8CA5              ; --------------------------------------------------------------------------------------------------------------
 860  8CA5              ;
 861  8CA5              ;
 862  8CA5
 863  8CA5 21 A3 89     Prepara_var_pintado_borrado	ld hl,Filas
 864  8CA8 3A D2 89     	ld a,(Obj_dibujado)
 865  8CAB A7           	and a
 866  8CAC 28 05        	jr z,1F
 867  8CAE 11 C7 89     	ld de,Variables_de_pintado
 868  8CB1 18 03        	jr 2F
 869  8CB3 11 BD 89     1 ld de,Variables_de_borrado
 870  8CB6 01 08 00     2 ld bc,8
 871  8CB9 ED B0        	ldir
 872  8CBB C9           	ret
 873  8CBC
 874  8CBC              ; --------------------------------------------------------------------------------------------------------------
 875  8CBC
 876  8CBC 21 BD 89     Repone_borrar ld hl,Variables_de_borrado
 877  8CBF 11 A3 89     	ld de,Filas
 878  8CC2 01 08 00     	ld bc,8
 879  8CC5 ED B0        	ldir
 880  8CC7 C9           	ret
 881  8CC8
 882  8CC8 21 C7 89     Repone_pintar ld hl,Variables_de_pintado
 883  8CCB 11 A3 89     	ld de,Filas
 884  8CCE 01 08 00     	ld bc,8
 885  8CD1 ED B0        	ldir
 886  8CD3 C9           	ret
 887  8CD4
 888  8CD4              ; *************************************************************************************************************************************************************
 889  8CD4              ;
 890  8CD4              ; 8/1/23
 891  8CD4              ;
 892  8CD4              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 893  8CD4              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 894  8CD4              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 895  8CD4
 896  8CD4              ; Destruye HL y DE !!!!!
 897  8CD4
 898  8CD4              Inicia_punteros_de_cajas
 899  8CD4
 900  8CD4 21 7C 85     	ld hl,Indice_de_cajas
 901  8CD7 CD 46 8D         call Extrae_address
 902  8CDA 22 E9 89         ld (Puntero_store_caja),hl
 903  8CDD 21 7E 85     	ld hl,Indice_de_cajas+2
 904  8CE0 22 ED 89     	ld (Indice_restore_caja),hl
 905  8CE3 CD 46 8D     	call Extrae_address
 906  8CE6 22 EB 89     	ld (Puntero_restore_caja),hl
 907  8CE9 C9               ret
 908  8CEA
 909  8CEA              ; ---------------------------------------------------------------
 910  8CEA              ;
 911  8CEA              ;	4/8/23
 912  8CEA              ;
 913  8CEA
 914  8CEA 21 EC 84     Inicia_punteros_de_albumes ld hl,Indice_album_de_fotos
 915  8CED 22 0B 8A     	ld (Puntero_indice_album_de_fotos),hl
 916  8CF0 CD 46 8D     	call Extrae_address
 917  8CF3 22 0F 8A     	ld (Puntero_de_album_de_fotos),hl
 918  8CF6
 919  8CF6 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 920  8CF9 22 0D 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 921  8CFC CD 46 8D     	call Extrae_address
 922  8CFF 22 11 8A     	ld (Puntero_de_album_de_fotos_de_disparos),hl
 923  8D02
 924  8D02 C9           	ret
 925  8D03
 926  8D03              Avanza_puntero_de_album_de_fotos
 927  8D03
 928  8D03 C9           	ret
 929  8D04
 930  8D04              ; *************************************************************************************************************************************************************
 931  8D04              ;
 932  8D04              ; 8/1/23
 933  8D04              ;
 934  8D04              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 935  8D04
 936  8D04 21 14 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 937  8D07 22 14 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 938  8D0A C9           	ret
 939  8D0B 21 FC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 940  8D0E 22 16 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 941  8D11 C9           	ret
 942  8D12
 943  8D12              ; -------------------------------------------------------------------------------------------------------------
 944  8D12              ;
 945  8D12              ; 3/8/23
 946  8D12              ;
 947  8D12
 948  8D12              Calcula_numero_de_malotes
 949  8D12
 950  8D12 21 00 70     	ld hl,Album_de_fotos
 951  8D15 EB           	ex de,hl
 952  8D16 2A FB 89     	ld hl,(Stack_snapshot)
 953  8D19
 954  8D19 06 00        	ld b,0
 955  8D1B 7D           	ld a,l
 956  8D1C 93           	sub e
 957  8D1D 28 07        	jr z,1F
 958  8D1F
 959  8D1F              ; Nº de malotes no es "0".
 960  8D1F
 961  8D1F D6 06        2 sub 6
 962  8D21 04           	inc b
 963  8D22 A7           	and a
 964  8D23 20 FA        	jr nz,2B
 965  8D25 78           	ld a,b
 966  8D26
 967  8D26 32 F2 89     1 ld (Numero_de_malotes),a
 968  8D29
 969  8D29 21 1C 74     	ld hl,Caja_de_malotes+3
 970  8D2C 77           	ld (hl),a
 971  8D2D
 972  8D2D C9           	ret
 973  8D2E
 974  8D2E              ; -------------------------------------------------------------------------------------------------------------
 975  8D2E              ;
 976  8D2E              ; 28/2/23
 977  8D2E              ;
 978  8D2E
 979  8D2E              Calcula_numero_de_disparotes
 980  8D2E
 981  8D2E 21 0D 72     	ld hl,Album_de_fotos_disparos
 982  8D31 EB           	ex de,hl
 983  8D32 2A FD 89     	ld hl,(Stack_snapshot_disparos)
 984  8D35
 985  8D35 06 00        	ld b,0
 986  8D37 7D           	ld a,l
 987  8D38 93           	sub e
 988  8D39 28 07        	jr z,1F
 989  8D3B
 990  8D3B              ; Nº de malotes no es "0".
 991  8D3B
 992  8D3B D6 06        2 sub 6
 993  8D3D 04           	inc b
 994  8D3E A7           	and a
 995  8D3F 20 FA        	jr nz,2B
 996  8D41 78           	ld a,b
 997  8D42
 998  8D42 32 13 8A     1 ld (Numero_de_disparotes),a
 999  8D45 C9           	ret
1000  8D46              ; *************************************************************************************************************************************************************
1001  8D46              ;
1002  8D46              ; 20/10/22
1003  8D46              ;
1004  8D46              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1005  8D46              ;
1006  8D46              ; Destruye el puntero y DE !!!!!
1007  8D46
1008  8D46 5E           Extrae_address ld e,(hl)
1009  8D47 23           	inc hl
1010  8D48 56           	ld d,(hl)
1011  8D49 2B           	dec hl
1012  8D4A EB           	ex de,hl
1013  8D4B C9           	ret
1014  8D4C
1015  8D4C              ; *************************************************************************************************************************************************************
1016  8D4C              ;
1017  8D4C              ;	7/2/23
1018  8D4C              ;
1019  8D4C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1020  8D4C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1021  8D4C              ;
1022  8D4C              ;   Destruye HL y BC !!!!!,
1023  8D4C              ;
1024  8D4C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1025  8D4C              ;					"0" ..... Izquierda.
1026  8D4C
1027  8D4C              Inicia_Puntero_objeto
1028  8D4C
1029  8D4C 3A B7 89     	ld a,(Cuad_objeto)
1030  8D4F E6 01        	and 1
1031  8D51 F5           	push af
1032  8D52 CC 70 8D     	call z,Inicia_puntero_objeto_izq
1033  8D55 F1           	pop af
1034  8D56 28 2B        	jr z,1F
1035  8D58 CD 5D 8D     	call Inicia_puntero_objeto_der
1036  8D5B 18 26        	jr 1F
1037  8D5D
1038  8D5D              ; Arrancamos desde la parte izquierda de la pantalla.
1039  8D5D              ; Iniciamos (Indice_Sprite_der).
1040  8D5D
1041  8D5D 2A AD 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1042  8D60 22 B1 89     	ld (Puntero_DESPLZ_der),hl
1043  8D63 CD 46 8D     	call Extrae_address
1044  8D66 22 A7 89     	ld (Puntero_objeto),hl
1045  8D69
1046  8D69 2A AF 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1047  8D6C 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
1048  8D6F C9           	ret
1049  8D70
1050  8D70              ; Arrancamos desde la parte derecha de la pantalla.
1051  8D70              ; Iniciamos (Indice_Sprite_izq).
1052  8D70
1053  8D70 2A AF 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1054  8D73 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
1055  8D76 CD 46 8D     	call Extrae_address
1056  8D79 22 A7 89     	ld (Puntero_objeto),hl
1057  8D7C
1058  8D7C 2A AD 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1059  8D7F 22 B1 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1060  8D82 C9           	ret
1061  8D83
1062  8D83              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1063  8D83
1064  8D83 21 40 83     1 ld hl,Amadeus
1065  8D86 ED 4B A7 89  	ld bc,(Puntero_objeto)
1066  8D8A B7 ED 42     	sub hl,bc
1067  8D8D C0           	ret nz
1068  8D8E 21 D1 89     	ld hl,Ctrl_0
1069  8D91 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1070  8D93 C9           	ret 												; _de nuestra nave en los extremos.
1071  8D94
1072  8D94              ; *************************************************************************************************************************************************************
1073  8D94              ;
1074  8D94              ;	14/5/23
1075  8D94              ;
1076  8D94              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1077  8D94              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1078  8D94
1079  8D94              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1080  8D94              ;	_de la 2ª y 3ª entidad respectivamente.
1081  8D94
1082  8D94              Store_Restore_cajas
1083  8D94
1084  8D94 E5           	push hl
1085  8D95 D5           	push de
1086  8D96 C5            	push bc
1087  8D97
1088  8D97              ;	STORE !!!!!
1089  8D97              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1090  8D97
1091  8D97 21 A3 89     	ld hl,Filas
1092  8D9A ED 5B E9 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1093  8D9E 01 43 00     	ld bc,67
1094  8DA1 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1095  8DA3
1096  8DA3              ; 	Entidad_sospechosa. 20/4/23
1097  8DA3
1098  8DA3 3A BC 89     	ld a,(Impacto)
1099  8DA6 A7           	and a
1100  8DA7 28 0C        	jr z,1F
1101  8DA9
1102  8DA9 2A E9 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1103  8DAC 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1104  8DAF A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1105  8DB0 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1106  8DB2 22 19 8A     	ld (Entidad_sospechosa_de_colision),hl
1107  8DB5
1108  8DB5              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1109  8DB5
1110  8DB5 2A EB 89     1 ld hl,(Puntero_restore_caja)
1111  8DB8 7E           	ld a,(hl)
1112  8DB9 A7           	and a
1113  8DBA F5           	push af
1114  8DBB 28 08        	jr z,2F
1115  8DBD
1116  8DBD 11 A3 89     	ld de,Filas
1117  8DC0 01 43 00     	ld bc,67
1118  8DC3 ED B0        	ldir
1119  8DC5
1120  8DC5 CD E1 8D     2 call Incrementa_punteros_de_cajas
1121  8DC8 F1           	pop af
1122  8DC9 28 EA        	jr z,1B
1123  8DCB
1124  8DCB C1           	pop bc
1125  8DCC D1           	pop de
1126  8DCD E1           	pop hl
1127  8DCE
1128  8DCE C9           	ret
1129  8DCF
1130  8DCF              ; **************************************************************************************************
1131  8DCF              ;
1132  8DCF              ;	12/05/23
1133  8DCF              ;
1134  8DCF              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1135  8DCF
1136  8DCF E5           Restore_entidad push hl
1137  8DD0 D5           	push de
1138  8DD1 C5            	push bc
1139  8DD2
1140  8DD2 2A E9 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1141  8DD5 11 A3 89     	ld de,Filas
1142  8DD8 01 43 00     	ld bc,67
1143  8DDB ED B0        	ldir
1144  8DDD
1145  8DDD C1           	pop bc
1146  8DDE D1           	pop de
1147  8DDF E1           	pop hl
1148  8DE0 C9           	ret
1149  8DE1
1150  8DE1
1151  8DE1              ; **************************************************************************************************
1152  8DE1              ;
1153  8DE1              ;	08/05/23
1154  8DE1              ;
1155  8DE1              ;	Incrementamos los dos punteros de entidades. (+1).
1156  8DE1
1157  8DE1 2A EB 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1158  8DE4 22 E9 89     	ld (Puntero_store_caja),hl
1159  8DE7 2A ED 89     	ld hl,(Indice_restore_caja)
1160  8DEA 23           	inc hl
1161  8DEB 23           	inc hl
1162  8DEC 22 ED 89     	ld (Indice_restore_caja),hl
1163  8DEF CD 46 8D         call Extrae_address
1164  8DF2 22 EB 89         ld (Puntero_restore_caja),hl
1165  8DF5 C9               ret
1166  8DF6
1167  8DF6              ; **************************************************************************************************
1168  8DF6              ;
1169  8DF6              ;	25/01/23
1170  8DF6              ;
1171  8DF6              ;	Restore_Amadeus
1172  8DF6              ;
1173  8DF6              ;	Cargamos en DRAW los parámetros de Amadeus.
1174  8DF6              ;
1175  8DF6
1176  8DF6 E5           Restore_Amadeus	push hl
1177  8DF7 D5           	push de
1178  8DF8 C5            	push bc
1179  8DF9 21 94 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1180  8DFC 11 A3 89     	ld de,Filas
1181  8DFF 01 43 00     	ld bc,67
1182  8E02 ED B0        	ldir
1183  8E04 C1           	pop bc
1184  8E05 D1           	pop de
1185  8E06 E1           	pop hl
1186  8E07 C9           	ret
1187  8E08
1188  8E08              ; *************************************************************************************************************************************************************
1189  8E08              ;
1190  8E08              ;	29/04/23
1191  8E08              ;
1192  8E08              ;	Store_Amadeus
1193  8E08              ;
1194  8E08              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1195  8E08              ;
1196  8E08              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1197  8E08              ;
1198  8E08              ;	DESTRUYE: HL y BC y DE.
1199  8E08
1200  8E08 21 A3 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1201  8E0B 01 43 00     	ld bc,67
1202  8E0E ED B0        	ldir
1203  8E10 C9           	ret
1204  8E11
1205  8E11              ; -----------------------------------------------------------
1206  8E11              ;
1207  8E11              ;	27/04/23
1208  8E11              ;
1209  8E11              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1210  8E11              ;
1211  8E11              ;	Destruye: HL,BC,DE,A
1212  8E11
1213  8E11 21 A3 89     Borra_datos_entidad ld hl,Filas
1214  8E14 01 42 00     	ld bc,66
1215  8E17 AF           	xor a
1216  8E18 77           	ld (hl),a
1217  8E19 11 A4 89     	ld de,Filas+1
1218  8E1C ED B0        	ldir
1219  8E1E C9           	ret
1220  8E1F
1221  8E1F              ; -----------------------------------------------------------
1222  8E1F
1223  8E1F              ; Teclado.
1224  8E1F
1225  8E1F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1226  8E21 DB FE        	in a,($fe)
1227  8E23 E6 01        	and $01
1228  8E25 28 02        	jr z,1f
1229  8E27 18 F6        	jr Pulsa_ENTER
1230  8E29 C9           1 ret
1231  8E2A
1232  8E2A              ; **************************************************************************************************
1233  8E2A              ;
1234  8E2A              ; Temporización.
1235  8E2A
1236  8E2A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1237  8E2A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1238  8E2A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1239  8E2A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1240  8E2A
1241  8E2A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1242  8E2A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1243  8E2A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1244  8E2A
1245  8E2A              ; A partir de $4f61 no hace falta DELAY.
1246  8E2A
1247  8E2A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1248  8E2A
1249  8E2A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1250  8E2D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1251  8E2E 78           	LD A,B
1252  8E2F A7           	AND A
1253  8E30 20 FB        	JR NZ,wait
1254  8E32 C9           	RET
1255  8E33
1256  8E33              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1257  8E33              ;
1258  8E33              ;	5/3/23
1259  8E33              ;
1260  8E33              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1261  8E33
1262  8E33              Movimiento_Amadeus
1263  8E33
1264  8E33              ; Disparo.
1265  8E33
1266  8E33 3A 2A 8A     	ld a,(Disparo_Amadeus)
1267  8E36 A7           	and a
1268  8E37 20 02        	jr nz,1F
1269  8E39 18 15        	jr 2F
1270  8E3B
1271  8E3B 3E F7        1 ld a,$f7													; "5" para disparar.
1272  8E3D DB FE        	in a,($fe)
1273  8E3F E6 10        	and $10
1274  8E41
1275  8E41 F5           	push af
1276  8E42 CC 8C 8E     	call z,Genera_disparo
1277  8E45 F1           	pop af
1278  8E46 20 08        	jr nz,2F
1279  8E48
1280  8E48 3A 2A 8A     	ld a,(Disparo_Amadeus)
1281  8E4B EE 01        	xor 1
1282  8E4D 32 2A 8A     	ld (Disparo_Amadeus),a
1283  8E50
1284  8E50 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1285  8E52 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1286  8E54 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1287  8E56 CC 1A 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1288  8E59 3E F7        	ld a,$f7
1289  8E5B DB FE        	in a,($fe)
1290  8E5D E6 01        	and $01
1291  8E5F C8           	ret z
1292  8E60
1293  8E60 3E F7        	ld a,$f7
1294  8E62 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1295  8E64 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1296  8E66 CC FC 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1297  8E69 C9           	ret
1298  8E6A
1299  8E6A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1300  8E6A              ;
1301  8E6A              ;	Rutina provisional para que los malotes cagen balas.
1302  8E6A
1303  8E6A              Detecta_disparo_entidad
1304  8E6A
1305  8E6A 3A 2D 8A     	ld a,(Disparo_entidad)
1306  8E6D A7           	and a
1307  8E6E C8           	ret z
1308  8E6F
1309  8E6F              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1310  8E6F
1311  8E6F              ;	ld a,$7f				; Detecta SPACE.
1312  8E6F              ;	in a,($fe)
1313  8E6F              ;	and 1
1314  8E6F              ;	ret nz
1315  8E6F
1316  8E6F              ;	call Genera_disparo
1317  8E6F C9           	ret
1318  8E70
1319  8E70              ; ----------------------------------------------------------------------
1320  8E70              ;
1321  8E70              ;	3/8/23
1322  8E70
1323  8E70              Frame
1324  8E70
1325  8E70              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1326  8E70              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1327  8E70
1328  8E70              ; PINTAMOS.
1329  8E70
1330  8E70 3E 02            ld a,2
1331  8E72 D3 FE            out ($fe),a											; Rojo.
1332  8E74 CD 90 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1333  8E77 CD D3 96     	call Extrae_foto_disparos
1334  8E7A 3E 01            ld a,1
1335  8E7C D3 FE            out ($fe),a											; Azul.
1336  8E7E
1337  8E7E              ; Gestiona los álbumes de fotos.
1338  8E7E
1339  8E7E CD DA 90     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1340  8E81
1341  8E81 21 00 70     	ld hl,Album_de_fotos
1342  8E84 22 FB 89         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
1343  8E87              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
1344  8E87              ; RELOJES.
1345  8E87
1346  8E87 21 26 8A     	ld hl,Contador_de_frames
1347  8E8A 34           	inc (hl)											; 0 - 255
1348  8E8B
1349  8E8B C9           	ret
1350  8E8C
1351  8E8C              ; ---------------------------------------------------------------
1352  8E8C
1353  8E8C              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E8C              ; ******************************************************************************************************************************************************************************************
   2+ 8E8C              ;
   3+ 8E8C              ;   21/07/23
   4+ 8E8C              ;
   5+ 8E8C              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E8C              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E8C              ;
   8+ 8E8C              ;
   9+ 8E8C              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E8C              ;
  11+ 8E8C              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E8C              ;               _ hacen las entidades hacia abajo.
  13+ 8E8C              ;
  14+ 8E8C              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E8C              ;
  16+ 8E8C              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E8C              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E8C              ;
  19+ 8E8C              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E8C              ;           _ la bala.
  21+ 8E8C              ;
  22+ 8E8C              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E8C              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E8C              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E8C              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E8C              ;           _ en el momento de generarse la bala)).
  27+ 8E8C
  28+ 8E8C              Genera_disparo
  29+ 8E8C
  30+ 8E8C              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E8C              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E8C              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E8C              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E8C              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E8C              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E8C              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E8C
  38+ 8E8C              ; Exclusiones:
  39+ 8E8C
  40+ 8E8C 3A BB 89         ld a,(Vel_down)
  41+ 8E8F 47               ld b,a
  42+ 8E90 3A 25 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E93 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E94 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E95 3A E0 89         ld a,(Columnas)
  46+ 8E98 47               ld b,a
  47+ 8E99 3A A4 89         ld a,(Columns)
  48+ 8E9C B8               cp b
  49+ 8E9D C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E9E
  51+ 8E9E              ; ----- ----- -----
  52+ 8E9E
  53+ 8E9E 3A D1 89         ld a,(Ctrl_0)
  54+ 8EA1 CB 77            bit 6,a
  55+ 8EA3 20 06            jr nz,14F
  56+ 8EA5
  57+ 8EA5 3A AA 89         ld a,(Coordenada_y)
  58+ 8EA8 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EAA D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EAB
  61+ 8EAB 21 00 80     14 ld hl,Indice_disparo
  62+ 8EAE 3A AB 89         ld a,(CTRL_DESPLZ)
  63+ 8EB1 4F               ld c,a
  64+ 8EB2 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EB4              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EB4              ;                                            ""        ""       "f9", B="1"
  67+ 8EB4              ;                                            ""        ""       "fb", B="2"
  68+ 8EB4              ;                                            ""        ""       "fb", B="3"
  69+ 8EB4 A7               and a
  70+ 8EB5 28 10            jr z,1F
  71+ 8EB7 E6 01            and 1
  72+ 8EB9 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EBA
  74+ 8EBA 79               ld a,c
  75+ 8EBB 16 F9            ld d,$f9
  76+ 8EBD 23           2 inc hl
  77+ 8EBE 23               inc hl
  78+ 8EBF 04               inc b
  79+ 8EC0 BA               cp d
  80+ 8EC1 28 04            jr z,1F
  81+ 8EC3 14               inc d
  82+ 8EC4 14               inc d
  83+ 8EC5 18 F6            jr 2B
  84+ 8EC7
  85+ 8EC7 CD 46 8D     1 call Extrae_address
  86+ 8ECA E5               push hl
  87+ 8ECB FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8ECD DD 21 15 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8ED1
  90+ 8ED1              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8ED1              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8ED1
  93+ 8ED1 3A D1 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8ED4 CB 77            bit 6,a
  95+ 8ED6 20 04            jr nz,19F
  96+ 8ED8
  97+ 8ED8 AF               xor a
  98+ 8ED9 32 2D 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EDC
 100+ 8EDC 3A B7 89     19 ld a,(Cuad_objeto)
 101+ 8EDF FE 02            cp 2
 102+ 8EE1 38 66            jr c,3F
 103+ 8EE3 28 64            jr z,3F
 104+ 8EE5
 105+ 8EE5              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EE5
 107+ 8EE5 E6 01            and 1
 108+ 8EE7 28 30            jr z,4F
 109+ 8EE9
 110+ 8EE9              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EE9              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EE9              ;
 113+ 8EE9              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EE9              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EE9              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EE9
 117+ 8EE9 2A A5 89     	ld hl,(Posicion_actual)
 118+ 8EEC
 119+ 8EEC              ;   Amadeus o entidad ???.
 120+ 8EEC
 121+ 8EEC 3A D1 89         ld a,(Ctrl_0)
 122+ 8EEF CB 77            bit 6,a
 123+ 8EF1 28 0A            jr z,8F
 124+ 8EF3
 125+ 8EF3              ; 	Dispara Amadeus.
 126+ 8EF3
 127+ 8EF3 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EF5 CD 81 96         call PreviousScan
 129+ 8EF8 CD 81 96         call PreviousScan
 130+ 8EFB
 131+ 8EFB              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EFB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EFB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EFB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EFB
 136+ 8EFB 18 11            jr 10F
 137+ 8EFD
 138+ 8EFD              ; 	Dispara Entidad.
 139+ 8EFD
 140+ 8EFD 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F00              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F00
 143+ 8F00              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F00              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F00
 146+ 8F00 C5               push bc
 147+ 8F01 06 10            ld b,16
 148+ 8F03 CD 72 96     9 call NextScan
 149+ 8F06 10 FB            djnz 9B
 150+ 8F08 C1               pop bc
 151+ 8F09 CD 73 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F0C 18 06            jr 17F
 153+ 8F0E
 154+ 8F0E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F0E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F0E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F0E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F0E
 159+ 8F0E CD 73 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F11 CD E8 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F14              ;                                                      ; _al generar el disparo.
 162+ 8F14
 163+ 8F14              ; 	LLegados a este punto tendremos:
 164+ 8F14              ;
 165+ 8F14              ;       Puntero_objeto_disparo en IY.
 166+ 8F14              ;       Rutinas_de_impresion en IX.
 167+ 8F14              ;       Puntero_de_impresion en HL.
 168+ 8F14              ;       Impacto/Dirección en BC.
 169+ 8F14
 170+ 8F14 CD 7B 8F     17 call Almacena_disparo
 171+ 8F17 18 52            jr 6F                                             ; RET.
 172+ 8F19
 173+ 8F19              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F19              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F19              ;
 176+ 8F19              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F19              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F19              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F19
 180+ 8F19 2A A5 89     4 ld hl,(Posicion_actual)
 181+ 8F1C
 182+ 8F1C              ;   Amadeus o entidad ???.
 183+ 8F1C
 184+ 8F1C 3A D1 89         ld a,(Ctrl_0)
 185+ 8F1F CB 77            bit 6,a
 186+ 8F21 28 0A            jr z,11F
 187+ 8F23
 188+ 8F23              ; 	Dispara Amadeus.
 189+ 8F23
 190+ 8F23 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F25 CD 81 96         call PreviousScan
 192+ 8F28 CD 81 96         call PreviousScan
 193+ 8F2B
 194+ 8F2B              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F2B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F2B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F2B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F2B
 199+ 8F2B 18 11            jr 13F
 200+ 8F2D
 201+ 8F2D              ; 	Dispara Entidad.
 202+ 8F2D
 203+ 8F2D 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F30              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F30
 206+ 8F30              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F30              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F30
 209+ 8F30 C5               push bc
 210+ 8F31 06 10            ld b,16
 211+ 8F33 CD 72 96     12 call NextScan
 212+ 8F36 10 FB            djnz 12B
 213+ 8F38 C1               pop bc
 214+ 8F39
 215+ 8F39 CD 6C 8F         call Ajusta_disparo_parte_derecha
 216+ 8F3C 18 06            jr 18F
 217+ 8F3E
 218+ 8F3E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F3E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F3E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F3E
 223+ 8F3E CD 6C 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F41 CD E8 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F44              ;                                                       ; _al generar el disparo.
 226+ 8F44
 227+ 8F44              ; LLegados a este punto tendremos:
 228+ 8F44              ;
 229+ 8F44              ;       Puntero_objeto_disparo en IY.
 230+ 8F44              ;       Rutinas_de_impresion en IX.
 231+ 8F44              ;       Puntero_de_impresion en HL.
 232+ 8F44              ;       Impacto/Dirección en BC.
 233+ 8F44
 234+ 8F44 CD 7B 8F     18 call Almacena_disparo
 235+ 8F47 18 22            jr 6F                                               ; RET.
 236+ 8F49
 237+ 8F49              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F49
 239+ 8F49 28 11        3 jr z,5F
 240+ 8F4B
 241+ 8F4B              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F4B              ;
 243+ 8F4B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F4B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F4B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F4B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F4B
 248+ 8F4B              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F4B              ;	   ""        ""       "f9", B="1"
 250+ 8F4B              ;	   ""        ""       "fb", B="2"
 251+ 8F4B              ; 	   ""        ""       "fb", B="3"
 252+ 8F4B
 253+ 8F4B 2A A5 89     	ld hl,(Posicion_actual)
 254+ 8F4E CD 72 96     	call NextScan
 255+ 8F51
 256+ 8F51              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F51              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F51              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F51              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F51
 261+ 8F51 CD 73 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F54
 263+ 8F54              ; 	No se produce impacto. B="$80"
 264+ 8F54              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F54
 266+ 8F54 01 80 80         ld bc,$8080
 267+ 8F57
 268+ 8F57              ; 	LLegados a este punto tendremos:
 269+ 8F57              ;
 270+ 8F57              ;       Puntero_objeto_disparo en IY.
 271+ 8F57              ;       Rutinas_de_impresion en IX.
 272+ 8F57              ;       Puntero_de_impresion en HL.
 273+ 8F57              ;       Impacto/Dirección en BC.
 274+ 8F57
 275+ 8F57 CD 7B 8F         call Almacena_disparo
 276+ 8F5A 18 0F            jr 6F                                           ; RET.
 277+ 8F5C
 278+ 8F5C              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F5C              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F5C              ;
 281+ 8F5C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F5C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F5C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F5C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F5C
 286+ 8F5C 2A A5 89     5 ld hl,(Posicion_actual)
 287+ 8F5F CD 72 96     	call NextScan
 288+ 8F62
 289+ 8F62              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F62              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F62              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F62              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F62
 294+ 8F62 CD 6C 8F         call Ajusta_disparo_parte_derecha
 295+ 8F65
 296+ 8F65              ; 	No se produce impacto. B="$80"
 297+ 8F65              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F65
 299+ 8F65 01 80 80     15 ld bc,$8080
 300+ 8F68
 301+ 8F68              ; 	LLegados a este punto tendremos:
 302+ 8F68              ;
 303+ 8F68              ;       Puntero_objeto_disparo en IY.
 304+ 8F68              ;       Rutinas_de_impresion en IX.
 305+ 8F68              ;       Puntero_de_impresion en HL.
 306+ 8F68              ;       Impacto/Dirección en BC.
 307+ 8F68
 308+ 8F68 CD 7B 8F         call Almacena_disparo
 309+ 8F6B
 310+ 8F6B C9           6 ret
 311+ 8F6C
 312+ 8F6C              ; ----------------------------------------------------------------
 313+ 8F6C              ;
 314+ 8F6C              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F6C              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F6C              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F6C
 318+ 8F6C 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F6D FE 02            cp 2
 320+ 8F6F 38 01            jr c,1F
 321+ 8F71 23               inc hl
 322+ 8F72 C9           1 ret
 323+ 8F73
 324+ 8F73 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F74 FE 01        	cp 1
 326+ 8F76 20 01        	jr nz,1F
 327+ 8F78 2B           	dec hl
 328+ 8F79 2B           1 dec hl
 329+ 8F7A C9               ret
 330+ 8F7B
 331+ 8F7B              ; ----------------------------------------------------------------
 332+ 8F7B              ;
 333+ 8F7B              ;   25/02/23
 334+ 8F7B              ;
 335+ 8F7B              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F7B              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F7B              ;
 338+ 8F7B              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F7B              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F7B
 341+ 8F7B              Almacena_disparo
 342+ 8F7B
 343+ 8F7B E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F7C F1               pop af
 345+ 8F7D 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F7E
 347+ 8F7E 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F7F E6 01            and 1
 349+ 8F81 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F83              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F83              ; 	Dispara AMADEUS.
 352+ 8F83
 353+ 8F83              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F83              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F83              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F83              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F83
 358+ 8F83 C5               push bc
 359+ 8F84 01 00 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F87 2A 16 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F8A A7               and a
 362+ 8F8B ED 42            sbc hl,bc
 363+ 8F8D CC 0B 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F90 C1               pop bc
 365+ 8F91 28 54            jr z,4F
 366+ 8F93
 367+ 8F93 2A 16 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F96 23               inc hl
 369+ 8F97 23               inc hl
 370+ 8F98 22 16 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F9B              ;                                                   ; _ Disparo_(+1).
 372+ 8F9B 18 18            jr 2F
 373+ 8F9D
 374+ 8F9D              ; Dispara una entidad.
 375+ 8F9D
 376+ 8F9D C5           1 push bc
 377+ 8F9E 01 28 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FA1 2A 14 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FA4 A7               and a
 380+ 8FA5 ED 42            sbc hl,bc
 381+ 8FA7 CC 04 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FAA C1               pop bc
 383+ 8FAB 28 3A            jr z,4F
 384+ 8FAD
 385+ 8FAD 2A 14 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FB0 23               inc hl
 387+ 8FB1 23               inc hl
 388+ 8FB2 22 14 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FB5              ;                                                   ; _ Disparo_(+1).
 390+ 8FB5 CD 46 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FB8              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FB8              ;
 393+ 8FB8              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FB8              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FB8              ;                                                     Puntero_de_impresion en HL.
 396+ 8FB8              ;                                                     Impacto/Dirección en BC.
 397+ 8FB8
 398+ 8FB8 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FB9 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FBA 23               inc hl                                          ; _ al siguiente.
 401+ 8FBB A7               and a
 402+ 8FBC 20 C0            jr nz,3B
 403+ 8FBE
 404+ 8FBE 08               ex af,af
 405+ 8FBF ED 73 F7 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8FC3 F9               ld sp,hl
 407+ 8FC4
 408+ 8FC4 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8FC6 F5               push af                                         ; Puntero de impresión.
 410+ 8FC7 FD E5            push iy                                         ; Puntero objeto.
 411+ 8FC9 C5               push bc                                         ; Control.
 412+ 8FCA
 413+ 8FCA ED 7B F7 89      ld sp,(Stack)
 414+ 8FCE
 415+ 8FCE              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8FCE
 417+ 8FCE 21 E6 89     	ld hl,Ctrl_1
 418+ 8FD1 CB C6        	set 0,(hl)
 419+ 8FD3
 420+ 8FD3 DD E5        	push ix
 421+ 8FD5 E1               pop hl
 422+ 8FD6 F5               push af
 423+ 8FD7 DD E1            pop ix
 424+ 8FD9
 425+ 8FD9 CD A0 7F     	call Guarda_foto_registros
 426+ 8FDC
 427+ 8FDC 21 E6 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FDF CB 86        	res 0,(hl)
 429+ 8FE1
 430+ 8FE1              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FE1              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FE1
 433+ 8FE1 CD 0B 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FE4 CD 04 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 8FE7
 436+ 8FE7 C9           4 ret
 437+ 8FE8
 438+ 8FE8              ; ----------------------------------------------------------------
 439+ 8FE8              ;
 440+ 8FE8              ;   4/3/23
 441+ 8FE8              ;
 442+ 8FE8              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FE8              ;   _ al generarse el disparo.
 444+ 8FE8              ;
 445+ 8FE8              ;       "$80" ..... No se produce colisión.
 446+ 8FE8              ;       "$81" ..... Se produce colisión.
 447+ 8FE8              ;
 448+ 8FE8              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FE8              ;         _ que forman el disparo.
 450+ 8FE8
 451+ 8FE8
 452+ 8FE8              Comprueba_Colision
 453+ 8FE8
 454+ 8FE8              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FE8
 456+ 8FE8 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FEA E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FEB
 459+ 8FEB CD 21 90         call Modifica_H_Velocidad_disparo
 460+ 8FEE
 461+ 8FEE 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FEF FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FF1 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FF3
 465+ 8FF3 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FF5 CD 11 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FF8
 468+ 8FF8 7B               ld a,e
 469+ 8FF9 E6 01            and 1
 470+ 8FFB 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FFD              ;                                                  ; _ para activar IMPACTO.
 472+ 8FFD E1               pop hl
 473+ 8FFE E5               push hl
 474+ 8FFF CD 72 96         call NextScan
 475+ 9002
 476+ 9002 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9003 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9005 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9007              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9007 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9009 CD 11 90         call Bucle_2
 482+ 900C
 483+ 900C 43           1 ld b,e
 484+ 900D E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 900E FD E1            pop iy
 486+ 9010 C9               ret
 487+ 9011
 488+ 9011              ; ---------- ----------
 489+ 9011
 490+ 9011 06 02        Bucle_2 ld b,2
 491+ 9013 FD 7E 00     2 ld a,(iy)
 492+ 9016 A6               and (hl)
 493+ 9017 28 02            jr z,1F
 494+ 9019 1E 81            ld e,$81
 495+ 901B 23           1 inc hl
 496+ 901C FD 23            inc iy
 497+ 901E 10 F3            djnz 2B
 498+ 9020 C9               ret
 499+ 9021
 500+ 9021              ; ---------- ----------
 501+ 9021              ;
 502+ 9021              ;   21/7/23
 503+ 9021
 504+ 9021              Modifica_H_Velocidad_disparo
 505+ 9021
 506+ 9021 3A 25 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9024 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9026 D0               ret nc                                         ; _ incrementamos H.
 509+ 9027 24               inc h
 510+ 9028
 511+ 9028 C9               ret
 512+ 9029
 513+ 9029              ; -------------------------------------------------------------------------------------------------------------
 514+ 9029              ;
 515+ 9029              ;   11/04/23
 516+ 9029              ;
 517+ 9029              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9029              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9029              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9029              ;
 521+ 9029              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 9029
 523+ 9029              Compara_coordenadas_X
 524+ 9029
 525+ 9029              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9029              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9029
 528+ 9029              ; Preparamos registros:
 529+ 9029
 530+ 9029 21 A9 89         ld hl,Filas+6
 531+ 902C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 902D 23               inc hl
 533+ 902E 23               inc hl
 534+ 902F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9030 43               ld b,e
 536+ 9031
 537+ 9031 21 B7 89         ld hl,Filas+20
 538+ 9034 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9035 21 20 8A         ld hl,Coordenadas_X_Entidad
 540+ 9038 CD 54 92         call Guarda_coordenadas_X
 541+ 903B
 542+ 903B              ; Preparamos registros:
 543+ 903B
 544+ 903B 21 9A 85         ld hl,Amadeus_db+6
 545+ 903E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 903F 23               inc hl
 547+ 9040 23               inc hl
 548+ 9041 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9042 7B               ld a,e
 550+ 9043 08               ex af,af'
 551+ 9044 21 A8 85         ld hl,Amadeus_db+20
 552+ 9047 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 9048 21 1D 8A         ld hl,Coordenadas_X_Amadeus
 554+ 904B CD 54 92         call Guarda_coordenadas_X
 555+ 904E
 556+ 904E              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 904E              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 904E
 559+ 904E 04               inc b
 560+ 904F 05               dec b
 561+ 9050 28 04            jr z,1F
 562+ 9052 06 03            ld b,3
 563+ 9054 18 02            jr 2F
 564+ 9056 06 02        1 ld b,2
 565+ 9058 08           2 ex af,af'
 566+ 9059 3C               inc a
 567+ 905A 3D               dec a
 568+ 905B 28 04            jr z,5F
 569+ 905D 0E 03            ld c,3
 570+ 905F 18 02            jr 6F
 571+ 9061 0E 02        5 ld c,2
 572+ 9063 79           6 ld a,c
 573+ 9064 08               ex af,af'
 574+ 9065 11 20 8A         ld de,Coordenadas_X_Entidad
 575+ 9068 1A           4 ld a,(de)
 576+ 9069 21 1D 8A         ld hl,Coordenadas_X_Amadeus
 577+ 906C BE           3 cp (hl)
 578+ 906D 28 0E            jr z,7F
 579+ 906F 23               inc hl
 580+ 9070 0D               dec c
 581+ 9071 20 F9            jr nz,3B
 582+ 9073 13               inc de
 583+ 9074 08               ex af,af'
 584+ 9075 4F               ld c,a
 585+ 9076 08               ex af,af'
 586+ 9077 10 EF            djnz 4B
 587+ 9079
 588+ 9079              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9079
 590+ 9079 CD 90 92     8 call Limpia_Coordenadas_X
 591+ 907C C9               ret
 592+ 907D
 593+ 907D 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 907F 32 BC 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9082 21 18 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9085 CB D6            set 2,(hl)
 597+ 9087 18 F0            jr 8B
 598+ 9089
 599+ 9089              ; -----------------------------------------------------------------------
 600+ 9089              ;
 601+ 9089              ;   17/04/23
 602+ 9089              ;
 603+ 9089
 604+ 9089              Detecta_colision_nave_entidad
 605+ 9089
 606+ 9089              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9089
 608+ 9089 2A A5 89         ld hl,(Posicion_actual)
 609+ 908C CD CD 95         call Calcula_puntero_de_impresion
 610+ 908F
 611+ 908F              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 908F              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 908F
 614+ 908F DD E5            push ix
 615+ 9091 E1               pop hl
 616+ 9092 E5               push hl
 617+ 9093
 618+ 9093              ; ----- ----- -----
 619+ 9093 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9095 06 0A            ld b,10
 621+ 9097 CD C7 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 909A 7B               ld a,e
 623+ 909B FE 05            cp 5
 624+ 909D 38 0E            jr c,3F
 625+ 909F
 626+ 909F              ; LLegados a este punto:
 627+ 909F              ;
 628+ 909F              ;   HAY COLISIÓN !!!!!.
 629+ 909F              ;
 630+ 909F              ;   .db (Impacto) de Amadeus a "1".
 631+ 909F              ;   SET el bit3 de (Impacto2).
 632+ 909F              ;
 633+ 909F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 909F
 635+ 909F 21 AD 85         ld hl,Amadeus_db+25
 636+ 90A2 36 01            ld (hl),1
 637+ 90A4 21 18 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90A7 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90A9 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90AB 18 18            jr 1F
 641+ 90AD
 642+ 90AD              ; -----
 643+ 90AD
 644+ 90AD E1           3 pop hl
 645+ 90AE CD 72 96         call NextScan
 646+ 90B1 E5               push hl
 647+ 90B2 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90B3 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90B5 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90B7 30 0C            jr nc,1F
 651+ 90B9              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90B9 10 DC            djnz 2B
 653+ 90BB
 654+ 90BB              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90BB
 656+ 90BB              ; LLegados a este punto:
 657+ 90BB              ;
 658+ 90BB              ;   NO HAY COLISIÓN !!!!!.
 659+ 90BB              ;
 660+ 90BB              ;   .db (Impacto) de Amadeus a "0".
 661+ 90BB              ;   RES el bit2 de (Impacto2).
 662+ 90BB              ;
 663+ 90BB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90BB              ;   Lo colocamos a "0".
 665+ 90BB
 666+ 90BB 21 18 8A         ld hl,Impacto2
 667+ 90BE CB 96            res 2,(hl)
 668+ 90C0 2A 19 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 90C3 36 00            ld (hl),0
 670+ 90C5
 671+ 90C5 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 90C6 C9               ret
 673+ 90C7
 674+ 90C7               ; ---------- ----------
 675+ 90C7
 676+ 90C7 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 90C8 3A A4 89         ld a,(Columns)
 678+ 90CB 47               ld b,a
 679+ 90CC FD 7E 00     2 ld a,(iy)
 680+ 90CF BE               cp (hl)
 681+ 90D0 28 01            jr z,1F
 682+ 90D2
 683+ 90D2 1C               inc e
 684+ 90D3
 685+ 90D3 23           1 inc hl
 686+ 90D4 FD 23            inc iy
 687+ 90D6 10 F4            djnz 2B
 688+ 90D8 C1               pop bc
 689+ 90D9 C9               ret
 690+ 90DA
 691+ 90DA              ; -------------------------------------------------------------------------------------------------------------
 692+ 90DA              ;
 693+ 90DA              ;   13/03/23
 694+ 90DA              ;
 695+ 90DA              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90DA              ;
 697+ 90DA              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90DA
 699+ 90DA 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90DD 7E               ld a,(hl)
 701+ 90DE A7               and a
 702+ 90DF C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90E0
 704+ 90E0 44               ld b,h
 705+ 90E1 4D               ld c,l
 706+ 90E2 2A FD 89         ld hl,(Stack_snapshot_disparos)
 707+ 90E5 E5               push hl
 708+ 90E6 A7               and a
 709+ 90E7 ED 42            sbc hl,bc
 710+ 90E9 E5               push hl
 711+ 90EA C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90EB
 713+ 90EB E1               pop hl
 714+ 90EC 54               ld d,h
 715+ 90ED 5D               ld e,l
 716+ 90EE 1B               dec de
 717+ 90EF ED B8            lddr                                                ; Limpiamos.
 718+ 90F1
 719+ 90F1 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 90F4 22 FD 89         ld (Stack_snapshot_disparos),hl
 721+ 90F7
 722+ 90F7 C9               ret
 723+ 90F8
 724+ 90F8              ; -------------------------------------------------------------------------------------------------------------
 725+ 90F8              ;
 726+ 90F8              ;   18/07/23
 727+ 90F8              ;
 728+ 90F8
 729+ 90F8              Motor_de_disparos
 730+ 90F8
 731+ 90F8              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90F8
 733+ 90F8 01 12 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90FB 2A 16 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90FE
 736+ 90FE CD 46 8D     2 call Extrae_address
 737+ 9101 7E               ld a,(hl)
 738+ 9102 A7               and a
 739+ 9103 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9105
 741+ 9105              ; ----- ----- ----- ----- ----- -----
 742+ 9105
 743+ 9105 C5               push bc
 744+ 9106 CD CA 91         call foto_disparo_a_borrar
 745+ 9109
 746+ 9109              ; Existe colisión con este disparo???
 747+ 9109
 748+ 9109 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 910A 7E               ld a,(hl)
 750+ 910B 2B               dec hl
 751+ 910C E6 01            and 1
 752+ 910E 28 1D            jr z,9F
 753+ 9110
 754+ 9110              ;   En este punto:
 755+ 9110              ;
 756+ 9110              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9110              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9110              ;   _con la entidad).
 759+ 9110              ;
 760+ 9110              ;   Disparo_2A defw 0                                ; Control.
 761+ 9110              ;    defw 0                                          ; Puntero objeto.
 762+ 9110              ;    defw 0                                          ; Puntero de impresión.
 763+ 9110              ;    defw 0                                          ; Rutina de impresión.
 764+ 9110
 765+ 9110 E5               push hl
 766+ 9111
 767+ 9111 06 04            ld b,4
 768+ 9113 23           19 inc hl
 769+ 9114 10 FD            djnz 19B
 770+ 9116
 771+ 9116 CD 46 8D         call Extrae_address
 772+ 9119 CD F8 9C         call Genera_coordenadas_disparo
 773+ 911C
 774+ 911C              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 911C
 776+ 911C 21 1B 8A         ld hl,Coordenadas_disparo_certero
 777+ 911F 72               ld (hl),d
 778+ 9120 23               inc hl
 779+ 9121 73               ld (hl),e
 780+ 9122
 781+ 9122              ; Elimino el disparo de la base de datos.
 782+ 9122
 783+ 9122 E1               pop hl
 784+ 9123 CD 49 92         call Elimina_disparo_de_base_de_datos
 785+ 9126 21 18 8A         ld hl,Impacto2
 786+ 9129 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 912B
 788+ 912B 18 06            jr 11F
 789+ 912D
 790+ 912D CD F3 91     9 call Mueve_disparo
 791+ 9130 CD CA 91         call foto_disparo_a_borrar
 792+ 9133
 793+ 9133 C1           11 pop bc
 794+ 9134 18 04            jr 7F
 795+ 9136
 796+ 9136              ; ----- ----- ----- ----- ----- -----
 797+ 9136
 798+ 9136 ED 42        1 sbc hl,bc
 799+ 9138 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 913A
 801+ 913A 2A 16 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 913D 23               inc hl
 803+ 913E 23               inc hl
 804+ 913F 22 16 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9142 18 BA            jr 2B
 806+ 9144
 807+ 9144 CD 0B 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 9147              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 9147
 810+ 9147              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 9147
 812+ 9147 01 7A 85         ld bc,Disparo_11
 813+ 914A 2A 14 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 914D
 815+ 914D CD 46 8D     5 call Extrae_address
 816+ 9150 7E               ld a,(hl)
 817+ 9151 A7               and a
 818+ 9152 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9154
 820+ 9154              ; ----- ----- ----- ----- ----- -----
 821+ 9154
 822+ 9154 C5               push bc
 823+ 9155 CD CA 91         call foto_disparo_a_borrar
 824+ 9158
 825+ 9158              ; Existe colisión con este disparo???
 826+ 9158
 827+ 9158 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9159 7E               ld a,(hl)
 829+ 915A 2B               dec hl
 830+ 915B E6 01            and 1
 831+ 915D 28 4D            jr z,10F
 832+ 915F
 833+ 915F              ;! La colisión se produce con Amadeus???
 834+ 915F              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 915F
 836+ 915F E5               push hl
 837+ 9160
 838+ 9160 06 04            ld b,4
 839+ 9162 23           16 inc hl
 840+ 9163 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9165
 842+ 9165 CD 46 8D         call Extrae_address
 843+ 9168 CD F8 9C         call Genera_coordenadas_disparo
 844+ 916B
 845+ 916B 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 916C FE 16            cp $16
 847+ 916E 38 2A            jr c,15F
 848+ 9170
 849+ 9170
 850+ 9170              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9170
 852+ 9170 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9171
 854+ 9171              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9171
 856+ 9171
 857+ 9171 2A 23 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9174
 859+ 9174              ; Coordenada X de Amadeus en D.
 860+ 9174
 861+ 9174 7D               ld a,l
 862+ 9175 E6 1F            and $1F
 863+ 9177 57               ld d,a
 864+ 9178
 865+ 9178 21 9C 85         ld hl,Amadeus_db+8
 866+ 917B 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 917C
 868+ 917C 21 1D 8A         ld hl,Coordenadas_X_Amadeus
 869+ 917F CD 54 92         call Guarda_coordenadas_X
 870+ 9182
 871+ 9182 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9183
 873+ 9183              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9183
 875+ 9183 06 02            ld b,2
 876+ 9185 C5           20 push bc
 877+ 9186
 878+ 9186 06 03            ld b,3
 879+ 9188 21 1D 8A         ld hl,Coordenadas_X_Amadeus
 880+ 918B 7E           18 ld a,(hl)
 881+ 918C BA               cp d
 882+ 918D 20 04            jr nz,17F
 883+ 918F
 884+ 918F              ;! Colisión Amadeus !!!!!!!!!!
 885+ 918F
 886+ 918F C1               pop bc
 887+ 9190 E1               pop hl
 888+ 9191 18 0D            jr 14F
 889+ 9193
 890+ 9193 23           17 inc hl
 891+ 9194 10 F5            djnz 18B
 892+ 9196
 893+ 9196 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9197
 895+ 9197 C1               pop bc
 896+ 9198 10 EB            djnz 20B
 897+ 919A
 898+ 919A
 899+ 919A              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 919A              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 919A
 902+ 919A E1           15 pop hl
 903+ 919B 23               inc hl
 904+ 919C 35               dec (hl)
 905+ 919D 2B               dec hl
 906+ 919E 18 0C            jr 10F
 907+ 91A0
 908+ 91A0              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91A0              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91A0
 911+ 91A0 E5           14 push hl
 912+ 91A1 CD 49 92         call Elimina_disparo_de_base_de_datos
 913+ 91A4 21 18 8A         ld hl,Impacto2
 914+ 91A7 CB CE            set 1,(hl)
 915+ 91A9 E1               pop hl
 916+ 91AA 18 06            jr 12F
 917+ 91AC
 918+ 91AC              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91AC
 920+ 91AC CD F3 91     10 call Mueve_disparo
 921+ 91AF CD CA 91         call foto_disparo_a_borrar
 922+ 91B2 C1           12 pop bc
 923+ 91B3
 924+ 91B3 18 04            jr 8F
 925+ 91B5
 926+ 91B5              ; ----- ----- ----- ----- ----- -----
 927+ 91B5
 928+ 91B5 ED 42        4 sbc hl,bc
 929+ 91B7 28 0A            jr z,6F
 930+ 91B9
 931+ 91B9 2A 14 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 91BC 23               inc hl
 933+ 91BD 23               inc hl
 934+ 91BE 22 14 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 91C1 18 8A            jr 5B
 936+ 91C3
 937+ 91C3 CD 04 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 91C6 CD 90 92         call Limpia_Coordenadas_X
 939+ 91C9 C9               ret
 940+ 91CA
 941+ 91CA              ; ------------------------------------------------------------------
 942+ 91CA
 943+ 91CA              foto_disparo_a_borrar
 944+ 91CA
 945+ 91CA 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 91CB A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 91CC C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 91CD
 949+ 91CD E5               push hl
 950+ 91CE 23               inc hl
 951+ 91CF 23               inc hl
 952+ 91D0 ED 73 F7 89      ld (Stack),sp
 953+ 91D4 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 91D5 FD E1            pop iy
 955+ 91D7 DD E1            pop ix
 956+ 91D9 E1               pop hl
 957+ 91DA ED 7B F7 89      ld sp,(Stack)
 958+ 91DE 3A E6 89         ld a,(Ctrl_1)
 959+ 91E1 CB C7            set 0,a
 960+ 91E3 32 E6 89         ld (Ctrl_1),a
 961+ 91E6 CD A0 7F         call Guarda_foto_registros
 962+ 91E9 3A E6 89         ld a,(Ctrl_1)
 963+ 91EC CB 87            res 0,a
 964+ 91EE 32 E6 89         ld (Ctrl_1),a
 965+ 91F1 E1               pop hl
 966+ 91F2 C9               ret
 967+ 91F3
 968+ 91F3              ;---------------------------------------------------
 969+ 91F3              ;
 970+ 91F3              ;   18/07/23
 971+ 91F3              ;
 972+ 91F3
 973+ 91F3              Mueve_disparo
 974+ 91F3
 975+ 91F3              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91F3              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91F3              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91F3
 979+ 91F3 E5               push hl
 980+ 91F4
 981+ 91F4 7E               ld a,(hl)
 982+ 91F5
 983+ 91F5 06 04            ld b,4
 984+ 91F7 23           1 inc hl
 985+ 91F8 10 FD            djnz 1B
 986+ 91FA
 987+ 91FA              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91FA
 989+ 91FA CD 46 8D         call Extrae_address
 990+ 91FD
 991+ 91FD E6 01            and 1
 992+ 91FF 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9201
 994+ 9201              ; Disparo hacia arriba, (Amadeus).
 995+ 9201
 996+ 9201              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9201              ; _ de la dificultad.
 998+ 9201
 999+ 9201 CD 81 96         call PreviousScan
1000+ 9204 CD 81 96         call PreviousScan
1001+ 9207 CD 81 96         call PreviousScan
1002+ 920A CD 81 96         call PreviousScan
1003+ 920D
1004+ 920D              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 920D
1006+ 920D 7C               ld a,h
1007+ 920E FE 40            cp $40
1008+ 9210 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9212
1010+ 9212              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9212
1012+ 9212 EB               ex de,hl
1013+ 9213 06 04            ld b,4
1014+ 9215 2B           6 dec hl
1015+ 9216 10 FD            djnz 6B
1016+ 9218
1017+ 9218 CD 49 92         call Elimina_disparo_de_base_de_datos
1018+ 921B E1               pop hl
1019+ 921C 18 10            jr 7F
1020+ 921E
1021+ 921E              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 921E              ; HL contiene el puntero de impresión del disparo.
1023+ 921E              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 921E
1025+ 921E D5           3 push de
1026+ 921F C5               push bc
1027+ 9220
1028+ 9220 CD E8 8F         call Comprueba_Colision
1029+ 9223
1030+ 9223              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9223
1032+ 9223 78               ld a,b
1033+ 9224
1034+ 9224 C1               pop bc
1035+ 9225 D1               pop de
1036+ 9226
1037+ 9226 EB               ex de,hl
1038+ 9227
1039+ 9227 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 9228 23               inc hl                                      ; _ movimiento.
1041+ 9229 72               ld (hl),d
1042+ 922A
1043+ 922A E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 922B
1045+ 922B 23               inc hl                                      ; _ en curso.
1046+ 922C 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 922D 2B               dec hl
1048+ 922E
1049+ 922E C9           7 ret
1050+ 922F
1051+ 922F              ; Disparo hacia abajo, (Entidad).
1052+ 922F
1053+ 922F 3A 25 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 9232 47               ld b,a
1055+ 9233
1056+ 9233 CD 72 96     4 call NextScan
1057+ 9236 10 FB            djnz 4B
1058+ 9238
1059+ 9238              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 9238
1061+ 9238 7C               ld a,h
1062+ 9239 FE 58            cp $58
1063+ 923B 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 923D
1065+ 923D EB               ex de,hl
1066+ 923E 06 04            ld b,4
1067+ 9240 2B           5 dec hl
1068+ 9241 10 FD            djnz 5B
1069+ 9243
1070+ 9243 CD 49 92         call Elimina_disparo_de_base_de_datos
1071+ 9246 E1               pop hl
1072+ 9247 18 E5            jr 7B
1073+ 9249
1074+ 9249              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9249
1076+ 9249 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 924C AF               xor a
1078+ 924D 77               ld (hl),a
1079+ 924E 54               ld d,h
1080+ 924F 5D               ld e,l
1081+ 9250 13               inc de
1082+ 9251 ED B0            ldir
1083+ 9253 C9               ret
1084+ 9254
1085+ 9254              ; -----------------------------------------------------------------
1086+ 9254              ;
1087+ 9254              ;   19/7/23
1088+ 9254              ;
1089+ 9254              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9254              ;
1091+ 9254              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9254              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9254              ;
1094+ 9254              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9254              ;
1096+ 9254              ;   INPUTS:
1097+ 9254              ;
1098+ 9254              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9254              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9254
1101+ 9254              ;   MODIFICA: A, HL, BC y DE.
1102+ 9254
1103+ 9254              Guarda_coordenadas_X
1104+ 9254
1105+ 9254 7B               ld a,e
1106+ 9255 A7               and a
1107+ 9256 20 04            jr nz,1F
1108+ 9258
1109+ 9258 06 02            ld b,2
1110+ 925A 18 02            jr 2F
1111+ 925C
1112+ 925C 06 03        1 ld b,3
1113+ 925E 72           2 ld (hl),d
1114+ 925F 23               inc hl
1115+ 9260 14               inc d
1116+ 9261 10 FB            djnz 2B
1117+ 9263
1118+ 9263 C9               ret
1119+ 9264
1120+ 9264              ; -----------------------------------------------------------------
1121+ 9264              ;
1122+ 9264              ;   12/04/23
1123+ 9264              ;
1124+ 9264
1125+ 9264 3A 18 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 9267 A7               and a
1127+ 9268 C8               ret z
1128+ 9269
1129+ 9269 FE 04            cp 4
1130+ 926B 20 09            jr nz,1F
1131+ 926D
1132+ 926D
1133+ 926D              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 926D
1135+ 926D CD 89 90         call Detecta_colision_nave_entidad
1136+ 9270
1137+ 9270 21 18 8A         ld hl,Impacto2
1138+ 9273 CB 5E            bit 3,(hl)
1139+ 9275 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9276
1141+ 9276              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9276              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9276
1144+ 9276 21 18 8A     1 ld hl,Impacto2
1145+ 9279 CB 4E            bit 1,(hl)
1146+ 927B 28 07            jr z,2F
1147+ 927D
1148+ 927D 21 AD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9280 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9282 18 0B            jr 3F
1151+ 9284
1152+ 9284 21 18 8A     2 ld hl,Impacto2
1153+ 9287 CB 46            bit 0,(hl)
1154+ 9289 C8               ret z
1155+ 928A
1156+ 928A              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 928A
1158+ 928A 21 E6 89         ld hl,Ctrl_1
1159+ 928D CB D6            set 2,(hl)
1160+ 928F
1161+ 928F C9           3 ret
1162+ 9290
1163+ 9290              ; -----------------------------------------------------------------
1164+ 9290              ;
1165+ 9290              ;   19/7/23
1166+ 9290              ;
1167+ 9290              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9290
1169+ 9290 AF           Limpia_Coordenadas_X xor a
1170+ 9291 06 06            ld b,6
1171+ 9293 21 1D 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9296 77           1 ld (hl),a
1173+ 9297 23               inc hl
1174+ 9298 10 FC            djnz 1B
1175+ 929A C9               ret
1176+ 929B
1177+ 929B              ; -----------------------------------------------------------------
1178+ 929B              ;
1179+ 929B              ;   25/04/23
1180+ 929B              ;
1181+ 929B
1182+ 929B              Determina_resultado_comparativa
1183+ 929B
1184+ 929B              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 929B              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 929B              ;
1187+ 929B              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 929B              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 929B              ;
1190+ 929B              ;   SBC HL,DE
1191+ 929B
1192+ 929B              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 929B              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 929B
1195+ 929B              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 929B              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 929B
1198+ 929B
1199+ 929B 3A B7 89         ld a,(Cuad_objeto)
1200+ 929E FE 02            cp 2
1201+ 92A0 28 26            jr z,2F
1202+ 92A2 38 24            jr c,2F
1203+ 92A4
1204+ 92A4              ; Cuadrantes 3º y 4º
1205+ 92A4
1206+ 92A4 E6 01            and 1
1207+ 92A6 28 10            jr z,4F
1208+ 92A8
1209+ 92A8              ; Cuadrante 3º
1210+ 92A8
1211+ 92A8 7C               ld a,h
1212+ 92A9 06 00            ld b,0
1213+ 92AB
1214+ 92AB CD 36 93         call Compara_cositas_H3
1215+ 92AE
1216+ 92AE 04               inc b
1217+ 92AF 05               dec b
1218+ 92B0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92B1
1220+ 92B1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92B2 06 00            ld b,0
1222+ 92B4
1223+ 92B4 CD 48 93         call Compara_cositas_L3
1224+ 92B7 C9               ret
1225+ 92B8
1226+ 92B8              ; Cuadrante 4º
1227+ 92B8
1228+ 92B8 7C           4 ld a,h
1229+ 92B9 06 00            ld b,0
1230+ 92BB
1231+ 92BB CD 5A 93         call Compara_cositas_H4
1232+ 92BE
1233+ 92BE 04               inc b
1234+ 92BF 05               dec b
1235+ 92C0 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 92C1
1237+ 92C1 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 92C2 06 00            ld b,0
1239+ 92C4
1240+ 92C4 CD 70 93         call Compara_cositas_L4
1241+ 92C7 C9               ret
1242+ 92C8
1243+ 92C8              ; Cuadrantes 1º y 2º.
1244+ 92C8
1245+ 92C8 28 10        2 jr z,3F
1246+ 92CA
1247+ 92CA              ; 1er Cuadrante
1248+ 92CA
1249+ 92CA 7C               ld a,h
1250+ 92CB 06 00            ld b,0
1251+ 92CD
1252+ 92CD CD 0E 93         call Compara_cositas_H1
1253+ 92D0
1254+ 92D0 04               inc b
1255+ 92D1 05               dec b
1256+ 92D2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 92D3
1258+ 92D3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 92D4 06 00            ld b,0
1260+ 92D6
1261+ 92D6 CD 24 93         call Compara_cositas_L1
1262+ 92D9 C9               ret
1263+ 92DA
1264+ 92DA
1265+ 92DA              ; 2º Cuadrante
1266+ 92DA
1267+ 92DA 7C           3 ld a,h
1268+ 92DB 06 00            ld b,0
1269+ 92DD
1270+ 92DD CD EA 92         call Compara_cositas_H2
1271+ 92E0
1272+ 92E0 04               inc b
1273+ 92E1 05               dec b
1274+ 92E2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92E3
1276+ 92E3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92E4 06 00            ld b,0
1278+ 92E6
1279+ 92E6 CD FC 92         call Compara_cositas_L2
1280+ 92E9 C9               ret
1281+ 92EA
1282+ 92EA A7           Compara_cositas_H2 and a
1283+ 92EB 28 0D            jr z,1F
1284+ 92ED              ;    cp $fd
1285+ 92ED              ;    jr z,1F
1286+ 92ED              ;    cp $fe
1287+ 92ED              ;    jr z,1F
1288+ 92ED FE FF            cp $ff
1289+ 92EF 28 09            jr z,1F
1290+ 92F1 FE 01            cp $01
1291+ 92F3 28 05            jr z,1F
1292+ 92F5 FE 02            cp $02
1293+ 92F7 28 01            jr z,1F
1294+ 92F9 C0               ret nz
1295+ 92FA 04           1 inc b
1296+ 92FB C9               ret
1297+ 92FC
1298+ 92FC A7           Compara_cositas_L2 and a
1299+ 92FD 28 0D            jr z,1F
1300+ 92FF              ;    cp $fd
1301+ 92FF              ;    jr z,1F
1302+ 92FF FE FE            cp $fe
1303+ 9301 28 09            jr z,1F
1304+ 9303 FE FF            cp $ff
1305+ 9305 28 05            jr z,1F
1306+ 9307 FE 01            cp $01
1307+ 9309 28 01            jr z,1F
1308+ 930B              ;    cp $02
1309+ 930B              ;    jr z,1F
1310+ 930B C0               ret nz
1311+ 930C 04           1 inc b
1312+ 930D C9               ret
1313+ 930E
1314+ 930E A7           Compara_cositas_H1 and a
1315+ 930F 28 11            jr z,1F
1316+ 9311              ;    cp $fd
1317+ 9311              ;    jr z,1F
1318+ 9311              ;    cp $fe
1319+ 9311              ;    jr z,1F
1320+ 9311 FE FF            cp $ff
1321+ 9313 28 0D            jr z,1F
1322+ 9315 FE 01            cp $01
1323+ 9317 28 09            jr z,1F
1324+ 9319 FE 02            cp $02
1325+ 931B 28 05            jr z,1F
1326+ 931D FE 03            cp $03
1327+ 931F 28 01            jr z,1F
1328+ 9321 C0               ret nz
1329+ 9322 04           1 inc b
1330+ 9323 C9               ret
1331+ 9324
1332+ 9324 A7           Compara_cositas_L1 and a
1333+ 9325 28 0D            jr z,1F
1334+ 9327              ;    cp $fd
1335+ 9327              ;    jr z,1F
1336+ 9327              ;    cp $fe
1337+ 9327              ;    jr z,1F
1338+ 9327              ;    cp $ff
1339+ 9327              ;    jr z,1F
1340+ 9327 FE 01            cp $01
1341+ 9329 28 09            jr z,1F
1342+ 932B FE 02            cp $02
1343+ 932D 28 05            jr z,1F
1344+ 932F FE 03            cp $03
1345+ 9331 28 01            jr z,1F
1346+ 9333 C0               ret nz
1347+ 9334 04           1 inc b
1348+ 9335 C9               ret
1349+ 9336
1350+ 9336 A7           Compara_cositas_H3 and a
1351+ 9337 28 0D            jr z,1F
1352+ 9339              ;    cp $fd
1353+ 9339              ;    jr z,1F
1354+ 9339 FE FE            cp $fe
1355+ 933B 28 09            jr z,1F
1356+ 933D FE FF            cp $ff
1357+ 933F 28 05            jr z,1F
1358+ 9341 FE 01            cp $01
1359+ 9343 28 01            jr z,1F
1360+ 9345              ;    cp $02
1361+ 9345              ;    jr z,1F
1362+ 9345              ;    cp $03
1363+ 9345              ;    jr z,1F
1364+ 9345 C0               ret nz
1365+ 9346 04           1 inc b
1366+ 9347 C9               ret
1367+ 9348
1368+ 9348 A7           Compara_cositas_L3 and a
1369+ 9349 28 0D            jr z,1F
1370+ 934B              ;    cp $fd
1371+ 934B              ;    jr z,1F
1372+ 934B              ;    cp $fe
1373+ 934B              ;    jr z,1F
1374+ 934B              ;    cp $ff
1375+ 934B              ;    jr z,1F
1376+ 934B FE 01            cp $01
1377+ 934D 28 09            jr z,1F
1378+ 934F FE 02            cp $02
1379+ 9351 28 05            jr z,1F
1380+ 9353 FE 03            cp $03
1381+ 9355 28 01            jr z,1F
1382+ 9357 C0               ret nz
1383+ 9358 04           1 inc b
1384+ 9359 C9               ret
1385+ 935A
1386+ 935A A7           Compara_cositas_H4 and a
1387+ 935B 28 11            jr z,1F
1388+ 935D FE FD            cp $fd
1389+ 935F 28 0D            jr z,1F
1390+ 9361 FE FE            cp $fe
1391+ 9363 28 09            jr z,1F
1392+ 9365 FE FF            cp $ff
1393+ 9367 28 05            jr z,1F
1394+ 9369 FE 01            cp $01
1395+ 936B 28 01            jr z,1F
1396+ 936D              ;    cp $02
1397+ 936D              ;    jr z,1F
1398+ 936D              ;    cp $03
1399+ 936D              ;    jr z,1F
1400+ 936D C0               ret nz
1401+ 936E 04           1 inc b
1402+ 936F C9               ret
1403+ 9370
1404+ 9370 A7           Compara_cositas_L4 and a
1405+ 9371 28 0D            jr z,1F
1406+ 9373              ;    cp $fd
1407+ 9373              ;    jr z,1F
1408+ 9373 FE FE            cp $fe
1409+ 9375 28 09            jr z,1F
1410+ 9377 FE FF            cp $ff
1411+ 9379 28 05            jr z,1F
1412+ 937B FE 01            cp $01
1413+ 937D 28 01            jr z,1F
1414+ 937F              ;    cp $02
1415+ 937F              ;    jr z,1F
1416+ 937F              ;    cp $03
1417+ 937F              ;    jr z,1F
1418+ 937F C0               ret nz
1419+ 9380 04           1 inc b
1420+ 9381 C9               ret
# file closed: Disparo.asm
1354  9382              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9382              ; ******************************************************************************************************************************************************************************************
   2+ 9382              ;
   3+ 9382              ; 26/06/23
   4+ 9382              ;
   5+ 9382              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9382
   7+ 9382 CD 66 96     Draw call Prepara_draw
   8+ 9385 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9386 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9387 28 05        	jr z,2F
  11+ 9389
  12+ 9389 3A B7 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 938C 18 0C        	jr 1F
  14+ 938E
  15+ 938E 2A B5 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9391 22 A5 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9394 CD 23 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9397              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9397 CD 74 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 939A
  21+ 939A 3A D1 89     1 ld a,(Ctrl_0)
  22+ 939D CB 6F        	bit 5,a
  23+ 939F 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93A1
  25+ 93A1 CD B9 93     	call Comprueba_limite_horizontal
  26+ 93A4 CD 49 94     	call Comprueba_limite_vertical
  27+ 93A7
  28+ 93A7              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93A7              ; -----------------------
  30+ 93A7              ; -----------------------
  31+ 93A7              ; -----------------------
  32+ 93A7
  33+ 93A7 CD 96 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93AA CD CD 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93AD CD 2C 96     	call Define_rutina_de_impresion
  36+ 93B0
  37+ 93B0 3A D1 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93B3 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93B5 32 D1 89     	ld (Ctrl_0),a
  40+ 93B8
  41+ 93B8 C9           	ret
  42+ 93B9
  43+ 93B9              ; *******************************************************************************************************************************************************************************************
  44+ 93B9              ;	21/01/23
  45+ 93B9              ;
  46+ 93B9              ; 	Comprueba_limite_horizontal.
  47+ 93B9              ;
  48+ 93B9              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93B9              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93B9              ;
  51+ 93B9              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93B9              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93B9              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93B9              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93B9
  56+ 93B9
  57+ 93B9
  58+ 93B9 3A D1 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 93BC CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 93BE 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 93C0 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 93C2 32 D1 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 93C5 18 09            jr 6F
  64+ 93C7 CB 5F        1 bit 3,a
  65+ 93C9 28 0A            jr z,2F
  66+ 93CB E6 F7            and $f7
  67+ 93CD 32 D1 89         ld (Ctrl_0),a
  68+ 93D0 CD 23 95     6 call Inicializacion
  69+ 93D3 18 5B            jr 5F
  70+ 93D5 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 93D6
  72+ 93D6              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 93D6              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 93D6
  75+ 93D6 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 93D7 2A E1 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 93DA CD 42 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 93DD 67           	ld h,a
  79+ 93DE EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 93DF CD 42 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 93E2 67           	ld h,a
  82+ 93E3 A7           	and a
  83+ 93E4 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 93E6 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 93E7 3A B7 89     	ld a,(Cuad_objeto)
  86+ 93EA FE 02        	cp 2
  87+ 93EC 38 1E        	jr c,3F
  88+ 93EE 28 1C        	jr z,3F
  89+ 93F0 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93F1 28 23            jr z,7F
  91+ 93F3 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93F5 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93F7 E1           	pop hl
  94+ 93F8
  95+ 93F8              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93F8              ; _para indicar con E="2" en caso necesario.
  97+ 93F8
  98+ 93F8 E5               push hl
  99+ 93F9 C5               push bc
 100+ 93FA CD 42 99     	call calcula_tercio
 101+ 93FD FE 01        	cp 1
 102+ 93FF 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9401 CD 31 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9404 28 26            jr z,9F
 105+ 9406 38 24            jr c,9F
 106+ 9408 1E 00        11 ld e,0
 107+ 940A 18 22            jr 8F
 108+ 940C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 940D 28 07        	jr z, 7F
 110+ 940F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9411 1E 00         	ld e,0
 112+ 9413 E1           	pop hl
 113+ 9414 18 04        	jr 4F
 114+ 9416 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9418 18 15            jr 10F
 116+ 941A
 117+ 941A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 941A              ; _para indicar con E="2" en caso necesario.
 119+ 941A
 120+ 941A E5           4 push hl
 121+ 941B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 941C CD 42 99     	call calcula_tercio
 123+ 941F FE 01        	cp 1
 124+ 9421 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9423 CD 31 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9426 28 04            jr z,9F
 127+ 9428 30 02            jr nc,9F
 128+ 942A 18 02        	jr 8F
 129+ 942C 1E 02        9 ld e,2
 130+ 942E C1           8 pop bc
 131+ 942F E1           10 pop hl
 132+ 9430 C9           5 ret
 133+ 9431
 134+ 9431              ; --------------------
 135+ 9431              ;
 136+ 9431              ; 25/08/22
 137+ 9431
 138+ 9431 CD 42 99     Comprueba_centro call calcula_tercio
 139+ 9434 67               ld h,a
 140+ 9435 08           	ex af,af
 141+ 9436 FE 02        	cp 2
 142+ 9438 38 07        	jr c,1F
 143+ 943A 28 05        	jr z,1F
 144+ 943C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 943F 18 03        	jr 2F
 146+ 9441 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9444 08           2 ex af,af
 148+ 9445 A7               and a
 149+ 9446 ED 42            sbc hl,bc
 150+ 9448 C9               ret
 151+ 9449
 152+ 9449              ; *********************************************************************************************************************************************************************************************
 153+ 9449              ;
 154+ 9449              ;   16/8/22
 155+ 9449              ;
 156+ 9449              ;	Comprueba_limite_vertical
 157+ 9449              ;
 158+ 9449              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9449              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9449              ;
 161+ 9449
 162+ 9449 2A A5 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 944C 7D           	ld a,l
 164+ 944D E6 1F        	and $1F
 165+ 944F 57           	ld d,a
 166+ 9450 3A E3 89     	ld a,(Limite_vertical)
 167+ 9453 BA           	cp d 											; Límite - Posición.
 168+ 9454 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9455 3A B7 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9458 CB 47        	bit 0,a
 171+ 945A 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 945C
 173+ 945C              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 945C
 175+ 945C 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 945D 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 945F
 178+ 945F              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 945F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 945F
 181+ 945F 3A A9 89         ld a,(Coordenada_X)
 182+ 9462 16 0F            ld d,Centro_izquierda
 183+ 9464 A7               and a
 184+ 9465 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9466 28 1E            jr z,3F
 186+ 9468 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 946A              ;                                                    ; _salimos sin modificar nada.
 188+ 946A 18 0E            jr 2F
 189+ 946C 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 946D 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 946F
 192+ 946F              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 946F              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 946F
 195+ 946F 3A A9 89         ld a,(Coordenada_X)
 196+ 9472 16 10            ld d,Centro_derecha
 197+ 9474 A7               and a
 198+ 9475 92               sub d
 199+ 9476 28 0E            jr z,3F
 200+ 9478 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 947A              ;                                                    ; _salimos sin modificar nada.
 202+ 947A CB 43        2 bit 0,e
 203+ 947C 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 947E C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 947F CD 13 95         call Modificaccionne
 206+ 9482 C1           	pop bc
 207+ 9483 CD 23 95         call Inicializacion
 208+ 9486 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9487
 210+ 9487              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9487
 212+ 9487 C5           4 push bc
 213+ 9488 01 A4 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 948B 0A           	ld a,(bc)
 215+ 948C 3D           	dec a
 216+ 948D 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 948E 7D           	ld a,l
 218+ 948F 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9490 CB 47        	bit 0,a
 220+ 9492 28 03        	jr z,5F
 221+ 9494 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9495 18 2E        	jr 7F
 223+ 9497
 224+ 9497              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9497
 226+ 9497 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 9498 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 9499 3A D1 89     	ld a,(Ctrl_0)
 229+ 949C CB 4F        	bit 1,a
 230+ 949E 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94A0 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94A1
 233+ 94A1              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94A1
 235+ 94A1 1C               inc e
 236+ 94A2 1D               dec e
 237+ 94A3 20 07            jr nz,12F
 238+ 94A5 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94A6 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94A7 22 A5 89     	ld (Posicion_actual),hl
 241+ 94AA 18 44        13 jr 9F
 242+ 94AC CB 43        12 bit 0,e
 243+ 94AE 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94B0              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94B0 C1           	pop bc
 246+ 94B1 18 D3        	jr 3B
 247+ 94B3 80           14 add b
 248+ 94B4 6F               ld l,a
 249+ 94B5 22 A5 89     	ld (Posicion_actual),hl
 250+ 94B8 CD 13 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94BB 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 94BD E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 94BF 32 D1 89         ld (Ctrl_0),a
 254+ 94C2 F1           	pop af
 255+ 94C3 18 2B        	jr 9F
 256+ 94C5
 257+ 94C5              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 94C5
 259+ 94C5 F5           7 push af
 260+ 94C6 3A D1 89     	ld a,(Ctrl_0)
 261+ 94C9 CB 47        	bit 0,a
 262+ 94CB 20 1D        	jr nz,8F
 263+ 94CD F1           	pop af
 264+ 94CE
 265+ 94CE              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 94CE
 267+ 94CE 1C           	inc e
 268+ 94CF 1D               dec e
 269+ 94D0 20 07            jr nz,10F
 270+ 94D2 90           	sub b
 271+ 94D3 6F               ld l,a
 272+ 94D4 22 A5 89     	ld (Posicion_actual),hl
 273+ 94D7 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 94D9              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 94D9 CB 43        10 bit 0,e
 276+ 94DB 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 94DD              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 94DD C1           	pop bc
 279+ 94DE 18 A6        	jr 3B
 280+ 94E0 90           16 sub b
 281+ 94E1 6F               ld l,a
 282+ 94E2 22 A5 89     	ld (Posicion_actual),hl
 283+ 94E5 CD 13 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 94E8 18 06            jr 9F
 285+ 94EA E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 94EC 32 D1 89         ld (Ctrl_0),a
 287+ 94EF F1           	pop af
 288+ 94F0 C1           9 pop bc
 289+ 94F1 1E 00        	ld e,0
 290+ 94F3 CD 23 95         call Inicializacion
 291+ 94F6 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94F7 08           	ex af,af
 293+ 94F8 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94F9 18 8B            jr 3B
 295+ 94FB
 296+ 94FB              ; --------------------
 297+ 94FB
 298+ 94FB 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94FD CD 81 96     1 call PreviousScan
 300+ 9500 10 FB            djnz 1B
 301+ 9502 22 A5 89     	ld (Posicion_actual),hl
 302+ 9505 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9506 C9           	ret
 304+ 9507
 305+ 9507              ; --------------------
 306+ 9507
 307+ 9507 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9509 CD 72 96     1 call NextScan
 309+ 950C 10 FB            djnz 1B
 310+ 950E 22 A5 89     	ld (Posicion_actual),hl
 311+ 9511 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9512 C9           	ret
 313+ 9513
 314+ 9513              ; --------------------
 315+ 9513              ;
 316+ 9513              ;	22/01/23
 317+ 9513              ;
 318+ 9513              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9513              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9513              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9513
 322+ 9513
 323+ 9513              Modificaccionne
 324+ 9513
 325+ 9513 3A B7 89     	ld a,(Cuad_objeto)
 326+ 9516 FE 02        	cp 2
 327+ 9518 CC FB 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 951B DC FB 94         call c,Modifica_Pos_actual
 329+ 951E C8           	ret z
 330+ 951F CD 07 95         call Modifica_Pos_actual2
 331+ 9522 C9               ret
 332+ 9523
 333+ 9523              ; *************************************************************************************************************************************************************************************************
 334+ 9523              ;
 335+ 9523              ;	13/8/22
 336+ 9523              ;
 337+ 9523              ;	Inicializacion
 338+ 9523              ;
 339+ 9523              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9523              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9523              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9523              ;
 343+ 9523              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9523              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9523              ;	_ desaparece/aparece.
 346+ 9523
 347+ 9523              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9523              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9523              ;
 350+ 9523              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9523              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9523              ; 		   [E] ="0"
 353+ 9523
 354+ 9523              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9523
 356+ 9523 CD 42 99     Inicializacion call calcula_tercio
 357+ 9526 28 36        	jr z,primit
 358+ 9528 E6 02        	and 2
 359+ 952A 20 07        	jr nz,segmit
 360+ 952C 7D           	ld a,l
 361+ 952D FE 7F        	cp $7f
 362+ 952F 38 2D        	jr c,primit
 363+ 9531 28 2B        	jr z,primit
 364+ 9533 CD 90 95     segmit call column
 365+ 9536 38 13        	jr c,tercuad
 366+ 9538 3E 04        cuarcuad ld a,4
 367+ 953A 32 B7 89     	ld (Cuad_objeto),a
 368+ 953D 21 20 48     	ld hl,$4820
 369+ 9540 22 E1 89     	ld (Limite_horizontal),hl
 370+ 9543 21 E3 89     	ld hl,Limite_vertical
 371+ 9546 36 0D        	ld (hl),$0d
 372+ 9548 08           	ex af,af
 373+ 9549 18 3C        	jr 1F
 374+ 954B              tercuad
 375+ 954B 3E 03        	ld a,3
 376+ 954D 32 B7 89     	ld (Cuad_objeto),a
 377+ 9550 21 20 48     	ld hl,$4820
 378+ 9553 22 E1 89     	ld (Limite_horizontal),hl
 379+ 9556 21 E3 89     	ld hl,Limite_vertical
 380+ 9559 36 12        	ld (hl),$12
 381+ 955B 08           	ex af,af
 382+ 955C 18 29        	jr 1F
 383+ 955E CD 90 95     primit call column
 384+ 9561 38 13        	jr c, primcuad
 385+ 9563              segcuad
 386+ 9563 3E 02        	ld a,2
 387+ 9565 32 B7 89     	ld (Cuad_objeto),a
 388+ 9568 21 C0 4F     	ld hl,$4fc0
 389+ 956B 22 E1 89     	ld (Limite_horizontal),hl
 390+ 956E 21 E3 89     	ld hl,Limite_vertical
 391+ 9571 36 0D        	ld (hl),$0d
 392+ 9573 08           	ex af,af
 393+ 9574 18 11        	jr 1F
 394+ 9576              primcuad
 395+ 9576 3E 01        	ld a,1
 396+ 9578 32 B7 89     	ld (Cuad_objeto),a
 397+ 957B 21 C0 4F     	ld hl,$4fc0
 398+ 957E 22 E1 89     	ld (Limite_horizontal),hl
 399+ 9581 21 E3 89     	ld hl,Limite_vertical
 400+ 9584 36 12        	ld (hl),$12
 401+ 9586 08           	ex af,af
 402+ 9587 CD CD 9C     1 call Genera_coordenadas
 403+ 958A 21 D1 89     	ld hl,Ctrl_0
 404+ 958D CB EE        	set 5,(hl)
 405+ 958F C9           	ret
 406+ 9590
 407+ 9590              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9590
 409+ 9590              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9590              ;
 411+ 9590              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9590
 413+ 9590 7D           column ld a,l
 414+ 9591 E6 1F        	and $1f
 415+ 9593 FE 10         	cp $10
 416+ 9595 C9            	ret
 417+ 9596
 418+ 9596              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9596              ;
 420+ 9596              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9596              ;
 422+ 9596              ; 14/12/22
 423+ 9596              ;
 424+ 9596              ;	Modifica: A y BC.
 425+ 9596
 426+ 9596 3A B7 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 9599 E6 01        	and 1
 428+ 959B 28 17        	jr z,1F
 429+ 959D
 430+ 959D              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 959D
 432+ 959D 3A A9 89     	ld a,(Coordenada_X)
 433+ 95A0 47           	ld b,a
 434+ 95A1 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95A2 79           	ld a,c
 436+ 95A3 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95A4 38 08        	jr c,2F
 438+ 95A6 47           	ld b,a
 439+ 95A7 79           	ld a,c
 440+ 95A8 90           	sub b
 441+ 95A9 32 E0 89     	ld (Columnas),a
 442+ 95AC 18 1B        	jr 4F
 443+ 95AE 79           2 ld a,c
 444+ 95AF 32 E0 89     	ld (Columnas),a
 445+ 95B2 18 15        	jr 4F
 446+ 95B4
 447+ 95B4              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95B4
 449+ 95B4 3A A9 89     1 ld a,(Coordenada_X)
 450+ 95B7 81           	add c
 451+ 95B8 3D           	dec a
 452+ 95B9 D6 1F        	sub $1f
 453+ 95BB 38 08        	jr c,3F
 454+ 95BD 47           	ld b,a
 455+ 95BE 79           	ld a,c
 456+ 95BF 90           	sub b
 457+ 95C0 32 E0 89     	ld (Columnas),a
 458+ 95C3 18 04        	jr 4F
 459+ 95C5 79           3 ld a,c
 460+ 95C6 32 E0 89     	ld (Columnas),a
 461+ 95C9 D9           4 exx
 462+ 95CA 4F           	ld c,a
 463+ 95CB D9           	exx
 464+ 95CC C9            ret
 465+ 95CD
 466+ 95CD              ; --------------------------------------------------------------------------------------------------------------------
 467+ 95CD              ;
 468+ 95CD              ;   19/7/23
 469+ 95CD              ;
 470+ 95CD              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 95CD              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 95CD              ;
 473+ 95CD              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 95CD              ;			HL e IY Contienen (Puntero_objeto).
 475+ 95CD              ;
 476+ 95CD              ;	DESTRUYE: HL,B Y A.
 477+ 95CD
 478+ 95CD 3A B7 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 95D0 FE 02        	cp 2
 480+ 95D2 38 18        	jr c,1F
 481+ 95D4 28 16        	jr z,1F
 482+ 95D6 E6 01        	and 1
 483+ 95D8 28 0D        	jr z,3F
 484+ 95DA
 485+ 95DA              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 95DA
 487+ 95DA CD 20 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 95DD
 489+ 95DD 7D           9 ld a,l
 490+ 95DE E6 1F        	and $1f
 491+ 95E0 28 2A        	jr z,7F
 492+ 95E2 2B           	dec hl
 493+ 95E3 10 F8        	djnz 9B
 494+ 95E5 18 25        	jr 7F
 495+ 95E7
 496+ 95E7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 95E7
 498+ 95E7 2A A5 89     3 ld hl,(Posicion_actual)
 499+ 95EA 18 20        	jr 7F
 500+ 95EC
 501+ 95EC 28 14        1 jr z,2F
 502+ 95EE
 503+ 95EE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95EE
 505+ 95EE CD 20 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95F1
 507+ 95F1 7D           4 ld a,l
 508+ 95F2 E6 1F        	and $1f
 509+ 95F4 28 03        	jr z,6F
 510+ 95F6 2B           	dec hl
 511+ 95F7 10 F8        	djnz 4B
 512+ 95F9 06 0F        6 ld b,15
 513+ 95FB CD 81 96     5 call PreviousScan
 514+ 95FE 10 FB        	djnz 5B
 515+ 9600 18 0A        	jr 7F
 516+ 9602
 517+ 9602              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9602
 519+ 9602 CD 20 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9605 06 0F        	ld b,15
 521+ 9607 CD 81 96     8 call PreviousScan
 522+ 960A 10 FB        	djnz 8B
 523+ 960C
 524+ 960C E5           7 push hl
 525+ 960D DD E1        	pop ix
 526+ 960F
 527+ 960F 2A A7 89     	ld hl,(Puntero_objeto)
 528+ 9612 E5           	push hl
 529+ 9613 FD E1        	pop iy
 530+ 9615
 531+ 9615              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9615
 533+ 9615 3A D1 89     	ld a,(Ctrl_0)
 534+ 9618 CB 77        	bit 6,a
 535+ 961A C8           	ret z
 536+ 961B
 537+ 961B              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 961B              ; _ entidad / Amadeus´.
 539+ 961B
 540+ 961B DD 22 23 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 961F
 542+ 961F C9           	ret
 543+ 9620
 544+ 9620              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9620              ;
 546+ 9620              ;	2/1/23
 547+ 9620              ;
 548+ 9620              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9620              ;
 550+ 9620              ;	Tras esta rutina tenemos:
 551+ 9620              ;
 552+ 9620              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9620              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9620              ;
 555+ 9620              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9620
 557+ 9620 2A A5 89     Operandos ld hl,(Posicion_actual)
 558+ 9623 3A E0 89     	ld a,(Columnas)
 559+ 9626 3D           	dec a
 560+ 9627 20 01        	jr nz,1F
 561+ 9629 3C           	inc a
 562+ 962A 47           1 ld b,a
 563+ 962B C9           	ret
 564+ 962C
 565+ 962C              ; --------------------------------------------------------------------------------------------------------------------
 566+ 962C              ;
 567+ 962C              ;	3/1/23
 568+ 962C              ;
 569+ 962C              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 962C              ;
 571+ 962C              ;	Destruye: A,B,HL y DE.
 572+ 962C
 573+ 962C              Define_rutina_de_impresion
 574+ 962C
 575+ 962C 3A A4 89     	ld a,(Columns)
 576+ 962F 47           	ld b,a
 577+ 9630 3A E0 89     	ld a,(Columnas)
 578+ 9633 B8           	cp b
 579+ 9634 20 0D        	jr nz,2f
 580+ 9636
 581+ 9636              ;	La entidad se imprime entera.
 582+ 9636
 583+ 9636 21 12 97     	ld hl, Indice_entidades_completas
 584+ 9639 E6 01        	and 1
 585+ 963B 28 02        	jr z,1F
 586+ 963D
 587+ 963D 23           	inc hl
 588+ 963E 23           	inc hl
 589+ 963F
 590+ 963F CD 46 8D     1 call Extrae_address
 591+ 9642 C9           	ret		;	ret
 592+ 9643
 593+ 9643              ;	La entidad no se imprime entera en pantalla.
 594+ 9643
 595+ 9643 3A B7 89     2 ld a,(Cuad_objeto)
 596+ 9646 E6 01        	and 1
 597+ 9648 28 17        	jr z,3F
 598+ 964A
 599+ 964A              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 964A
 601+ 964A 21 16 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 964D 3A A4 89     4 ld a,(Columns)
 603+ 9650 E6 01        	and 1
 604+ 9652 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9654
 606+ 9654 23           	inc hl
 607+ 9655 23           	inc hl
 608+ 9656
 609+ 9656 3A E0 89     	ld a,(Columnas)
 610+ 9659 E6 01        	and 1
 611+ 965B 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 965D
 613+ 965D 23           	inc hl
 614+ 965E 23           	inc hl
 615+ 965F
 616+ 965F 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9661
 618+ 9661 21 1C 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9664 18 E7        	jr 4B
 620+ 9666
 621+ 9666              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9666              ;
 623+ 9666              ;	Prepara_draw
 624+ 9666              ;
 625+ 9666              ;	Es una rutina de carga.
 626+ 9666              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9666              ;
 628+ 9666              ;	FUNCIONAMIENTO:
 629+ 9666              ;
 630+ 9666              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9666              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9666              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9666              ;
 634+ 9666              ;	DESTRUYE:
 635+ 9666              ;
 636+ 9666              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9666
 638+ 9666 21 A3 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9669 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 966A 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 966B 4E           	ld c,(hl)
 642+ 966C 2A A5 89     	ld hl,(Posicion_actual)
 643+ 966F 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9671 C9           	ret
 645+ 9672
 646+ 9672              ;----------------------------------------------------------------------------------------------------------------
 647+ 9672              ;
 648+ 9672              ;	5/08/22
 649+ 9672              ;
 650+ 9672              ;   NextScan.
 651+ 9672              ;
 652+ 9672              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9672              ;
 654+ 9672              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9672              ;
 656+ 9672              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9672              ;
 658+ 9672              ;       DESTRUIDOS: AF y HL !!!
 659+ 9672              ;
 660+ 9672              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9672              ;
 662+ 9672
 663+ 9672 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9673 7C               ld a,h
 665+ 9674 E6 07            and 7
 666+ 9676 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9677
 668+ 9677 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9678 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 967A 6F               ld l,a
 671+ 967B D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 967C
 673+ 967C 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 967D D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 967F 67               ld h,a
 676+ 9680 C9               ret
 677+ 9681
 678+ 9681              ;----------------------------------------------------------------------------------------------------------------
 679+ 9681              ;
 680+ 9681              ;	5/08/22
 681+ 9681              ;
 682+ 9681              ;   PreviousScan.
 683+ 9681              ;
 684+ 9681              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9681              ;
 686+ 9681              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9681              ;
 688+ 9681              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9681              ;
 690+ 9681              ;       DESTRUIDOS: AF y HL !!!
 691+ 9681              ;
 692+ 9681              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9681              ;
 694+ 9681
 695+ 9681 7C           PreviousScan ld a,h
 696+ 9682 25               dec h               ; Dec H.
 697+ 9683 E6 07            and 7
 698+ 9685 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9686
 700+ 9686 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9687 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9689 6F               ld l,a
 703+ 968A D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 968B
 705+ 968B 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 968C C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 968E 67               ld h,a
 708+ 968F C9               ret
 709+ 9690
 710+ 9690              ; -----------------------------------------------------------------------------------
 711+ 9690              ;
 712+ 9690              ;	31/7/23
 713+ 9690              ;
 714+ 9690              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9690              ;	Extrae fotos de Album_de_fotos.
 716+ 9690
 717+ 9690              Extrae_foto_entidades
 718+ 9690
 719+ 9690 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9693 7E               ld a,(hl)
 721+ 9694 A7               and a
 722+ 9695 C8               ret z																	; Salimos si no hay DATOS en el álbum.
 723+ 9696
 724+ 9696 21 19 74     	ld hl,Caja_de_malotes
 725+ 9699 7E           	ld a,(hl)
 726+ 969A 32 F2 89     	ld (Numero_de_malotes),a												; Salimos si no hay MOVIMIENTO.
 727+ 969D A7           	and a
 728+ 969E C8           	ret z
 729+ 969F
 730+ 969F              ; -----------------------------------
 731+ 969F
 732+ 969F ED 73 F7 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 96A3 31 00 70     	ld sp,Album_de_fotos
 734+ 96A6
 735+ 96A6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 96A8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 96A9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 96AA
 739+ 96AA ED 73 F9 89  	ld (Stack_2),sp
 740+ 96AE ED 7B F7 89  	ld sp,(Stack)
 741+ 96B2
 742+ 96B2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 96B2
 744+ 96B2 3E CD        	ld a,$cd
 745+ 96B4 32 BC 96     	ld (Imprime),a
 746+ 96B7 EB           	ex de,hl
 747+ 96B8 22 BD 96     	ld (Imprime+1),hl
 748+ 96BB EB           	ex de,hl
 749+ 96BC
 750+ 96BC              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 96BC
 752+ 96BC 00 00 00     Imprime db 0,0,0
 753+ 96BF
 754+ 96BF 3A F2 89     	ld a,(Numero_de_malotes)
 755+ 96C2 3D           	dec a
 756+ 96C3 28 09        	jr z,1F
 757+ 96C5 32 F2 89      	ld (Numero_de_malotes),a
 758+ 96C8
 759+ 96C8 ED 7B F9 89   	ld sp,(Stack_2)
 760+ 96CC 18 D8        	jr 2B
 761+ 96CE
 762+ 96CE AF           1 xor a
 763+ 96CF 32 F9 89     	ld (Stack_2),a
 764+ 96D2 C9           	ret
 765+ 96D3
 766+ 96D3              ; -----------------------------------------------------------------------------------
 767+ 96D3              ;
 768+ 96D3              ;	28/2/23
 769+ 96D3              ;
 770+ 96D3              ;	Pinta los disparos generados.
 771+ 96D3
 772+ 96D3              Extrae_foto_disparos
 773+ 96D3
 774+ 96D3 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 775+ 96D6 7E               ld a,(hl)
 776+ 96D7 A7               and a
 777+ 96D8 C8               ret z
 778+ 96D9
 779+ 96D9 3A 13 8A     	ld a,(Numero_de_disparotes)
 780+ 96DC A7           	and a
 781+ 96DD C8           	ret z
 782+ 96DE ED 73 F7 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 783+ 96E2 31 0D 72     	ld sp,Album_de_fotos_disparos
 784+ 96E5
 785+ 96E5 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 786+ 96E7 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 787+ 96E8 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 788+ 96E9
 789+ 96E9 ED 73 F9 89  	ld (Stack_2),sp
 790+ 96ED ED 7B F7 89  	ld sp,(Stack)
 791+ 96F1
 792+ 96F1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 793+ 96F1
 794+ 96F1 3E CD        	ld a,$cd
 795+ 96F3 32 FB 96     	ld (Imprime2),a
 796+ 96F6 EB           	ex de,hl
 797+ 96F7 22 FC 96     	ld (Imprime2+1),hl
 798+ 96FA EB           	ex de,hl
 799+ 96FB
 800+ 96FB              ; Ejecuta la llamada:	CALL $xx,xx
 801+ 96FB
 802+ 96FB 00 00 00     Imprime2 db 0,0,0
 803+ 96FE
 804+ 96FE 3A 13 8A     	ld a,(Numero_de_disparotes)
 805+ 9701 3D           	dec a
 806+ 9702 28 09        	jr z,1F
 807+ 9704 32 13 8A      	ld (Numero_de_disparotes),a
 808+ 9707
 809+ 9707 ED 7B F9 89  	ld sp,(Stack_2)
 810+ 970B 18 D8        	jr 2B
 811+ 970D
 812+ 970D AF           1 xor a
 813+ 970E 32 F9 89     	ld (Stack_2),a
 814+ 9711 C9           	ret
 815+ 9712
# file closed: Draw_XOR.asm
1355  9712              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9712              ;   índices de Rutinas de impresión.
   2+ 9712
   3+ 9712 22 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9714 4F 97            defw Pinta_Amadeus_3x2
   5+ 9716
   6+ 9716 A5 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9718 45 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 971A F9 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 971C
  10+ 971C CF 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 971E D3 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9720 87 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9722
  14+ 9722
  15+ 9722              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9722              ;
  17+ 9722              ;   12/12/22
  18+ 9722              ;
  19+ 9722              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9722              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9722              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9722              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9722              ;
  24+ 9722              ;   Modifica: DE y HL.
  25+ 9722
  26+ 9722 ED 73 F7 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9726 FD F9        	ld sp,iy
  28+ 9728 06 10            ld b,16
  29+ 972A D1           1 pop de
  30+ 972B 7B               ld a,e
  31+ 972C AE               xor (hl)
  32+ 972D 77           	ld (hl),a
  33+ 972E 23           	inc hl
  34+ 972F 7A               ld a,d
  35+ 9730 AE               xor (hl)
  36+ 9731 77           	ld (hl),a
  37+ 9732 2B           	dec hl
  38+ 9733 24           	inc h
  39+ 9734 7C               ld a,h
  40+ 9735 E6 07            and 7
  41+ 9737 20 0A            jr nz,2F
  42+ 9739 7D               ld a,l
  43+ 973A C6 20            add a,$20
  44+ 973C 6F               ld l,a
  45+ 973D 38 04            jr c,2F
  46+ 973F 7C               ld a,h
  47+ 9740 D6 08            sub 8
  48+ 9742 67               ld h,a
  49+ 9743 7C           2 ld a,h
  50+ 9744 FE 58            cp $58
  51+ 9746 28 02            jr z,3F
  52+ 9748 10 E0            djnz 1B
  53+ 974A ED 7B F7 89  3 ld sp,(Stack)
  54+ 974E C9           	ret
  55+ 974F
  56+ 974F ED 73 F7 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9753 FD F9        	ld sp,iy
  58+ 9755 06 08            ld b,8
  59+ 9757 D1           1 pop de
  60+ 9758 7B               ld a,e
  61+ 9759 AE               xor (hl)
  62+ 975A 77           	ld (hl),a
  63+ 975B 23           	inc hl
  64+ 975C 7A               ld a,d
  65+ 975D AE               xor (hl)
  66+ 975E 77           	ld (hl),a
  67+ 975F 23           	inc hl
  68+ 9760 D1           	pop de
  69+ 9761 7B               ld a,e
  70+ 9762 AE               xor (hl)
  71+ 9763 77           	ld (hl),a
  72+ 9764 2B           	dec hl
  73+ 9765 2B           	dec hl
  74+ 9766 24           	inc h
  75+ 9767 7C               ld a,h
  76+ 9768 E6 07            and 7
  77+ 976A 20 0A            jr nz,2F
  78+ 976C 7D               ld a,l
  79+ 976D C6 20            add a,$20
  80+ 976F 6F               ld l,a
  81+ 9770 38 04            jr c,2F
  82+ 9772 7C               ld a,h
  83+ 9773 D6 08            sub 8
  84+ 9775 67               ld h,a
  85+ 9776 7C           2 ld a,h
  86+ 9777 FE 58            cp $58
  87+ 9779 28 25            jr z,4F
  88+ 977B 7A               ld a,d
  89+ 977C AE               xor (hl)
  90+ 977D 77               ld (hl),a
  91+ 977E D1           	pop de
  92+ 977F 23           	inc hl
  93+ 9780 7B               ld a,e
  94+ 9781 AE               xor (hl)
  95+ 9782 77           	ld (hl),a
  96+ 9783 23           	inc hl
  97+ 9784 7A               ld a,d
  98+ 9785 AE               xor (hl)
  99+ 9786 77           	ld (hl),a
 100+ 9787 2B           	dec hl
 101+ 9788 2B           	dec hl
 102+ 9789 24           	inc h
 103+ 978A 7C               ld a,h
 104+ 978B E6 07            and 7
 105+ 978D 20 0A            jr nz,3F
 106+ 978F 7D               ld a,l
 107+ 9790 C6 20            add a,$20
 108+ 9792 6F               ld l,a
 109+ 9793 38 04            jr c,3F
 110+ 9795 7C               ld a,h
 111+ 9796 D6 08            sub 8
 112+ 9798 67               ld h,a
 113+ 9799 7C           3 ld a,h
 114+ 979A FE 58            cp $58
 115+ 979C 28 02            jr z,4F
 116+ 979E 10 B7            djnz 1B
 117+ 97A0 ED 7B F7 89  4 ld sp,(Stack)
 118+ 97A4 C9           	ret
 119+ 97A5
 120+ 97A5              ; ---------------------------------------------------
 121+ 97A5
 122+ 97A5 ED 73 F7 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 97A9 FD F9        	ld sp,iy
 124+ 97AB
 125+ 97AB              ; >>>
 126+ 97AB
 127+ 97AB 06 10            ld b,16
 128+ 97AD D1           1 pop de
 129+ 97AE 7A           	ld a,d
 130+ 97AF AE           	xor (hl)
 131+ 97B0 77           	ld (hl),a
 132+ 97B1 24           	inc h
 133+ 97B2 7C               ld a,h
 134+ 97B3 E6 07            and 7
 135+ 97B5 20 0C            jr nz,2F
 136+ 97B7 7D               ld a,l
 137+ 97B8 C6 20            add a,$20
 138+ 97BA 6F               ld l,a
 139+ 97BB 38 06            jr c,2F
 140+ 97BD 7C               ld a,h
 141+ 97BE D6 08            sub 8
 142+ 97C0 67               ld h,a
 143+ 97C1 18 00            jr 2F
 144+ 97C3 7C           2 ld a,h
 145+ 97C4 FE 58            cp $58
 146+ 97C6 28 02            jr z,3F
 147+ 97C8 10 E3            djnz 1B
 148+ 97CA ED 7B F7 89  3 ld sp,(Stack)
 149+ 97CE C9           	ret
 150+ 97CF
 151+ 97CF ED 73 F7 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97D3 FD F9        	ld sp,iy
 153+ 97D5
 154+ 97D5              ; >>>
 155+ 97D5
 156+ 97D5 06 10            ld b,16
 157+ 97D7 D1           1 pop de
 158+ 97D8 7B           	ld a,e
 159+ 97D9 AE           	xor (hl)
 160+ 97DA 77           	ld (hl),a
 161+ 97DB 24           	inc h
 162+ 97DC 7C               ld a,h
 163+ 97DD E6 07            and 7
 164+ 97DF 20 0C            jr nz,2F
 165+ 97E1 7D               ld a,l
 166+ 97E2 C6 20            add a,$20
 167+ 97E4 6F               ld l,a
 168+ 97E5 38 06            jr c,2F
 169+ 97E7 7C               ld a,h
 170+ 97E8 D6 08            sub 8
 171+ 97EA 67               ld h,a
 172+ 97EB 18 00            jr 2F
 173+ 97ED 7C           2 ld a,h
 174+ 97EE FE 58            cp $58
 175+ 97F0 28 02            jr z,3F
 176+ 97F2 10 E3            djnz 1B
 177+ 97F4 ED 7B F7 89  3 ld sp,(Stack)
 178+ 97F8 C9           	ret
 179+ 97F9
 180+ 97F9              ; ---------------------------------------------------
 181+ 97F9
 182+ 97F9 ED 73 F7 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97FD FD F9        	ld sp,iy
 184+ 97FF 06 08            ld b,8
 185+ 9801 D1           1 pop de
 186+ 9802 7A           	ld a,d
 187+ 9803 AE           	xor (hl)
 188+ 9804 77           	ld (hl),a
 189+ 9805 23           	inc hl
 190+ 9806 D1           	pop de
 191+ 9807 7B           	ld a,e
 192+ 9808 AE           	xor (hl)
 193+ 9809 77           	ld (hl),a
 194+ 980A 2B           	dec hl
 195+ 980B 24            	inc h
 196+ 980C 7C               ld a,h
 197+ 980D E6 07            and 7
 198+ 980F 20 0A            jr nz,2F
 199+ 9811 7D               ld a,l
 200+ 9812 C6 20            add a,$20
 201+ 9814 6F               ld l,a
 202+ 9815 38 04            jr c,2F
 203+ 9817 7C               ld a,h
 204+ 9818 D6 08            sub 8
 205+ 981A 67               ld h,a
 206+ 981B 7C           2 ld a,h
 207+ 981C FE 58            cp $58
 208+ 981E 28 20            jr z,4F
 209+ 9820 D1               pop de
 210+ 9821 7B           	ld a,e
 211+ 9822 AE           	xor (hl)
 212+ 9823 77           	ld (hl),a
 213+ 9824 23           	inc hl
 214+ 9825 7A           	ld a,d
 215+ 9826 AE           	xor (hl)
 216+ 9827 77           	ld (hl),a
 217+ 9828 2B           	dec hl
 218+ 9829 24           	inc h
 219+ 982A 7C               ld a,h
 220+ 982B E6 07            and 7
 221+ 982D 20 0A            jr nz,3F
 222+ 982F 7D               ld a,l
 223+ 9830 C6 20            add a,$20
 224+ 9832 6F               ld l,a
 225+ 9833 38 04            jr c,3F
 226+ 9835 7C               ld a,h
 227+ 9836 D6 08            sub 8
 228+ 9838 67               ld h,a
 229+ 9839 7C           3 ld a,h
 230+ 983A FE 58            cp $58
 231+ 983C 28 02            jr z,4F
 232+ 983E 10 C1            djnz 1B
 233+ 9840 ED 7B F7 89  4 ld sp,(Stack)
 234+ 9844 C9           	ret
 235+ 9845
 236+ 9845 ED 73 F7 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9849 FD F9        	ld sp,iy
 238+ 984B 06 08            ld b,8
 239+ 984D D1           1 pop de
 240+ 984E D1           	pop de
 241+ 984F 7B           	ld a,e
 242+ 9850 AE           	xor (hl)
 243+ 9851 77           	ld (hl),a
 244+ 9852 24            	inc h
 245+ 9853 7C               ld a,h
 246+ 9854 E6 07            and 7
 247+ 9856 20 0A            jr nz,2F
 248+ 9858 7D               ld a,l
 249+ 9859 C6 20            add a,$20
 250+ 985B 6F               ld l,a
 251+ 985C 38 04            jr c,2F
 252+ 985E 7C               ld a,h
 253+ 985F D6 08            sub 8
 254+ 9861 67               ld h,a
 255+ 9862 7C           2 ld a,h
 256+ 9863 FE 58            cp $58
 257+ 9865 28 1B            jr z,4F
 258+ 9867 D1               pop de
 259+ 9868 7A           	ld a,d
 260+ 9869 AE           	xor (hl)
 261+ 986A 77           	ld (hl),a
 262+ 986B 24           	inc h
 263+ 986C 7C               ld a,h
 264+ 986D E6 07            and 7
 265+ 986F 20 0A            jr nz,3F
 266+ 9871 7D               ld a,l
 267+ 9872 C6 20            add a,$20
 268+ 9874 6F               ld l,a
 269+ 9875 38 04            jr c,3F
 270+ 9877 7C               ld a,h
 271+ 9878 D6 08            sub 8
 272+ 987A 67               ld h,a
 273+ 987B 7C           3 ld a,h
 274+ 987C FE 58            cp $58
 275+ 987E 28 02            jr z,4F
 276+ 9880 10 CB            djnz 1B
 277+ 9882 ED 7B F7 89  4 ld sp,(Stack)
 278+ 9886 C9           	ret
 279+ 9887
 280+ 9887 ED 73 F7 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 988B FD F9        	ld sp,iy
 282+ 988D 06 08            ld b,8
 283+ 988F D1           1 pop de
 284+ 9890 7B           	ld a,e
 285+ 9891 AE           	xor (hl)
 286+ 9892 77           	ld (hl),a
 287+ 9893 23           	inc hl
 288+ 9894 7A           	ld a,d
 289+ 9895 AE           	xor (hl)
 290+ 9896 77           	ld (hl),a
 291+ 9897 2B           	dec hl
 292+ 9898 24             	inc h
 293+ 9899 7C               ld a,h
 294+ 989A E6 07            and 7
 295+ 989C 20 0A            jr nz,2F
 296+ 989E 7D               ld a,l
 297+ 989F C6 20            add a,$20
 298+ 98A1 6F               ld l,a
 299+ 98A2 38 04            jr c,2F
 300+ 98A4 7C               ld a,h
 301+ 98A5 D6 08            sub 8
 302+ 98A7 67               ld h,a
 303+ 98A8 7C           2 ld a,h
 304+ 98A9 FE 58            cp $58
 305+ 98AB 28 21            jr z,4F
 306+ 98AD D1               pop de
 307+ 98AE 7A           	ld a,d
 308+ 98AF AE           	xor (hl)
 309+ 98B0 77           	ld (hl),a
 310+ 98B1 23           	inc hl
 311+ 98B2 D1               pop de
 312+ 98B3 7B           	ld a,e
 313+ 98B4 AE           	xor (hl)
 314+ 98B5 77           	ld (hl),a
 315+ 98B6 2B           	dec hl
 316+ 98B7 24           	inc h
 317+ 98B8 7C               ld a,h
 318+ 98B9 E6 07            and 7
 319+ 98BB 20 0A            jr nz,3F
 320+ 98BD 7D               ld a,l
 321+ 98BE C6 20            add a,$20
 322+ 98C0 6F               ld l,a
 323+ 98C1 38 04            jr c,3F
 324+ 98C3 7C               ld a,h
 325+ 98C4 D6 08            sub 8
 326+ 98C6 67               ld h,a
 327+ 98C7 7C           3 ld a,h
 328+ 98C8 FE 58            cp $58
 329+ 98CA 28 02            jr z,4F
 330+ 98CC 10 C1            djnz 1B
 331+ 98CE ED 7B F7 89  4 ld sp,(Stack)
 332+ 98D2 C9           	ret
 333+ 98D3
 334+ 98D3 ED 73 F7 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98D7 FD F9        	ld sp,iy
 336+ 98D9 06 08            ld b,8
 337+ 98DB D1           1 pop de
 338+ 98DC 7B           	ld a,e
 339+ 98DD AE           	xor (hl)
 340+ 98DE 77           	ld (hl),a
 341+ 98DF 24            	inc h
 342+ 98E0 7C               ld a,h
 343+ 98E1 E6 07            and 7
 344+ 98E3 20 0A            jr nz,2F
 345+ 98E5 7D               ld a,l
 346+ 98E6 C6 20            add a,$20
 347+ 98E8 6F               ld l,a
 348+ 98E9 38 04            jr c,2F
 349+ 98EB 7C               ld a,h
 350+ 98EC D6 08            sub 8
 351+ 98EE 67               ld h,a
 352+ 98EF 7C           2 ld a,h
 353+ 98F0 FE 58            cp $58
 354+ 98F2 28 1C            jr z,4F
 355+ 98F4 D1               pop de
 356+ 98F5 7A           	ld a,d
 357+ 98F6 AE           	xor (hl)
 358+ 98F7 77           	ld (hl),a
 359+ 98F8 24           	inc h
 360+ 98F9 7C               ld a,h
 361+ 98FA E6 07            and 7
 362+ 98FC 20 0A            jr nz,3F
 363+ 98FE 7D               ld a,l
 364+ 98FF C6 20            add a,$20
 365+ 9901 6F               ld l,a
 366+ 9902 38 04            jr c,3F
 367+ 9904 7C               ld a,h
 368+ 9905 D6 08            sub 8
 369+ 9907 67               ld h,a
 370+ 9908 7C           3 ld a,h
 371+ 9909 FE 58            cp $58
 372+ 990B 28 03            jr z,4F
 373+ 990D D1               pop de
 374+ 990E 10 CB            djnz 1B
 375+ 9910 ED 7B F7 89  4 ld sp,(Stack)
 376+ 9914 C9           	ret
 377+ 9915
 378+ 9915              ; ---------------------------------------------------
 379+ 9915              ;
 380+ 9915              ;   27/02/23
 381+ 9915              ;
 382+ 9915              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9915              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9915              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9915
 386+ 9915 ED 73 F7 89  Pinta_Disparo ld (Stack),sp
 387+ 9919 FD F9            ld sp,iy
 388+ 991B 06 03            ld b,3
 389+ 991D D1           1 pop de
 390+ 991E 7B               ld a,e
 391+ 991F AE               xor (hl)
 392+ 9920 77               ld (hl),a
 393+ 9921 23               inc hl
 394+ 9922 7A               ld a,d
 395+ 9923 AE               xor (hl)
 396+ 9924 77               ld (hl),a
 397+ 9925 2B               dec hl
 398+ 9926
 399+ 9926 24               inc h
 400+ 9927 7C               ld a,h
 401+ 9928 E6 07            and 7
 402+ 992A 20 0A            jr nz,2F
 403+ 992C 7D               ld a,l
 404+ 992D C6 20            add a,$20
 405+ 992F 6F               ld l,a
 406+ 9930 38 04            jr c,2F
 407+ 9932 7C               ld a,h
 408+ 9933 D6 08            sub 8
 409+ 9935 67               ld h,a
 410+ 9936 7C           2 ld a,h
 411+ 9937 FE 58            cp $58
 412+ 9939 28 02            jr z,3F
 413+ 993B
 414+ 993B 10 E0            djnz 1B
 415+ 993D ED 7B F7 89  3 ld sp,(Stack)
 416+ 9941 C9               ret
 417+ 9942
# file closed: Rutinas_de_impresion_sprites.asm
1356  9942              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9942              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9942              ;
   3+ 9942              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9942              ;
   5+ 9942              ; *****************************************************************************************************************************************************************************************
   6+ 9942              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9942
   8+ 9942 7C           calcula_tercio ld a,h
   9+ 9943 E6 18        	and $18
  10+ 9945 CB 2F        	sra a
  11+ 9947 CB 2F        	sra a
  12+ 9949 CB 2F        	sra a
  13+ 994B C9           	ret
  14+ 994C
# file closed: calcula_tercio.asm
1357  994C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 994C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 994C              ;
   3+ 994C              ;
   4+ 994C              ;	CLS.
   5+ 994C              ;
   6+ 994C              ;	Limpia la pantalla y define sus atributos.
   7+ 994C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 994C              ;
   9+ 994C              ;	COLORES: 0 ..... NEGRO
  10+ 994C              ;    		 1 ..... AZUL
  11+ 994C              ; 			 2 ..... ROJO
  12+ 994C              ;			 3 ..... MAGENTA
  13+ 994C              ; 			 4 ..... VERDE
  14+ 994C              ; 			 5 ..... CIAN
  15+ 994C              ;			 6 ..... AMARILLO
  16+ 994C              ; 			 7 ..... BLANCO
  17+ 994C              ;
  18+ 994C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 994C              ;
  20+ 994C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 994C
  22+ 994C
  23+ 994C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 994F 11 01 40     	LD DE,$4001
  25+ 9952 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9955 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9957 ED B0        	LDIR
  28+ 9959 01 FF 02     	LD BC,767
  29+ 995C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 995D ED B0        	LDIR
  31+ 995F C9           	ret
  32+ 9960
# file closed: Cls.asm
1358  9960              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9960              ; ******************************************************************************************************************************************************************************************
   2+ 9960              ;
   3+ 9960              ;   20/05/23
   4+ 9960              ;
   5+ 9960              ;	Recompone_posicion_inicio
   6+ 9960              ;
   7+ 9960              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9960              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9960              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9960              ;	_ a una u otra rutina.
  11+ 9960
  12+ 9960              Recompone_posicion_inicio
  13+ 9960
  14+ 9960 2A B5 89     	ld hl,(Posicion_inicio)
  15+ 9963 7D           	ld a,l
  16+ 9964 E6 1F        	and $1f
  17+ 9966 28 16        	jr z,1F
  18+ 9968
  19+ 9968 FE 1F        	cp $1f
  20+ 996A 28 0D        	jr z,3F
  21+ 996C
  22+ 996C 21 E4 89     	ld hl,Ctrl_2
  23+ 996F CB C6        	set 0,(hl)
  24+ 9971 2A A7 89     	ld hl,(Puntero_objeto)
  25+ 9974 22 E7 89     	ld (Repone_puntero_objeto),hl
  26+ 9977 18 08        	jr 2F
  27+ 9979
  28+ 9979 CD 1A 9B     3 call Mov_left
  29+ 997C 18 03        	jr 2F
  30+ 997E
  31+ 997E CD FC 99     1 call Mov_right
  32+ 9981 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9984 22 A7 89     	ld (Puntero_objeto),hl
  34+ 9987 C9           	ret
  35+ 9988
  36+ 9988              ; ******************************************************************************************************************************************************************************************
  37+ 9988              ;
  38+ 9988              ;   27/05/23
  39+ 9988              ;
  40+ 9988              ;	Mov_down
  41+ 9988              ;
  42+ 9988              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9988              ;
  44+ 9988              ;
  45+ 9988              Mov_down
  46+ 9988
  47+ 9988 CD EA 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 998B              ;																	; _ repone (Puntero_objeto).
  49+ 998B 21 D1 89     	ld hl,Ctrl_0
  50+ 998E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9990              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9990              ; 																	; _ en el caso de que no lo haya.
  53+ 9990 3A BB 89     	ld a,(Vel_down)
  54+ 9993 47           	ld b,a
  55+ 9994 2A A5 89         ld hl,(Posicion_actual)
  56+ 9997 CD 42 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 999A E6 02        	and 2
  58+ 999C 28 0F        	jr z,1F
  59+ 999E
  60+ 999E              ; Nos encontramos en el último tercio de pantalla.
  61+ 999E              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 999E
  63+ 999E 7C           	ld a,h
  64+ 999F FE 57        	cp $57
  65+ 99A1 20 0A        	jr nz,1F
  66+ 99A3
  67+ 99A3 7D           	ld a,l
  68+ 99A4 C6 20        	add $20
  69+ 99A6 30 05        	jr nc,1F
  70+ 99A8
  71+ 99A8              ; ------------------------------
  72+ 99A8              ;	call Reaparece_arriba
  73+ 99A8 CD A7 9C     	call Reinicio
  74+ 99AB              ; ------------------------------
  75+ 99AB
  76+ 99AB 18 08        	jr 3F
  77+ 99AD CD 72 96     1 call NextScan
  78+ 99B0 22 A5 89     	ld (Posicion_actual),hl
  79+ 99B3 10 E2            djnz 2B
  80+ 99B5 CD CD 9C     3 call Genera_coordenadas
  81+ 99B8 C9           	ret
  82+ 99B9
  83+ 99B9              ; ******************************************************************************************************************************************************************************************
  84+ 99B9              ;
  85+ 99B9              ;   27/05/23
  86+ 99B9              ;
  87+ 99B9              ;	Mov_up
  88+ 99B9              ;
  89+ 99B9              ; 	Mueve el Sprite hacia arriba.
  90+ 99B9              ;
  91+ 99B9              ;
  92+ 99B9              Mov_up
  93+ 99B9
  94+ 99B9 CD EA 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99BC              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99BC 21 D1 89     	ld hl,Ctrl_0
  97+ 99BF CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99C1              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99C1              ; 																		; _ en el caso de que no lo haya.
 100+ 99C1 3A BA 89     	ld a,(Vel_up)
 101+ 99C4 47           	ld b,a
 102+ 99C5 2A A5 89     	ld hl,(Posicion_actual)
 103+ 99C8 CD 42 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99CB A7           	and a
 105+ 99CC 20 10        	jr nz,1F
 106+ 99CE
 107+ 99CE              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99CE              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99CE
 110+ 99CE 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99CF FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99D1 20 0B            jr nz,1F
 113+ 99D3 7D               ld a,l
 114+ 99D4 D6 20            sub $20
 115+ 99D6 30 06            jr nc,1F
 116+ 99D8 25               dec h
 117+ 99D9
 118+ 99D9              ; -----------------------------
 119+ 99D9 CD 88 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99DC              ;	call Reinicio
 121+ 99DC              ; -----------------------------
 122+ 99DC
 123+ 99DC 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99DE CD 81 96     1 call PreviousScan
 125+ 99E1 22 A5 89     	ld (Posicion_actual),hl
 126+ 99E4 10 E2            djnz 3B
 127+ 99E6 CD CD 9C     2 call Genera_coordenadas
 128+ 99E9 C9           	ret
 129+ 99EA
 130+ 99EA              ; -----------------------------
 131+ 99EA              ;
 132+ 99EA              ;	27/5/23
 133+ 99EA              ;
 134+ 99EA              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99EA              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99EA              ;
 137+ 99EA              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99EA              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99EA              ;
 140+ 99EA              ;	Modifica: A y (Puntero_objeto).
 141+ 99EA
 142+ 99EA 3A E4 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99ED CB 47        	bit 0,a
 144+ 99EF C8           	ret z
 145+ 99F0 CB 87        	res 0,a
 146+ 99F2 32 E4 89     	ld (Ctrl_2),a
 147+ 99F5 2A E7 89     	ld hl,(Repone_puntero_objeto)
 148+ 99F8 22 A7 89     	ld (Puntero_objeto),hl
 149+ 99FB C9           	ret
 150+ 99FC
 151+ 99FC              ; ******************************************************************************************************************************************************************************************
 152+ 99FC              ;
 153+ 99FC              ;	19/10/22
 154+ 99FC              ;
 155+ 99FC              ;	Mov_right.
 156+ 99FC              ;
 157+ 99FC              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99FC              ;
 159+ 99FC
 160+ 99FC 21 D1 89     Mov_right ld hl,Ctrl_0
 161+ 99FF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A01              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A01              ; 																	; _ en el caso de que no lo haya.
 164+ 9A01 3A D1 89     	ld a,(Ctrl_0)
 165+ 9A04 CB 77        	bit 6,a
 166+ 9A06 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A08
 168+ 9A08 CD 36 9C     	call Stop_Amadeus_right
 169+ 9A0B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A0C 18 4D        	jr 8F
 171+ 9A0E
 172+ 9A0E 3A A9 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A11 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A13 20 46        	jr nz,8F
 175+ 9A15
 176+ 9A15 3A AB 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A18 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A19 28 40        	jr z,8F
 179+ 9A1B
 180+ 9A1B              ; ---------- ---------- ----------
 181+ 9A1B              ;
 182+ 9A1B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A1B
 184+ 9A1B 3A B9 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A1E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A20 28 11        	jr z,1F
 187+ 9A22 38 06        	jr c,6F
 188+ 9A24 FE 04        	cp 4
 189+ 9A26 28 14        	jr z,7F
 190+ 9A28 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A2A
 192+ 9A2A              ; ---------- ---------- ----------
 193+ 9A2A              ;
 194+ 9A2A              ; Perfiles de velocidad
 195+ 9A2A              ;
 196+ 9A2A
 197+ 9A2A 3A AB 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A2D FE FE        	cp $fe
 199+ 9A2F 20 2A        	jr nz,8F
 200+ 9A31 18 10        	jr 3F
 201+ 9A33 3A AB 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A36 FE FD        	cp $fd
 203+ 9A38 20 21        	jr nz,8F
 204+ 9A3A 18 07        	jr 3F
 205+ 9A3C 3A AB 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A3F FE FB        	cp $fb
 207+ 9A41 20 18        	jr nz,8F
 208+ 9A43
 209+ 9A43              ; ---------- ---------- ----------
 210+ 9A43
 211+ 9A43              3
 212+ 9A43 CD 76 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A46              ;	call Reinicio
 214+ 9A46
 215+ 9A46              ; ---------- ---------- ----------
 216+ 9A46              ;
 217+ 9A46              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A46
 219+ 9A46 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A48 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A49 CD 62 9A     	call DESPLZ_DER
 222+ 9A4C C1           	pop bc
 223+ 9A4D 10 F9        	djnz 5B
 224+ 9A4F 2A A5 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A52 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A53 22 A5 89     	ld (Posicion_actual),hl
 227+ 9A56 CD CD 9C     	call Genera_coordenadas
 228+ 9A59 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A5B
 230+ 9A5B              ; ---------- ---------- ----------
 231+ 9A5B
 232+ 9A5B 2A A5 89     8 ld hl,(Posicion_actual)
 233+ 9A5E CD 62 9A     	call DESPLZ_DER
 234+ 9A61 C9           2 ret
 235+ 9A62
 236+ 9A62              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A62              ;
 238+ 9A62              ;	22/9/22
 239+ 9A62              ;
 240+ 9A62
 241+ 9A62 CD 71 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A65 CD BD 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A68 CD E6 9A         call Ciclo_completo
 244+ 9A6B 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A6E CB FE        	set 7,(hl)
 246+ 9A70 C9           	ret
 247+ 9A71
 248+ 9A71              ; ******************************************************************************************************************************************************************************************
 249+ 9A71              ;	15/02/23
 250+ 9A71              ;
 251+ 9A71
 252+ 9A71 3A B9 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A74 47           	ld b,a
 254+ 9A75 2A B1 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A78 23           1 inc hl
 256+ 9A79 23           	inc hl
 257+ 9A7A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A7C 22 B1 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A7F CD 46 8D     	call Extrae_address
 260+ 9A82 22 A7 89     	ld (Puntero_objeto),hl
 261+ 9A85
 262+ 9A85              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A85
 264+ 9A85              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A85              ; Cuántos movimientos hemos hecho ??
 266+ 9A85              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A85
 268+ 9A85 2A AD 89     7 ld hl,(Indice_Sprite_der)
 269+ 9A88 EB           	ex de,hl
 270+ 9A89 A7           	and a
 271+ 9A8A ED 52        	sbc hl,de
 272+ 9A8C CB 3D        	srl l
 273+ 9A8E 3E 08        6 ld a,8
 274+ 9A90 95           	sub l
 275+ 9A91 30 1E        	jr nc,3F
 276+ 9A93
 277+ 9A93              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A93              ; B="0".
 279+ 9A93
 280+ 9A93 04           4 inc b
 281+ 9A94 3C           	inc a
 282+ 9A95 20 FC        	jr nz,4B
 283+ 9A97 78           	ld a,b
 284+ 9A98 08           	ex af,af
 285+ 9A99 2A AD 89     	ld hl,(Indice_Sprite_der)
 286+ 9A9C 23           5 inc hl
 287+ 9A9D 23           	inc hl
 288+ 9A9E 10 FC        	djnz 5B
 289+ 9AA0 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9AA3 CD 46 8D     	call Extrae_address
 291+ 9AA6 22 A7 89     	ld (Puntero_objeto),hl
 292+ 9AA9
 293+ 9AA9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9AA9              ; _(Posicion_actual).
 295+ 9AA9
 296+ 9AA9 21 A5 89     	ld hl,Posicion_actual
 297+ 9AAC 34           	inc (hl)
 298+ 9AAD 08               ex af,af
 299+ 9AAE 6F           	ld l,a
 300+ 9AAF 18 DD        	jr 6B
 301+ 9AB1
 302+ 9AB1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AB1
 304+ 9AB1 47           3 ld b,a
 305+ 9AB2 2A AF 89     	ld hl,(Indice_Sprite_izq)
 306+ 9AB5 23           2 inc hl
 307+ 9AB6 23           	inc hl
 308+ 9AB7 10 FC        	djnz 2B
 309+ 9AB9 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9ABC C9           8 ret
 311+ 9ABD
 312+ 9ABD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9ABD              ;
 314+ 9ABD              ;	24/7/22
 315+ 9ABD              ;
 316+ 9ABD              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9ABD              ;
 318+ 9ABD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9ABD              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9ABD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9ABD
 322+ 9ABD 3A AB 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AC0 A7           	and a
 324+ 9AC1 20 1F        	jr nz,1F
 325+ 9AC3 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9AC5 32 AB 89         ld (CTRL_DESPLZ),a
 327+ 9AC8
 328+ 9AC8 21 A4 89     	ld hl,Columns
 329+ 9ACB 34           	inc (hl)
 330+ 9ACC 3A B7 89     	ld a,(Cuad_objeto)
 331+ 9ACF E6 01        	and 1
 332+ 9AD1 28 0F        	jr z,1F
 333+ 9AD3 2A A5 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9AD6 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9AD7 22 A5 89     	ld (Posicion_actual),hl
 336+ 9ADA CD CD 9C     	call Genera_coordenadas
 337+ 9ADD CD 42 9C     	call Inc_CTRL_DESPLZ
 338+ 9AE0 18 03        	jr 2F
 339+ 9AE2 CD 42 9C     1 call Inc_CTRL_DESPLZ
 340+ 9AE5 C9           2 ret
 341+ 9AE6
 342+ 9AE6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9AE6              ;
 344+ 9AE6              ;	24/7/22
 345+ 9AE6              ;
 346+ 9AE6              ;	Ciclo_completo.
 347+ 9AE6              ;
 348+ 9AE6              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9AE6              ;
 350+ 9AE6              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9AE6              ; 	Decrementamos (Columns).
 352+ 9AE6              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9AE6              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9AE6
 355+ 9AE6
 356+ 9AE6 3A AB 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AE9 FE FF        	cp $ff
 358+ 9AEB 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AED E6 F0        	and $f0
 360+ 9AEF 20 28        	jr nz,3F
 361+ 9AF1
 362+ 9AF1              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AF1
 364+ 9AF1 3A AB 89     	ld a,(CTRL_DESPLZ)
 365+ 9AF4 47           	ld b,a
 366+ 9AF5 3E F8        	ld a,$f8
 367+ 9AF7 80           	add b
 368+ 9AF8 32 AB 89     	ld (CTRL_DESPLZ),a
 369+ 9AFB 18 1C        	jr 3F
 370+ 9AFD 21 A4 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B00 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B01 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B02 32 AB 89     	ld (CTRL_DESPLZ),a
 374+ 9B05 3A B7 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B08 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B0A 20 0A        	jr nz,2F
 377+ 9B0C 2A A5 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B0F 23           	inc hl
 379+ 9B10 22 A5 89     	ld (Posicion_actual),hl
 380+ 9B13 CD CD 9C     	call Genera_coordenadas
 381+ 9B16
 382+ 9B16              ; Inicia el puntero de Sprite.
 383+ 9B16
 384+ 9B16 CD 5D 8D     2 call Inicia_puntero_objeto_der
 385+ 9B19 C9           3 ret
 386+ 9B1A
 387+ 9B1A              ; ******************************************************************************************************************************************************************************************
 388+ 9B1A              ;
 389+ 9B1A              ;	15/02/23
 390+ 9B1A              ;
 391+ 9B1A              ;	Mov_left.
 392+ 9B1A              ;
 393+ 9B1A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B1A              ;
 395+ 9B1A 21 D1 89     Mov_left ld hl,Ctrl_0
 396+ 9B1D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B1F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B1F              ; 																	; _ en el caso de que no lo haya.
 399+ 9B1F 3A D1 89     	ld a,(Ctrl_0)
 400+ 9B22 CB 77        	bit 6,a
 401+ 9B24 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9B26
 403+ 9B26 CD 3C 9C     	call Stop_Amadeus_left
 404+ 9B29 C8           	ret z
 405+ 9B2A 20 4A        	jr nz,8F
 406+ 9B2C
 407+ 9B2C 3A A9 89     11 ld a,(Coordenada_X)
 408+ 9B2F A7           	and a
 409+ 9B30 20 44        	jr nz,8F
 410+ 9B32
 411+ 9B32 3A AB 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9B35 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9B36 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9B38
 415+ 9B38              ; ---------- ---------- ----------
 416+ 9B38
 417+ 9B38 3A B8 89     	ld a,(Vel_left)
 418+ 9B3B FE 02        	cp 2
 419+ 9B3D 28 0F        	jr z,1F
 420+ 9B3F 38 04        	jr c,6F
 421+ 9B41 FE 04        	cp 4
 422+ 9B43 28 12        	jr z,7F
 423+ 9B45
 424+ 9B45              ; ---------- ---------- ----------
 425+ 9B45
 426+ 9B45 3A AB 89     6 ld a,(CTRL_DESPLZ)
 427+ 9B48 FE F8        	cp $f8
 428+ 9B4A 20 2A        	jr nz,8F
 429+ 9B4C 18 10        	jr 4F
 430+ 9B4E 3A AB 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B51 FE F9        	cp $f9
 432+ 9B53 20 21        	jr nz,8F
 433+ 9B55 18 07        	jr 4F
 434+ 9B57 3A AB 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B5A FE FB        	cp $fb
 436+ 9B5C 20 18        	jr nz,8F
 437+ 9B5E
 438+ 9B5E              ; ---------- ---------- ----------
 439+ 9B5E
 440+ 9B5E              4
 441+ 9B5E CD 64 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B61              ;	call Reinicio
 443+ 9B61
 444+ 9B61              ; ---------- ---------- ----------
 445+ 9B61
 446+ 9B61 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B63 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B64
 449+ 9B64              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B64              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B64
 452+ 9B64 CD 7D 9B     	call DESPLZ_IZQ
 453+ 9B67 C1           	pop bc
 454+ 9B68 10 F9        	djnz 5B
 455+ 9B6A 2A A5 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B6D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B6E 22 A5 89     	ld (Posicion_actual),hl
 458+ 9B71 CD CD 9C     	call Genera_coordenadas
 459+ 9B74 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B76
 461+ 9B76              ; ---------- ---------- ----------
 462+ 9B76
 463+ 9B76              ; Movemos, no hay recolocación.
 464+ 9B76
 465+ 9B76 2A A5 89     8 ld hl,(Posicion_actual)
 466+ 9B79 CD 7D 9B     	call DESPLZ_IZQ
 467+ 9B7C C9           2 ret
 468+ 9B7D
 469+ 9B7D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B7D              ;
 471+ 9B7D              ;	22/9/22
 472+ 9B7D
 473+ 9B7D              DESPLZ_IZQ
 474+ 9B7D
 475+ 9B7D CD 8C 9B     	call Desplaza_izquierda
 476+ 9B80 CD D8 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B83 CD 00 9C     	call Ciclo_completo_2
 478+ 9B86 21 D1 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B89 CB BE        	res 7,(hl)
 480+ 9B8B C9           	ret
 481+ 9B8C
 482+ 9B8C              Desplaza_izquierda
 483+ 9B8C
 484+ 9B8C 3A B8 89     	ld a,(Vel_left)
 485+ 9B8F 47           	ld b,a
 486+ 9B90 2A B3 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9B93 23           1 inc hl
 488+ 9B94 23           	inc hl
 489+ 9B95 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9B97 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9B9A CD 46 8D     	call Extrae_address
 492+ 9B9D 22 A7 89     	ld (Puntero_objeto),hl
 493+ 9BA0
 494+ 9BA0              ; Modifica (Puntero_DESPLZ_der).
 495+ 9BA0
 496+ 9BA0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9BA0              ; Cuántos movimientos hemos hecho ??
 498+ 9BA0              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9BA0
 500+ 9BA0 2A AF 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9BA3 EB           	ex de,hl
 502+ 9BA4 A7           	and a
 503+ 9BA5 ED 52        	sbc hl,de
 504+ 9BA7 CB 3D        	srl l
 505+ 9BA9 3E 08        6 ld a,8
 506+ 9BAB 95           	sub l
 507+ 9BAC 30 1E        	jr nc,3F
 508+ 9BAE
 509+ 9BAE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9BAE              ; B="0".
 511+ 9BAE
 512+ 9BAE 04           4 inc b
 513+ 9BAF 3C           	inc a
 514+ 9BB0 20 FC        	jr nz,4B
 515+ 9BB2 78           	ld a,b
 516+ 9BB3 08           	ex af,af
 517+ 9BB4 2A AF 89     	ld hl,(Indice_Sprite_izq)
 518+ 9BB7 23           5 inc hl
 519+ 9BB8 23           	inc hl
 520+ 9BB9 10 FC        	djnz 5B
 521+ 9BBB 22 B3 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9BBE CD 46 8D     	call Extrae_address
 523+ 9BC1 22 A7 89     	ld (Puntero_objeto),hl
 524+ 9BC4
 525+ 9BC4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9BC4              ; _(Posicion_actual).
 527+ 9BC4
 528+ 9BC4 21 A5 89     	ld hl,Posicion_actual
 529+ 9BC7 35           	dec (hl)
 530+ 9BC8 08           	ex af,af
 531+ 9BC9 6F           	ld l,a
 532+ 9BCA 18 DD        	jr 6B
 533+ 9BCC
 534+ 9BCC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9BCC
 536+ 9BCC 47           3 ld b,a
 537+ 9BCD 2A AD 89     	ld hl,(Indice_Sprite_der)
 538+ 9BD0 23           2 inc hl
 539+ 9BD1 23           	inc hl
 540+ 9BD2 10 FC        	djnz 2B
 541+ 9BD4 22 B1 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9BD7 C9           8 ret
 543+ 9BD8
 544+ 9BD8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9BD8              ;
 546+ 9BD8              ;	modifica_parametros_1er_DESPLZ
 547+ 9BD8              ;
 548+ 9BD8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9BD8              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9BD8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9BD8
 552+ 9BD8 3A AB 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9BDB A7           	and a
 554+ 9BDC 20 1E        	jr nz,1F
 555+ 9BDE 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9BDF 32 AB 89         ld (CTRL_DESPLZ),a
 557+ 9BE2 21 A4 89     	ld hl,Columns
 558+ 9BE5 34           	inc (hl)
 559+ 9BE6 3A B7 89     	ld a,(Cuad_objeto)
 560+ 9BE9 E6 01        	and 1
 561+ 9BEB 20 0F        	jr nz,1F
 562+ 9BED 2A A5 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9BF0 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9BF1 22 A5 89     	ld (Posicion_actual),hl
 565+ 9BF4 CD CD 9C     	call Genera_coordenadas
 566+ 9BF7 CD 53 9C     	call Dec_CTRL_DESPLZ
 567+ 9BFA 18 03        	jr 2F
 568+ 9BFC CD 53 9C     1 call Dec_CTRL_DESPLZ
 569+ 9BFF C9           2 ret
 570+ 9C00
 571+ 9C00              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C00
 573+ 9C00 3A AB 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C03 FE F7        	cp $f7
 575+ 9C05 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C07 30 2C        	jr nc,3F
 577+ 9C09
 578+ 9C09              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C09
 580+ 9C09 06 00        	ld b,0
 581+ 9C0B 04           4 inc b
 582+ 9C0C 3C           	inc a
 583+ 9C0D FE F7        	cp $f7
 584+ 9C0F 20 FA        	jr nz,4B
 585+ 9C11 3E FF        	ld a,$ff
 586+ 9C13 90           	sub b
 587+ 9C14 32 AB 89     	ld (CTRL_DESPLZ),a
 588+ 9C17 18 1C        	jr 3F
 589+ 9C19
 590+ 9C19              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C19
 592+ 9C19 21 A4 89     1 ld hl,Columns
 593+ 9C1C 35           	dec (hl)
 594+ 9C1D AF           	xor a
 595+ 9C1E 32 AB 89     	ld (CTRL_DESPLZ),a
 596+ 9C21 3A B7 89     	ld a,(Cuad_objeto)
 597+ 9C24 E6 01        	and 1
 598+ 9C26 28 0A        	jr z,2F
 599+ 9C28 2A A5 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9C2B 2B           	dec hl
 601+ 9C2C 22 A5 89     	ld (Posicion_actual),hl
 602+ 9C2F CD CD 9C     	call Genera_coordenadas
 603+ 9C32
 604+ 9C32              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9C32
 606+ 9C32 CD 70 8D     2 call Inicia_puntero_objeto_izq
 607+ 9C35 C9           3 ret
 608+ 9C36
 609+ 9C36              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9C36              ;
 611+ 9C36              ;	19/10/22
 612+ 9C36              ;
 613+ 9C36              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9C36              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9C36
 616+ 9C36 3A A9 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9C39 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9C3B C9           	ret
 619+ 9C3C
 620+ 9C3C              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9C3C              ;
 622+ 9C3C              ;	19/10/22
 623+ 9C3C              ;
 624+ 9C3C              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9C3C              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9C3C
 627+ 9C3C 3A A9 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9C3F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9C41 C9           	ret
 630+ 9C42
 631+ 9C42              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9C42              ;
 633+ 9C42              ;	24/7/22
 634+ 9C42              ;
 635+ 9C42              ;	Inc_CTRL_DESPLZ
 636+ 9C42              ;
 637+ 9C42              ;
 638+ 9C42              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9C42
 640+ 9C42 21 AB 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9C45 3A B9 89     	ld a,(Vel_right)
 642+ 9C48 A7           	and a
 643+ 9C49 28 06        	jr z,1F
 644+ 9C4B 47           	ld b,a
 645+ 9C4C 34           3 inc (hl)
 646+ 9C4D 10 FD        	djnz 3B
 647+ 9C4F 18 01        	jr 2F
 648+ 9C51 34           1 inc (hl)
 649+ 9C52 C9           2 ret
 650+ 9C53
 651+ 9C53              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C53              ;
 653+ 9C53              ;	5/2/23
 654+ 9C53              ;
 655+ 9C53              ;	Dec_CTRL_DESPLZ
 656+ 9C53              ;
 657+ 9C53              ;
 658+ 9C53              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C53
 660+ 9C53 21 AB 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C56 3A B8 89     	ld a,(Vel_left)
 662+ 9C59 A7           	and a
 663+ 9C5A 28 06        	jr z,1F
 664+ 9C5C 47           	ld b,a
 665+ 9C5D 35           3 dec (hl)
 666+ 9C5E 10 FD        	djnz 3B
 667+ 9C60 18 01        	jr 2F
 668+ 9C62 35           1 dec (hl)
 669+ 9C63 C9           2 ret
 670+ 9C64
 671+ 9C64              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C64
 673+ 9C64 2A A5 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C67 01 1F 00     	ld bc,31
 675+ 9C6A A7           	and a
 676+ 9C6B ED 4A        	adc hl,bc
 677+ 9C6D 22 A5 89     	ld (Posicion_actual),hl
 678+ 9C70 21 D1 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C73 CB C6        	set 0,(hl)
 680+ 9C75 C9           	ret
 681+ 9C76
 682+ 9C76              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C76
 684+ 9C76 2A A5 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C79 01 1F 00     	ld bc,31
 686+ 9C7C A7           	and a
 687+ 9C7D ED 42        	sbc hl,bc
 688+ 9C7F 22 A5 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9C82 21 D1 89     	ld hl,Ctrl_0
 690+ 9C85 CB CE        	set 1,(hl)
 691+ 9C87 C9           	ret
 692+ 9C88
 693+ 9C88              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9C88
 695+ 9C88 24           Reaparece_abajo inc h
 696+ 9C89 01 E0 17     	ld bc,$17e0
 697+ 9C8C A7           	and a
 698+ 9C8D ED 4A        	adc hl,bc
 699+ 9C8F 22 A5 89     	ld (Posicion_actual),hl
 700+ 9C92 21 D1 89     	ld hl,Ctrl_0
 701+ 9C95 CB D6        	set 2,(hl)
 702+ 9C97 C9           	ret
 703+ 9C98
 704+ 9C98              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9C98
 706+ 9C98 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9C9B A7           	and a
 708+ 9C9C ED 42        	sbc hl,bc
 709+ 9C9E 22 A5 89     	ld (Posicion_actual),hl
 710+ 9CA1 21 D1 89     	ld hl,Ctrl_0
 711+ 9CA4 CB DE        	set 3,(hl)
 712+ 9CA6 C9           	ret
 713+ 9CA7
 714+ 9CA7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9CA7              ;
 716+ 9CA7              ;	15/07/23
 717+ 9CA7
 718+ 9CA7              Reinicio
 719+ 9CA7
 720+ 9CA7              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9CA7
 722+ 9CA7 AF           	xor a
 723+ 9CA8 21 D8 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9CAB CD C9 9C     	call Limpia_contenido_hl
 725+ 9CAE
 726+ 9CAE 21 A5 89     	ld hl,Posicion_actual
 727+ 9CB1 CD C9 9C     	call Limpia_contenido_hl
 728+ 9CB4
 729+ 9CB4 CD EA 9F     	call Inicializa_Puntero_indice_mov
 730+ 9CB7 CD 74 9F     	call Inicia_Puntero_mov
 731+ 9CBA
 732+ 9CBA 21 DA 89     	ld hl,Incrementa_puntero
 733+ 9CBD 06 05        	ld b,5
 734+ 9CBF 77           1 ld (hl),a
 735+ 9CC0 23           	inc hl
 736+ 9CC1 10 FC        	djnz 1B
 737+ 9CC3
 738+ 9CC3 21 E4 89     	ld hl,Ctrl_2
 739+ 9CC6 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9CC8
 741+ 9CC8 C9           	ret
 742+ 9CC9
 743+ 9CC9 77           Limpia_contenido_hl	ld (hl),a
 744+ 9CCA 23           	inc hl
 745+ 9CCB 77           	ld (hl),a
 746+ 9CCC C9           	ret
 747+ 9CCD
 748+ 9CCD
# file closed: Direcciones.asm
1359  9CCD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CCD              ; ------------------------------------------------------------------------
   2+ 9CCD              ;
   3+ 9CCD              ;	02/04/23
   4+ 9CCD              ;
   5+ 9CCD              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CCD              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CCD              ;
   8+ 9CCD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CCD              ;
  10+ 9CCD              ;	Modifica: A,BC y DE.
  11+ 9CCD
  12+ 9CCD C5           Genera_coordenadas push bc
  13+ 9CCE E5           	push hl
  14+ 9CCF D5           	push de
  15+ 9CD0
  16+ 9CD0 2A A5 89     	ld hl,(Posicion_actual)
  17+ 9CD3
  18+ 9CD3 7D           	ld a,l
  19+ 9CD4 E6 1F        	and $1f
  20+ 9CD6 32 A9 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CD9
  22+ 9CD9 CD 42 99     	call calcula_tercio
  23+ 9CDC 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CDD
  25+ 9CDD 1E 00        	ld e,0
  26+ 9CDF 7D           	ld a,l
  27+ 9CE0 E6 E0        	and $e0
  28+ 9CE2 28 01        	jr z,1F
  29+ 9CE4 04           	inc b
  30+ 9CE5
  31+ 9CE5 04           1 inc b
  32+ 9CE6 05           	dec b
  33+ 9CE7 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CE9              ;														; _ , salimos.
  35+ 9CE9 1C           3 inc e
  36+ 9CEA D6 20        	sub 32
  37+ 9CEC 20 FB        	jr nz,3B
  38+ 9CEE 10 F5        	djnz 1B
  39+ 9CF0
  40+ 9CF0 7B           2 ld a,e
  41+ 9CF1 32 AA 89     	ld (Coordenada_y),a
  42+ 9CF4
  43+ 9CF4 D1           	pop de
  44+ 9CF5 E1           	pop hl
  45+ 9CF6 C1           	pop bc
  46+ 9CF7
  47+ 9CF7 C9           	ret
  48+ 9CF8
  49+ 9CF8              ; ------------------------------------------------------------------------
  50+ 9CF8              ;	28/05/23
  51+ 9CF8              ;
  52+ 9CF8              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CF8              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CF8              ;
  55+ 9CF8              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CF8              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CF8              ;
  58+ 9CF8              ;		DE="$120d"
  59+ 9CF8              ;
  60+ 9CF8              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CF8              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CF8              ;
  63+ 9CF8              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CF8
  65+ 9CF8              ;	Modifica: A,BC y DE.
  66+ 9CF8
  67+ 9CF8
  68+ 9CF8              Genera_coordenadas_disparo
  69+ 9CF8
  70+ 9CF8              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CF8
  72+ 9CF8 7D           	ld a,l
  73+ 9CF9 E6 1F        	and $1f
  74+ 9CFB 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CFC CD 42 99     	call calcula_tercio
  76+ 9CFF 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D00 1E 00        	ld e,0
  78+ 9D02 7D           	ld a,l
  79+ 9D03 E6 E0        	and $e0
  80+ 9D05 28 01        	jr z,1F
  81+ 9D07 04           	inc b
  82+ 9D08 1C           1 inc e
  83+ 9D09 D6 20        	sub 32
  84+ 9D0B 20 FB        	jr nz,1B
  85+ 9D0D 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D0F C9           	ret
  87+ 9D10
# file closed: Genera_coordenadas.asm
1360  9D10              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D10
   2+ 9D10
   3+ 9D10              ;   07/07/23
   4+ 9D10              ;
   5+ 9D10              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D10              ;
   7+ 9D10              ;   Codificación:
   8+ 9D10              ;
   9+ 9D10              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D10              ;
  11+ 9D10              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D10              ;
  13+ 9D10              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D10              ;
  15+ 9D10              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D10              ;
  17+ 9D10              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D10              ;                               ..... %01000010 Vel_up 4
  19+ 9D10              ;                                               Vel_down 2
  20+ 9D10              ;                               ..... $42
  21+ 9D10              ;
  22+ 9D10              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D10              ;
  24+ 9D10              ;                               ..... %01000010 Vel_left 4
  25+ 9D10              ;                                               Vel_right 2
  26+ 9D10              ;                               ..... $42
  27+ 9D10              ;
  28+ 9D10              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D10              ;
  30+ 9D10              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D10              ;
  32+ 9D10              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D10              ;
  34+ 9D10              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D10              ;                                     $53
  36+ 9D10              ;
  37+ 9D10              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D10              ;
  39+ 9D10              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D10              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D10              ;
  42+ 9D10              ;                       Arriba ..... $81
  43+ 9D10              ;                       Arriba - izquierda ..... $a1
  44+ 9D10              ;                       Arriba - derecha ..... $91
  45+ 9D10              ;
  46+ 9D10              ;                       Abajo ..... $41
  47+ 9D10              ;                       Abajo - izquierda ..... $61
  48+ 9D10              ;                       Abajo - derecha ..... $51
  49+ 9D10              ;
  50+ 9D10              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D10              ;
  52+ 9D10              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D10              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D10              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D10              ;
  56+ 9D10              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D10              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D10              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D10              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D10              ;
  61+ 9D10              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D10              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D10              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D10              ;
  65+ 9D10              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D10              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D10              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D10              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D10
  70+ 9D10              ; ----- ----- ----- ----- -----
  71+ 9D10
  72+ 9D10 3C 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D12 44 9D            defw F_1
  74+ 9D14 4E 9D            defw F_2
  75+ 9D16 58 9D            defw Codo_abajo_derecha
  76+ 9D18 8C 9D            defw Derecha_y_subiendo
  77+ 9D1A 96 9D            defw Derecha_y_subiendo_1
  78+ 9D1C A0 9D            defw F_3
  79+ 9D1E AA 9D            defw F_4
  80+ 9D20 B4 9D            defw Derecha_y_bajando
  81+ 9D22 BE 9D            defw Derecha_y_bajando_1
  82+ 9D24 C8 9D            defw Derecha_y_bajando_2
  83+ 9D26 D2 9D            defw Codo_derecha_abajo
  84+ 9D28 02 9E            defw Codo_abajo_izq.
  85+ 9D2A 36 9E            defw Izquierda_y_subiendo
  86+ 9D2C 40 9E            defw Izquierda_y_subiendo_1
  87+ 9D2E 4A 9E            defw F_5
  88+ 9D30 54 9E            defw F_6
  89+ 9D32 5E 9E            defw Izquierda_y_bajando
  90+ 9D34 68 9E            defw Izquierda_y_bajando_1
  91+ 9D36 72 9E            defw Izquierda_y_bajando_2
  92+ 9D38 7C 9E            defw Codo_izquierda_abajo
  93+ 9D3A 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D3C
  95+ 9D3C 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D40 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D44
  98+ 9D44 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D48 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D4C 08 00
 100+ 9D4E 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D52 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D56 0F FE
 102+ 9D58
 103+ 9D58 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D5C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D60 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D64 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D68 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D6C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D70 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D74 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D78 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D7C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D80 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D84 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D88 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D8C
 117+ 9D8C 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D90 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D94 06 00
 119+ 9D96
 120+ 9D96 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D9A 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9D9E 02 00
 122+ 9DA0
 123+ 9DA0 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DA4 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DA8 04 00
 125+ 9DAA 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DAE 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DB2 08 00
 127+ 9DB4
 128+ 9DB4 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DB8 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DBC 02 00
 130+ 9DBE
 131+ 9DBE 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DC2 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DC6 06 00
 133+ 9DC8
 134+ 9DC8 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DCC 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DD0 06 00
 136+ 9DD2
 137+ 9DD2              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DD2
 139+ 9DD2 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DD6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DDA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DDE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DE2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DE6 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DEA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DEE 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DF2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DF6 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DFA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9DFE 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E02
 152+ 9E02 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E06 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E0A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E0E 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E12 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E16 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E1A 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E1E 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E22 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E26 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E2A 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E2E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E32 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E36
 166+ 9E36 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E3A 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E3E 06 00
 168+ 9E40
 169+ 9E40 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E44 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E48 02 00
 171+ 9E4A
 172+ 9E4A 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E4E 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E52 04 00
 174+ 9E54 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E58 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E5C 08 00
 176+ 9E5E
 177+ 9E5E 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E62 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E66 02 00
 179+ 9E68
 180+ 9E68 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E6C 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E70 06 00
 182+ 9E72
 183+ 9E72 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E76 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E7A 06 00
 185+ 9E7C
 186+ 9E7C 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E80 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E84 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E88 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E8C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E90 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E94 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E98 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9E9C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EA0 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EA4 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EA8 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EAC
 199+ 9EAC              ; ----- ----- ----- ----- -----
 200+ 9EAC              ;
 201+ 9EAC              ;   27/06/23
 202+ 9EAC
 203+ 9EAC              Movimiento
 204+ 9EAC
 205+ 9EAC              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EAC
 207+ 9EAC              ;    ld hl,(Posicion_actual)
 208+ 9EAC
 209+ 9EAC 3A E4 89         ld a,(Ctrl_2)
 210+ 9EAF CB 57            bit 2,a
 211+ 9EB1 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EB3
 213+ 9EB3 2A D6 89         ld hl,(Puntero_mov)
 214+ 9EB6 7E               ld a,(hl)
 215+ 9EB7
 216+ 9EB7              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EB7
 218+ 9EB7              Inicia_desplazamiento.
 219+ 9EB7
 220+ 9EB7              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EB7
 222+ 9EB7 CD AB 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EBA
 224+ 9EBA              ; Iniciamos (Repetimos_mov).
 225+ 9EBA
 226+ 9EBA 7E               ld a,(hl)
 227+ 9EBB E6 0F            and $0f
 228+ 9EBD 32 DC 89         ld (Repetimos_desplazamiento),a
 229+ 9EC0 32 DD 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9EC3
 231+ 9EC3              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EC3
 233+ 9EC3 23               inc hl
 234+ 9EC4 7E               ld a,(hl)
 235+ 9EC5 32 DF 89         ld (Cola_de_desplazamiento),a
 236+ 9EC8 2B               dec hl
 237+ 9EC9
 238+ 9EC9 21 E4 89         ld hl,Ctrl_2
 239+ 9ECC CB D6            set 2,(hl)
 240+ 9ECE
 241+ 9ECE              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9ECE              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9ECE
 244+ 9ECE              Desplazamiento_iniciado
 245+ 9ECE
 246+ 9ECE CD 7F 9F         call Aplica_desplazamiento
 247+ 9ED1
 248+ 9ED1 3A E4 89         ld a,(Ctrl_2)
 249+ 9ED4 CB 67            bit 4,a
 250+ 9ED6 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9ED7
 252+ 9ED7 21 DC 89     3 ld hl,Repetimos_desplazamiento
 253+ 9EDA 35               dec (hl)
 254+ 9EDB C0               ret nz
 255+ 9EDC
 256+ 9EDC              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EDC              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EDC              ; Analiza (Cola_de_desplazamiento).
 259+ 9EDC
 260+ 9EDC 3A DF 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EDF A7               and a
 262+ 9EE0 CC D4 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EE3 28 30            jr z,Reinicia_el_movimiento
 264+ 9EE5
 265+ 9EE5 FE FF            cp $ff
 266+ 9EE7 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EE9
 268+ 9EE9 FE FE            cp $fe
 269+ 9EEB CC 58 9F         call z,Fijamos_bucle
 270+ 9EEE 28 25            jr z,Reinicia_el_movimiento
 271+ 9EF0
 272+ 9EF0 FE FD            cp $fd
 273+ 9EF2 20 11            jr nz,1F
 274+ 9EF4
 275+ 9EF4              ; ---
 276+ 9EF4              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EF4
 278+ 9EF4 3A E4 89         ld a,(Ctrl_2)
 279+ 9EF7 CB 5F            bit 3,a
 280+ 9EF9 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9EFB
 282+ 9EFB              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9EFB
 284+ 9EFB 21 E4 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9EFE CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F00
 287+ 9F00 CD 69 9F         call Inicia_Repetimos_movimiento
 288+ 9F03 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F05              ; ---
 290+ 9F05
 291+ 9F05 FE 01        1 cp 1
 292+ 9F07 CA 42 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F0A
 294+ 9F0A 3D               dec a
 295+ 9F0B 32 DF 89         ld (Cola_de_desplazamiento),a
 296+ 9F0E
 297+ 9F0E 3A DD 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F11 32 DC 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F14              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F14 C9               ret
 301+ 9F15
 302+ 9F15              Reinicia_el_movimiento
 303+ 9F15
 304+ 9F15 3A E4 89         ld a,(Ctrl_2)
 305+ 9F18 CB 5F            bit 3,a
 306+ 9F1A 28 1B            jr z,2F
 307+ 9F1C
 308+ 9F1C              ; (Cola_de_desplazamiento)="254".
 309+ 9F1C
 310+ 9F1C 21 DE 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F1F 35               dec (hl)
 312+ 9F20 20 15            jr nz,2F
 313+ 9F22
 314+ 9F22              ; Fin de las repeticiones del último movimiento.
 315+ 9F22
 316+ 9F22 21 E4 89         ld hl,Ctrl_2
 317+ 9F25 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F27
 319+ 9F27 2A D6 89         ld hl,(Puntero_mov)
 320+ 9F2A 23               inc hl
 321+ 9F2B 23               inc hl
 322+ 9F2C 23               inc hl
 323+ 9F2D 22 D6 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F30              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F30 7E               ld a,(hl)
 326+ 9F31 32 DF 89         ld (Cola_de_desplazamiento),a
 327+ 9F34
 328+ 9F34 C3 DC 9E         jp Cola
 329+ 9F37
 330+ 9F37
 331+ 9F37 CD 74 9F     2 call Inicia_Puntero_mov
 332+ 9F3A
 333+ 9F3A 21 E4 89         ld hl,Ctrl_2
 334+ 9F3D CB 96            res 2,(hl)
 335+ 9F3F
 336+ 9F3F C3 AC 9E         jp Movimiento
 337+ 9F42
 338+ 9F42              Siguiente_desplazamiento
 339+ 9F42
 340+ 9F42              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9F42              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9F42
 343+ 9F42 21 E4 89         ld hl,Ctrl_2
 344+ 9F45 CB 96            res 2,(hl)
 345+ 9F47
 346+ 9F47 2A D6 89         ld hl,(Puntero_mov)
 347+ 9F4A 23               inc hl
 348+ 9F4B 23               inc hl
 349+ 9F4C 22 D6 89         ld (Puntero_mov),hl
 350+ 9F4F
 351+ 9F4F 7E               ld a,(hl)
 352+ 9F50 A7               and a
 353+ 9F51 CC D4 9F         call z,Incrementa_Puntero_indice_mov
 354+ 9F54 CA 15 9F         jp z,Reinicia_el_movimiento
 355+ 9F57
 356+ 9F57 C9               ret
 357+ 9F58              ; Subrutinas -----------------------------------------
 358+ 9F58              ; ---------- --------- --------- ---------- ----------
 359+ 9F58              ;
 360+ 9F58              ;   24/07/23
 361+ 9F58              ;
 362+ 9F58              ;   Fijamos_bucle
 363+ 9F58              ;
 364+ 9F58              ;
 365+ 9F58
 366+ 9F58              Fijamos_bucle
 367+ 9F58
 368+ 9F58 3A DA 89         ld a,(Incrementa_puntero)
 369+ 9F5B 3C               inc a
 370+ 9F5C 32 DB 89         ld (Incrementa_puntero_backup),a
 371+ 9F5F
 372+ 9F5F CD D4 9F         call Incrementa_Puntero_indice_mov
 373+ 9F62 2A D4 89         ld hl,(Puntero_indice_mov)
 374+ 9F65 22 D8 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9F68 C9               ret
 376+ 9F69
 377+ 9F69              ; ---------- --------- --------- ---------- ----------
 378+ 9F69              ;
 379+ 9F69              ;   07/7/23
 380+ 9F69              ;
 381+ 9F69              ;   Inicia_Repetimos_movimiento
 382+ 9F69              ;
 383+ 9F69              ;
 384+ 9F69
 385+ 9F69              Inicia_Repetimos_movimiento
 386+ 9F69
 387+ 9F69              ; Iniciamos (Repetimos_movimiento).
 388+ 9F69
 389+ 9F69 DD 2A D6 89      ld ix,(Puntero_mov)
 390+ 9F6D DD 7E 02         ld a,(ix+2)
 391+ 9F70 32 DE 89         ld (Repetimos_movimiento),a
 392+ 9F73
 393+ 9F73 C9               ret
 394+ 9F74
 395+ 9F74              ; ---------- --------- --------- ---------- ----------
 396+ 9F74              ;
 397+ 9F74              ;   26/6/23
 398+ 9F74              ;
 399+ 9F74              ;   Inicia_Puntero_mov
 400+ 9F74              ;
 401+ 9F74              ;
 402+ 9F74
 403+ 9F74 2A D4 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9F77 5E               ld e,(hl)
 405+ 9F78 23               inc hl
 406+ 9F79 56               ld d,(hl)
 407+ 9F7A EB               ex de,hl
 408+ 9F7B 22 D6 89         ld (Puntero_mov),hl
 409+ 9F7E C9               ret
 410+ 9F7F
 411+ 9F7F              ; ---------- --------- --------- ---------- ----------
 412+ 9F7F              ;
 413+ 9F7F              ;   27/06/23
 414+ 9F7F              ;
 415+ 9F7F              ;   Aplica_movimiento.
 416+ 9F7F
 417+ 9F7F              Aplica_desplazamiento
 418+ 9F7F
 419+ 9F7F              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9F7F
 421+ 9F7F 2A D6 89         ld hl, (Puntero_mov)
 422+ 9F82
 423+ 9F82 7E               ld a,(hl)
 424+ 9F83 E6 F0            and $f0
 425+ 9F85 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9F86
 427+ 9F86 CB 7E            bit 7,(hl)
 428+ 9F88 28 03            jr z,1F
 429+ 9F8A CD B9 99         call Mov_up
 430+ 9F8D 2A D6 89     1 ld hl, (Puntero_mov)
 431+ 9F90 CB 76            bit 6,(hl)
 432+ 9F92 28 03            jr z,2F
 433+ 9F94 CD 88 99         call Mov_down
 434+ 9F97 2A D6 89     2 ld hl, (Puntero_mov)
 435+ 9F9A CB 6E            bit 5,(hl)
 436+ 9F9C 28 03            jr z,3F
 437+ 9F9E CD 1A 9B         call Mov_left
 438+ 9FA1 2A D6 89     3 ld hl, (Puntero_mov)
 439+ 9FA4 CB 66            bit 4,(hl)
 440+ 9FA6 C8               ret z
 441+ 9FA7 CD FC 99         call Mov_right
 442+ 9FAA C9               ret
 443+ 9FAB
 444+ 9FAB              ; ---------- --------- --------- ---------- ----------
 445+ 9FAB              ;
 446+ 9FAB              ;   26/06/23
 447+ 9FAB              ;
 448+ 9FAB              ;   Ajusta_velocidad_desplazamiento.
 449+ 9FAB
 450+ 9FAB              Ajusta_velocidad_desplazamiento
 451+ 9FAB
 452+ 9FAB              ; 1er byte de la cadena de movimiento.
 453+ 9FAB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9FAB
 455+ 9FAB CD C9 9F         call Extrae_nibble_alto
 456+ 9FAE
 457+ 9FAE 32 BA 89         ld (Vel_up),a
 458+ 9FB1 79               ld a,c
 459+ 9FB2 E6 0F            and $0f
 460+ 9FB4 32 BB 89         ld (Vel_down),a
 461+ 9FB7
 462+ 9FB7              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9FB7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9FB7
 465+ 9FB7 23               inc hl
 466+ 9FB8 CD C9 9F         call Extrae_nibble_alto
 467+ 9FBB
 468+ 9FBB 32 B8 89         ld (Vel_left),a
 469+ 9FBE 79               ld a,c
 470+ 9FBF E6 0F            and $0f
 471+ 9FC1 32 B9 89         ld (Vel_right),a
 472+ 9FC4
 473+ 9FC4              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9FC4
 475+ 9FC4 23               inc hl
 476+ 9FC5 22 D6 89         ld (Puntero_mov),hl
 477+ 9FC8 C9               ret
 478+ 9FC9
 479+ 9FC9 06 04        Extrae_nibble_alto ld b,4
 480+ 9FCB 7E               ld a,(hl)
 481+ 9FCC 4F               ld c,a
 482+ 9FCD E6 F0            and $f0
 483+ 9FCF CB 3F        1 srl a
 484+ 9FD1 10 FC            djnz 1B
 485+ 9FD3 C9               ret
 486+ 9FD4
 487+ 9FD4              ; ---------- --------- --------- ---------- ----------
 488+ 9FD4              ;
 489+ 9FD4              ;   5/7/23
 490+ 9FD4              ;
 491+ 9FD4              ;   Incrementa_Puntero_indice_mov
 492+ 9FD4
 493+ 9FD4              Incrementa_Puntero_indice_mov
 494+ 9FD4
 495+ 9FD4 21 DA 89         ld hl,Incrementa_puntero
 496+ 9FD7 34               inc (hl)
 497+ 9FD8
 498+ 9FD8 2A D4 89         ld hl,(Puntero_indice_mov)
 499+ 9FDB 01 02 00         ld bc,2
 500+ 9FDE A7               and a
 501+ 9FDF 09               add hl,bc
 502+ 9FE0 22 D4 89         ld (Puntero_indice_mov),hl
 503+ 9FE3
 504+ 9FE3 7E               ld a,(hl)
 505+ 9FE4 A7               and a
 506+ 9FE5
 507+ 9FE5              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9FE5
 509+ 9FE5              ;    jr z,$
 510+ 9FE5
 511+ 9FE5              ;! Reinicia el Patrón de movimiento.
 512+ 9FE5
 513+ 9FE5 CC EA 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9FE8
 515+ 9FE8 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9FE9
 517+ 9FE9 C9               ret
 518+ 9FEA
 519+ 9FEA
 520+ 9FEA              ; ---------- --------- --------- ---------- ----------
 521+ 9FEA              ;
 522+ 9FEA              ;   24/07/23
 523+ 9FEA              ;
 524+ 9FEA              ;   Inicializa_Puntero_indice_mov
 525+ 9FEA
 526+ 9FEA              Inicializa_Puntero_indice_mov
 527+ 9FEA
 528+ 9FEA              ; Existe etiqueta de bucle principal???
 529+ 9FEA
 530+ 9FEA 2A D8 89         ld hl,(Puntero_indice_mov_bucle)
 531+ 9FED 24               inc h
 532+ 9FEE 25               dec h
 533+ 9FEF 28 05            jr z,2F
 534+ 9FF1
 535+ 9FF1 22 D4 89         ld (Puntero_indice_mov),hl
 536+ 9FF4 18 14            jr 3F
 537+ 9FF6
 538+ 9FF6              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9FF6
 540+ 9FF6 3A DA 89     2 ld a,(Incrementa_puntero)
 541+ 9FF9 47               ld b,a
 542+ 9FFA
 543+ 9FFA 2A D4 89         ld hl,(Puntero_indice_mov)
 544+ 9FFD 2B           1 dec hl
 545+ 9FFE 2B               dec hl
 546+ 9FFF 10 FC            djnz 1B
 547+ A001 22 D4 89         ld (Puntero_indice_mov),hl
 548+ A004
 549+ A004 AF               xor a
 550+ A005 32 DA 89         ld (Incrementa_puntero),a
 551+ A008 18 06            jr 4F
 552+ A00A
 553+ A00A 3A DB 89     3 ld a,(Incrementa_puntero_backup)
 554+ A00D 32 DA 89         ld (Incrementa_puntero),a
 555+ A010 C9           4 ret
 556+ A011
 557+ A011
 558+ A011
# file closed: Patrones_de_mov.asm
1361  A011              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A011              ; Relojes y temporizaciones.
   2+ A011
   3+ A011              ; ------------------------------------------------------
   4+ A011              ;
   5+ A011              ;	16/7/23
   6+ A011              ;
   7+ A011              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A011              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A011              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A011              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A011              ;
  12+ A011              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A011              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A011
  15+ A011              ; Disparo_entidad db 1
  16+ A011              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A011              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A011
  19+ A011              Habilita_disparos
  20+ A011
  21+ A011 7E           	ld a,(hl)
  22+ A012 A7           	and a
  23+ A013 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A014
  25+ A014 EB           	ex de,hl
  26+ A015
  27+ A015 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A016 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A017
  30+ A017              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A017
  32+ A017 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A018 7E           	ld a,(hl)
  34+ A019 23           	inc hl
  35+ A01A 77           	ld (hl),a
  36+ A01B
  37+ A01B EB           	ex de,hl						; Habilitamos disparo.
  38+ A01C 3E 01        	ld a,1
  39+ A01E 77           	ld (hl),a
  40+ A01F C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1362  A020              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A020              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A020              ;
   3+ A020              ;	3/1/23
   4+ A020              ;
   5+ A020              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A020
   7+ A020              ;	ADC HL,SP	LD (addr),SP
   8+ A020              ;	ADD HL,SP	LD SP,(addr)
   9+ A020              ;	ADD IX,SP	LD SP,nn
  10+ A020              ; 	ADD IY,SP	LD SP,HL
  11+ A020              ;				LD SP,IX
  12+ A020              ;	DEC SP		LD SP,IY
  13+ A020
  14+ A020              ;	EX (SP),HL
  15+ A020              ;	EX (SP),IX
  16+ A020              ;	EX (SP),IY
  17+ A020
  18+ A020              ;	INC SP
  19+ A020
  20+ A020                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 ED 73 F7 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  33+ 7FA7
  34+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  35+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  36+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  37+ 7FAC
  38+ 7FAC 3A E6 89         ld a,(Ctrl_1)
  39+ 7FAF CB 47            bit 0,a
  40+ 7FB1 28 05            jr z,2F
  41+ 7FB3
  42+ 7FB3 2A 11 8A         ld hl,(Puntero_de_album_de_fotos_de_disparos)
  43+ 7FB6
  44+ 7FB6 18 03            jr 4F
  45+ 7FB8
  46+ 7FB8 2A 0F 8A     2 ld hl,(Puntero_de_album_de_fotos)               ; Album_de_fotos contiene la imagen de los registros implicados en el_
  47+ 7FBB
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 11 8A         ld (Puntero_de_album_de_fotos_de_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 0F 8A     5 ld (Puntero_de_album_de_fotos),hl
  64+ 7FD0 ED 7B F7 89  6 ld sp,(Stack)
  65+ 7FD4
  66+ 7FD4 C9               ret
  67+ 7FD5
  68+ 7FD5              ; ------------------------------------------------
  69+ 7FD5              ;
  70+ 7FD5              ;   3/08/23
  71+ 7FD5              ;
  72+ 7FD5              ;   La rutina estará situada justo después de la Caja_de_disparotes.
  73+ 7FD5
  74+ 7FD5                  org $7421
  75+ 7421
  76+ 7421              Gestiona_cajas_de_malotes
  77+ 7421
  78+ 7421              ; Desplazamos cajas.
  79+ 7421
  80+ 7421              ;   Byte1 - Byte0
  81+ 7421
  82+ 7421 21 1A 74         ld hl,Caja_de_malotes+1
  83+ 7424 7E               ld a,(hl)
  84+ 7425 A7               and a
  85+ 7426 28 04            jr z,1F
  86+ 7428
  87+ 7428              ;   El Byte1 contiene datos. Transferimos al byte0.
  88+ 7428
  89+ 7428 2B               dec hl
  90+ 7429 77               ld (hl),a
  91+ 742A 18 09            jr 2F
  92+ 742C
  93+ 742C              ; Byte1="0".
  94+ 742C              ; Byte0 contiene datos?.
  95+ 742C
  96+ 742C 21 19 74     1 ld hl,Caja_de_malotes
  97+ 742F 7E               ld a,(hl)
  98+ 7430 A7               and a
  99+ 7431 28 02            jr z,2F
 100+ 7433
 101+ 7433              ; Limpiamos Byte0 si contiene datos.
 102+ 7433
 103+ 7433 36 00            ld (hl),0
 104+ 7435
 105+ 7435              ;   Byte2 - Byte1
 106+ 7435
 107+ 7435              ;   El byte2 contiene datos?
 108+ 7435
 109+ 7435 21 1B 74     2 ld hl,Caja_de_malotes+2
 110+ 7438 7E               ld a,(hl)
 111+ 7439 A7               and a
 112+ 743A 28 04            jr z,3F
 113+ 743C
 114+ 743C              ;   El Byte2 contiene datos. Transferimos al byte1.
 115+ 743C
 116+ 743C 2B               dec hl
 117+ 743D 77               ld (hl),a
 118+ 743E 18 09            jr 4F
 119+ 7440
 120+ 7440              ; Byte2="0".
 121+ 7440              ; Byte1 contiene datos?.
 122+ 7440
 123+ 7440 21 1A 74     3 ld hl,Caja_de_malotes+1
 124+ 7443 7E               ld a,(hl)
 125+ 7444 A7               and a
 126+ 7445 28 02            jr z,4F
 127+ 7447
 128+ 7447              ; Limpiamos Byte1 si contiene datos.
 129+ 7447
 130+ 7447 36 00            ld (hl),0
 131+ 7449
 132+ 7449              ;   Byte3 - Byte2
 133+ 7449
 134+ 7449              ;   El byte3 contiene datos?
 135+ 7449
 136+ 7449 21 1C 74     4 ld hl,Caja_de_malotes+3
 137+ 744C 7E               ld a,(hl)
 138+ 744D A7               and a
 139+ 744E 28 04            jr z,5F
 140+ 7450
 141+ 7450              ;   El Byte3 contiene datos. Transferimos al byte2.
 142+ 7450
 143+ 7450 2B               dec hl
 144+ 7451 77               ld (hl),a
 145+ 7452 18 08            jr 6F
 146+ 7454
 147+ 7454              ; Byte3="0".
 148+ 7454              ; Byte2 contiene datos?.
 149+ 7454
 150+ 7454 21 1B 74     5 ld hl,Caja_de_malotes+2
 151+ 7457 7E               ld a,(hl)
 152+ 7458 A7               and a
 153+ 7459 C8               ret z
 154+ 745A
 155+ 745A              ; Limpiamos Byte2 si contiene datos.
 156+ 745A
 157+ 745A 36 00            ld (hl),0
 158+ 745C
 159+ 745C C9           6 ret
 160+ 745D
 161+ 745D              ; ------------------------------------------------
 162+ 745D              ;
 163+ 745D              ;   31/07/23
 164+ 745D              ;
 165+ 745D              ;   La rutina estará situada justo después de la Caja_de_disparotes.
 166+ 745D
 167+ 745D              Gestiona_albumes_de_fotos
 168+ 745D
 169+ 745D              ; Desplazamos álbumes.
 170+ 745D
 171+ 745D              ; (Album_de_fotos_1) --- (Album_de_fotos).
 172+ 745D
 173+ 745D              ;   El álbum_1 contiene datos?
 174+ 745D
 175+ 745D 21 85 70         ld hl,Album_de_fotos_1+1
 176+ 7460 7E               ld a,(hl)
 177+ 7461 A7               and a
 178+ 7462 28 05            jr z,1F
 179+ 7464
 180+ 7464              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 181+ 7464
 182+ 7464 CD 2E 75         call Album_1_a_Album_de_fotos
 183+ 7467 18 1A            jr 2F
 184+ 7469
 185+ 7469              ; El álbum_1 está vacío.
 186+ 7469              ; Album_de_fotos contiene datos?
 187+ 7469
 188+ 7469 21 01 70     1 ld hl,Album_de_fotos+1
 189+ 746C 7E               ld a,(hl)
 190+ 746D A7               and a
 191+ 746E 28 13            jr z,2F
 192+ 7470
 193+ 7470              ; Limpiamos Album_de_fotos.
 194+ 7470
 195+ 7470 21 00 70         ld hl,Album_de_fotos
 196+ 7473 36 00            ld (hl),0
 197+ 7475 11 01 70         ld de,Album_de_fotos+1
 198+ 7478 01 83 00         ld bc,$83
 199+ 747B ED B0            ldir
 200+ 747D 21 00 70         ld hl,Album_de_fotos
 201+ 7480 22 FB 89         ld (Stack_snapshot),hl
 202+ 7483
 203+ 7483              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 204+ 7483
 205+ 7483              ;   El álbum_2 contiene datos?
 206+ 7483
 207+ 7483 21 08 71     2 ld hl,Album_de_fotos_2+1
 208+ 7486 7E               ld a,(hl)
 209+ 7487 A7               and a
 210+ 7488 28 05            jr z,3F
 211+ 748A
 212+ 748A              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 213+ 748A
 214+ 748A CD 13 75         call Album_2_a_Album_1
 215+ 748D 18 1A            jr 4F
 216+ 748F
 217+ 748F              ; El álbum_2 está vacío.
 218+ 748F              ; álbum_1 contiene datos?
 219+ 748F
 220+ 748F 21 85 70     3 ld hl,Album_de_fotos_1+1
 221+ 7492 7E               ld a,(hl)
 222+ 7493 A7               and a
 223+ 7494 28 13            jr z,4F
 224+ 7496
 225+ 7496              ; Limpiamos Album_de_fotos_1.
 226+ 7496
 227+ 7496 21 84 70         ld hl,Album_de_fotos_1
 228+ 7499 36 00            ld (hl),0
 229+ 749B 11 85 70         ld de,Album_de_fotos_1+1
 230+ 749E 01 83 00         ld bc,$83
 231+ 74A1 ED B0            ldir
 232+ 74A3 21 84 70         ld hl,Album_de_fotos_1
 233+ 74A6 22 FF 89         ld (Stack_snapshot_1),hl
 234+ 74A9
 235+ 74A9              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 236+ 74A9
 237+ 74A9              ;   El álbum_3 contiene datos?
 238+ 74A9
 239+ 74A9 21 8B 71     4 ld hl,Album_de_fotos_3+1
 240+ 74AC 7E               ld a,(hl)
 241+ 74AD A7               and a
 242+ 74AE 28 05            jr z,5F
 243+ 74B0
 244+ 74B0              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 245+ 74B0
 246+ 74B0 CD F8 74         call Album_3_a_Album_2
 247+ 74B3 18 1A            jr 6F
 248+ 74B5
 249+ 74B5              ; El álbum_3 está vacío.
 250+ 74B5              ; álbum_2 contiene datos?
 251+ 74B5
 252+ 74B5 21 08 71     5 ld hl,Album_de_fotos_2+1
 253+ 74B8 7E               ld a,(hl)
 254+ 74B9 A7               and a
 255+ 74BA 28 13            jr z,6F
 256+ 74BC
 257+ 74BC              ; Limpiamos Album_de_fotos_2.
 258+ 74BC
 259+ 74BC 21 07 71         ld hl,Album_de_fotos_2
 260+ 74BF 36 00            ld (hl),0
 261+ 74C1 11 08 71         ld de,Album_de_fotos_2+1
 262+ 74C4 01 83 00         ld bc,$83
 263+ 74C7 ED B0            ldir
 264+ 74C9 21 07 71         ld hl,Album_de_fotos_2
 265+ 74CC 22 03 8A         ld (Stack_snapshot_2),hl
 266+ 74CF
 267+ 74CF C9           6 ret
 268+ 74D0
 269+ 74D0              ; ----------------------------------------------
 270+ 74D0              ;
 271+ 74D0              ;   31/7/23
 272+ 74D0              ;
 273+ 74D0              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 274+ 74D0              ;
 275+ 74D0              ;   Para pasar datos de un album a otro:
 276+ 74D0              ;
 277+ 74D0              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 278+ 74D0              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 279+ 74D0              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 280+ 74D0
 281+ 74D0 C5           Trasbase_de_datos push bc
 282+ 74D1 A7               and a
 283+ 74D2 ED 42            sbc hl,bc
 284+ 74D4 E5               push hl
 285+ 74D5 C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 286+ 74D6 E1               pop hl
 287+ 74D7 ED B0            ldir
 288+ 74D9 C9               ret
 289+ 74DA
 290+ 74DA              ; Paquetitos.
 291+ 74DA
 292+ 74DA 2A 07 8A     Trasbase_3a2 ld hl,(Stack_snapshot_3)
 293+ 74DD 01 8A 71         ld bc,Album_de_fotos_3
 294+ 74E0 CD D0 74         call Trasbase_de_datos
 295+ 74E3 C9               ret
 296+ 74E4
 297+ 74E4 2A 03 8A     Trasbase_2a1 ld hl,(Stack_snapshot_2)
 298+ 74E7 01 07 71         ld bc,Album_de_fotos_2
 299+ 74EA CD D0 74         call Trasbase_de_datos
 300+ 74ED C9               ret
 301+ 74EE
 302+ 74EE 2A FF 89     Trasbase_1a0 ld hl,(Stack_snapshot_1)
 303+ 74F1 01 84 70         ld bc,Album_de_fotos_1
 304+ 74F4 CD D0 74         call Trasbase_de_datos
 305+ 74F7 C9               ret
 306+ 74F8
 307+ 74F8              ; ----------------------------------------------
 308+ 74F8
 309+ 74F8              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 310+ 74F8              ; _ limpiamos (Album_de_fotos_3).
 311+ 74F8              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 312+ 74F8
 313+ 74F8              ;   Datos de álbum_3 a álbum_2.
 314+ 74F8
 315+ 74F8 11 07 71     Album_3_a_Album_2 ld de,Album_de_fotos_2
 316+ 74FB CD DA 74         call Trasbase_3a2
 317+ 74FE
 318+ 74FE              ;   Actualizamos (Stack_snapshot_2).
 319+ 74FE
 320+ 74FE EB               ex de,hl
 321+ 74FF 22 03 8A         ld (Stack_snapshot_2),hl
 322+ 7502
 323+ 7502              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 324+ 7502
 325+ 7502 AF               xor a
 326+ 7503 32 8A 71         ld (Album_de_fotos_3),a
 327+ 7506 11 8B 71         ld de,Album_de_fotos_3+1
 328+ 7509 CD DA 74         call Trasbase_3a2
 329+ 750C
 330+ 750C 21 8A 71         ld hl,Album_de_fotos_3
 331+ 750F 22 07 8A         ld (Stack_snapshot_3),hl
 332+ 7512 C9               ret
 333+ 7513
 334+ 7513 11 84 70     Album_2_a_Album_1 ld de,Album_de_fotos_1
 335+ 7516 CD E4 74         call Trasbase_2a1
 336+ 7519
 337+ 7519              ;   Actualizamos (Stack_snapshot_1).
 338+ 7519
 339+ 7519 EB               ex de,hl
 340+ 751A 22 FF 89         ld (Stack_snapshot_1),hl
 341+ 751D
 342+ 751D              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 343+ 751D
 344+ 751D AF               xor a
 345+ 751E 32 07 71         ld (Album_de_fotos_2),a
 346+ 7521 11 08 71         ld de,Album_de_fotos_2+1
 347+ 7524 CD E4 74         call Trasbase_2a1
 348+ 7527
 349+ 7527 21 07 71         ld hl,Album_de_fotos_2
 350+ 752A 22 03 8A         ld (Stack_snapshot_2),hl
 351+ 752D C9               ret
 352+ 752E
 353+ 752E 11 00 70     Album_1_a_Album_de_fotos ld de,Album_de_fotos
 354+ 7531 CD EE 74         call Trasbase_1a0
 355+ 7534
 356+ 7534              ;   Actualizamos (Stack_snapshot).
 357+ 7534
 358+ 7534 EB               ex de,hl
 359+ 7535 22 FB 89         ld (Stack_snapshot),hl
 360+ 7538
 361+ 7538               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 362+ 7538
 363+ 7538 AF               xor a
 364+ 7539 32 84 70         ld (Album_de_fotos_1),a
 365+ 753C 11 85 70         ld de,Album_de_fotos_1+1
 366+ 753F CD EE 74         call Trasbase_1a0
 367+ 7542
 368+ 7542 21 84 70         ld hl,Album_de_fotos_1
 369+ 7545 22 FF 89         ld (Stack_snapshot_1),hl
 370+ 7548 C9               ret
 371+ 7549
 372+ 7549              ; -------------------- ------------------------------------
 373+ 7549
 374+ 7549              Gestiona_albumes_de_fotos_disparos
 375+ 7549
 376+ 7549              ; Desplazamos álbumes.
 377+ 7549
 378+ 7549              ; (Album_de_fotos_1) --- (Album_de_fotos).
 379+ 7549
 380+ 7549              ;   El álbum_1 contiene datos?
 381+ 7549
 382+ 7549 21 91 72         ld hl,Album_de_fotos_disparos_1+1
 383+ 754C 7E               ld a,(hl)
 384+ 754D A7               and a
 385+ 754E 28 05            jr z,1F
 386+ 7550
 387+ 7550              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 388+ 7550
 389+ 7550 CD 1A 76         call Album_1_a_Album_de_fotos_disparos
 390+ 7553 18 1A            jr 2F
 391+ 7555
 392+ 7555              ; El álbum_1 está vacío.
 393+ 7555              ; Album_de_fotos contiene datos?
 394+ 7555
 395+ 7555 21 0E 72     1 ld hl,Album_de_fotos_disparos+1
 396+ 7558 7E               ld a,(hl)
 397+ 7559 A7               and a
 398+ 755A 28 13            jr z,2F
 399+ 755C
 400+ 755C              ; Limpiamos Album_de_fotos.
 401+ 755C
 402+ 755C 21 0D 72         ld hl,Album_de_fotos_disparos
 403+ 755F 36 00            ld (hl),0
 404+ 7561 11 0E 72         ld de,Album_de_fotos_disparos+1
 405+ 7564 01 83 00         ld bc,$83
 406+ 7567 ED B0            ldir
 407+ 7569 21 0D 72         ld hl,Album_de_fotos_disparos
 408+ 756C 22 FD 89         ld (Stack_snapshot_disparos),hl
 409+ 756F
 410+ 756F              ; (Album_de_fotos_2) --- (Album_de_fotos_1).
 411+ 756F
 412+ 756F              ;   El álbum_2 contiene datos?
 413+ 756F
 414+ 756F 21 1A 73     2 ld hl,Album_de_fotos_disparos_2+1
 415+ 7572 7E               ld a,(hl)
 416+ 7573 A7               and a
 417+ 7574 28 05            jr z,3F
 418+ 7576
 419+ 7576              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 420+ 7576
 421+ 7576 CD FF 75         call Album_2_a_Album_1_disparos
 422+ 7579 18 1A            jr 4F
 423+ 757B
 424+ 757B              ; El álbum_2 está vacío.
 425+ 757B              ; álbum_1 contiene datos?
 426+ 757B
 427+ 757B 21 91 72     3 ld hl,Album_de_fotos_disparos_1+1
 428+ 757E 7E               ld a,(hl)
 429+ 757F A7               and a
 430+ 7580 28 13            jr z,4F
 431+ 7582
 432+ 7582              ; Limpiamos Album_de_fotos_1.
 433+ 7582
 434+ 7582 21 90 72         ld hl,Album_de_fotos_disparos_1
 435+ 7585 36 00            ld (hl),0
 436+ 7587 11 91 72         ld de,Album_de_fotos_disparos_1+1
 437+ 758A 01 83 00         ld bc,$83
 438+ 758D ED B0            ldir
 439+ 758F 21 90 72         ld hl,Album_de_fotos_disparos_1
 440+ 7592 22 01 8A         ld (Stack_snapshot_disparos_1),hl
 441+ 7595
 442+ 7595              ; (Album_de_fotos_3) --- (Album_de_fotos_2).
 443+ 7595
 444+ 7595              ;   El álbum_3 contiene datos?
 445+ 7595
 446+ 7595 21 97 73     4 ld hl,Album_de_fotos_disparos_3+1
 447+ 7598 7E               ld a,(hl)
 448+ 7599 A7               and a
 449+ 759A 28 05            jr z,5F
 450+ 759C
 451+ 759C              ;   El álbum_1 contiene datos. Volcamos los datos a Album_de_fotos.
 452+ 759C
 453+ 759C CD E4 75         call Album_3_a_Album_2_disparos
 454+ 759F 18 1A            jr 6F
 455+ 75A1
 456+ 75A1              ; El álbum_3 está vacío.
 457+ 75A1              ; álbum_2 contiene datos?
 458+ 75A1
 459+ 75A1 21 1A 73     5 ld hl,Album_de_fotos_disparos_2+1
 460+ 75A4 7E               ld a,(hl)
 461+ 75A5 A7               and a
 462+ 75A6 28 13            jr z,6F
 463+ 75A8
 464+ 75A8              ; Limpiamos Album_de_fotos_2.
 465+ 75A8
 466+ 75A8 21 19 73         ld hl,Album_de_fotos_disparos_2
 467+ 75AB 36 00            ld (hl),0
 468+ 75AD 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 469+ 75B0 01 83 00         ld bc,$83
 470+ 75B3 ED B0            ldir
 471+ 75B5 21 19 73         ld hl,Album_de_fotos_disparos_2
 472+ 75B8 22 05 8A         ld (Stack_snapshot_disparos_2),hl
 473+ 75BB
 474+ 75BB C9           6 ret
 475+ 75BC
 476+ 75BC              ; ----------------------------------------------
 477+ 75BC              ;
 478+ 75BC              ;   31/7/23
 479+ 75BC              ;
 480+ 75BC              ;   Esta rutina sirve tanto para pasar datos de un album a otro, como para limpiarlo.
 481+ 75BC              ;
 482+ 75BC              ;   Para pasar datos de un album a otro:
 483+ 75BC              ;
 484+ 75BC              ;       INPUTS: HL contiene (Stack_snapshot_X), siendo X el álbum ORIGEN.
 485+ 75BC              ;               BC contendrá la dirección de inicio del álbum ORIGEN. Ej. Album_de_fotos_3.
 486+ 75BC              ;               DE contendrá la dirección de inicio del álbum DESTINO. Ej. Album_de_fotos_2.
 487+ 75BC
 488+ 75BC C5           Trasbase_de_datos_disparos push bc
 489+ 75BD A7               and a
 490+ 75BE ED 42            sbc hl,bc
 491+ 75C0 E5               push hl
 492+ 75C1 C1               pop bc                          ; BC contiene el nº de bytes que ocupan los datos almacenados en el álbum.
 493+ 75C2 E1               pop hl
 494+ 75C3 ED B0            ldir
 495+ 75C5 C9               ret
 496+ 75C6
 497+ 75C6              ; Paquetitos.
 498+ 75C6
 499+ 75C6 2A 09 8A     Trasbase_3a2_disparos ld hl,(Stack_snapshot_disparos_3)
 500+ 75C9 01 96 73         ld bc,Album_de_fotos_disparos_3
 501+ 75CC CD BC 75         call Trasbase_de_datos_disparos
 502+ 75CF C9               ret
 503+ 75D0
 504+ 75D0 2A 05 8A     Trasbase_2a1_disparos ld hl,(Stack_snapshot_disparos_2)
 505+ 75D3 01 19 73         ld bc,Album_de_fotos_disparos_2
 506+ 75D6 CD BC 75         call Trasbase_de_datos_disparos
 507+ 75D9 C9               ret
 508+ 75DA
 509+ 75DA 2A 01 8A     Trasbase_1a0_disparos ld hl,(Stack_snapshot_disparos_1)
 510+ 75DD 01 90 72         ld bc,Album_de_fotos_disparos_1
 511+ 75E0 CD BC 75         call Trasbase_de_datos_disparos
 512+ 75E3 C9               ret
 513+ 75E4
 514+ 75E4              ; ----------------------------------------------
 515+ 75E4
 516+ 75E4              ; (Album_de_fotos_2) está vacío. Pasamos los datos de (Album_de_fotos_3) a (Album_de_fotos_2) y_
 517+ 75E4              ; _ limpiamos (Album_de_fotos_3).
 518+ 75E4              ; Para ambas cosas ejecutaremos la rutina [Trasbase_de_datos].
 519+ 75E4
 520+ 75E4              ;   Datos de álbum_3 a álbum_2.
 521+ 75E4
 522+ 75E4 11 19 73     Album_3_a_Album_2_disparos ld de,Album_de_fotos_disparos_2
 523+ 75E7 CD C6 75         call Trasbase_3a2_disparos
 524+ 75EA
 525+ 75EA              ;   Actualizamos (Stack_snapshot_2).
 526+ 75EA
 527+ 75EA EB               ex de,hl
 528+ 75EB 22 05 8A         ld (Stack_snapshot_disparos_2),hl
 529+ 75EE
 530+ 75EE              ;   Limpiamos álbum_3 y actualizamos (Stack_snapshot_3).
 531+ 75EE
 532+ 75EE AF               xor a
 533+ 75EF 32 96 73         ld (Album_de_fotos_disparos_3),a
 534+ 75F2 11 97 73         ld de,Album_de_fotos_disparos_3+1
 535+ 75F5 CD C6 75         call Trasbase_3a2_disparos
 536+ 75F8
 537+ 75F8 21 96 73         ld hl,Album_de_fotos_disparos_3
 538+ 75FB 22 09 8A         ld (Stack_snapshot_disparos_3),hl
 539+ 75FE C9               ret
 540+ 75FF
 541+ 75FF 11 90 72     Album_2_a_Album_1_disparos ld de,Album_de_fotos_disparos_1
 542+ 7602 CD D0 75         call Trasbase_2a1_disparos
 543+ 7605
 544+ 7605              ;   Actualizamos (Stack_snapshot_1).
 545+ 7605
 546+ 7605 EB               ex de,hl
 547+ 7606 22 01 8A         ld (Stack_snapshot_disparos_1),hl
 548+ 7609
 549+ 7609              ;   Limpiamos álbum_2 y actualizamos (Stack_snapshot_2).
 550+ 7609
 551+ 7609 AF               xor a
 552+ 760A 32 19 73         ld (Album_de_fotos_disparos_2),a
 553+ 760D 11 1A 73         ld de,Album_de_fotos_disparos_2+1
 554+ 7610 CD D0 75         call Trasbase_2a1_disparos
 555+ 7613
 556+ 7613 21 19 73         ld hl,Album_de_fotos_disparos_2
 557+ 7616 22 05 8A         ld (Stack_snapshot_disparos_2),hl
 558+ 7619 C9               ret
 559+ 761A
 560+ 761A 11 0D 72     Album_1_a_Album_de_fotos_disparos ld de,Album_de_fotos_disparos
 561+ 761D CD DA 75         call Trasbase_1a0_disparos
 562+ 7620
 563+ 7620              ;   Actualizamos (Stack_snapshot).
 564+ 7620
 565+ 7620 EB               ex de,hl
 566+ 7621 22 FD 89         ld (Stack_snapshot_disparos),hl
 567+ 7624
 568+ 7624               ;   Limpiamos álbum_1 y actualizamos (Stack_snapshot_1).
 569+ 7624
 570+ 7624 AF               xor a
 571+ 7625 32 90 72         ld (Album_de_fotos_disparos_1),a
 572+ 7628 11 91 72         ld de,Album_de_fotos_disparos_1+1
 573+ 762B CD DA 75         call Trasbase_1a0_disparos
 574+ 762E
 575+ 762E 21 90 72         ld hl,Album_de_fotos_disparos_1
 576+ 7631 22 01 8A         ld (Stack_snapshot_disparos_1),hl
 577+ 7634 C9               ret
# file closed: Guarda_foto_registros.asm
1363  7635
1364  7635              	SAVESNA "Pruebas.sna", START
1365  7635
1366  7635
1367  7635
1368  7635
# file closed: Banco_de_pruebas.asm
