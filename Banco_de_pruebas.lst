# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 4C 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 96 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 86 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 7E 47        Posicion_inicio defw $477e								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 82 96        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad.
 167  85D7
 168  85D7              ; Gestión de ENTIDADES.
 169  85D7
 170  85D7 00 00        Puntero_store_entidades defw 0
 171  85D9 00 00        Puntero_restore_entidades defw 0
 172  85DB 00 00        Indice_restore defw 0
 173  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 174  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 175  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 176  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 177  85DF              ;														; _ (Numero_de_malotes)="0".
 178  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 179  85E1              ;														; _variable para almacenar lo posición del puntero_
 180  85E1              ; 														; _de pila, SP.
 181  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 182  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 183  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 184  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 185  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 186  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 188  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 189  85E7
 190  85E7              ; Gestión de Disparos.
 191  85E7
 192  85E7 00           Numero_de_disparotes db 0
 193  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 194  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 195  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 196  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 197  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 198  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 199  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 200  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 201  85EF              ;														; _produzca colisión.
 202  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 203  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 204  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 205  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 206  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 208  85F7
 209  85F7
 210  85F7              ; Gestión de FRAMES.
 211  85F7
 212  85F7 00           Switch db 0
 213  85F8
 214  85F8              ; Variables de Raster y localización en pantalla.
 215  85F8
 216  85F8 00 FF        Temp_Raster defw $ff00
 217  85FA
 218  85FA              ; Rutina principal *************************************************************************************************************************************************************************
 219  85FA              ;
 220  85FA              ;	14/11/22
 221  85FA
 222  85FA 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 223  85FD
 224  85FD 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 225  85FF ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 226  8601 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 227  8603 F3           	DI
 228  8604
 229  8604 3E 07        	ld a,%00000111
 230  8606 CD AA 92     	call Cls
 231  8609
 232  8609              ;	call Pinta_FILAS
 233  8609
 234  8609 CD 92 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 235  860C
 236  860C 21 DD 85     	ld hl,Numero_de_entidades
 237  860F 46           	ld b,(hl)
 238  8610 04           	inc b
 239  8611 05           	dec b
 240  8612 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 241  8614
 242  8614              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 243  8614              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 244  8614              ;	Pintamos el resto de entidades:
 245  8614
 246  8614 CD 79 87     	call Inicia_punteros_de_entidades
 247  8617
 248  8617              ;	INICIA ENTIDADES!!!!!
 249  8617
 250  8617 C5           1 push bc  												; Guardo el contador de entidades.
 251  8618 CD D3 87      	call Inicia_Puntero_objeto
 252  861B CD FA 8C     	call Draw
 253  861E CD A0 7F     	call Guarda_foto_registros
 254  8621 CD 1B 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 255  8624 C1           	pop bc
 256  8625 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 257  8627
 258  8627              ; 	INICIA AMADEUS!!!!!
 259  8627
 260  8627 CD 6E 88     3 call Restore_Amadeus
 261  862A CD D3 87     	call Inicia_Puntero_objeto
 262  862D CD FA 8C     	call Draw
 263  8630 CD A0 7F     	call Guarda_foto_registros
 264  8633 CD 80 88     	call Store_Amadeus
 265  8636
 266  8636              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 267  8636
 268  8636 CD 8F 87     	call Inicia_Puntero_Disparo_Entidades
 269  8639 CD 96 87     	call Inicia_Puntero_Disparo_Amadeus
 270  863C
 271  863C              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 272  863C
 273  863C CD 79 87     	call Inicia_punteros_de_entidades
 274  863F CD 5C 88     	call Restore_Primera_entidad
 275  8642
 276  8642 3A DD 85     	ld a,(Numero_de_entidades)
 277  8645 3C           	inc a
 278  8646 32 DE 85     	ld (Numero_de_malotes),a
 279  8649
 280  8649 FB           2 ei
 281  864A 18 FD        	jr 2B
 282  864C
 283  864C              ; -----------------------------------------------------------------------------------
 284  864C
 285  864C              Frame
 286  864C
 287  864C              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 288  864C              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 289  864C
 290  864C 3E 02            ld a,2
 291  864E D3 FE            out ($fe),a
 292  8650 CD FE 8F     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 293  8653 CD 37 90     	call Extrae_foto_disparos
 294  8656 3E 01            ld a,1
 295  8658 D3 FE            out ($fe),a
 296  865A
 297  865A              ; ----------------------------------------------------------------------
 298  865A
 299  865A              ;	Existe colisión?????
 300  865A
 301  865A CD C3 8C     	call Selector_de_impactos
 302  865D
 303  865D              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 304  865D              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 305  865D              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 306  865D
 307  865D AF           	xor a
 308  865E 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 309  8661
 310  8661 CD 79 87     	call Inicia_punteros_de_entidades
 311  8664 CD 5C 88     	call Restore_Primera_entidad
 312  8667
 313  8667 AF           	xor a
 314  8668 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 315  866B
 316  866B CD 43 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 317  866E 21 00 70     	ld hl,Album_de_fotos
 318  8671 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 319  8674              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 320  8674 3A DD 85         ld a,(Numero_de_entidades)
 321  8677 47               ld b,a
 322  8678 A7           	and a
 323  8679 28 39        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 324  867B
 325  867B              ; ----- ----- ----- ----- -----
 326  867B
 327  867B              ; Código que ejecutamos con cada entidad:
 328  867B
 329  867B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 330  867B              ; con las coordenadas de la entidad almacenada en DRAW.
 331  867B
 332  867B 3A D6 85     2 ld a,(Ctrl_1)
 333  867E CB 57        	bit 2,a
 334  8680 28 0C        	jr z,7F
 335  8682
 336  8682 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 337  8685 EB           	ex de,hl 										; D contiene la coordenada_y del disparo.
 338  8686              ;													; E contiene la coordenada_X del disparo.
 339  8686
 340  8686 2A A1 85     	ld hl,(Coordenada_X) 							; L Coordenada_x de la entidad.
 341  8689              ;													; H Coordenado_y de la entidad.
 342  8689 A7           	and a
 343  868A ED 52        	sbc hl,de
 344  868C
 345  868C 18 FE        	jr $
 346  868E
 347  868E 3A B4 85     7 ld a,(Impacto)
 348  8691 A7           	and a
 349  8692 20 FE        	jr nz,$
 350  8694
 351  8694              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 352  8694
 353  8694 C5           	push bc
 354  8695 CD E4 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 355  8698
 356  8698 3A C9 85     	ld a,(Ctrl_0)
 357  869B CB 67        	bit 4,a
 358  869D 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 359  869F
 360  869F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 361  869F              ; Las entidades sólo generan disparo cuando se mueven.
 362  869F              ; 16/02/23.
 363  869F              ; [[[
 364  869F CD C9 88     	call Detecta_disparo_entidad
 365  86A2              ; ]]]
 366  86A2 CD 40 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 367  86A5
 368  86A5 21 C9 85     1 ld hl,Ctrl_0
 369  86A8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 370  86AA AF           	xor a
 371  86AB 32 CA 85     	ld (Obj_dibujado),a
 372  86AE
 373  86AE CD 1B 88     6 call Store_Restore_entidades
 374  86B1 C1           	pop bc
 375  86B2 10 C7        	djnz 2B
 376  86B4
 377  86B4              ; Tras la gestión de las entidades, ... AMADEUS.
 378  86B4
 379  86B4 CD 6E 88     4 call Restore_Amadeus
 380  86B7
 381  86B7              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 382  86B7
 383  86B7 3A B4 85     	ld a,(Impacto)
 384  86BA A7           	and a
 385  86BB 20 FE        	jr nz,$
 386  86BD
 387  86BD              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 388  86BD
 389  86BD CD 11 87     	call Mov_Amadeus
 390  86C0
 391  86C0 3A C9 85     	ld a,(Ctrl_0)
 392  86C3 CB 67        	bit 4,a
 393  86C5 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 394  86C7
 395  86C7 CD 40 87     	call Guarda_foto_entidad_a_pintar
 396  86CA
 397  86CA 21 C9 85     3 ld hl,Ctrl_0
 398  86CD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 399  86CF AF           	xor a
 400  86D0 32 CA 85     	ld (Obj_dibujado),a
 401  86D3
 402  86D3 CD 80 88     	call Store_Amadeus
 403  86D6
 404  86D6 CD 61 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 405  86D9
 406  86D9              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 407  86D9
 408  86D9 CD 9D 87     	call Calcula_numero_de_malotes
 409  86DC CD B5 87     	call Calcula_numero_de_disparotes
 410  86DF
 411  86DF 3E 04        	ld a,4
 412  86E1 D3 FE        	out ($fe),a
 413  86E3 C9           	ret
 414  86E4
 415  86E4              ; --------------------------------------------------------------------------------------------------------------
 416  86E4              ;
 417  86E4              ;	27/03/23
 418  86E4
 419  86E4              Mov_obj
 420  86E4
 421  86E4              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 422  86E4
 423  86E4 AF           	xor a
 424  86E5 32 CA 85     	ld (Obj_dibujado),a
 425  86E8 CD 4A 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 426  86EB              ;														; Obj_dibujado="0".
 427  86EB              ; Movemos Entidades malignas.
 428  86EB
 429  86EB 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 430  86EE 24           	inc h                                               ; Salimos de la rutina.
 431  86EF 25           	dec h
 432  86F0 C8           	ret z
 433  86F1
 434  86F1 CD 98 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 435  86F4
 436  86F4 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 437  86F7 CB 67        	bit 4,a
 438  86F9 C8           	ret z
 439  86FA
 440  86FA              ; Ha habido desplazamiento de la entidad maligna.
 441  86FA              ; Ha llegado a zona de AMADEUS ???
 442  86FA
 443  86FA 3A A2 85     	ld a,(Coordenada_y)
 444  86FD FE 14        	cp $14
 445  86FF D4 92 8A     	call nc, Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 446  8702              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 447  8702
 448  8702              ; ---------
 449  8702
 450  8702 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 451  8704 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 452  8707 CD 4A 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 453  870A CD 61 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 454  870D CD 30 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 455  8710 C9           	ret													; _de la misma.
 456  8711
 457  8711              ; --------------------------------------------------------------------------------------------------------------
 458  8711              ;
 459  8711              ;	29/1/23
 460  8711
 461  8711              Mov_Amadeus
 462  8711
 463  8711 AF           	xor a
 464  8712 32 CA 85     	ld (Obj_dibujado),a
 465  8715 CD 4A 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 466  8718              ;														; Obj_dibujado="0".
 467  8718              ; Movemos Amadeus.
 468  8718
 469  8718 CD A6 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 470  871B 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 471  871E CB 67        	bit 4,a
 472  8720 C8           	ret z
 473  8721
 474  8721              ; ---------
 475  8721
 476  8721 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 477  8723 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 478  8726 CD 4A 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 479  8729 CD 61 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 480  872C CD 30 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 481  872F C9           	ret													; _de la nave.
 482  8730
 483  8730              ; --------------------------------------------------------------------------------------------------------------
 484  8730              ;
 485  8730              ;	31/01/23
 486  8730              ;
 487  8730              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 488  8730
 489  8730              Guarda_foto_entidad_a_borrar
 490  8730
 491  8730 CD D4 8F     	call Prepara_draw
 492  8733 CD 0E 8F     	call calcula_CColumnass
 493  8736 CD 45 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 494  8739 CD 9A 8F     	call Define_rutina_de_impresion
 495  873C CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 496  873F C9           	ret
 497  8740
 498  8740              ; --------------------------------------------------------------------------------------------------------------
 499  8740              ;
 500  8740              ;	31/01/23
 501  8740              ;
 502  8740              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 503  8740              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 504  8740
 505  8740              Guarda_foto_entidad_a_pintar
 506  8740
 507  8740 CD 6D 87     	call Repone_pintar
 508  8743 CD FA 8C     	call Draw
 509  8746 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 510  8749 C9           	ret
 511  874A
 512  874A              ; --------------------------------------------------------------------------------------------------------------
 513  874A              ;
 514  874A              ;
 515  874A
 516  874A 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 517  874D 3A CA 85     	ld a,(Obj_dibujado)
 518  8750 A7           	and a
 519  8751 28 05        	jr z,1F
 520  8753 11 BF 85     	ld de,Variables_de_pintado
 521  8756 18 03        	jr 2F
 522  8758 11 B5 85     1 ld de,Variables_de_borrado
 523  875B 01 08 00     2 ld bc,8
 524  875E ED B0        	ldir
 525  8760 C9           	ret
 526  8761
 527  8761              ; --------------------------------------------------------------------------------------------------------------
 528  8761
 529  8761 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 530  8764 11 9B 85     	ld de,Filas
 531  8767 01 08 00     	ld bc,8
 532  876A ED B0        	ldir
 533  876C C9           	ret
 534  876D
 535  876D 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 536  8770 11 9B 85     	ld de,Filas
 537  8773 01 08 00     	ld bc,8
 538  8776 ED B0        	ldir
 539  8778 C9           	ret
 540  8779
 541  8779              ; *************************************************************************************************************************************************************
 542  8779              ;
 543  8779              ; 8/1/23
 544  8779              ;
 545  8779              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 546  8779              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 547  8779              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 548  8779
 549  8779              ; Destruye HL y DE !!!!!
 550  8779
 551  8779              Inicia_punteros_de_entidades
 552  8779
 553  8779 21 68 84     	ld hl,Indice_de_entidades
 554  877C CD CD 87         call Extrae_address
 555  877F 22 D7 85         ld (Puntero_store_entidades),hl
 556  8782 21 6A 84     	ld hl,Indice_de_entidades+2
 557  8785 22 DB 85     	ld (Indice_restore),hl
 558  8788 CD CD 87     	call Extrae_address
 559  878B 22 D9 85     	ld (Puntero_restore_entidades),hl
 560  878E C9               ret
 561  878F
 562  878F              ; *************************************************************************************************************************************************************
 563  878F              ;
 564  878F              ; 8/1/23
 565  878F              ;
 566  878F              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 567  878F
 568  878F 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 569  8792 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 570  8795 C9           	ret
 571  8796 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 572  8799 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 573  879C C9           	ret
 574  879D
 575  879D              ; -------------------------------------------------------------------------------------------------------------
 576  879D              ;
 577  879D              ; 28/2/23
 578  879D              ;
 579  879D
 580  879D              Calcula_numero_de_malotes
 581  879D
 582  879D 21 00 70     	ld hl,Album_de_fotos
 583  87A0 EB           	ex de,hl
 584  87A1 2A E3 85     	ld hl,(Stack_snapshot)
 585  87A4
 586  87A4 06 00        	ld b,0
 587  87A6 7D           	ld a,l
 588  87A7 93           	sub e
 589  87A8 28 07        	jr z,1F
 590  87AA
 591  87AA              ; Nº de malotes no es "0".
 592  87AA
 593  87AA D6 06        2 sub 6
 594  87AC 04           	inc b
 595  87AD A7           	and a
 596  87AE 20 FA        	jr nz,2B
 597  87B0 78           	ld a,b
 598  87B1
 599  87B1 32 DE 85     1 ld (Numero_de_malotes),a
 600  87B4 C9           	ret
 601  87B5
 602  87B5              ; -------------------------------------------------------------------------------------------------------------
 603  87B5              ;
 604  87B5              ; 28/2/23
 605  87B5              ;
 606  87B5
 607  87B5              Calcula_numero_de_disparotes
 608  87B5
 609  87B5 21 60 70     	ld hl,Album_de_fotos_disparos
 610  87B8 EB           	ex de,hl
 611  87B9 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 612  87BC
 613  87BC 06 00        	ld b,0
 614  87BE 7D           	ld a,l
 615  87BF 93           	sub e
 616  87C0 28 07        	jr z,1F
 617  87C2
 618  87C2              ; Nº de malotes no es "0".
 619  87C2
 620  87C2 D6 06        2 sub 6
 621  87C4 04           	inc b
 622  87C5 A7           	and a
 623  87C6 20 FA        	jr nz,2B
 624  87C8 78           	ld a,b
 625  87C9
 626  87C9 32 E7 85     1 ld (Numero_de_disparotes),a
 627  87CC C9           	ret
 628  87CD              ; *************************************************************************************************************************************************************
 629  87CD              ;
 630  87CD              ; 20/10/22
 631  87CD              ;
 632  87CD              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 633  87CD              ;
 634  87CD              ; Destruye el puntero y DE !!!!!
 635  87CD
 636  87CD 5E           Extrae_address ld e,(hl)
 637  87CE 23           	inc hl
 638  87CF 56           	ld d,(hl)
 639  87D0 2B           	dec hl
 640  87D1 EB           	ex de,hl
 641  87D2 C9           	ret
 642  87D3
 643  87D3              ; *************************************************************************************************************************************************************
 644  87D3              ;
 645  87D3              ;	7/2/23
 646  87D3              ;
 647  87D3              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 648  87D3              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 649  87D3              ;
 650  87D3              ;   Destruye HL y BC !!!!!,
 651  87D3              ;
 652  87D3              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 653  87D3              ;					"0" ..... Izquierda.
 654  87D3
 655  87D3              Inicia_Puntero_objeto
 656  87D3
 657  87D3 3A AF 85     	ld a,(Cuad_objeto)
 658  87D6 E6 01        	and 1
 659  87D8 F5           	push af
 660  87D9 CC F7 87     	call z,Inicia_puntero_objeto_izq
 661  87DC F1           	pop af
 662  87DD 28 2B        	jr z,1F
 663  87DF CD E4 87     	call Inicia_puntero_objeto_der
 664  87E2 18 26        	jr 1F
 665  87E4
 666  87E4              ; Arrancamos desde la parte izquierda de la pantalla.
 667  87E4              ; Iniciamos (Indice_Sprite_der).
 668  87E4
 669  87E4 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 670  87E7 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 671  87EA CD CD 87     	call Extrae_address
 672  87ED 22 9F 85     	ld (Puntero_objeto),hl
 673  87F0
 674  87F0 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 675  87F3              ;	call Extrae_address
 676  87F3 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 677  87F6 C9           	ret
 678  87F7
 679  87F7              ; Arrancamos desde la parte derecha de la pantalla.
 680  87F7              ; Iniciamos (Indice_Sprite_izq).
 681  87F7
 682  87F7 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 683  87FA 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 684  87FD CD CD 87     	call Extrae_address
 685  8800 22 9F 85     	ld (Puntero_objeto),hl
 686  8803
 687  8803 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 688  8806              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 689  8806 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 690  8809 C9           	ret
 691  880A
 692  880A              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 693  880A
 694  880A 21 38 83     1 ld hl,Amadeus
 695  880D ED 4B 9F 85  	ld bc,(Puntero_objeto)
 696  8811 B7 ED 42     	sub hl,bc
 697  8814 C0           	ret nz
 698  8815 21 C9 85     	ld hl,Ctrl_0
 699  8818 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 700  881A C9           	ret 												; _de nuestra nave en los extremos.
 701  881B
 702  881B              ; *************************************************************************************************************************************************************
 703  881B              ;
 704  881B              ;	8/1/23
 705  881B              ;
 706  881B              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 707  881B              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 708  881B
 709  881B              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 710  881B              ;	_de la 2ª y 3ª entidad respectivamente.
 711  881B
 712  881B              Store_Restore_entidades
 713  881B
 714  881B E5           	push hl
 715  881C D5           	push de
 716  881D C5            	push bc
 717  881E
 718  881E              ;	STORE !!!!!
 719  881E              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 720  881E
 721  881E 21 9B 85     	ld hl,Filas
 722  8821 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 723  8825 01 3B 00     	ld bc,59
 724  8828 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 725  882A
 726  882A              ; 	Entidad_sospechosa. 20/4/23
 727  882A
 728  882A 3A B4 85     	ld a,(Impacto)
 729  882D A7           	and a
 730  882E 28 0C        	jr z,1F
 731  8830
 732  8830 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 733  8833 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 734  8836 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 735  8837 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 736  8839 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 737  883C
 738  883C              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 739  883C
 740  883C 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 741  883F 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 742  8842 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 743  8845 01 3B 00     	ld bc,59
 744  8848 ED B0        	ldir
 745  884A
 746  884A              ;	Incrementa RESTORE !!!!!
 747  884A
 748  884A 2A DB 85         ld hl,(Indice_restore)
 749  884D 23           	inc hl
 750  884E 23           	inc hl
 751  884F 22 DB 85     	ld (Indice_restore),hl
 752  8852 CD CD 87         call Extrae_address
 753  8855 22 D9 85         ld (Puntero_restore_entidades),hl
 754  8858 C1           	pop bc
 755  8859 D1           	pop de
 756  885A E1           	pop hl
 757  885B C9           	ret
 758  885C
 759  885C              ; **************************************************************************************************
 760  885C              ;
 761  885C              ;	29/10/22
 762  885C              ;
 763  885C              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 764  885C
 765  885C E5           Restore_Primera_entidad push hl
 766  885D D5           	push de
 767  885E C5            	push bc
 768  885F 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 769  8862 11 9B 85     	ld de,Filas
 770  8865 01 3B 00     	ld bc,59
 771  8868 ED B0        	ldir
 772  886A C1           	pop bc
 773  886B D1           	pop de
 774  886C E1           	pop hl
 775  886D C9           	ret
 776  886E
 777  886E              ; **************************************************************************************************
 778  886E              ;
 779  886E              ;	25/01/23
 780  886E              ;
 781  886E              ;	Restore_Amadeus
 782  886E              ;
 783  886E              ;	Cargamos en DRAW los parámetros de Amadeus.
 784  886E              ;
 785  886E
 786  886E E5           Restore_Amadeus	push hl
 787  886F D5           	push de
 788  8870 C5            	push bc
 789  8871 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 790  8874 11 9B 85     	ld de,Filas
 791  8877 01 3B 00     	ld bc,59
 792  887A ED B0        	ldir
 793  887C C1           	pop bc
 794  887D D1           	pop de
 795  887E E1           	pop hl
 796  887F C9           	ret
 797  8880
 798  8880              ; *************************************************************************************************************************************************************
 799  8880              ;
 800  8880              ;	29/01/23
 801  8880              ;
 802  8880              ;	Store_Amadeus
 803  8880              ;
 804  8880              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 805  8880              ;
 806  8880
 807  8880 E5           Store_Amadeus push hl
 808  8881 D5           	push de
 809  8882 C5            	push bc
 810  8883 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 811  8886 11 74 84     	ld de,Amadeus_db
 812  8889 01 3B 00     	ld bc,59
 813  888C ED B0        	ldir
 814  888E C1           	pop bc
 815  888F D1           	pop de
 816  8890 E1           	pop hl
 817  8891 C9           	ret
 818  8892
 819  8892              ; **************************************************************************************************
 820  8892
 821  8892              ; Teclado.
 822  8892
 823  8892 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 824  8894 DB FE        	in a,($fe)
 825  8896 E6 01        	and $01
 826  8898 28 02        	jr z,1f
 827  889A 18 F6        	jr Pulsa_ENTER
 828  889C C9           1 ret
 829  889D
 830  889D              ; **************************************************************************************************
 831  889D              ;
 832  889D              ; Temporización.
 833  889D
 834  889D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 835  889D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 836  889D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 837  889D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 838  889D
 839  889D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 840  889D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 841  889D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 842  889D
 843  889D              ; A partir de $4f61 no hace falta DELAY.
 844  889D
 845  889D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 846  889D
 847  889D 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 848  88A0 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 849  88A1 78           	LD A,B
 850  88A2 A7           	AND A
 851  88A3 20 FB        	JR NZ,wait
 852  88A5 C9           	RET
 853  88A6
 854  88A6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 855  88A6              ;
 856  88A6              ;	5/3/23
 857  88A6              ;
 858  88A6              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 859  88A6
 860  88A6              Movimiento_Amadeus
 861  88A6
 862  88A6              ; Disparo.
 863  88A6
 864  88A6 3E F7        	ld a,$f7												; "5" para disparar.
 865  88A8 DB FE        	in a,($fe)
 866  88AA E6 10        	and $10
 867  88AC CC 06 89     	call z,Genera_disparo
 868  88AF
 869  88AF 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 870  88B1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 871  88B3 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 872  88B5 CC 38 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 873  88B8 3E F7        	ld a,$f7
 874  88BA DB FE        	in a,($fe)
 875  88BC E6 01        	and $01
 876  88BE C8           	ret z
 877  88BF
 878  88BF 3E F7        	ld a,$f7
 879  88C1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 880  88C3 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 881  88C5 CC 1A 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 882  88C8 C9           	ret
 883  88C9
 884  88C9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 885  88C9              ;
 886  88C9              ;	Rutina provisional para que los malotes cagen balas.
 887  88C9
 888  88C9 3E 7F        Detecta_disparo_entidad ld a,$7f
 889  88CB DB FE        	in a,($fe)
 890  88CD E6 01        	and 1
 891  88CF C0           	ret nz
 892  88D0 CD 06 89     	call Genera_disparo
 893  88D3 C9           	ret
 894  88D4
 895  88D4              ; Pinta indicadores de FILAS. ------------------------------------------------------
 896  88D4
 897  88D4 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 898  88D7
 899  88D7              ; ----------
 900  88D7 06 20        	ld b,32
 901  88D9 E5           2 push hl
 902  88DA C5           	push bc
 903  88DB              ; ----------
 904  88DB
 905  88DB 06 BF        	ld b,$bf
 906  88DD 36 80        1 ld (hl),%10000000
 907  88DF CD E0 8F     	call NextScan
 908  88E2 10 F9        	djnz 1B
 909  88E4
 910  88E4              ; ----------
 911  88E4 C1           	pop bc
 912  88E5 E1           	pop hl
 913  88E6 2C           	inc l
 914  88E7 10 F0        	djnz 2B
 915  88E9              ; ----------
 916  88E9
 917  88E9 06 03        	ld b,3
 918  88EB 21 00 47         ld hl,$4700
 919  88EE CD F4 88     3 call Bucle_1
 920  88F1 10 FB            djnz 3B
 921  88F3 C9               ret
 922  88F4
 923  88F4 C5           Bucle_1 push bc
 924  88F5 E5                   push hl
 925  88F6 D1                   pop de
 926  88F7 13                   inc de
 927  88F8 01 FF 00             ld bc,255
 928  88FB 36 FF                ld (hl),255
 929  88FD ED B0                ldir
 930  88FF 23                   inc hl
 931  8900 3E 07                ld a,7
 932  8902 84                   add a,h
 933  8903 67                   ld h,a
 934  8904 C1                   pop bc
 935  8905 C9                   ret
 936  8906
 937  8906              ; ---------------------------------------------------------------
 938  8906
 939  8906              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8906              ; ******************************************************************************************************************************************************************************************
   2+ 8906              ;
   3+ 8906              ;   17/04/23
   4+ 8906              ;
   5+ 8906              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8906              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8906              ;
   8+ 8906              ;
   9+ 8906              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8906              ;
  11+ 8906              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8906              ;               _ hacen las entidades hacia abajo.
  13+ 8906              ;
  14+ 8906              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8906              ;
  16+ 8906              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8906              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8906              ;
  19+ 8906              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8906              ;           _ la bala.
  21+ 8906              ;
  22+ 8906              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8906              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8906              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8906              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8906              ;           _ en el momento de generarse la bala)).
  27+ 8906
  28+ 8906              Genera_disparo
  29+ 8906
  30+ 8906              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8906              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8906              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8906              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8906              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8906              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8906              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8906
  38+ 8906              ; Exclusiones:
  39+ 8906
  40+ 8906 3A D2 85         ld a,(Columnas)
  41+ 8909 47               ld b,a
  42+ 890A 3A 9C 85         ld a,(Columns)
  43+ 890D B8               cp b
  44+ 890E C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 890F
  46+ 890F              ; ----- ----- -----
  47+ 890F
  48+ 890F 3A C9 85         ld a,(Ctrl_0)
  49+ 8912 CB 77            bit 6,a
  50+ 8914 20 08            jr nz,16F
  51+ 8916
  52+ 8916 3A A2 85         ld a,(Coordenada_y)
  53+ 8919 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 891B D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 891C 18 11            jr 14F
  56+ 891E
  57+ 891E              ; ----- ----- -----
  58+ 891E
  59+ 891E              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  60+ 891E
  61+ 891E 21 F2 83     16 ld hl,ON_Disparo_2A
  62+ 8921 CD CD 87         call Extrae_address
  63+ 8924 24               inc h
  64+ 8925 25               dec h
  65+ 8926 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  66+ 8928
  67+ 8928 11 20 48         ld de,$4820                         ; Si el 1er disparo no ha llegado a este scanline de pantalla,_
  68+ 892B A7               and a                               ; _ salimos de la rutina, (no se autorizará un 2º disparo de Amadeus).
  69+ 892C ED 52            sbc hl,de
  70+ 892E D0               ret nc
  71+ 892F
  72+ 892F              ; ----- ----- -----
  73+ 892F
  74+ 892F 21 00 80     14 ld hl,Indice_disparo
  75+ 8932 3A A3 85         ld a,(CTRL_DESPLZ)
  76+ 8935 4F               ld c,a
  77+ 8936 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  78+ 8938              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  79+ 8938              ;                                            ""        ""       "f9", B="1"
  80+ 8938              ;                                            ""        ""       "fb", B="2"
  81+ 8938              ;                                            ""        ""       "fb", B="3"
  82+ 8938 A7               and a
  83+ 8939 28 10            jr z,1F
  84+ 893B E6 01            and 1
  85+ 893D C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  86+ 893E
  87+ 893E 79               ld a,c
  88+ 893F 16 F9            ld d,$f9
  89+ 8941 23           2 inc hl
  90+ 8942 23               inc hl
  91+ 8943 04               inc b
  92+ 8944 BA               cp d
  93+ 8945 28 04            jr z,1F
  94+ 8947 14               inc d
  95+ 8948 14               inc d
  96+ 8949 18 F6            jr 2B
  97+ 894B
  98+ 894B CD CD 87     1 call Extrae_address
  99+ 894E E5               push hl
 100+ 894F FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 101+ 8951 DD 21 73 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 102+ 8955
 103+ 8955              ;	Se cumplen las condiciones necesarias para generar un disparo.
 104+ 8955              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 105+ 8955
 106+ 8955 3A AF 85     	ld a,(Cuad_objeto)
 107+ 8958 FE 02            cp 2
 108+ 895A 38 66            jr c,3F
 109+ 895C 28 64            jr z,3F
 110+ 895E
 111+ 895E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 112+ 895E
 113+ 895E E6 01            and 1
 114+ 8960 28 30            jr z,4F
 115+ 8962
 116+ 8962              ; 	Estamos en el 3er cuadrante de pantalla.
 117+ 8962              ; 	3er CUAD. ----- ----- ----- ----- -----
 118+ 8962              ;
 119+ 8962              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 120+ 8962              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 121+ 8962              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 122+ 8962
 123+ 8962 2A 9D 85     	ld hl,(Posicion_actual)
 124+ 8965
 125+ 8965              ;   Amadeus o entidad ???.
 126+ 8965
 127+ 8965 3A C9 85         ld a,(Ctrl_0)
 128+ 8968 CB 77            bit 6,a
 129+ 896A 28 0A            jr z,8F
 130+ 896C
 131+ 896C              ; 	Dispara Amadeus.
 132+ 896C
 133+ 896C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 134+ 896E CD EF 8F         call PreviousScan
 135+ 8971 CD EF 8F         call PreviousScan
 136+ 8974
 137+ 8974              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 138+ 8974              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 139+ 8974              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 140+ 8974              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 141+ 8974
 142+ 8974 18 11            jr 10F
 143+ 8976
 144+ 8976              ; 	Dispara Entidad.
 145+ 8976
 146+ 8976 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 147+ 8979              ;                                                   ; Impacto B="$80", no hay impacto.
 148+ 8979
 149+ 8979              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 150+ 8979              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 151+ 8979
 152+ 8979 C5               push bc
 153+ 897A 06 10            ld b,16
 154+ 897C CD E0 8F     9 call NextScan
 155+ 897F 10 FB            djnz 9B
 156+ 8981 C1               pop bc
 157+ 8982 CD EC 89         call Ajusta_disparo_parte_izquierda
 158+ 8985 18 06            jr 17F
 159+ 8987
 160+ 8987              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 161+ 8987              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 162+ 8987              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 163+ 8987              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 164+ 8987
 165+ 8987 CD EC 89     10 call Ajusta_disparo_parte_izquierda
 166+ 898A CD 61 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 167+ 898D              ;                                                      ; _al generar el disparo.
 168+ 898D
 169+ 898D              ; 	LLegados a este punto tendremos:
 170+ 898D              ;
 171+ 898D              ;       Puntero_objeto_disparo en IY.
 172+ 898D              ;       Rutinas_de_impresion en IX.
 173+ 898D              ;       Puntero_de_impresion en HL.
 174+ 898D              ;       Impacto/Dirección en BC.
 175+ 898D
 176+ 898D CD F4 89     17 call Almacena_disparo
 177+ 8990 18 52            jr 6F                                             ; RET.
 178+ 8992
 179+ 8992              ; 	Estamos en el 4º cuadrante de pantalla.
 180+ 8992              ; 	4º CUAD. ----- ----- ----- ----- -----
 181+ 8992              ;
 182+ 8992              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 183+ 8992              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 184+ 8992              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 185+ 8992
 186+ 8992 2A 9D 85     4 ld hl,(Posicion_actual)
 187+ 8995
 188+ 8995              ;   Amadeus o entidad ???.
 189+ 8995
 190+ 8995 3A C9 85         ld a,(Ctrl_0)
 191+ 8998 CB 77            bit 6,a
 192+ 899A 28 0A            jr z,11F
 193+ 899C
 194+ 899C              ; 	Dispara Amadeus.
 195+ 899C
 196+ 899C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 197+ 899E CD EF 8F         call PreviousScan
 198+ 89A1 CD EF 8F         call PreviousScan
 199+ 89A4
 200+ 89A4              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 201+ 89A4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 202+ 89A4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 203+ 89A4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 204+ 89A4
 205+ 89A4 18 11            jr 13F
 206+ 89A6
 207+ 89A6              ; 	Dispara Entidad.
 208+ 89A6
 209+ 89A6 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 210+ 89A9              ;                                                     ; Impacto B="$80", no hay impacto.
 211+ 89A9
 212+ 89A9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 213+ 89A9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 214+ 89A9
 215+ 89A9 C5               push bc
 216+ 89AA 06 10            ld b,16
 217+ 89AC CD E0 8F     12 call NextScan
 218+ 89AF 10 FB            djnz 12B
 219+ 89B1 C1               pop bc
 220+ 89B2
 221+ 89B2 CD E5 89         call Ajusta_disparo_parte_derecha
 222+ 89B5 18 06            jr 18F
 223+ 89B7
 224+ 89B7              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 225+ 89B7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 226+ 89B7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 227+ 89B7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 228+ 89B7
 229+ 89B7 CD E5 89     13 call Ajusta_disparo_parte_derecha
 230+ 89BA CD 61 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 231+ 89BD              ;                                                       ; _al generar el disparo.
 232+ 89BD
 233+ 89BD              ; LLegados a este punto tendremos:
 234+ 89BD              ;
 235+ 89BD              ;       Puntero_objeto_disparo en IY.
 236+ 89BD              ;       Rutinas_de_impresion en IX.
 237+ 89BD              ;       Puntero_de_impresion en HL.
 238+ 89BD              ;       Impacto/Dirección en BC.
 239+ 89BD
 240+ 89BD CD F4 89     18 call Almacena_disparo
 241+ 89C0 18 22            jr 6F                                               ; RET.
 242+ 89C2
 243+ 89C2              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 244+ 89C2
 245+ 89C2 28 11        3 jr z,5F
 246+ 89C4
 247+ 89C4              ; 	1er CUAD. ----- ----- ----- ----- -----
 248+ 89C4              ;
 249+ 89C4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 250+ 89C4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 251+ 89C4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 252+ 89C4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 253+ 89C4
 254+ 89C4              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 255+ 89C4              ;	   ""        ""       "f9", B="1"
 256+ 89C4              ;	   ""        ""       "fb", B="2"
 257+ 89C4              ; 	   ""        ""       "fb", B="3"
 258+ 89C4
 259+ 89C4 2A 9D 85     	ld hl,(Posicion_actual)
 260+ 89C7 CD E0 8F     	call NextScan
 261+ 89CA
 262+ 89CA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 263+ 89CA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 264+ 89CA              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 265+ 89CA              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 266+ 89CA
 267+ 89CA CD EC 89         call Ajusta_disparo_parte_izquierda
 268+ 89CD
 269+ 89CD              ; 	No se produce impacto. B="$80"
 270+ 89CD              ; 	Dirección del proyectil hacia abajo. C="$80"
 271+ 89CD
 272+ 89CD 01 80 80         ld bc,$8080
 273+ 89D0
 274+ 89D0              ; 	LLegados a este punto tendremos:
 275+ 89D0              ;
 276+ 89D0              ;       Puntero_objeto_disparo en IY.
 277+ 89D0              ;       Rutinas_de_impresion en IX.
 278+ 89D0              ;       Puntero_de_impresion en HL.
 279+ 89D0              ;       Impacto/Dirección en BC.
 280+ 89D0
 281+ 89D0 CD F4 89         call Almacena_disparo
 282+ 89D3 18 0F            jr 6F                                           ; RET.
 283+ 89D5
 284+ 89D5              ; 	Estamos en el 2º cuadrante de pantalla.
 285+ 89D5              ; 	2º CUAD. ----- ----- ----- ----- -----
 286+ 89D5              ;
 287+ 89D5              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 288+ 89D5              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 289+ 89D5              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 290+ 89D5              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 291+ 89D5
 292+ 89D5 2A 9D 85     5 ld hl,(Posicion_actual)
 293+ 89D8 CD E0 8F     	call NextScan
 294+ 89DB
 295+ 89DB              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 296+ 89DB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 297+ 89DB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 298+ 89DB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 299+ 89DB
 300+ 89DB CD E5 89         call Ajusta_disparo_parte_derecha
 301+ 89DE
 302+ 89DE              ; 	No se produce impacto. B="$80"
 303+ 89DE              ; 	Dirección del proyectil hacia abajo. C="80"
 304+ 89DE
 305+ 89DE 01 80 80     15 ld bc,$8080
 306+ 89E1
 307+ 89E1              ; 	LLegados a este punto tendremos:
 308+ 89E1              ;
 309+ 89E1              ;       Puntero_objeto_disparo en IY.
 310+ 89E1              ;       Rutinas_de_impresion en IX.
 311+ 89E1              ;       Puntero_de_impresion en HL.
 312+ 89E1              ;       Impacto/Dirección en BC.
 313+ 89E1
 314+ 89E1 CD F4 89         call Almacena_disparo
 315+ 89E4
 316+ 89E4 C9           6 ret
 317+ 89E5
 318+ 89E5              ; ----------------------------------------------------------------
 319+ 89E5              ;
 320+ 89E5              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 321+ 89E5              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 322+ 89E5              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 323+ 89E5
 324+ 89E5 78           Ajusta_disparo_parte_derecha ld a,b
 325+ 89E6 FE 02            cp 2
 326+ 89E8 38 01            jr c,1F
 327+ 89EA 23               inc hl
 328+ 89EB C9           1 ret
 329+ 89EC
 330+ 89EC 78           Ajusta_disparo_parte_izquierda ld a,b
 331+ 89ED FE 01        	cp 1
 332+ 89EF 20 01        	jr nz,1F
 333+ 89F1 2B           	dec hl
 334+ 89F2 2B           1 dec hl
 335+ 89F3 C9               ret
 336+ 89F4
 337+ 89F4              ; ----------------------------------------------------------------
 338+ 89F4              ;
 339+ 89F4              ;   25/02/23
 340+ 89F4              ;
 341+ 89F4              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 342+ 89F4              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 343+ 89F4              ;
 344+ 89F4              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 345+ 89F4              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 346+ 89F4
 347+ 89F4              Almacena_disparo
 348+ 89F4
 349+ 89F4 E5               push hl  										; HL contiene el puntero de impresión.
 350+ 89F5 F1               pop af
 351+ 89F6 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 352+ 89F7
 353+ 89F7 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 354+ 89F8 E6 01            and 1
 355+ 89FA 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 356+ 89FC              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 357+ 89FC              ; 	Dispara AMADEUS.
 358+ 89FC
 359+ 89FC              ;	Comprobamos que a Amadeus aún le quedan disparos.
 360+ 89FC              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 361+ 89FC              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 362+ 89FC              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 363+ 89FC
 364+ 89FC C5               push bc
 365+ 89FD 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 366+ 8A00 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 367+ 8A03 A7               and a
 368+ 8A04 ED 42            sbc hl,bc
 369+ 8A06 CC 96 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 370+ 8A09 C1               pop bc
 371+ 8A0A 28 54            jr z,4F
 372+ 8A0C
 373+ 8A0C 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 374+ 8A0F 23               inc hl
 375+ 8A10 23               inc hl
 376+ 8A11 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 377+ 8A14              ;                                                   ; _ Disparo_(+1).
 378+ 8A14 18 18            jr 2F
 379+ 8A16
 380+ 8A16              ; Dispara una entidad.
 381+ 8A16
 382+ 8A16 C5           1 push bc
 383+ 8A17 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 384+ 8A1A 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 385+ 8A1D A7               and a
 386+ 8A1E ED 42            sbc hl,bc
 387+ 8A20 CC 8F 87         call z,Inicia_Puntero_Disparo_Entidades
 388+ 8A23 C1               pop bc
 389+ 8A24 28 3A            jr z,4F
 390+ 8A26
 391+ 8A26 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 392+ 8A29 23               inc hl
 393+ 8A2A 23               inc hl
 394+ 8A2B 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 395+ 8A2E              ;                                                   ; _ Disparo_(+1).
 396+ 8A2E CD CD 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 397+ 8A31              ;                                                   ; _ los 8 bytes que definen el disparo:
 398+ 8A31              ;
 399+ 8A31              ;                                                     Puntero_objeto_disparo en IY.
 400+ 8A31              ;                                                     Rutinas_de_impresion en IX.
 401+ 8A31              ;                                                     Puntero_de_impresion en HL.
 402+ 8A31              ;                                                     Impacto/Dirección en BC.
 403+ 8A31
 404+ 8A31 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 405+ 8A32 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 406+ 8A33 23               inc hl                                          ; _ al siguiente.
 407+ 8A34 A7               and a
 408+ 8A35 20 C0            jr nz,3B
 409+ 8A37
 410+ 8A37 08               ex af,af
 411+ 8A38 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 412+ 8A3C F9               ld sp,hl
 413+ 8A3D
 414+ 8A3D DD E5            push ix                                         ; Rutina de impresión.
 415+ 8A3F F5               push af                                         ; Puntero de impresión.
 416+ 8A40 FD E5            push iy                                         ; Puntero objeto.
 417+ 8A42 C5               push bc                                         ; Control.
 418+ 8A43
 419+ 8A43 ED 7B DF 85      ld sp,(Stack)
 420+ 8A47
 421+ 8A47              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 422+ 8A47
 423+ 8A47 21 D6 85     	ld hl,Ctrl_1
 424+ 8A4A CB C6        	set 0,(hl)
 425+ 8A4C
 426+ 8A4C DD E5        	push ix
 427+ 8A4E E1               pop hl
 428+ 8A4F F5               push af
 429+ 8A50 DD E1            pop ix
 430+ 8A52
 431+ 8A52 CD A0 7F     	call Guarda_foto_registros
 432+ 8A55
 433+ 8A55 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 434+ 8A58 CB 86        	res 0,(hl)
 435+ 8A5A
 436+ 8A5A              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 437+ 8A5A              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 438+ 8A5A
 439+ 8A5A CD 96 87         call Inicia_Puntero_Disparo_Amadeus
 440+ 8A5D CD 8F 87         call Inicia_Puntero_Disparo_Entidades
 441+ 8A60
 442+ 8A60 C9           4 ret
 443+ 8A61
 444+ 8A61              ; ----------------------------------------------------------------
 445+ 8A61              ;
 446+ 8A61              ;   4/3/23
 447+ 8A61              ;
 448+ 8A61              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 449+ 8A61              ;   _ al generarse el disparo.
 450+ 8A61              ;
 451+ 8A61              ;       "$80" ..... No se produce colisión.
 452+ 8A61              ;       "$81" ..... Se produce colisión.
 453+ 8A61
 454+ 8A61              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 455+ 8A61              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 456+ 8A61
 457+ 8A61
 458+ 8A61 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 459+ 8A63 E5               push hl                                        ; Puntero de impresión.
 460+ 8A64 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 461+ 8A66 CD 82 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 462+ 8A69
 463+ 8A69 7B               ld a,e
 464+ 8A6A E6 01            and 1
 465+ 8A6C 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 466+ 8A6E
 467+ 8A6E E1               pop hl
 468+ 8A6F E5               push hl
 469+ 8A70 CD E0 8F         call NextScan
 470+ 8A73
 471+ 8A73 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 472+ 8A74 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 473+ 8A76 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 474+ 8A78              ;                                                  ; _ 2º scanline si esto es así.
 475+ 8A78 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 476+ 8A7A CD 82 8A         call Bucle_2
 477+ 8A7D
 478+ 8A7D 43           2 ld b,e
 479+ 8A7E E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 480+ 8A7F FD E1            pop iy
 481+ 8A81 C9               ret
 482+ 8A82
 483+ 8A82               ; ---------- ----------
 484+ 8A82
 485+ 8A82 06 02        Bucle_2 ld b,2
 486+ 8A84 FD 7E 00     2 ld a,(iy)
 487+ 8A87 A6               and (hl)
 488+ 8A88 28 02            jr z,1F
 489+ 8A8A 1E 81            ld e,$81
 490+ 8A8C 23           1 inc hl
 491+ 8A8D FD 23            inc iy
 492+ 8A8F 10 F3            djnz 2B
 493+ 8A91 C9               ret
 494+ 8A92
 495+ 8A92              ; -------------------------------------------------------------------------------------------------------------
 496+ 8A92              ;
 497+ 8A92              ;   11/04/23
 498+ 8A92              ;
 499+ 8A92              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 500+ 8A92              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 501+ 8A92              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 502+ 8A92              ;
 503+ 8A92              ;   MODIFICA: HL,DE,BC,A y AF´.
 504+ 8A92
 505+ 8A92              Compara_coordenadas_X
 506+ 8A92
 507+ 8A92              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 508+ 8A92              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 509+ 8A92
 510+ 8A92              ; Preparamos registros:
 511+ 8A92
 512+ 8A92 21 A1 85         ld hl,Filas+6
 513+ 8A95 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 514+ 8A96 23               inc hl
 515+ 8A97 23               inc hl
 516+ 8A98 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 517+ 8A99 43               ld b,e
 518+ 8A9A 21 AF 85         ld hl,Filas+20
 519+ 8A9D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 520+ 8A9E 21 F4 85         ld hl,Coordenadas_X_Entidad
 521+ 8AA1 CD B0 8C         call Guarda_coordenadas_X
 522+ 8AA4
 523+ 8AA4              ; Preparamos registros:
 524+ 8AA4
 525+ 8AA4 21 7A 84         ld hl,Amadeus_db+6
 526+ 8AA7 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 527+ 8AA8 23               inc hl
 528+ 8AA9 23               inc hl
 529+ 8AAA 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 530+ 8AAB 7B               ld a,e
 531+ 8AAC 08               ex af,af'
 532+ 8AAD 21 88 84         ld hl,Amadeus_db+20
 533+ 8AB0 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 534+ 8AB1 21 F1 85         ld hl,Coordenadas_X_Amadeus
 535+ 8AB4 CD B0 8C         call Guarda_coordenadas_X
 536+ 8AB7
 537+ 8AB7              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 538+ 8AB7              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 539+ 8AB7
 540+ 8AB7 04               inc b
 541+ 8AB8 05               dec b
 542+ 8AB9 28 04            jr z,1F
 543+ 8ABB 06 03            ld b,3
 544+ 8ABD 18 02            jr 2F
 545+ 8ABF 06 02        1 ld b,2
 546+ 8AC1 08           2 ex af,af'
 547+ 8AC2 3C               inc a
 548+ 8AC3 3D               dec a
 549+ 8AC4 28 04            jr z,5F
 550+ 8AC6 0E 03            ld c,3
 551+ 8AC8 18 02            jr 6F
 552+ 8ACA 0E 02        5 ld c,2
 553+ 8ACC 79           6 ld a,c
 554+ 8ACD 08               ex af,af'
 555+ 8ACE 11 F4 85         ld de,Coordenadas_X_Entidad
 556+ 8AD1 1A           4 ld a,(de)
 557+ 8AD2 21 F1 85         ld hl,Coordenadas_X_Amadeus
 558+ 8AD5 BE           3 cp (hl)
 559+ 8AD6 28 0E            jr z,7F
 560+ 8AD8 23               inc hl
 561+ 8AD9 0D               dec c
 562+ 8ADA 20 F9            jr nz,3B
 563+ 8ADC 13               inc de
 564+ 8ADD 08               ex af,af'
 565+ 8ADE 4F               ld c,a
 566+ 8ADF 08               ex af,af'
 567+ 8AE0 10 EF            djnz 4B
 568+ 8AE2
 569+ 8AE2              ; Limpiamos los almacenes de coordenadas y salimos.
 570+ 8AE2
 571+ 8AE2 CD EF 8C     8 call Limpia_Coordenadas_X
 572+ 8AE5 C9               ret
 573+ 8AE6
 574+ 8AE6 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 575+ 8AE8 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 576+ 8AEB 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 577+ 8AEE CB D6            set 2,(hl)
 578+ 8AF0 18 F0            jr 8B
 579+ 8AF2
 580+ 8AF2              ; -----------------------------------------------------------------------
 581+ 8AF2              ;
 582+ 8AF2              ;   17/04/23
 583+ 8AF2              ;
 584+ 8AF2
 585+ 8AF2              Detecta_colision_nave_entidad
 586+ 8AF2
 587+ 8AF2              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 588+ 8AF2
 589+ 8AF2 2A 9D 85         ld hl,(Posicion_actual)
 590+ 8AF5 CD 45 8F         call Calcula_puntero_de_impresion
 591+ 8AF8
 592+ 8AF8              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 593+ 8AF8              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 594+ 8AF8
 595+ 8AF8 DD E5            push ix
 596+ 8AFA E1               pop hl
 597+ 8AFB E5               push hl
 598+ 8AFC
 599+ 8AFC              ; ----- ----- -----
 600+ 8AFC 1E 00            ld e,0                                         ; Indica impacto.
 601+ 8AFE 06 0A            ld b,10
 602+ 8B00 CD 30 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 603+ 8B03 7B               ld a,e
 604+ 8B04 FE 05            cp 5
 605+ 8B06 38 0E            jr c,3F
 606+ 8B08
 607+ 8B08              ; LLegados a este punto:
 608+ 8B08              ;
 609+ 8B08              ;   HAY COLISIÓN !!!!!.
 610+ 8B08              ;
 611+ 8B08              ;   .db (Impacto) de Amadeus a "1".
 612+ 8B08              ;   SET el bit3 de (Impacto2).
 613+ 8B08              ;
 614+ 8B08              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 615+ 8B08
 616+ 8B08 21 8D 84         ld hl,Amadeus_db+25
 617+ 8B0B 36 01            ld (hl),1
 618+ 8B0D 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 619+ 8B10 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 620+ 8B12 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 621+ 8B14 18 18            jr 1F
 622+ 8B16
 623+ 8B16              ; -----
 624+ 8B16
 625+ 8B16 E1           3 pop hl
 626+ 8B17 CD E0 8F         call NextScan
 627+ 8B1A E5               push hl
 628+ 8B1B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 629+ 8B1C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 630+ 8B1E 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 631+ 8B20 30 0C            jr nc,1F
 632+ 8B22              ;                                                  ; _ 2º scanline si esto es así.
 633+ 8B22 10 DC            djnz 2B
 634+ 8B24
 635+ 8B24              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 636+ 8B24
 637+ 8B24              ; LLegados a este punto:
 638+ 8B24              ;
 639+ 8B24              ;   NO HAY COLISIÓN !!!!!.
 640+ 8B24              ;
 641+ 8B24              ;   .db (Impacto) de Amadeus a "0".
 642+ 8B24              ;   RES el bit2 de (Impacto2).
 643+ 8B24              ;
 644+ 8B24              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 645+ 8B24              ;   Lo colocamos a "0".
 646+ 8B24
 647+ 8B24 21 EC 85         ld hl,Impacto2
 648+ 8B27 CB 96            res 2,(hl)
 649+ 8B29 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 650+ 8B2C 36 00            ld (hl),0
 651+ 8B2E
 652+ 8B2E E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 653+ 8B2F C9               ret
 654+ 8B30
 655+ 8B30               ; ---------- ----------
 656+ 8B30
 657+ 8B30 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 658+ 8B31 3A 9C 85         ld a,(Columns)
 659+ 8B34 47               ld b,a
 660+ 8B35 FD 7E 00     2 ld a,(iy)
 661+ 8B38 BE               cp (hl)
 662+ 8B39 28 01            jr z,1F
 663+ 8B3B
 664+ 8B3B 1C               inc e
 665+ 8B3C
 666+ 8B3C 23           1 inc hl
 667+ 8B3D FD 23            inc iy
 668+ 8B3F 10 F4            djnz 2B
 669+ 8B41 C1               pop bc
 670+ 8B42 C9               ret
 671+ 8B43
 672+ 8B43              ; -------------------------------------------------------------------------------------------------------------
 673+ 8B43              ;
 674+ 8B43              ;   13/03/23
 675+ 8B43              ;
 676+ 8B43              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 677+ 8B43              ;
 678+ 8B43              ;   DESTRUYE: HL,BC,DE y A.
 679+ 8B43
 680+ 8B43 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 681+ 8B46 7E               ld a,(hl)
 682+ 8B47 A7               and a
 683+ 8B48 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 684+ 8B49
 685+ 8B49 44               ld b,h
 686+ 8B4A 4D               ld c,l
 687+ 8B4B 2A E5 85         ld hl,(Stack_snapshot_disparos)
 688+ 8B4E E5               push hl
 689+ 8B4F A7               and a
 690+ 8B50 ED 42            sbc hl,bc
 691+ 8B52 E5               push hl
 692+ 8B53 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 693+ 8B54
 694+ 8B54 E1               pop hl
 695+ 8B55 54               ld d,h
 696+ 8B56 5D               ld e,l
 697+ 8B57 1B               dec de
 698+ 8B58 ED B8            lddr                                                ; Limpiamos.
 699+ 8B5A
 700+ 8B5A 21 60 70         ld hl,Album_de_fotos_disparos
 701+ 8B5D 22 E5 85         ld (Stack_snapshot_disparos),hl
 702+ 8B60
 703+ 8B60 C9               ret
 704+ 8B61
 705+ 8B61              ; -------------------------------------------------------------------------------------------------------------
 706+ 8B61              ;
 707+ 8B61              ;   28/03/23
 708+ 8B61              ;
 709+ 8B61
 710+ 8B61 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 711+ 8B64 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 712+ 8B67
 713+ 8B67 CD CD 87     2 call Extrae_address
 714+ 8B6A 7E               ld a,(hl)
 715+ 8B6B A7               and a
 716+ 8B6C 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 717+ 8B6E
 718+ 8B6E              ; ----- ----- ----- ----- ----- -----
 719+ 8B6E
 720+ 8B6E C5               push bc
 721+ 8B6F CD 2B 8C         call foto_disparo_a_borrar
 722+ 8B72
 723+ 8B72              ; Existe colisión con este disparo???
 724+ 8B72
 725+ 8B72 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 726+ 8B73 7E               ld a,(hl)
 727+ 8B74 2B               dec hl
 728+ 8B75 E6 01            and 1
 729+ 8B77 28 1D            jr z,9F
 730+ 8B79
 731+ 8B79              ;   En este punto:
 732+ 8B79              ;
 733+ 8B79              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 734+ 8B79              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 735+ 8B79              ;   _con la entidad).
 736+ 8B79              ;
 737+ 8B79              ;   Disparo_2A defw 0                                ; Control.
 738+ 8B79              ;    defw 0                                          ; Puntero objeto.
 739+ 8B79              ;    defw 0                                          ; Puntero de impresión.
 740+ 8B79              ;    defw 0                                          ; Rutina de impresión.
 741+ 8B79
 742+ 8B79 E5               push hl
 743+ 8B7A
 744+ 8B7A 06 04            ld b,4
 745+ 8B7C 23           19 inc hl
 746+ 8B7D 10 FD            djnz 19B
 747+ 8B7F
 748+ 8B7F CD CD 87         call Extrae_address
 749+ 8B82 CD F7 95         call Genera_coordenadas_disparo
 750+ 8B85
 751+ 8B85              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 752+ 8B85
 753+ 8B85 21 EF 85         ld hl,Coordenadas_disparo_certero
 754+ 8B88 72               ld (hl),d
 755+ 8B89 23               inc hl
 756+ 8B8A 73               ld (hl),e
 757+ 8B8B
 758+ 8B8B              ; Elimino el disparo de la base de datos.
 759+ 8B8B
 760+ 8B8B E1               pop hl
 761+ 8B8C CD A5 8C         call Elimina_disparo_de_base_de_datos
 762+ 8B8F 21 EC 85         ld hl,Impacto2
 763+ 8B92 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 764+ 8B94
 765+ 8B94 18 06            jr 11F
 766+ 8B96
 767+ 8B96 CD 54 8C     9 call Mueve_disparo
 768+ 8B99 CD 2B 8C         call foto_disparo_a_borrar
 769+ 8B9C
 770+ 8B9C C1           11 pop bc
 771+ 8B9D 18 04            jr 7F
 772+ 8B9F
 773+ 8B9F              ; ----- ----- ----- ----- ----- -----
 774+ 8B9F
 775+ 8B9F ED 42        1 sbc hl,bc
 776+ 8BA1 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 777+ 8BA3
 778+ 8BA3 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 779+ 8BA6 23               inc hl
 780+ 8BA7 23               inc hl
 781+ 8BA8 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 782+ 8BAB 18 BA            jr 2B
 783+ 8BAD
 784+ 8BAD CD 96 87     3 call Inicia_Puntero_Disparo_Amadeus
 785+ 8BB0 01 66 84         ld bc,Disparo_11
 786+ 8BB3 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 787+ 8BB6
 788+ 8BB6 CD CD 87     5 call Extrae_address
 789+ 8BB9 7E               ld a,(hl)
 790+ 8BBA A7               and a
 791+ 8BBB 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 792+ 8BBD
 793+ 8BBD              ; ----- ----- ----- ----- ----- -----
 794+ 8BBD
 795+ 8BBD C5               push bc
 796+ 8BBE CD 2B 8C         call foto_disparo_a_borrar
 797+ 8BC1
 798+ 8BC1              ; Existe colisión con este disparo???
 799+ 8BC1
 800+ 8BC1 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 801+ 8BC2 7E               ld a,(hl)
 802+ 8BC3 2B               dec hl
 803+ 8BC4 E6 01            and 1
 804+ 8BC6 28 48            jr z,10F
 805+ 8BC8
 806+ 8BC8              ; La colisión se produce con Amadeus???
 807+ 8BC8              ; Amadeus siempre tiene (Coordenada_y)="$16".
 808+ 8BC8
 809+ 8BC8 E5               push hl
 810+ 8BC9
 811+ 8BC9 06 04            ld b,4
 812+ 8BCB 23           16 inc hl
 813+ 8BCC 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 814+ 8BCE CD CD 87         call Extrae_address
 815+ 8BD1 CD F7 95         call Genera_coordenadas_disparo
 816+ 8BD4
 817+ 8BD4 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 818+ 8BD5 FE 16            cp $16
 819+ 8BD7 38 22            jr c,15F
 820+ 8BD9
 821+ 8BD9              ; (Colisiones en filas 16 y 17).
 822+ 8BD9
 823+ 8BD9 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 824+ 8BDA
 825+ 8BDA              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 826+ 8BDA
 827+ 8BDA 21 7A 84         ld hl,Amadeus_db+6
 828+ 8BDD 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 829+ 8BDE 23               inc hl
 830+ 8BDF 23               inc hl
 831+ 8BE0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 832+ 8BE1 21 88 84         ld hl,Amadeus_db+20
 833+ 8BE4 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 834+ 8BE5 21 F1 85         ld hl,Coordenadas_X_Amadeus
 835+ 8BE8 CD B0 8C         call Guarda_coordenadas_X
 836+ 8BEB
 837+ 8BEB D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 838+ 8BEC
 839+ 8BEC              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 840+ 8BEC
 841+ 8BEC 06 03            ld b,3
 842+ 8BEE 21 F1 85         ld hl,Coordenadas_X_Amadeus
 843+ 8BF1 7E           18 ld a,(hl)
 844+ 8BF2 BA               cp d
 845+ 8BF3 20 03            jr nz,17F
 846+ 8BF5
 847+ 8BF5              ; Colisión Amadeus !!!!!!!!!!
 848+ 8BF5
 849+ 8BF5 E1               pop hl
 850+ 8BF6 18 09            jr 14F
 851+ 8BF8
 852+ 8BF8 23           17 inc hl
 853+ 8BF9 10 F6            djnz 18B
 854+ 8BFB
 855+ 8BFB              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 856+ 8BFB              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 857+ 8BFB
 858+ 8BFB E1           15 pop hl
 859+ 8BFC 23               inc hl
 860+ 8BFD 35               dec (hl)
 861+ 8BFE 2B               dec hl
 862+ 8BFF 18 0F            jr 10F
 863+ 8C01
 864+ 8C01              ; -----------------------debug
 865+ 8C01
 866+ 8C01              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 867+ 8C01              ; _ almacén de coordenadas_X de Amadeus.
 868+ 8C01
 869+ 8C01 E5           14 push hl
 870+ 8C02 CD A5 8C         call Elimina_disparo_de_base_de_datos
 871+ 8C05 21 EC 85         ld hl,Impacto2
 872+ 8C08 CB CE            set 1,(hl)
 873+ 8C0A CD EF 8C         call Limpia_Coordenadas_X
 874+ 8C0D
 875+ 8C0D E1               pop hl
 876+ 8C0E 18 06            jr 12F
 877+ 8C10
 878+ 8C10 CD 54 8C     10 call Mueve_disparo
 879+ 8C13 CD 2B 8C         call foto_disparo_a_borrar
 880+ 8C16 C1           12 pop bc
 881+ 8C17
 882+ 8C17 18 04            jr 8F
 883+ 8C19
 884+ 8C19              ; ----- ----- ----- ----- ----- -----
 885+ 8C19
 886+ 8C19 ED 42        4 sbc hl,bc
 887+ 8C1B 28 0A            jr z,6F
 888+ 8C1D
 889+ 8C1D 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 890+ 8C20 23               inc hl
 891+ 8C21 23               inc hl
 892+ 8C22 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 893+ 8C25 18 8F            jr 5B
 894+ 8C27
 895+ 8C27 CD 8F 87     6 call Inicia_Puntero_Disparo_Entidades
 896+ 8C2A C9               ret
 897+ 8C2B
 898+ 8C2B              ; ------------------------------------------------------------------
 899+ 8C2B
 900+ 8C2B              foto_disparo_a_borrar
 901+ 8C2B
 902+ 8C2B 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 903+ 8C2C A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 904+ 8C2D C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 905+ 8C2E
 906+ 8C2E E5               push hl
 907+ 8C2F 23               inc hl
 908+ 8C30 23               inc hl
 909+ 8C31 ED 73 DF 85      ld (Stack),sp
 910+ 8C35 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 911+ 8C36 FD E1            pop iy
 912+ 8C38 DD E1            pop ix
 913+ 8C3A E1               pop hl
 914+ 8C3B ED 7B DF 85      ld sp,(Stack)
 915+ 8C3F 3A D6 85         ld a,(Ctrl_1)
 916+ 8C42 CB C7            set 0,a
 917+ 8C44 32 D6 85         ld (Ctrl_1),a
 918+ 8C47 CD A0 7F         call Guarda_foto_registros
 919+ 8C4A 3A D6 85         ld a,(Ctrl_1)
 920+ 8C4D CB 87            res 0,a
 921+ 8C4F 32 D6 85         ld (Ctrl_1),a
 922+ 8C52 E1               pop hl
 923+ 8C53 C9               ret
 924+ 8C54
 925+ 8C54 E5           Mueve_disparo push hl
 926+ 8C55 7E               ld a,(hl)
 927+ 8C56 06 04            ld b,4
 928+ 8C58 23           1 inc hl
 929+ 8C59 10 FD            djnz 1B
 930+ 8C5B
 931+ 8C5B              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 932+ 8C5B
 933+ 8C5B CD CD 87         call Extrae_address
 934+ 8C5E
 935+ 8C5E E6 01            and 1
 936+ 8C60 28 2A            jr z,2F
 937+ 8C62
 938+ 8C62              ; Disparo hacia arriba, (Amadeus).
 939+ 8C62
 940+ 8C62              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 941+ 8C62              ; _ de la dificultad.
 942+ 8C62
 943+ 8C62 CD EF 8F         call PreviousScan
 944+ 8C65 CD EF 8F         call PreviousScan
 945+ 8C68 CD EF 8F         call PreviousScan
 946+ 8C6B
 947+ 8C6B              ; Detecta si el disparo de Amadeus sale de pantalla:
 948+ 8C6B
 949+ 8C6B 7C               ld a,h
 950+ 8C6C FE 40            cp $40
 951+ 8C6E 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 952+ 8C70
 953+ 8C70              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 954+ 8C70
 955+ 8C70 EB               ex de,hl
 956+ 8C71 06 04            ld b,4
 957+ 8C73 2B           6 dec hl
 958+ 8C74 10 FD            djnz 6B
 959+ 8C76
 960+ 8C76 CD A5 8C         call Elimina_disparo_de_base_de_datos
 961+ 8C79
 962+ 8C79 18 0C            jr 4F
 963+ 8C7B
 964+ 8C7B              ; Se ha desplazado la bala, compruebo colisión.
 965+ 8C7B
 966+ 8C7B D5           3 push de
 967+ 8C7C C5               push bc
 968+ 8C7D CD 61 8A         call Comprueba_Colision
 969+ 8C80 78               ld a,b
 970+ 8C81 C1               pop bc
 971+ 8C82 D1               pop de
 972+ 8C83
 973+ 8C83 EB               ex de,hl
 974+ 8C84
 975+ 8C84 73               ld (hl),e
 976+ 8C85 23               inc hl
 977+ 8C86 72               ld (hl),d
 978+ 8C87
 979+ 8C87 E1           4 pop hl
 980+ 8C88 23               inc hl
 981+ 8C89 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 982+ 8C8A 2B               dec hl
 983+ 8C8B C9               ret
 984+ 8C8C
 985+ 8C8C              ; Disparo hacia abajo, (Entidad).
 986+ 8C8C
 987+ 8C8C              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 988+ 8C8C              ; _ de la dificultad.
 989+ 8C8C
 990+ 8C8C CD E0 8F     2 call NextScan
 991+ 8C8F CD E0 8F         call NextScan
 992+ 8C92 CD E0 8F         call NextScan
 993+ 8C95
 994+ 8C95              ; Detecta si el disparo de la entidad sale de la pantalla.
 995+ 8C95
 996+ 8C95 7C               ld a,h
 997+ 8C96 FE 58            cp $58
 998+ 8C98 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 999+ 8C9A
1000+ 8C9A EB               ex de,hl
1001+ 8C9B 06 04            ld b,4
1002+ 8C9D 2B           5 dec hl
1003+ 8C9E 10 FD            djnz 5B
1004+ 8CA0
1005+ 8CA0 CD A5 8C         call Elimina_disparo_de_base_de_datos
1006+ 8CA3
1007+ 8CA3 18 E2            jr 4B
1008+ 8CA5
1009+ 8CA5              ; HL apunta al primer byte de la base de datos del disparo.
1010+ 8CA5
1011+ 8CA5 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1012+ 8CA8 AF               xor a
1013+ 8CA9 77               ld (hl),a
1014+ 8CAA 54               ld d,h
1015+ 8CAB 5D               ld e,l
1016+ 8CAC 13               inc de
1017+ 8CAD ED B0            ldir
1018+ 8CAF C9               ret
1019+ 8CB0
1020+ 8CB0              ; -----------------------------------------------------------------
1021+ 8CB0              ;
1022+ 8CB0              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1023+ 8CB0              ;
1024+ 8CB0              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1025+ 8CB0              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1026+ 8CB0              ;
1027+ 8CB0              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1028+ 8CB0              ;
1029+ 8CB0              ;   INPUTS:
1030+ 8CB0              ;
1031+ 8CB0              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1032+ 8CB0              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1033+ 8CB0              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1034+ 8CB0
1035+ 8CB0              ;   MODIFICA: A, HL, DE y C
1036+ 8CB0
1037+ 8CB0 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1038+ 8CB1 79               ld a,c
1039+ 8CB2 E6 01            and 1
1040+ 8CB4 20 03            jr nz,1F
1041+ 8CB6 14               inc d
1042+ 8CB7 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1043+ 8CB9
1044+ 8CB9              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1045+ 8CB9              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1046+ 8CB9
1047+ 8CB9 15           1 dec d
1048+ 8CBA 23           2 inc hl
1049+ 8CBB 72               ld (hl),d
1050+ 8CBC
1051+ 8CBC 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1052+ 8CBD A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1053+ 8CBE C8               ret z
1054+ 8CBF
1055+ 8CBF AF               xor a
1056+ 8CC0 5F               ld e,a
1057+ 8CC1 18 ED            jr Guarda_coordenadas_X
1058+ 8CC3
1059+ 8CC3              ; -----------------------------------------------------------------
1060+ 8CC3              ;
1061+ 8CC3              ;   12/04/23
1062+ 8CC3              ;
1063+ 8CC3
1064+ 8CC3 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1065+ 8CC6 A7               and a
1066+ 8CC7 C8               ret z
1067+ 8CC8
1068+ 8CC8 FE 04            cp 4
1069+ 8CCA 20 09            jr nz,1F
1070+ 8CCC
1071+ 8CCC
1072+ 8CCC              ; La colisión se produce por contacto entre Amadeus y una entidad.
1073+ 8CCC
1074+ 8CCC CD F2 8A         call Detecta_colision_nave_entidad
1075+ 8CCF
1076+ 8CCF 21 EC 85         ld hl,Impacto2
1077+ 8CD2 CB 5E            bit 3,(hl)
1078+ 8CD4 C0               ret nz                                               ; Existe colisión, RET.
1079+ 8CD5
1080+ 8CD5              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1081+ 8CD5              ; Primero analizamos si algún disparo impacta en Amadeus.
1082+ 8CD5
1083+ 8CD5 21 EC 85     1 ld hl,Impacto2
1084+ 8CD8 CB 4E            bit 1,(hl)
1085+ 8CDA 28 07            jr z,2F
1086+ 8CDC
1087+ 8CDC 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1088+ 8CDF 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1089+ 8CE1 18 0B            jr 3F
1090+ 8CE3
1091+ 8CE3 21 EC 85     2 ld hl,Impacto2
1092+ 8CE6 CB 46            bit 0,(hl)
1093+ 8CE8 C8               ret z
1094+ 8CE9
1095+ 8CE9              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1096+ 8CE9
1097+ 8CE9 21 D6 85         ld hl,Ctrl_1
1098+ 8CEC CB D6            set 2,(hl)
1099+ 8CEE
1100+ 8CEE C9           3 ret
1101+ 8CEF
1102+ 8CEF              ; -----------------------------------------------------------------
1103+ 8CEF              ;
1104+ 8CEF              ;   16/04/23
1105+ 8CEF              ;
1106+ 8CEF
1107+ 8CEF AF           Limpia_Coordenadas_X xor a
1108+ 8CF0 06 06            ld b,6
1109+ 8CF2 21 F1 85         ld hl,Coordenadas_X_Amadeus
1110+ 8CF5 77           1 ld (hl),a
1111+ 8CF6 23               inc hl
1112+ 8CF7 10 FC            djnz 1B
1113+ 8CF9 C9               ret
# file closed: Disparo.asm
 940  8CFA              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8CFA              ; ******************************************************************************************************************************************************************************************
   2+ 8CFA              ;
   3+ 8CFA              ; 01/23
   4+ 8CFA              ;
   5+ 8CFA              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8CFA
   7+ 8CFA CD D4 8F     Draw call Prepara_draw
   8+ 8CFD 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8CFE A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8CFF 28 05        	jr z,2F
  11+ 8D01
  12+ 8D01 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D04 18 0C        	jr 1F
  14+ 8D06 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D09 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D0C CD 9B 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D0F              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D0F CD 1A 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D12 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8D15 CB 6F        	bit 5,a
  21+ 8D17 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8D19
  23+ 8D19 CD 31 8D     	call Comprueba_limite_horizontal
  24+ 8D1C CD C1 8D     	call Comprueba_limite_vertical
  25+ 8D1F
  26+ 8D1F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8D1F
  28+ 8D1F CD 0E 8F     3 call calcula_CColumnass
  29+ 8D22 CD 45 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8D25 CD 9A 8F     	call Define_rutina_de_impresion
  31+ 8D28
  32+ 8D28 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8D2B CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8D2D 32 C9 85     	ld (Ctrl_0),a
  35+ 8D30
  36+ 8D30 C9           	ret
  37+ 8D31
  38+ 8D31              ; *******************************************************************************************************************************************************************************************
  39+ 8D31              ;	21/01/23
  40+ 8D31              ;
  41+ 8D31              ; 	Comprueba_limite_horizontal.
  42+ 8D31              ;
  43+ 8D31              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8D31              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8D31              ;
  46+ 8D31              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8D31              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8D31              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8D31              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8D31
  51+ 8D31
  52+ 8D31
  53+ 8D31 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8D34 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8D36 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8D38 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8D3A 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8D3D 18 09            jr 6F
  59+ 8D3F CB 5F        1 bit 3,a
  60+ 8D41 28 0A            jr z,2F
  61+ 8D43 E6 F7            and $f7
  62+ 8D45 32 C9 85         ld (Ctrl_0),a
  63+ 8D48 CD 9B 8E     6 call Inicializacion
  64+ 8D4B 18 5B            jr 5F
  65+ 8D4D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8D4E
  67+ 8D4E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8D4E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8D4E
  70+ 8D4E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8D4F 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8D52 CD A0 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8D55 67           	ld h,a
  74+ 8D56 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8D57 CD A0 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8D5A 67           	ld h,a
  77+ 8D5B A7           	and a
  78+ 8D5C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8D5E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8D5F 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8D62 FE 02        	cp 2
  82+ 8D64 38 1E        	jr c,3F
  83+ 8D66 28 1C        	jr z,3F
  84+ 8D68 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8D69 28 23            jr z,7F
  86+ 8D6B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8D6D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8D6F E1           	pop hl
  89+ 8D70
  90+ 8D70              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8D70              ; _para indicar con E="2" en caso necesario.
  92+ 8D70
  93+ 8D70 E5               push hl
  94+ 8D71 C5               push bc
  95+ 8D72 CD A0 92     	call calcula_tercio
  96+ 8D75 FE 01        	cp 1
  97+ 8D77 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8D79 CD A9 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8D7C 28 26            jr z,9F
 100+ 8D7E 38 24            jr c,9F
 101+ 8D80 1E 00        11 ld e,0
 102+ 8D82 18 22            jr 8F
 103+ 8D84 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8D85 28 07        	jr z, 7F
 105+ 8D87 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D89 1E 00         	ld e,0
 107+ 8D8B E1           	pop hl
 108+ 8D8C 18 04        	jr 4F
 109+ 8D8E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D90 18 15            jr 10F
 111+ 8D92
 112+ 8D92              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D92              ; _para indicar con E="2" en caso necesario.
 114+ 8D92
 115+ 8D92 E5           4 push hl
 116+ 8D93 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D94 CD A0 92     	call calcula_tercio
 118+ 8D97 FE 01        	cp 1
 119+ 8D99 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D9B CD A9 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D9E 28 04            jr z,9F
 122+ 8DA0 30 02            jr nc,9F
 123+ 8DA2 18 02        	jr 8F
 124+ 8DA4 1E 02        9 ld e,2
 125+ 8DA6 C1           8 pop bc
 126+ 8DA7 E1           10 pop hl
 127+ 8DA8 C9           5 ret
 128+ 8DA9
 129+ 8DA9              ; --------------------
 130+ 8DA9              ;
 131+ 8DA9              ; 25/08/22
 132+ 8DA9
 133+ 8DA9 CD A0 92     Comprueba_centro call calcula_tercio
 134+ 8DAC 67               ld h,a
 135+ 8DAD 08           	ex af,af
 136+ 8DAE FE 02        	cp 2
 137+ 8DB0 38 07        	jr c,1F
 138+ 8DB2 28 05        	jr z,1F
 139+ 8DB4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8DB7 18 03        	jr 2F
 141+ 8DB9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8DBC 08           2 ex af,af
 143+ 8DBD A7               and a
 144+ 8DBE ED 42            sbc hl,bc
 145+ 8DC0 C9               ret
 146+ 8DC1
 147+ 8DC1              ; *********************************************************************************************************************************************************************************************
 148+ 8DC1              ;
 149+ 8DC1              ;   16/8/22
 150+ 8DC1              ;
 151+ 8DC1              ;	Comprueba_limite_vertical
 152+ 8DC1              ;
 153+ 8DC1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8DC1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8DC1              ;
 156+ 8DC1
 157+ 8DC1 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8DC4 7D           	ld a,l
 159+ 8DC5 E6 1F        	and $1F
 160+ 8DC7 57           	ld d,a
 161+ 8DC8 3A D5 85     	ld a,(Limite_vertical)
 162+ 8DCB BA           	cp d 											; Límite - Posición.
 163+ 8DCC 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8DCD 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8DD0 CB 47        	bit 0,a
 166+ 8DD2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8DD4
 168+ 8DD4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8DD4
 170+ 8DD4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8DD5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8DD7
 173+ 8DD7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8DD7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8DD7
 176+ 8DD7 3A A1 85         ld a,(Coordenada_X)
 177+ 8DDA 16 0F            ld d,Centro_izquierda
 178+ 8DDC A7               and a
 179+ 8DDD 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8DDE 28 1E            jr z,3F
 181+ 8DE0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8DE2              ;                                                    ; _salimos sin modificar nada.
 183+ 8DE2 18 0E            jr 2F
 184+ 8DE4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8DE5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8DE7
 187+ 8DE7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8DE7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8DE7
 190+ 8DE7 3A A1 85         ld a,(Coordenada_X)
 191+ 8DEA 16 10            ld d,Centro_derecha
 192+ 8DEC A7               and a
 193+ 8DED 92               sub d
 194+ 8DEE 28 0E            jr z,3F
 195+ 8DF0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8DF2              ;                                                    ; _salimos sin modificar nada.
 197+ 8DF2 CB 43        2 bit 0,e
 198+ 8DF4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8DF6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8DF7 CD 8B 8E         call Modificaccionne
 201+ 8DFA C1           	pop bc
 202+ 8DFB CD 9B 8E         call Inicializacion
 203+ 8DFE C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8DFF
 205+ 8DFF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8DFF
 207+ 8DFF C5           4 push bc
 208+ 8E00 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E03 0A           	ld a,(bc)
 210+ 8E04 3D           	dec a
 211+ 8E05 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E06 7D           	ld a,l
 213+ 8E07 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E08 CB 47        	bit 0,a
 215+ 8E0A 28 03        	jr z,5F
 216+ 8E0C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E0D 18 2E        	jr 7F
 218+ 8E0F
 219+ 8E0F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E0F
 221+ 8E0F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E10 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E11 3A C9 85     	ld a,(Ctrl_0)
 224+ 8E14 CB 4F        	bit 1,a
 225+ 8E16 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8E18 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8E19
 228+ 8E19              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8E19
 230+ 8E19 1C               inc e
 231+ 8E1A 1D               dec e
 232+ 8E1B 20 07            jr nz,12F
 233+ 8E1D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8E1E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8E1F 22 9D 85     	ld (Posicion_actual),hl
 236+ 8E22 18 44        13 jr 9F
 237+ 8E24 CB 43        12 bit 0,e
 238+ 8E26 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8E28              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8E28 C1           	pop bc
 241+ 8E29 18 D3        	jr 3B
 242+ 8E2B 80           14 add b
 243+ 8E2C 6F               ld l,a
 244+ 8E2D 22 9D 85     	ld (Posicion_actual),hl
 245+ 8E30 CD 8B 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8E33 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8E35 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8E37 32 C9 85         ld (Ctrl_0),a
 249+ 8E3A F1           	pop af
 250+ 8E3B 18 2B        	jr 9F
 251+ 8E3D
 252+ 8E3D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8E3D
 254+ 8E3D F5           7 push af
 255+ 8E3E 3A C9 85     	ld a,(Ctrl_0)
 256+ 8E41 CB 47        	bit 0,a
 257+ 8E43 20 1D        	jr nz,8F
 258+ 8E45 F1           	pop af
 259+ 8E46
 260+ 8E46              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8E46
 262+ 8E46 1C           	inc e
 263+ 8E47 1D               dec e
 264+ 8E48 20 07            jr nz,10F
 265+ 8E4A 90           	sub b
 266+ 8E4B 6F               ld l,a
 267+ 8E4C 22 9D 85     	ld (Posicion_actual),hl
 268+ 8E4F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8E51              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8E51 CB 43        10 bit 0,e
 271+ 8E53 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8E55              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8E55 C1           	pop bc
 274+ 8E56 18 A6        	jr 3B
 275+ 8E58 90           16 sub b
 276+ 8E59 6F               ld l,a
 277+ 8E5A 22 9D 85     	ld (Posicion_actual),hl
 278+ 8E5D CD 8B 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8E60 18 06            jr 9F
 280+ 8E62 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8E64 32 C9 85         ld (Ctrl_0),a
 282+ 8E67 F1           	pop af
 283+ 8E68 C1           9 pop bc
 284+ 8E69 1E 00        	ld e,0
 285+ 8E6B CD 9B 8E         call Inicializacion
 286+ 8E6E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8E6F 08           	ex af,af
 288+ 8E70 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8E71 18 8B            jr 3B
 290+ 8E73
 291+ 8E73              ; --------------------
 292+ 8E73
 293+ 8E73 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8E75 CD EF 8F     1 call PreviousScan
 295+ 8E78 10 FB            djnz 1B
 296+ 8E7A 22 9D 85     	ld (Posicion_actual),hl
 297+ 8E7D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8E7E C9           	ret
 299+ 8E7F
 300+ 8E7F              ; --------------------
 301+ 8E7F
 302+ 8E7F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8E81 CD E0 8F     1 call NextScan
 304+ 8E84 10 FB            djnz 1B
 305+ 8E86 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E89 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E8A C9           	ret
 308+ 8E8B
 309+ 8E8B              ; --------------------
 310+ 8E8B              ;
 311+ 8E8B              ;	22/01/23
 312+ 8E8B              ;
 313+ 8E8B              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E8B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E8B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E8B
 317+ 8E8B
 318+ 8E8B              Modificaccionne
 319+ 8E8B
 320+ 8E8B 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E8E FE 02        	cp 2
 322+ 8E90 CC 73 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E93 DC 73 8E         call c,Modifica_Pos_actual
 324+ 8E96 C8           	ret z
 325+ 8E97 CD 7F 8E         call Modifica_Pos_actual2
 326+ 8E9A C9               ret
 327+ 8E9B
 328+ 8E9B              ; *************************************************************************************************************************************************************************************************
 329+ 8E9B              ;
 330+ 8E9B              ;	13/8/22
 331+ 8E9B              ;
 332+ 8E9B              ;	Inicializacion
 333+ 8E9B              ;
 334+ 8E9B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E9B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E9B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E9B              ;
 338+ 8E9B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E9B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E9B              ;	_ desaparece/aparece.
 341+ 8E9B
 342+ 8E9B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E9B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E9B              ;
 345+ 8E9B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E9B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E9B              ; 		   [E] ="0"
 348+ 8E9B
 349+ 8E9B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E9B
 351+ 8E9B CD A0 92     Inicializacion call calcula_tercio
 352+ 8E9E 28 36        	jr z,primit
 353+ 8EA0 E6 02        	and 2
 354+ 8EA2 20 07        	jr nz,segmit
 355+ 8EA4 7D           	ld a,l
 356+ 8EA5 FE 7F        	cp $7f
 357+ 8EA7 38 2D        	jr c,primit
 358+ 8EA9 28 2B        	jr z,primit
 359+ 8EAB CD 08 8F     segmit call column
 360+ 8EAE 38 13        	jr c,tercuad
 361+ 8EB0 3E 04        cuarcuad ld a,4
 362+ 8EB2 32 AF 85     	ld (Cuad_objeto),a
 363+ 8EB5 21 20 48     	ld hl,$4820
 364+ 8EB8 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8EBB 21 D5 85     	ld hl,Limite_vertical
 366+ 8EBE 36 0D        	ld (hl),$0d
 367+ 8EC0 08           	ex af,af
 368+ 8EC1 18 3C        	jr 1F
 369+ 8EC3              tercuad
 370+ 8EC3 3E 03        	ld a,3
 371+ 8EC5 32 AF 85     	ld (Cuad_objeto),a
 372+ 8EC8 21 20 48     	ld hl,$4820
 373+ 8ECB 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8ECE 21 D5 85     	ld hl,Limite_vertical
 375+ 8ED1 36 12        	ld (hl),$12
 376+ 8ED3 08           	ex af,af
 377+ 8ED4 18 29        	jr 1F
 378+ 8ED6 CD 08 8F     primit call column
 379+ 8ED9 38 13        	jr c, primcuad
 380+ 8EDB              segcuad
 381+ 8EDB 3E 02        	ld a,2
 382+ 8EDD 32 AF 85     	ld (Cuad_objeto),a
 383+ 8EE0 21 C0 4F     	ld hl,$4fc0
 384+ 8EE3 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8EE6 21 D5 85     	ld hl,Limite_vertical
 386+ 8EE9 36 0D        	ld (hl),$0d
 387+ 8EEB 08           	ex af,af
 388+ 8EEC 18 11        	jr 1F
 389+ 8EEE              primcuad
 390+ 8EEE 3E 01        	ld a,1
 391+ 8EF0 32 AF 85     	ld (Cuad_objeto),a
 392+ 8EF3 21 C0 4F     	ld hl,$4fc0
 393+ 8EF6 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8EF9 21 D5 85     	ld hl,Limite_vertical
 395+ 8EFC 36 12        	ld (hl),$12
 396+ 8EFE 08           	ex af,af
 397+ 8EFF CD CC 95     1 call Genera_coordenadas
 398+ 8F02 21 C9 85     	ld hl,Ctrl_0
 399+ 8F05 CB EE        	set 5,(hl)
 400+ 8F07 C9           	ret
 401+ 8F08
 402+ 8F08              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F08
 404+ 8F08              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F08              ;
 406+ 8F08              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F08
 408+ 8F08 7D           column ld a,l
 409+ 8F09 E6 1F        	and $1f
 410+ 8F0B FE 10         	cp $10
 411+ 8F0D C9            	ret
 412+ 8F0E
 413+ 8F0E              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F0E              ;
 415+ 8F0E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F0E              ;
 417+ 8F0E              ; 14/12/22
 418+ 8F0E              ;
 419+ 8F0E              ;	Modifica: A y BC.
 420+ 8F0E
 421+ 8F0E 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F11 E6 01        	and 1
 423+ 8F13 28 17        	jr z,1F
 424+ 8F15
 425+ 8F15              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8F15
 427+ 8F15 3A A1 85     	ld a,(Coordenada_X)
 428+ 8F18 47           	ld b,a
 429+ 8F19 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8F1A 79           	ld a,c
 431+ 8F1B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8F1C 38 08        	jr c,2F
 433+ 8F1E 47           	ld b,a
 434+ 8F1F 79           	ld a,c
 435+ 8F20 90           	sub b
 436+ 8F21 32 D2 85     	ld (Columnas),a
 437+ 8F24 18 1B        	jr 4F
 438+ 8F26 79           2 ld a,c
 439+ 8F27 32 D2 85     	ld (Columnas),a
 440+ 8F2A 18 15        	jr 4F
 441+ 8F2C
 442+ 8F2C              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8F2C
 444+ 8F2C 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8F2F 81           	add c
 446+ 8F30 3D           	dec a
 447+ 8F31 D6 1F        	sub $1f
 448+ 8F33 38 08        	jr c,3F
 449+ 8F35 47           	ld b,a
 450+ 8F36 79           	ld a,c
 451+ 8F37 90           	sub b
 452+ 8F38 32 D2 85     	ld (Columnas),a
 453+ 8F3B 18 04        	jr 4F
 454+ 8F3D 79           3 ld a,c
 455+ 8F3E 32 D2 85     	ld (Columnas),a
 456+ 8F41 D9           4 exx
 457+ 8F42 4F           	ld c,a
 458+ 8F43 D9           	exx
 459+ 8F44 C9            ret
 460+ 8F45
 461+ 8F45              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8F45              ;
 463+ 8F45              ; 7/1/23
 464+ 8F45              ;
 465+ 8F45              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8F45              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8F45              ;
 468+ 8F45              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8F45              ;	DESTRUYE: HL,B Y A.
 470+ 8F45
 471+ 8F45 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8F48 FE 02        	cp 2
 473+ 8F4A 38 18        	jr c,1F
 474+ 8F4C 28 16        	jr z,1F
 475+ 8F4E E6 01        	and 1
 476+ 8F50 28 0D        	jr z,3F
 477+ 8F52
 478+ 8F52              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8F52
 480+ 8F52 CD 8E 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8F55
 482+ 8F55 7D           9 ld a,l
 483+ 8F56 E6 1F        	and $1f
 484+ 8F58 28 2A        	jr z,7F
 485+ 8F5A 2B           	dec hl
 486+ 8F5B 10 F8        	djnz 9B
 487+ 8F5D 18 25        	jr 7F
 488+ 8F5F
 489+ 8F5F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8F5F
 491+ 8F5F 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8F62 18 20        	jr 7F
 493+ 8F64
 494+ 8F64 28 14        1 jr z,2F
 495+ 8F66
 496+ 8F66              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8F66
 498+ 8F66 CD 8E 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8F69 7D           4 ld a,l
 500+ 8F6A E6 1F        	and $1f
 501+ 8F6C 28 03        	jr z,6F
 502+ 8F6E 2B           	dec hl
 503+ 8F6F 10 F8        	djnz 4B
 504+ 8F71 06 0F        6 ld b,15
 505+ 8F73 CD EF 8F     5 call PreviousScan
 506+ 8F76 10 FB        	djnz 5B
 507+ 8F78 18 0A        	jr 7F
 508+ 8F7A
 509+ 8F7A              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8F7A
 511+ 8F7A CD 8E 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8F7D 06 0F        	ld b,15
 513+ 8F7F CD EF 8F     8 call PreviousScan
 514+ 8F82 10 FB        	djnz 8B
 515+ 8F84
 516+ 8F84 E5           7 push hl
 517+ 8F85 DD E1        	pop ix
 518+ 8F87
 519+ 8F87 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F8A E5           	push hl
 521+ 8F8B FD E1        	pop iy
 522+ 8F8D
 523+ 8F8D C9           	ret
 524+ 8F8E
 525+ 8F8E              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F8E              ;
 527+ 8F8E              ;	2/1/23
 528+ 8F8E              ;
 529+ 8F8E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F8E              ;
 531+ 8F8E              ;	Tras esta rutina tenemos:
 532+ 8F8E              ;
 533+ 8F8E              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F8E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F8E              ;
 536+ 8F8E              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F8E
 538+ 8F8E 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F91 3A D2 85     	ld a,(Columnas)
 540+ 8F94 3D           	dec a
 541+ 8F95 20 01        	jr nz,1F
 542+ 8F97 3C           	inc a
 543+ 8F98 47           1 ld b,a
 544+ 8F99 C9           	ret
 545+ 8F9A
 546+ 8F9A              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F9A              ;
 548+ 8F9A              ;	3/1/23
 549+ 8F9A              ;
 550+ 8F9A              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F9A              ;
 552+ 8F9A              ;	Destruye: A,B,HL y DE.
 553+ 8F9A
 554+ 8F9A              Define_rutina_de_impresion
 555+ 8F9A
 556+ 8F9A 3A 9C 85     	ld a,(Columns)
 557+ 8F9D 47           	ld b,a
 558+ 8F9E 3A D2 85     	ld a,(Columnas)
 559+ 8FA1 B8           	cp b
 560+ 8FA2 20 0D        	jr nz,2f
 561+ 8FA4
 562+ 8FA4              ;	La entidad se imprime entera.
 563+ 8FA4
 564+ 8FA4 21 70 90     	ld hl, Indice_entidades_completas
 565+ 8FA7 E6 01        	and 1
 566+ 8FA9 28 02        	jr z,1F
 567+ 8FAB
 568+ 8FAB 23           	inc hl
 569+ 8FAC 23           	inc hl
 570+ 8FAD
 571+ 8FAD CD CD 87     1 call Extrae_address
 572+ 8FB0 C9           	ret		;	ret
 573+ 8FB1
 574+ 8FB1              ;	La entidad no se imprime entera en pantalla.
 575+ 8FB1
 576+ 8FB1 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8FB4 E6 01        	and 1
 578+ 8FB6 28 17        	jr z,3F
 579+ 8FB8
 580+ 8FB8              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8FB8
 582+ 8FB8 21 74 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8FBB 3A 9C 85     4 ld a,(Columns)
 584+ 8FBE E6 01        	and 1
 585+ 8FC0 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8FC2
 587+ 8FC2 23           	inc hl
 588+ 8FC3 23           	inc hl
 589+ 8FC4
 590+ 8FC4 3A D2 85     	ld a,(Columnas)
 591+ 8FC7 E6 01        	and 1
 592+ 8FC9 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8FCB
 594+ 8FCB 23           	inc hl
 595+ 8FCC 23           	inc hl
 596+ 8FCD
 597+ 8FCD 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8FCF
 599+ 8FCF 21 7A 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8FD2 18 E7        	jr 4B
 601+ 8FD4
 602+ 8FD4              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8FD4              ;
 604+ 8FD4              ;	Prepara_draw
 605+ 8FD4              ;
 606+ 8FD4              ;	Es una rutina de carga.
 607+ 8FD4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8FD4              ;
 609+ 8FD4              ;	FUNCIONAMIENTO:
 610+ 8FD4              ;
 611+ 8FD4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8FD4              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8FD4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8FD4              ;
 615+ 8FD4              ;	DESTRUYE:
 616+ 8FD4              ;
 617+ 8FD4              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8FD4
 619+ 8FD4 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8FD7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8FD8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8FD9 4E           	ld c,(hl)
 623+ 8FDA 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8FDD 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8FDF C9           	ret
 626+ 8FE0
 627+ 8FE0              ;----------------------------------------------------------------------------------------------------------------
 628+ 8FE0              ;
 629+ 8FE0              ;	5/08/22
 630+ 8FE0              ;
 631+ 8FE0              ;   NextScan.
 632+ 8FE0              ;
 633+ 8FE0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8FE0              ;
 635+ 8FE0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8FE0              ;
 637+ 8FE0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8FE0              ;
 639+ 8FE0              ;       DESTRUIDOS: AF y HL !!!
 640+ 8FE0              ;
 641+ 8FE0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8FE0              ;
 643+ 8FE0
 644+ 8FE0 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8FE1 7C               ld a,h
 646+ 8FE2 E6 07            and 7
 647+ 8FE4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8FE5
 649+ 8FE5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8FE6 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8FE8 6F               ld l,a
 652+ 8FE9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8FEA
 654+ 8FEA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8FEB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8FED 67               ld h,a
 657+ 8FEE C9               ret
 658+ 8FEF
 659+ 8FEF              ;----------------------------------------------------------------------------------------------------------------
 660+ 8FEF              ;
 661+ 8FEF              ;	5/08/22
 662+ 8FEF              ;
 663+ 8FEF              ;   PreviousScan.
 664+ 8FEF              ;
 665+ 8FEF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8FEF              ;
 667+ 8FEF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8FEF              ;
 669+ 8FEF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8FEF              ;
 671+ 8FEF              ;       DESTRUIDOS: AF y HL !!!
 672+ 8FEF              ;
 673+ 8FEF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8FEF              ;
 675+ 8FEF
 676+ 8FEF 7C           PreviousScan ld a,h
 677+ 8FF0 25               dec h               ; Dec H.
 678+ 8FF1 E6 07            and 7
 679+ 8FF3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8FF4
 681+ 8FF4 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8FF5 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8FF7 6F               ld l,a
 684+ 8FF8 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8FF9
 686+ 8FF9 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8FFA C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8FFC 67               ld h,a
 689+ 8FFD C9               ret
 690+ 8FFE
 691+ 8FFE              ; -----------------------------------------------------------------------------------
 692+ 8FFE              ;
 693+ 8FFE              ;	28/2/23
 694+ 8FFE              ;
 695+ 8FFE              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8FFE              ;	Extrae fotos de Album_de_fotos.
 697+ 8FFE
 698+ 8FFE 3A DE 85     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 9001 A7           	and a
 700+ 9002 C8           	ret z
 701+ 9003 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 9007 31 00 70     	ld sp,Album_de_fotos
 703+ 900A
 704+ 900A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 900C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 900D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 900E
 708+ 900E ED 73 E1 85  	ld (Stack_2),sp
 709+ 9012 ED 7B DF 85  	ld sp,(Stack)
 710+ 9016
 711+ 9016              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 9016
 713+ 9016 3E CD        	ld a,$cd
 714+ 9018 32 20 90     	ld (Imprime),a
 715+ 901B EB           	ex de,hl
 716+ 901C 22 21 90     	ld (Imprime+1),hl
 717+ 901F EB           	ex de,hl
 718+ 9020
 719+ 9020              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 9020
 721+ 9020 00 00 00     Imprime db 0,0,0
 722+ 9023
 723+ 9023 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 9026 3D           	dec a
 725+ 9027 28 09        	jr z,1F
 726+ 9029 32 DE 85      	ld (Numero_de_malotes),a
 727+ 902C
 728+ 902C ED 7B E1 85   	ld sp,(Stack_2)
 729+ 9030 18 D8        	jr 2B
 730+ 9032
 731+ 9032 AF           1 xor a
 732+ 9033 32 E1 85     	ld (Stack_2),a
 733+ 9036 C9           	ret
 734+ 9037
 735+ 9037              ; -----------------------------------------------------------------------------------
 736+ 9037              ;
 737+ 9037              ;	28/2/23
 738+ 9037              ;
 739+ 9037              ;	Pinta los disparos generados.
 740+ 9037
 741+ 9037              Extrae_foto_disparos
 742+ 9037
 743+ 9037 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 903A A7           	and a
 745+ 903B C8           	ret z
 746+ 903C ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9040 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 9043
 749+ 9043 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9045 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9046 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9047
 753+ 9047 ED 73 E1 85  	ld (Stack_2),sp
 754+ 904B ED 7B DF 85  	ld sp,(Stack)
 755+ 904F
 756+ 904F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 904F
 758+ 904F 3E CD        	ld a,$cd
 759+ 9051 32 59 90     	ld (Imprime2),a
 760+ 9054 EB           	ex de,hl
 761+ 9055 22 5A 90     	ld (Imprime2+1),hl
 762+ 9058 EB           	ex de,hl
 763+ 9059
 764+ 9059              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9059
 766+ 9059 00 00 00     Imprime2 db 0,0,0
 767+ 905C
 768+ 905C 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 905F 3D           	dec a
 770+ 9060 28 09        	jr z,1F
 771+ 9062 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 9065
 773+ 9065 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 9069 18 D8        	jr 2B
 775+ 906B
 776+ 906B AF           1 xor a
 777+ 906C 32 E1 85     	ld (Stack_2),a
 778+ 906F C9           	ret
 779+ 9070
# file closed: Draw_XOR.asm
 941  9070              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9070              ;   índices de Rutinas de impresión.
   2+ 9070
   3+ 9070 80 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9072 AD 90            defw Pinta_Amadeus_3x2
   5+ 9074
   6+ 9074 03 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9076 A3 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9078 57 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 907A
  10+ 907A 2D 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 907C 31 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 907E E5 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9080
  14+ 9080
  15+ 9080              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9080              ;
  17+ 9080              ;   12/12/22
  18+ 9080              ;
  19+ 9080              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9080              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9080              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9080              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9080              ;
  24+ 9080              ;   Modifica: DE y HL.
  25+ 9080
  26+ 9080 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9084 FD F9        	ld sp,iy
  28+ 9086 06 10            ld b,16
  29+ 9088 D1           1 pop de
  30+ 9089 7B               ld a,e
  31+ 908A AE               xor (hl)
  32+ 908B 77           	ld (hl),a
  33+ 908C 23           	inc hl
  34+ 908D 7A               ld a,d
  35+ 908E AE               xor (hl)
  36+ 908F 77           	ld (hl),a
  37+ 9090 2B           	dec hl
  38+ 9091 24           	inc h
  39+ 9092 7C               ld a,h
  40+ 9093 E6 07            and 7
  41+ 9095 20 0A            jr nz,2F
  42+ 9097 7D               ld a,l
  43+ 9098 C6 20            add a,$20
  44+ 909A 6F               ld l,a
  45+ 909B 38 04            jr c,2F
  46+ 909D 7C               ld a,h
  47+ 909E D6 08            sub 8
  48+ 90A0 67               ld h,a
  49+ 90A1 7C           2 ld a,h
  50+ 90A2 FE 58            cp $58
  51+ 90A4 28 02            jr z,3F
  52+ 90A6 10 E0            djnz 1B
  53+ 90A8 ED 7B DF 85  3 ld sp,(Stack)
  54+ 90AC C9           	ret
  55+ 90AD
  56+ 90AD ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 90B1 FD F9        	ld sp,iy
  58+ 90B3 06 08            ld b,8
  59+ 90B5 D1           1 pop de
  60+ 90B6 7B               ld a,e
  61+ 90B7 AE               xor (hl)
  62+ 90B8 77           	ld (hl),a
  63+ 90B9 23           	inc hl
  64+ 90BA 7A               ld a,d
  65+ 90BB AE               xor (hl)
  66+ 90BC 77           	ld (hl),a
  67+ 90BD 23           	inc hl
  68+ 90BE D1           	pop de
  69+ 90BF 7B               ld a,e
  70+ 90C0 AE               xor (hl)
  71+ 90C1 77           	ld (hl),a
  72+ 90C2 2B           	dec hl
  73+ 90C3 2B           	dec hl
  74+ 90C4 24           	inc h
  75+ 90C5 7C               ld a,h
  76+ 90C6 E6 07            and 7
  77+ 90C8 20 0A            jr nz,2F
  78+ 90CA 7D               ld a,l
  79+ 90CB C6 20            add a,$20
  80+ 90CD 6F               ld l,a
  81+ 90CE 38 04            jr c,2F
  82+ 90D0 7C               ld a,h
  83+ 90D1 D6 08            sub 8
  84+ 90D3 67               ld h,a
  85+ 90D4 7C           2 ld a,h
  86+ 90D5 FE 58            cp $58
  87+ 90D7 28 25            jr z,4F
  88+ 90D9 7A               ld a,d
  89+ 90DA AE               xor (hl)
  90+ 90DB 77               ld (hl),a
  91+ 90DC D1           	pop de
  92+ 90DD 23           	inc hl
  93+ 90DE 7B               ld a,e
  94+ 90DF AE               xor (hl)
  95+ 90E0 77           	ld (hl),a
  96+ 90E1 23           	inc hl
  97+ 90E2 7A               ld a,d
  98+ 90E3 AE               xor (hl)
  99+ 90E4 77           	ld (hl),a
 100+ 90E5 2B           	dec hl
 101+ 90E6 2B           	dec hl
 102+ 90E7 24           	inc h
 103+ 90E8 7C               ld a,h
 104+ 90E9 E6 07            and 7
 105+ 90EB 20 0A            jr nz,3F
 106+ 90ED 7D               ld a,l
 107+ 90EE C6 20            add a,$20
 108+ 90F0 6F               ld l,a
 109+ 90F1 38 04            jr c,3F
 110+ 90F3 7C               ld a,h
 111+ 90F4 D6 08            sub 8
 112+ 90F6 67               ld h,a
 113+ 90F7 7C           3 ld a,h
 114+ 90F8 FE 58            cp $58
 115+ 90FA 28 02            jr z,4F
 116+ 90FC 10 B7            djnz 1B
 117+ 90FE ED 7B DF 85  4 ld sp,(Stack)
 118+ 9102 C9           	ret
 119+ 9103
 120+ 9103              ; ---------------------------------------------------
 121+ 9103
 122+ 9103 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9107 FD F9        	ld sp,iy
 124+ 9109
 125+ 9109              ; >>>
 126+ 9109
 127+ 9109 06 10            ld b,16
 128+ 910B D1           1 pop de
 129+ 910C 7A           	ld a,d
 130+ 910D AE           	xor (hl)
 131+ 910E 77           	ld (hl),a
 132+ 910F 24           	inc h
 133+ 9110 7C               ld a,h
 134+ 9111 E6 07            and 7
 135+ 9113 20 0C            jr nz,2F
 136+ 9115 7D               ld a,l
 137+ 9116 C6 20            add a,$20
 138+ 9118 6F               ld l,a
 139+ 9119 38 06            jr c,2F
 140+ 911B 7C               ld a,h
 141+ 911C D6 08            sub 8
 142+ 911E 67               ld h,a
 143+ 911F 18 00            jr 2F
 144+ 9121 7C           2 ld a,h
 145+ 9122 FE 58            cp $58
 146+ 9124 28 02            jr z,3F
 147+ 9126 10 E3            djnz 1B
 148+ 9128 ED 7B DF 85  3 ld sp,(Stack)
 149+ 912C C9           	ret
 150+ 912D
 151+ 912D ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9131 FD F9        	ld sp,iy
 153+ 9133
 154+ 9133              ; >>>
 155+ 9133
 156+ 9133 06 10            ld b,16
 157+ 9135 D1           1 pop de
 158+ 9136 7B           	ld a,e
 159+ 9137 AE           	xor (hl)
 160+ 9138 77           	ld (hl),a
 161+ 9139 24           	inc h
 162+ 913A 7C               ld a,h
 163+ 913B E6 07            and 7
 164+ 913D 20 0C            jr nz,2F
 165+ 913F 7D               ld a,l
 166+ 9140 C6 20            add a,$20
 167+ 9142 6F               ld l,a
 168+ 9143 38 06            jr c,2F
 169+ 9145 7C               ld a,h
 170+ 9146 D6 08            sub 8
 171+ 9148 67               ld h,a
 172+ 9149 18 00            jr 2F
 173+ 914B 7C           2 ld a,h
 174+ 914C FE 58            cp $58
 175+ 914E 28 02            jr z,3F
 176+ 9150 10 E3            djnz 1B
 177+ 9152 ED 7B DF 85  3 ld sp,(Stack)
 178+ 9156 C9           	ret
 179+ 9157
 180+ 9157              ; ---------------------------------------------------
 181+ 9157
 182+ 9157 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 915B FD F9        	ld sp,iy
 184+ 915D 06 08            ld b,8
 185+ 915F D1           1 pop de
 186+ 9160 7A           	ld a,d
 187+ 9161 AE           	xor (hl)
 188+ 9162 77           	ld (hl),a
 189+ 9163 23           	inc hl
 190+ 9164 D1           	pop de
 191+ 9165 7B           	ld a,e
 192+ 9166 AE           	xor (hl)
 193+ 9167 77           	ld (hl),a
 194+ 9168 2B           	dec hl
 195+ 9169 24            	inc h
 196+ 916A 7C               ld a,h
 197+ 916B E6 07            and 7
 198+ 916D 20 0A            jr nz,2F
 199+ 916F 7D               ld a,l
 200+ 9170 C6 20            add a,$20
 201+ 9172 6F               ld l,a
 202+ 9173 38 04            jr c,2F
 203+ 9175 7C               ld a,h
 204+ 9176 D6 08            sub 8
 205+ 9178 67               ld h,a
 206+ 9179 7C           2 ld a,h
 207+ 917A FE 58            cp $58
 208+ 917C 28 20            jr z,4F
 209+ 917E D1               pop de
 210+ 917F 7B           	ld a,e
 211+ 9180 AE           	xor (hl)
 212+ 9181 77           	ld (hl),a
 213+ 9182 23           	inc hl
 214+ 9183 7A           	ld a,d
 215+ 9184 AE           	xor (hl)
 216+ 9185 77           	ld (hl),a
 217+ 9186 2B           	dec hl
 218+ 9187 24           	inc h
 219+ 9188 7C               ld a,h
 220+ 9189 E6 07            and 7
 221+ 918B 20 0A            jr nz,3F
 222+ 918D 7D               ld a,l
 223+ 918E C6 20            add a,$20
 224+ 9190 6F               ld l,a
 225+ 9191 38 04            jr c,3F
 226+ 9193 7C               ld a,h
 227+ 9194 D6 08            sub 8
 228+ 9196 67               ld h,a
 229+ 9197 7C           3 ld a,h
 230+ 9198 FE 58            cp $58
 231+ 919A 28 02            jr z,4F
 232+ 919C 10 C1            djnz 1B
 233+ 919E ED 7B DF 85  4 ld sp,(Stack)
 234+ 91A2 C9           	ret
 235+ 91A3
 236+ 91A3 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 91A7 FD F9        	ld sp,iy
 238+ 91A9 06 08            ld b,8
 239+ 91AB D1           1 pop de
 240+ 91AC D1           	pop de
 241+ 91AD 7B           	ld a,e
 242+ 91AE AE           	xor (hl)
 243+ 91AF 77           	ld (hl),a
 244+ 91B0 24            	inc h
 245+ 91B1 7C               ld a,h
 246+ 91B2 E6 07            and 7
 247+ 91B4 20 0A            jr nz,2F
 248+ 91B6 7D               ld a,l
 249+ 91B7 C6 20            add a,$20
 250+ 91B9 6F               ld l,a
 251+ 91BA 38 04            jr c,2F
 252+ 91BC 7C               ld a,h
 253+ 91BD D6 08            sub 8
 254+ 91BF 67               ld h,a
 255+ 91C0 7C           2 ld a,h
 256+ 91C1 FE 58            cp $58
 257+ 91C3 28 1B            jr z,4F
 258+ 91C5 D1               pop de
 259+ 91C6 7A           	ld a,d
 260+ 91C7 AE           	xor (hl)
 261+ 91C8 77           	ld (hl),a
 262+ 91C9 24           	inc h
 263+ 91CA 7C               ld a,h
 264+ 91CB E6 07            and 7
 265+ 91CD 20 0A            jr nz,3F
 266+ 91CF 7D               ld a,l
 267+ 91D0 C6 20            add a,$20
 268+ 91D2 6F               ld l,a
 269+ 91D3 38 04            jr c,3F
 270+ 91D5 7C               ld a,h
 271+ 91D6 D6 08            sub 8
 272+ 91D8 67               ld h,a
 273+ 91D9 7C           3 ld a,h
 274+ 91DA FE 58            cp $58
 275+ 91DC 28 02            jr z,4F
 276+ 91DE 10 CB            djnz 1B
 277+ 91E0 ED 7B DF 85  4 ld sp,(Stack)
 278+ 91E4 C9           	ret
 279+ 91E5
 280+ 91E5 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 91E9 FD F9        	ld sp,iy
 282+ 91EB 06 08            ld b,8
 283+ 91ED D1           1 pop de
 284+ 91EE 7B           	ld a,e
 285+ 91EF AE           	xor (hl)
 286+ 91F0 77           	ld (hl),a
 287+ 91F1 23           	inc hl
 288+ 91F2 7A           	ld a,d
 289+ 91F3 AE           	xor (hl)
 290+ 91F4 77           	ld (hl),a
 291+ 91F5 2B           	dec hl
 292+ 91F6 24             	inc h
 293+ 91F7 7C               ld a,h
 294+ 91F8 E6 07            and 7
 295+ 91FA 20 0A            jr nz,2F
 296+ 91FC 7D               ld a,l
 297+ 91FD C6 20            add a,$20
 298+ 91FF 6F               ld l,a
 299+ 9200 38 04            jr c,2F
 300+ 9202 7C               ld a,h
 301+ 9203 D6 08            sub 8
 302+ 9205 67               ld h,a
 303+ 9206 7C           2 ld a,h
 304+ 9207 FE 58            cp $58
 305+ 9209 28 21            jr z,4F
 306+ 920B D1               pop de
 307+ 920C 7A           	ld a,d
 308+ 920D AE           	xor (hl)
 309+ 920E 77           	ld (hl),a
 310+ 920F 23           	inc hl
 311+ 9210 D1               pop de
 312+ 9211 7B           	ld a,e
 313+ 9212 AE           	xor (hl)
 314+ 9213 77           	ld (hl),a
 315+ 9214 2B           	dec hl
 316+ 9215 24           	inc h
 317+ 9216 7C               ld a,h
 318+ 9217 E6 07            and 7
 319+ 9219 20 0A            jr nz,3F
 320+ 921B 7D               ld a,l
 321+ 921C C6 20            add a,$20
 322+ 921E 6F               ld l,a
 323+ 921F 38 04            jr c,3F
 324+ 9221 7C               ld a,h
 325+ 9222 D6 08            sub 8
 326+ 9224 67               ld h,a
 327+ 9225 7C           3 ld a,h
 328+ 9226 FE 58            cp $58
 329+ 9228 28 02            jr z,4F
 330+ 922A 10 C1            djnz 1B
 331+ 922C ED 7B DF 85  4 ld sp,(Stack)
 332+ 9230 C9           	ret
 333+ 9231
 334+ 9231 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9235 FD F9        	ld sp,iy
 336+ 9237 06 08            ld b,8
 337+ 9239 D1           1 pop de
 338+ 923A 7B           	ld a,e
 339+ 923B AE           	xor (hl)
 340+ 923C 77           	ld (hl),a
 341+ 923D 24            	inc h
 342+ 923E 7C               ld a,h
 343+ 923F E6 07            and 7
 344+ 9241 20 0A            jr nz,2F
 345+ 9243 7D               ld a,l
 346+ 9244 C6 20            add a,$20
 347+ 9246 6F               ld l,a
 348+ 9247 38 04            jr c,2F
 349+ 9249 7C               ld a,h
 350+ 924A D6 08            sub 8
 351+ 924C 67               ld h,a
 352+ 924D 7C           2 ld a,h
 353+ 924E FE 58            cp $58
 354+ 9250 28 1C            jr z,4F
 355+ 9252 D1               pop de
 356+ 9253 7A           	ld a,d
 357+ 9254 AE           	xor (hl)
 358+ 9255 77           	ld (hl),a
 359+ 9256 24           	inc h
 360+ 9257 7C               ld a,h
 361+ 9258 E6 07            and 7
 362+ 925A 20 0A            jr nz,3F
 363+ 925C 7D               ld a,l
 364+ 925D C6 20            add a,$20
 365+ 925F 6F               ld l,a
 366+ 9260 38 04            jr c,3F
 367+ 9262 7C               ld a,h
 368+ 9263 D6 08            sub 8
 369+ 9265 67               ld h,a
 370+ 9266 7C           3 ld a,h
 371+ 9267 FE 58            cp $58
 372+ 9269 28 03            jr z,4F
 373+ 926B D1               pop de
 374+ 926C 10 CB            djnz 1B
 375+ 926E ED 7B DF 85  4 ld sp,(Stack)
 376+ 9272 C9           	ret
 377+ 9273
 378+ 9273              ; ---------------------------------------------------
 379+ 9273              ;
 380+ 9273              ;   27/02/23
 381+ 9273              ;
 382+ 9273              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9273              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9273              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9273
 386+ 9273 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 9277 FD F9            ld sp,iy
 388+ 9279 06 02            ld b,2
 389+ 927B D1           1 pop de
 390+ 927C 7B               ld a,e
 391+ 927D AE               xor (hl)
 392+ 927E 77               ld (hl),a
 393+ 927F 23               inc hl
 394+ 9280 7A               ld a,d
 395+ 9281 AE               xor (hl)
 396+ 9282 77               ld (hl),a
 397+ 9283 2B               dec hl
 398+ 9284
 399+ 9284 24               inc h
 400+ 9285 7C               ld a,h
 401+ 9286 E6 07            and 7
 402+ 9288 20 0A            jr nz,2F
 403+ 928A 7D               ld a,l
 404+ 928B C6 20            add a,$20
 405+ 928D 6F               ld l,a
 406+ 928E 38 04            jr c,2F
 407+ 9290 7C               ld a,h
 408+ 9291 D6 08            sub 8
 409+ 9293 67               ld h,a
 410+ 9294 7C           2 ld a,h
 411+ 9295 FE 58            cp $58
 412+ 9297 28 02            jr z,3F
 413+ 9299
 414+ 9299 10 E0            djnz 1B
 415+ 929B ED 7B DF 85  3 ld sp,(Stack)
 416+ 929F C9               ret
 417+ 92A0
# file closed: Rutinas_de_impresion_sprites.asm
 942  92A0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 92A0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 92A0              ;
   3+ 92A0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 92A0              ;
   5+ 92A0              ; *****************************************************************************************************************************************************************************************
   6+ 92A0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 92A0
   8+ 92A0 7C           calcula_tercio ld a,h
   9+ 92A1 E6 18        	and $18
  10+ 92A3 CB 2F        	sra a
  11+ 92A5 CB 2F        	sra a
  12+ 92A7 CB 2F        	sra a
  13+ 92A9 C9           	ret
  14+ 92AA
# file closed: calcula_tercio.asm
 943  92AA              	include "Cls.asm"
# file opened: Cls.asm
   1+ 92AA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 92AA              ;
   3+ 92AA              ;
   4+ 92AA              ;	CLS.
   5+ 92AA              ;
   6+ 92AA              ;	Limpia la pantalla y define sus atributos.
   7+ 92AA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 92AA              ;
   9+ 92AA              ;	COLORES: 0 ..... NEGRO
  10+ 92AA              ;    		 1 ..... AZUL
  11+ 92AA              ; 			 2 ..... ROJO
  12+ 92AA              ;			 3 ..... MAGENTA
  13+ 92AA              ; 			 4 ..... VERDE
  14+ 92AA              ; 			 5 ..... CIAN
  15+ 92AA              ;			 6 ..... AMARILLO
  16+ 92AA              ; 			 7 ..... BLANCO
  17+ 92AA              ;
  18+ 92AA              ;	INPUT: A contiene los atributos de pantalla.
  19+ 92AA              ;
  20+ 92AA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 92AA
  22+ 92AA
  23+ 92AA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 92AD 11 01 40     	LD DE,$4001
  25+ 92B0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 92B3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 92B5 ED B0        	LDIR
  28+ 92B7 01 FF 02     	LD BC,767
  29+ 92BA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 92BB ED B0        	LDIR
  31+ 92BD C9           	ret
  32+ 92BE
# file closed: Cls.asm
 944  92BE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 92BE              ; ******************************************************************************************************************************************************************************************
   2+ 92BE              ;
   3+ 92BE              ;   22/01/23
   4+ 92BE              ;
   5+ 92BE              ;	Mov_down
   6+ 92BE              ;
   7+ 92BE              ; 	Mueve el Sprite X px hacia abajo.
   8+ 92BE              ;
   9+ 92BE              ;
  10+ 92BE 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 92C1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 92C3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 92C3              ; 																	; _ en el caso de que no lo haya.
  14+ 92C3 3A B3 85     	ld a,(Vel_down)
  15+ 92C6 47           	ld b,a
  16+ 92C7 2A 9D 85         ld hl,(Posicion_actual)
  17+ 92CA CD A0 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 92CD E6 02        	and 2
  19+ 92CF 28 0F        	jr z,1F
  20+ 92D1
  21+ 92D1              ; Nos encontramos en el último tercio de pantalla.
  22+ 92D1              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 92D1
  24+ 92D1 7C           	ld a,h
  25+ 92D2 FE 57        	cp $57
  26+ 92D4 20 0A        	jr nz,1F
  27+ 92D6 7D           	ld a,l
  28+ 92D7 C6 20        	add $20
  29+ 92D9 30 05        	jr nc,1F
  30+ 92DB
  31+ 92DB              ; ------------------------------
  32+ 92DB CD B6 95     	call Reaparece_arriba
  33+ 92DE              ;	call Reinicio
  34+ 92DE              ; ------------------------------
  35+ 92DE
  36+ 92DE 18 08        	jr 3F
  37+ 92E0 CD E0 8F     1 call NextScan
  38+ 92E3 22 9D 85     	ld (Posicion_actual),hl
  39+ 92E6 10 E2            djnz 2B
  40+ 92E8 CD CC 95     3 call Genera_coordenadas
  41+ 92EB C9           	ret
  42+ 92EC
  43+ 92EC              ; ******************************************************************************************************************************************************************************************
  44+ 92EC              ;
  45+ 92EC              ;   22/01/23
  46+ 92EC              ;
  47+ 92EC              ;	Mov_up
  48+ 92EC              ;
  49+ 92EC              ; 	Mueve el Sprite hacia arriba.
  50+ 92EC              ;
  51+ 92EC              ;
  52+ 92EC 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 92EF CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 92F1              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 92F1              ; 																		; _ en el caso de que no lo haya.
  56+ 92F1 3A B2 85     	ld a,(Vel_up)
  57+ 92F4 47           	ld b,a
  58+ 92F5 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 92F8 CD A0 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 92FB A7           	and a
  61+ 92FC 20 10        	jr nz,1F
  62+ 92FE
  63+ 92FE              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 92FE              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 92FE
  66+ 92FE 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 92FF FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9301 20 0B            jr nz,1F
  69+ 9303 7D               ld a,l
  70+ 9304 D6 20            sub $20
  71+ 9306 30 06            jr nc,1F
  72+ 9308 25               dec h
  73+ 9309
  74+ 9309              ; -----------------------------
  75+ 9309 CD A6 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 930C              ;	call Reinicio
  77+ 930C              ; -----------------------------
  78+ 930C
  79+ 930C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 930E CD EF 8F     1 call PreviousScan
  81+ 9311 22 9D 85     	ld (Posicion_actual),hl
  82+ 9314 10 E2            djnz 3B
  83+ 9316 CD CC 95     2 call Genera_coordenadas
  84+ 9319 C9           	ret
  85+ 931A
  86+ 931A              ; ******************************************************************************************************************************************************************************************
  87+ 931A              ;
  88+ 931A              ;	19/10/22
  89+ 931A              ;
  90+ 931A              ;	Mov_right.
  91+ 931A              ;
  92+ 931A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 931A              ;
  94+ 931A
  95+ 931A 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 931D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 931F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 931F              ; 																	; _ en el caso de que no lo haya.
  99+ 931F 3A C9 85     	ld a,(Ctrl_0)
 100+ 9322 CB 77        	bit 6,a
 101+ 9324 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9326
 103+ 9326 CD 54 95     	call Stop_Amadeus_right
 104+ 9329 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 932A 18 4D        	jr 8F
 106+ 932C
 107+ 932C 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 932F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9331 20 46        	jr nz,8F
 110+ 9333
 111+ 9333 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9336 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9337 28 40        	jr z,8F
 114+ 9339
 115+ 9339              ; ---------- ---------- ----------
 116+ 9339              ;
 117+ 9339              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9339
 119+ 9339 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 933C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 933E 28 11        	jr z,1F
 122+ 9340 38 06        	jr c,6F
 123+ 9342 FE 04        	cp 4
 124+ 9344 28 14        	jr z,7F
 125+ 9346 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9348
 127+ 9348              ; ---------- ---------- ----------
 128+ 9348              ;
 129+ 9348              ; Perfiles de velocidad
 130+ 9348              ;
 131+ 9348
 132+ 9348 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 934B FE FE        	cp $fe
 134+ 934D 20 2A        	jr nz,8F
 135+ 934F 18 10        	jr 3F
 136+ 9351 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9354 FE FD        	cp $fd
 138+ 9356 20 21        	jr nz,8F
 139+ 9358 18 07        	jr 3F
 140+ 935A 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 935D FE FB        	cp $fb
 142+ 935F 20 18        	jr nz,8F
 143+ 9361
 144+ 9361              ; ---------- ---------- ----------
 145+ 9361
 146+ 9361              3
 147+ 9361 CD 94 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9364              ;	call Reinicio
 149+ 9364
 150+ 9364              ; ---------- ---------- ----------
 151+ 9364              ;
 152+ 9364              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9364
 154+ 9364 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9366 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9367 CD 80 93     	call DESPLZ_DER
 157+ 936A C1           	pop bc
 158+ 936B 10 F9        	djnz 5B
 159+ 936D 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9370 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9371 22 9D 85     	ld (Posicion_actual),hl
 162+ 9374 CD CC 95     	call Genera_coordenadas
 163+ 9377 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9379
 165+ 9379              ; ---------- ---------- ----------
 166+ 9379
 167+ 9379 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 937C CD 80 93     	call DESPLZ_DER
 169+ 937F C9           2 ret
 170+ 9380
 171+ 9380              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9380              ;
 173+ 9380              ;	22/9/22
 174+ 9380              ;
 175+ 9380
 176+ 9380 CD 8F 93     DESPLZ_DER call Desplaza_derecha
 177+ 9383 CD DB 93         call modifica_parametros_1er_DESPLZ_2
 178+ 9386 CD 04 94         call Ciclo_completo
 179+ 9389 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 938C CB FE        	set 7,(hl)
 181+ 938E C9           	ret
 182+ 938F
 183+ 938F              ; ******************************************************************************************************************************************************************************************
 184+ 938F              ;	15/02/23
 185+ 938F              ;
 186+ 938F
 187+ 938F 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9392 47           	ld b,a
 189+ 9393 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9396 23           1 inc hl
 191+ 9397 23           	inc hl
 192+ 9398 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 939A 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 939D CD CD 87     	call Extrae_address
 195+ 93A0 22 9F 85     	ld (Puntero_objeto),hl
 196+ 93A3
 197+ 93A3              ; Modifica (Puntero_DESPLZ_izq).
 198+ 93A3
 199+ 93A3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 93A3              ; Cuántos movimientos hemos hecho ??
 201+ 93A3              ; DE contiene (Puntero_DESPLZ_der).
 202+ 93A3
 203+ 93A3 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 93A6 EB           	ex de,hl
 205+ 93A7 A7           	and a
 206+ 93A8 ED 52        	sbc hl,de
 207+ 93AA CB 3D        	srl l
 208+ 93AC 3E 08        6 ld a,8
 209+ 93AE 95           	sub l
 210+ 93AF 30 1E        	jr nc,3F
 211+ 93B1
 212+ 93B1              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 93B1              ; B="0".
 214+ 93B1
 215+ 93B1 04           4 inc b
 216+ 93B2 3C           	inc a
 217+ 93B3 20 FC        	jr nz,4B
 218+ 93B5 78           	ld a,b
 219+ 93B6 08           	ex af,af
 220+ 93B7 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 93BA 23           5 inc hl
 222+ 93BB 23           	inc hl
 223+ 93BC 10 FC        	djnz 5B
 224+ 93BE 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 93C1 CD CD 87     	call Extrae_address
 226+ 93C4 22 9F 85     	ld (Puntero_objeto),hl
 227+ 93C7
 228+ 93C7              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 93C7              ; _(Posicion_actual).
 230+ 93C7
 231+ 93C7 21 9D 85     	ld hl,Posicion_actual
 232+ 93CA 34           	inc (hl)
 233+ 93CB 08               ex af,af
 234+ 93CC 6F           	ld l,a
 235+ 93CD 18 DD        	jr 6B
 236+ 93CF
 237+ 93CF              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 93CF
 239+ 93CF 47           3 ld b,a
 240+ 93D0 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 93D3 23           2 inc hl
 242+ 93D4 23           	inc hl
 243+ 93D5 10 FC        	djnz 2B
 244+ 93D7 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 93DA C9           8 ret
 246+ 93DB
 247+ 93DB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 93DB              ;
 249+ 93DB              ;	24/7/22
 250+ 93DB              ;
 251+ 93DB              ;	modifica_parametros_1er_DESPLZ_2
 252+ 93DB              ;
 253+ 93DB              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 93DB              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 93DB              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 93DB
 257+ 93DB 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 93DE A7           	and a
 259+ 93DF 20 1F        	jr nz,1F
 260+ 93E1 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 93E3 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 93E6
 263+ 93E6 21 9C 85     	ld hl,Columns
 264+ 93E9 34           	inc (hl)
 265+ 93EA 3A AF 85     	ld a,(Cuad_objeto)
 266+ 93ED E6 01        	and 1
 267+ 93EF 28 0F        	jr z,1F
 268+ 93F1 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 93F4 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 93F5 22 9D 85     	ld (Posicion_actual),hl
 271+ 93F8 CD CC 95     	call Genera_coordenadas
 272+ 93FB CD 60 95     	call Inc_CTRL_DESPLZ
 273+ 93FE 18 03        	jr 2F
 274+ 9400 CD 60 95     1 call Inc_CTRL_DESPLZ
 275+ 9403 C9           2 ret
 276+ 9404
 277+ 9404              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9404              ;
 279+ 9404              ;	24/7/22
 280+ 9404              ;
 281+ 9404              ;	Ciclo_completo.
 282+ 9404              ;
 283+ 9404              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9404              ;
 285+ 9404              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9404              ; 	Decrementamos (Columns).
 287+ 9404              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9404              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9404
 290+ 9404
 291+ 9404 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9407 FE FF        	cp $ff
 293+ 9409 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 940B E6 F0        	and $f0
 295+ 940D 20 28        	jr nz,3F
 296+ 940F
 297+ 940F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 940F
 299+ 940F 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9412 47           	ld b,a
 301+ 9413 3E F8        	ld a,$f8
 302+ 9415 80           	add b
 303+ 9416 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 9419 18 1C        	jr 3F
 305+ 941B 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 941E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 941F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9420 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 9423 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9426 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9428 20 0A        	jr nz,2F
 312+ 942A 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 942D 23           	inc hl
 314+ 942E 22 9D 85     	ld (Posicion_actual),hl
 315+ 9431 CD CC 95     	call Genera_coordenadas
 316+ 9434
 317+ 9434              ; Inicia el puntero de Sprite.
 318+ 9434
 319+ 9434 CD E4 87     2 call Inicia_puntero_objeto_der
 320+ 9437 C9           3 ret
 321+ 9438
 322+ 9438              ; ******************************************************************************************************************************************************************************************
 323+ 9438              ;
 324+ 9438              ;	15/02/23
 325+ 9438              ;
 326+ 9438              ;	Mov_left.
 327+ 9438              ;
 328+ 9438              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9438              ;
 330+ 9438              Mov_left
 331+ 9438
 332+ 9438 21 C9 85     	ld hl,Ctrl_0
 333+ 943B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 943D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 943D              ; 																	; _ en el caso de que no lo haya.
 336+ 943D 3A C9 85     	ld a,(Ctrl_0)
 337+ 9440 CB 77        	bit 6,a
 338+ 9442 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9444
 340+ 9444 CD 5A 95     	call Stop_Amadeus_left
 341+ 9447 C8           	ret z
 342+ 9448 20 4A        	jr nz,8F
 343+ 944A
 344+ 944A 3A A1 85     11 ld a,(Coordenada_X)
 345+ 944D A7           	and a
 346+ 944E 20 44        	jr nz,8F
 347+ 9450
 348+ 9450 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 9453 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9454 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9456
 352+ 9456              ; ---------- ---------- ----------
 353+ 9456
 354+ 9456 3A B0 85     	ld a,(Vel_left)
 355+ 9459 FE 02        	cp 2
 356+ 945B 28 0F        	jr z,1F
 357+ 945D 38 04        	jr c,6F
 358+ 945F FE 04        	cp 4
 359+ 9461 28 12        	jr z,7F
 360+ 9463
 361+ 9463              ; ---------- ---------- ----------
 362+ 9463
 363+ 9463 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 9466 FE F8        	cp $f8
 365+ 9468 20 2A        	jr nz,8F
 366+ 946A 18 10        	jr 4F
 367+ 946C 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 946F FE F9        	cp $f9
 369+ 9471 20 21        	jr nz,8F
 370+ 9473 18 07        	jr 4F
 371+ 9475 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 9478 FE FB        	cp $fb
 373+ 947A 20 18        	jr nz,8F
 374+ 947C
 375+ 947C              ; ---------- ---------- ----------
 376+ 947C
 377+ 947C              4
 378+ 947C CD 82 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 947F              ;	call Reinicio
 380+ 947F
 381+ 947F              ; ---------- ---------- ----------
 382+ 947F
 383+ 947F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9481 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9482
 386+ 9482              ;	ld hl,(Indice_Sprite_izq)
 387+ 9482              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9482
 389+ 9482 CD 9B 94     	call DESPLZ_IZQ
 390+ 9485 C1           	pop bc
 391+ 9486 10 F9        	djnz 5B
 392+ 9488 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 948B 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 948C 22 9D 85     	ld (Posicion_actual),hl
 395+ 948F CD CC 95     	call Genera_coordenadas
 396+ 9492 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9494
 398+ 9494              ; ---------- ---------- ----------
 399+ 9494
 400+ 9494              ; Movemos, no hay recolocación.
 401+ 9494
 402+ 9494 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9497 CD 9B 94     	call DESPLZ_IZQ
 404+ 949A C9           2 ret
 405+ 949B
 406+ 949B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 949B              ;
 408+ 949B              ;	22/9/22
 409+ 949B
 410+ 949B              DESPLZ_IZQ
 411+ 949B
 412+ 949B CD AA 94     	call Desplaza_izquierda
 413+ 949E CD F6 94         call modifica_parametros_1er_DESPLZ
 414+ 94A1 CD 1E 95     	call Ciclo_completo_2
 415+ 94A4 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 94A7 CB BE        	res 7,(hl)
 417+ 94A9 C9           	ret
 418+ 94AA
 419+ 94AA              Desplaza_izquierda
 420+ 94AA
 421+ 94AA 3A B0 85     	ld a,(Vel_left)
 422+ 94AD 47           	ld b,a
 423+ 94AE 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 94B1 23           1 inc hl
 425+ 94B2 23           	inc hl
 426+ 94B3 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 94B5 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 94B8 CD CD 87     	call Extrae_address
 429+ 94BB 22 9F 85     	ld (Puntero_objeto),hl
 430+ 94BE
 431+ 94BE              ; Modifica (Puntero_DESPLZ_der).
 432+ 94BE
 433+ 94BE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 94BE              ; Cuántos movimientos hemos hecho ??
 435+ 94BE              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 94BE
 437+ 94BE 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 94C1 EB           	ex de,hl
 439+ 94C2 A7           	and a
 440+ 94C3 ED 52        	sbc hl,de
 441+ 94C5 CB 3D        	srl l
 442+ 94C7 3E 08        6 ld a,8
 443+ 94C9 95           	sub l
 444+ 94CA 30 1E        	jr nc,3F
 445+ 94CC
 446+ 94CC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 94CC              ; B="0".
 448+ 94CC
 449+ 94CC 04           4 inc b
 450+ 94CD 3C           	inc a
 451+ 94CE 20 FC        	jr nz,4B
 452+ 94D0 78           	ld a,b
 453+ 94D1 08           	ex af,af
 454+ 94D2 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 94D5 23           5 inc hl
 456+ 94D6 23           	inc hl
 457+ 94D7 10 FC        	djnz 5B
 458+ 94D9 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 94DC CD CD 87     	call Extrae_address
 460+ 94DF 22 9F 85     	ld (Puntero_objeto),hl
 461+ 94E2
 462+ 94E2              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 94E2              ; _(Posicion_actual).
 464+ 94E2
 465+ 94E2 21 9D 85     	ld hl,Posicion_actual
 466+ 94E5 35           	dec (hl)
 467+ 94E6 08           	ex af,af
 468+ 94E7 6F           	ld l,a
 469+ 94E8 18 DD        	jr 6B
 470+ 94EA
 471+ 94EA              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 94EA
 473+ 94EA 47           3 ld b,a
 474+ 94EB 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 94EE 23           2 inc hl
 476+ 94EF 23           	inc hl
 477+ 94F0 10 FC        	djnz 2B
 478+ 94F2 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 94F5 C9           8 ret
 480+ 94F6
 481+ 94F6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 94F6              ;
 483+ 94F6              ;	modifica_parametros_1er_DESPLZ
 484+ 94F6              ;
 485+ 94F6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 94F6              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 94F6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 94F6
 489+ 94F6 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 94F9 A7           	and a
 491+ 94FA 20 1E        	jr nz,1F
 492+ 94FC 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 94FD 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9500 21 9C 85     	ld hl,Columns
 495+ 9503 34           	inc (hl)
 496+ 9504 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9507 E6 01        	and 1
 498+ 9509 20 0F        	jr nz,1F
 499+ 950B 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 950E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 950F 22 9D 85     	ld (Posicion_actual),hl
 502+ 9512 CD CC 95     	call Genera_coordenadas
 503+ 9515 CD 71 95     	call Dec_CTRL_DESPLZ
 504+ 9518 18 03        	jr 2F
 505+ 951A CD 71 95     1 call Dec_CTRL_DESPLZ
 506+ 951D C9           2 ret
 507+ 951E
 508+ 951E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 951E
 510+ 951E 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9521 FE F7        	cp $f7
 512+ 9523 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9525 30 2C        	jr nc,3F
 514+ 9527
 515+ 9527              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9527
 517+ 9527 06 00        	ld b,0
 518+ 9529 04           4 inc b
 519+ 952A 3C           	inc a
 520+ 952B FE F7        	cp $f7
 521+ 952D 20 FA        	jr nz,4B
 522+ 952F 3E FF        	ld a,$ff
 523+ 9531 90           	sub b
 524+ 9532 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 9535 18 1C        	jr 3F
 526+ 9537
 527+ 9537              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9537
 529+ 9537 21 9C 85     1 ld hl,Columns
 530+ 953A 35           	dec (hl)
 531+ 953B AF           	xor a
 532+ 953C 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 953F 3A AF 85     	ld a,(Cuad_objeto)
 534+ 9542 E6 01        	and 1
 535+ 9544 28 0A        	jr z,2F
 536+ 9546 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9549 2B           	dec hl
 538+ 954A 22 9D 85     	ld (Posicion_actual),hl
 539+ 954D CD CC 95     	call Genera_coordenadas
 540+ 9550
 541+ 9550              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9550
 543+ 9550 CD F7 87     2 call Inicia_puntero_objeto_izq
 544+ 9553 C9           3 ret
 545+ 9554
 546+ 9554              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9554              ;
 548+ 9554              ;	19/10/22
 549+ 9554              ;
 550+ 9554              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9554              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9554
 553+ 9554 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9557 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9559 C9           	ret
 556+ 955A
 557+ 955A              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 955A              ;
 559+ 955A              ;	19/10/22
 560+ 955A              ;
 561+ 955A              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 955A              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 955A
 564+ 955A 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 955D FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 955F C9           	ret
 567+ 9560
 568+ 9560              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 9560              ;
 570+ 9560              ;	24/7/22
 571+ 9560              ;
 572+ 9560              ;	Inc_CTRL_DESPLZ
 573+ 9560              ;
 574+ 9560              ;
 575+ 9560              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 9560
 577+ 9560 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 9563 3A B1 85     	ld a,(Vel_right)
 579+ 9566 A7           	and a
 580+ 9567 28 06        	jr z,1F
 581+ 9569 47           	ld b,a
 582+ 956A 34           3 inc (hl)
 583+ 956B 10 FD        	djnz 3B
 584+ 956D 18 01        	jr 2F
 585+ 956F 34           1 inc (hl)
 586+ 9570 C9           2 ret
 587+ 9571
 588+ 9571              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9571              ;
 590+ 9571              ;	5/2/23
 591+ 9571              ;
 592+ 9571              ;	Dec_CTRL_DESPLZ
 593+ 9571              ;
 594+ 9571              ;
 595+ 9571              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9571
 597+ 9571 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9574 3A B0 85     	ld a,(Vel_left)
 599+ 9577 A7           	and a
 600+ 9578 28 06        	jr z,1F
 601+ 957A 47           	ld b,a
 602+ 957B 35           3 dec (hl)
 603+ 957C 10 FD        	djnz 3B
 604+ 957E 18 01        	jr 2F
 605+ 9580 35           1 dec (hl)
 606+ 9581 C9           2 ret
 607+ 9582
 608+ 9582              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9582
 610+ 9582 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9585 01 1F 00     	ld bc,31
 612+ 9588 A7           	and a
 613+ 9589 ED 4A        	adc hl,bc
 614+ 958B 22 9D 85     	ld (Posicion_actual),hl
 615+ 958E 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9591 CB C6        	set 0,(hl)
 617+ 9593 C9           	ret
 618+ 9594
 619+ 9594              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9594
 621+ 9594 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9597 01 1F 00     	ld bc,31
 623+ 959A A7           	and a
 624+ 959B ED 42        	sbc hl,bc
 625+ 959D 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 95A0 21 C9 85     	ld hl,Ctrl_0
 627+ 95A3 CB CE        	set 1,(hl)
 628+ 95A5 C9           	ret
 629+ 95A6
 630+ 95A6              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 95A6
 632+ 95A6 24           Reaparece_abajo inc h
 633+ 95A7 01 E0 17     	ld bc,$17e0
 634+ 95AA A7           	and a
 635+ 95AB ED 4A        	adc hl,bc
 636+ 95AD 22 9D 85     	ld (Posicion_actual),hl
 637+ 95B0 21 C9 85     	ld hl,Ctrl_0
 638+ 95B3 CB D6        	set 2,(hl)
 639+ 95B5 C9           	ret
 640+ 95B6
 641+ 95B6              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 95B6
 643+ 95B6 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 95B9 A7           	and a
 645+ 95BA ED 42        	sbc hl,bc
 646+ 95BC 22 9D 85     	ld (Posicion_actual),hl
 647+ 95BF 21 C9 85     	ld hl,Ctrl_0
 648+ 95C2 CB DE        	set 3,(hl)
 649+ 95C4 C9           	ret
 650+ 95C5
 651+ 95C5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 95C5
 653+ 95C5 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 95C8 22 9D 85     	ld (Posicion_actual),hl
 655+ 95CB C9           	ret
# file closed: Direcciones.asm
 945  95CC              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 95CC              ; ------------------------------------------------------------------------
   2+ 95CC              ;
   3+ 95CC              ;	02/04/23
   4+ 95CC              ;
   5+ 95CC              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 95CC              ;	Fila superior "0", Columna izquierda "0".
   7+ 95CC              ;
   8+ 95CC              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 95CC              ;
  10+ 95CC              ;	Modifica: A,BC y DE.
  11+ 95CC
  12+ 95CC C5           Genera_coordenadas push bc
  13+ 95CD E5           	push hl
  14+ 95CE D5           	push de
  15+ 95CF
  16+ 95CF 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 95D2
  18+ 95D2 7D           	ld a,l
  19+ 95D3 E6 1F        	and $1f
  20+ 95D5 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 95D8
  22+ 95D8 CD A0 92     	call calcula_tercio
  23+ 95DB 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 95DC
  25+ 95DC 1E 00        	ld e,0
  26+ 95DE 7D           	ld a,l
  27+ 95DF E6 E0        	and $e0
  28+ 95E1 28 01        	jr z,1F
  29+ 95E3 04           	inc b
  30+ 95E4
  31+ 95E4 04           1 inc b
  32+ 95E5 05           	dec b
  33+ 95E6 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 95E8              ;														; _ , salimos.
  35+ 95E8 1C           3 inc e
  36+ 95E9 D6 20        	sub 32
  37+ 95EB 20 FB        	jr nz,3B
  38+ 95ED 10 F5        	djnz 1B
  39+ 95EF
  40+ 95EF 7B           2 ld a,e
  41+ 95F0 32 A2 85     	ld (Coordenada_y),a
  42+ 95F3
  43+ 95F3 D1           	pop de
  44+ 95F4 E1           	pop hl
  45+ 95F5 C1           	pop bc
  46+ 95F6
  47+ 95F6 C9           	ret
  48+ 95F7
  49+ 95F7              ; ------------------------------------------------------------------------
  50+ 95F7              ;	28/03/23
  51+ 95F7              ;
  52+ 95F7              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 95F7              ;	Fila superior "0", Columna izquierda "0".
  54+ 95F7              ;
  55+ 95F7              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 95F7              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 95F7              ;
  58+ 95F7              ;		DE="$120d"
  59+ 95F7              ;
  60+ 95F7              ;		D, (Coordenada_X), Columnas, $12
  61+ 95F7              ;		E, (Coordenada_y), Filas, $0d
  62+ 95F7              ;
  63+ 95F7              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 95F7
  65+ 95F7              ;	Modifica: A,BC y DE.
  66+ 95F7
  67+ 95F7
  68+ 95F7              Genera_coordenadas_disparo
  69+ 95F7
  70+ 95F7              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 95F7
  72+ 95F7 7D           	ld a,l
  73+ 95F8 E6 1F        	and $1f
  74+ 95FA 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 95FB CD A0 92     	call calcula_tercio
  76+ 95FE 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 95FF 1E 00        	ld e,0
  78+ 9601 7D           	ld a,l
  79+ 9602 E6 E0        	and $e0
  80+ 9604 28 01        	jr z,1F
  81+ 9606 04           	inc b
  82+ 9607 1C           1 inc e
  83+ 9608 D6 20        	sub 32
  84+ 960A 20 FB        	jr nz,1B
  85+ 960C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 960E C9           	ret
  87+ 960F
# file closed: Genera_coordenadas.asm
 946  960F              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 960F
   2+ 960F
   3+ 960F              ;   11/8/22
   4+ 960F              ;
   5+ 960F              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 960F              ;
   7+ 960F              ;   Mov_obj.asm
   8+ 960F              ;
   9+ 960F              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 960F              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 960F              ;
  12+ 960F              ;   Codificación:
  13+ 960F              ;
  14+ 960F              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 960F
  16+ 960F              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 960F
  18+ 960F 02 40 00     Arriba db 2,%01000000,0
  19+ 9612 02 80 00     Abajo db 2,%10000000,0
  20+ 9615 02 20 00     Derecha db 2,%00100000,0
  21+ 9618 02 10 00     Izquierda db 2,%00010000,0
  22+ 961B 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 961F 60 42 60 40
  22+ 9623 63
  23+ 9624 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9628 22 A3 80 A0
  24+ 962C 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9630 84 A0 83 A0
  25+ 9634 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9638 80 A3 22 A0
  26+ 963C 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9640 40 60 42 60
  27+ 9644 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9648
  29+ 9648 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 964C 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9650 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9654 84 00
  32+ 9656 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 965A 84 00
  33+ 965C 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9660 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9664 1F 1F 1F 1F
  35+ 9668 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 966C 1F 1F 1F 1F
  35+ 9670 1F
  36+ 9671 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9675 2F 2F 2F 2F
  36+ 9679 2F 2F
  37+ 967B 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 967F 2F 2F 00
  38+ 9682
  39+ 9682              ; ----- ----- ----- ----- -----
  40+ 9682
  41+ 9682 60 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9684 5C 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9686 18 96        Indice_mov_Izquierda defw Izquierda
  44+ 9688 15 96        Indice_mov_Derecha defw Derecha
  45+ 968A 12 96        Indice_mov_Abajo defw Abajo
  46+ 968C 0F 96        Indice_mov_Arriba defw Arriba
  47+ 968E 4C 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9690 50 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9692 48 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9694 56 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9696 1B 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9698              ; ----- ----- ----- ----- -----
  53+ 9698
  54+ 9698 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 969B A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 969C 28 02            jr z,1F
  57+ 969E 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 96A0 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 96A3 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 96A5 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 96A8              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 96A8 2A CD 85         ld hl,(Puntero_mov)
  63+ 96AB 7E               ld a,(hl)
  64+ 96AC 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 96AF 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 96B0 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 96B3
  68+ 96B3 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 96B6 A7               and a
  70+ 96B7 20 0C            jr nz,12F
  71+ 96B9 2A CD 85         ld hl,(Puntero_mov)
  72+ 96BC 7E               ld a,(hl)
  73+ 96BD A7               and a
  74+ 96BE 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 96C0 E6 0F            and $0f
  76+ 96C2 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 96C5              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 96C5 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 96C8 CB 7E            bit 7,(hl)
  80+ 96CA 28 03            jr z,2F
  81+ 96CC CD BE 92         call Mov_down
  82+ 96CF 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 96D2 CB 76            bit 6,(hl)
  84+ 96D4 28 03            jr z,3F
  85+ 96D6 CD EC 92         call Mov_up
  86+ 96D9 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 96DC CB 6E            bit 5,(hl)
  88+ 96DE 28 03            jr z,4F
  89+ 96E0 CD 1A 93         call Mov_right
  90+ 96E3 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 96E6 CB 66            bit 4,(hl)
  92+ 96E8 28 03            jr z,5F
  93+ 96EA CD 38 94         call Mov_left
  94+ 96ED
  95+ 96ED              ; ---------- --------- --------- ---------- ----------
  96+ 96ED
  97+ 96ED 3A D1 85     5 ld a,(Repetimos_db)
  98+ 96F0 A7               and a
  99+ 96F1 28 07            jr z,6F
 100+ 96F3 3D               dec a
 101+ 96F4 32 D1 85         ld (Repetimos_db),a
 102+ 96F7 28 01            jr z,6f
 103+ 96F9 C9           11 ret
 104+ 96FA 21 CF 85     6 ld hl,Contador_db_mov
 105+ 96FD 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 96FE 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9701 23               inc hl
 108+ 9702 22 CD 85         ld (Puntero_mov),hl
 109+ 9705 18 F2            jr 11B
 110+ 9707 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 970A 3A D0 85         ld a,(Incrementa_puntero)
 112+ 970D 47               ld b,a
 113+ 970E 23           8 inc hl
 114+ 970F 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9711 5E               ld e,(hl)
 116+ 9712 23               inc hl
 117+ 9713 56               ld d,(hl)
 118+ 9714 EB               ex de,hl
 119+ 9715 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9718 18 DF            jr 11B
 121+ 971A
 122+ 971A              ; ---------- --------- --------- ---------- ----------
 123+ 971A              ;
 124+ 971A              ;   11/8/22
 125+ 971A              ;
 126+ 971A              ;   Prepara_Puntero_mov
 127+ 971A
 128+ 971A E5           Prepara_Puntero_mov push hl
 129+ 971B D5               push de
 130+ 971C 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 971F 5E               ld e,(hl)
 132+ 9720 23               inc hl
 133+ 9721 56               ld d,(hl)
 134+ 9722 EB               ex de,hl
 135+ 9723 22 CD 85         ld (Puntero_mov),hl
 136+ 9726 D1               pop de
 137+ 9727 E1               pop hl
 138+ 9728 C9               ret
 139+ 9729
 140+ 9729              ; ---------- --------- --------- ---------- ----------
 141+ 9729              ;
 142+ 9729              ;   11/8/22
 143+ 9729              ;
 144+ 9729              ;   Reinicia_el_movimiento
 145+ 9729
 146+ 9729 CD 1A 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 972C AF               xor a
 148+ 972D 32 CF 85         ld (Contador_db_mov),a
 149+ 9730 32 D0 85         ld (Incrementa_puntero),a
 150+ 9733 C3 98 96         jp Movimiento
 151+ 9736 C9               ret
 152+ 9737              ; ---------- --------- --------- ---------- ----------
 153+ 9737
 154+ 9737
 155+ 9737
 156+ 9737
 157+ 9737
 158+ 9737
 159+ 9737
 160+ 9737
 161+ 9737
 162+ 9737
 163+ 9737
 164+ 9737
 165+ 9737
 166+ 9737
 167+ 9737
 168+ 9737
 169+ 9737
 170+ 9737
# file closed: Patrones_de_mov.asm
 947  9737              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9737              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9737              ;
   3+ 9737              ;	3/1/23
   4+ 9737              ;
   5+ 9737              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9737
   7+ 9737              ;	ADC HL,SP	LD (addr),SP
   8+ 9737              ;	ADD HL,SP	LD SP,(addr)
   9+ 9737              ;	ADD IX,SP	LD SP,nn
  10+ 9737              ; 	ADD IY,SP	LD SP,HL
  11+ 9737              ;				LD SP,IX
  12+ 9737              ;	DEC SP		LD SP,IY
  13+ 9737
  14+ 9737              ;	EX (SP),HL
  15+ 9737              ;	EX (SP),IX
  16+ 9737              ;	EX (SP),IY
  17+ 9737
  18+ 9737              ;	INC SP
  19+ 9737
  20+ 9737
  21+ 9737                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 948  7FD4
 949  7FD4              	SAVESNA "Pruebas.sna", START
 950  7FD4
 951  7FD4
 952  7FD4
# file closed: Banco_de_pruebas.asm
