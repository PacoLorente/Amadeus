# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 B8 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD E6 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD F6 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 C2 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B B8 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D D3 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 878C              ; 19/1/24
   2+ 878C
   3+ 878C              Indice_de_niveles
   4+ 878C
   5+ 878C 94 87        	defw Nivel_1
   6+ 878E A0 87        	defw Nivel_2
   7+ 8790
   8+ 8790              ;	...
   9+ 8790              ;	...
  10+ 8790              ;	+ Niveles ...
  11+ 8790
  12+ 8790 00 00        	defw 0
  13+ 8792 00 00        	defw 0
  14+ 8794
  15+ 8794 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8795 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8799 01 01 01 01  	db 1,1,1,1,1,1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 879D 01 01 01
  18+ 87A0
  19+ 87A0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87A1 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 87A5 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 87A9 01 02
  22+ 87AB 02 01 01 01  	db 2,1,1,1,1,2
  22+ 87AF 01 02
  23+ 87B1
  24+ 87B1              ;---------------------------------------------------------------------------------------------------------------
  25+ 87B1              ;
  26+ 87B1              ;   19/1/24
  27+ 87B1              ;
  28+ 87B1              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 87B1              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 87B1              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 87B1              ;	_ de la 1ª entidad del Nivel.
  32+ 87B1              ;
  33+ 87B1              ;	MODIFICA: HL,DE y A.
  34+ 87B1              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 87B1
  36+ 87B1              Inicializa_Nivel
  37+ 87B1
  38+ 87B1 2A E1 89     	ld hl,(Puntero_indice_NIVELES)
  39+ 87B4 CD B2 8B     	call Extrae_address
  40+ 87B7 7E           	ld a,(hl)
  41+ 87B8 32 AC 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 87BB 23           	inc hl
  43+ 87BC CD C6 87     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 87BF 22 E3 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 87C2 CD CF 87     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 87C5 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 87C6
  48+ 87C6              ; ----------------------
  49+ 87C6
  50+ 87C6 11 8B 89     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 87C9 01 04 00     	ld bc,4
  52+ 87CC ED B0        	ldir
  53+ 87CE C9           	ret
  54+ 87CF
  55+ 87CF 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 87D0 CD DD 88         call Calcula_salto_en_BC
  57+ 87D3 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 87D6 A7               and a
  59+ 87D7 ED 4A            adc hl,bc
  60+ 87D9 CD B2 8B         call Extrae_address
  61+ 87DC 22 97 89         ld (Puntero_indice_mov),hl
  62+ 87DF C9               ret
  63+ 87E0
  64+ 87E0              ;---------------------------------------------------------------------------------------------------------------
  65+ 87E0              ;
  66+ 87E0              ;   5/1/24
  67+ 87E0              ;
  68+ 87E0              ;	Destruye A,BC,HL,DE
  69+ 87E0
  70+ 87E0              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 87E0              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 87E0
  73+ 87E0              Inicia_Entidades
  74+ 87E0
  75+ 87E0              ; Preparamos los punteros de las cajas de entidades:
  76+ 87E0
  77+ 87E0 CD 1A 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 87E3              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 87E3 CD 44 89     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 87E6
  81+ 87E6 2A E3 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 87E9
  83+ 87E9 22 E3 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 87EC
  85+ 87EC CD 8B 88     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 87EF
  87+ 87EF 2A E3 89     	ld hl,(Datos_de_nivel)
  88+ 87F2
  89+ 87F2              ; En este punto:
  90+ 87F2              ;
  91+ 87F2              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 87F2              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 87F2
  94+ 87F2 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 87F3
  96+ 87F3 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 87F4 CD DD 88     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 87F7
  99+ 87F7 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 100+ 87FA CD E5 88     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 87FD
 102+ 87FD CD EF 88     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 8800
 104+ 8800              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 8800
 106+ 8800 CD AD 88     	call Busca_mov_masticados_segun_tipo
 107+ 8803
 108+ 8803 A7           	and a
 109+ 8804 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 8806
 111+ 8806              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 8806
 113+ 8806              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 8806              ;	_ de este tipo de entidad.
 115+ 8806
 116+ 8806 CD E0 9E     	call Situa_en_contador_general_de_mov_masticados
 117+ 8809 CD ED 9E     	call Transfiere_datos_de_contadores
 118+ 880C
 119+ 880C 18 06        	jr 4F
 120+ 880E
 121+ 880E CD 74 8A     3 call Construye_movimientos_masticados_entidad
 122+ 8811
 123+ 8811              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 124+ 8811              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 125+ 8811              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 126+ 8811              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 127+ 8811              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 128+ 8811
 129+ 8811 CD 6B 88     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 130+ 8814              ;																; _ Mov_masticados ya generados.
 131+ 8814 CD 46 88     4 call Guarda_foto_de_mov_masticado
 132+ 8817
 133+ 8817              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 134+ 8817
 135+ 8817 2A 7E 89     	ld hl,(Puntero_de_impresion)
 136+ 881A CD 80 9B     	call Genera_coordenadas
 137+ 881D CD 16 89     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 138+ 8820 CD 50 88     	call Limpiamos_bandeja_DRAW
 139+ 8823 CD 19 8C     	call Incrementa_punteros_de_cajas
 140+ 8826
 141+ 8826              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 142+ 8826              ; _ entidad del Nivel.
 143+ 8826
 144+ 8826 3A C3 89     	ld a,(Ctrl_4)
 145+ 8829 E6 F0        	and $f0
 146+ 882B 32 C3 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 147+ 882E
 148+ 882E              ; Siguiente entidad del Nivel.
 149+ 882E
 150+ 882E 2A E3 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 151+ 8831 23           	inc hl 														; _ entidad del Nivel.
 152+ 8832
 153+ 8832 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 154+ 8833
 155+ 8833 10 B4        	djnz 2B
 156+ 8835
 157+ 8835 C9           	ret
 158+ 8836
 159+ 8836              ; ---------------------------------------------------------------------
 160+ 8836              ;
 161+ 8836              ;	30/01/24
 162+ 8836
 163+ 8836
 164+ 8836              Store_Restore_cajas
 165+ 8836
 166+ 8836              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8836
 168+ 8836 2A 7E 89     	ld hl,(Puntero_de_impresion)
 169+ 8839 CD 80 9B     	call Genera_coordenadas
 170+ 883C CD 16 89     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 171+ 883F CD 50 88     	call Limpiamos_bandeja_DRAW
 172+ 8842
 173+ 8842              ; 	Entidad_sospechosa. 20/4/23
 174+ 8842
 175+ 8842              ;	ld a,(Impacto)
 176+ 8842              ;	and a
 177+ 8842              ;	jr z,1F
 178+ 8842
 179+ 8842              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 180+ 8842              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 181+ 8842              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 182+ 8842              ;	adc hl,bc 											; _ "0" más adelante.
 183+ 8842              ;	ld (Entidad_sospechosa_de_colision),hl
 184+ 8842
 185+ 8842
 186+ 8842              ;1 ld hl,(Puntero_restore_caja)
 187+ 8842              ;	ld a,(hl)
 188+ 8842              ;	and a
 189+ 8842              ;	push af
 190+ 8842              ;	jr z,2F
 191+ 8842
 192+ 8842              ;	di
 193+ 8842              ;	ld de,Bandeja_DRAW
 194+ 8842              ;	ld bc,42
 195+ 8842              ;	ldir
 196+ 8842              ;	ei
 197+ 8842
 198+ 8842 CD 19 8C     2 call Incrementa_punteros_de_cajas
 199+ 8845 C9           	ret
 200+ 8846
 201+ 8846
 202+ 8846              ; ---------------------------------------------------------------------
 203+ 8846              ;
 204+ 8846              ;	29/01/24
 205+ 8846
 206+ 8846 CD C9 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 207+ 8849 CD BF 80     	call Guarda_foto_registros
 208+ 884C              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 209+ 884C              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 210+ 884C              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 211+ 884C              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 212+ 884C
 213+ 884C CD 5B 88     	call Decrementa_Contador_de_mov_masticados
 214+ 884F C9           	ret
 215+ 8850
 216+ 8850              ; ---------------------------------------------------------------------
 217+ 8850              ;
 218+ 8850              ;	25/01/24
 219+ 8850
 220+ 8850 21 61 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 221+ 8853 06 2A        	ld b,42
 222+ 8855 AF           	xor a
 223+ 8856
 224+ 8856 77           1 ld (hl),a
 225+ 8857 23           	inc hl
 226+ 8858 10 FC        	djnz 1B
 227+ 885A
 228+ 885A C9           	ret
 229+ 885B
 230+ 885B              ; ---------------------------------------------------------------------
 231+ 885B              ;
 232+ 885B              ;	22/01/24
 233+ 885B
 234+ 885B 2A 82 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 235+ 885E 2B           	dec hl
 236+ 885F
 237+ 885F 24           	inc h
 238+ 8860 25           	dec h
 239+ 8861 20 04        	jr nz,1F
 240+ 8863
 241+ 8863 7D           	ld a,l
 242+ 8864 A7           	and a
 243+ 8865 28 FE        	jr z,$
 244+ 8867
 245+ 8867 22 82 89     1 ld (Contador_de_mov_masticados),hl
 246+ 886A C9           	ret
 247+ 886B
 248+ 886B              ; ---------------------------------------------------------------------
 249+ 886B              ;
 250+ 886B              ;	22/01/24
 251+ 886B
 252+ 886B 21 C3 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 253+ 886E CB 46        	bit 0,(hl)
 254+ 8870 20 0D        	jr nz,1F
 255+ 8872 CB 4E        	bit 1,(hl)
 256+ 8874 20 0C        	jr nz,2F
 257+ 8876 CB 56        	bit 2,(hl)
 258+ 8878 20 0B        	jr nz,3F
 259+ 887A CB 5E        	bit 3,(hl)
 260+ 887C 20 0A        	jr nz,4F
 261+ 887E C9           	ret
 262+ 887F
 263+ 887F CB E6        1 set 4,(hl)
 264+ 8881 C9           	ret
 265+ 8882 CB EE        2 set 5,(hl)
 266+ 8884 C9           	ret
 267+ 8885 CB F6        3 set 6,(hl)
 268+ 8887 C9           	ret
 269+ 8888 CB FE        4 set 7,(hl)
 270+ 888A C9           	ret
 271+ 888B
 272+ 888B              ; ---------------------------------------------------------------------
 273+ 888B              ;
 274+ 888B              ;	23/01/24
 275+ 888B              ;
 276+ 888B              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 277+ 888B              ;
 278+ 888B              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 279+ 888B              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 280+ 888B              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 281+ 888B              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 282+ 888B
 283+ 888B              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 284+ 888B
 285+ 888B 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 286+ 888C 3D           	dec a
 287+ 888D 20 06        	jr nz,1F
 288+ 888F
 289+ 888F              ; --- Tipo_1
 290+ 888F
 291+ 888F 21 C3 89     	ld hl,Ctrl_4
 292+ 8892 CB C6        	set 0,(hl)
 293+ 8894 C9           	ret
 294+ 8895
 295+ 8895 3D           1 dec a
 296+ 8896 20 06        	jr nz,2F
 297+ 8898
 298+ 8898              ; --- Tipo_2
 299+ 8898
 300+ 8898 21 C3 89     	ld hl,Ctrl_4
 301+ 889B CB CE        	set 1,(hl)
 302+ 889D C9           	ret
 303+ 889E
 304+ 889E 3D           2 dec a
 305+ 889F 20 06        	jr nz,3F
 306+ 88A1
 307+ 88A1              ; --- Tipo_3
 308+ 88A1
 309+ 88A1 21 C3 89     	ld hl,Ctrl_4
 310+ 88A4 CB D6        	set 2,(hl)
 311+ 88A6 C9           	ret
 312+ 88A7
 313+ 88A7              ; --- Tipo_3
 314+ 88A7
 315+ 88A7 21 C3 89     3 ld hl,Ctrl_4
 316+ 88AA CB D6        	set 2,(hl)
 317+ 88AC C9           	ret
 318+ 88AD
 319+ 88AD              ; ---------------------------------------------------------------------
 320+ 88AD              ;
 321+ 88AD              ;	22/01/24
 322+ 88AD
 323+ 88AD 21 C3 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 324+ 88B0 CB 46        	bit 0,(hl)
 325+ 88B2 20 0E        	jr nz,1F
 326+ 88B4
 327+ 88B4 CB 4E        	bit 1,(hl)
 328+ 88B6 20 10        	jr nz,2F
 329+ 88B8
 330+ 88B8 CB 56        	bit 2,(hl)
 331+ 88BA 20 12        	jr nz,3F
 332+ 88BC
 333+ 88BC CB 5E        	bit 3,(hl)
 334+ 88BE 20 14        	jr nz,4F
 335+ 88C0 18 19        	jr 6F
 336+ 88C2
 337+ 88C2              ; Entidad_de_Tipo_1.
 338+ 88C2
 339+ 88C2 CB 66        1 bit 4,(hl)
 340+ 88C4 28 15        	jr z,6F
 341+ 88C6 18 10        	jr 5F
 342+ 88C8
 343+ 88C8              ; Entidad_de_Tipo_2.
 344+ 88C8
 345+ 88C8 CB 6E        2 bit 5,(hl)
 346+ 88CA 28 0F        	jr z,6F
 347+ 88CC 18 0A        	jr 5F
 348+ 88CE
 349+ 88CE              ; Entidad_de_Tipo_3.
 350+ 88CE
 351+ 88CE CB 76        3 bit 6,(hl)
 352+ 88D0 28 09        	jr z,6F
 353+ 88D2 18 04        	jr 5F
 354+ 88D4
 355+ 88D4              ; Entidad_de_Tipo_4.
 356+ 88D4
 357+ 88D4 CB 7E        4 bit 7,(hl)
 358+ 88D6 28 03        	jr z,6F
 359+ 88D8
 360+ 88D8              ; Esta entidad TIENE MOV_MASTICADOS.
 361+ 88D8
 362+ 88D8 AF           5 xor a
 363+ 88D9 3C           	inc a
 364+ 88DA C9           	ret
 365+ 88DB
 366+ 88DB              ; Esta entidad NO TIENE MOV_MASTICADOS.
 367+ 88DB
 368+ 88DB AF           6 xor a
 369+ 88DC C9           	ret
 370+ 88DD
 371+ 88DD              ;	------------------------------------------------------------------------------------
 372+ 88DD              ;
 373+ 88DD              ;	12/01/24
 374+ 88DD              ;
 375+ 88DD              ;	INPUTS:	A contiene el (Tipo) de entidad.
 376+ 88DD              ;
 377+ 88DD              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 378+ 88DD              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 379+ 88DD
 380+ 88DD CB 27        Calcula_salto_en_BC sla a
 381+ 88DF D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 382+ 88E1 4F           	ld c,a
 383+ 88E2 06 00        	ld b,0
 384+ 88E4 C9           	ret
 385+ 88E5
 386+ 88E5              ; ------------------------------------------------------------------
 387+ 88E5              ;
 388+ 88E5              ;	19/1/24
 389+ 88E5              ;
 390+ 88E5              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 391+ 88E5              ;	Actualiza (Datos_de_entidad) con esa dirección.
 392+ 88E5
 393+ 88E5 A7           Situa_en_datos_de_definicion and a
 394+ 88E6 ED 4A        	adc hl,bc
 395+ 88E8 CD B2 8B     	call Extrae_address
 396+ 88EB 22 B2 89         ld (Datos_de_entidad),hl
 397+ 88EE C9           	ret
 398+ 88EF
 399+ 88EF              ; ------------------------------------------------------------------
 400+ 88EF
 401+ 88EF              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 402+ 88EF              ; 	inc de
 403+ 88EF              ; 	inc de
 404+ 88EF              ; 	ex de,hl
 405+ 88EF              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 406+ 88EF              ; 	ret
 407+ 88EF
 408+ 88EF              ; ----------------------------------------------------------------------------------------------------------
 409+ 88EF              ;
 410+ 88EF              ;	31/1/24
 411+ 88EF              ;
 412+ 88EF              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 413+ 88EF              ;	_ de entidad.
 414+ 88EF              ;
 415+ 88EF              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 416+ 88EF              ;
 417+ 88EF              ;
 418+ 88EF              ;	MODIFICA: HL,DE y BC
 419+ 88EF
 420+ 88EF
 421+ 88EF              Definicion_de_entidad_a_bandeja_DRAW
 422+ 88EF
 423+ 88EF 11 61 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 424+ 88F2 01 03 00     	ld bc,3
 425+ 88F5 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 426+ 88F7              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 427+ 88F7 11 6B 89     	ld de,Attr									; DE en (Attr).
 428+ 88FA 01 05 00     	ld bc,5
 429+ 88FD ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 430+ 88FF              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 431+ 88FF 11 74 89     	ld de,Posicion_inicio
 432+ 8902 01 03 00     	ld bc,3
 433+ 8905 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 434+ 8907              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 435+ 8907 11 80 89     	ld de,Puntero_de_almacen_de_mov_masticados
 436+ 890A 01 02 00     	ld bc,2
 437+ 890D ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 438+ 890F
 439+ 890F 11 8A 89     	ld de,Frames_explosion
 440+ 8912 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 441+ 8914 12           	ld (de),a 									; Vuelco (Frames_explosion).
 442+ 8915
 443+ 8915 C9           	ret
 444+ 8916
 445+ 8916              ; ----------------------------------------------------------------------------------------------------------
 446+ 8916              ;
 447+ 8916              ;	22/01/24
 448+ 8916              ;
 449+ 8916              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 450+ 8916              ;
 451+ 8916              ;	Las cajas contienen entidades iniciadas:
 452+ 8916              ;
 453+ 8916              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 454+ 8916              ;
 455+ 8916              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 456+ 8916              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 457+ 8916              ;
 458+ 8916              ;	MODIFICA: HL,DE y BC
 459+ 8916
 460+ 8916 21 61 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 461+ 8919 ED 5B A6 89  	ld de,(Puntero_store_caja)
 462+ 891D 7E           	ld a,(hl)
 463+ 891E 12           	ld (de),a
 464+ 891F 13           	inc de 													; (Tipo).
 465+ 8920
 466+ 8920 21 68 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 467+ 8923 01 02 00     	ld bc,2
 468+ 8926 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 469+ 8928              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 470+ 8928 23           	inc hl
 471+ 8929 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 472+ 892A 12           	ld (de),a
 473+ 892B 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 474+ 892C
 475+ 892C 21 77 89     	ld hl,Impacto
 476+ 892F 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 477+ 8930 12           	ld (de),a
 478+ 8931 13           	inc de 													; (Impacto), volcado a la caja.
 479+ 8932              ;															; DE situado ahora en (Variables_de_borrado).
 480+ 8932 23           	inc hl
 481+ 8933 01 06 00     	ld bc,6
 482+ 8936 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 483+ 8938              ; 															; DE situado ahora en (Puntero_de_impresión).
 484+ 8938 01 07 00     	ld bc,7
 485+ 893B ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 486+ 893D              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 487+ 893D              ;															; HL apunta ahora a (Columnas).
 488+ 893D 21 89 89     	ld hl,Ctrl_2
 489+ 8940 7E           	ld a,(hl)
 490+ 8941 12           	ld (de),a 												; Volcamos (Ctrl_2).
 491+ 8942 13           	inc de
 492+ 8943
 493+ 8943 C9           	ret
 494+ 8944
 495+ 8944              ;---------------------------------------------------------------------------------------------------------------
 496+ 8944              ;
 497+ 8944              ;	5/1/24
 498+ 8944              ;
 499+ 8944              ;	INICIALIZA (Numero_parcial_de_entidades).
 500+ 8944              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 501+ 8944              ;
 502+ 8944              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 503+ 8944              ;
 504+ 8944              ;	(Numero_parcial_de_entidades)="7".
 505+ 8944              ;
 506+ 8944              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 507+ 8944              ;
 508+ 8944              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 509+ 8944              ;
 510+ 8944              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 511+ 8944              ;	MODIFICA: A y B.
 512+ 8944              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 513+ 8944
 514+ 8944              Inicializa_Numero_parcial_de_entidades
 515+ 8944
 516+ 8944              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 517+ 8944
 518+ 8944 3A AC 89     	ld a,(Numero_de_entidades)
 519+ 8947 A7           	and a
 520+ 8948
 521+ 8948              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 522+ 8948              ;	jr z,$
 523+ 8948              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 524+ 8948
 525+ 8948 20 03        	jr nz,3F
 526+ 894A
 527+ 894A              ; ---------- ---------- ----------
 528+ 894A
 529+ 894A              ;! RESET para pruebas. Omitir esta línea en modo normal.
 530+ 894A              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 531+ 894A
 532+ 894A CD B1 87     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 533+ 894D
 534+ 894D              ; ---------- ---------- ----------
 535+ 894D
 536+ 894D 3A AC 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 537+ 8950 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 538+ 8952 38 08        	jr c,1F
 539+ 8954
 540+ 8954              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 541+ 8954              ; Actualizamos variables.
 542+ 8954
 543+ 8954 3E 07        	ld a,7
 544+ 8956 32 AD 89     	ld (Numero_parcial_de_entidades),a
 545+ 8959 47           	ld b,a
 546+ 895A 18 04        	jr 2F
 547+ 895C
 548+ 895C              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 549+ 895C              ; (Numero_de_entidades)="0".
 550+ 895C
 551+ 895C 32 AD 89     1 ld (Numero_parcial_de_entidades),a
 552+ 895F 47           	ld b,a
 553+ 8960 C9           2 ret
# file closed: Niveles.asm
 107  8961
 108  8961              ; ******************************************************************************************************************************************************************************************
 109  8961              ; Constantes.
 110  8961              ; ******************************************************************************************************************************************************************************************
 111  8961              ;
 112  8961              ; 25/12/23
 113  8961
 114  8961              ;
 115  8961              ; Constantes.
 116  8961              ;
 117  8961
 118  8961              Sprite_vacio equ $eae0
 119  8961              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  8961              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  8961              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  8961              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  8961
 124  8961              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  8961              ;														;
 126  8961              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  8961
 128  8961              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  8961              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  8961              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  8961              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  8961              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  8961              ;														; 55 Bytes.
 134  8961
 135  8961              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 136  8961              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 137  8961
 138  8961              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  8961
 140  8961              ; ******************************************************************************************************************************************************************************************
 141  8961              ; Variables.
 142  8961              ; ******************************************************************************************************************************************************************************************
 143  8961              ;
 144  8961              ; 18/01/24
 145  8961              ;
 146  8961              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  8961              ;
 148  8961
 149  8961              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  8961
 151  8961 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  8962              ;															- Patrón de movimiento.
 153  8962              ;															- Aspecto
 154  8962 00           Filas db 0												; Filas. [DRAW]
 155  8963 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  8964 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8966 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8968 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8969 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  896A
 161  896A              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  896A
 163  896A 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  896B              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  896B              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  896B 00           Attr db 0												; Atributos de la entidad:
 167  896C
 168  896C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  896C              ;
 170  896C              ;	COLORES: 0 ..... NEGRO
 171  896C              ;    		 1 ..... AZUL
 172  896C              ; 			 2 ..... ROJO
 173  896C              ;			 3 ..... MAGENTA
 174  896C              ; 			 4 ..... VERDE
 175  896C              ; 			 5 ..... CIAN
 176  896C              ;			 6 ..... AMARILLO
 177  896C              ; 			 7 ..... BLANCO
 178  896C
 179  896C 00 00        Indice_Sprite_der defw 0
 180  896E 00 00        Indice_Sprite_izq defw 0
 181  8970 00 00        Puntero_DESPLZ_der defw 0
 182  8972 00 00        Puntero_DESPLZ_izq defw 0
 183  8974
 184  8974 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8976 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8977
 187  8977              ; Variables de objeto. (Características).
 188  8977
 189  8977 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8978              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8978              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8978 00 00 00...  Variables_de_borrado ds 6
 193  897E
 194  897E 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  8980              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  8980
 197  8980 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  8982
 199  8982              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  8982              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  8982
 202  8982 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  8984              ;														; _palabras que componen el "movimiento_masticado".
 204  8984
 205  8984              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  8984
 207  8984 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8985              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8985              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8985              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8985              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8985              ;
 213  8985              ; 														DESCRIPCIÖN:
 214  8985              ;
 215  8985              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8985              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8985              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8985              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8985              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8985              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8985              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8985              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8985              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8985              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8985              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8985              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8985              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8985              ;
 229  8985              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8985              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8985              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8985
 233  8985              ; Variables de funcionamiento. [DRAW].
 234  8985
 235  8985 00           Columnas db 0
 236  8986 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8988              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8988 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8989
 240  8989              ; variables de control general.
 241  8989
 242  8989 00           Ctrl_2 db 0
 243  898A              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  898A              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  898A              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  898A              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  898A              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  898A              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  898A              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  898A              ;
 251  898A              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  898A              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  898A              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  898A              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  898A              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  898A              ;														BIT 4, ???
 257  898A              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  898A
 259  898A 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  898B
 261  898B              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  898B
 263  898B              ;					         		---------;      ;---------
 264  898B
 265  898B              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  898B
 267  898B              Perfiles_de_velocidad
 268  898B
 269  898B 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  898C 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  898D 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  898E 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  898F
 274  898F              ; Contadores de 16 bits.
 275  898F
 276  898F 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  8991 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  8993 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8995 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8997
 281  8997              ; Movimiento. ------------------------------------------------------------------------------------------------------
 282  8997
 283  8997 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 284  8999 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 285  899B 00 00        Puntero_indice_mov_bucle defw 0							;
 286  899D              ;
 287  899D              ;
 288  899D 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 289  899E              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 290  899E              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 291  899E 00           Incrementa_puntero_backup db 0
 292  899F 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 293  89A0              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 294  89A0 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 295  89A1 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 296  89A2 00           Cola_de_desplazamiento db 0								; Este byte indica:
 297  89A3              ;
 298  89A3              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 299  89A3              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 300  89A3              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 301  89A3              ;
 302  89A3              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 303  89A3              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 304  89A3              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 305  89A3              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 306  89A3              ;
 307  89A3              ;														;	"$ff" ..... Bucle infinito de repetición.
 308  89A3              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 309  89A3              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 310  89A3              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 311  89A3
 312  89A3 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 313  89A4
 314  89A4              ;														DESCRIPCIÓN:
 315  89A4              ;
 316  89A4              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 317  89A4              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 318  89A4              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 319  89A4              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 320  89A4              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 321  89A4              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 322  89A4
 323  89A4              ;														BIT 3, Recarga de nueva oleada.
 324  89A4              ;														BIT 4, Recarga de nueva oleada.
 325  89A4              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 326  89A4              ;														BIT 6, **** Frame completo.
 327  89A4              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 328  89A4
 329  89A4 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 330  89A6              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 331  89A6              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 332  89A6              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 333  89A6
 334  89A6              ; Gestión de ENTIDADES y CAJAS.
 335  89A6
 336  89A6 00 00        Puntero_store_caja defw 0
 337  89A8 00 00        Puntero_restore_caja defw 0
 338  89AA 00 00        Indice_restore_caja defw 0
 339  89AC 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 340  89AD 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 341  89AE 00           Entidades_en_curso db 0									; ..... ..... .....
 342  89AF 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 343  89B0              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 344  89B0              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 345  89B0              ;														; _ (Numero_de_malotes)="0".
 346  89B0 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 347  89B2 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 348  89B4              ;														; _ puntero (Indice_entidades).
 349  89B4
 350  89B4              ;---------------------------------------------------------------------------------------------------------------
 351  89B4              ;
 352  89B4              ;	11/01/24
 353  89B4              ;
 354  89B4              ;	Álbumes.
 355  89B4
 356  89B4 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 357  89B6              ;														; _variable para almacenar lo posición del puntero_
 358  89B6              ; 														; _de pila, SP.
 359  89B6 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 360  89B8              ;														; La utiliza la rutina [Extrae_foto_registros].
 361  89B8 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 362  89BA 00 80        Stack_snapshot defw Album_de_fotos
 363  89BC 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 364  89BE
 365  89BE              ;End_Snapshot defw Album_de_fotos
 366  89BE              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 367  89BE 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 368  89C0              ;														; _el snapshot de los registros del siguiente disparo.
 369  89C0              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 370  89C0 AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 371  89C2
 372  89C2 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 373  89C3              ;
 374  89C3              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 375  89C3              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 376  89C3              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 377  89C3
 378  89C3 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 379  89C4              ;
 380  89C4              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 381  89C4              ;
 382  89C4              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383  89C4              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384  89C4              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385  89C4              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386  89C4              ;
 387  89C4              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 388  89C4              ;															_ masticados ya generados.
 389  89C4              ;
 390  89C4              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 391  89C4              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 392  89C4              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 393  89C4              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 394  89C4
 395  89C4
 396  89C4              ; Gestión de Disparos.
 397  89C4
 398  89C4 00           Numero_de_disparotes db 0
 399  89C5 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 400  89C7 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 401  89C9 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 402  89CA              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 403  89CA              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 404  89CA 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 405  89CC              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 406  89CC              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 407  89CC              ;														; _produzca colisión.
 408  89CC 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 409  89CE              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 410  89CE 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  89D1              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 412  89D1 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 413  89D4              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 414  89D4 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 415  89D5
 416  89D5              ;---------------------------------------------------------------------------------------------------------------
 417  89D5
 418  89D5              ; Relojes y temporizaciones.
 419  89D5
 420  89D5 00           Contador_de_frames db 0
 421  89D6 00           Contador_de_frames_2 db 0
 422  89D7
 423  89D7 04           Clock_explosion db 4
 424  89D8 14           Clock_Entidades_en_curso db 20
 425  89D9 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 426  89DA              ;														; Repite la oleada de entidades.
 427  89DA 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 428  89DB 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 429  89DC 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 430  89DD
 431  89DD 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 432  89DE 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 433  89DF 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 434  89E0
 435  89E0              ;---------------------------------------------------------------------------------------------------------------
 436  89E0
 437  89E0              ; Gestión de NIVELES.
 438  89E0
 439  89E0 00           Nivel db 0												; Nivel actual del juego.
 440  89E1 00 00        Puntero_indice_NIVELES defw 0
 441  89E3 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 442  89E5              ; 														; _ que definen el NIVEL.
 443  89E5              ; Y todo comienza aquí .....
 444  89E5              ;
 445  89E5              ; 	INICIO  *************************************************************************************************************************************************************************
 446  89E5              ;
 447  89E5              ;	5/1/24
 448  89E5
 449  89E5              START
 450  89E5
 451  89E5 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 452  89E8 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 453  89EA ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 454  89EC ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 455  89EE F3           	DI
 456  89EF
 457  89EF 3E 07        	ld a,%00000111
 458  89F1 CD F2 97     	call Cls
 459  89F4 CD 57 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  89F7
 461  89F7              ; INICIALIZACIÓN.
 462  89F7
 463  89F7              ;	Inicializa 1er Nivel.
 464  89F7
 465  89F7 21 8C 87     	ld hl,Indice_de_niveles
 466  89FA 22 E1 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 467  89FD CD B1 87     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 468  8A00
 469  8A00              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 470  8A00              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 471  8A00              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 472  8A00
 473  8A00              ;	Provisional, (para desarrollo).
 474  8A00
 475  8A00              	;-
 476  8A00              ;	ld hl,Numero_parcial_de_entidades
 477  8A00              ;	ld b,(hl)
 478  8A00              ;	inc b
 479  8A00              ;	dec b
 480  8A00              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 481  8A00
 482  8A00 CD E0 87     4 call Inicia_Entidades
 483  8A03
 484  8A03 CD 1A 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 485  8A06
 486  8A06              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 487  8A06              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 488  8A06              ; (Esto se dá cuando se inicia una nueva oleada).
 489  8A06
 490  8A06              ;	ld a,(Ctrl_1)
 491  8A06              ;	bit 3,a
 492  8A06              ;	jr nz,5F											; Loop
 493  8A06
 494  8A06              ; 	INICIA AMADEUS !!!!!
 495  8A06
 496  8A06              ;3 call Restore_Amadeus
 497  8A06              ;	call Inicia_Puntero_objeto
 498  8A06              ;	call Draw
 499  8A06
 500  8A06              ;	call Guarda_movimiento_masticado	;! Provisional
 501  8A06
 502  8A06              ;	call Guarda_foto_registros
 503  8A06              ;	call Guarda_datos_de_borrado_Amadeus
 504  8A06
 505  8A06              ;	ld de,Amadeus_db
 506  8A06              ;	call Store_Amadeus
 507  8A06
 508  8A06              ; 	INICIA DISPAROS !!!!!
 509  8A06
 510  8A06              ;	call Inicia_Puntero_Disparo_Entidades
 511  8A06              ;	call Inicia_Puntero_Disparo_Amadeus
 512  8A06
 513  8A06              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 514  8A06
 515  8A06              ;5 call Inicia_punteros_de_cajas
 516  8A06              ;	call Restore_entidad
 517  8A06
 518  8A06              ;	ld a,(Ctrl_1)
 519  8A06              ;	bit 3,a
 520  8A06              ;	jr z,6F
 521  8A06
 522  8A06              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 523  8A06
 524  8A06              ;	ld hl,Ctrl_1
 525  8A06              ;	res 3,(hl)
 526  8A06              ;	jr Main
 527  8A06
 528  8A06              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 529  8A06
 530  8A06 21 C2 89     6 ld hl,Ctrl_3
 531  8A09 CB C6        	set 0,(hl)											; Frame completo.
 532  8A0B FB           	ei
 533  8A0C 76           	halt
 534  8A0D
 535  8A0D              ; ------------------------------------
 536  8A0D
 537  8A0D              Main
 538  8A0D              ;
 539  8A0D              ;	11/12/23
 540  8A0D
 541  8A0D              ; Aparece nueva entidad ???
 542  8A0D
 543  8A0D              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 544  8A0D              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 545  8A0D              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 546  8A0D              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 547  8A0D              ;														; _un 2º bloque.
 548  8A0D
 549  8A0D              ;	ld a,1
 550  8A0D              ;	out ($fe),a
 551  8A0D
 552  8A0D 3A D8 89     	ld a,(Clock_Entidades_en_curso)
 553  8A10 47           	ld b,a
 554  8A11 3A D5 89     	ld a,(Contador_de_frames)
 555  8A14 B8           	cp b
 556  8A15 20 18        	jr nz,13F
 557  8A17
 558  8A17              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 559  8A17              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 560  8A17
 561  8A17 3A AD 89     21 ld a,(Numero_parcial_de_entidades)
 562  8A1A 47           	ld b,a
 563  8A1B 3A AE 89     	ld a,(Entidades_en_curso)
 564  8A1E B8           	cp b
 565  8A1F 28 0E        	jr z,13F
 566  8A21 30 0C        	jr nc,13F
 567  8A23
 568  8A23 3C           	inc a
 569  8A24 32 AE 89     	ld (Entidades_en_curso),a
 570  8A27
 571  8A27              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 572  8A27
 573  8A27 3A D8 89     	ld a,(Clock_Entidades_en_curso)
 574  8A2A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 575  8A2A              ;! _ IMPREDECIBLE !!!!
 576  8A2A C6 64        	add 100
 577  8A2C 32 D8 89     	ld (Clock_Entidades_en_curso),a
 578  8A2F
 579  8A2F              ; -------------------------------------------------------------------------------------------------------------
 580  8A2F
 581  8A2F              ; Habilita disparos.
 582  8A2F
 583  8A2F              13
 584  8A2F
 585  8A2F              ;	ld hl,Disparo_Amadeus
 586  8A2F              ;	ld de,CLOCK_repone_disparo_Amadeus
 587  8A2F              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 588  8A2F
 589  8A2F              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 590  8A2F              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 591  8A2F              ;	call Habilita_disparos
 592  8A2F
 593  8A2F              ; COLISIONES.
 594  8A2F
 595  8A2F              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 596  8A2F
 597  8A2F              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 598  8A2F              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 599  8A2F              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 600  8A2F
 601  8A2F              ;	xor a
 602  8A2F              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 603  8A2F
 604  8A2F              ;	call Inicia_punteros_de_cajas
 605  8A2F              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 606  8A2F              ; 														; _ en DRAW.
 607  8A2F
 608  8A2F              ;	ld a,(Filas)
 609  8A2F              ;	and a
 610  8A2F              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 611  8A2F              ;	call Incrementa_punteros_de_cajas
 612  8A2F              ;	jr 12B
 613  8A2F
 614  8A2F              ; ---------------------------------------------------------------------------------------
 615  8A2F
 616  8A2F 3A AD 89     10 ld a,(Numero_parcial_de_entidades)
 617  8A32 47               ld b,a
 618  8A33 A7           	and a
 619  8A34 20 00        	jr nz,11F
 620  8A36
 621  8A36              ;	ld hl,Ctrl_1;
 622  8A36              ;	bit 4,(hl)
 623  8A36              ;	jp nz,16F
 624  8A36
 625  8A36              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 626  8A36
 627  8A36              ;	ld hl,Ctrl_1
 628  8A36              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 629  8A36
 630  8A36              ;	ld a,(Contador_de_frames)
 631  8A36              ;	inc a
 632  8A36              ;	ld (Activa_recarga_cajas),a
 633  8A36
 634  8A36              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 635  8A36
 636  8A36 3A AE 89     11 ld a,(Entidades_en_curso)
 637  8A39 A7           	and a
 638  8A3A 28 14        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 639  8A3C 47           	ld b,a												; No hay entidades que gestionar.
 640  8A3D
 641  8A3D              ; ( Código que ejecutamos con cada entidad: ).
 642  8A3D
 643  8A3D              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 644  8A3D
 645  8A3D C5           15 push bc 												; Nº de entidades en curso.
 646  8A3E
 647  8A3E CD ED 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 648  8A41
 649  8A41              ; Existe "Entidad_guía" ???.
 650  8A41              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 651  8A41
 652  8A41              ;	ld a,(Ctrl_3)
 653  8A41              ;	bit 1,a
 654  8A41              ;	jr nz,22F
 655  8A41
 656  8A41              ; Almacén de "Movimientos_masticados" lleno ???
 657  8A41              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 658  8A41              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 659  8A41
 660  8A41              ;;	ld a,(Ctrl_3)
 661  8A41              ;;	bit 3,a
 662  8A41              ;;	jr nz,22F
 663  8A41
 664  8A41              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 665  8A41
 666  8A41              ;	ld hl,Ctrl_2
 667  8A41              ;	set 5,(hl)
 668  8A41              ;	ld hl,Ctrl_3
 669  8A41              ;	set 1,(hl)
 670  8A41
 671  8A41              ; Impacto ???
 672  8A41
 673  8A41              ;22 ld a,(Impacto)
 674  8A41              ;	and a
 675  8A41              ;	jr z,8F
 676  8A41
 677  8A41              ; Hay Impacto en esta entidad.
 678  8A41
 679  8A41              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 680  8A41              ;	dec (hl)
 681  8A41              ;	jp nz,17F
 682  8A41
 683  8A41              ;! Velocidad de la animación de la explosión.
 684  8A41
 685  8A41              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 686  8A41              ;														; _,(velocidad de la explosión).
 687  8A41              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 688  8A41
 689  8A41              ;	call Repone_datos_de_borrado
 690  8A41              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 691  8A41
 692  8A41              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 693  8A41
 694  8A41              ;	ld a,(Ctrl_2)
 695  8A41              ;	bit 1,a
 696  8A41              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 697  8A41
 698  8A41              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 699  8A41
 700  8A41              ;	ld a,(CTRL_DESPLZ)
 701  8A41              ;	and a
 702  8A41              ;	jr nz,18F
 703  8A41
 704  8A41              ;	ld hl,Indice_Explosion_2x2-2
 705  8A41              ;	ld (Puntero_DESPLZ_der),hl
 706  8A41              ;	jr 19F
 707  8A41
 708  8A41              ;18 ld hl,Indice_Explosion_2x3-2
 709  8A41              ;	ld (Puntero_DESPLZ_der),hl
 710  8A41
 711  8A41              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 712  8A41              ;	set 1,(hl)
 713  8A41              ;	jr 7F
 714  8A41
 715  8A41              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 716  8A41              ; _con las coordenadas de la entidad almacenada en DRAW.
 717  8A41
 718  8A41              ;8 ld a,(Ctrl_1)
 719  8A41              ;	bit 2,a
 720  8A41              ;	jr z,7F
 721  8A41
 722  8A41              ;	ld hl,(Coordenadas_disparo_certero)
 723  8A41              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 724  8A41              ;														; E contiene la coordenada_X del disparo.
 725  8A41              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 726  8A41              ;														; H FILA, (Coordenada_y de la entidad).
 727  8A41              ;	and a
 728  8A41              ;	sbc hl,de
 729  8A41
 730  8A41              ;	call Determina_resultado_comparativa
 731  8A41
 732  8A41              ;	ld a,b
 733  8A41              ;	and a
 734  8A41              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 735  8A41
 736  8A41              ; ----- ----- -----
 737  8A41
 738  8A41              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 739  8A41              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 740  8A41
 741  8A41              ;	ld hl,Ctrl_1
 742  8A41              ;	res 2,(hl)
 743  8A41
 744  8A41 CD 5D 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 745  8A44
 746  8A44              ;	ld a,(Ctrl_0)
 747  8A44              ;	bit 4,a
 748  8A44              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 749  8A44
 750  8A44              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 751  8A44              ; [[[
 752  8A44              ;	call Detecta_disparo_entidad
 753  8A44              ; ]]]
 754  8A44
 755  8A44 CD 46 88     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 756  8A47
 757  8A47              ;	ld hl,Ctrl_0
 758  8A47              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 759  8A47
 760  8A47 CD 36 88     17 call Store_Restore_cajas
 761  8A4A
 762  8A4A C1           	pop bc
 763  8A4B
 764  8A4B 10 F0        	djnz 15B
 765  8A4D
 766  8A4D CD 1A 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 767  8A50
 768  8A50              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 769  8A50              ; Hemos gestionado todas las unidades.
 770  8A50              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 771  8A50
 772  8A50              ;	ld hl,Ctrl_1
 773  8A50              ;	res 2,(hl)
 774  8A50
 775  8A50 21 C2 89     16 ld hl,Ctrl_3
 776  8A53 CB C6        	set 0,(hl)											; Frame completo.
 777  8A55
 778  8A55 AF           	xor a
 779  8A56 D3 FE        	out ($fe),a
 780  8A58
 781  8A58 76           	halt
 782  8A59
 783  8A59              ; ----------------------------------------
 784  8A59
 785  8A59              ;	ld a,(Ctrl_1) 										; Existe Loop?
 786  8A59              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 787  8A59 CA 0D 8A     	jp z,Main
 788  8A5C
 789  8A5C              ; RECARGA DE NUEVA OLEADA.
 790  8A5C
 791  8A5C              ;	ld a,(Contador_de_frames)
 792  8A5C              ;	ld b,a
 793  8A5C              ;	ld a,(Activa_recarga_cajas)
 794  8A5C              ;	cp b
 795  8A5C              ;	jr z,20F
 796  8A5C
 797  8A5C              ;	ld hl,Ctrl_1
 798  8A5C              ;	set 4,(hl)
 799  8A5C              ;	jp Main
 800  8A5C
 801  8A5C              ;20 ld hl,Ctrl_1
 802  8A5C              ;	res 4,(hl)
 803  8A5C
 804  8A5C              ;	ld a,(Contador_de_frames)
 805  8A5C
 806  8A5C              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 807  8A5C              ;! _ IMPREDECIBLE !!!!
 808  8A5C
 809  8A5C              ;	add 10
 810  8A5C              ;	ld (Clock_Entidades_en_curso),a
 811  8A5C
 812  8A5C              ;	jp 4B
 813  8A5C
 814  8A5C C9           	ret
 815  8A5D
 816  8A5D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 817  8A5D              ;
 818  8A5D              ;	16/11/23
 819  8A5D
 820  8A5D              ;;Gestiona_Amadeus
 821  8A5D
 822  8A5D              ;! Activa/desactiva impacto con Amadeus.
 823  8A5D
 824  8A5D              ;	ld a,(Impacto)
 825  8A5D              ;	and a
 826  8A5D              ;	jr nz,2F
 827  8A5D
 828  8A5D              ;;	call Mov_Amadeus
 829  8A5D
 830  8A5D              ;;2 ld a,(Ctrl_0)
 831  8A5D              ;;	bit 4,a
 832  8A5D              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 833  8A5D
 834  8A5D              ;;	call Guarda_foto_entidad_a_pintar
 835  8A5D              ;;	call Guarda_datos_de_borrado_Amadeus
 836  8A5D
 837  8A5D              ;;1 ld hl,Ctrl_0
 838  8A5D              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 839  8A5D
 840  8A5D              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 841  8A5D
 842  8A5D              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 843  8A5D
 844  8A5D              ;	call Calcula_numero_de_disparotes
 845  8A5D
 846  8A5D              ;;	ret
 847  8A5D
 848  8A5D              ; --------------------------------------------------------------------------------------------------------------
 849  8A5D              ;
 850  8A5D              ;	15/12/23
 851  8A5D
 852  8A5D              Mov_obj
 853  8A5D
 854  8A5D              ;	ld a,(Ctrl_2)
 855  8A5D              ;	bit 1,a
 856  8A5D              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 857  8A5D
 858  8A5D              ; Explosión:
 859  8A5D
 860  8A5D              ;	ld a,(Frames_explosion)
 861  8A5D              ;	and a
 862  8A5D              ;	jr nz,4F
 863  8A5D
 864  8A5D              ;!  Una alimaña menos!!!!!!!!!1
 865  8A5D
 866  8A5D              ; Se trataba de una Entidad_guía ???
 867  8A5D
 868  8A5D              ;	ld a,(Ctrl_2)
 869  8A5D              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 870  8A5D              ;	jr z,5F
 871  8A5D
 872  8A5D              ;	ld hl,Ctrl_3
 873  8A5D              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 874  8A5D
 875  8A5D              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 876  8A5D              ;!! _generado puede ser distinto, (aletoriedad).
 877  8A5D
 878  8A5D              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 879  8A5D              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 880  8A5D              ;	dec (hl)
 881  8A5D              ;	ld hl,Entidades_en_curso
 882  8A5D              ;	dec (hl)
 883  8A5D              ;	ld hl,Numero_de_entidades
 884  8A5D              ;	dec (hl)
 885  8A5D              ;	jr 3F
 886  8A5D
 887  8A5D              ; -----
 888  8A5D
 889  8A5D              ;	`Movemos´ la explosión.
 890  8A5D
 891  8A5D              ;4 ld hl,(Puntero_DESPLZ_der)
 892  8A5D              ;	inc hl
 893  8A5D              ;	inc hl
 894  8A5D              ;	call Extrae_address
 895  8A5D              ;;	ld (Puntero_objeto),hl
 896  8A5D
 897  8A5D              ;;	ld hl,Frames_explosion
 898  8A5D              ;;	dec (hl)
 899  8A5D
 900  8A5D              ;;	ld hl,Ctrl_0
 901  8A5D              ;;	set 4,(hl);;
 902  8A5D
 903  8A5D              ;;	jr 3F
 904  8A5D
 905  8A5D              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 906  8A5D
 907  8A5D              ;2 xor a
 908  8A5D              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 909  8A5D
 910  8A5D              ; Movemos Entidades malignas.
 911  8A5D              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 912  8A5D
 913  8A5D              ;	ld a,(Ctrl_2)
 914  8A5D              ;	bit 5,a
 915  8A5D              ;	jr nz,8F
 916  8A5D
 917  8A5D              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 918  8A5D              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 919  8A5D              ;	jr 7F
 920  8A5D
 921  8A5D              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 922  8A5D
 923  8A5D              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 924  8A5D              ;	bit 4,a
 925  8A5D              ;	ret z
 926  8A5D
 927  8A5D              ; Ha habido desplazamiento de la entidad maligna.
 928  8A5D              ; Ha llegado a zona de AMADEUS ???
 929  8A5D
 930  8A5D              ;7 ld a,(Coordenada_y)
 931  8A5D              ;	cp $14
 932  8A5D              ;	jr c,1F
 933  8A5D
 934  8A5D              ; ---------
 935  8A5D
 936  8A5D              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 937  8A5D              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 938  8A5D
 939  8A5D              ;	di
 940  8A5D              ;	call Genera_coordenadas_X
 941  8A5D              ;	call Compara_coordenadas_X
 942  8A5D              ;	ei
 943  8A5D
 944  8A5D              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 945  8A5D
 946  8A5D              ; ---------
 947  8A5D
 948  8A5D              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 949  8A5D CD CB 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 950  8A60 CD 58 8B     	call Limpia_Variables_de_borrado
 951  8A63
 952  8A63 C9           3 ret
 953  8A64
 954  8A64              ; --------------------------------------------------------------------------------------------------------------
 955  8A64              ;
 956  8A64              ;	29/1/23
 957  8A64
 958  8A64              Mov_Amadeus
 959  8A64
 960  8A64              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 961  8A64
 962  8A64 CD AA 98     	call Mov_right
 963  8A67
 964  8A67 3A 84 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 965  8A6A CB 67        	bit 4,a
 966  8A6C C8           	ret z
 967  8A6D
 968  8A6D              ; ---------
 969  8A6D
 970  8A6D              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 971  8A6D CD BB 8C     	call Repone_datos_de_borrado_Amadeus
 972  8A70 CD 58 8B     	call Limpia_Variables_de_borrado
 973  8A73
 974  8A73 C9           	ret
 975  8A74
 976  8A74              ; -----------------------------------------------------------------------------------
 977  8A74              ;
 978  8A74              ;	20/01/24
 979  8A74              ;
 980  8A74              ;
 981  8A74
 982  8A74              Construye_movimientos_masticados_entidad
 983  8A74
 984  8A74 2A 80 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 985  8A77 E5           	push hl
 986  8A78 CD BC 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 987  8A7B              ;															; _ el (Contador_de_mov_masticados).
 988  8A7B CD B8 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 989  8A7E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 990  8A7E CD 06 98     	call Recompone_posicion_inicio
 991  8A81
 992  8A81 CD DC 91     1 call Draw
 993  8A84 CD A0 8A     	call Guarda_movimiento_masticado
 994  8A87
 995  8A87 CD 6F 9D     	call Movimiento
 996  8A8A
 997  8A8A 3A C2 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 998  8A8D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
 999  8A8F 28 F0        	jr z,1B
1000  8A91
1001  8A91              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1002  8A91              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1003  8A91
1004  8A91 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1005  8A92 22 80 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1006  8A95
1007  8A95              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1008  8A95
1009  8A95 CD E0 9E     	call Situa_en_contador_general_de_mov_masticados
1010  8A98
1011  8A98              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1012  8A98              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1013  8A98
1014  8A98 ED 4B 82 89  	ld bc,(Contador_de_mov_masticados)
1015  8A9C 71           	ld (hl),c
1016  8A9D 23           	inc hl
1017  8A9E 70           	ld (hl),b
1018  8A9F
1019  8A9F C9           	ret
1020  8AA0
1021  8AA0              ; -----------------------------------------------------------------------------------
1022  8AA0              ;
1023  8AA0              ;	28/12/23
1024  8AA0              ;
1025  8AA0              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1026  8AA0              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1027  8AA0
1028  8AA0              Guarda_movimiento_masticado
1029  8AA0
1030  8AA0 ED 73 B4 89  	ld (Stack),sp
1031  8AA4 ED 7B 80 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1032  8AA8
1033  8AA8 E5           	push hl
1034  8AA9 DD E5            push ix
1035  8AAB FD E5            push iy
1036  8AAD
1037  8AAD ED 7B B4 89      ld sp,(Stack)
1038  8AB1
1039  8AB1              ;    push hl
1040  8AB1
1041  8AB1 2A 82 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1042  8AB4 23           	inc hl
1043  8AB5 22 82 89     	ld (Contador_de_mov_masticados),hl
1044  8AB8
1045  8AB8              ;	pop hl
1046  8AB8
1047  8AB8 CD BC 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1048  8ABB              ;															; _ el (Contador_de_mov_masticados).
1049  8ABB C9               ret
1050  8ABC
1051  8ABC              ; --------------------------------------------------------------------------------------------------------------
1052  8ABC              ;
1053  8ABC              ;	12/1/24
1054  8ABC              ;
1055  8ABC              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1056  8ABC
1057  8ABC              Actualiza_Puntero_de_almacen_de_mov_masticados
1058  8ABC
1059  8ABC              ;	push hl
1060  8ABC              ;	push bc
1061  8ABC
1062  8ABC 2A 80 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1063  8ABF 01 06 00     	ld bc,6
1064  8AC2 A7           	and a
1065  8AC3 ED 4A        	adc hl,bc
1066  8AC5 22 80 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1067  8AC8
1068  8AC8              ;	pop bc
1069  8AC8              ;	pop hl
1070  8AC8
1071  8AC8 C9           	ret
1072  8AC9
1073  8AC9              ; --------------------------------------------------------------------------------------------------------------
1074  8AC9              ;
1075  8AC9              ;	15/01/24
1076  8AC9              ;
1077  8AC9              ;	Cargamos los registros_
1078  8AC9              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1079  8AC9              ;
1080  8AC9              ;	HL contiene la dirección de la rutina de impresión.
1081  8AC9              ;	IX contiene el puntero de impresión.
1082  8AC9              ;	IY contiene (Puntero_objeto).
1083  8AC9
1084  8AC9
1085  8AC9 ED 73 B4 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1086  8ACD ED 7B 80 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1087  8AD1
1088  8AD1 FD E1        	pop iy
1089  8AD3 DD E1        	pop ix
1090  8AD5 E1           	pop hl
1091  8AD6
1092  8AD6 ED 73 80 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1093  8ADA
1094  8ADA ED 7B B4 89  	ld sp,(Stack)
1095  8ADE
1096  8ADE C9           	ret
1097  8ADF
1098  8ADF              ; --------------------------------------------------------------------------------------------------------------
1099  8ADF              ;
1100  8ADF              ;	28/12/23
1101  8ADF              ;
1102  8ADF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1103  8ADF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1104  8ADF
1105  8ADF              Guarda_foto_entidad_a_pintar
1106  8ADF
1107  8ADF 3A 84 89     	ld a,(Ctrl_0)
1108  8AE2 CB 77        	bit 6,a
1109  8AE4 28 04        	jr z,5F
1110  8AE6
1111  8AE6              ;	Guarda la foto de Amadeus.
1112  8AE6
1113  8AE6              ;	call Draw
1114  8AE6              ;	call Guarda_movimiento_masticado	;! Provisional
1115  8AE6 CD BF 80     	call Guarda_foto_registros
1116  8AE9 C9           	ret
1117  8AEA
1118  8AEA              ; ENTIDADES!
1119  8AEA              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1120  8AEA
1121  8AEA 3A C2 89     5 ld a,(Ctrl_3)
1122  8AED CB 5F        	bit 3,a
1123  8AEF 28 01        	jr z,1F
1124  8AF1
1125  8AF1              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1126  8AF1
1127  8AF1              4
1128  8AF1              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1129  8AF1 C9           	ret
1130  8AF2
1131  8AF2              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1132  8AF2
1133  8AF2 3A C2 89     1 ld a,(Ctrl_3)
1134  8AF5 CB 57        	bit 2,a
1135  8AF7 20 10        	jr nz,6F
1136  8AF9
1137  8AF9              ; Entidad guía o fantasma ???
1138  8AF9
1139  8AF9 3A 89 89     	ld a,(Ctrl_2)
1140  8AFC CB 6F        	bit 5,a
1141  8AFE 20 10        	jr nz,3F
1142  8B00
1143  8B00              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1144  8B00
1145  8B00 18 EF        	jr 4B
1146  8B02
1147  8B02              ; ENTIDAD_GUÍA:
1148  8B02              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1149  8B02              ; _guardando "movimientos_masticados".
1150  8B02
1151  8B02 3A C2 89     2 ld a,(Ctrl_3)
1152  8B05 CB 57        	bit 2,a
1153  8B07 28 07        	jr z,3F
1154  8B09
1155  8B09              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1156  8B09              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1157  8B09
1158  8B09 CB 97        6 res 2,a
1159  8B0B CB DF        	set 3,a
1160  8B0D 32 C2 89     	ld (Ctrl_3),a
1161  8B10
1162  8B10
1163  8B10              ;	Esto sólo lo ejecuta una entidad guía.
1164  8B10
1165  8B10 CD DC 91     3 	call Draw
1166  8B13 CD A0 8A     	call Guarda_movimiento_masticado
1167  8B16 CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1168  8B19
1169  8B19              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1170  8B19              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1171  8B19
1172  8B19              ;	call Convierte_guia_en_fantasma
1173  8B19 C9           	ret
1174  8B1A
1175  8B1A              ; --------------------------------------------------------------------------------------------------------------
1176  8B1A              ;
1177  8B1A              ;	19/9/23
1178  8B1A
1179  8B1A              ;Prepara_var_pintado
1180  8B1A
1181  8B1A              ;	ld hl,Filas
1182  8B1A              ;	ld de,Variables_de_pintado
1183  8B1A              ;	ld bc,8
1184  8B1A              ;	ldir
1185  8B1A              ;	ret
1186  8B1A
1187  8B1A              ; --------------------------------------------------------------------------------------------------------------
1188  8B1A
1189  8B1A              ;Repone_pintar
1190  8B1A
1191  8B1A              ;	ld hl,Variables_de_pintado
1192  8B1A              ;	ld de,Filas
1193  8B1A              ;	ld bc,8
1194  8B1A              ;	ldir
1195  8B1A              ;	ret
1196  8B1A
1197  8B1A              ; *************************************************************************************************************************************************************
1198  8B1A              ;
1199  8B1A              ; 8/1/23
1200  8B1A              ;
1201  8B1A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1202  8B1A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1203  8B1A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1204  8B1A
1205  8B1A              ; Destruye HL y DE !!!!!
1206  8B1A
1207  8B1A              Inicia_punteros_de_cajas
1208  8B1A
1209  8B1A 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1210  8B1D CD B2 8B         call Extrae_address
1211  8B20 22 A6 89         ld (Puntero_store_caja),hl
1212  8B23 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1213  8B26 22 AA 89     	ld (Indice_restore_caja),hl
1214  8B29 CD B2 8B     	call Extrae_address
1215  8B2C 22 A8 89     	ld (Puntero_restore_caja),hl
1216  8B2F C9               ret
1217  8B30
1218  8B30              ; *************************************************************************************************************************************************************
1219  8B30              ;
1220  8B30              ; 8/1/23
1221  8B30              ;
1222  8B30              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1223  8B30
1224  8B30 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1225  8B33 22 C5 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1226  8B36 C9           	ret
1227  8B37 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1228  8B3A 22 C7 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1229  8B3D C9           	ret
1230  8B3E
1231  8B3E              ; -------------------------------------------------------------------------------------------------------------
1232  8B3E              ;
1233  8B3E              ; 21/9/23
1234  8B3E              ;
1235  8B3E
1236  8B3E              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1237  8B3E
1238  8B3E              Limpia_album_Amadeus
1239  8B3E
1240  8B3E 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1241  8B41 7E           	ld a,(hl)
1242  8B42 A7           	and a
1243  8B43 C8           	ret z
1244  8B44
1245  8B44 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1246  8B47 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1247  8B4A 01 0B 00     	ld bc,11
1248  8B4D AF           	xor a
1249  8B4E 77           	ld (hl),a
1250  8B4F ED B0        	ldir
1251  8B51
1252  8B51 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1253  8B54 22 C0 89     	ld (End_Snapshot_Amadeus),hl
1254  8B57
1255  8B57 C9           	ret
1256  8B58
1257  8B58 21 78 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1258  8B5B 11 79 89     	ld de,Variables_de_borrado+1
1259  8B5E 01 05 00     	ld bc,5
1260  8B61 AF           	xor a
1261  8B62 77           	ld (hl),a
1262  8B63 ED B0        	ldir
1263  8B65 C9           	ret
1264  8B66
1265  8B66              ; -------------------------------------------------------------------------------------------------------------
1266  8B66              ;
1267  8B66              ; 8/9/23
1268  8B66              ;
1269  8B66
1270  8B66              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1271  8B66              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1272  8B66
1273  8B66              Calcula_numero_de_malotes
1274  8B66
1275  8B66 21 00 80     	ld hl,Album_de_fotos
1276  8B69 EB           	ex de,hl
1277  8B6A 2A BA 89     	ld hl,(Stack_snapshot)
1278  8B6D
1279  8B6D 06 00        	ld b,0
1280  8B6F 7D           	ld a,l
1281  8B70 93           	sub e
1282  8B71 28 07        	jr z,1F
1283  8B73
1284  8B73              ; Nº de malotes no es "0".
1285  8B73
1286  8B73 D6 06        2 sub 6
1287  8B75 04           	inc b
1288  8B76 A7           	and a
1289  8B77 20 FA        	jr nz,2B
1290  8B79 78           	ld a,b
1291  8B7A
1292  8B7A 32 AF 89     1 ld (Numero_de_malotes),a
1293  8B7D C9           	ret
1294  8B7E
1295  8B7E              ; -------------------------------------------------------------------------------------------------------------
1296  8B7E              ;
1297  8B7E              ; 8/9/23
1298  8B7E              ;
1299  8B7E
1300  8B7E              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1301  8B7E              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1302  8B7E
1303  8B7E              Calcula_malotes_Amadeus
1304  8B7E
1305  8B7E 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1306  8B81 EB           	ex de,hl
1307  8B82 2A C0 89     	ld hl,(End_Snapshot_Amadeus)
1308  8B85
1309  8B85 7C           	ld a,h
1310  8B86 A7           	and a
1311  8B87 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1312  8B89
1313  8B89 06 00        	ld b,0
1314  8B8B 7D           	ld a,l
1315  8B8C 93           	sub e
1316  8B8D 28 07        	jr z,1F
1317  8B8F
1318  8B8F              ; Nº de malotes no es "0".
1319  8B8F
1320  8B8F D6 06        2 sub 6
1321  8B91 04           	inc b
1322  8B92 A7           	and a
1323  8B93 20 FA        	jr nz,2B
1324  8B95 78           	ld a,b
1325  8B96
1326  8B96 32 AF 89     1 ld (Numero_de_malotes),a
1327  8B99 C9           	ret
1328  8B9A
1329  8B9A              ; -------------------------------------------------------------------------------------------------------------
1330  8B9A              ;
1331  8B9A              ; 28/2/23
1332  8B9A              ;
1333  8B9A
1334  8B9A              Calcula_numero_de_disparotes
1335  8B9A
1336  8B9A 21 56 80     	ld hl,Album_de_fotos_disparos
1337  8B9D EB           	ex de,hl
1338  8B9E 2A BE 89     	ld hl,(End_Snapshot_disparos)
1339  8BA1
1340  8BA1 06 00        	ld b,0
1341  8BA3 7D           	ld a,l
1342  8BA4 93           	sub e
1343  8BA5 28 07        	jr z,1F
1344  8BA7
1345  8BA7              ; Nº de malotes no es "0".
1346  8BA7
1347  8BA7 D6 06        2 sub 6
1348  8BA9 04           	inc b
1349  8BAA A7           	and a
1350  8BAB 20 FA        	jr nz,2B
1351  8BAD 78           	ld a,b
1352  8BAE
1353  8BAE 32 C4 89     1 ld (Numero_de_disparotes),a
1354  8BB1 C9           	ret
1355  8BB2
1356  8BB2              ; *************************************************************************************************************************************************************
1357  8BB2              ;
1358  8BB2              ; 20/10/22
1359  8BB2              ;
1360  8BB2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1361  8BB2              ;
1362  8BB2              ; Destruye el puntero y DE !!!!!
1363  8BB2
1364  8BB2 5E           Extrae_address ld e,(hl)
1365  8BB3 23           	inc hl
1366  8BB4 56           	ld d,(hl)
1367  8BB5 2B           	dec hl
1368  8BB6 EB           	ex de,hl
1369  8BB7 C9           	ret
1370  8BB8
1371  8BB8              ; *************************************************************************************************************************************************************
1372  8BB8              ;
1373  8BB8              ;	20/1/24
1374  8BB8              ;
1375  8BB8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1376  8BB8              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1377  8BB8              ;
1378  8BB8              ;   Destruye HL y BC !!!!!,
1379  8BB8              ;
1380  8BB8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1381  8BB8              ;					"0" ..... Izquierda.
1382  8BB8
1383  8BB8              Inicia_Puntero_objeto
1384  8BB8
1385  8BB8 3A 76 89     	ld a,(Cuad_objeto)
1386  8BBB E6 01        	and 1
1387  8BBD F5           	push af
1388  8BBE CC DA 8B     	call z,Inicia_puntero_objeto_izq
1389  8BC1 F1           	pop af
1390  8BC2 C8           	ret z
1391  8BC3 CD C7 8B     	call Inicia_puntero_objeto_der
1392  8BC6 C9           	ret
1393  8BC7
1394  8BC7              ; Arrancamos desde la parte izquierda de la pantalla.
1395  8BC7              ; Iniciamos (Indice_Sprite_der).
1396  8BC7
1397  8BC7 2A 6C 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1398  8BCA 22 70 89     	ld (Puntero_DESPLZ_der),hl
1399  8BCD CD B2 8B     	call Extrae_address
1400  8BD0 22 66 89     	ld (Puntero_objeto),hl
1401  8BD3
1402  8BD3 2A 6E 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1403  8BD6 22 72 89     	ld (Puntero_DESPLZ_izq),hl
1404  8BD9 C9           	ret
1405  8BDA
1406  8BDA              ; Arrancamos desde la parte derecha de la pantalla.
1407  8BDA              ; Iniciamos (Indice_Sprite_izq).
1408  8BDA
1409  8BDA 2A 6E 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1410  8BDD 22 72 89     	ld (Puntero_DESPLZ_izq),hl
1411  8BE0 CD B2 8B     	call Extrae_address
1412  8BE3 22 66 89     	ld (Puntero_objeto),hl
1413  8BE6
1414  8BE6 2A 6C 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1415  8BE9 22 70 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1416  8BEC C9           	ret
1417  8BED
1418  8BED              ; **************************************************************************************************
1419  8BED              ;
1420  8BED              ;	31/01/24
1421  8BED              ;
1422  8BED              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1423  8BED
1424  8BED              Restore_entidad
1425  8BED
1426  8BED 2A A6 89     	ld hl,(Puntero_store_caja)
1427  8BF0 11 61 89     	ld de,Bandeja_DRAW
1428  8BF3 7E           	ld a,(hl)
1429  8BF4 12           	ld (de),a
1430  8BF5 23           	inc hl 											; (Tipo).
1431  8BF6
1432  8BF6 11 68 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1433  8BF9 01 02 00     	ld bc,2
1434  8BFC ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1435  8BFE
1436  8BFE 13           	inc de
1437  8BFF 7E           	ld a,(hl)
1438  8C00 12           	ld (de),a 										; Transferimos (Attr).
1439  8C01 23           	inc hl
1440  8C02
1441  8C02 11 77 89     	ld de,Impacto
1442  8C05
1443  8C05 7E           	ld a,(hl)
1444  8C06 12           	ld (de),a 										; Transferimos (Impacto).
1445  8C07 23           	inc hl
1446  8C08
1447  8C08 13           	inc de
1448  8C09
1449  8C09 01 06 00     	ld bc,6
1450  8C0C ED B0        	ldir
1451  8C0E
1452  8C0E 01 07 00     	ld bc,7
1453  8C11 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1454  8C13              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1455  8C13 11 89 89     	ld de,Ctrl_2
1456  8C16
1457  8C16 7E           	ld a,(hl)
1458  8C17 12           	ld (de),a 										; Transferimos (Ctrl_2).
1459  8C18
1460  8C18 C9           	ret
1461  8C19
1462  8C19              ; **************************************************************************************************
1463  8C19              ;
1464  8C19              ;	08/05/23
1465  8C19              ;
1466  8C19              ;	Incrementamos los dos punteros de entidades. (+1).
1467  8C19
1468  8C19              Incrementa_punteros_de_cajas
1469  8C19
1470  8C19 2A A8 89     	ld hl,(Puntero_restore_caja)
1471  8C1C 22 A6 89     	ld (Puntero_store_caja),hl
1472  8C1F 2A AA 89     	ld hl,(Indice_restore_caja)
1473  8C22 23           	inc hl
1474  8C23 23           	inc hl
1475  8C24 22 AA 89     	ld (Indice_restore_caja),hl
1476  8C27 CD B2 8B         call Extrae_address
1477  8C2A 22 A8 89         ld (Puntero_restore_caja),hl
1478  8C2D C9               ret
1479  8C2E
1480  8C2E              ; **************************************************************************************************
1481  8C2E              ;
1482  8C2E              ;	21/12/23
1483  8C2E              ;
1484  8C2E              ;	Restore_Amadeus
1485  8C2E              ;
1486  8C2E              ;	Cargamos en DRAW los parámetros de Amadeus.
1487  8C2E              ;
1488  8C2E
1489  8C2E E5           Restore_Amadeus	push hl
1490  8C2F D5           	push de
1491  8C30 C5            	push bc
1492  8C31 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1493  8C34 11 61 89     	ld de,Bandeja_DRAW
1494  8C37 01 2A 00     	ld bc,42
1495  8C3A ED B0        	ldir
1496  8C3C C1           	pop bc
1497  8C3D D1           	pop de
1498  8C3E E1           	pop hl
1499  8C3F C9           	ret
1500  8C40
1501  8C40              ; *************************************************************************************************************************************************************
1502  8C40              ;
1503  8C40              ;	21/12/23
1504  8C40              ;
1505  8C40              ;	Store_Amadeus
1506  8C40              ;
1507  8C40              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1508  8C40              ;
1509  8C40              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1510  8C40              ;
1511  8C40              ;	DESTRUYE: HL y BC y DE.
1512  8C40
1513  8C40 21 61 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1514  8C43 01 2A 00     	ld bc,42
1515  8C46 ED B0        	ldir
1516  8C48 C9           	ret
1517  8C49
1518  8C49              ; -----------------------------------------------------------
1519  8C49              ;
1520  8C49              ;	21/12/23
1521  8C49              ;
1522  8C49              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1523  8C49              ;
1524  8C49              ;	Destruye: HL,BC,DE,A
1525  8C49
1526  8C49 21 61 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1527  8C4C 01 29 00     	ld bc,41
1528  8C4F AF           	xor a
1529  8C50 77           	ld (hl),a
1530  8C51 11 62 89     	ld de,Bandeja_DRAW+1
1531  8C54 ED B0        	ldir
1532  8C56 C9           	ret
1533  8C57
1534  8C57              ; -----------------------------------------------------------
1535  8C57
1536  8C57              ; Teclado.
1537  8C57
1538  8C57 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1539  8C59 DB FE        	in a,($fe)
1540  8C5B E6 01        	and $01
1541  8C5D 28 02        	jr z,1f
1542  8C5F 18 F6        	jr Pulsa_ENTER
1543  8C61 C9           1 ret
1544  8C62
1545  8C62              ; **************************************************************************************************
1546  8C62              ;
1547  8C62              ; Temporización.
1548  8C62
1549  8C62              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1550  8C62              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1551  8C62              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1552  8C62              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1553  8C62
1554  8C62              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1555  8C62              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1556  8C62              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1557  8C62
1558  8C62              ; A partir de $4f61 no hace falta DELAY.
1559  8C62
1560  8C62              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1561  8C62
1562  8C62 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1563  8C65 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1564  8C66 78           	LD A,B
1565  8C67 A7           	AND A
1566  8C68 20 FB        	JR NZ,wait
1567  8C6A C9           	RET
1568  8C6B
1569  8C6B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1570  8C6B              ;
1571  8C6B              ;	5/3/23
1572  8C6B              ;
1573  8C6B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1574  8C6B
1575  8C6B              Movimiento_Amadeus
1576  8C6B
1577  8C6B              ; Disparo.
1578  8C6B
1579  8C6B 3A DA 89     	ld a,(Disparo_Amadeus)
1580  8C6E A7           	and a
1581  8C6F 20 02        	jr nz,1F
1582  8C71 18 15        	jr 2F
1583  8C73
1584  8C73 3E F7        1 ld a,$f7													; "5" para disparar.
1585  8C75 DB FE        	in a,($fe)
1586  8C77 E6 10        	and $10
1587  8C79
1588  8C79 F5           	push af
1589  8C7A CC 08 8D     	call z,Genera_disparo
1590  8C7D F1           	pop af
1591  8C7E 20 08        	jr nz,2F
1592  8C80
1593  8C80 3A DA 89     	ld a,(Disparo_Amadeus)
1594  8C83 EE 01        	xor 1
1595  8C85 32 DA 89     	ld (Disparo_Amadeus),a
1596  8C88 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1597  8C8A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1598  8C8C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1599  8C8E CC CD 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1600  8C91
1601  8C91 3E F7        	ld a,$f7
1602  8C93 DB FE        	in a,($fe)
1603  8C95 E6 01        	and $01
1604  8C97 C8           	ret z
1605  8C98
1606  8C98 3E F7        	ld a,$f7
1607  8C9A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1608  8C9C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1609  8C9E CC AA 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1610  8CA1 C9           	ret
1611  8CA2
1612  8CA2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1613  8CA2              ;
1614  8CA2              ;	Rutina provisional para que los malotes cagen balas.
1615  8CA2
1616  8CA2              Detecta_disparo_entidad
1617  8CA2
1618  8CA2 3A DD 89     	ld a,(Disparo_entidad)
1619  8CA5 A7           	and a
1620  8CA6 C8           	ret z
1621  8CA7
1622  8CA7              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1623  8CA7
1624  8CA7              ;	ld a,$7f				; Detecta SPACE.
1625  8CA7              ;	in a,($fe)
1626  8CA7              ;	and 1
1627  8CA7              ;	ret nz
1628  8CA7
1629  8CA7 CD 08 8D     	call Genera_disparo
1630  8CAA C9           	ret
1631  8CAB
1632  8CAB              ; ----------------------------------------------------------------------
1633  8CAB              ;
1634  8CAB              ;	8/9/23
1635  8CAB
1636  8CAB 2A C0 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1637  8CAE 2B            	dec hl
1638  8CAF 7E           	ld a,(hl)
1639  8CB0 A7           	and a
1640  8CB1 C8           	ret z										; Salimos si es álbum está vacío.
1641  8CB2
1642  8CB2 11 7D 89     	ld de,Variables_de_borrado+5
1643  8CB5 01 06 00     	ld bc,6
1644  8CB8 ED B8        	lddr
1645  8CBA C9           	ret
1646  8CBB
1647  8CBB              ; ----------------------------------------------------------------------
1648  8CBB              ;
1649  8CBB              ;	9/9/23
1650  8CBB
1651  8CBB              Repone_datos_de_borrado_Amadeus
1652  8CBB
1653  8CBB 21 78 89     	ld hl,Variables_de_borrado
1654  8CBE 11 AC 80     	ld de,Album_de_fotos_Amadeus
1655  8CC1 01 06 00     	ld bc,6
1656  8CC4 ED B0        	ldir
1657  8CC6
1658  8CC6 EB           	ex de,hl
1659  8CC7 22 C0 89     	ld (End_Snapshot_Amadeus),hl
1660  8CCA
1661  8CCA C9           	ret
1662  8CCB
1663  8CCB              ; ----------------------------------------------------------------------
1664  8CCB              ;
1665  8CCB              ;	27/10/23
1666  8CCB              ;
1667  8CCB
1668  8CCB              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1669  8CCB              ;	_ Album_de_fotos correspondiente.
1670  8CCB
1671  8CCB              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1672  8CCB              ;	_ durante el proceso de escritura.
1673  8CCB
1674  8CCB              Repone_datos_de_borrado
1675  8CCB
1676  8CCB ED 5B BA 89  	ld de,(Stack_snapshot)
1677  8CCF 21 78 89     	ld hl,Variables_de_borrado
1678  8CD2 01 06 00     	ld bc,6
1679  8CD5 ED B0        	ldir
1680  8CD7
1681  8CD7 EB           	ex de,hl
1682  8CD8 22 BA 89     	ld (Stack_snapshot),hl
1683  8CDB
1684  8CDB C9           	ret
1685  8CDC
1686  8CDC              ; --------------------------------------------------------------------------------------
1687  8CDC
1688  8CDC              Pinta_Amadeus
1689  8CDC
1690  8CDC CD 7E 8B        	call Calcula_malotes_Amadeus
1691  8CDF CD 75 95     	call Extrae_foto_Amadeus
1692  8CE2 CD 3E 8B     	call Limpia_album_Amadeus
1693  8CE5
1694  8CE5 C9           	ret
1695  8CE6
1696  8CE6              Pinta_entidades
1697  8CE6
1698  8CE6              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1699  8CE6
1700  8CE6 3A C2 89     	ld a,(Ctrl_3)
1701  8CE9 CB 47        	bit 0,a
1702  8CEB C8           	ret z
1703  8CEC
1704  8CEC CD 66 8B     	call Calcula_numero_de_malotes
1705  8CEF CD F3 94     	call Extrae_foto_entidades
1706  8CF2 CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1707  8CF5
1708  8CF5 C9           	ret
1709  8CF6
1710  8CF6              ; -----------------------------------------------------------------------------------
1711  8CF6              ;
1712  8CF6              ;	10/12/23
1713  8CF6              ;
1714  8CF6              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1715  8CF6
1716  8CF6              Actualiza_relojes
1717  8CF6
1718  8CF6 3A C2 89     	ld a,(Ctrl_3)
1719  8CF9 CB 47        	bit 0,a
1720  8CFB C8           	ret z 						;	Salimos si no hemos pintado unidades.
1721  8CFC
1722  8CFC 21 D5 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1723  8CFF 34           	inc (hl)
1724  8D00
1725  8D00 34           	inc (hl)
1726  8D01 35           	dec (hl)
1727  8D02 C0           	ret nz
1728  8D03
1729  8D03 21 D6 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1730  8D06 34           	inc (hl)
1731  8D07 C9           	ret
1732  8D08
1733  8D08              ; ---------------------------------------------------------------
1734  8D08              ;
1735  8D08              ;	21/12/23
1736  8D08
1737  8D08              ;Guarda_parametros_DRAW
1738  8D08
1739  8D08              ;	ld hl,Bandeja_DRAW
1740  8D08              ;	ld de,Almacen_de_parametros_DRAW
1741  8D08              ;	ld bc,42
1742  8D08              ;	ldir
1743  8D08              ;	ret
1744  8D08
1745  8D08              ;Recupera_parametros_DRAW
1746  8D08
1747  8D08              ;	ld hl,Almacen_de_parametros_DRAW
1748  8D08              ;	ld de,Bandeja_DRAW
1749  8D08              ;	ld bc,42
1750  8D08              ;	ldir
1751  8D08              ;	ret
1752  8D08
1753  8D08              ; ---------------------------------------------------------------
1754  8D08
1755  8D08              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D08              ; ******************************************************************************************************************************************************************************************
   2+ 8D08              ;
   3+ 8D08              ;   21/07/23
   4+ 8D08              ;
   5+ 8D08              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D08              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D08              ;
   8+ 8D08              ;
   9+ 8D08              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D08              ;
  11+ 8D08              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D08              ;               _ hacen las entidades hacia abajo.
  13+ 8D08              ;
  14+ 8D08              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D08              ;
  16+ 8D08              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D08              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D08              ;
  19+ 8D08              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D08              ;           _ la bala.
  21+ 8D08              ;
  22+ 8D08              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D08              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D08              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D08              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D08              ;           _ en el momento de generarse la bala)).
  27+ 8D08
  28+ 8D08              Genera_disparo
  29+ 8D08
  30+ 8D08              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D08              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D08              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D08              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D08              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D08              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D08              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D08
  38+ 8D08              ; Exclusiones:
  39+ 8D08
  40+ 8D08 3A 8E 89         ld a,(Vel_down)
  41+ 8D0B 47               ld b,a
  42+ 8D0C 3A D4 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D0F B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D10 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D11 3A 85 89         ld a,(Columnas)
  46+ 8D14 47               ld b,a
  47+ 8D15 3A 63 89         ld a,(Columns)
  48+ 8D18 B8               cp b
  49+ 8D19 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D1A
  51+ 8D1A              ; ----- ----- -----
  52+ 8D1A
  53+ 8D1A 3A 84 89         ld a,(Ctrl_0)
  54+ 8D1D CB 77            bit 6,a
  55+ 8D1F 20 06            jr nz,14F
  56+ 8D21
  57+ 8D21 3A 69 89         ld a,(Coordenada_y)
  58+ 8D24 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D26 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D27
  61+ 8D27 21 31 81     14 ld hl,Indice_disparo
  62+ 8D2A 3A 6A 89         ld a,(CTRL_DESPLZ)
  63+ 8D2D 4F               ld c,a
  64+ 8D2E 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D30              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D30              ;                                            ""        ""       "f9", B="1"
  67+ 8D30              ;                                            ""        ""       "fb", B="2"
  68+ 8D30              ;                                            ""        ""       "fb", B="3"
  69+ 8D30 A7               and a
  70+ 8D31 28 10            jr z,1F
  71+ 8D33 E6 01            and 1
  72+ 8D35 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D36
  74+ 8D36 79               ld a,c
  75+ 8D37 16 F9            ld d,$f9
  76+ 8D39 23           2 inc hl
  77+ 8D3A 23               inc hl
  78+ 8D3B 04               inc b
  79+ 8D3C BA               cp d
  80+ 8D3D 28 04            jr z,1F
  81+ 8D3F 14               inc d
  82+ 8D40 14               inc d
  83+ 8D41 18 F6            jr 2B
  84+ 8D43
  85+ 8D43 CD B2 8B     1 call Extrae_address
  86+ 8D46 E5               push hl
  87+ 8D47 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D49 DD 21 BB 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D4D
  90+ 8D4D              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D4D              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D4D
  93+ 8D4D 3A 84 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D50 CB 77            bit 6,a
  95+ 8D52 20 04            jr nz,19F
  96+ 8D54
  97+ 8D54 AF               xor a
  98+ 8D55 32 DD 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D58
 100+ 8D58 3A 76 89     19 ld a,(Cuad_objeto)
 101+ 8D5B FE 02            cp 2
 102+ 8D5D 38 66            jr c,3F
 103+ 8D5F 28 64            jr z,3F
 104+ 8D61
 105+ 8D61              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D61
 107+ 8D61 E6 01            and 1
 108+ 8D63 28 30            jr z,4F
 109+ 8D65
 110+ 8D65              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D65              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D65              ;
 113+ 8D65              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D65              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D65              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D65
 117+ 8D65 2A 64 89     	ld hl,(Posicion_actual)
 118+ 8D68
 119+ 8D68              ;   Amadeus o entidad ???.
 120+ 8D68
 121+ 8D68 3A 84 89         ld a,(Ctrl_0)
 122+ 8D6B CB 77            bit 6,a
 123+ 8D6D 28 0A            jr z,8F
 124+ 8D6F
 125+ 8D6F              ; 	Dispara Amadeus.
 126+ 8D6F
 127+ 8D6F 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D71 CD E4 94         call PreviousScan
 129+ 8D74 CD E4 94         call PreviousScan
 130+ 8D77
 131+ 8D77              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D77              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D77              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D77              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D77
 136+ 8D77 18 11            jr 10F
 137+ 8D79
 138+ 8D79              ; 	Dispara Entidad.
 139+ 8D79
 140+ 8D79 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D7C              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D7C
 143+ 8D7C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D7C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D7C
 146+ 8D7C C5               push bc
 147+ 8D7D 06 10            ld b,16
 148+ 8D7F CD D5 94     9 call NextScan
 149+ 8D82 10 FB            djnz 9B
 150+ 8D84 C1               pop bc
 151+ 8D85 CD EF 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D88 18 06            jr 17F
 153+ 8D8A
 154+ 8D8A              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D8A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D8A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D8A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D8A
 159+ 8D8A CD EF 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D8D CD 64 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8D90              ;                                                      ; _al generar el disparo.
 162+ 8D90
 163+ 8D90              ; 	LLegados a este punto tendremos:
 164+ 8D90              ;
 165+ 8D90              ;       Puntero_objeto_disparo en IY.
 166+ 8D90              ;       Rutinas_de_impresion en IX.
 167+ 8D90              ;       Puntero_de_impresion en HL.
 168+ 8D90              ;       Impacto/Dirección en BC.
 169+ 8D90
 170+ 8D90 CD F7 8D     17 call Almacena_disparo
 171+ 8D93 18 52            jr 6F                                             ; RET.
 172+ 8D95
 173+ 8D95              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8D95              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8D95              ;
 176+ 8D95              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8D95              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8D95              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8D95
 180+ 8D95 2A 64 89     4 ld hl,(Posicion_actual)
 181+ 8D98
 182+ 8D98              ;   Amadeus o entidad ???.
 183+ 8D98
 184+ 8D98 3A 84 89         ld a,(Ctrl_0)
 185+ 8D9B CB 77            bit 6,a
 186+ 8D9D 28 0A            jr z,11F
 187+ 8D9F
 188+ 8D9F              ; 	Dispara Amadeus.
 189+ 8D9F
 190+ 8D9F 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DA1 CD E4 94         call PreviousScan
 192+ 8DA4 CD E4 94         call PreviousScan
 193+ 8DA7
 194+ 8DA7              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DA7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DA7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DA7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DA7
 199+ 8DA7 18 11            jr 13F
 200+ 8DA9
 201+ 8DA9              ; 	Dispara Entidad.
 202+ 8DA9
 203+ 8DA9 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DAC              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DAC
 206+ 8DAC              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DAC              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DAC
 209+ 8DAC C5               push bc
 210+ 8DAD 06 10            ld b,16
 211+ 8DAF CD D5 94     12 call NextScan
 212+ 8DB2 10 FB            djnz 12B
 213+ 8DB4 C1               pop bc
 214+ 8DB5
 215+ 8DB5 CD E8 8D         call Ajusta_disparo_parte_derecha
 216+ 8DB8 18 06            jr 18F
 217+ 8DBA
 218+ 8DBA              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DBA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DBA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DBA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DBA
 223+ 8DBA CD E8 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8DBD CD 64 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DC0              ;                                                       ; _al generar el disparo.
 226+ 8DC0
 227+ 8DC0              ; LLegados a este punto tendremos:
 228+ 8DC0              ;
 229+ 8DC0              ;       Puntero_objeto_disparo en IY.
 230+ 8DC0              ;       Rutinas_de_impresion en IX.
 231+ 8DC0              ;       Puntero_de_impresion en HL.
 232+ 8DC0              ;       Impacto/Dirección en BC.
 233+ 8DC0
 234+ 8DC0 CD F7 8D     18 call Almacena_disparo
 235+ 8DC3 18 22            jr 6F                                               ; RET.
 236+ 8DC5
 237+ 8DC5              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DC5
 239+ 8DC5 28 11        3 jr z,5F
 240+ 8DC7
 241+ 8DC7              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DC7              ;
 243+ 8DC7              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DC7              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DC7              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DC7              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DC7
 248+ 8DC7              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DC7              ;	   ""        ""       "f9", B="1"
 250+ 8DC7              ;	   ""        ""       "fb", B="2"
 251+ 8DC7              ; 	   ""        ""       "fb", B="3"
 252+ 8DC7
 253+ 8DC7 2A 64 89     	ld hl,(Posicion_actual)
 254+ 8DCA CD D5 94     	call NextScan
 255+ 8DCD
 256+ 8DCD              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DCD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DCD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DCD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DCD
 261+ 8DCD CD EF 8D         call Ajusta_disparo_parte_izquierda
 262+ 8DD0
 263+ 8DD0              ; 	No se produce impacto. B="$80"
 264+ 8DD0              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DD0
 266+ 8DD0 01 80 80         ld bc,$8080
 267+ 8DD3
 268+ 8DD3              ; 	LLegados a este punto tendremos:
 269+ 8DD3              ;
 270+ 8DD3              ;       Puntero_objeto_disparo en IY.
 271+ 8DD3              ;       Rutinas_de_impresion en IX.
 272+ 8DD3              ;       Puntero_de_impresion en HL.
 273+ 8DD3              ;       Impacto/Dirección en BC.
 274+ 8DD3
 275+ 8DD3 CD F7 8D         call Almacena_disparo
 276+ 8DD6 18 0F            jr 6F                                           ; RET.
 277+ 8DD8
 278+ 8DD8              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DD8              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DD8              ;
 281+ 8DD8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DD8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DD8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DD8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DD8
 286+ 8DD8 2A 64 89     5 ld hl,(Posicion_actual)
 287+ 8DDB CD D5 94     	call NextScan
 288+ 8DDE
 289+ 8DDE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DDE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DDE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DDE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DDE
 294+ 8DDE CD E8 8D         call Ajusta_disparo_parte_derecha
 295+ 8DE1
 296+ 8DE1              ; 	No se produce impacto. B="$80"
 297+ 8DE1              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8DE1
 299+ 8DE1 01 80 80     15 ld bc,$8080
 300+ 8DE4
 301+ 8DE4              ; 	LLegados a este punto tendremos:
 302+ 8DE4              ;
 303+ 8DE4              ;       Puntero_objeto_disparo en IY.
 304+ 8DE4              ;       Rutinas_de_impresion en IX.
 305+ 8DE4              ;       Puntero_de_impresion en HL.
 306+ 8DE4              ;       Impacto/Dirección en BC.
 307+ 8DE4
 308+ 8DE4 CD F7 8D         call Almacena_disparo
 309+ 8DE7
 310+ 8DE7 C9           6 ret
 311+ 8DE8
 312+ 8DE8              ; ----------------------------------------------------------------
 313+ 8DE8              ;
 314+ 8DE8              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8DE8              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8DE8              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8DE8
 318+ 8DE8 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8DE9 FE 02            cp 2
 320+ 8DEB 38 01            jr c,1F
 321+ 8DED 23               inc hl
 322+ 8DEE C9           1 ret
 323+ 8DEF
 324+ 8DEF 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8DF0 FE 01        	cp 1
 326+ 8DF2 20 01        	jr nz,1F
 327+ 8DF4 2B           	dec hl
 328+ 8DF5 2B           1 dec hl
 329+ 8DF6 C9               ret
 330+ 8DF7
 331+ 8DF7              ; ----------------------------------------------------------------
 332+ 8DF7              ;
 333+ 8DF7              ;   25/02/23
 334+ 8DF7              ;
 335+ 8DF7              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8DF7              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8DF7              ;
 338+ 8DF7              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8DF7              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8DF7
 341+ 8DF7              Almacena_disparo
 342+ 8DF7
 343+ 8DF7 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8DF8 F1               pop af
 345+ 8DF9 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8DFA
 347+ 8DFA 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8DFB E6 01            and 1
 349+ 8DFD 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8DFF              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8DFF              ; 	Dispara AMADEUS.
 352+ 8DFF
 353+ 8DFF              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8DFF              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8DFF              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8DFF              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8DFF
 358+ 8DFF C5               push bc
 359+ 8E00 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E03 2A C7 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E06 A7               and a
 362+ 8E07 ED 42            sbc hl,bc
 363+ 8E09 CC 37 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E0C C1               pop bc
 365+ 8E0D 28 54            jr z,4F
 366+ 8E0F
 367+ 8E0F 2A C7 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E12 23               inc hl
 369+ 8E13 23               inc hl
 370+ 8E14 22 C7 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E17              ;                                                   ; _ Disparo_(+1).
 372+ 8E17 18 18            jr 2F
 373+ 8E19
 374+ 8E19              ; Dispara una entidad.
 375+ 8E19
 376+ 8E19 C5           1 push bc
 377+ 8E1A 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E1D 2A C5 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E20 A7               and a
 380+ 8E21 ED 42            sbc hl,bc
 381+ 8E23 CC 30 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E26 C1               pop bc
 383+ 8E27 28 3A            jr z,4F
 384+ 8E29
 385+ 8E29 2A C5 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E2C 23               inc hl
 387+ 8E2D 23               inc hl
 388+ 8E2E 22 C5 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E31              ;                                                   ; _ Disparo_(+1).
 390+ 8E31 CD B2 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E34              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E34              ;
 393+ 8E34              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E34              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E34              ;                                                     Puntero_de_impresion en HL.
 396+ 8E34              ;                                                     Impacto/Dirección en BC.
 397+ 8E34
 398+ 8E34 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E35 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E36 23               inc hl                                          ; _ al siguiente.
 401+ 8E37 A7               and a
 402+ 8E38 20 C0            jr nz,3B
 403+ 8E3A
 404+ 8E3A 08               ex af,af
 405+ 8E3B ED 73 B4 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E3F F9               ld sp,hl
 407+ 8E40
 408+ 8E40 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E42 F5               push af                                         ; Puntero de impresión.
 410+ 8E43 FD E5            push iy                                         ; Puntero objeto.
 411+ 8E45 C5               push bc                                         ; Control.
 412+ 8E46
 413+ 8E46 ED 7B B4 89      ld sp,(Stack)
 414+ 8E4A
 415+ 8E4A              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E4A
 417+ 8E4A 21 A3 89     	ld hl,Ctrl_1
 418+ 8E4D CB C6        	set 0,(hl)
 419+ 8E4F
 420+ 8E4F DD E5        	push ix
 421+ 8E51 E1               pop hl
 422+ 8E52 F5               push af
 423+ 8E53 DD E1            pop ix
 424+ 8E55
 425+ 8E55 CD BF 80     	call Guarda_foto_registros
 426+ 8E58
 427+ 8E58 21 A3 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E5B CB 86        	res 0,(hl)
 429+ 8E5D
 430+ 8E5D              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E5D              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E5D
 433+ 8E5D CD 37 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E60 CD 30 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8E63
 436+ 8E63 C9           4 ret
 437+ 8E64
 438+ 8E64              ; ----------------------------------------------------------------
 439+ 8E64              ;
 440+ 8E64              ;   4/3/23
 441+ 8E64              ;
 442+ 8E64              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E64              ;   _ al generarse el disparo.
 444+ 8E64              ;
 445+ 8E64              ;       "$80" ..... No se produce colisión.
 446+ 8E64              ;       "$81" ..... Se produce colisión.
 447+ 8E64              ;
 448+ 8E64              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E64              ;         _ que forman el disparo.
 450+ 8E64
 451+ 8E64
 452+ 8E64              Comprueba_Colision
 453+ 8E64
 454+ 8E64              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E64
 456+ 8E64 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E66 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E67
 459+ 8E67 CD 9D 8E         call Modifica_H_Velocidad_disparo
 460+ 8E6A
 461+ 8E6A 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E6B FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E6D 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E6F
 465+ 8E6F 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E71 CD 8D 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E74
 468+ 8E74 7B               ld a,e
 469+ 8E75 E6 01            and 1
 470+ 8E77 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E79              ;                                                  ; _ para activar IMPACTO.
 472+ 8E79 E1               pop hl
 473+ 8E7A E5               push hl
 474+ 8E7B CD D5 94         call NextScan
 475+ 8E7E
 476+ 8E7E 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E7F FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E81 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E83              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E83 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E85 CD 8D 8E         call Bucle_2
 482+ 8E88
 483+ 8E88 43           1 ld b,e
 484+ 8E89 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E8A FD E1            pop iy
 486+ 8E8C C9               ret
 487+ 8E8D
 488+ 8E8D              ; ---------- ----------
 489+ 8E8D
 490+ 8E8D 06 02        Bucle_2 ld b,2
 491+ 8E8F FD 7E 00     2 ld a,(iy)
 492+ 8E92 A6               and (hl)
 493+ 8E93 28 02            jr z,1F
 494+ 8E95 1E 81            ld e,$81
 495+ 8E97 23           1 inc hl
 496+ 8E98 FD 23            inc iy
 497+ 8E9A 10 F3            djnz 2B
 498+ 8E9C C9               ret
 499+ 8E9D
 500+ 8E9D              ; ---------- ----------
 501+ 8E9D              ;
 502+ 8E9D              ;   21/7/23
 503+ 8E9D
 504+ 8E9D              Modifica_H_Velocidad_disparo
 505+ 8E9D
 506+ 8E9D 3A D4 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EA0 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EA2 D0               ret nc                                         ; _ incrementamos H.
 509+ 8EA3 24               inc h
 510+ 8EA4
 511+ 8EA4 C9               ret
 512+ 8EA5
 513+ 8EA5              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EA5              ;
 515+ 8EA5              ;   04/12/23
 516+ 8EA5              ;
 517+ 8EA5              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EA5              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EA5              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EA5              ;
 521+ 8EA5              ;   MODIFICA: HL,DE,B y A.
 522+ 8EA5
 523+ 8EA5              Genera_coordenadas_X
 524+ 8EA5
 525+ 8EA5              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EA5              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EA5
 528+ 8EA5              ;   Limpiamos almacenes.
 529+ 8EA5
 530+ 8EA5 CD D6 8E         call Limpia_Coordenadas_X
 531+ 8EA8
 532+ 8EA8              ;   Almacenamos coordenadas X.
 533+ 8EA8
 534+ 8EA8              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8EA8
 536+ 8EA8 2A 7E 89         ld hl,(Puntero_de_impresion)
 537+ 8EAB 11 D1 89         ld de,Coordenadas_X_Entidad
 538+ 8EAE 06 02            ld b,2
 539+ 8EB0
 540+ 8EB0 3A 6A 89         ld a,(CTRL_DESPLZ)
 541+ 8EB3 A7               and a
 542+ 8EB4 28 01            jr z,1F
 543+ 8EB6 04               inc b
 544+ 8EB7
 545+ 8EB7 CD CD 8E     1 call Guarda_coordenadas_X
 546+ 8EBA
 547+ 8EBA              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8EBA
 549+ 8EBA 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 8EBD 11 CE 89         ld de,Coordenadas_X_Amadeus
 551+ 8EC0 06 02            ld b,2
 552+ 8EC2
 553+ 8EC2 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 8EC5 A7               and a
 555+ 8EC6 28 01            jr z,2F
 556+ 8EC8 04               inc b
 557+ 8EC9
 558+ 8EC9 CD CD 8E     2 call Guarda_coordenadas_X
 559+ 8ECC
 560+ 8ECC              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8ECC
 562+ 8ECC C9               ret
 563+ 8ECD
 564+ 8ECD              ; ----- ----- ----- ----- -----
 565+ 8ECD
 566+ 8ECD 7D           Guarda_coordenadas_X  ld a,l
 567+ 8ECE E6 1F            and $1f
 568+ 8ED0 12           1 ld (de),a
 569+ 8ED1 3C               inc a
 570+ 8ED2 13               inc de
 571+ 8ED3 10 FB            djnz 1B
 572+ 8ED5 C9               ret
 573+ 8ED6
 574+ 8ED6 AF           Limpia_Coordenadas_X xor a
 575+ 8ED7 06 06            ld b,6
 576+ 8ED9 21 CE 89         ld hl,Coordenadas_X_Amadeus
 577+ 8EDC 77           1 ld (hl),a
 578+ 8EDD 23               inc hl
 579+ 8EDE 10 FC            djnz 1B
 580+ 8EE0 C9               ret
 581+ 8EE1
 582+ 8EE1              ; ----- ----- ----- ----- -----
 583+ 8EE1
 584+ 8EE1              Compara_coordenadas_X
 585+ 8EE1
 586+ 8EE1 06 03            ld b,3
 587+ 8EE3 11 D3 89         ld de,Coordenadas_X_Entidad+2
 588+ 8EE6
 589+ 8EE6 1A               ld a,(de)
 590+ 8EE7 A7               and a
 591+ 8EE8 20 01            jr nz,2F
 592+ 8EEA 05               dec b
 593+ 8EEB
 594+ 8EEB 1B           2 dec de
 595+ 8EEC 1B               dec de
 596+ 8EED 21 CE 89         ld hl,Coordenadas_X_Amadeus
 597+ 8EF0
 598+ 8EF0 D5           1 push de
 599+ 8EF1 E5               push hl
 600+ 8EF2 C5               push bc
 601+ 8EF3
 602+ 8EF3 CD FD 8E         call Comparando
 603+ 8EF6
 604+ 8EF6 C1               pop bc
 605+ 8EF7 E1               pop hl
 606+ 8EF8 D1               pop de
 607+ 8EF9
 608+ 8EF9 13               inc de
 609+ 8EFA 10 F4            djnz 1B
 610+ 8EFC
 611+ 8EFC C9               ret
 612+ 8EFD
 613+ 8EFD              ; ----- ----- ----- ----- -----
 614+ 8EFD              ;
 615+ 8EFD              ;   4/12/23
 616+ 8EFD              ;
 617+ 8EFD              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8EFD
 619+ 8EFD 06 03        Comparando ld b,3
 620+ 8EFF 1A               ld a,(de)
 621+ 8F00 4E           2 ld c,(hl)
 622+ 8F01 B9               cp c
 623+ 8F02 28 04            jr z,1F
 624+ 8F04 23               inc hl
 625+ 8F05 10 F9            djnz 2B
 626+ 8F07 C9               ret
 627+ 8F08
 628+ 8F08 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F0A 32 77 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F0D 21 C9 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F10 CB D6            set 2,(hl)
 632+ 8F12 C9               ret
 633+ 8F13
 634+ 8F13              ; -----------------------------------------------------------------------
 635+ 8F13              ;
 636+ 8F13              ;   7/12/23
 637+ 8F13              ;
 638+ 8F13
 639+ 8F13              Detecta_colision_nave_entidad
 640+ 8F13
 641+ 8F13              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F13
 643+ 8F13 FD 2A 66 89      ld iy,(Puntero_objeto)
 644+ 8F17 2A 7E 89         ld hl,(Puntero_de_impresion)
 645+ 8F1A
 646+ 8F1A E5               push hl
 647+ 8F1B
 648+ 8F1B              ; ----- ----- -----
 649+ 8F1B 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F1D 06 0A            ld b,10
 651+ 8F1F CD 4F 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F22 7B               ld a,e
 653+ 8F23 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F25 38 0E            jr c,3F
 655+ 8F27
 656+ 8F27              ; LLegados a este punto:
 657+ 8F27              ;
 658+ 8F27              ;   HAY COLISIÓN !!!!!.
 659+ 8F27              ;
 660+ 8F27              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F27              ;   SET el bit3 de (Impacto2).
 662+ 8F27              ;
 663+ 8F27              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F27
 665+ 8F27 21 77 89         ld hl,Impacto
 666+ 8F2A 36 01            ld (hl),1
 667+ 8F2C 21 C9 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F2F CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F31 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F33
 671+ 8F33 18 18            jr 1F
 672+ 8F35
 673+ 8F35              ; -----
 674+ 8F35
 675+ 8F35 E1           3 pop hl
 676+ 8F36 CD D5 94         call NextScan
 677+ 8F39 E5               push hl
 678+ 8F3A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F3B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F3D 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F3F 30 0C            jr nc,1F
 682+ 8F41              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F41 10 DC            djnz 2B
 684+ 8F43
 685+ 8F43              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F43
 687+ 8F43              ; LLegados a este punto:
 688+ 8F43              ;
 689+ 8F43              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F43              ;
 691+ 8F43              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F43              ;   RES el bit2 de (Impacto2).
 693+ 8F43              ;
 694+ 8F43              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F43              ;   Lo colocamos a "0".
 696+ 8F43
 697+ 8F43 21 C9 89         ld hl,Impacto2
 698+ 8F46 CB 96            res 2,(hl)
 699+ 8F48 2A CA 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F4B 36 00            ld (hl),0
 701+ 8F4D
 702+ 8F4D E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F4E C9               ret
 704+ 8F4F
 705+ 8F4F               ; ---------- ----------
 706+ 8F4F
 707+ 8F4F C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F50 3A 63 89         ld a,(Columns)
 709+ 8F53 47               ld b,a
 710+ 8F54 FD 7E 00     2 ld a,(iy)
 711+ 8F57 BE               cp (hl)
 712+ 8F58 28 01            jr z,1F
 713+ 8F5A
 714+ 8F5A 1C               inc e
 715+ 8F5B
 716+ 8F5B 23           1 inc hl
 717+ 8F5C FD 23            inc iy
 718+ 8F5E 10 F4            djnz 2B
 719+ 8F60 C1               pop bc
 720+ 8F61 C9               ret
 721+ 8F62
 722+ 8F62              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F62              ;
 724+ 8F62              ;   13/03/23
 725+ 8F62              ;
 726+ 8F62              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F62              ;
 728+ 8F62              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F62
 730+ 8F62 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F65 7E               ld a,(hl)
 732+ 8F66 A7               and a
 733+ 8F67 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F68
 735+ 8F68 44               ld b,h
 736+ 8F69 4D               ld c,l
 737+ 8F6A 2A BC 89         ld hl,(Stack_snapshot_disparos)
 738+ 8F6D E5               push hl
 739+ 8F6E A7               and a
 740+ 8F6F ED 42            sbc hl,bc
 741+ 8F71 E5               push hl
 742+ 8F72 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F73
 744+ 8F73 E1               pop hl
 745+ 8F74 54               ld d,h
 746+ 8F75 5D               ld e,l
 747+ 8F76 1B               dec de
 748+ 8F77 ED B8            lddr                                                ; Limpiamos.
 749+ 8F79
 750+ 8F79 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 8F7C 22 BC 89         ld (Stack_snapshot_disparos),hl
 752+ 8F7F
 753+ 8F7F C9               ret
 754+ 8F80
 755+ 8F80              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F80              ;
 757+ 8F80              ;   18/07/23
 758+ 8F80              ;
 759+ 8F80
 760+ 8F80              Motor_de_disparos
 761+ 8F80
 762+ 8F80              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F80
 764+ 8F80 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F83 2A C7 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F86
 767+ 8F86 CD B2 8B     2 call Extrae_address
 768+ 8F89 7E               ld a,(hl)
 769+ 8F8A A7               and a
 770+ 8F8B 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F8D
 772+ 8F8D              ; ----- ----- ----- ----- ----- -----
 773+ 8F8D
 774+ 8F8D C5               push bc
 775+ 8F8E CD 52 90         call foto_disparo_a_borrar
 776+ 8F91
 777+ 8F91              ; Existe colisión con este disparo???
 778+ 8F91
 779+ 8F91 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8F92 7E               ld a,(hl)
 781+ 8F93 2B               dec hl
 782+ 8F94 E6 01            and 1
 783+ 8F96 28 1D            jr z,9F
 784+ 8F98
 785+ 8F98              ;   En este punto:
 786+ 8F98              ;
 787+ 8F98              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8F98              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8F98              ;   _con la entidad).
 790+ 8F98              ;
 791+ 8F98              ;   Disparo_2A defw 0                                ; Control.
 792+ 8F98              ;    defw 0                                          ; Puntero objeto.
 793+ 8F98              ;    defw 0                                          ; Puntero de impresión.
 794+ 8F98              ;    defw 0                                          ; Rutina de impresión.
 795+ 8F98
 796+ 8F98 E5               push hl
 797+ 8F99
 798+ 8F99 06 04            ld b,4
 799+ 8F9B 23           19 inc hl
 800+ 8F9C 10 FD            djnz 19B
 801+ 8F9E
 802+ 8F9E CD B2 8B         call Extrae_address
 803+ 8FA1 CD AC 9B         call Genera_coordenadas_disparo
 804+ 8FA4
 805+ 8FA4              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FA4
 807+ 8FA4 21 CC 89         ld hl,Coordenadas_disparo_certero
 808+ 8FA7 72               ld (hl),d
 809+ 8FA8 23               inc hl
 810+ 8FA9 73               ld (hl),e
 811+ 8FAA
 812+ 8FAA              ; Elimino el disparo de la base de datos.
 813+ 8FAA
 814+ 8FAA E1               pop hl
 815+ 8FAB CD D1 90         call Elimina_disparo_de_base_de_datos
 816+ 8FAE 21 C9 89         ld hl,Impacto2
 817+ 8FB1 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FB3
 819+ 8FB3 18 06            jr 11F
 820+ 8FB5
 821+ 8FB5 CD 7B 90     9 call Mueve_disparo
 822+ 8FB8 CD 52 90         call foto_disparo_a_borrar
 823+ 8FBB
 824+ 8FBB C1           11 pop bc
 825+ 8FBC 18 04            jr 7F
 826+ 8FBE
 827+ 8FBE              ; ----- ----- ----- ----- ----- -----
 828+ 8FBE
 829+ 8FBE ED 42        1 sbc hl,bc
 830+ 8FC0 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FC2
 832+ 8FC2 2A C7 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FC5 23               inc hl
 834+ 8FC6 23               inc hl
 835+ 8FC7 22 C7 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FCA 18 BA            jr 2B
 837+ 8FCC
 838+ 8FCC CD 37 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FCF              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FCF
 841+ 8FCF              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FCF
 843+ 8FCF 01 9F 86         ld bc,Disparo_11
 844+ 8FD2 2A C5 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FD5
 846+ 8FD5 CD B2 8B     5 call Extrae_address
 847+ 8FD8 7E               ld a,(hl)
 848+ 8FD9 A7               and a
 849+ 8FDA 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FDC
 851+ 8FDC              ; ----- ----- ----- ----- ----- -----
 852+ 8FDC
 853+ 8FDC C5               push bc
 854+ 8FDD CD 52 90         call foto_disparo_a_borrar
 855+ 8FE0
 856+ 8FE0              ; Existe colisión con este disparo???
 857+ 8FE0
 858+ 8FE0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8FE1 7E               ld a,(hl)
 860+ 8FE2 2B               dec hl
 861+ 8FE3 E6 01            and 1
 862+ 8FE5 28 4D            jr z,10F
 863+ 8FE7
 864+ 8FE7              ;! La colisión se produce con Amadeus???
 865+ 8FE7              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8FE7
 867+ 8FE7 E5               push hl
 868+ 8FE8
 869+ 8FE8 06 04            ld b,4
 870+ 8FEA 23           16 inc hl
 871+ 8FEB 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8FED
 873+ 8FED CD B2 8B         call Extrae_address
 874+ 8FF0 CD AC 9B         call Genera_coordenadas_disparo
 875+ 8FF3
 876+ 8FF3 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8FF4 FE 16            cp $16
 878+ 8FF6 38 2A            jr c,15F
 879+ 8FF8
 880+ 8FF8
 881+ 8FF8              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8FF8
 883+ 8FF8 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8FF9
 885+ 8FF9              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8FF9
 887+ 8FF9 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 8FFC
 889+ 8FFC              ; Coordenada X de Amadeus en D.
 890+ 8FFC
 891+ 8FFC 7D               ld a,l
 892+ 8FFD E6 1F            and $1F
 893+ 8FFF 57               ld d,a
 894+ 9000
 895+ 9000 21 BB 86         ld hl,Amadeus_db+8
 896+ 9003 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9004
 898+ 9004 21 CE 89         ld hl,Coordenadas_X_Amadeus
 899+ 9007 CD CD 8E         call Guarda_coordenadas_X
 900+ 900A
 901+ 900A D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 900B
 903+ 900B              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 900B
 905+ 900B 06 02            ld b,2
 906+ 900D C5           20 push bc
 907+ 900E
 908+ 900E 06 03            ld b,3
 909+ 9010 21 CE 89         ld hl,Coordenadas_X_Amadeus
 910+ 9013 7E           18 ld a,(hl)
 911+ 9014 BA               cp d
 912+ 9015 20 04            jr nz,17F
 913+ 9017
 914+ 9017              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9017
 916+ 9017 C1               pop bc
 917+ 9018 E1               pop hl
 918+ 9019 18 0D            jr 14F
 919+ 901B
 920+ 901B 23           17 inc hl
 921+ 901C 10 F5            djnz 18B
 922+ 901E
 923+ 901E 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 901F
 925+ 901F C1               pop bc
 926+ 9020 10 EB            djnz 20B
 927+ 9022
 928+ 9022
 929+ 9022              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9022              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9022
 932+ 9022 E1           15 pop hl
 933+ 9023 23               inc hl
 934+ 9024 35               dec (hl)
 935+ 9025 2B               dec hl
 936+ 9026 18 0C            jr 10F
 937+ 9028
 938+ 9028              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9028              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9028
 941+ 9028 E5           14 push hl
 942+ 9029 CD D1 90         call Elimina_disparo_de_base_de_datos
 943+ 902C 21 C9 89         ld hl,Impacto2
 944+ 902F CB CE            set 1,(hl)
 945+ 9031 E1               pop hl
 946+ 9032 18 06            jr 12F
 947+ 9034
 948+ 9034              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9034
 950+ 9034 CD 7B 90     10 call Mueve_disparo
 951+ 9037 CD 52 90         call foto_disparo_a_borrar
 952+ 903A C1           12 pop bc
 953+ 903B
 954+ 903B 18 04            jr 8F
 955+ 903D
 956+ 903D              ; ----- ----- ----- ----- ----- -----
 957+ 903D
 958+ 903D ED 42        4 sbc hl,bc
 959+ 903F 28 0A            jr z,6F
 960+ 9041
 961+ 9041 2A C5 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9044 23               inc hl
 963+ 9045 23               inc hl
 964+ 9046 22 C5 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9049 18 8A            jr 5B
 966+ 904B
 967+ 904B CD 30 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 904E CD D6 8E         call Limpia_Coordenadas_X
 969+ 9051 C9               ret
 970+ 9052
 971+ 9052              ; ------------------------------------------------------------------
 972+ 9052
 973+ 9052              foto_disparo_a_borrar
 974+ 9052
 975+ 9052 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9053 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9054 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9055
 979+ 9055 E5               push hl
 980+ 9056 23               inc hl
 981+ 9057 23               inc hl
 982+ 9058 ED 73 B4 89      ld (Stack),sp
 983+ 905C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 905D FD E1            pop iy
 985+ 905F DD E1            pop ix
 986+ 9061 E1               pop hl
 987+ 9062 ED 7B B4 89      ld sp,(Stack)
 988+ 9066 3A A3 89         ld a,(Ctrl_1)
 989+ 9069 CB C7            set 0,a
 990+ 906B 32 A3 89         ld (Ctrl_1),a
 991+ 906E CD BF 80         call Guarda_foto_registros
 992+ 9071 3A A3 89         ld a,(Ctrl_1)
 993+ 9074 CB 87            res 0,a
 994+ 9076 32 A3 89         ld (Ctrl_1),a
 995+ 9079 E1               pop hl
 996+ 907A C9               ret
 997+ 907B
 998+ 907B              ;---------------------------------------------------
 999+ 907B              ;
1000+ 907B              ;   18/07/23
1001+ 907B              ;
1002+ 907B
1003+ 907B              Mueve_disparo
1004+ 907B
1005+ 907B              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 907B              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 907B              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 907B
1009+ 907B E5               push hl
1010+ 907C
1011+ 907C 7E               ld a,(hl)
1012+ 907D
1013+ 907D 06 04            ld b,4
1014+ 907F 23           1 inc hl
1015+ 9080 10 FD            djnz 1B
1016+ 9082
1017+ 9082              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9082
1019+ 9082 CD B2 8B         call Extrae_address
1020+ 9085
1021+ 9085 E6 01            and 1
1022+ 9087 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9089
1024+ 9089              ; Disparo hacia arriba, (Amadeus).
1025+ 9089
1026+ 9089              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9089              ; _ de la dificultad.
1028+ 9089
1029+ 9089 CD E4 94         call PreviousScan
1030+ 908C CD E4 94         call PreviousScan
1031+ 908F CD E4 94         call PreviousScan
1032+ 9092 CD E4 94         call PreviousScan
1033+ 9095
1034+ 9095              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9095
1036+ 9095 7C               ld a,h
1037+ 9096 FE 40            cp $40
1038+ 9098 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 909A
1040+ 909A              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 909A
1042+ 909A EB               ex de,hl
1043+ 909B 06 04            ld b,4
1044+ 909D 2B           6 dec hl
1045+ 909E 10 FD            djnz 6B
1046+ 90A0
1047+ 90A0 CD D1 90         call Elimina_disparo_de_base_de_datos
1048+ 90A3 E1               pop hl
1049+ 90A4 18 10            jr 7F
1050+ 90A6
1051+ 90A6              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90A6              ; HL contiene el puntero de impresión del disparo.
1053+ 90A6              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90A6
1055+ 90A6 D5           3 push de
1056+ 90A7 C5               push bc
1057+ 90A8
1058+ 90A8 CD 64 8E         call Comprueba_Colision
1059+ 90AB
1060+ 90AB              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90AB
1062+ 90AB 78               ld a,b
1063+ 90AC
1064+ 90AC C1               pop bc
1065+ 90AD D1               pop de
1066+ 90AE
1067+ 90AE EB               ex de,hl
1068+ 90AF
1069+ 90AF 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90B0 23               inc hl                                      ; _ movimiento.
1071+ 90B1 72               ld (hl),d
1072+ 90B2
1073+ 90B2 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90B3
1075+ 90B3 23               inc hl                                      ; _ en curso.
1076+ 90B4 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90B5 2B               dec hl
1078+ 90B6
1079+ 90B6 C9           7 ret
1080+ 90B7
1081+ 90B7              ; Disparo hacia abajo, (Entidad).
1082+ 90B7
1083+ 90B7 3A D4 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 90BA 47               ld b,a
1085+ 90BB
1086+ 90BB CD D5 94     4 call NextScan
1087+ 90BE 10 FB            djnz 4B
1088+ 90C0
1089+ 90C0              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90C0
1091+ 90C0 7C               ld a,h
1092+ 90C1 FE 58            cp $58
1093+ 90C3 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90C5
1095+ 90C5 EB               ex de,hl
1096+ 90C6 06 04            ld b,4
1097+ 90C8 2B           5 dec hl
1098+ 90C9 10 FD            djnz 5B
1099+ 90CB
1100+ 90CB CD D1 90         call Elimina_disparo_de_base_de_datos
1101+ 90CE E1               pop hl
1102+ 90CF 18 E5            jr 7B
1103+ 90D1
1104+ 90D1              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90D1
1106+ 90D1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90D4 AF               xor a
1108+ 90D5 77               ld (hl),a
1109+ 90D6 54               ld d,h
1110+ 90D7 5D               ld e,l
1111+ 90D8 13               inc de
1112+ 90D9 ED B0            ldir
1113+ 90DB C9               ret
1114+ 90DC
1115+ 90DC              ; -----------------------------------------------------------------
1116+ 90DC              ;
1117+ 90DC              ;   7/12/23
1118+ 90DC              ;
1119+ 90DC
1120+ 90DC 3A C9 89     Selector_de_impactos ld a,(Impacto2)
1121+ 90DF A7               and a
1122+ 90E0 C8               ret z
1123+ 90E1
1124+ 90E1              ; Analizamos si hay impacto por disparos.
1125+ 90E1
1126+ 90E1              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 90E1
1128+ 90E1 CB 4F            bit 1,a
1129+ 90E3 28 07            jr z,1F
1130+ 90E5
1131+ 90E5 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 90E8 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 90EA 18 08            jr 2F
1134+ 90EC
1135+ 90EC CB 47        1 bit 0,a
1136+ 90EE C8               ret z
1137+ 90EF
1138+ 90EF              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 90EF
1140+ 90EF 21 A3 89         ld hl,Ctrl_1
1141+ 90F2 CB D6            set 2,(hl)
1142+ 90F4
1143+ 90F4 C9           2 ret
1144+ 90F5
1145+ 90F5              ; -----------------------------------------------------------------
1146+ 90F5              ;
1147+ 90F5              ;   25/04/23
1148+ 90F5              ;
1149+ 90F5
1150+ 90F5              Determina_resultado_comparativa
1151+ 90F5
1152+ 90F5              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 90F5              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 90F5              ;
1155+ 90F5              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 90F5              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 90F5              ;
1158+ 90F5              ;   SBC HL,DE
1159+ 90F5
1160+ 90F5              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 90F5              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 90F5
1163+ 90F5              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 90F5              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 90F5
1166+ 90F5
1167+ 90F5 3A 76 89         ld a,(Cuad_objeto)
1168+ 90F8 FE 02            cp 2
1169+ 90FA 28 26            jr z,2F
1170+ 90FC 38 24            jr c,2F
1171+ 90FE
1172+ 90FE              ; Cuadrantes 3º y 4º
1173+ 90FE
1174+ 90FE E6 01            and 1
1175+ 9100 28 10            jr z,4F
1176+ 9102
1177+ 9102              ; Cuadrante 3º
1178+ 9102
1179+ 9102 7C               ld a,h
1180+ 9103 06 00            ld b,0
1181+ 9105
1182+ 9105 CD 90 91         call Compara_cositas_H3
1183+ 9108
1184+ 9108 04               inc b
1185+ 9109 05               dec b
1186+ 910A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 910B
1188+ 910B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 910C 06 00            ld b,0
1190+ 910E
1191+ 910E CD A2 91         call Compara_cositas_L3
1192+ 9111 C9               ret
1193+ 9112
1194+ 9112              ; Cuadrante 4º
1195+ 9112
1196+ 9112 7C           4 ld a,h
1197+ 9113 06 00            ld b,0
1198+ 9115
1199+ 9115 CD B4 91         call Compara_cositas_H4
1200+ 9118
1201+ 9118 04               inc b
1202+ 9119 05               dec b
1203+ 911A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 911B
1205+ 911B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 911C 06 00            ld b,0
1207+ 911E
1208+ 911E CD CA 91         call Compara_cositas_L4
1209+ 9121 C9               ret
1210+ 9122
1211+ 9122              ; Cuadrantes 1º y 2º.
1212+ 9122
1213+ 9122 28 10        2 jr z,3F
1214+ 9124
1215+ 9124              ; 1er Cuadrante
1216+ 9124
1217+ 9124 7C               ld a,h
1218+ 9125 06 00            ld b,0
1219+ 9127
1220+ 9127 CD 68 91         call Compara_cositas_H1
1221+ 912A
1222+ 912A 04               inc b
1223+ 912B 05               dec b
1224+ 912C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 912D
1226+ 912D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 912E 06 00            ld b,0
1228+ 9130
1229+ 9130 CD 7E 91         call Compara_cositas_L1
1230+ 9133 C9               ret
1231+ 9134
1232+ 9134
1233+ 9134              ; 2º Cuadrante
1234+ 9134
1235+ 9134 7C           3 ld a,h
1236+ 9135 06 00            ld b,0
1237+ 9137
1238+ 9137 CD 44 91         call Compara_cositas_H2
1239+ 913A
1240+ 913A 04               inc b
1241+ 913B 05               dec b
1242+ 913C C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 913D
1244+ 913D 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 913E 06 00            ld b,0
1246+ 9140
1247+ 9140 CD 56 91         call Compara_cositas_L2
1248+ 9143 C9               ret
1249+ 9144
1250+ 9144 A7           Compara_cositas_H2 and a
1251+ 9145 28 0D            jr z,1F
1252+ 9147              ;    cp $fd
1253+ 9147              ;    jr z,1F
1254+ 9147              ;    cp $fe
1255+ 9147              ;    jr z,1F
1256+ 9147 FE FF            cp $ff
1257+ 9149 28 09            jr z,1F
1258+ 914B FE 01            cp $01
1259+ 914D 28 05            jr z,1F
1260+ 914F FE 02            cp $02
1261+ 9151 28 01            jr z,1F
1262+ 9153 C0               ret nz
1263+ 9154 04           1 inc b
1264+ 9155 C9               ret
1265+ 9156
1266+ 9156 A7           Compara_cositas_L2 and a
1267+ 9157 28 0D            jr z,1F
1268+ 9159              ;    cp $fd
1269+ 9159              ;    jr z,1F
1270+ 9159 FE FE            cp $fe
1271+ 915B 28 09            jr z,1F
1272+ 915D FE FF            cp $ff
1273+ 915F 28 05            jr z,1F
1274+ 9161 FE 01            cp $01
1275+ 9163 28 01            jr z,1F
1276+ 9165              ;    cp $02
1277+ 9165              ;    jr z,1F
1278+ 9165 C0               ret nz
1279+ 9166 04           1 inc b
1280+ 9167 C9               ret
1281+ 9168
1282+ 9168 A7           Compara_cositas_H1 and a
1283+ 9169 28 11            jr z,1F
1284+ 916B              ;    cp $fd
1285+ 916B              ;    jr z,1F
1286+ 916B              ;    cp $fe
1287+ 916B              ;    jr z,1F
1288+ 916B FE FF            cp $ff
1289+ 916D 28 0D            jr z,1F
1290+ 916F FE 01            cp $01
1291+ 9171 28 09            jr z,1F
1292+ 9173 FE 02            cp $02
1293+ 9175 28 05            jr z,1F
1294+ 9177 FE 03            cp $03
1295+ 9179 28 01            jr z,1F
1296+ 917B C0               ret nz
1297+ 917C 04           1 inc b
1298+ 917D C9               ret
1299+ 917E
1300+ 917E A7           Compara_cositas_L1 and a
1301+ 917F 28 0D            jr z,1F
1302+ 9181              ;    cp $fd
1303+ 9181              ;    jr z,1F
1304+ 9181              ;    cp $fe
1305+ 9181              ;    jr z,1F
1306+ 9181              ;    cp $ff
1307+ 9181              ;    jr z,1F
1308+ 9181 FE 01            cp $01
1309+ 9183 28 09            jr z,1F
1310+ 9185 FE 02            cp $02
1311+ 9187 28 05            jr z,1F
1312+ 9189 FE 03            cp $03
1313+ 918B 28 01            jr z,1F
1314+ 918D C0               ret nz
1315+ 918E 04           1 inc b
1316+ 918F C9               ret
1317+ 9190
1318+ 9190 A7           Compara_cositas_H3 and a
1319+ 9191 28 0D            jr z,1F
1320+ 9193              ;    cp $fd
1321+ 9193              ;    jr z,1F
1322+ 9193 FE FE            cp $fe
1323+ 9195 28 09            jr z,1F
1324+ 9197 FE FF            cp $ff
1325+ 9199 28 05            jr z,1F
1326+ 919B FE 01            cp $01
1327+ 919D 28 01            jr z,1F
1328+ 919F              ;    cp $02
1329+ 919F              ;    jr z,1F
1330+ 919F              ;    cp $03
1331+ 919F              ;    jr z,1F
1332+ 919F C0               ret nz
1333+ 91A0 04           1 inc b
1334+ 91A1 C9               ret
1335+ 91A2
1336+ 91A2 A7           Compara_cositas_L3 and a
1337+ 91A3 28 0D            jr z,1F
1338+ 91A5              ;    cp $fd
1339+ 91A5              ;    jr z,1F
1340+ 91A5              ;    cp $fe
1341+ 91A5              ;    jr z,1F
1342+ 91A5              ;    cp $ff
1343+ 91A5              ;    jr z,1F
1344+ 91A5 FE 01            cp $01
1345+ 91A7 28 09            jr z,1F
1346+ 91A9 FE 02            cp $02
1347+ 91AB 28 05            jr z,1F
1348+ 91AD FE 03            cp $03
1349+ 91AF 28 01            jr z,1F
1350+ 91B1 C0               ret nz
1351+ 91B2 04           1 inc b
1352+ 91B3 C9               ret
1353+ 91B4
1354+ 91B4 A7           Compara_cositas_H4 and a
1355+ 91B5 28 11            jr z,1F
1356+ 91B7 FE FD            cp $fd
1357+ 91B9 28 0D            jr z,1F
1358+ 91BB FE FE            cp $fe
1359+ 91BD 28 09            jr z,1F
1360+ 91BF FE FF            cp $ff
1361+ 91C1 28 05            jr z,1F
1362+ 91C3 FE 01            cp $01
1363+ 91C5 28 01            jr z,1F
1364+ 91C7              ;    cp $02
1365+ 91C7              ;    jr z,1F
1366+ 91C7              ;    cp $03
1367+ 91C7              ;    jr z,1F
1368+ 91C7 C0               ret nz
1369+ 91C8 04           1 inc b
1370+ 91C9 C9               ret
1371+ 91CA
1372+ 91CA A7           Compara_cositas_L4 and a
1373+ 91CB 28 0D            jr z,1F
1374+ 91CD              ;    cp $fd
1375+ 91CD              ;    jr z,1F
1376+ 91CD FE FE            cp $fe
1377+ 91CF 28 09            jr z,1F
1378+ 91D1 FE FF            cp $ff
1379+ 91D3 28 05            jr z,1F
1380+ 91D5 FE 01            cp $01
1381+ 91D7 28 01            jr z,1F
1382+ 91D9              ;    cp $02
1383+ 91D9              ;    jr z,1F
1384+ 91D9              ;    cp $03
1385+ 91D9              ;    jr z,1F
1386+ 91D9 C0               ret nz
1387+ 91DA 04           1 inc b
1388+ 91DB C9               ret
# file closed: Disparo.asm
1756  91DC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91DC              ; ******************************************************************************************************************************************************************************************
   2+ 91DC              ;
   3+ 91DC              ; 26/06/23
   4+ 91DC              ;
   5+ 91DC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91DC
   7+ 91DC              Draw
   8+ 91DC
   9+ 91DC CD C9 94     	call Prepara_draw
  10+ 91DF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 91E0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 91E1 28 05        	jr z,2F
  13+ 91E3
  14+ 91E3 3A 76 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 91E6 18 0C        	jr 1F
  16+ 91E8
  17+ 91E8 2A 74 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 91EB 22 64 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 91EE CD 7D 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 91F1              ;													; _la esquina superior izquierda de la pantalla.
  21+ 91F1
  22+ 91F1 CD 3D 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 91F4
  24+ 91F4 3A 84 89     1 ld a,(Ctrl_0)
  25+ 91F7 CB 6F        	bit 5,a
  26+ 91F9 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 91FB
  28+ 91FB CD 13 92     	call Comprueba_limite_horizontal
  29+ 91FE CD A3 92     	call Comprueba_limite_vertical
  30+ 9201
  31+ 9201              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9201              ; -----------------------
  33+ 9201              ; -----------------------
  34+ 9201              ; -----------------------
  35+ 9201
  36+ 9201 CD F9 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9204 CD 30 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9207 CD 8F 94     	call Define_rutina_de_impresion
  39+ 920A
  40+ 920A 3A 84 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 920D CB AF        	res 5,a											; _a ser de utilidad.
  42+ 920F 32 84 89     	ld (Ctrl_0),a
  43+ 9212
  44+ 9212 C9           	ret
  45+ 9213
  46+ 9213              ; *******************************************************************************************************************************************************************************************
  47+ 9213              ;	21/01/23
  48+ 9213              ;
  49+ 9213              ; 	Comprueba_limite_horizontal.
  50+ 9213              ;
  51+ 9213              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9213              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9213              ;
  54+ 9213              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9213              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9213              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9213              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9213
  59+ 9213
  60+ 9213
  61+ 9213 3A 84 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9216 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9218 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 921A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 921C 32 84 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 921F 18 09            jr 6F
  67+ 9221 CB 5F        1 bit 3,a
  68+ 9223 28 0A            jr z,2F
  69+ 9225 E6 F7            and $f7
  70+ 9227 32 84 89         ld (Ctrl_0),a
  71+ 922A CD 7D 93     6 call Inicializacion
  72+ 922D 18 5B            jr 5F
  73+ 922F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9230
  75+ 9230              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9230              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9230
  78+ 9230 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9231 2A 86 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 9234 CD E8 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9237 67           	ld h,a
  82+ 9238 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9239 CD E8 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 923C 67           	ld h,a
  85+ 923D A7           	and a
  86+ 923E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9240 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9241 3A 76 89     	ld a,(Cuad_objeto)
  89+ 9244 FE 02        	cp 2
  90+ 9246 38 1E        	jr c,3F
  91+ 9248 28 1C        	jr z,3F
  92+ 924A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 924B 28 23            jr z,7F
  94+ 924D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 924F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9251 E1           	pop hl
  97+ 9252
  98+ 9252              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9252              ; _para indicar con E="2" en caso necesario.
 100+ 9252
 101+ 9252 E5               push hl
 102+ 9253 C5               push bc
 103+ 9254 CD E8 97     	call calcula_tercio
 104+ 9257 FE 01        	cp 1
 105+ 9259 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 925B CD 8B 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 925E 28 26            jr z,9F
 108+ 9260 38 24            jr c,9F
 109+ 9262 1E 00        11 ld e,0
 110+ 9264 18 22            jr 8F
 111+ 9266 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9267 28 07        	jr z, 7F
 113+ 9269 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 926B 1E 00         	ld e,0
 115+ 926D E1           	pop hl
 116+ 926E 18 04        	jr 4F
 117+ 9270 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9272 18 15            jr 10F
 119+ 9274
 120+ 9274              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9274              ; _para indicar con E="2" en caso necesario.
 122+ 9274
 123+ 9274 E5           4 push hl
 124+ 9275 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9276 CD E8 97     	call calcula_tercio
 126+ 9279 FE 01        	cp 1
 127+ 927B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 927D CD 8B 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9280 28 04            jr z,9F
 130+ 9282 30 02            jr nc,9F
 131+ 9284 18 02        	jr 8F
 132+ 9286 1E 02        9 ld e,2
 133+ 9288 C1           8 pop bc
 134+ 9289 E1           10 pop hl
 135+ 928A C9           5 ret
 136+ 928B
 137+ 928B              ; --------------------
 138+ 928B              ;
 139+ 928B              ; 25/08/22
 140+ 928B
 141+ 928B CD E8 97     Comprueba_centro call calcula_tercio
 142+ 928E 67               ld h,a
 143+ 928F 08           	ex af,af
 144+ 9290 FE 02        	cp 2
 145+ 9292 38 07        	jr c,1F
 146+ 9294 28 05        	jr z,1F
 147+ 9296 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9299 18 03        	jr 2F
 149+ 929B 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 929E 08           2 ex af,af
 151+ 929F A7               and a
 152+ 92A0 ED 42            sbc hl,bc
 153+ 92A2 C9               ret
 154+ 92A3
 155+ 92A3              ; *********************************************************************************************************************************************************************************************
 156+ 92A3              ;
 157+ 92A3              ;   16/8/22
 158+ 92A3              ;
 159+ 92A3              ;	Comprueba_limite_vertical
 160+ 92A3              ;
 161+ 92A3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 92A3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 92A3              ;
 164+ 92A3
 165+ 92A3 2A 64 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 92A6 7D           	ld a,l
 167+ 92A7 E6 1F        	and $1F
 168+ 92A9 57           	ld d,a
 169+ 92AA 3A 88 89     	ld a,(Limite_vertical)
 170+ 92AD BA           	cp d 											; Límite - Posición.
 171+ 92AE 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 92AF 3A 76 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 92B2 CB 47        	bit 0,a
 174+ 92B4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 92B6
 176+ 92B6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 92B6
 178+ 92B6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 92B7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 92B9
 181+ 92B9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 92B9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 92B9
 184+ 92B9 3A 68 89         ld a,(Coordenada_X)
 185+ 92BC 16 0F            ld d,Centro_izquierda
 186+ 92BE A7               and a
 187+ 92BF 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 92C0 28 1E            jr z,3F
 189+ 92C2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 92C4              ;                                                    ; _salimos sin modificar nada.
 191+ 92C4 18 0E            jr 2F
 192+ 92C6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 92C7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 92C9
 195+ 92C9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 92C9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 92C9
 198+ 92C9 3A 68 89         ld a,(Coordenada_X)
 199+ 92CC 16 10            ld d,Centro_derecha
 200+ 92CE A7               and a
 201+ 92CF 92               sub d
 202+ 92D0 28 0E            jr z,3F
 203+ 92D2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 92D4              ;                                                    ; _salimos sin modificar nada.
 205+ 92D4 CB 43        2 bit 0,e
 206+ 92D6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 92D8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 92D9 CD 6D 93         call Modificaccionne
 209+ 92DC C1           	pop bc
 210+ 92DD CD 7D 93         call Inicializacion
 211+ 92E0 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 92E1
 213+ 92E1              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 92E1
 215+ 92E1 C5           4 push bc
 216+ 92E2 01 63 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 92E5 0A           	ld a,(bc)
 218+ 92E6 3D           	dec a
 219+ 92E7 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 92E8 7D           	ld a,l
 221+ 92E9 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 92EA CB 47        	bit 0,a
 223+ 92EC 28 03        	jr z,5F
 224+ 92EE 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 92EF 18 2E        	jr 7F
 226+ 92F1
 227+ 92F1              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 92F1
 229+ 92F1 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 92F2 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 92F3 3A 84 89     	ld a,(Ctrl_0)
 232+ 92F6 CB 4F        	bit 1,a
 233+ 92F8 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 92FA F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 92FB
 236+ 92FB              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 92FB
 238+ 92FB 1C               inc e
 239+ 92FC 1D               dec e
 240+ 92FD 20 07            jr nz,12F
 241+ 92FF 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9300 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9301 22 64 89     	ld (Posicion_actual),hl
 244+ 9304 18 44        13 jr 9F
 245+ 9306 CB 43        12 bit 0,e
 246+ 9308 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 930A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 930A C1           	pop bc
 249+ 930B 18 D3        	jr 3B
 250+ 930D 80           14 add b
 251+ 930E 6F               ld l,a
 252+ 930F 22 64 89     	ld (Posicion_actual),hl
 253+ 9312 CD 6D 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9315 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9317 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9319 32 84 89         ld (Ctrl_0),a
 257+ 931C F1           	pop af
 258+ 931D 18 2B        	jr 9F
 259+ 931F
 260+ 931F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 931F
 262+ 931F F5           7 push af
 263+ 9320 3A 84 89     	ld a,(Ctrl_0)
 264+ 9323 CB 47        	bit 0,a
 265+ 9325 20 1D        	jr nz,8F
 266+ 9327 F1           	pop af
 267+ 9328
 268+ 9328              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9328
 270+ 9328 1C           	inc e
 271+ 9329 1D               dec e
 272+ 932A 20 07            jr nz,10F
 273+ 932C 90           	sub b
 274+ 932D 6F               ld l,a
 275+ 932E 22 64 89     	ld (Posicion_actual),hl
 276+ 9331 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9333              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9333 CB 43        10 bit 0,e
 279+ 9335 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9337              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9337 C1           	pop bc
 282+ 9338 18 A6        	jr 3B
 283+ 933A 90           16 sub b
 284+ 933B 6F               ld l,a
 285+ 933C 22 64 89     	ld (Posicion_actual),hl
 286+ 933F CD 6D 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9342 18 06            jr 9F
 288+ 9344 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9346 32 84 89         ld (Ctrl_0),a
 290+ 9349 F1           	pop af
 291+ 934A C1           9 pop bc
 292+ 934B 1E 00        	ld e,0
 293+ 934D CD 7D 93         call Inicializacion
 294+ 9350 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9351 08           	ex af,af
 296+ 9352 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9353 18 8B            jr 3B
 298+ 9355
 299+ 9355              ; --------------------
 300+ 9355
 301+ 9355 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9357 CD E4 94     1 call PreviousScan
 303+ 935A 10 FB            djnz 1B
 304+ 935C 22 64 89     	ld (Posicion_actual),hl
 305+ 935F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9360 C9           	ret
 307+ 9361
 308+ 9361              ; --------------------
 309+ 9361
 310+ 9361 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9363 CD D5 94     1 call NextScan
 312+ 9366 10 FB            djnz 1B
 313+ 9368 22 64 89     	ld (Posicion_actual),hl
 314+ 936B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 936C C9           	ret
 316+ 936D
 317+ 936D              ; --------------------
 318+ 936D              ;
 319+ 936D              ;	22/01/23
 320+ 936D              ;
 321+ 936D              ;	E="1". Hemos cambiado de cuadrante.
 322+ 936D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 936D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 936D
 325+ 936D
 326+ 936D              Modificaccionne
 327+ 936D
 328+ 936D 3A 76 89     	ld a,(Cuad_objeto)
 329+ 9370 FE 02        	cp 2
 330+ 9372 CC 55 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9375 DC 55 93         call c,Modifica_Pos_actual
 332+ 9378 C8           	ret z
 333+ 9379 CD 61 93         call Modifica_Pos_actual2
 334+ 937C C9               ret
 335+ 937D
 336+ 937D              ; *************************************************************************************************************************************************************************************************
 337+ 937D              ;
 338+ 937D              ;	13/8/22
 339+ 937D              ;
 340+ 937D              ;	Inicializacion
 341+ 937D              ;
 342+ 937D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 937D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 937D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 937D              ;
 346+ 937D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 937D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 937D              ;	_ desaparece/aparece.
 349+ 937D
 350+ 937D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 937D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 937D              ;
 353+ 937D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 937D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 937D              ; 		   [E] ="0"
 356+ 937D
 357+ 937D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 937D
 359+ 937D CD E8 97     Inicializacion call calcula_tercio
 360+ 9380 28 36        	jr z,primit
 361+ 9382 E6 02        	and 2
 362+ 9384 20 07        	jr nz,segmit
 363+ 9386 7D           	ld a,l
 364+ 9387 FE 7F        	cp $7f
 365+ 9389 38 2D        	jr c,primit
 366+ 938B 28 2B        	jr z,primit
 367+ 938D CD F3 93     segmit call column
 368+ 9390 38 13        	jr c,tercuad
 369+ 9392 3E 04        cuarcuad ld a,4
 370+ 9394 32 76 89     	ld (Cuad_objeto),a
 371+ 9397 21 20 48     	ld hl,$4820
 372+ 939A 22 86 89     	ld (Limite_horizontal),hl
 373+ 939D 21 88 89     	ld hl,Limite_vertical
 374+ 93A0 36 0D        	ld (hl),$0d
 375+ 93A2 08           	ex af,af
 376+ 93A3 18 3C        	jr 1F
 377+ 93A5              tercuad
 378+ 93A5 3E 03        	ld a,3
 379+ 93A7 32 76 89     	ld (Cuad_objeto),a
 380+ 93AA 21 20 48     	ld hl,$4820
 381+ 93AD 22 86 89     	ld (Limite_horizontal),hl
 382+ 93B0 21 88 89     	ld hl,Limite_vertical
 383+ 93B3 36 12        	ld (hl),$12
 384+ 93B5 08           	ex af,af
 385+ 93B6 18 29        	jr 1F
 386+ 93B8 CD F3 93     primit call column
 387+ 93BB 38 13        	jr c, primcuad
 388+ 93BD              segcuad
 389+ 93BD 3E 02        	ld a,2
 390+ 93BF 32 76 89     	ld (Cuad_objeto),a
 391+ 93C2 21 C0 4F     	ld hl,$4fc0
 392+ 93C5 22 86 89     	ld (Limite_horizontal),hl
 393+ 93C8 21 88 89     	ld hl,Limite_vertical
 394+ 93CB 36 0D        	ld (hl),$0d
 395+ 93CD 08           	ex af,af
 396+ 93CE 18 11        	jr 1F
 397+ 93D0              primcuad
 398+ 93D0 3E 01        	ld a,1
 399+ 93D2 32 76 89     	ld (Cuad_objeto),a
 400+ 93D5 21 C0 4F     	ld hl,$4fc0
 401+ 93D8 22 86 89     	ld (Limite_horizontal),hl
 402+ 93DB 21 88 89     	ld hl,Limite_vertical
 403+ 93DE 36 12        	ld (hl),$12
 404+ 93E0 08           	ex af,af
 405+ 93E1
 406+ 93E1 C5           1 push bc
 407+ 93E2 E5           	push hl
 408+ 93E3 D5           	push de
 409+ 93E4
 410+ 93E4 2A 64 89     	ld hl,(Posicion_actual)
 411+ 93E7 CD 80 9B     	call Genera_coordenadas
 412+ 93EA
 413+ 93EA D1           	pop de
 414+ 93EB E1           	pop hl
 415+ 93EC C1           	pop bc
 416+ 93ED
 417+ 93ED 21 84 89     	ld hl,Ctrl_0
 418+ 93F0 CB EE        	set 5,(hl)
 419+ 93F2 C9           	ret
 420+ 93F3
 421+ 93F3              ; ------------------------------------------------------------------------------------------------------------------
 422+ 93F3
 423+ 93F3              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 93F3              ;
 425+ 93F3              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 93F3
 427+ 93F3 7D           column ld a,l
 428+ 93F4 E6 1F        	and $1f
 429+ 93F6 FE 10         	cp $10
 430+ 93F8 C9            	ret
 431+ 93F9
 432+ 93F9              ; --------------------------------------------------------------------------------------------------------------------
 433+ 93F9              ;
 434+ 93F9              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 93F9              ;
 436+ 93F9              ; 14/12/22
 437+ 93F9              ;
 438+ 93F9              ;	Modifica: A y BC.
 439+ 93F9
 440+ 93F9 3A 76 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 93FC E6 01        	and 1
 442+ 93FE 28 17        	jr z,1F
 443+ 9400
 444+ 9400              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9400
 446+ 9400 3A 68 89     	ld a,(Coordenada_X)
 447+ 9403 47           	ld b,a
 448+ 9404 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9405 79           	ld a,c
 450+ 9406 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9407 38 08        	jr c,2F
 452+ 9409 47           	ld b,a
 453+ 940A 79           	ld a,c
 454+ 940B 90           	sub b
 455+ 940C 32 85 89     	ld (Columnas),a
 456+ 940F 18 1B        	jr 4F
 457+ 9411 79           2 ld a,c
 458+ 9412 32 85 89     	ld (Columnas),a
 459+ 9415 18 15        	jr 4F
 460+ 9417
 461+ 9417              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9417
 463+ 9417 3A 68 89     1 ld a,(Coordenada_X)
 464+ 941A 81           	add c
 465+ 941B 3D           	dec a
 466+ 941C D6 1F        	sub $1f
 467+ 941E 38 08        	jr c,3F
 468+ 9420 47           	ld b,a
 469+ 9421 79           	ld a,c
 470+ 9422 90           	sub b
 471+ 9423 32 85 89     	ld (Columnas),a
 472+ 9426 18 04        	jr 4F
 473+ 9428 79           3 ld a,c
 474+ 9429 32 85 89     	ld (Columnas),a
 475+ 942C D9           4 exx
 476+ 942D 4F           	ld c,a
 477+ 942E D9           	exx
 478+ 942F C9            ret
 479+ 9430
 480+ 9430              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9430              ;
 482+ 9430              ;   19/7/23
 483+ 9430              ;
 484+ 9430              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9430              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9430              ;
 487+ 9430              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9430              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9430              ;
 490+ 9430              ;	DESTRUYE: HL,B Y A.
 491+ 9430
 492+ 9430 3A 76 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9433 FE 02        	cp 2
 494+ 9435 38 18        	jr c,1F
 495+ 9437 28 16        	jr z,1F
 496+ 9439 E6 01        	and 1
 497+ 943B 28 0D        	jr z,3F
 498+ 943D
 499+ 943D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 943D
 501+ 943D CD 83 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9440
 503+ 9440 7D           9 ld a,l
 504+ 9441 E6 1F        	and $1f
 505+ 9443 28 2A        	jr z,7F
 506+ 9445 2B           	dec hl
 507+ 9446 10 F8        	djnz 9B
 508+ 9448 18 25        	jr 7F
 509+ 944A
 510+ 944A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 944A
 512+ 944A 2A 64 89     3 ld hl,(Posicion_actual)
 513+ 944D 18 20        	jr 7F
 514+ 944F
 515+ 944F 28 14        1 jr z,2F
 516+ 9451
 517+ 9451              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9451
 519+ 9451 CD 83 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9454
 521+ 9454 7D           4 ld a,l
 522+ 9455 E6 1F        	and $1f
 523+ 9457 28 03        	jr z,6F
 524+ 9459 2B           	dec hl
 525+ 945A 10 F8        	djnz 4B
 526+ 945C 06 0F        6 ld b,15
 527+ 945E CD E4 94     5 call PreviousScan
 528+ 9461 10 FB        	djnz 5B
 529+ 9463 18 0A        	jr 7F
 530+ 9465
 531+ 9465              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9465
 533+ 9465 CD 83 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9468 06 0F        	ld b,15
 535+ 946A CD E4 94     8 call PreviousScan
 536+ 946D 10 FB        	djnz 8B
 537+ 946F
 538+ 946F E5           7 push hl
 539+ 9470 DD E1        	pop ix
 540+ 9472
 541+ 9472 2A 66 89     	ld hl,(Puntero_objeto)
 542+ 9475 E5           	push hl
 543+ 9476 FD E1        	pop iy
 544+ 9478
 545+ 9478              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9478
 547+ 9478 3A 84 89     	ld a,(Ctrl_0)
 548+ 947B CB 77        	bit 6,a
 549+ 947D C8           	ret z
 550+ 947E
 551+ 947E              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 947E              ; _ entidad / Amadeus´.
 553+ 947E
 554+ 947E DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 9482
 556+ 9482 C9           	ret
 557+ 9483
 558+ 9483              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9483              ;
 560+ 9483              ;	2/1/23
 561+ 9483              ;
 562+ 9483              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9483              ;
 564+ 9483              ;	Tras esta rutina tenemos:
 565+ 9483              ;
 566+ 9483              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9483              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9483              ;
 569+ 9483              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9483
 571+ 9483 2A 64 89     Operandos ld hl,(Posicion_actual)
 572+ 9486 3A 85 89     	ld a,(Columnas)
 573+ 9489 3D           	dec a
 574+ 948A 20 01        	jr nz,1F
 575+ 948C 3C           	inc a
 576+ 948D 47           1 ld b,a
 577+ 948E C9           	ret
 578+ 948F
 579+ 948F              ; --------------------------------------------------------------------------------------------------------------------
 580+ 948F              ;
 581+ 948F              ;	3/1/23
 582+ 948F              ;
 583+ 948F              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 948F              ;
 585+ 948F              ;	Destruye: A,B,HL y DE.
 586+ 948F
 587+ 948F              Define_rutina_de_impresion
 588+ 948F
 589+ 948F 3A 63 89     	ld a,(Columns)
 590+ 9492 47           	ld b,a
 591+ 9493 3A 85 89     	ld a,(Columnas)
 592+ 9496 B8           	cp b
 593+ 9497 20 0D        	jr nz,2f
 594+ 9499
 595+ 9499              ;	La entidad se imprime entera.
 596+ 9499
 597+ 9499 21 B8 95     	ld hl, Indice_entidades_completas
 598+ 949C E6 01        	and 1
 599+ 949E 28 02        	jr z,1F
 600+ 94A0
 601+ 94A0 23           	inc hl
 602+ 94A1 23           	inc hl
 603+ 94A2
 604+ 94A2 CD B2 8B     1 call Extrae_address
 605+ 94A5 C9           	ret		;	ret
 606+ 94A6
 607+ 94A6              ;	La entidad no se imprime entera en pantalla.
 608+ 94A6
 609+ 94A6 3A 76 89     2 ld a,(Cuad_objeto)
 610+ 94A9 E6 01        	and 1
 611+ 94AB 28 17        	jr z,3F
 612+ 94AD
 613+ 94AD              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 94AD
 615+ 94AD 21 BC 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 94B0 3A 63 89     4 ld a,(Columns)
 617+ 94B3 E6 01        	and 1
 618+ 94B5 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 94B7
 620+ 94B7 23           	inc hl
 621+ 94B8 23           	inc hl
 622+ 94B9
 623+ 94B9 3A 85 89     	ld a,(Columnas)
 624+ 94BC E6 01        	and 1
 625+ 94BE 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 94C0
 627+ 94C0 23           	inc hl
 628+ 94C1 23           	inc hl
 629+ 94C2
 630+ 94C2 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 94C4
 632+ 94C4 21 C2 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 94C7 18 E7        	jr 4B
 634+ 94C9
 635+ 94C9              ; --------------------------------------------------------------------------------------------------------------------
 636+ 94C9              ;
 637+ 94C9              ;	Prepara_draw
 638+ 94C9              ;
 639+ 94C9              ;	Es una rutina de carga.
 640+ 94C9              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 94C9              ;
 642+ 94C9              ;	FUNCIONAMIENTO:
 643+ 94C9              ;
 644+ 94C9              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 94C9              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 94C9              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 94C9              ;
 648+ 94C9              ;	DESTRUYE:
 649+ 94C9              ;
 650+ 94C9              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 94C9
 652+ 94C9 21 62 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 94CC 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 94CD 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 94CE 4E           	ld c,(hl)
 656+ 94CF 2A 64 89     	ld hl,(Posicion_actual)
 657+ 94D2 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 94D4 C9           	ret
 659+ 94D5
 660+ 94D5              ;----------------------------------------------------------------------------------------------------------------
 661+ 94D5              ;
 662+ 94D5              ;	5/08/22
 663+ 94D5              ;
 664+ 94D5              ;   NextScan.
 665+ 94D5              ;
 666+ 94D5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 94D5              ;
 668+ 94D5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 94D5              ;
 670+ 94D5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 94D5              ;
 672+ 94D5              ;       DESTRUIDOS: AF y HL !!!
 673+ 94D5              ;
 674+ 94D5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 94D5              ;
 676+ 94D5
 677+ 94D5 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 94D6 7C               ld a,h
 679+ 94D7 E6 07            and 7
 680+ 94D9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 94DA
 682+ 94DA 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 94DB C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 94DD 6F               ld l,a
 685+ 94DE D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 94DF
 687+ 94DF 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 94E0 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 94E2 67               ld h,a
 690+ 94E3 C9               ret
 691+ 94E4
 692+ 94E4              ;----------------------------------------------------------------------------------------------------------------
 693+ 94E4              ;
 694+ 94E4              ;	5/08/22
 695+ 94E4              ;
 696+ 94E4              ;   PreviousScan.
 697+ 94E4              ;
 698+ 94E4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 94E4              ;
 700+ 94E4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 94E4              ;
 702+ 94E4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 94E4              ;
 704+ 94E4              ;       DESTRUIDOS: AF y HL !!!
 705+ 94E4              ;
 706+ 94E4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 94E4              ;
 708+ 94E4
 709+ 94E4 7C           PreviousScan ld a,h
 710+ 94E5 25               dec h               ; Dec H.
 711+ 94E6 E6 07            and 7
 712+ 94E8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 94E9
 714+ 94E9 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 94EA D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 94EC 6F               ld l,a
 717+ 94ED D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 94EE
 719+ 94EE 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 94EF C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 94F1 67               ld h,a
 722+ 94F2 C9               ret
 723+ 94F3
 724+ 94F3              ; -----------------------------------------------------------------------------------
 725+ 94F3              ;
 726+ 94F3              ;	31/7/23
 727+ 94F3              ;
 728+ 94F3              ;	Rutina principal de pintado de entidades.
 729+ 94F3              ;	Extrae la foto del frame, (entidades).
 730+ 94F3
 731+ 94F3              Extrae_foto_entidades
 732+ 94F3
 733+ 94F3 21 01 80     	ld hl,Album_de_fotos+1
 734+ 94F6 7E           	ld a,(hl)
 735+ 94F7 A7           	and a
 736+ 94F8 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 94F9
 738+ 94F9              ;	No hay datos, (entidades para pintar en este frame).
 739+ 94F9
 740+ 94F9 3A AF 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 94FC A7           	and a
 742+ 94FD C8           	ret z
 743+ 94FE
 744+ 94FE              ; -----------------------------------
 745+ 94FE
 746+ 94FE ED 73 B4 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9502 31 00 80     	ld sp,Album_de_fotos
 748+ 9505
 749+ 9505 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9507 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9508 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9509
 753+ 9509 ED 73 B6 89  	ld (Stack_2),sp
 754+ 950D ED 7B B4 89  	ld sp,(Stack)
 755+ 9511
 756+ 9511              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9511
 758+ 9511 3E CD        	ld a,$cd
 759+ 9513 32 1B 95     	ld (Imprime),a
 760+ 9516 EB           	ex de,hl
 761+ 9517 22 1C 95     	ld (Imprime+1),hl
 762+ 951A EB           	ex de,hl
 763+ 951B
 764+ 951B              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 951B
 766+ 951B 00 00 00     Imprime db 0,0,0
 767+ 951E
 768+ 951E ED 73 B4 89  	ld (Stack),sp
 769+ 9522
 770+ 9522 3A AF 89     	ld a,(Numero_de_malotes)
 771+ 9525 3D           	dec a
 772+ 9526 28 09        	jr z,1F
 773+ 9528 32 AF 89      	ld (Numero_de_malotes),a
 774+ 952B
 775+ 952B ED 7B B6 89  	ld sp,(Stack_2)
 776+ 952F 18 D4        	jr 2B
 777+ 9531
 778+ 9531 AF           1 xor a
 779+ 9532 32 B6 89     	ld (Stack_2),a
 780+ 9535
 781+ 9535 C9           	ret
 782+ 9536
 783+ 9536              ; -----------------------------------------------------------------------------------
 784+ 9536              ;
 785+ 9536              ;	28/2/23
 786+ 9536              ;
 787+ 9536              ;	Pinta los disparos generados.
 788+ 9536
 789+ 9536              Extrae_foto_disparos
 790+ 9536
 791+ 9536 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9539 7E               ld a,(hl)
 793+ 953A A7               and a
 794+ 953B C8               ret z
 795+ 953C
 796+ 953C 3A C4 89     	ld a,(Numero_de_disparotes)
 797+ 953F A7           	and a
 798+ 9540 C8           	ret z
 799+ 9541 ED 73 B4 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9545 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9548
 802+ 9548 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 954A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 954B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 954C
 806+ 954C ED 73 B6 89  	ld (Stack_2),sp
 807+ 9550 ED 7B B4 89  	ld sp,(Stack)
 808+ 9554
 809+ 9554              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9554
 811+ 9554 3E CD        	ld a,$cd
 812+ 9556 32 5E 95     	ld (Imprime2),a
 813+ 9559 EB           	ex de,hl
 814+ 955A 22 5F 95     	ld (Imprime2+1),hl
 815+ 955D EB           	ex de,hl
 816+ 955E
 817+ 955E              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 955E
 819+ 955E 00 00 00     Imprime2 db 0,0,0
 820+ 9561
 821+ 9561 3A C4 89     	ld a,(Numero_de_disparotes)
 822+ 9564 3D           	dec a
 823+ 9565 28 09        	jr z,1F
 824+ 9567 32 C4 89      	ld (Numero_de_disparotes),a
 825+ 956A
 826+ 956A ED 7B B6 89  	ld sp,(Stack_2)
 827+ 956E 18 D8        	jr 2B
 828+ 9570
 829+ 9570 AF           1 xor a
 830+ 9571 32 B6 89     	ld (Stack_2),a
 831+ 9574 C9           	ret
 832+ 9575
 833+ 9575              ; -----------------------------------------------------------------------------------
 834+ 9575              ;
 835+ 9575              ;	4/9/23
 836+ 9575              ;
 837+ 9575              ;	Rutina principal de pintado de Amadeus.
 838+ 9575              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9575
 840+ 9575 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9578 7E           	ld a,(hl)
 842+ 9579 A7           	and a
 843+ 957A C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 957B
 845+ 957B 3A AF 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 957E A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 957F C8           	ret z
 848+ 9580
 849+ 9580              ; -----------------------------------
 850+ 9580
 851+ 9580 ED 73 B4 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9584 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 9587
 854+ 9587 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9589 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 958A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 958B
 858+ 958B ED 73 B6 89  	ld (Stack_2),sp
 859+ 958F ED 7B B4 89  	ld sp,(Stack)
 860+ 9593
 861+ 9593              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9593
 863+ 9593 3E CD        	ld a,$cd
 864+ 9595 32 9D 95     	ld (Imprime_Amadeus),a
 865+ 9598 EB           	ex de,hl
 866+ 9599 22 9E 95     	ld (Imprime_Amadeus+1),hl
 867+ 959C EB           	ex de,hl
 868+ 959D
 869+ 959D              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 959D
 871+ 959D 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 95A0
 873+ 95A0 ED 73 B4 89  	ld (Stack),sp
 874+ 95A4
 875+ 95A4 3A AF 89     	ld a,(Numero_de_malotes)
 876+ 95A7 3D           	dec a
 877+ 95A8 28 09        	jr z,1F
 878+ 95AA 32 AF 89      	ld (Numero_de_malotes),a
 879+ 95AD
 880+ 95AD ED 7B B6 89  	ld sp,(Stack_2)
 881+ 95B1 18 D4        	jr 2B
 882+ 95B3
 883+ 95B3 AF           1 xor a
 884+ 95B4 32 B6 89     	ld (Stack_2),a
 885+ 95B7
 886+ 95B7 C9           	ret
# file closed: Draw_XOR.asm
1757  95B8              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95B8              ;   índices de Rutinas de impresión.
   2+ 95B8
   3+ 95B8 C8 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95BA F5 95            defw Pinta_Amadeus_3x2
   5+ 95BC
   6+ 95BC 4B 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95BE EB 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95C0 9F 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95C2
  10+ 95C2 75 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95C4 79 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95C6 2D 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95C8
  14+ 95C8
  15+ 95C8              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95C8              ;
  17+ 95C8              ;   12/12/22
  18+ 95C8              ;
  19+ 95C8              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95C8              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95C8              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95C8              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95C8              ;
  24+ 95C8              ;   Modifica: DE y HL.
  25+ 95C8
  26+ 95C8 ED 73 B4 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95CC FD F9        	ld sp,iy
  28+ 95CE 06 10            ld b,16
  29+ 95D0 D1           1 pop de
  30+ 95D1 7B               ld a,e
  31+ 95D2 AE               xor (hl)
  32+ 95D3 77           	ld (hl),a
  33+ 95D4 23           	inc hl
  34+ 95D5 7A               ld a,d
  35+ 95D6 AE               xor (hl)
  36+ 95D7 77           	ld (hl),a
  37+ 95D8 2B           	dec hl
  38+ 95D9 24           	inc h
  39+ 95DA 7C               ld a,h
  40+ 95DB E6 07            and 7
  41+ 95DD 20 0A            jr nz,2F
  42+ 95DF 7D               ld a,l
  43+ 95E0 C6 20            add a,$20
  44+ 95E2 6F               ld l,a
  45+ 95E3 38 04            jr c,2F
  46+ 95E5 7C               ld a,h
  47+ 95E6 D6 08            sub 8
  48+ 95E8 67               ld h,a
  49+ 95E9 7C           2 ld a,h
  50+ 95EA FE 58            cp $58
  51+ 95EC 28 02            jr z,3F
  52+ 95EE 10 E0            djnz 1B
  53+ 95F0 ED 7B B4 89  3 ld sp,(Stack)
  54+ 95F4 C9           	ret
  55+ 95F5
  56+ 95F5 ED 73 B4 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 95F9 FD F9        	ld sp,iy
  58+ 95FB 06 08            ld b,8
  59+ 95FD D1           1 pop de
  60+ 95FE 7B               ld a,e
  61+ 95FF AE               xor (hl)
  62+ 9600 77           	ld (hl),a
  63+ 9601 23           	inc hl
  64+ 9602 7A               ld a,d
  65+ 9603 AE               xor (hl)
  66+ 9604 77           	ld (hl),a
  67+ 9605 23           	inc hl
  68+ 9606 D1           	pop de
  69+ 9607 7B               ld a,e
  70+ 9608 AE               xor (hl)
  71+ 9609 77           	ld (hl),a
  72+ 960A 2B           	dec hl
  73+ 960B 2B           	dec hl
  74+ 960C 24           	inc h
  75+ 960D 7C               ld a,h
  76+ 960E E6 07            and 7
  77+ 9610 20 0A            jr nz,2F
  78+ 9612 7D               ld a,l
  79+ 9613 C6 20            add a,$20
  80+ 9615 6F               ld l,a
  81+ 9616 38 04            jr c,2F
  82+ 9618 7C               ld a,h
  83+ 9619 D6 08            sub 8
  84+ 961B 67               ld h,a
  85+ 961C 7C           2 ld a,h
  86+ 961D FE 58            cp $58
  87+ 961F 28 25            jr z,4F
  88+ 9621 7A               ld a,d
  89+ 9622 AE               xor (hl)
  90+ 9623 77               ld (hl),a
  91+ 9624 D1           	pop de
  92+ 9625 23           	inc hl
  93+ 9626 7B               ld a,e
  94+ 9627 AE               xor (hl)
  95+ 9628 77           	ld (hl),a
  96+ 9629 23           	inc hl
  97+ 962A 7A               ld a,d
  98+ 962B AE               xor (hl)
  99+ 962C 77           	ld (hl),a
 100+ 962D 2B           	dec hl
 101+ 962E 2B           	dec hl
 102+ 962F 24           	inc h
 103+ 9630 7C               ld a,h
 104+ 9631 E6 07            and 7
 105+ 9633 20 0A            jr nz,3F
 106+ 9635 7D               ld a,l
 107+ 9636 C6 20            add a,$20
 108+ 9638 6F               ld l,a
 109+ 9639 38 04            jr c,3F
 110+ 963B 7C               ld a,h
 111+ 963C D6 08            sub 8
 112+ 963E 67               ld h,a
 113+ 963F 7C           3 ld a,h
 114+ 9640 FE 58            cp $58
 115+ 9642 28 02            jr z,4F
 116+ 9644 10 B7            djnz 1B
 117+ 9646 ED 7B B4 89  4 ld sp,(Stack)
 118+ 964A C9           	ret
 119+ 964B
 120+ 964B              ; ---------------------------------------------------
 121+ 964B
 122+ 964B ED 73 B4 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 964F FD F9        	ld sp,iy
 124+ 9651
 125+ 9651              ; >>>
 126+ 9651
 127+ 9651 06 10            ld b,16
 128+ 9653 D1           1 pop de
 129+ 9654 7A           	ld a,d
 130+ 9655 AE           	xor (hl)
 131+ 9656 77           	ld (hl),a
 132+ 9657 24           	inc h
 133+ 9658 7C               ld a,h
 134+ 9659 E6 07            and 7
 135+ 965B 20 0C            jr nz,2F
 136+ 965D 7D               ld a,l
 137+ 965E C6 20            add a,$20
 138+ 9660 6F               ld l,a
 139+ 9661 38 06            jr c,2F
 140+ 9663 7C               ld a,h
 141+ 9664 D6 08            sub 8
 142+ 9666 67               ld h,a
 143+ 9667 18 00            jr 2F
 144+ 9669 7C           2 ld a,h
 145+ 966A FE 58            cp $58
 146+ 966C 28 02            jr z,3F
 147+ 966E 10 E3            djnz 1B
 148+ 9670 ED 7B B4 89  3 ld sp,(Stack)
 149+ 9674 C9           	ret
 150+ 9675
 151+ 9675 ED 73 B4 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9679 FD F9        	ld sp,iy
 153+ 967B
 154+ 967B              ; >>>
 155+ 967B
 156+ 967B 06 10            ld b,16
 157+ 967D D1           1 pop de
 158+ 967E 7B           	ld a,e
 159+ 967F AE           	xor (hl)
 160+ 9680 77           	ld (hl),a
 161+ 9681 24           	inc h
 162+ 9682 7C               ld a,h
 163+ 9683 E6 07            and 7
 164+ 9685 20 0C            jr nz,2F
 165+ 9687 7D               ld a,l
 166+ 9688 C6 20            add a,$20
 167+ 968A 6F               ld l,a
 168+ 968B 38 06            jr c,2F
 169+ 968D 7C               ld a,h
 170+ 968E D6 08            sub 8
 171+ 9690 67               ld h,a
 172+ 9691 18 00            jr 2F
 173+ 9693 7C           2 ld a,h
 174+ 9694 FE 58            cp $58
 175+ 9696 28 02            jr z,3F
 176+ 9698 10 E3            djnz 1B
 177+ 969A ED 7B B4 89  3 ld sp,(Stack)
 178+ 969E C9           	ret
 179+ 969F
 180+ 969F              ; ---------------------------------------------------
 181+ 969F
 182+ 969F ED 73 B4 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96A3 FD F9        	ld sp,iy
 184+ 96A5 06 08            ld b,8
 185+ 96A7 D1           1 pop de
 186+ 96A8 7A           	ld a,d
 187+ 96A9 AE           	xor (hl)
 188+ 96AA 77           	ld (hl),a
 189+ 96AB 23           	inc hl
 190+ 96AC D1           	pop de
 191+ 96AD 7B           	ld a,e
 192+ 96AE AE           	xor (hl)
 193+ 96AF 77           	ld (hl),a
 194+ 96B0 2B           	dec hl
 195+ 96B1 24            	inc h
 196+ 96B2 7C               ld a,h
 197+ 96B3 E6 07            and 7
 198+ 96B5 20 0A            jr nz,2F
 199+ 96B7 7D               ld a,l
 200+ 96B8 C6 20            add a,$20
 201+ 96BA 6F               ld l,a
 202+ 96BB 38 04            jr c,2F
 203+ 96BD 7C               ld a,h
 204+ 96BE D6 08            sub 8
 205+ 96C0 67               ld h,a
 206+ 96C1 7C           2 ld a,h
 207+ 96C2 FE 58            cp $58
 208+ 96C4 28 20            jr z,4F
 209+ 96C6 D1               pop de
 210+ 96C7 7B           	ld a,e
 211+ 96C8 AE           	xor (hl)
 212+ 96C9 77           	ld (hl),a
 213+ 96CA 23           	inc hl
 214+ 96CB 7A           	ld a,d
 215+ 96CC AE           	xor (hl)
 216+ 96CD 77           	ld (hl),a
 217+ 96CE 2B           	dec hl
 218+ 96CF 24           	inc h
 219+ 96D0 7C               ld a,h
 220+ 96D1 E6 07            and 7
 221+ 96D3 20 0A            jr nz,3F
 222+ 96D5 7D               ld a,l
 223+ 96D6 C6 20            add a,$20
 224+ 96D8 6F               ld l,a
 225+ 96D9 38 04            jr c,3F
 226+ 96DB 7C               ld a,h
 227+ 96DC D6 08            sub 8
 228+ 96DE 67               ld h,a
 229+ 96DF 7C           3 ld a,h
 230+ 96E0 FE 58            cp $58
 231+ 96E2 28 02            jr z,4F
 232+ 96E4 10 C1            djnz 1B
 233+ 96E6 ED 7B B4 89  4 ld sp,(Stack)
 234+ 96EA C9           	ret
 235+ 96EB
 236+ 96EB ED 73 B4 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 96EF FD F9        	ld sp,iy
 238+ 96F1 06 08            ld b,8
 239+ 96F3 D1           1 pop de
 240+ 96F4 D1           	pop de
 241+ 96F5 7B           	ld a,e
 242+ 96F6 AE           	xor (hl)
 243+ 96F7 77           	ld (hl),a
 244+ 96F8 24            	inc h
 245+ 96F9 7C               ld a,h
 246+ 96FA E6 07            and 7
 247+ 96FC 20 0A            jr nz,2F
 248+ 96FE 7D               ld a,l
 249+ 96FF C6 20            add a,$20
 250+ 9701 6F               ld l,a
 251+ 9702 38 04            jr c,2F
 252+ 9704 7C               ld a,h
 253+ 9705 D6 08            sub 8
 254+ 9707 67               ld h,a
 255+ 9708 7C           2 ld a,h
 256+ 9709 FE 58            cp $58
 257+ 970B 28 1B            jr z,4F
 258+ 970D D1               pop de
 259+ 970E 7A           	ld a,d
 260+ 970F AE           	xor (hl)
 261+ 9710 77           	ld (hl),a
 262+ 9711 24           	inc h
 263+ 9712 7C               ld a,h
 264+ 9713 E6 07            and 7
 265+ 9715 20 0A            jr nz,3F
 266+ 9717 7D               ld a,l
 267+ 9718 C6 20            add a,$20
 268+ 971A 6F               ld l,a
 269+ 971B 38 04            jr c,3F
 270+ 971D 7C               ld a,h
 271+ 971E D6 08            sub 8
 272+ 9720 67               ld h,a
 273+ 9721 7C           3 ld a,h
 274+ 9722 FE 58            cp $58
 275+ 9724 28 02            jr z,4F
 276+ 9726 10 CB            djnz 1B
 277+ 9728 ED 7B B4 89  4 ld sp,(Stack)
 278+ 972C C9           	ret
 279+ 972D
 280+ 972D ED 73 B4 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9731 FD F9        	ld sp,iy
 282+ 9733 06 08            ld b,8
 283+ 9735 D1           1 pop de
 284+ 9736 7B           	ld a,e
 285+ 9737 AE           	xor (hl)
 286+ 9738 77           	ld (hl),a
 287+ 9739 23           	inc hl
 288+ 973A 7A           	ld a,d
 289+ 973B AE           	xor (hl)
 290+ 973C 77           	ld (hl),a
 291+ 973D 2B           	dec hl
 292+ 973E 24             	inc h
 293+ 973F 7C               ld a,h
 294+ 9740 E6 07            and 7
 295+ 9742 20 0A            jr nz,2F
 296+ 9744 7D               ld a,l
 297+ 9745 C6 20            add a,$20
 298+ 9747 6F               ld l,a
 299+ 9748 38 04            jr c,2F
 300+ 974A 7C               ld a,h
 301+ 974B D6 08            sub 8
 302+ 974D 67               ld h,a
 303+ 974E 7C           2 ld a,h
 304+ 974F FE 58            cp $58
 305+ 9751 28 21            jr z,4F
 306+ 9753 D1               pop de
 307+ 9754 7A           	ld a,d
 308+ 9755 AE           	xor (hl)
 309+ 9756 77           	ld (hl),a
 310+ 9757 23           	inc hl
 311+ 9758 D1               pop de
 312+ 9759 7B           	ld a,e
 313+ 975A AE           	xor (hl)
 314+ 975B 77           	ld (hl),a
 315+ 975C 2B           	dec hl
 316+ 975D 24           	inc h
 317+ 975E 7C               ld a,h
 318+ 975F E6 07            and 7
 319+ 9761 20 0A            jr nz,3F
 320+ 9763 7D               ld a,l
 321+ 9764 C6 20            add a,$20
 322+ 9766 6F               ld l,a
 323+ 9767 38 04            jr c,3F
 324+ 9769 7C               ld a,h
 325+ 976A D6 08            sub 8
 326+ 976C 67               ld h,a
 327+ 976D 7C           3 ld a,h
 328+ 976E FE 58            cp $58
 329+ 9770 28 02            jr z,4F
 330+ 9772 10 C1            djnz 1B
 331+ 9774 ED 7B B4 89  4 ld sp,(Stack)
 332+ 9778 C9           	ret
 333+ 9779
 334+ 9779 ED 73 B4 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 977D FD F9        	ld sp,iy
 336+ 977F 06 08            ld b,8
 337+ 9781 D1           1 pop de
 338+ 9782 7B           	ld a,e
 339+ 9783 AE           	xor (hl)
 340+ 9784 77           	ld (hl),a
 341+ 9785 24            	inc h
 342+ 9786 7C               ld a,h
 343+ 9787 E6 07            and 7
 344+ 9789 20 0A            jr nz,2F
 345+ 978B 7D               ld a,l
 346+ 978C C6 20            add a,$20
 347+ 978E 6F               ld l,a
 348+ 978F 38 04            jr c,2F
 349+ 9791 7C               ld a,h
 350+ 9792 D6 08            sub 8
 351+ 9794 67               ld h,a
 352+ 9795 7C           2 ld a,h
 353+ 9796 FE 58            cp $58
 354+ 9798 28 1C            jr z,4F
 355+ 979A D1               pop de
 356+ 979B 7A           	ld a,d
 357+ 979C AE           	xor (hl)
 358+ 979D 77           	ld (hl),a
 359+ 979E 24           	inc h
 360+ 979F 7C               ld a,h
 361+ 97A0 E6 07            and 7
 362+ 97A2 20 0A            jr nz,3F
 363+ 97A4 7D               ld a,l
 364+ 97A5 C6 20            add a,$20
 365+ 97A7 6F               ld l,a
 366+ 97A8 38 04            jr c,3F
 367+ 97AA 7C               ld a,h
 368+ 97AB D6 08            sub 8
 369+ 97AD 67               ld h,a
 370+ 97AE 7C           3 ld a,h
 371+ 97AF FE 58            cp $58
 372+ 97B1 28 03            jr z,4F
 373+ 97B3 D1               pop de
 374+ 97B4 10 CB            djnz 1B
 375+ 97B6 ED 7B B4 89  4 ld sp,(Stack)
 376+ 97BA C9           	ret
 377+ 97BB
 378+ 97BB              ; ---------------------------------------------------
 379+ 97BB              ;
 380+ 97BB              ;   27/02/23
 381+ 97BB              ;
 382+ 97BB              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97BB              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97BB              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97BB
 386+ 97BB ED 73 B4 89  Pinta_Disparo ld (Stack),sp
 387+ 97BF FD F9            ld sp,iy
 388+ 97C1 06 03            ld b,3
 389+ 97C3 D1           1 pop de
 390+ 97C4 7B               ld a,e
 391+ 97C5 AE               xor (hl)
 392+ 97C6 77               ld (hl),a
 393+ 97C7 23               inc hl
 394+ 97C8 7A               ld a,d
 395+ 97C9 AE               xor (hl)
 396+ 97CA 77               ld (hl),a
 397+ 97CB 2B               dec hl
 398+ 97CC
 399+ 97CC 24               inc h
 400+ 97CD 7C               ld a,h
 401+ 97CE E6 07            and 7
 402+ 97D0 20 0A            jr nz,2F
 403+ 97D2 7D               ld a,l
 404+ 97D3 C6 20            add a,$20
 405+ 97D5 6F               ld l,a
 406+ 97D6 38 04            jr c,2F
 407+ 97D8 7C               ld a,h
 408+ 97D9 D6 08            sub 8
 409+ 97DB 67               ld h,a
 410+ 97DC 7C           2 ld a,h
 411+ 97DD FE 58            cp $58
 412+ 97DF 28 02            jr z,3F
 413+ 97E1
 414+ 97E1 10 E0            djnz 1B
 415+ 97E3 ED 7B B4 89  3 ld sp,(Stack)
 416+ 97E7 C9               ret
 417+ 97E8
# file closed: Rutinas_de_impresion_sprites.asm
1758  97E8              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 97E8              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 97E8              ;
   3+ 97E8              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 97E8              ;
   5+ 97E8              ; *****************************************************************************************************************************************************************************************
   6+ 97E8              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 97E8
   8+ 97E8 7C           calcula_tercio ld a,h
   9+ 97E9 E6 18        	and $18
  10+ 97EB CB 2F        	sra a
  11+ 97ED CB 2F        	sra a
  12+ 97EF CB 2F        	sra a
  13+ 97F1 C9           	ret
  14+ 97F2
# file closed: calcula_tercio.asm
1759  97F2              	include "Cls.asm"
# file opened: Cls.asm
   1+ 97F2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 97F2              ;
   3+ 97F2              ;
   4+ 97F2              ;	CLS.
   5+ 97F2              ;
   6+ 97F2              ;	Limpia la pantalla y define sus atributos.
   7+ 97F2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 97F2              ;
   9+ 97F2              ;	COLORES: 0 ..... NEGRO
  10+ 97F2              ;    		 1 ..... AZUL
  11+ 97F2              ; 			 2 ..... ROJO
  12+ 97F2              ;			 3 ..... MAGENTA
  13+ 97F2              ; 			 4 ..... VERDE
  14+ 97F2              ; 			 5 ..... CIAN
  15+ 97F2              ;			 6 ..... AMARILLO
  16+ 97F2              ; 			 7 ..... BLANCO
  17+ 97F2              ;
  18+ 97F2              ;	INPUT: A contiene los atributos de pantalla.
  19+ 97F2              ;
  20+ 97F2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 97F2
  22+ 97F2
  23+ 97F2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 97F5 11 01 40     	LD DE,$4001
  25+ 97F8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 97FB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 97FD ED B0        	LDIR
  28+ 97FF 01 FF 02     	LD BC,767
  29+ 9802 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9803 ED B0        	LDIR
  31+ 9805 C9           	ret
  32+ 9806
# file closed: Cls.asm
1760  9806              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9806
   2+ 9806              ; ******************************************************************************************************************************************************************************************
   3+ 9806              ;
   4+ 9806              ;   20/05/23
   5+ 9806              ;
   6+ 9806              ;	Recompone_posicion_inicio
   7+ 9806              ;
   8+ 9806              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9806              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9806              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9806              ;	_ a una u otra rutina.
  12+ 9806
  13+ 9806              Recompone_posicion_inicio
  14+ 9806
  15+ 9806 2A 74 89     	ld hl,(Posicion_inicio)
  16+ 9809 7D           	ld a,l
  17+ 980A E6 1F        	and $1f
  18+ 980C 28 16        	jr z,1F
  19+ 980E
  20+ 980E FE 1F        	cp $1f
  21+ 9810 28 0D        	jr z,3F
  22+ 9812
  23+ 9812 21 89 89     	ld hl,Ctrl_2
  24+ 9815 CB C6        	set 0,(hl)
  25+ 9817 2A 66 89     	ld hl,(Puntero_objeto)
  26+ 981A 22 A4 89     	ld (Repone_puntero_objeto),hl
  27+ 981D 18 08        	jr 2F
  28+ 981F
  29+ 981F CD CD 99     3 call Mov_left
  30+ 9822 18 03        	jr 2F
  31+ 9824
  32+ 9824 CD AA 98     1 call Mov_right
  33+ 9827 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 982A 22 66 89     	ld (Puntero_objeto),hl
  35+ 982D C9           	ret
  36+ 982E
  37+ 982E              ; ******************************************************************************************************************************************************************************************
  38+ 982E              ;
  39+ 982E              ;   27/05/23
  40+ 982E              ;
  41+ 982E              ;	Mov_down
  42+ 982E              ;
  43+ 982E              ; 	Mueve el Sprite X px hacia abajo.
  44+ 982E              ;
  45+ 982E              ;
  46+ 982E              Mov_down
  47+ 982E
  48+ 982E CD 98 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9831              ;																	; _ repone (Puntero_objeto).
  50+ 9831 21 84 89     	ld hl,Ctrl_0
  51+ 9834 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9836              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9836              ; 																	; _ en el caso de que no lo haya.
  54+ 9836 3A 8E 89     	ld a,(Vel_down)
  55+ 9839 47           	ld b,a
  56+ 983A 2A 64 89         ld hl,(Posicion_actual)
  57+ 983D CD E8 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9840 E6 02        	and 2
  59+ 9842 28 17        	jr z,1F
  60+ 9844
  61+ 9844              ; Nos encontramos en el último tercio de pantalla.
  62+ 9844              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9844
  64+ 9844 7C           	ld a,h
  65+ 9845 FE 57        	cp $57
  66+ 9847 20 12        	jr nz,1F
  67+ 9849
  68+ 9849 7D           	ld a,l
  69+ 984A C6 20        	add $20
  70+ 984C 30 0D        	jr nc,1F
  71+ 984E
  72+ 984E              ; ------------------------------
  73+ 984E              ;
  74+ 984E              ;	12/01/24
  75+ 984E
  76+ 984E              ;	call Reaparece_arriba
  77+ 984E CD 5A 9B     	call Reinicio
  78+ 9851
  79+ 9851              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9851
  81+ 9851 3A C2 89     	ld a,(Ctrl_3)
  82+ 9854 CB CF        	set 1,a
  83+ 9856 32 C2 89     	ld (Ctrl_3),a
  84+ 9859
  85+ 9859 18 08        	jr 3F
  86+ 985B              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 985B              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 985B              ; ------------------------------
  89+ 985B
  90+ 985B CD D5 94     1 call NextScan
  91+ 985E 22 64 89     	ld (Posicion_actual),hl
  92+ 9861 10 DA            djnz 2B
  93+ 9863 CD 80 9B     3 call Genera_coordenadas
  94+ 9866 C9           	ret
  95+ 9867
  96+ 9867              ; ******************************************************************************************************************************************************************************************
  97+ 9867              ;
  98+ 9867              ;   27/05/23
  99+ 9867              ;
 100+ 9867              ;	Mov_up
 101+ 9867              ;
 102+ 9867              ; 	Mueve el Sprite hacia arriba.
 103+ 9867              ;
 104+ 9867              ;
 105+ 9867              Mov_up
 106+ 9867
 107+ 9867 CD 98 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 986A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 986A 21 84 89     	ld hl,Ctrl_0
 110+ 986D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 986F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 986F              ; 																		; _ en el caso de que no lo haya.
 113+ 986F 3A 8D 89     	ld a,(Vel_up)
 114+ 9872 47           	ld b,a
 115+ 9873 2A 64 89     	ld hl,(Posicion_actual)
 116+ 9876 CD E8 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9879 A7           	and a
 118+ 987A 20 10        	jr nz,1F
 119+ 987C
 120+ 987C              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 987C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 987C
 123+ 987C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 987D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 987F 20 0B            jr nz,1F
 126+ 9881 7D               ld a,l
 127+ 9882 D6 20            sub $20
 128+ 9884 30 06            jr nc,1F
 129+ 9886 25               dec h
 130+ 9887
 131+ 9887              ; -----------------------------
 132+ 9887 CD 3B 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 988A              ;	call Reinicio
 134+ 988A              ; -----------------------------
 135+ 988A
 136+ 988A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 988C CD E4 94     1 call PreviousScan
 138+ 988F 22 64 89     	ld (Posicion_actual),hl
 139+ 9892 10 E2            djnz 3B
 140+ 9894 CD 80 9B     2 call Genera_coordenadas
 141+ 9897 C9           	ret
 142+ 9898
 143+ 9898              ; -----------------------------
 144+ 9898              ;
 145+ 9898              ;	27/5/23
 146+ 9898              ;
 147+ 9898              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9898              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9898              ;
 150+ 9898              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9898              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9898              ;
 153+ 9898              ;	Modifica: A y (Puntero_objeto).
 154+ 9898
 155+ 9898 3A 89 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 989B CB 47        	bit 0,a
 157+ 989D C8           	ret z
 158+ 989E CB 87        	res 0,a
 159+ 98A0 32 89 89     	ld (Ctrl_2),a
 160+ 98A3 2A A4 89     	ld hl,(Repone_puntero_objeto)
 161+ 98A6 22 66 89     	ld (Puntero_objeto),hl
 162+ 98A9 C9           	ret
 163+ 98AA
 164+ 98AA              ; ******************************************************************************************************************************************************************************************
 165+ 98AA              ;
 166+ 98AA              ;	19/10/22
 167+ 98AA              ;
 168+ 98AA              ;	Mov_right.
 169+ 98AA              ;
 170+ 98AA              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 98AA              ;
 172+ 98AA
 173+ 98AA 3A 84 89     Mov_right ld a,(Ctrl_0)
 174+ 98AD CB 77        	bit 6,a
 175+ 98AF 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 98B1
 177+ 98B1 CD E9 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 98B4 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 98B5
 180+ 98B5 21 84 89     	ld hl,Ctrl_0
 181+ 98B8 CB E6        	set 4,(hl)
 182+ 98BA 18 52        	jr 8F
 183+ 98BC
 184+ 98BC 21 84 89     10 ld hl,Ctrl_0
 185+ 98BF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 98C1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 98C1              ; 																	; _ en el caso de que no lo haya.
 188+ 98C1 3A 68 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 98C4 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 98C6 20 46        	jr nz,8F
 191+ 98C8
 192+ 98C8 3A 6A 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 98CB A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 98CC 28 40        	jr z,8F
 195+ 98CE
 196+ 98CE              ; ---------- ---------- ----------
 197+ 98CE              ;
 198+ 98CE              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98CE
 200+ 98CE 3A 8C 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 98D1 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98D3 28 11        	jr z,1F
 203+ 98D5 38 06        	jr c,6F
 204+ 98D7 FE 04        	cp 4
 205+ 98D9 28 14        	jr z,7F
 206+ 98DB 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 98DD
 208+ 98DD              ; ---------- ---------- ----------
 209+ 98DD              ;
 210+ 98DD              ; Perfiles de velocidad
 211+ 98DD              ;
 212+ 98DD
 213+ 98DD 3A 6A 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 98E0 FE FE        	cp $fe
 215+ 98E2 20 2A        	jr nz,8F
 216+ 98E4 18 10        	jr 3F
 217+ 98E6 3A 6A 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 98E9 FE FD        	cp $fd
 219+ 98EB 20 21        	jr nz,8F
 220+ 98ED 18 07        	jr 3F
 221+ 98EF 3A 6A 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 98F2 FE FB        	cp $fb
 223+ 98F4 20 18        	jr nz,8F
 224+ 98F6
 225+ 98F6              ; ---------- ---------- ----------
 226+ 98F6
 227+ 98F6              3
 228+ 98F6 CD 29 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 98F9              ;	call Reinicio
 230+ 98F9
 231+ 98F9              ; ---------- ---------- ----------
 232+ 98F9              ;
 233+ 98F9              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 98F9
 235+ 98F9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 98FB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 98FC CD 15 99     	call DESPLZ_DER
 238+ 98FF C1           	pop bc
 239+ 9900 10 F9        	djnz 5B
 240+ 9902 2A 64 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9905 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9906 22 64 89     	ld (Posicion_actual),hl
 243+ 9909 CD 80 9B     	call Genera_coordenadas
 244+ 990C 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 990E
 246+ 990E              ; ---------- ---------- ----------
 247+ 990E
 248+ 990E 2A 64 89     8 ld hl,(Posicion_actual)
 249+ 9911 CD 15 99     	call DESPLZ_DER
 250+ 9914 C9           2 ret
 251+ 9915
 252+ 9915              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9915              ;
 254+ 9915              ;	22/9/22
 255+ 9915              ;
 256+ 9915
 257+ 9915 CD 24 99     DESPLZ_DER call Desplaza_derecha
 258+ 9918 CD 70 99         call modifica_parametros_1er_DESPLZ_2
 259+ 991B CD 99 99         call Ciclo_completo
 260+ 991E 21 84 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9921 CB FE        	set 7,(hl)
 262+ 9923 C9           	ret
 263+ 9924
 264+ 9924              ; ******************************************************************************************************************************************************************************************
 265+ 9924              ;	15/02/23
 266+ 9924              ;
 267+ 9924
 268+ 9924 3A 8C 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9927 47           	ld b,a
 270+ 9928 2A 70 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 992B 23           1 inc hl
 272+ 992C 23           	inc hl
 273+ 992D 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 992F 22 70 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9932 CD B2 8B     	call Extrae_address
 276+ 9935 22 66 89     	ld (Puntero_objeto),hl
 277+ 9938
 278+ 9938              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9938
 280+ 9938              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9938              ; Cuántos movimientos hemos hecho ??
 282+ 9938              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9938
 284+ 9938 2A 6C 89     7 ld hl,(Indice_Sprite_der)
 285+ 993B EB           	ex de,hl
 286+ 993C A7           	and a
 287+ 993D ED 52        	sbc hl,de
 288+ 993F CB 3D        	srl l
 289+ 9941 3E 08        6 ld a,8
 290+ 9943 95           	sub l
 291+ 9944 30 1E        	jr nc,3F
 292+ 9946
 293+ 9946              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9946              ; B="0".
 295+ 9946
 296+ 9946 04           4 inc b
 297+ 9947 3C           	inc a
 298+ 9948 20 FC        	jr nz,4B
 299+ 994A 78           	ld a,b
 300+ 994B 08           	ex af,af
 301+ 994C 2A 6C 89     	ld hl,(Indice_Sprite_der)
 302+ 994F 23           5 inc hl
 303+ 9950 23           	inc hl
 304+ 9951 10 FC        	djnz 5B
 305+ 9953 22 70 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9956 CD B2 8B     	call Extrae_address
 307+ 9959 22 66 89     	ld (Puntero_objeto),hl
 308+ 995C
 309+ 995C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 995C              ; _(Posicion_actual).
 311+ 995C
 312+ 995C 21 64 89     	ld hl,Posicion_actual
 313+ 995F 34           	inc (hl)
 314+ 9960 08               ex af,af
 315+ 9961 6F           	ld l,a
 316+ 9962 18 DD        	jr 6B
 317+ 9964
 318+ 9964              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9964
 320+ 9964 47           3 ld b,a
 321+ 9965 2A 6E 89     	ld hl,(Indice_Sprite_izq)
 322+ 9968 23           2 inc hl
 323+ 9969 23           	inc hl
 324+ 996A 10 FC        	djnz 2B
 325+ 996C 22 72 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 996F C9           8 ret
 327+ 9970
 328+ 9970              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9970              ;
 330+ 9970              ;	24/7/22
 331+ 9970              ;
 332+ 9970              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9970              ;
 334+ 9970              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9970              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9970              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9970
 338+ 9970 3A 6A 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9973 A7           	and a
 340+ 9974 20 1F        	jr nz,1F
 341+ 9976 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9978 32 6A 89         ld (CTRL_DESPLZ),a
 343+ 997B
 344+ 997B 21 63 89     	ld hl,Columns
 345+ 997E 34           	inc (hl)
 346+ 997F 3A 76 89     	ld a,(Cuad_objeto)
 347+ 9982 E6 01        	and 1
 348+ 9984 28 0F        	jr z,1F
 349+ 9986 2A 64 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9989 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 998A 22 64 89     	ld (Posicion_actual),hl
 352+ 998D CD 80 9B     	call Genera_coordenadas
 353+ 9990 CD F5 9A     	call Inc_CTRL_DESPLZ
 354+ 9993 18 03        	jr 2F
 355+ 9995 CD F5 9A     1 call Inc_CTRL_DESPLZ
 356+ 9998 C9           2 ret
 357+ 9999
 358+ 9999              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9999              ;
 360+ 9999              ;	24/7/22
 361+ 9999              ;
 362+ 9999              ;	Ciclo_completo.
 363+ 9999              ;
 364+ 9999              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9999              ;
 366+ 9999              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9999              ; 	Decrementamos (Columns).
 368+ 9999              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9999              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9999
 371+ 9999
 372+ 9999 3A 6A 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 999C FE FF        	cp $ff
 374+ 999E 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 99A0 E6 F0        	and $f0
 376+ 99A2 20 28        	jr nz,3F
 377+ 99A4
 378+ 99A4              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 99A4
 380+ 99A4 3A 6A 89     	ld a,(CTRL_DESPLZ)
 381+ 99A7 47           	ld b,a
 382+ 99A8 3E F8        	ld a,$f8
 383+ 99AA 80           	add b
 384+ 99AB 32 6A 89     	ld (CTRL_DESPLZ),a
 385+ 99AE 18 1C        	jr 3F
 386+ 99B0 21 63 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 99B3 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 99B4 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 99B5 32 6A 89     	ld (CTRL_DESPLZ),a
 390+ 99B8 3A 76 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 99BB E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 99BD 20 0A        	jr nz,2F
 393+ 99BF 2A 64 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 99C2 23           	inc hl
 395+ 99C3 22 64 89     	ld (Posicion_actual),hl
 396+ 99C6 CD 80 9B     	call Genera_coordenadas
 397+ 99C9
 398+ 99C9              ; Inicia el puntero de Sprite.
 399+ 99C9
 400+ 99C9 CD C7 8B     2 call Inicia_puntero_objeto_der
 401+ 99CC C9           3 ret
 402+ 99CD
 403+ 99CD              ; ******************************************************************************************************************************************************************************************
 404+ 99CD              ;
 405+ 99CD              ;	15/02/23
 406+ 99CD              ;
 407+ 99CD              ;	Mov_left.
 408+ 99CD              ;
 409+ 99CD              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 99CD              ;
 411+ 99CD              Mov_left
 412+ 99CD
 413+ 99CD 21 84 89     	ld hl,Ctrl_0
 414+ 99D0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99D2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99D2              ; 																	; _ en el caso de que no lo haya.
 417+ 99D2 3A 84 89     	ld a,(Ctrl_0)
 418+ 99D5 CB 77        	bit 6,a
 419+ 99D7 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 99D9
 421+ 99D9 CD EF 9A     	call Stop_Amadeus_left
 422+ 99DC C8           	ret z
 423+ 99DD 20 4A        	jr nz,8F
 424+ 99DF
 425+ 99DF 3A 68 89     11 ld a,(Coordenada_X)
 426+ 99E2 A7           	and a
 427+ 99E3 20 44        	jr nz,8F
 428+ 99E5
 429+ 99E5 3A 6A 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 99E8 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 99E9 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 99EB
 433+ 99EB              ; ---------- ---------- ----------
 434+ 99EB
 435+ 99EB 3A 8B 89     	ld a,(Vel_left)
 436+ 99EE FE 02        	cp 2
 437+ 99F0 28 0F        	jr z,1F
 438+ 99F2 38 04        	jr c,6F
 439+ 99F4 FE 04        	cp 4
 440+ 99F6 28 12        	jr z,7F
 441+ 99F8
 442+ 99F8              ; ---------- ---------- ----------
 443+ 99F8
 444+ 99F8 3A 6A 89     6 ld a,(CTRL_DESPLZ)
 445+ 99FB FE F8        	cp $f8
 446+ 99FD 20 2A        	jr nz,8F
 447+ 99FF 18 10        	jr 4F
 448+ 9A01 3A 6A 89     1 ld a,(CTRL_DESPLZ)
 449+ 9A04 FE F9        	cp $f9
 450+ 9A06 20 21        	jr nz,8F
 451+ 9A08 18 07        	jr 4F
 452+ 9A0A 3A 6A 89     7 ld a,(CTRL_DESPLZ)
 453+ 9A0D FE FB        	cp $fb
 454+ 9A0F 20 18        	jr nz,8F
 455+ 9A11
 456+ 9A11              ; ---------- ---------- ----------
 457+ 9A11
 458+ 9A11              4
 459+ 9A11 CD 17 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9A14              ;	call Reinicio
 461+ 9A14
 462+ 9A14              ; ---------- ---------- ----------
 463+ 9A14
 464+ 9A14 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9A16 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9A17
 467+ 9A17              ;	ld hl,(Indice_Sprite_izq)
 468+ 9A17              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9A17
 470+ 9A17 CD 30 9A     	call DESPLZ_IZQ
 471+ 9A1A C1           	pop bc
 472+ 9A1B 10 F9        	djnz 5B
 473+ 9A1D 2A 64 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9A20 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9A21 22 64 89     	ld (Posicion_actual),hl
 476+ 9A24 CD 80 9B     	call Genera_coordenadas
 477+ 9A27 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9A29
 479+ 9A29              ; ---------- ---------- ----------
 480+ 9A29
 481+ 9A29              ; Movemos, no hay recolocación.
 482+ 9A29
 483+ 9A29 2A 64 89     8 ld hl,(Posicion_actual)
 484+ 9A2C CD 30 9A     	call DESPLZ_IZQ
 485+ 9A2F C9           2 ret
 486+ 9A30
 487+ 9A30              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A30              ;
 489+ 9A30              ;	22/9/22
 490+ 9A30
 491+ 9A30              DESPLZ_IZQ
 492+ 9A30
 493+ 9A30 CD 3F 9A     	call Desplaza_izquierda
 494+ 9A33 CD 8B 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A36 CD B3 9A     	call Ciclo_completo_2
 496+ 9A39 21 84 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A3C CB BE        	res 7,(hl)
 498+ 9A3E C9           	ret
 499+ 9A3F
 500+ 9A3F              Desplaza_izquierda
 501+ 9A3F
 502+ 9A3F 3A 8B 89     	ld a,(Vel_left)
 503+ 9A42 47           	ld b,a
 504+ 9A43 2A 72 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A46 23           1 inc hl
 506+ 9A47 23           	inc hl
 507+ 9A48 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A4A 22 72 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A4D CD B2 8B     	call Extrae_address
 510+ 9A50 22 66 89     	ld (Puntero_objeto),hl
 511+ 9A53
 512+ 9A53              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A53
 514+ 9A53              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A53              ; Cuántos movimientos hemos hecho ??
 516+ 9A53              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A53
 518+ 9A53 2A 6E 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9A56 EB           	ex de,hl
 520+ 9A57 A7           	and a
 521+ 9A58 ED 52        	sbc hl,de
 522+ 9A5A CB 3D        	srl l
 523+ 9A5C 3E 08        6 ld a,8
 524+ 9A5E 95           	sub l
 525+ 9A5F 30 1E        	jr nc,3F
 526+ 9A61
 527+ 9A61              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A61              ; B="0".
 529+ 9A61
 530+ 9A61 04           4 inc b
 531+ 9A62 3C           	inc a
 532+ 9A63 20 FC        	jr nz,4B
 533+ 9A65 78           	ld a,b
 534+ 9A66 08           	ex af,af
 535+ 9A67 2A 6E 89     	ld hl,(Indice_Sprite_izq)
 536+ 9A6A 23           5 inc hl
 537+ 9A6B 23           	inc hl
 538+ 9A6C 10 FC        	djnz 5B
 539+ 9A6E 22 72 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A71 CD B2 8B     	call Extrae_address
 541+ 9A74 22 66 89     	ld (Puntero_objeto),hl
 542+ 9A77
 543+ 9A77              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A77              ; _(Posicion_actual).
 545+ 9A77
 546+ 9A77 21 64 89     	ld hl,Posicion_actual
 547+ 9A7A 35           	dec (hl)
 548+ 9A7B 08           	ex af,af
 549+ 9A7C 6F           	ld l,a
 550+ 9A7D 18 DD        	jr 6B
 551+ 9A7F
 552+ 9A7F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A7F
 554+ 9A7F 47           3 ld b,a
 555+ 9A80 2A 6C 89     	ld hl,(Indice_Sprite_der)
 556+ 9A83 23           2 inc hl
 557+ 9A84 23           	inc hl
 558+ 9A85 10 FC        	djnz 2B
 559+ 9A87 22 70 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9A8A C9           8 ret
 561+ 9A8B
 562+ 9A8B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A8B              ;
 564+ 9A8B              ;	modifica_parametros_1er_DESPLZ
 565+ 9A8B              ;
 566+ 9A8B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A8B              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A8B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A8B
 570+ 9A8B 3A 6A 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A8E A7           	and a
 572+ 9A8F 20 1E        	jr nz,1F
 573+ 9A91 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9A92 32 6A 89         ld (CTRL_DESPLZ),a
 575+ 9A95 21 63 89     	ld hl,Columns
 576+ 9A98 34           	inc (hl)
 577+ 9A99 3A 76 89     	ld a,(Cuad_objeto)
 578+ 9A9C E6 01        	and 1
 579+ 9A9E 20 0F        	jr nz,1F
 580+ 9AA0 2A 64 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9AA3 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9AA4 22 64 89     	ld (Posicion_actual),hl
 583+ 9AA7 CD 80 9B     	call Genera_coordenadas
 584+ 9AAA CD 06 9B     	call Dec_CTRL_DESPLZ
 585+ 9AAD 18 03        	jr 2F
 586+ 9AAF CD 06 9B     1 call Dec_CTRL_DESPLZ
 587+ 9AB2 C9           2 ret
 588+ 9AB3
 589+ 9AB3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9AB3
 591+ 9AB3 3A 6A 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9AB6 FE F7        	cp $f7
 593+ 9AB8 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9ABA 30 2C        	jr nc,3F
 595+ 9ABC
 596+ 9ABC              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9ABC
 598+ 9ABC 06 00        	ld b,0
 599+ 9ABE 04           4 inc b
 600+ 9ABF 3C           	inc a
 601+ 9AC0 FE F7        	cp $f7
 602+ 9AC2 20 FA        	jr nz,4B
 603+ 9AC4 3E FF        	ld a,$ff
 604+ 9AC6 90           	sub b
 605+ 9AC7 32 6A 89     	ld (CTRL_DESPLZ),a
 606+ 9ACA 18 1C        	jr 3F
 607+ 9ACC
 608+ 9ACC              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9ACC
 610+ 9ACC 21 63 89     1 ld hl,Columns
 611+ 9ACF 35           	dec (hl)
 612+ 9AD0 AF           	xor a
 613+ 9AD1 32 6A 89     	ld (CTRL_DESPLZ),a
 614+ 9AD4 3A 76 89     	ld a,(Cuad_objeto)
 615+ 9AD7 E6 01        	and 1
 616+ 9AD9 28 0A        	jr z,2F
 617+ 9ADB 2A 64 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9ADE 2B           	dec hl
 619+ 9ADF 22 64 89     	ld (Posicion_actual),hl
 620+ 9AE2 CD 80 9B     	call Genera_coordenadas
 621+ 9AE5
 622+ 9AE5              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9AE5
 624+ 9AE5 CD DA 8B     2 call Inicia_puntero_objeto_izq
 625+ 9AE8 C9           3 ret
 626+ 9AE9
 627+ 9AE9              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9AE9              ;
 629+ 9AE9              ;	19/10/22
 630+ 9AE9              ;
 631+ 9AE9              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9AE9              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9AE9
 634+ 9AE9 3A 68 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9AEC FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9AEE C9           	ret
 637+ 9AEF
 638+ 9AEF              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9AEF              ;
 640+ 9AEF              ;	19/10/22
 641+ 9AEF              ;
 642+ 9AEF              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9AEF              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9AEF
 645+ 9AEF 3A 68 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9AF2 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9AF4 C9           	ret
 648+ 9AF5
 649+ 9AF5              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9AF5              ;
 651+ 9AF5              ;	24/7/22
 652+ 9AF5              ;
 653+ 9AF5              ;	Inc_CTRL_DESPLZ
 654+ 9AF5              ;
 655+ 9AF5              ;
 656+ 9AF5              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9AF5
 658+ 9AF5 21 6A 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9AF8 3A 8C 89     	ld a,(Vel_right)
 660+ 9AFB A7           	and a
 661+ 9AFC 28 06        	jr z,1F
 662+ 9AFE 47           	ld b,a
 663+ 9AFF 34           3 inc (hl)
 664+ 9B00 10 FD        	djnz 3B
 665+ 9B02 18 01        	jr 2F
 666+ 9B04 34           1 inc (hl)
 667+ 9B05 C9           2 ret
 668+ 9B06
 669+ 9B06              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9B06              ;
 671+ 9B06              ;	5/2/23
 672+ 9B06              ;
 673+ 9B06              ;	Dec_CTRL_DESPLZ
 674+ 9B06              ;
 675+ 9B06              ;
 676+ 9B06              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9B06
 678+ 9B06 21 6A 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9B09 3A 8B 89     	ld a,(Vel_left)
 680+ 9B0C A7           	and a
 681+ 9B0D 28 06        	jr z,1F
 682+ 9B0F 47           	ld b,a
 683+ 9B10 35           3 dec (hl)
 684+ 9B11 10 FD        	djnz 3B
 685+ 9B13 18 01        	jr 2F
 686+ 9B15 35           1 dec (hl)
 687+ 9B16 C9           2 ret
 688+ 9B17
 689+ 9B17              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9B17
 691+ 9B17 2A 64 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9B1A 01 1F 00     	ld bc,31
 693+ 9B1D A7           	and a
 694+ 9B1E ED 4A        	adc hl,bc
 695+ 9B20 22 64 89     	ld (Posicion_actual),hl
 696+ 9B23 21 84 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9B26 CB C6        	set 0,(hl)
 698+ 9B28 C9           	ret
 699+ 9B29
 700+ 9B29              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9B29
 702+ 9B29 2A 64 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9B2C 01 1F 00     	ld bc,31
 704+ 9B2F A7           	and a
 705+ 9B30 ED 42        	sbc hl,bc
 706+ 9B32 22 64 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B35 21 84 89     	ld hl,Ctrl_0
 708+ 9B38 CB CE        	set 1,(hl)
 709+ 9B3A C9           	ret
 710+ 9B3B
 711+ 9B3B              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B3B
 713+ 9B3B 24           Reaparece_abajo inc h
 714+ 9B3C 01 E0 17     	ld bc,$17e0
 715+ 9B3F A7           	and a
 716+ 9B40 ED 4A        	adc hl,bc
 717+ 9B42 22 64 89     	ld (Posicion_actual),hl
 718+ 9B45 21 84 89     	ld hl,Ctrl_0
 719+ 9B48 CB D6        	set 2,(hl)
 720+ 9B4A C9           	ret
 721+ 9B4B
 722+ 9B4B              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B4B
 724+ 9B4B 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B4E A7           	and a
 726+ 9B4F ED 42        	sbc hl,bc
 727+ 9B51 22 64 89     	ld (Posicion_actual),hl
 728+ 9B54 21 84 89     	ld hl,Ctrl_0
 729+ 9B57 CB DE        	set 3,(hl)
 730+ 9B59 C9           	ret
 731+ 9B5A
 732+ 9B5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B5A              ;
 734+ 9B5A              ;	15/07/23
 735+ 9B5A
 736+ 9B5A              Reinicio
 737+ 9B5A
 738+ 9B5A              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B5A
 740+ 9B5A AF           	xor a
 741+ 9B5B 21 9B 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9B5E CD 7C 9B     	call Limpia_contenido_hl
 743+ 9B61
 744+ 9B61 21 64 89     	ld hl,Posicion_actual
 745+ 9B64 CD 7C 9B     	call Limpia_contenido_hl
 746+ 9B67
 747+ 9B67 CD CF 87     	call Inicializa_Puntero_indice_mov
 748+ 9B6A CD 3D 9E     	call Inicia_Puntero_mov
 749+ 9B6D
 750+ 9B6D 21 9D 89     	ld hl,Incrementa_puntero
 751+ 9B70 06 05        	ld b,5
 752+ 9B72 77           1 ld (hl),a
 753+ 9B73 23           	inc hl
 754+ 9B74 10 FC        	djnz 1B
 755+ 9B76
 756+ 9B76 21 89 89     	ld hl,Ctrl_2
 757+ 9B79 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B7B
 759+ 9B7B C9           	ret
 760+ 9B7C
 761+ 9B7C 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B7D 23           	inc hl
 763+ 9B7E 77           	ld (hl),a
 764+ 9B7F C9           	ret
 765+ 9B80
 766+ 9B80
# file closed: Direcciones.asm
1761  9B80              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B80              ; ------------------------------------------------------------------------
   2+ 9B80              ;
   3+ 9B80              ;	30/1/24
   4+ 9B80              ;
   5+ 9B80              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B80              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B80              ;
   8+ 9B80              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B80              ;
  10+ 9B80              ;	Modifica: A,BC y DE.
  11+ 9B80
  12+ 9B80 7D           Genera_coordenadas ld a,l
  13+ 9B81 E6 1F        	and $1f
  14+ 9B83 32 68 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B86
  16+ 9B86 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9B87 FE 40        	cp $40
  18+ 9B89 38 1C        	jr c,4F
  19+ 9B8B
  20+ 9B8B CD E8 97     	call calcula_tercio
  21+ 9B8E 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9B8F
  23+ 9B8F 1E 00        	ld e,0
  24+ 9B91 7D           	ld a,l
  25+ 9B92 E6 E0        	and $e0
  26+ 9B94 28 01        	jr z,1F
  27+ 9B96 04           	inc b
  28+ 9B97
  29+ 9B97 04           1 inc b
  30+ 9B98 05           	dec b
  31+ 9B99 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9B9B              ;														; _ , salimos.
  33+ 9B9B 1C           3 inc e
  34+ 9B9C D6 20        	sub 32
  35+ 9B9E 20 FB        	jr nz,3B
  36+ 9BA0 10 F5        	djnz 1B
  37+ 9BA2
  38+ 9BA2 7B           2 ld a,e
  39+ 9BA3 32 69 89     	ld (Coordenada_y),a
  40+ 9BA6 C9           	ret
  41+ 9BA7
  42+ 9BA7 AF           4 xor a
  43+ 9BA8 32 69 89     	ld (Coordenada_y),a
  44+ 9BAB C9           	ret
  45+ 9BAC
  46+ 9BAC              ; ------------------------------------------------------------------------
  47+ 9BAC              ;	28/05/23
  48+ 9BAC              ;
  49+ 9BAC              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9BAC              ;	Fila superior "0", Columna izquierda "0".
  51+ 9BAC              ;
  52+ 9BAC              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9BAC              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9BAC              ;
  55+ 9BAC              ;		DE="$120d"
  56+ 9BAC              ;
  57+ 9BAC              ;		D, (Coordenada_X), Columnas, $12
  58+ 9BAC              ;		E, (Coordenada_y), Filas, $0d
  59+ 9BAC              ;
  60+ 9BAC              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9BAC
  62+ 9BAC              ;	Modifica: A,BC y DE.
  63+ 9BAC
  64+ 9BAC
  65+ 9BAC              Genera_coordenadas_disparo
  66+ 9BAC
  67+ 9BAC              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9BAC
  69+ 9BAC 7D           	ld a,l
  70+ 9BAD E6 1F        	and $1f
  71+ 9BAF 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9BB0 CD E8 97     	call calcula_tercio
  73+ 9BB3 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9BB4 1E 00        	ld e,0
  75+ 9BB6 7D           	ld a,l
  76+ 9BB7 E6 E0        	and $e0
  77+ 9BB9 28 01        	jr z,1F
  78+ 9BBB 04           	inc b
  79+ 9BBC 1C           1 inc e
  80+ 9BBD D6 20        	sub 32
  81+ 9BBF 20 FB        	jr nz,1B
  82+ 9BC1 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9BC3 C9           	ret
  84+ 9BC4
# file closed: Genera_coordenadas.asm
1762  9BC4              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BC4              ; Relojes y temporizaciones.
   2+ 9BC4
   3+ 9BC4              ; ------------------------------------------------------
   4+ 9BC4              ;
   5+ 9BC4              ;	16/7/23
   6+ 9BC4              ;
   7+ 9BC4              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BC4              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BC4              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BC4              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BC4              ;
  12+ 9BC4              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BC4              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BC4
  15+ 9BC4              ; Disparo_entidad db 1
  16+ 9BC4              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BC4              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BC4
  19+ 9BC4              Habilita_disparos
  20+ 9BC4
  21+ 9BC4 7E           	ld a,(hl)
  22+ 9BC5 A7           	and a
  23+ 9BC6 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BC7
  25+ 9BC7 EB           	ex de,hl
  26+ 9BC8
  27+ 9BC8 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BC9 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BCA
  30+ 9BCA              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BCA
  32+ 9BCA 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BCB 7E           	ld a,(hl)
  34+ 9BCC 23           	inc hl
  35+ 9BCD 77           	ld (hl),a
  36+ 9BCE
  37+ 9BCE EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BCF 3E 01        	ld a,1
  39+ 9BD1 77           	ld (hl),a
  40+ 9BD2 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1763  9BD3              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BD3
   2+ 9BD3
   3+ 9BD3              ;   07/07/23
   4+ 9BD3              ;
   5+ 9BD3              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BD3              ;
   7+ 9BD3              ;   Codificación:
   8+ 9BD3              ;
   9+ 9BD3              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BD3              ;
  11+ 9BD3              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BD3              ;
  13+ 9BD3              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BD3              ;
  15+ 9BD3              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BD3              ;
  17+ 9BD3              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BD3              ;                               ..... %01000010 Vel_up 4
  19+ 9BD3              ;                                               Vel_down 2
  20+ 9BD3              ;                               ..... $42
  21+ 9BD3              ;
  22+ 9BD3              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BD3              ;
  24+ 9BD3              ;                               ..... %01000010 Vel_left 4
  25+ 9BD3              ;                                               Vel_right 2
  26+ 9BD3              ;                               ..... $42
  27+ 9BD3              ;
  28+ 9BD3              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BD3              ;
  30+ 9BD3              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BD3              ;
  32+ 9BD3              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BD3              ;
  34+ 9BD3              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BD3              ;                                     $53
  36+ 9BD3              ;
  37+ 9BD3              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BD3              ;
  39+ 9BD3              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BD3              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BD3              ;
  42+ 9BD3              ;                       Arriba ..... $81
  43+ 9BD3              ;                       Arriba - izquierda ..... $a1
  44+ 9BD3              ;                       Arriba - derecha ..... $91
  45+ 9BD3              ;
  46+ 9BD3              ;                       Abajo ..... $41
  47+ 9BD3              ;                       Abajo - izquierda ..... $61
  48+ 9BD3              ;                       Abajo - derecha ..... $51
  49+ 9BD3              ;
  50+ 9BD3              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BD3              ;
  52+ 9BD3              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BD3              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BD3              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BD3              ;
  56+ 9BD3              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BD3              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BD3              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BD3              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BD3              ;
  61+ 9BD3              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BD3              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BD3              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BD3              ;
  65+ 9BD3              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BD3              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BD3              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BD3              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BD3
  70+ 9BD3              ; ----- ----- ----- ----- -----
  71+ 9BD3
  72+ 9BD3 FF 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BD5 07 9C            defw F_1
  74+ 9BD7 11 9C            defw F_2
  75+ 9BD9 1B 9C            defw Codo_abajo_derecha
  76+ 9BDB 4F 9C            defw Derecha_y_subiendo
  77+ 9BDD 59 9C            defw Derecha_y_subiendo_1
  78+ 9BDF 63 9C            defw F_3
  79+ 9BE1 6D 9C            defw F_4
  80+ 9BE3 77 9C            defw Derecha_y_bajando
  81+ 9BE5 81 9C            defw Derecha_y_bajando_1
  82+ 9BE7 8B 9C            defw Derecha_y_bajando_2
  83+ 9BE9 95 9C            defw Codo_derecha_abajo
  84+ 9BEB C5 9C            defw Codo_abajo_izq.
  85+ 9BED F9 9C            defw Izquierda_y_subiendo
  86+ 9BEF 03 9D            defw Izquierda_y_subiendo_1
  87+ 9BF1 0D 9D            defw F_5
  88+ 9BF3 17 9D            defw F_6
  89+ 9BF5 21 9D            defw Izquierda_y_bajando
  90+ 9BF7 2B 9D            defw Izquierda_y_bajando_1
  91+ 9BF9 35 9D            defw Izquierda_y_bajando_2
  92+ 9BFB 3F 9D            defw Codo_izquierda_abajo
  93+ 9BFD 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9BFF
  95+ 9BFF 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C03 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C07
  98+ 9C07 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C0B 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C0F 08 00
 100+ 9C11 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C15 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C19 0F FE
 102+ 9C1B
 103+ 9C1B 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C1F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C23 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C27 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C2B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C2F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C33 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C37 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C3B 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C3F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C43 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C47 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C4B 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C4F
 117+ 9C4F 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C53 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C57 06 00
 119+ 9C59
 120+ 9C59 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C5D 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C61 02 00
 122+ 9C63
 123+ 9C63 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C67 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C6B 04 00
 125+ 9C6D 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C71 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C75 08 00
 127+ 9C77
 128+ 9C77 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C7B 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C7F 02 00
 130+ 9C81
 131+ 9C81 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9C85 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9C89 06 00
 133+ 9C8B
 134+ 9C8B 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9C8F 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9C93 06 00
 136+ 9C95
 137+ 9C95              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9C95
 139+ 9C95 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9C99 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9C9D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9CA1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CA5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CA9 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CAD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CB1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CB5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CB9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CBD 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9CC1 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9CC5
 152+ 9CC5 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9CC9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9CCD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9CD1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9CD5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9CD9 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9CDD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CE1 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9CE5 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9CE9 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9CED 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9CF1 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9CF5 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9CF9
 166+ 9CF9 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9CFD 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D01 06 00
 168+ 9D03
 169+ 9D03 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D07 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D0B 02 00
 171+ 9D0D
 172+ 9D0D 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D11 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D15 04 00
 174+ 9D17 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D1B 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D1F 08 00
 176+ 9D21
 177+ 9D21 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D25 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D29 02 00
 179+ 9D2B
 180+ 9D2B 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D2F 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D33 06 00
 182+ 9D35
 183+ 9D35 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D39 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D3D 06 00
 185+ 9D3F
 186+ 9D3F 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D43 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D47 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D4B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D4F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D53 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D57 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D5B 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D5F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D63 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D67 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D6B 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D6F
 199+ 9D6F              ; ----- ----- ----- ----- -----
 200+ 9D6F              ;
 201+ 9D6F              ;   28/12/23
 202+ 9D6F
 203+ 9D6F              Movimiento
 204+ 9D6F
 205+ 9D6F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D6F
 207+ 9D6F 3A 89 89         ld a,(Ctrl_2)
 208+ 9D72 CB 57            bit 2,a
 209+ 9D74 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D76
 211+ 9D76 2A 99 89         ld hl,(Puntero_mov)
 212+ 9D79 7E               ld a,(hl)
 213+ 9D7A
 214+ 9D7A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D7A
 216+ 9D7A              Inicia_desplazamiento.
 217+ 9D7A
 218+ 9D7A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D7A
 220+ 9D7A CD 7A 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D7D
 222+ 9D7D              ; Iniciamos (Repetimos_mov).
 223+ 9D7D
 224+ 9D7D 7E               ld a,(hl)
 225+ 9D7E E6 0F            and $0f
 226+ 9D80 32 9F 89         ld (Repetimos_desplazamiento),a
 227+ 9D83 32 A0 89         ld (Repetimos_desplazamiento_backup),a
 228+ 9D86
 229+ 9D86              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9D86
 231+ 9D86 23               inc hl
 232+ 9D87 7E               ld a,(hl)
 233+ 9D88 32 A2 89         ld (Cola_de_desplazamiento),a
 234+ 9D8B 2B               dec hl
 235+ 9D8C
 236+ 9D8C 21 89 89         ld hl,Ctrl_2
 237+ 9D8F CB D6            set 2,(hl)
 238+ 9D91
 239+ 9D91              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9D91              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9D91
 242+ 9D91              Desplazamiento_iniciado
 243+ 9D91
 244+ 9D91 CD 48 9E         call Aplica_desplazamiento
 245+ 9D94
 246+ 9D94              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9D94
 248+ 9D94 3A C2 89         ld a,(Ctrl_3)
 249+ 9D97 CB 57            bit 2,a
 250+ 9D99 C0               ret nz
 251+ 9D9A
 252+ 9D9A 3A 89 89         ld a,(Ctrl_2)
 253+ 9D9D CB 67            bit 4,a
 254+ 9D9F C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9DA0
 256+ 9DA0 21 9F 89     3 ld hl,Repetimos_desplazamiento
 257+ 9DA3 35               dec (hl)
 258+ 9DA4 C0               ret nz
 259+ 9DA5
 260+ 9DA5              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DA5              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DA5              ; Analiza (Cola_de_desplazamiento).
 263+ 9DA5
 264+ 9DA5 3A A2 89     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DA8 A7               and a
 266+ 9DA9 CC A3 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DAC 28 30            jr z,Reinicia_el_movimiento
 268+ 9DAE
 269+ 9DAE FE FF            cp $ff
 270+ 9DB0 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DB2
 272+ 9DB2 FE FE            cp $fe
 273+ 9DB4 CC 21 9E         call z,Fijamos_bucle
 274+ 9DB7 28 25            jr z,Reinicia_el_movimiento
 275+ 9DB9
 276+ 9DB9 FE FD            cp $fd
 277+ 9DBB 20 11            jr nz,1F
 278+ 9DBD
 279+ 9DBD              ; ---
 280+ 9DBD              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DBD
 282+ 9DBD 3A 89 89         ld a,(Ctrl_2)
 283+ 9DC0 CB 5F            bit 3,a
 284+ 9DC2 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9DC4
 286+ 9DC4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9DC4
 288+ 9DC4 21 89 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9DC7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9DC9
 291+ 9DC9 CD 32 9E         call Inicia_Repetimos_movimiento
 292+ 9DCC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9DCE              ; ---
 294+ 9DCE
 295+ 9DCE FE 01        1 cp 1
 296+ 9DD0 CA 0B 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9DD3
 298+ 9DD3 3D               dec a
 299+ 9DD4 32 A2 89         ld (Cola_de_desplazamiento),a
 300+ 9DD7
 301+ 9DD7 3A A0 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9DDA 32 9F 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9DDD              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9DDD C9               ret
 305+ 9DDE
 306+ 9DDE              Reinicia_el_movimiento
 307+ 9DDE
 308+ 9DDE 3A 89 89         ld a,(Ctrl_2)
 309+ 9DE1 CB 5F            bit 3,a
 310+ 9DE3 28 1B            jr z,2F
 311+ 9DE5
 312+ 9DE5              ; (Cola_de_desplazamiento)="254".
 313+ 9DE5
 314+ 9DE5 21 A1 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9DE8 35               dec (hl)
 316+ 9DE9 20 15            jr nz,2F
 317+ 9DEB
 318+ 9DEB              ; Fin de las repeticiones del último movimiento.
 319+ 9DEB
 320+ 9DEB 21 89 89         ld hl,Ctrl_2
 321+ 9DEE CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9DF0
 323+ 9DF0 2A 99 89         ld hl,(Puntero_mov)
 324+ 9DF3 23               inc hl
 325+ 9DF4 23               inc hl
 326+ 9DF5 23               inc hl
 327+ 9DF6 22 99 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9DF9              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9DF9 7E               ld a,(hl)
 330+ 9DFA 32 A2 89         ld (Cola_de_desplazamiento),a
 331+ 9DFD
 332+ 9DFD C3 A5 9D         jp Cola
 333+ 9E00
 334+ 9E00 CD 3D 9E     2 call Inicia_Puntero_mov
 335+ 9E03
 336+ 9E03 21 89 89         ld hl,Ctrl_2
 337+ 9E06 CB 96            res 2,(hl)
 338+ 9E08
 339+ 9E08 C3 6F 9D         jp Movimiento
 340+ 9E0B
 341+ 9E0B              Siguiente_desplazamiento
 342+ 9E0B
 343+ 9E0B              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E0B              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E0B
 346+ 9E0B 21 89 89         ld hl,Ctrl_2
 347+ 9E0E CB 96            res 2,(hl)
 348+ 9E10
 349+ 9E10 2A 99 89         ld hl,(Puntero_mov)
 350+ 9E13 23               inc hl
 351+ 9E14 23               inc hl
 352+ 9E15 22 99 89         ld (Puntero_mov),hl
 353+ 9E18
 354+ 9E18 7E               ld a,(hl)
 355+ 9E19 A7               and a
 356+ 9E1A CC A3 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E1D CA DE 9D         jp z,Reinicia_el_movimiento
 358+ 9E20
 359+ 9E20 C9               ret
 360+ 9E21
 361+ 9E21              ; Subrutinas -----------------------------------------
 362+ 9E21              ; ---------- --------- --------- ---------- ----------
 363+ 9E21              ;
 364+ 9E21              ;   24/07/23
 365+ 9E21              ;
 366+ 9E21              ;   Fijamos_bucle
 367+ 9E21              ;
 368+ 9E21              ;
 369+ 9E21
 370+ 9E21              Fijamos_bucle
 371+ 9E21
 372+ 9E21 3A 9D 89         ld a,(Incrementa_puntero)
 373+ 9E24 3C               inc a
 374+ 9E25 32 9E 89         ld (Incrementa_puntero_backup),a
 375+ 9E28
 376+ 9E28 CD A3 9E         call Incrementa_Puntero_indice_mov
 377+ 9E2B 2A 97 89         ld hl,(Puntero_indice_mov)
 378+ 9E2E 22 9B 89         ld (Puntero_indice_mov_bucle),hl
 379+ 9E31 C9               ret
 380+ 9E32
 381+ 9E32              ; ---------- --------- --------- ---------- ----------
 382+ 9E32              ;
 383+ 9E32              ;   07/7/23
 384+ 9E32              ;
 385+ 9E32              ;   Inicia_Repetimos_movimiento
 386+ 9E32              ;
 387+ 9E32              ;
 388+ 9E32
 389+ 9E32              Inicia_Repetimos_movimiento
 390+ 9E32
 391+ 9E32              ; Iniciamos (Repetimos_movimiento).
 392+ 9E32
 393+ 9E32 DD 2A 99 89      ld ix,(Puntero_mov)
 394+ 9E36 DD 7E 02         ld a,(ix+2)
 395+ 9E39 32 A1 89         ld (Repetimos_movimiento),a
 396+ 9E3C
 397+ 9E3C C9               ret
 398+ 9E3D
 399+ 9E3D              ; ---------- --------- --------- ---------- ----------
 400+ 9E3D              ;
 401+ 9E3D              ;   26/6/23
 402+ 9E3D              ;
 403+ 9E3D              ;   Inicia_Puntero_mov
 404+ 9E3D              ;
 405+ 9E3D              ;
 406+ 9E3D
 407+ 9E3D 2A 97 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E40 5E               ld e,(hl)
 409+ 9E41 23               inc hl
 410+ 9E42 56               ld d,(hl)
 411+ 9E43 EB               ex de,hl
 412+ 9E44 22 99 89         ld (Puntero_mov),hl
 413+ 9E47 C9               ret
 414+ 9E48
 415+ 9E48              ; ---------- --------- --------- ---------- ----------
 416+ 9E48              ;
 417+ 9E48              ;   27/06/23
 418+ 9E48              ;
 419+ 9E48              ;   Aplica_movimiento.
 420+ 9E48
 421+ 9E48              Aplica_desplazamiento
 422+ 9E48
 423+ 9E48              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E48
 425+ 9E48 2A 99 89         ld hl, (Puntero_mov)
 426+ 9E4B
 427+ 9E4B 7E               ld a,(hl)
 428+ 9E4C E6 F0            and $f0
 429+ 9E4E C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E4F
 431+ 9E4F CB 7E            bit 7,(hl)
 432+ 9E51 28 03            jr z,1F
 433+ 9E53 CD 67 98         call Mov_up
 434+ 9E56 2A 99 89     1 ld hl, (Puntero_mov)
 435+ 9E59 CB 76            bit 6,(hl)
 436+ 9E5B 28 09            jr z,2F
 437+ 9E5D CD 2E 98         call Mov_down
 438+ 9E60
 439+ 9E60              ; Se ha aplicado reinicio ???
 440+ 9E60              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E60
 442+ 9E60 3A C2 89         ld a,(Ctrl_3)
 443+ 9E63 CB 57            bit 2,a
 444+ 9E65 C0               ret nz
 445+ 9E66
 446+ 9E66 2A 99 89     2 ld hl, (Puntero_mov)
 447+ 9E69 CB 6E            bit 5,(hl)
 448+ 9E6B 28 03            jr z,3F
 449+ 9E6D CD CD 99         call Mov_left
 450+ 9E70 2A 99 89     3 ld hl, (Puntero_mov)
 451+ 9E73 CB 66            bit 4,(hl)
 452+ 9E75 C8               ret z
 453+ 9E76 CD AA 98         call Mov_right
 454+ 9E79 C9               ret
 455+ 9E7A
 456+ 9E7A              ; ---------- --------- --------- ---------- ----------
 457+ 9E7A              ;
 458+ 9E7A              ;   26/06/23
 459+ 9E7A              ;
 460+ 9E7A              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E7A
 462+ 9E7A              Ajusta_velocidad_desplazamiento
 463+ 9E7A
 464+ 9E7A              ; 1er byte de la cadena de movimiento.
 465+ 9E7A              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E7A
 467+ 9E7A CD 98 9E         call Extrae_nibble_alto
 468+ 9E7D
 469+ 9E7D 32 8D 89         ld (Vel_up),a
 470+ 9E80 79               ld a,c
 471+ 9E81 E6 0F            and $0f
 472+ 9E83 32 8E 89         ld (Vel_down),a
 473+ 9E86
 474+ 9E86              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9E86              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9E86
 477+ 9E86 23               inc hl
 478+ 9E87 CD 98 9E         call Extrae_nibble_alto
 479+ 9E8A
 480+ 9E8A 32 8B 89         ld (Vel_left),a
 481+ 9E8D 79               ld a,c
 482+ 9E8E E6 0F            and $0f
 483+ 9E90 32 8C 89         ld (Vel_right),a
 484+ 9E93
 485+ 9E93              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9E93
 487+ 9E93 23               inc hl
 488+ 9E94 22 99 89         ld (Puntero_mov),hl
 489+ 9E97 C9               ret
 490+ 9E98
 491+ 9E98 06 04        Extrae_nibble_alto ld b,4
 492+ 9E9A 7E               ld a,(hl)
 493+ 9E9B 4F               ld c,a
 494+ 9E9C E6 F0            and $f0
 495+ 9E9E CB 3F        1 srl a
 496+ 9EA0 10 FC            djnz 1B
 497+ 9EA2 C9               ret
 498+ 9EA3
 499+ 9EA3              ; ---------- --------- --------- ---------- ----------
 500+ 9EA3              ;
 501+ 9EA3              ;   5/7/23
 502+ 9EA3              ;
 503+ 9EA3              ;   Incrementa_Puntero_indice_mov
 504+ 9EA3
 505+ 9EA3              Incrementa_Puntero_indice_mov
 506+ 9EA3
 507+ 9EA3 21 9D 89         ld hl,Incrementa_puntero
 508+ 9EA6 34               inc (hl)
 509+ 9EA7
 510+ 9EA7 2A 97 89         ld hl,(Puntero_indice_mov)
 511+ 9EAA 01 02 00         ld bc,2
 512+ 9EAD A7               and a
 513+ 9EAE 09               add hl,bc
 514+ 9EAF 22 97 89         ld (Puntero_indice_mov),hl
 515+ 9EB2
 516+ 9EB2 7E               ld a,(hl)
 517+ 9EB3 A7               and a
 518+ 9EB4
 519+ 9EB4              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9EB4
 521+ 9EB4              ;    jr z,$
 522+ 9EB4
 523+ 9EB4              ;! Reinicia el Patrón de movimiento.
 524+ 9EB4
 525+ 9EB4 CC B9 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9EB7
 527+ 9EB7 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9EB8
 529+ 9EB8 C9               ret
 530+ 9EB9
 531+ 9EB9              ; ---------- --------- --------- ---------- ----------
 532+ 9EB9              ;
 533+ 9EB9              ;   15/01/24
 534+ 9EB9              ;
 535+ 9EB9              ;   Inicializa_Puntero_indice_mov
 536+ 9EB9
 537+ 9EB9              Inicializa_Puntero_indice_mov_2
 538+ 9EB9
 539+ 9EB9              ; Existe etiqueta de bucle principal???
 540+ 9EB9
 541+ 9EB9 2A 9B 89         ld hl,(Puntero_indice_mov_bucle)
 542+ 9EBC 24               inc h
 543+ 9EBD 25               dec h
 544+ 9EBE 28 05            jr z,2F
 545+ 9EC0
 546+ 9EC0 22 97 89         ld (Puntero_indice_mov),hl
 547+ 9EC3 18 14            jr 3F
 548+ 9EC5
 549+ 9EC5              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9EC5
 551+ 9EC5 3A 9D 89     2 ld a,(Incrementa_puntero)
 552+ 9EC8 47               ld b,a
 553+ 9EC9
 554+ 9EC9 2A 97 89         ld hl,(Puntero_indice_mov)
 555+ 9ECC 2B           1 dec hl
 556+ 9ECD 2B               dec hl
 557+ 9ECE 10 FC            djnz 1B
 558+ 9ED0 22 97 89         ld (Puntero_indice_mov),hl
 559+ 9ED3
 560+ 9ED3 AF               xor a
 561+ 9ED4 32 9D 89         ld (Incrementa_puntero),a
 562+ 9ED7 18 06            jr 4F
 563+ 9ED9
 564+ 9ED9 3A 9E 89     3 ld a,(Incrementa_puntero_backup)
 565+ 9EDC 32 9D 89         ld (Incrementa_puntero),a
 566+ 9EDF C9           4 ret
 567+ 9EE0
 568+ 9EE0              ; ----------------------------------------------------------------------
 569+ 9EE0              ;
 570+ 9EE0              ;   30/01/24
 571+ 9EE0              ;
 572+ 9EE0              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 573+ 9EE0
 574+ 9EE0 3A 61 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 575+ 9EE3 CD DD 88         call Calcula_salto_en_BC
 576+ 9EE6 21 8F 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 577+ 9EE9 A7               and a
 578+ 9EEA ED 4A            adc hl,bc
 579+ 9EEC C9               ret
 580+ 9EED
 581+ 9EED              ; ----------------------------------------------------------------------
 582+ 9EED              ;
 583+ 9EED              ;   30/01/24
 584+ 9EED              ;
 585+ 9EED              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 586+ 9EED              ;
 587+ 9EED              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 588+ 9EED
 589+ 9EED 4E           Transfiere_datos_de_contadores ld c,(hl)
 590+ 9EEE 23               inc hl
 591+ 9EEF 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 592+ 9EF0 69               ld l,c
 593+ 9EF1 60               ld h,b
 594+ 9EF2 22 82 89         ld (Contador_de_mov_masticados),hl
 595+ 9EF5 C9               ret
 596+ 9EF6
 597+ 9EF6
# file closed: Patrones_de_mov.asm
1764  9EF6              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9EF6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9EF6              ;
   3+ 9EF6              ;	12/12/23
   4+ 9EF6              ;
   5+ 9EF6              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9EF6
   7+ 9EF6              ;	ADC HL,SP	LD (addr),SP
   8+ 9EF6              ;	ADD HL,SP	LD SP,(addr)
   9+ 9EF6              ;	ADD IX,SP	LD SP,nn
  10+ 9EF6              ; 	ADD IY,SP	LD SP,HL
  11+ 9EF6              ;				LD SP,IX
  12+ 9EF6              ;	DEC SP		LD SP,IY
  13+ 9EF6
  14+ 9EF6              ;	EX (SP),HL
  15+ 9EF6              ;	EX (SP),IX
  16+ 9EF6              ;	EX (SP),IY
  17+ 9EF6
  18+ 9EF6              ;	INC SP
  19+ 9EF6
  20+ 9EF6                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 B4 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 7E 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 80 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A A3 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A BC 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 84 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A C0 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A BA 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A A3 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 BC 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 84 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 C0 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B B4 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 BA 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B B4 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A BA 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 BA 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1765  8131
1766  8131              	SAVESNA "Pruebas.sna", START
1767  8131
1768  8131
1769  8131
1770  8131
# file closed: Banco_de_pruebas.asm
